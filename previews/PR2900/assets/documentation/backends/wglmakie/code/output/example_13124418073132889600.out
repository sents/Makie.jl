~~~
<div id="b215bbde-7edd-43f4-8cf5-55121f7c1916" data-jscall-id="subsession-application-dom">
  <div>
    <div>
      <script src="data:application/javascript;base64,// deno-fmt-ignore-file
// deno-lint-ignore-file
// This code was bundled using `deno bundle` and it's not recommended to edit it manually

var ca = "136", Gy = {
    LEFT: 0,
    MIDDLE: 1,
    RIGHT: 2,
    ROTATE: 0,
    DOLLY: 1,
    PAN: 2
}, Vy = {
    ROTATE: 0,
    PAN: 1,
    DOLLY_PAN: 2,
    DOLLY_ROTATE: 3
}, uu = 0, tl = 1, du = 2, Wy = 3, qy = 0, Hc = 1, fu = 2, ir = 3, Ai = 0, it = 1, Ci = 2, kc = 1, Xy = 2, vn = 0, sr = 1, nl = 2, il = 3, rl = 4, pu = 5, _i = 100, mu = 101, gu = 102, sl = 103, ol = 104, xu = 200, yu = 201, vu = 202, _u = 203, Gc = 204, Vc = 205, Mu = 206, bu = 207, wu = 208, Su = 209, Tu = 210, Eu = 0, Au = 1, Cu = 2, ea = 3, Lu = 4, Ru = 5, Pu = 6, Iu = 7, Vs = 0, Du = 1, Fu = 2, _n = 0, Nu = 1, Bu = 2, zu = 3, Uu = 4, Ou = 5, ha = 300, Bi = 301, zi = 302, Ds = 303, Fs = 304, Pr = 306, Ws = 307, Ns = 1e3, vt = 1001, Bs = 1002, rt = 1003, ta = 1004, Jy = 1004, na = 1005, Yy = 1005, tt = 1006, Wc = 1007, Zy = 1007, Ui = 1008, $y = 1008, rn = 1009, Hu = 1010, ku = 1011, cr = 1012, Gu = 1013, Ps = 1014, nn = 1015, kn = 1016, Vu = 1017, Wu = 1018, qu = 1019, Ti = 1020, Xu = 1021, Gn = 1022, ct = 1023, Ju = 1024, Yu = 1025, Vn = 1026, Li = 1027, Zu = 1028, $u = 1029, ju = 1030, Qu = 1031, Ku = 1032, ed = 1033, al = 33776, ll = 33777, cl = 33778, hl = 33779, ul = 35840, dl = 35841, fl = 35842, pl = 35843, td = 36196, ml = 37492, gl = 37496, nd = 37808, id = 37809, rd = 37810, sd = 37811, od = 37812, ad = 37813, ld = 37814, cd = 37815, hd = 37816, ud = 37817, dd = 37818, fd = 37819, pd = 37820, md = 37821, gd = 36492, xd = 37840, yd = 37841, vd = 37842, _d = 37843, Md = 37844, bd = 37845, wd = 37846, Sd = 37847, Td = 37848, Ed = 37849, Ad = 37850, Cd = 37851, Ld = 37852, Rd = 37853, Pd = 2200, Id = 2201, Dd = 2202, zs = 2300, Us = 2301, yo = 2302, Mi = 2400, bi = 2401, Os = 2402, ua = 2500, qc = 2501, Fd = 0, jy = 1, Qy = 2, Nt = 3e3, Oi = 3001, Nd = 3200, Bd = 3201, Hi = 0, zd = 1, Ky = 0, vo = 7680, e0 = 7681, t0 = 7682, n0 = 7683, i0 = 34055, r0 = 34056, s0 = 5386, o0 = 512, a0 = 513, l0 = 514, c0 = 515, h0 = 516, u0 = 517, d0 = 518, Ud = 519, hr = 35044, ur = 35048, f0 = 35040, p0 = 35045, m0 = 35049, g0 = 35041, x0 = 35046, y0 = 35050, v0 = 35042, _0 = "100", xl = "300 es", En = class {
    addEventListener(e, t) {
        this._listeners === void 0 && (this._listeners = {});
        let n = this._listeners;
        n[e] === void 0 && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t);
    }
    hasEventListener(e, t) {
        if (this._listeners === void 0) return !1;
        let n = this._listeners;
        return n[e] !== void 0 && n[e].indexOf(t) !== -1;
    }
    removeEventListener(e, t) {
        if (this._listeners === void 0) return;
        let i = this._listeners[e];
        if (i !== void 0) {
            let r = i.indexOf(t);
            r !== -1 && i.splice(r, 1);
        }
    }
    dispatchEvent(e) {
        if (this._listeners === void 0) return;
        let n = this._listeners[e.type];
        if (n !== void 0) {
            e.target = this;
            let i = n.slice(0);
            for(let r = 0, o = i.length; r < o; r++)i[r].call(this, e);
            e.target = null;
        }
    }
}, pt = [];
for(let s = 0; s < 256; s++)pt[s] = (s < 16 ? "0" : "") + s.toString(16);
var Vr = 1234567, Wn = Math.PI / 180, dr = 180 / Math.PI;
function Et() {
    let s = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0;
    return (pt[s & 255] + pt[s >> 8 & 255] + pt[s >> 16 & 255] + pt[s >> 24 & 255] + "-" + pt[e & 255] + pt[e >> 8 & 255] + "-" + pt[e >> 16 & 15 | 64] + pt[e >> 24 & 255] + "-" + pt[t & 63 | 128] + pt[t >> 8 & 255] + "-" + pt[t >> 16 & 255] + pt[t >> 24 & 255] + pt[n & 255] + pt[n >> 8 & 255] + pt[n >> 16 & 255] + pt[n >> 24 & 255]).toUpperCase();
}
function mt(s, e, t) {
    return Math.max(e, Math.min(t, s));
}
function da(s, e) {
    return (s % e + e) % e;
}
function Od(s, e, t, n, i) {
    return n + (s - e) * (i - n) / (t - e);
}
function Hd(s, e, t) {
    return s !== e ? (t - s) / (e - s) : 0;
}
function or(s, e, t) {
    return (1 - t) * s + t * e;
}
function kd(s, e, t, n) {
    return or(s, e, 1 - Math.exp(-t * n));
}
function Gd(s, e = 1) {
    return e - Math.abs(da(s, e * 2) - e);
}
function Vd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * (3 - 2 * s));
}
function Wd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * s * (s * (s * 6 - 15) + 10));
}
function qd(s, e) {
    return s + Math.floor(Math.random() * (e - s + 1));
}
function Xd(s, e) {
    return s + Math.random() * (e - s);
}
function Jd(s) {
    return s * (.5 - Math.random());
}
function Yd(s) {
    return s !== void 0 && (Vr = s % 2147483647), Vr = Vr * 16807 % 2147483647, (Vr - 1) / 2147483646;
}
function Zd(s) {
    return s * Wn;
}
function $d(s) {
    return s * dr;
}
function ia(s) {
    return (s & s - 1) === 0 && s !== 0;
}
function Xc(s) {
    return Math.pow(2, Math.ceil(Math.log(s) / Math.LN2));
}
function Jc(s) {
    return Math.pow(2, Math.floor(Math.log(s) / Math.LN2));
}
function jd(s, e, t, n, i) {
    let r = Math.cos, o = Math.sin, a = r(t / 2), l = o(t / 2), c = r((e + n) / 2), h = o((e + n) / 2), u = r((e - n) / 2), d = o((e - n) / 2), f = r((n - e) / 2), m = o((n - e) / 2);
    switch(i){
        case "XYX":
            s.set(a * h, l * u, l * d, a * c);
            break;
        case "YZY":
            s.set(l * d, a * h, l * u, a * c);
            break;
        case "ZXZ":
            s.set(l * u, l * d, a * h, a * c);
            break;
        case "XZX":
            s.set(a * h, l * m, l * f, a * c);
            break;
        case "YXY":
            s.set(l * f, a * h, l * m, a * c);
            break;
        case "ZYZ":
            s.set(l * m, l * f, a * h, a * c);
            break;
        default:
            console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
    }
}
var M0 = Object.freeze({
    __proto__: null,
    DEG2RAD: Wn,
    RAD2DEG: dr,
    generateUUID: Et,
    clamp: mt,
    euclideanModulo: da,
    mapLinear: Od,
    inverseLerp: Hd,
    lerp: or,
    damp: kd,
    pingpong: Gd,
    smoothstep: Vd,
    smootherstep: Wd,
    randInt: qd,
    randFloat: Xd,
    randFloatSpread: Jd,
    seededRandom: Yd,
    degToRad: Zd,
    radToDeg: $d,
    isPowerOfTwo: ia,
    ceilPowerOfTwo: Xc,
    floorPowerOfTwo: Jc,
    setQuaternionFromProperEuler: jd
}), X = class {
    constructor(e = 0, t = 0){
        this.x = e, this.y = t;
    }
    get width() {
        return this.x;
    }
    set width(e) {
        this.x = e;
    }
    get height() {
        return this.y;
    }
    set height(e) {
        this.y = e;
    }
    set(e, t) {
        return this.x = e, this.y = t, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this;
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = e.elements;
        return this.x = i[0] * t + i[3] * n + i[6], this.y = i[1] * t + i[4] * n + i[7], this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y;
    }
    cross(e) {
        return this.x * e.y - this.y * e.x;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    angle() {
        return Math.atan2(-this.y, -this.x) + Math.PI;
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y;
        return t * t + n * n;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this;
    }
    rotateAround(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = this.x - e.x, o = this.y - e.y;
        return this.x = r * n - o * i + e.x, this.y = r * i + o * n + e.y, this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y;
    }
};
X.prototype.isVector2 = !0;
var lt = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c) {
        let h = this.elements;
        return h[0] = e, h[1] = i, h[2] = a, h[3] = t, h[4] = r, h[5] = l, h[6] = n, h[7] = o, h[8] = c, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this;
    }
    setFromMatrix4(e) {
        let t = e.elements;
        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[3], l = n[6], c = n[1], h = n[4], u = n[7], d = n[2], f = n[5], m = n[8], x = i[0], v = i[3], g = i[6], p = i[1], _ = i[4], y = i[7], b = i[2], A = i[5], L = i[8];
        return r[0] = o * x + a * p + l * b, r[3] = o * v + a * _ + l * A, r[6] = o * g + a * y + l * L, r[1] = c * x + h * p + u * b, r[4] = c * v + h * _ + u * A, r[7] = c * g + h * y + u * L, r[2] = d * x + f * p + m * b, r[5] = d * v + f * _ + m * A, r[8] = d * g + f * y + m * L, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8];
        return t * o * h - t * a * c - n * r * h + n * a * l + i * r * c - i * o * l;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = h * o - a * c, d = a * l - h * r, f = c * r - o * l, m = t * u + n * d + i * f;
        if (m === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
        let x = 1 / m;
        return e[0] = u * x, e[1] = (i * c - h * n) * x, e[2] = (a * n - i * o) * x, e[3] = d * x, e[4] = (h * t - i * l) * x, e[5] = (i * r - a * t) * x, e[6] = f * x, e[7] = (n * l - c * t) * x, e[8] = (o * t - n * r) * x, this;
    }
    transpose() {
        let e, t = this.elements;
        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
    }
    getNormalMatrix(e) {
        return this.setFromMatrix4(e).invert().transpose();
    }
    transposeIntoArray(e) {
        let t = this.elements;
        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
    }
    setUvTransform(e, t, n, i, r, o, a) {
        let l = Math.cos(r), c = Math.sin(r);
        return this.set(n * l, n * c, -n * (l * o + c * a) + o + e, -i * c, i * l, -i * (-c * o + l * a) + a + t, 0, 0, 1), this;
    }
    scale(e, t) {
        let n = this.elements;
        return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this;
    }
    rotate(e) {
        let t = Math.cos(e), n = Math.sin(e), i = this.elements, r = i[0], o = i[3], a = i[6], l = i[1], c = i[4], h = i[7];
        return i[0] = t * r + n * l, i[3] = t * o + n * c, i[6] = t * a + n * h, i[1] = -n * r + t * l, i[4] = -n * o + t * c, i[7] = -n * a + t * h, this;
    }
    translate(e, t) {
        let n = this.elements;
        return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 9; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 9; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e;
    }
    clone() {
        return new this.constructor().fromArray(this.elements);
    }
};
lt.prototype.isMatrix3 = !0;
function Yc(s) {
    if (s.length === 0) return -1 / 0;
    let e = s[0];
    for(let t = 1, n = s.length; t < n; ++t)s[t] > e && (e = s[t]);
    return e;
}
var Qd = {
    Int8Array,
    Uint8Array,
    Uint8ClampedArray,
    Int16Array,
    Uint16Array,
    Int32Array,
    Uint32Array,
    Float32Array,
    Float64Array
};
function wi(s, e) {
    return new Qd[s](e);
}
function qs(s) {
    return document.createElementNS("http://www.w3.org/1999/xhtml", s);
}
var ti, Yn = class {
    static getDataURL(e) {
        if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
        let t;
        if (e instanceof HTMLCanvasElement) t = e;
        else {
            ti === void 0 && (ti = qs("canvas")), ti.width = e.width, ti.height = e.height;
            let n = ti.getContext("2d");
            e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = ti;
        }
        return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png");
    }
}, Kd = 0, ot = class extends En {
    constructor(e = ot.DEFAULT_IMAGE, t = ot.DEFAULT_MAPPING, n = vt, i = vt, r = tt, o = Ui, a = ct, l = rn, c = 1, h = Nt){
        super();
        Object.defineProperty(this, "id", {
            value: Kd++
        }), this.uuid = Et(), this.name = "", this.image = e, this.mipmaps = [], this.mapping = t, this.wrapS = n, this.wrapT = i, this.magFilter = r, this.minFilter = o, this.anisotropy = c, this.format = a, this.internalFormat = null, this.type = l, this.offset = new X(0, 0), this.repeat = new X(1, 1), this.center = new X(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new lt, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = h, this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = !1;
    }
    updateMatrix() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        if (!t && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
        let n = {
            metadata: {
                version: 4.5,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [
                this.repeat.x,
                this.repeat.y
            ],
            offset: [
                this.offset.x,
                this.offset.y
            ],
            center: [
                this.center.x,
                this.center.y
            ],
            rotation: this.rotation,
            wrap: [
                this.wrapS,
                this.wrapT
            ],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment
        };
        if (this.image !== void 0) {
            let i = this.image;
            if (i.uuid === void 0 && (i.uuid = Et()), !t && e.images[i.uuid] === void 0) {
                let r;
                if (Array.isArray(i)) {
                    r = [];
                    for(let o = 0, a = i.length; o < a; o++)i[o].isDataTexture ? r.push(_o(i[o].image)) : r.push(_o(i[o]));
                } else r = _o(i);
                e.images[i.uuid] = {
                    uuid: i.uuid,
                    url: r
                };
            }
            n.image = i.uuid;
        }
        return JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData), t || (e.textures[this.uuid] = n), n;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    transformUv(e) {
        if (this.mapping !== ha) return e;
        if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch(this.wrapS){
            case Ns:
                e.x = e.x - Math.floor(e.x);
                break;
            case vt:
                e.x = e.x < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
                break;
        }
        if (e.y < 0 || e.y > 1) switch(this.wrapT){
            case Ns:
                e.y = e.y - Math.floor(e.y);
                break;
            case vt:
                e.y = e.y < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                break;
        }
        return this.flipY && (e.y = 1 - e.y), e;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
ot.DEFAULT_IMAGE = void 0;
ot.DEFAULT_MAPPING = ha;
ot.prototype.isTexture = !0;
function _o(s) {
    return typeof HTMLImageElement < "u" && s instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && s instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && s instanceof ImageBitmap ? Yn.getDataURL(s) : s.data ? {
        data: Array.prototype.slice.call(s.data),
        width: s.width,
        height: s.height,
        type: s.data.constructor.name
    } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
var Ve = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this.x = e, this.y = t, this.z = n, this.w = i;
    }
    get width() {
        return this.z;
    }
    set width(e) {
        this.z = e;
    }
    get height() {
        return this.w;
    }
    set height(e) {
        this.w = e;
    }
    set(e, t, n, i) {
        return this.x = e, this.y = t, this.z = n, this.w = i, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this.w = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setW(e) {
        return this.w = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z, this.w);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this.w += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = this.w, o = e.elements;
        return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r, this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r, this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r, this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    setAxisAngleFromQuaternion(e) {
        this.w = 2 * Math.acos(e.w);
        let t = Math.sqrt(1 - e.w * e.w);
        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
    }
    setAxisAngleFromRotationMatrix(e) {
        let t, n, i, r, l = e.elements, c = l[0], h = l[4], u = l[8], d = l[1], f = l[5], m = l[9], x = l[2], v = l[6], g = l[10];
        if (Math.abs(h - d) < .01 && Math.abs(u - x) < .01 && Math.abs(m - v) < .01) {
            if (Math.abs(h + d) < .1 && Math.abs(u + x) < .1 && Math.abs(m + v) < .1 && Math.abs(c + f + g - 3) < .1) return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            let _ = (c + 1) / 2, y = (f + 1) / 2, b = (g + 1) / 2, A = (h + d) / 4, L = (u + x) / 4, I = (m + v) / 4;
            return _ > y && _ > b ? _ < .01 ? (n = 0, i = .707106781, r = .707106781) : (n = Math.sqrt(_), i = A / n, r = L / n) : y > b ? y < .01 ? (n = .707106781, i = 0, r = .707106781) : (i = Math.sqrt(y), n = A / i, r = I / i) : b < .01 ? (n = .707106781, i = .707106781, r = 0) : (r = Math.sqrt(b), n = L / r, i = I / r), this.set(n, i, r, t), this;
        }
        let p = Math.sqrt((v - m) * (v - m) + (u - x) * (u - x) + (d - h) * (d - h));
        return Math.abs(p) < .001 && (p = 1), this.x = (v - m) / p, this.y = (u - x) / p, this.z = (d - h) / p, this.w = Math.acos((c + f + g - 1) / 2), this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z, yield this.w;
    }
};
Ve.prototype.isVector4 = !0;
var At = class extends En {
    constructor(e, t, n = {}){
        super();
        this.width = e, this.height = t, this.depth = 1, this.scissor = new Ve(0, 0, e, t), this.scissorTest = !1, this.viewport = new Ve(0, 0, e, t), this.texture = new ot(void 0, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.isRenderTargetTexture = !0, this.texture.image = {
            width: e,
            height: t,
            depth: 1
        }, this.texture.generateMipmaps = n.generateMipmaps !== void 0 ? n.generateMipmaps : !1, this.texture.internalFormat = n.internalFormat !== void 0 ? n.internalFormat : null, this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : tt, this.depthBuffer = n.depthBuffer !== void 0 ? n.depthBuffer : !0, this.stencilBuffer = n.stencilBuffer !== void 0 ? n.stencilBuffer : !1, this.depthTexture = n.depthTexture !== void 0 ? n.depthTexture : null;
    }
    setTexture(e) {
        e.image = {
            width: this.width,
            height: this.height,
            depth: this.depth
        }, this.texture = e;
    }
    setSize(e, t, n = 1) {
        (this.width !== e || this.height !== t || this.depth !== n) && (this.width = e, this.height = t, this.depth = n, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.image = {
            ...this.texture.image
        }, this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
At.prototype.isWebGLRenderTarget = !0;
var Zc = class extends At {
    constructor(e, t, n){
        super(e, t);
        let i = this.texture;
        this.texture = [];
        for(let r = 0; r < n; r++)this.texture[r] = i.clone();
    }
    setSize(e, t, n = 1) {
        if (this.width !== e || this.height !== t || this.depth !== n) {
            this.width = e, this.height = t, this.depth = n;
            for(let i = 0, r = this.texture.length; i < r; i++)this.texture[i].image.width = e, this.texture[i].image.height = t, this.texture[i].image.depth = n;
            this.dispose();
        }
        return this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t), this;
    }
    copy(e) {
        this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.set(0, 0, this.width, this.height), this.scissor.set(0, 0, this.width, this.height), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this.texture.length = 0;
        for(let t = 0, n = e.texture.length; t < n; t++)this.texture[t] = e.texture[t].clone();
        return this;
    }
};
Zc.prototype.isWebGLMultipleRenderTargets = !0;
var Xs = class extends At {
    constructor(e, t, n = {}){
        super(e, t, n);
        this.samples = 4, this.ignoreDepthForMultisampleCopy = n.ignoreDepth !== void 0 ? n.ignoreDepth : !0, this.useRenderToTexture = n.useRenderToTexture !== void 0 ? n.useRenderToTexture : !1, this.useRenderbuffer = this.useRenderToTexture === !1;
    }
    copy(e) {
        return super.copy.call(this, e), this.samples = e.samples, this.useRenderToTexture = e.useRenderToTexture, this.useRenderbuffer = e.useRenderbuffer, this;
    }
};
Xs.prototype.isWebGLMultisampleRenderTarget = !0;
var gt = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this._x = e, this._y = t, this._z = n, this._w = i;
    }
    static slerp(e, t, n, i) {
        return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."), n.slerpQuaternions(e, t, i);
    }
    static slerpFlat(e, t, n, i, r, o, a) {
        let l = n[i + 0], c = n[i + 1], h = n[i + 2], u = n[i + 3], d = r[o + 0], f = r[o + 1], m = r[o + 2], x = r[o + 3];
        if (a === 0) {
            e[t + 0] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
            return;
        }
        if (a === 1) {
            e[t + 0] = d, e[t + 1] = f, e[t + 2] = m, e[t + 3] = x;
            return;
        }
        if (u !== x || l !== d || c !== f || h !== m) {
            let v = 1 - a, g = l * d + c * f + h * m + u * x, p = g >= 0 ? 1 : -1, _ = 1 - g * g;
            if (_ > Number.EPSILON) {
                let b = Math.sqrt(_), A = Math.atan2(b, g * p);
                v = Math.sin(v * A) / b, a = Math.sin(a * A) / b;
            }
            let y = a * p;
            if (l = l * v + d * y, c = c * v + f * y, h = h * v + m * y, u = u * v + x * y, v === 1 - a) {
                let b = 1 / Math.sqrt(l * l + c * c + h * h + u * u);
                l *= b, c *= b, h *= b, u *= b;
            }
        }
        e[t] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
    }
    static multiplyQuaternionsFlat(e, t, n, i, r, o) {
        let a = n[i], l = n[i + 1], c = n[i + 2], h = n[i + 3], u = r[o], d = r[o + 1], f = r[o + 2], m = r[o + 3];
        return e[t] = a * m + h * u + l * f - c * d, e[t + 1] = l * m + h * d + c * u - a * f, e[t + 2] = c * m + h * f + a * d - l * u, e[t + 3] = h * m - a * u - l * d - c * f, e;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get w() {
        return this._w;
    }
    set w(e) {
        this._w = e, this._onChangeCallback();
    }
    set(e, t, n, i) {
        return this._x = e, this._y = t, this._z = n, this._w = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._w);
    }
    copy(e) {
        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
    }
    setFromEuler(e, t) {
        if (!(e && e.isEuler)) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        let n = e._x, i = e._y, r = e._z, o = e._order, a = Math.cos, l = Math.sin, c = a(n / 2), h = a(i / 2), u = a(r / 2), d = l(n / 2), f = l(i / 2), m = l(r / 2);
        switch(o){
            case "XYZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "YXZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "ZXY":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "ZYX":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "YZX":
                this._x = d * h * u + c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "XZY":
                this._x = d * h * u - c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u + d * f * m;
                break;
            default:
                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o);
        }
        return t !== !1 && this._onChangeCallback(), this;
    }
    setFromAxisAngle(e, t) {
        let n = t / 2, i = Math.sin(n);
        return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e) {
        let t = e.elements, n = t[0], i = t[4], r = t[8], o = t[1], a = t[5], l = t[9], c = t[2], h = t[6], u = t[10], d = n + a + u;
        if (d > 0) {
            let f = .5 / Math.sqrt(d + 1);
            this._w = .25 / f, this._x = (h - l) * f, this._y = (r - c) * f, this._z = (o - i) * f;
        } else if (n > a && n > u) {
            let f = 2 * Math.sqrt(1 + n - a - u);
            this._w = (h - l) / f, this._x = .25 * f, this._y = (i + o) / f, this._z = (r + c) / f;
        } else if (a > u) {
            let f = 2 * Math.sqrt(1 + a - n - u);
            this._w = (r - c) / f, this._x = (i + o) / f, this._y = .25 * f, this._z = (l + h) / f;
        } else {
            let f = 2 * Math.sqrt(1 + u - n - a);
            this._w = (o - i) / f, this._x = (r + c) / f, this._y = (l + h) / f, this._z = .25 * f;
        }
        return this._onChangeCallback(), this;
    }
    setFromUnitVectors(e, t) {
        let n = e.dot(t) + 1;
        return n < Number.EPSILON ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize();
    }
    angleTo(e) {
        return 2 * Math.acos(Math.abs(mt(this.dot(e), -1, 1)));
    }
    rotateTowards(e, t) {
        let n = this.angleTo(e);
        if (n === 0) return this;
        let i = Math.min(1, t / n);
        return this.slerp(e, i), this;
    }
    identity() {
        return this.set(0, 0, 0, 1);
    }
    invert() {
        return this.conjugate();
    }
    conjugate() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
    }
    dot(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
    }
    lengthSq() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    }
    length() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    }
    normalize() {
        let e = this.length();
        return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);
    }
    premultiply(e) {
        return this.multiplyQuaternions(e, this);
    }
    multiplyQuaternions(e, t) {
        let n = e._x, i = e._y, r = e._z, o = e._w, a = t._x, l = t._y, c = t._z, h = t._w;
        return this._x = n * h + o * a + i * c - r * l, this._y = i * h + o * l + r * a - n * c, this._z = r * h + o * c + n * l - i * a, this._w = o * h - n * a - i * l - r * c, this._onChangeCallback(), this;
    }
    slerp(e, t) {
        if (t === 0) return this;
        if (t === 1) return this.copy(e);
        let n = this._x, i = this._y, r = this._z, o = this._w, a = o * e._w + n * e._x + i * e._y + r * e._z;
        if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = n, this._y = i, this._z = r, this;
        let l = 1 - a * a;
        if (l <= Number.EPSILON) {
            let f = 1 - t;
            return this._w = f * o + t * this._w, this._x = f * n + t * this._x, this._y = f * i + t * this._y, this._z = f * r + t * this._z, this.normalize(), this._onChangeCallback(), this;
        }
        let c = Math.sqrt(l), h = Math.atan2(c, a), u = Math.sin((1 - t) * h) / c, d = Math.sin(t * h) / c;
        return this._w = o * u + this._w * d, this._x = n * u + this._x * d, this._y = i * u + this._y * d, this._z = r * u + this._z * d, this._onChangeCallback(), this;
    }
    slerpQuaternions(e, t, n) {
        this.copy(e).slerp(t, n);
    }
    random() {
        let e = Math.random(), t = Math.sqrt(1 - e), n = Math.sqrt(e), i = 2 * Math.PI * Math.random(), r = 2 * Math.PI * Math.random();
        return this.set(t * Math.cos(i), n * Math.sin(r), n * Math.cos(r), t * Math.sin(i));
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
    }
    fromArray(e, t = 0) {
        return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
    }
    fromBufferAttribute(e, t) {
        return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this;
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
gt.prototype.isQuaternion = !0;
var M = class {
    constructor(e = 0, t = 0, n = 0){
        this.x = e, this.y = t, this.z = n;
    }
    set(e, t, n) {
        return n === void 0 && (n = this.z), this.x = e, this.y = t, this.z = n, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this);
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this;
    }
    multiplyVectors(e, t) {
        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
    }
    applyEuler(e) {
        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(yl.setFromEuler(e));
    }
    applyAxisAngle(e, t) {
        return this.applyQuaternion(yl.setFromAxisAngle(e, t));
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this;
    }
    applyNormalMatrix(e) {
        return this.applyMatrix3(e).normalize();
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements, o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o, this;
    }
    applyQuaternion(e) {
        let t = this.x, n = this.y, i = this.z, r = e.x, o = e.y, a = e.z, l = e.w, c = l * t + o * i - a * n, h = l * n + a * t - r * i, u = l * i + r * n - o * t, d = -r * t - o * n - a * i;
        return this.x = c * l + d * -r + h * -a - u * -o, this.y = h * l + d * -o + u * -r - c * -a, this.z = u * l + d * -a + c * -o - h * -r, this;
    }
    project(e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
    }
    unproject(e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
    }
    transformDirection(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize();
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this;
    }
    cross(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e);
    }
    crossVectors(e, t) {
        let n = e.x, i = e.y, r = e.z, o = t.x, a = t.y, l = t.z;
        return this.x = i * l - r * a, this.y = r * o - n * l, this.z = n * a - i * o, this;
    }
    projectOnVector(e) {
        let t = e.lengthSq();
        if (t === 0) return this.set(0, 0, 0);
        let n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
    }
    projectOnPlane(e) {
        return Mo.copy(this).projectOnVector(e), this.sub(Mo);
    }
    reflect(e) {
        return this.sub(Mo.copy(e).multiplyScalar(2 * this.dot(e)));
    }
    angleTo(e) {
        let t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        let n = this.dot(e) / t;
        return Math.acos(mt(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y, i = this.z - e.z;
        return t * t + n * n + i * i;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
    }
    setFromSpherical(e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
    }
    setFromSphericalCoords(e, t, n) {
        let i = Math.sin(t) * e;
        return this.x = i * Math.sin(n), this.y = Math.cos(t) * e, this.z = i * Math.cos(n), this;
    }
    setFromCylindrical(e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
    }
    setFromCylindricalCoords(e, t, n) {
        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this;
    }
    setFromMatrixPosition(e) {
        let t = e.elements;
        return this.x = t[12], this.y = t[13], this.z = t[14], this;
    }
    setFromMatrixScale(e) {
        let t = this.setFromMatrixColumn(e, 0).length(), n = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
        return this.x = t, this.y = n, this.z = i, this;
    }
    setFromMatrixColumn(e, t) {
        return this.fromArray(e.elements, t * 4);
    }
    setFromMatrix3Column(e, t) {
        return this.fromArray(e.elements, t * 3);
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
    }
    randomDirection() {
        let e = (Math.random() - .5) * 2, t = Math.random() * Math.PI * 2, n = Math.sqrt(1 - e ** 2);
        return this.x = n * Math.cos(t), this.y = n * Math.sin(t), this.z = e, this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z;
    }
};
M.prototype.isVector3 = !0;
var Mo = new M, yl = new gt, Lt = class {
    constructor(e = new M(1 / 0, 1 / 0, 1 / 0), t = new M(-1 / 0, -1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromArray(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.length; l < c; l += 3){
            let h = e[l], u = e[l + 1], d = e[l + 2];
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromBufferAttribute(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.count; l < c; l++){
            let h = e.getX(l), u = e.getY(l), d = e.getZ(l);
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ji.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    setFromObject(e) {
        return this.makeEmpty(), this.expandByObject(e);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    expandByObject(e) {
        e.updateWorldMatrix(!1, !1);
        let t = e.geometry;
        t !== void 0 && (t.boundingBox === null && t.computeBoundingBox(), bo.copy(t.boundingBox), bo.applyMatrix4(e.matrixWorld), this.union(bo));
        let n = e.children;
        for(let i = 0, r = n.length; i < r; i++)this.expandByObject(n[i]);
        return this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
    }
    intersectsSphere(e) {
        return this.clampPoint(e.center, Ji), Ji.distanceToSquared(e.center) <= e.radius * e.radius;
    }
    intersectsPlane(e) {
        let t, n;
        return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant;
    }
    intersectsTriangle(e) {
        if (this.isEmpty()) return !1;
        this.getCenter(Yi), Wr.subVectors(this.max, Yi), ni.subVectors(e.a, Yi), ii.subVectors(e.b, Yi), ri.subVectors(e.c, Yi), un.subVectors(ii, ni), dn.subVectors(ri, ii), Pn.subVectors(ni, ri);
        let t = [
            0,
            -un.z,
            un.y,
            0,
            -dn.z,
            dn.y,
            0,
            -Pn.z,
            Pn.y,
            un.z,
            0,
            -un.x,
            dn.z,
            0,
            -dn.x,
            Pn.z,
            0,
            -Pn.x,
            -un.y,
            un.x,
            0,
            -dn.y,
            dn.x,
            0,
            -Pn.y,
            Pn.x,
            0
        ];
        return !wo(t, ni, ii, ri, Wr) || (t = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], !wo(t, ni, ii, ri, Wr)) ? !1 : (qr.crossVectors(un, dn), t = [
            qr.x,
            qr.y,
            qr.z
        ], wo(t, ni, ii, ri, Wr));
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ji.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    getBoundingSphere(e) {
        return this.getCenter(e.center), e.radius = this.getSize(Ji).length() * .5, e;
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    applyMatrix4(e) {
        return this.isEmpty() ? this : ($t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), $t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), $t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), $t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), $t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), $t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), $t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), $t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints($t), this);
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
Lt.prototype.isBox3 = !0;
var $t = [
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M
], Ji = new M, bo = new Lt, ni = new M, ii = new M, ri = new M, un = new M, dn = new M, Pn = new M, Yi = new M, Wr = new M, qr = new M, In = new M;
function wo(s, e, t, n, i) {
    for(let r = 0, o = s.length - 3; r <= o; r += 3){
        In.fromArray(s, r);
        let a = i.x * Math.abs(In.x) + i.y * Math.abs(In.y) + i.z * Math.abs(In.z), l = e.dot(In), c = t.dot(In), h = n.dot(In);
        if (Math.max(-Math.max(l, c, h), Math.min(l, c, h)) > a) return !1;
    }
    return !0;
}
var ef = new Lt, vl = new M, Xr = new M, So = new M, An = class {
    constructor(e = new M, t = -1){
        this.center = e, this.radius = t;
    }
    set(e, t) {
        return this.center.copy(e), this.radius = t, this;
    }
    setFromPoints(e, t) {
        let n = this.center;
        t !== void 0 ? n.copy(t) : ef.setFromPoints(e).getCenter(n);
        let i = 0;
        for(let r = 0, o = e.length; r < o; r++)i = Math.max(i, n.distanceToSquared(e[r]));
        return this.radius = Math.sqrt(i), this;
    }
    copy(e) {
        return this.center.copy(e.center), this.radius = e.radius, this;
    }
    isEmpty() {
        return this.radius < 0;
    }
    makeEmpty() {
        return this.center.set(0, 0, 0), this.radius = -1, this;
    }
    containsPoint(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
    }
    distanceToPoint(e) {
        return e.distanceTo(this.center) - this.radius;
    }
    intersectsSphere(e) {
        let t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
    }
    intersectsBox(e) {
        return e.intersectsSphere(this);
    }
    intersectsPlane(e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
    }
    clampPoint(e, t) {
        let n = this.center.distanceToSquared(e);
        return t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
    }
    getBoundingBox(e) {
        return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
    }
    applyMatrix4(e) {
        return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
    }
    translate(e) {
        return this.center.add(e), this;
    }
    expandByPoint(e) {
        So.subVectors(e, this.center);
        let t = So.lengthSq();
        if (t > this.radius * this.radius) {
            let n = Math.sqrt(t), i = (n - this.radius) * .5;
            this.center.add(So.multiplyScalar(i / n)), this.radius += i;
        }
        return this;
    }
    union(e) {
        return this.center.equals(e.center) === !0 ? Xr.set(0, 0, 1).multiplyScalar(e.radius) : Xr.subVectors(e.center, this.center).normalize().multiplyScalar(e.radius), this.expandByPoint(vl.copy(e.center).add(Xr)), this.expandByPoint(vl.copy(e.center).sub(Xr)), this;
    }
    equals(e) {
        return e.center.equals(this.center) && e.radius === this.radius;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, jt = new M, To = new M, Jr = new M, fn = new M, Eo = new M, Yr = new M, Ao = new M, Cn = class {
    constructor(e = new M, t = new M(0, 0, -1)){
        this.origin = e, this.direction = t;
    }
    set(e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
    }
    copy(e) {
        return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
    }
    at(e, t) {
        return t.copy(this.direction).multiplyScalar(e).add(this.origin);
    }
    lookAt(e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
    }
    recast(e) {
        return this.origin.copy(this.at(e, jt)), this;
    }
    closestPointToPoint(e, t) {
        t.subVectors(e, this.origin);
        let n = t.dot(this.direction);
        return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin);
    }
    distanceToPoint(e) {
        return Math.sqrt(this.distanceSqToPoint(e));
    }
    distanceSqToPoint(e) {
        let t = jt.subVectors(e, this.origin).dot(this.direction);
        return t < 0 ? this.origin.distanceToSquared(e) : (jt.copy(this.direction).multiplyScalar(t).add(this.origin), jt.distanceToSquared(e));
    }
    distanceSqToSegment(e, t, n, i) {
        To.copy(e).add(t).multiplyScalar(.5), Jr.copy(t).sub(e).normalize(), fn.copy(this.origin).sub(To);
        let r = e.distanceTo(t) * .5, o = -this.direction.dot(Jr), a = fn.dot(this.direction), l = -fn.dot(Jr), c = fn.lengthSq(), h = Math.abs(1 - o * o), u, d, f, m;
        if (h > 0) if (u = o * l - a, d = o * a - l, m = r * h, u >= 0) if (d >= -m) if (d <= m) {
            let x = 1 / h;
            u *= x, d *= x, f = u * (u + o * d + 2 * a) + d * (o * u + d + 2 * l) + c;
        } else d = r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d = -r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d <= -m ? (u = Math.max(0, -(-o * r + a)), d = u > 0 ? -r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c) : d <= m ? (u = 0, d = Math.min(Math.max(-r, -l), r), f = d * (d + 2 * l) + c) : (u = Math.max(0, -(o * r + a)), d = u > 0 ? r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c);
        else d = o > 0 ? -r : r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        return n && n.copy(this.direction).multiplyScalar(u).add(this.origin), i && i.copy(Jr).multiplyScalar(d).add(To), f;
    }
    intersectSphere(e, t) {
        jt.subVectors(e.center, this.origin);
        let n = jt.dot(this.direction), i = jt.dot(jt) - n * n, r = e.radius * e.radius;
        if (i > r) return null;
        let o = Math.sqrt(r - i), a = n - o, l = n + o;
        return a < 0 && l < 0 ? null : a < 0 ? this.at(l, t) : this.at(a, t);
    }
    intersectsSphere(e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
    }
    distanceToPlane(e) {
        let t = e.normal.dot(this.direction);
        if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
        let n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
    }
    intersectPlane(e, t) {
        let n = this.distanceToPlane(e);
        return n === null ? null : this.at(n, t);
    }
    intersectsPlane(e) {
        let t = e.distanceToPoint(this.origin);
        return t === 0 || e.normal.dot(this.direction) * t < 0;
    }
    intersectBox(e, t) {
        let n, i, r, o, a, l, c = 1 / this.direction.x, h = 1 / this.direction.y, u = 1 / this.direction.z, d = this.origin;
        return c >= 0 ? (n = (e.min.x - d.x) * c, i = (e.max.x - d.x) * c) : (n = (e.max.x - d.x) * c, i = (e.min.x - d.x) * c), h >= 0 ? (r = (e.min.y - d.y) * h, o = (e.max.y - d.y) * h) : (r = (e.max.y - d.y) * h, o = (e.min.y - d.y) * h), n > o || r > i || ((r > n || n !== n) && (n = r), (o < i || i !== i) && (i = o), u >= 0 ? (a = (e.min.z - d.z) * u, l = (e.max.z - d.z) * u) : (a = (e.max.z - d.z) * u, l = (e.min.z - d.z) * u), n > l || a > i) || ((a > n || n !== n) && (n = a), (l < i || i !== i) && (i = l), i < 0) ? null : this.at(n >= 0 ? n : i, t);
    }
    intersectsBox(e) {
        return this.intersectBox(e, jt) !== null;
    }
    intersectTriangle(e, t, n, i, r) {
        Eo.subVectors(t, e), Yr.subVectors(n, e), Ao.crossVectors(Eo, Yr);
        let o = this.direction.dot(Ao), a;
        if (o > 0) {
            if (i) return null;
            a = 1;
        } else if (o < 0) a = -1, o = -o;
        else return null;
        fn.subVectors(this.origin, e);
        let l = a * this.direction.dot(Yr.crossVectors(fn, Yr));
        if (l < 0) return null;
        let c = a * this.direction.dot(Eo.cross(fn));
        if (c < 0 || l + c > o) return null;
        let h = -a * fn.dot(Ao);
        return h < 0 ? null : this.at(h / o, r);
    }
    applyMatrix4(e) {
        return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
    }
    equals(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, pe = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c, h, u, d, f, m, x, v) {
        let g = this.elements;
        return g[0] = e, g[4] = t, g[8] = n, g[12] = i, g[1] = r, g[5] = o, g[9] = a, g[13] = l, g[2] = c, g[6] = h, g[10] = u, g[14] = d, g[3] = f, g[7] = m, g[11] = x, g[15] = v, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    clone() {
        return new pe().fromArray(this.elements);
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this;
    }
    copyPosition(e) {
        let t = this.elements, n = e.elements;
        return t[12] = n[12], t[13] = n[13], t[14] = n[14], this;
    }
    setFromMatrix3(e) {
        let t = e.elements;
        return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1), this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
    }
    makeBasis(e, t, n) {
        return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this;
    }
    extractRotation(e) {
        let t = this.elements, n = e.elements, i = 1 / si.setFromMatrixColumn(e, 0).length(), r = 1 / si.setFromMatrixColumn(e, 1).length(), o = 1 / si.setFromMatrixColumn(e, 2).length();
        return t[0] = n[0] * i, t[1] = n[1] * i, t[2] = n[2] * i, t[3] = 0, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromEuler(e) {
        e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        let t = this.elements, n = e.x, i = e.y, r = e.z, o = Math.cos(n), a = Math.sin(n), l = Math.cos(i), c = Math.sin(i), h = Math.cos(r), u = Math.sin(r);
        if (e.order === "XYZ") {
            let d = o * h, f = o * u, m = a * h, x = a * u;
            t[0] = l * h, t[4] = -l * u, t[8] = c, t[1] = f + m * c, t[5] = d - x * c, t[9] = -a * l, t[2] = x - d * c, t[6] = m + f * c, t[10] = o * l;
        } else if (e.order === "YXZ") {
            let d = l * h, f = l * u, m = c * h, x = c * u;
            t[0] = d + x * a, t[4] = m * a - f, t[8] = o * c, t[1] = o * u, t[5] = o * h, t[9] = -a, t[2] = f * a - m, t[6] = x + d * a, t[10] = o * l;
        } else if (e.order === "ZXY") {
            let d = l * h, f = l * u, m = c * h, x = c * u;
            t[0] = d - x * a, t[4] = -o * u, t[8] = m + f * a, t[1] = f + m * a, t[5] = o * h, t[9] = x - d * a, t[2] = -o * c, t[6] = a, t[10] = o * l;
        } else if (e.order === "ZYX") {
            let d = o * h, f = o * u, m = a * h, x = a * u;
            t[0] = l * h, t[4] = m * c - f, t[8] = d * c + x, t[1] = l * u, t[5] = x * c + d, t[9] = f * c - m, t[2] = -c, t[6] = a * l, t[10] = o * l;
        } else if (e.order === "YZX") {
            let d = o * l, f = o * c, m = a * l, x = a * c;
            t[0] = l * h, t[4] = x - d * u, t[8] = m * u + f, t[1] = u, t[5] = o * h, t[9] = -a * h, t[2] = -c * h, t[6] = f * u + m, t[10] = d - x * u;
        } else if (e.order === "XZY") {
            let d = o * l, f = o * c, m = a * l, x = a * c;
            t[0] = l * h, t[4] = -u, t[8] = c * h, t[1] = d * u + x, t[5] = o * h, t[9] = f * u - m, t[2] = m * u - f, t[6] = a * h, t[10] = x * u + d;
        }
        return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromQuaternion(e) {
        return this.compose(tf, e, nf);
    }
    lookAt(e, t, n) {
        let i = this.elements;
        return St.subVectors(e, t), St.lengthSq() === 0 && (St.z = 1), St.normalize(), pn.crossVectors(n, St), pn.lengthSq() === 0 && (Math.abs(n.z) === 1 ? St.x += 1e-4 : St.z += 1e-4, St.normalize(), pn.crossVectors(n, St)), pn.normalize(), Zr.crossVectors(St, pn), i[0] = pn.x, i[4] = Zr.x, i[8] = St.x, i[1] = pn.y, i[5] = Zr.y, i[9] = St.y, i[2] = pn.z, i[6] = Zr.z, i[10] = St.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[4], l = n[8], c = n[12], h = n[1], u = n[5], d = n[9], f = n[13], m = n[2], x = n[6], v = n[10], g = n[14], p = n[3], _ = n[7], y = n[11], b = n[15], A = i[0], L = i[4], I = i[8], k = i[12], B = i[1], P = i[5], w = i[9], E = i[13], D = i[2], U = i[6], F = i[10], O = i[14], ne = i[3], ce = i[7], V = i[11], W = i[15];
        return r[0] = o * A + a * B + l * D + c * ne, r[4] = o * L + a * P + l * U + c * ce, r[8] = o * I + a * w + l * F + c * V, r[12] = o * k + a * E + l * O + c * W, r[1] = h * A + u * B + d * D + f * ne, r[5] = h * L + u * P + d * U + f * ce, r[9] = h * I + u * w + d * F + f * V, r[13] = h * k + u * E + d * O + f * W, r[2] = m * A + x * B + v * D + g * ne, r[6] = m * L + x * P + v * U + g * ce, r[10] = m * I + x * w + v * F + g * V, r[14] = m * k + x * E + v * O + g * W, r[3] = p * A + _ * B + y * D + b * ne, r[7] = p * L + _ * P + y * U + b * ce, r[11] = p * I + _ * w + y * F + b * V, r[15] = p * k + _ * E + y * O + b * W, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[4], i = e[8], r = e[12], o = e[1], a = e[5], l = e[9], c = e[13], h = e[2], u = e[6], d = e[10], f = e[14], m = e[3], x = e[7], v = e[11], g = e[15];
        return m * (+r * l * u - i * c * u - r * a * d + n * c * d + i * a * f - n * l * f) + x * (+t * l * f - t * c * d + r * o * d - i * o * f + i * c * h - r * l * h) + v * (+t * c * u - t * a * f - r * o * u + n * o * f + r * a * h - n * c * h) + g * (-i * a * h - t * l * u + t * a * d + i * o * u - n * o * d + n * l * h);
    }
    transpose() {
        let e = this.elements, t;
        return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this;
    }
    setPosition(e, t, n) {
        let i = this.elements;
        return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n), this;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = e[9], d = e[10], f = e[11], m = e[12], x = e[13], v = e[14], g = e[15], p = u * v * c - x * d * c + x * l * f - a * v * f - u * l * g + a * d * g, _ = m * d * c - h * v * c - m * l * f + o * v * f + h * l * g - o * d * g, y = h * x * c - m * u * c + m * a * f - o * x * f - h * a * g + o * u * g, b = m * u * l - h * x * l - m * a * d + o * x * d + h * a * v - o * u * v, A = t * p + n * _ + i * y + r * b;
        if (A === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        let L = 1 / A;
        return e[0] = p * L, e[1] = (x * d * r - u * v * r - x * i * f + n * v * f + u * i * g - n * d * g) * L, e[2] = (a * v * r - x * l * r + x * i * c - n * v * c - a * i * g + n * l * g) * L, e[3] = (u * l * r - a * d * r - u * i * c + n * d * c + a * i * f - n * l * f) * L, e[4] = _ * L, e[5] = (h * v * r - m * d * r + m * i * f - t * v * f - h * i * g + t * d * g) * L, e[6] = (m * l * r - o * v * r - m * i * c + t * v * c + o * i * g - t * l * g) * L, e[7] = (o * d * r - h * l * r + h * i * c - t * d * c - o * i * f + t * l * f) * L, e[8] = y * L, e[9] = (m * u * r - h * x * r - m * n * f + t * x * f + h * n * g - t * u * g) * L, e[10] = (o * x * r - m * a * r + m * n * c - t * x * c - o * n * g + t * a * g) * L, e[11] = (h * a * r - o * u * r - h * n * c + t * u * c + o * n * f - t * a * f) * L, e[12] = b * L, e[13] = (h * x * i - m * u * i + m * n * d - t * x * d - h * n * v + t * u * v) * L, e[14] = (m * a * i - o * x * i - m * n * l + t * x * l + o * n * v - t * a * v) * L, e[15] = (o * u * i - h * a * i + h * n * l - t * u * l - o * n * d + t * a * d) * L, this;
    }
    scale(e) {
        let t = this.elements, n = e.x, i = e.y, r = e.z;
        return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this;
    }
    getMaxScaleOnAxis() {
        let e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
    }
    makeTranslation(e, t, n) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
    }
    makeRotationX(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationY(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationZ(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    makeRotationAxis(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = 1 - n, o = e.x, a = e.y, l = e.z, c = r * o, h = r * a;
        return this.set(c * o + n, c * a - i * l, c * l + i * a, 0, c * a + i * l, h * a + n, h * l - i * o, 0, c * l - i * a, h * l + i * o, r * l * l + n, 0, 0, 0, 0, 1), this;
    }
    makeScale(e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
    }
    makeShear(e, t, n, i, r, o) {
        return this.set(1, n, r, 0, e, 1, o, 0, t, i, 1, 0, 0, 0, 0, 1), this;
    }
    compose(e, t, n) {
        let i = this.elements, r = t._x, o = t._y, a = t._z, l = t._w, c = r + r, h = o + o, u = a + a, d = r * c, f = r * h, m = r * u, x = o * h, v = o * u, g = a * u, p = l * c, _ = l * h, y = l * u, b = n.x, A = n.y, L = n.z;
        return i[0] = (1 - (x + g)) * b, i[1] = (f + y) * b, i[2] = (m - _) * b, i[3] = 0, i[4] = (f - y) * A, i[5] = (1 - (d + g)) * A, i[6] = (v + p) * A, i[7] = 0, i[8] = (m + _) * L, i[9] = (v - p) * L, i[10] = (1 - (d + x)) * L, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
    }
    decompose(e, t, n) {
        let i = this.elements, r = si.set(i[0], i[1], i[2]).length(), o = si.set(i[4], i[5], i[6]).length(), a = si.set(i[8], i[9], i[10]).length();
        this.determinant() < 0 && (r = -r), e.x = i[12], e.y = i[13], e.z = i[14], It.copy(this);
        let c = 1 / r, h = 1 / o, u = 1 / a;
        return It.elements[0] *= c, It.elements[1] *= c, It.elements[2] *= c, It.elements[4] *= h, It.elements[5] *= h, It.elements[6] *= h, It.elements[8] *= u, It.elements[9] *= u, It.elements[10] *= u, t.setFromRotationMatrix(It), n.x = r, n.y = o, n.z = a, this;
    }
    makePerspective(e, t, n, i, r, o) {
        o === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        let a = this.elements, l = 2 * r / (t - e), c = 2 * r / (n - i), h = (t + e) / (t - e), u = (n + i) / (n - i), d = -(o + r) / (o - r), f = -2 * o * r / (o - r);
        return a[0] = l, a[4] = 0, a[8] = h, a[12] = 0, a[1] = 0, a[5] = c, a[9] = u, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = d, a[14] = f, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this;
    }
    makeOrthographic(e, t, n, i, r, o) {
        let a = this.elements, l = 1 / (t - e), c = 1 / (n - i), h = 1 / (o - r), u = (t + e) * l, d = (n + i) * c, f = (o + r) * h;
        return a[0] = 2 * l, a[4] = 0, a[8] = 0, a[12] = -u, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -d, a[2] = 0, a[6] = 0, a[10] = -2 * h, a[14] = -f, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 16; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 16; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e;
    }
};
pe.prototype.isMatrix4 = !0;
var si = new M, It = new pe, tf = new M(0, 0, 0), nf = new M(1, 1, 1), pn = new M, Zr = new M, St = new M, _l = new pe, Ml = new gt, Zn = class {
    constructor(e = 0, t = 0, n = 0, i = Zn.DefaultOrder){
        this._x = e, this._y = t, this._z = n, this._order = i;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get order() {
        return this._order;
    }
    set order(e) {
        this._order = e, this._onChangeCallback();
    }
    set(e, t, n, i = this._order) {
        return this._x = e, this._y = t, this._z = n, this._order = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._order);
    }
    copy(e) {
        return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e, t = this._order, n = !0) {
        let i = e.elements, r = i[0], o = i[4], a = i[8], l = i[1], c = i[5], h = i[9], u = i[2], d = i[6], f = i[10];
        switch(t){
            case "XYZ":
                this._y = Math.asin(mt(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(-h, f), this._z = Math.atan2(-o, r)) : (this._x = Math.atan2(d, c), this._z = 0);
                break;
            case "YXZ":
                this._x = Math.asin(-mt(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(a, f), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-u, r), this._z = 0);
                break;
            case "ZXY":
                this._x = Math.asin(mt(d, -1, 1)), Math.abs(d) < .9999999 ? (this._y = Math.atan2(-u, f), this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(l, r));
                break;
            case "ZYX":
                this._y = Math.asin(-mt(u, -1, 1)), Math.abs(u) < .9999999 ? (this._x = Math.atan2(d, f), this._z = Math.atan2(l, r)) : (this._x = 0, this._z = Math.atan2(-o, c));
                break;
            case "YZX":
                this._z = Math.asin(mt(l, -1, 1)), Math.abs(l) < .9999999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-u, r)) : (this._x = 0, this._y = Math.atan2(a, f));
                break;
            case "XZY":
                this._z = Math.asin(-mt(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(a, r)) : (this._x = Math.atan2(-h, f), this._y = 0);
                break;
            default:
                console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t);
        }
        return this._order = t, n === !0 && this._onChangeCallback(), this;
    }
    setFromQuaternion(e, t, n) {
        return _l.makeRotationFromQuaternion(e), this.setFromRotationMatrix(_l, t, n);
    }
    setFromVector3(e, t = this._order) {
        return this.set(e.x, e.y, e.z, t);
    }
    reorder(e) {
        return Ml.setFromEuler(this), this.setFromQuaternion(Ml, e);
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
    }
    fromArray(e) {
        return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
    }
    toVector3(e) {
        return e ? e.set(this._x, this._y, this._z) : new M(this._x, this._y, this._z);
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
Zn.prototype.isEuler = !0;
Zn.DefaultOrder = "XYZ";
Zn.RotationOrders = [
    "XYZ",
    "YZX",
    "ZXY",
    "XZY",
    "YXZ",
    "ZYX"
];
var Js = class {
    constructor(){
        this.mask = 1;
    }
    set(e) {
        this.mask = (1 << e | 0) >>> 0;
    }
    enable(e) {
        this.mask |= 1 << e | 0;
    }
    enableAll() {
        this.mask = -1;
    }
    toggle(e) {
        this.mask ^= 1 << e | 0;
    }
    disable(e) {
        this.mask &= ~(1 << e | 0);
    }
    disableAll() {
        this.mask = 0;
    }
    test(e) {
        return (this.mask & e.mask) !== 0;
    }
    isEnabled(e) {
        return (this.mask & (1 << e | 0)) !== 0;
    }
}, rf = 0, bl = new M, oi = new gt, Qt = new pe, $r = new M, Zi = new M, sf = new M, of = new gt, wl = new M(1, 0, 0), Sl = new M(0, 1, 0), Tl = new M(0, 0, 1), af = {
    type: "added"
}, El = {
    type: "removed"
}, Ne = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: rf++
        }), this.uuid = Et(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Ne.DefaultUp.clone();
        let e = new M, t = new Zn, n = new gt, i = new M(1, 1, 1);
        function r() {
            n.setFromEuler(t, !1);
        }
        function o() {
            t.setFromQuaternion(n, void 0, !1);
        }
        t._onChange(r), n._onChange(o), Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: i
            },
            modelViewMatrix: {
                value: new pe
            },
            normalMatrix: {
                value: new lt
            }
        }), this.matrix = new pe, this.matrixWorld = new pe, this.matrixAutoUpdate = Ne.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new Js, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
    }
    onBeforeRender() {}
    onAfterRender() {}
    applyMatrix4(e) {
        this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
    }
    applyQuaternion(e) {
        return this.quaternion.premultiply(e), this;
    }
    setRotationFromAxisAngle(e, t) {
        this.quaternion.setFromAxisAngle(e, t);
    }
    setRotationFromEuler(e) {
        this.quaternion.setFromEuler(e, !0);
    }
    setRotationFromMatrix(e) {
        this.quaternion.setFromRotationMatrix(e);
    }
    setRotationFromQuaternion(e) {
        this.quaternion.copy(e);
    }
    rotateOnAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.multiply(oi), this;
    }
    rotateOnWorldAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.premultiply(oi), this;
    }
    rotateX(e) {
        return this.rotateOnAxis(wl, e);
    }
    rotateY(e) {
        return this.rotateOnAxis(Sl, e);
    }
    rotateZ(e) {
        return this.rotateOnAxis(Tl, e);
    }
    translateOnAxis(e, t) {
        return bl.copy(e).applyQuaternion(this.quaternion), this.position.add(bl.multiplyScalar(t)), this;
    }
    translateX(e) {
        return this.translateOnAxis(wl, e);
    }
    translateY(e) {
        return this.translateOnAxis(Sl, e);
    }
    translateZ(e) {
        return this.translateOnAxis(Tl, e);
    }
    localToWorld(e) {
        return e.applyMatrix4(this.matrixWorld);
    }
    worldToLocal(e) {
        return e.applyMatrix4(Qt.copy(this.matrixWorld).invert());
    }
    lookAt(e, t, n) {
        e.isVector3 ? $r.copy(e) : $r.set(e, t, n);
        let i = this.parent;
        this.updateWorldMatrix(!0, !1), Zi.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Qt.lookAt(Zi, $r, this.up) : Qt.lookAt($r, Zi, this.up), this.quaternion.setFromRotationMatrix(Qt), i && (Qt.extractRotation(i.matrixWorld), oi.setFromRotationMatrix(Qt), this.quaternion.premultiply(oi.invert()));
    }
    add(e) {
        if (arguments.length > 1) {
            for(let t = 0; t < arguments.length; t++)this.add(arguments[t]);
            return this;
        }
        return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.parent !== null && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(af)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
    }
    remove(e) {
        if (arguments.length > 1) {
            for(let n = 0; n < arguments.length; n++)this.remove(arguments[n]);
            return this;
        }
        let t = this.children.indexOf(e);
        return t !== -1 && (e.parent = null, this.children.splice(t, 1), e.dispatchEvent(El)), this;
    }
    removeFromParent() {
        let e = this.parent;
        return e !== null && e.remove(this), this;
    }
    clear() {
        for(let e = 0; e < this.children.length; e++){
            let t = this.children[e];
            t.parent = null, t.dispatchEvent(El);
        }
        return this.children.length = 0, this;
    }
    attach(e) {
        return this.updateWorldMatrix(!0, !1), Qt.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), Qt.multiply(e.parent.matrixWorld)), e.applyMatrix4(Qt), this.add(e), e.updateWorldMatrix(!1, !0), this;
    }
    getObjectById(e) {
        return this.getObjectByProperty("id", e);
    }
    getObjectByName(e) {
        return this.getObjectByProperty("name", e);
    }
    getObjectByProperty(e, t) {
        if (this[e] === t) return this;
        for(let n = 0, i = this.children.length; n < i; n++){
            let o = this.children[n].getObjectByProperty(e, t);
            if (o !== void 0) return o;
        }
    }
    getWorldPosition(e) {
        return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
    }
    getWorldQuaternion(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, e, sf), e;
    }
    getWorldScale(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, of, e), e;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(t[8], t[9], t[10]).normalize();
    }
    raycast() {}
    traverse(e) {
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverse(e);
    }
    traverseVisible(e) {
        if (this.visible === !1) return;
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverseVisible(e);
    }
    traverseAncestors(e) {
        let t = this.parent;
        t !== null && (e(t), t.traverseAncestors(e));
    }
    updateMatrix() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
    }
    updateMatrixWorld(e) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].updateMatrixWorld(e);
    }
    updateWorldMatrix(e, t) {
        let n = this.parent;
        if (e === !0 && n !== null && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), t === !0) {
            let i = this.children;
            for(let r = 0, o = i.length; r < o; r++)i[r].updateWorldMatrix(!1, !0);
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string", n = {};
        t && (e = {
            geometries: {},
            materials: {},
            textures: {},
            images: {},
            shapes: {},
            skeletons: {},
            animations: {}
        }, n.metadata = {
            version: 4.5,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        let i = {};
        i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON()));
        function r(a, l) {
            return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
        }
        if (this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && (i.environment = this.environment.toJSON(e).uuid);
        else if (this.isMesh || this.isLine || this.isPoints) {
            i.geometry = r(e.geometries, this.geometry);
            let a = this.geometry.parameters;
            if (a !== void 0 && a.shapes !== void 0) {
                let l = a.shapes;
                if (Array.isArray(l)) for(let c = 0, h = l.length; c < h; c++){
                    let u = l[c];
                    r(e.shapes, u);
                }
                else r(e.shapes, l);
            }
        }
        if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (r(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
            let a = [];
            for(let l = 0, c = this.material.length; l < c; l++)a.push(r(e.materials, this.material[l]));
            i.material = a;
        } else i.material = r(e.materials, this.material);
        if (this.children.length > 0) {
            i.children = [];
            for(let a = 0; a < this.children.length; a++)i.children.push(this.children[a].toJSON(e).object);
        }
        if (this.animations.length > 0) {
            i.animations = [];
            for(let a = 0; a < this.animations.length; a++){
                let l = this.animations[a];
                i.animations.push(r(e.animations, l));
            }
        }
        if (t) {
            let a = o(e.geometries), l = o(e.materials), c = o(e.textures), h = o(e.images), u = o(e.shapes), d = o(e.skeletons), f = o(e.animations);
            a.length > 0 && (n.geometries = a), l.length > 0 && (n.materials = l), c.length > 0 && (n.textures = c), h.length > 0 && (n.images = h), u.length > 0 && (n.shapes = u), d.length > 0 && (n.skeletons = d), f.length > 0 && (n.animations = f);
        }
        return n.object = i, n;
        function o(a) {
            let l = [];
            for(let c in a){
                let h = a[c];
                delete h.metadata, l.push(h);
            }
            return l;
        }
    }
    clone(e) {
        return new this.constructor().copy(this, e);
    }
    copy(e, t = !0) {
        if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), t === !0) for(let n = 0; n < e.children.length; n++){
            let i = e.children[n];
            this.add(i.clone());
        }
        return this;
    }
};
Ne.DefaultUp = new M(0, 1, 0);
Ne.DefaultMatrixAutoUpdate = !0;
Ne.prototype.isObject3D = !0;
var Dt = new M, Kt = new M, Co = new M, en = new M, ai = new M, li = new M, Al = new M, Lo = new M, Ro = new M, Po = new M, nt = class {
    constructor(e = new M, t = new M, n = new M){
        this.a = e, this.b = t, this.c = n;
    }
    static getNormal(e, t, n, i) {
        i.subVectors(n, t), Dt.subVectors(e, t), i.cross(Dt);
        let r = i.lengthSq();
        return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
    }
    static getBarycoord(e, t, n, i, r) {
        Dt.subVectors(i, t), Kt.subVectors(n, t), Co.subVectors(e, t);
        let o = Dt.dot(Dt), a = Dt.dot(Kt), l = Dt.dot(Co), c = Kt.dot(Kt), h = Kt.dot(Co), u = o * c - a * a;
        if (u === 0) return r.set(-2, -1, -1);
        let d = 1 / u, f = (c * l - a * h) * d, m = (o * h - a * l) * d;
        return r.set(1 - f - m, m, f);
    }
    static containsPoint(e, t, n, i) {
        return this.getBarycoord(e, t, n, i, en), en.x >= 0 && en.y >= 0 && en.x + en.y <= 1;
    }
    static getUV(e, t, n, i, r, o, a, l) {
        return this.getBarycoord(e, t, n, i, en), l.set(0, 0), l.addScaledVector(r, en.x), l.addScaledVector(o, en.y), l.addScaledVector(a, en.z), l;
    }
    static isFrontFacing(e, t, n, i) {
        return Dt.subVectors(n, t), Kt.subVectors(e, t), Dt.cross(Kt).dot(i) < 0;
    }
    set(e, t, n) {
        return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
    }
    setFromPointsAndIndices(e, t, n, i) {
        return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
    }
    setFromAttributeAndIndices(e, t, n, i) {
        return this.a.fromBufferAttribute(e, t), this.b.fromBufferAttribute(e, n), this.c.fromBufferAttribute(e, i), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
    }
    getArea() {
        return Dt.subVectors(this.c, this.b), Kt.subVectors(this.a, this.b), Dt.cross(Kt).length() * .5;
    }
    getMidpoint(e) {
        return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
    }
    getNormal(e) {
        return nt.getNormal(this.a, this.b, this.c, e);
    }
    getPlane(e) {
        return e.setFromCoplanarPoints(this.a, this.b, this.c);
    }
    getBarycoord(e, t) {
        return nt.getBarycoord(e, this.a, this.b, this.c, t);
    }
    getUV(e, t, n, i, r) {
        return nt.getUV(e, this.a, this.b, this.c, t, n, i, r);
    }
    containsPoint(e) {
        return nt.containsPoint(e, this.a, this.b, this.c);
    }
    isFrontFacing(e) {
        return nt.isFrontFacing(this.a, this.b, this.c, e);
    }
    intersectsBox(e) {
        return e.intersectsTriangle(this);
    }
    closestPointToPoint(e, t) {
        let n = this.a, i = this.b, r = this.c, o, a;
        ai.subVectors(i, n), li.subVectors(r, n), Lo.subVectors(e, n);
        let l = ai.dot(Lo), c = li.dot(Lo);
        if (l <= 0 && c <= 0) return t.copy(n);
        Ro.subVectors(e, i);
        let h = ai.dot(Ro), u = li.dot(Ro);
        if (h >= 0 && u <= h) return t.copy(i);
        let d = l * u - h * c;
        if (d <= 0 && l >= 0 && h <= 0) return o = l / (l - h), t.copy(n).addScaledVector(ai, o);
        Po.subVectors(e, r);
        let f = ai.dot(Po), m = li.dot(Po);
        if (m >= 0 && f <= m) return t.copy(r);
        let x = f * c - l * m;
        if (x <= 0 && c >= 0 && m <= 0) return a = c / (c - m), t.copy(n).addScaledVector(li, a);
        let v = h * m - f * u;
        if (v <= 0 && u - h >= 0 && f - m >= 0) return Al.subVectors(r, i), a = (u - h) / (u - h + (f - m)), t.copy(i).addScaledVector(Al, a);
        let g = 1 / (v + x + d);
        return o = x * g, a = d * g, t.copy(n).addScaledVector(ai, o).addScaledVector(li, a);
    }
    equals(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
    }
}, lf = 0, dt = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: lf++
        }), this.uuid = Et(), this.name = "", this.type = "Material", this.fog = !0, this.blending = sr, this.side = Ai, this.vertexColors = !1, this.opacity = 1, this.format = ct, this.transparent = !1, this.blendSrc = Gc, this.blendDst = Vc, this.blendEquation = _i, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = ea, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = Ud, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = vo, this.stencilZFail = vo, this.stencilZPass = vo, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
    }
    get alphaTest() {
        return this._alphaTest;
    }
    set alphaTest(e) {
        this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
    }
    onBuild() {}
    onBeforeRender() {}
    onBeforeCompile() {}
    customProgramCacheKey() {
        return this.onBeforeCompile.toString();
    }
    setValues(e) {
        if (e !== void 0) for(let t in e){
            let n = e[t];
            if (n === void 0) {
                console.warn("THREE.Material: '" + t + "' parameter is undefined.");
                continue;
            }
            if (t === "shading") {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = n === kc;
                continue;
            }
            let i = this[t];
            if (i === void 0) {
                console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.");
                continue;
            }
            i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n;
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        t && (e = {
            textures: {},
            images: {}
        });
        let n = {
            metadata: {
                version: 4.5,
                type: "Material",
                generator: "Material.toJSON"
            }
        };
        n.uuid = this.uuid, n.type = this.type, this.name !== "" && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), this.roughness !== void 0 && (n.roughness = this.roughness), this.metalness !== void 0 && (n.metalness = this.metalness), this.sheen !== void 0 && (n.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (n.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (n.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (n.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (n.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (n.shininess = this.shininess), this.clearcoat !== void 0 && (n.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (n.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (n.combine = this.combine)), this.envMapIntensity !== void 0 && (n.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (n.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && (n.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (n.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (n.size = this.size), this.shadowSide !== null && (n.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== sr && (n.blending = this.blending), this.side !== Ai && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), this.format !== ct && (n.format = this.format), this.transparent === !0 && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && this.rotation !== 0 && (n.rotation = this.rotation), this.polygonOffset === !0 && (n.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (n.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && this.linewidth !== 1 && (n.linewidth = this.linewidth), this.dashSize !== void 0 && (n.dashSize = this.dashSize), this.gapSize !== void 0 && (n.gapSize = this.gapSize), this.scale !== void 0 && (n.scale = this.scale), this.dithering === !0 && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), this.alphaToCoverage === !0 && (n.alphaToCoverage = this.alphaToCoverage), this.premultipliedAlpha === !0 && (n.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (n.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (n.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (n.flatShading = this.flatShading), this.visible === !1 && (n.visible = !1), this.toneMapped === !1 && (n.toneMapped = !1), JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData);
        function i(r) {
            let o = [];
            for(let a in r){
                let l = r[a];
                delete l.metadata, o.push(l);
            }
            return o;
        }
        if (t) {
            let r = i(e.textures), o = i(e.images);
            r.length > 0 && (n.textures = r), o.length > 0 && (n.images = o);
        }
        return n;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.format = e.format, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
        let t = e.clippingPlanes, n = null;
        if (t !== null) {
            let i = t.length;
            n = new Array(i);
            for(let r = 0; r !== i; ++r)n[r] = t[r].clone();
        }
        return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
dt.prototype.isMaterial = !0;
var $c = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
}, Ft = {
    h: 0,
    s: 0,
    l: 0
}, jr = {
    h: 0,
    s: 0,
    l: 0
};
function Io(s, e, t) {
    return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? s + (e - s) * 6 * t : t < 1 / 2 ? e : t < 2 / 3 ? s + (e - s) * 6 * (2 / 3 - t) : s;
}
function Do(s) {
    return s < .04045 ? s * .0773993808 : Math.pow(s * .9478672986 + .0521327014, 2.4);
}
function Fo(s) {
    return s < .0031308 ? s * 12.92 : 1.055 * Math.pow(s, .41666) - .055;
}
var ae = class {
    constructor(e, t, n){
        return t === void 0 && n === void 0 ? this.set(e) : this.setRGB(e, t, n);
    }
    set(e) {
        return e && e.isColor ? this.copy(e) : typeof e == "number" ? this.setHex(e) : typeof e == "string" && this.setStyle(e), this;
    }
    setScalar(e) {
        return this.r = e, this.g = e, this.b = e, this;
    }
    setHex(e) {
        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, this;
    }
    setRGB(e, t, n) {
        return this.r = e, this.g = t, this.b = n, this;
    }
    setHSL(e, t, n) {
        if (e = da(e, 1), t = mt(t, 0, 1), n = mt(n, 0, 1), t === 0) this.r = this.g = this.b = n;
        else {
            let i = n <= .5 ? n * (1 + t) : n + t - n * t, r = 2 * n - i;
            this.r = Io(r, i, e + 1 / 3), this.g = Io(r, i, e), this.b = Io(r, i, e - 1 / 3);
        }
        return this;
    }
    setStyle(e) {
        function t(i) {
            i !== void 0 && parseFloat(i) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
        }
        let n;
        if (n = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)) {
            let i, r = n[1], o = n[2];
            switch(r){
                case "rgb":
                case "rgba":
                    if (i = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[4]), this;
                    if (i = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[4]), this;
                    break;
                case "hsl":
                case "hsla":
                    if (i = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) {
                        let a = parseFloat(i[1]) / 360, l = parseInt(i[2], 10) / 100, c = parseInt(i[3], 10) / 100;
                        return t(i[4]), this.setHSL(a, l, c);
                    }
                    break;
            }
        } else if (n = /^\#([A-Fa-f\d]+)$/.exec(e)) {
            let i = n[1], r = i.length;
            if (r === 3) return this.r = parseInt(i.charAt(0) + i.charAt(0), 16) / 255, this.g = parseInt(i.charAt(1) + i.charAt(1), 16) / 255, this.b = parseInt(i.charAt(2) + i.charAt(2), 16) / 255, this;
            if (r === 6) return this.r = parseInt(i.charAt(0) + i.charAt(1), 16) / 255, this.g = parseInt(i.charAt(2) + i.charAt(3), 16) / 255, this.b = parseInt(i.charAt(4) + i.charAt(5), 16) / 255, this;
        }
        return e && e.length > 0 ? this.setColorName(e) : this;
    }
    setColorName(e) {
        let t = $c[e.toLowerCase()];
        return t !== void 0 ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this;
    }
    clone() {
        return new this.constructor(this.r, this.g, this.b);
    }
    copy(e) {
        return this.r = e.r, this.g = e.g, this.b = e.b, this;
    }
    copySRGBToLinear(e) {
        return this.r = Do(e.r), this.g = Do(e.g), this.b = Do(e.b), this;
    }
    copyLinearToSRGB(e) {
        return this.r = Fo(e.r), this.g = Fo(e.g), this.b = Fo(e.b), this;
    }
    convertSRGBToLinear() {
        return this.copySRGBToLinear(this), this;
    }
    convertLinearToSRGB() {
        return this.copyLinearToSRGB(this), this;
    }
    getHex() {
        return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;
    }
    getHexString() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
    }
    getHSL(e) {
        let t = this.r, n = this.g, i = this.b, r = Math.max(t, n, i), o = Math.min(t, n, i), a, l, c = (o + r) / 2;
        if (o === r) a = 0, l = 0;
        else {
            let h = r - o;
            switch(l = c <= .5 ? h / (r + o) : h / (2 - r - o), r){
                case t:
                    a = (n - i) / h + (n < i ? 6 : 0);
                    break;
                case n:
                    a = (i - t) / h + 2;
                    break;
                case i:
                    a = (t - n) / h + 4;
                    break;
            }
            a /= 6;
        }
        return e.h = a, e.s = l, e.l = c, e;
    }
    getStyle() {
        return "rgb(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + ")";
    }
    offsetHSL(e, t, n) {
        return this.getHSL(Ft), Ft.h += e, Ft.s += t, Ft.l += n, this.setHSL(Ft.h, Ft.s, Ft.l), this;
    }
    add(e) {
        return this.r += e.r, this.g += e.g, this.b += e.b, this;
    }
    addColors(e, t) {
        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
    }
    addScalar(e) {
        return this.r += e, this.g += e, this.b += e, this;
    }
    sub(e) {
        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
    }
    multiply(e) {
        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
    }
    multiplyScalar(e) {
        return this.r *= e, this.g *= e, this.b *= e, this;
    }
    lerp(e, t) {
        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
    }
    lerpColors(e, t, n) {
        return this.r = e.r + (t.r - e.r) * n, this.g = e.g + (t.g - e.g) * n, this.b = e.b + (t.b - e.b) * n, this;
    }
    lerpHSL(e, t) {
        this.getHSL(Ft), e.getHSL(jr);
        let n = or(Ft.h, jr.h, t), i = or(Ft.s, jr.s, t), r = or(Ft.l, jr.l, t);
        return this.setHSL(n, i, r), this;
    }
    equals(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
    }
    fromArray(e, t = 0) {
        return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
    }
    fromBufferAttribute(e, t) {
        return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), e.normalized === !0 && (this.r /= 255, this.g /= 255, this.b /= 255), this;
    }
    toJSON() {
        return this.getHex();
    }
};
ae.NAMES = $c;
ae.prototype.isColor = !0;
ae.prototype.r = 1;
ae.prototype.g = 1;
ae.prototype.b = 1;
var hn = class extends dt {
    constructor(e){
        super();
        this.type = "MeshBasicMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
hn.prototype.isMeshBasicMaterial = !0;
var Je = new M, Qr = new X, Ue = class {
    constructor(e, t, n){
        if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = e, this.itemSize = t, this.count = e !== void 0 ? e.length / t : 0, this.normalized = n === !0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0;
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.itemSize, n *= t.itemSize;
        for(let i = 0, r = this.itemSize; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    copyArray(e) {
        return this.array.set(e), this;
    }
    copyColorsArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), o = new ae), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b;
        }
        return this;
    }
    copyVector2sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), o = new X), t[n++] = o.x, t[n++] = o.y;
        }
        return this;
    }
    copyVector3sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), o = new M), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z;
        }
        return this;
    }
    copyVector4sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), o = new Ve), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w;
        }
        return this;
    }
    applyMatrix3(e) {
        if (this.itemSize === 2) for(let t = 0, n = this.count; t < n; t++)Qr.fromBufferAttribute(this, t), Qr.applyMatrix3(e), this.setXY(t, Qr.x, Qr.y);
        else if (this.itemSize === 3) for(let t = 0, n = this.count; t < n; t++)Je.fromBufferAttribute(this, t), Je.applyMatrix3(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyMatrix4(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyNormalMatrix(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.transformDirection(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    getX(e) {
        return this.array[e * this.itemSize];
    }
    setX(e, t) {
        return this.array[e * this.itemSize] = t, this;
    }
    getY(e) {
        return this.array[e * this.itemSize + 1];
    }
    setY(e, t) {
        return this.array[e * this.itemSize + 1] = t, this;
    }
    getZ(e) {
        return this.array[e * this.itemSize + 2];
    }
    setZ(e, t) {
        return this.array[e * this.itemSize + 2] = t, this;
    }
    getW(e) {
        return this.array[e * this.itemSize + 3];
    }
    setW(e, t) {
        return this.array[e * this.itemSize + 3] = t, this;
    }
    setXY(e, t, n) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    clone() {
        return new this.constructor(this.array, this.itemSize).copy(this);
    }
    toJSON() {
        let e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized
        };
        return this.name !== "" && (e.name = this.name), this.usage !== hr && (e.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (e.updateRange = this.updateRange), e;
    }
};
Ue.prototype.isBufferAttribute = !0;
var jc = class extends Ue {
    constructor(e, t, n){
        super(new Int8Array(e), t, n);
    }
}, Qc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8Array(e), t, n);
    }
}, Kc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8ClampedArray(e), t, n);
    }
}, eh = class extends Ue {
    constructor(e, t, n){
        super(new Int16Array(e), t, n);
    }
}, Ys = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
}, th = class extends Ue {
    constructor(e, t, n){
        super(new Int32Array(e), t, n);
    }
}, Zs = class extends Ue {
    constructor(e, t, n){
        super(new Uint32Array(e), t, n);
    }
}, nh = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
};
nh.prototype.isFloat16BufferAttribute = !0;
var de = class extends Ue {
    constructor(e, t, n){
        super(new Float32Array(e), t, n);
    }
}, ih = class extends Ue {
    constructor(e, t, n){
        super(new Float64Array(e), t, n);
    }
}, cf = 0, Rt = new pe, No = new Ne, ci = new M, Tt = new Lt, $i = new Lt, ht = new M, _e = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: cf++
        }), this.uuid = Et(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
            start: 0,
            count: 1 / 0
        }, this.userData = {};
    }
    getIndex() {
        return this.index;
    }
    setIndex(e) {
        return Array.isArray(e) ? this.index = new (Yc(e) > 65535 ? Zs : Ys)(e, 1) : this.index = e, this;
    }
    getAttribute(e) {
        return this.attributes[e];
    }
    setAttribute(e, t) {
        return this.attributes[e] = t, this;
    }
    deleteAttribute(e) {
        return delete this.attributes[e], this;
    }
    hasAttribute(e) {
        return this.attributes[e] !== void 0;
    }
    addGroup(e, t, n = 0) {
        this.groups.push({
            start: e,
            count: t,
            materialIndex: n
        });
    }
    clearGroups() {
        this.groups = [];
    }
    setDrawRange(e, t) {
        this.drawRange.start = e, this.drawRange.count = t;
    }
    applyMatrix4(e) {
        let t = this.attributes.position;
        t !== void 0 && (t.applyMatrix4(e), t.needsUpdate = !0);
        let n = this.attributes.normal;
        if (n !== void 0) {
            let r = new lt().getNormalMatrix(e);
            n.applyNormalMatrix(r), n.needsUpdate = !0;
        }
        let i = this.attributes.tangent;
        return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
    }
    applyQuaternion(e) {
        return Rt.makeRotationFromQuaternion(e), this.applyMatrix4(Rt), this;
    }
    rotateX(e) {
        return Rt.makeRotationX(e), this.applyMatrix4(Rt), this;
    }
    rotateY(e) {
        return Rt.makeRotationY(e), this.applyMatrix4(Rt), this;
    }
    rotateZ(e) {
        return Rt.makeRotationZ(e), this.applyMatrix4(Rt), this;
    }
    translate(e, t, n) {
        return Rt.makeTranslation(e, t, n), this.applyMatrix4(Rt), this;
    }
    scale(e, t, n) {
        return Rt.makeScale(e, t, n), this.applyMatrix4(Rt), this;
    }
    lookAt(e) {
        return No.lookAt(e), No.updateMatrix(), this.applyMatrix4(No.matrix), this;
    }
    center() {
        return this.computeBoundingBox(), this.boundingBox.getCenter(ci).negate(), this.translate(ci.x, ci.y, ci.z), this;
    }
    setFromPoints(e) {
        let t = [];
        for(let n = 0, i = e.length; n < i; n++){
            let r = e[n];
            t.push(r.x, r.y, r.z || 0);
        }
        return this.setAttribute("position", new de(t, 3)), this;
    }
    computeBoundingBox() {
        this.boundingBox === null && (this.boundingBox = new Lt);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(new M(-1 / 0, -1 / 0, -1 / 0), new M(1 / 0, 1 / 0, 1 / 0));
            return;
        }
        if (e !== void 0) {
            if (this.boundingBox.setFromBufferAttribute(e), t) for(let n = 0, i = t.length; n < i; n++){
                let r = t[n];
                Tt.setFromBufferAttribute(r), this.morphTargetsRelative ? (ht.addVectors(this.boundingBox.min, Tt.min), this.boundingBox.expandByPoint(ht), ht.addVectors(this.boundingBox.max, Tt.max), this.boundingBox.expandByPoint(ht)) : (this.boundingBox.expandByPoint(Tt.min), this.boundingBox.expandByPoint(Tt.max));
            }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
    }
    computeBoundingSphere() {
        this.boundingSphere === null && (this.boundingSphere = new An);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new M, 1 / 0);
            return;
        }
        if (e) {
            let n = this.boundingSphere.center;
            if (Tt.setFromBufferAttribute(e), t) for(let r = 0, o = t.length; r < o; r++){
                let a = t[r];
                $i.setFromBufferAttribute(a), this.morphTargetsRelative ? (ht.addVectors(Tt.min, $i.min), Tt.expandByPoint(ht), ht.addVectors(Tt.max, $i.max), Tt.expandByPoint(ht)) : (Tt.expandByPoint($i.min), Tt.expandByPoint($i.max));
            }
            Tt.getCenter(n);
            let i = 0;
            for(let r = 0, o = e.count; r < o; r++)ht.fromBufferAttribute(e, r), i = Math.max(i, n.distanceToSquared(ht));
            if (t) for(let r = 0, o = t.length; r < o; r++){
                let a = t[r], l = this.morphTargetsRelative;
                for(let c = 0, h = a.count; c < h; c++)ht.fromBufferAttribute(a, c), l && (ci.fromBufferAttribute(e, c), ht.add(ci)), i = Math.max(i, n.distanceToSquared(ht));
            }
            this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
        }
    }
    computeTangents() {
        let e = this.index, t = this.attributes;
        if (e === null || t.position === void 0 || t.normal === void 0 || t.uv === void 0) {
            console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
            return;
        }
        let n = e.array, i = t.position.array, r = t.normal.array, o = t.uv.array, a = i.length / 3;
        t.tangent === void 0 && this.setAttribute("tangent", new Ue(new Float32Array(4 * a), 4));
        let l = t.tangent.array, c = [], h = [];
        for(let B = 0; B < a; B++)c[B] = new M, h[B] = new M;
        let u = new M, d = new M, f = new M, m = new X, x = new X, v = new X, g = new M, p = new M;
        function _(B, P, w) {
            u.fromArray(i, B * 3), d.fromArray(i, P * 3), f.fromArray(i, w * 3), m.fromArray(o, B * 2), x.fromArray(o, P * 2), v.fromArray(o, w * 2), d.sub(u), f.sub(u), x.sub(m), v.sub(m);
            let E = 1 / (x.x * v.y - v.x * x.y);
            !isFinite(E) || (g.copy(d).multiplyScalar(v.y).addScaledVector(f, -x.y).multiplyScalar(E), p.copy(f).multiplyScalar(x.x).addScaledVector(d, -v.x).multiplyScalar(E), c[B].add(g), c[P].add(g), c[w].add(g), h[B].add(p), h[P].add(p), h[w].add(p));
        }
        let y = this.groups;
        y.length === 0 && (y = [
            {
                start: 0,
                count: n.length
            }
        ]);
        for(let B = 0, P = y.length; B < P; ++B){
            let w = y[B], E = w.start, D = w.count;
            for(let U = E, F = E + D; U < F; U += 3)_(n[U + 0], n[U + 1], n[U + 2]);
        }
        let b = new M, A = new M, L = new M, I = new M;
        function k(B) {
            L.fromArray(r, B * 3), I.copy(L);
            let P = c[B];
            b.copy(P), b.sub(L.multiplyScalar(L.dot(P))).normalize(), A.crossVectors(I, P);
            let E = A.dot(h[B]) < 0 ? -1 : 1;
            l[B * 4] = b.x, l[B * 4 + 1] = b.y, l[B * 4 + 2] = b.z, l[B * 4 + 3] = E;
        }
        for(let B = 0, P = y.length; B < P; ++B){
            let w = y[B], E = w.start, D = w.count;
            for(let U = E, F = E + D; U < F; U += 3)k(n[U + 0]), k(n[U + 1]), k(n[U + 2]);
        }
    }
    computeVertexNormals() {
        let e = this.index, t = this.getAttribute("position");
        if (t !== void 0) {
            let n = this.getAttribute("normal");
            if (n === void 0) n = new Ue(new Float32Array(t.count * 3), 3), this.setAttribute("normal", n);
            else for(let d = 0, f = n.count; d < f; d++)n.setXYZ(d, 0, 0, 0);
            let i = new M, r = new M, o = new M, a = new M, l = new M, c = new M, h = new M, u = new M;
            if (e) for(let d = 0, f = e.count; d < f; d += 3){
                let m = e.getX(d + 0), x = e.getX(d + 1), v = e.getX(d + 2);
                i.fromBufferAttribute(t, m), r.fromBufferAttribute(t, x), o.fromBufferAttribute(t, v), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), a.fromBufferAttribute(n, m), l.fromBufferAttribute(n, x), c.fromBufferAttribute(n, v), a.add(h), l.add(h), c.add(h), n.setXYZ(m, a.x, a.y, a.z), n.setXYZ(x, l.x, l.y, l.z), n.setXYZ(v, c.x, c.y, c.z);
            }
            else for(let d = 0, f = t.count; d < f; d += 3)i.fromBufferAttribute(t, d + 0), r.fromBufferAttribute(t, d + 1), o.fromBufferAttribute(t, d + 2), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), n.setXYZ(d + 0, h.x, h.y, h.z), n.setXYZ(d + 1, h.x, h.y, h.z), n.setXYZ(d + 2, h.x, h.y, h.z);
            this.normalizeNormals(), n.needsUpdate = !0;
        }
    }
    merge(e, t) {
        if (!(e && e.isBufferGeometry)) {
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
            return;
        }
        t === void 0 && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
        let n = this.attributes;
        for(let i in n){
            if (e.attributes[i] === void 0) continue;
            let o = n[i].array, a = e.attributes[i], l = a.array, c = a.itemSize * t, h = Math.min(l.length, o.length - c);
            for(let u = 0, d = c; u < h; u++, d++)o[d] = l[u];
        }
        return this;
    }
    normalizeNormals() {
        let e = this.attributes.normal;
        for(let t = 0, n = e.count; t < n; t++)ht.fromBufferAttribute(e, t), ht.normalize(), e.setXYZ(t, ht.x, ht.y, ht.z);
    }
    toNonIndexed() {
        function e(a, l) {
            let c = a.array, h = a.itemSize, u = a.normalized, d = new c.constructor(l.length * h), f = 0, m = 0;
            for(let x = 0, v = l.length; x < v; x++){
                a.isInterleavedBufferAttribute ? f = l[x] * a.data.stride + a.offset : f = l[x] * h;
                for(let g = 0; g < h; g++)d[m++] = c[f++];
            }
            return new Ue(d, h, u);
        }
        if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
        let t = new _e, n = this.index.array, i = this.attributes;
        for(let a in i){
            let l = i[a], c = e(l, n);
            t.setAttribute(a, c);
        }
        let r = this.morphAttributes;
        for(let a in r){
            let l = [], c = r[a];
            for(let h = 0, u = c.length; h < u; h++){
                let d = c[h], f = e(d, n);
                l.push(f);
            }
            t.morphAttributes[a] = l;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        let o = this.groups;
        for(let a = 0, l = o.length; a < l; a++){
            let c = o[a];
            t.addGroup(c.start, c.count, c.materialIndex);
        }
        return t;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "BufferGeometry",
                generator: "BufferGeometry.toJSON"
            }
        };
        if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
            let l = this.parameters;
            for(let c in l)l[c] !== void 0 && (e[c] = l[c]);
            return e;
        }
        e.data = {
            attributes: {}
        };
        let t = this.index;
        t !== null && (e.data.index = {
            type: t.array.constructor.name,
            array: Array.prototype.slice.call(t.array)
        });
        let n = this.attributes;
        for(let l in n){
            let c = n[l];
            e.data.attributes[l] = c.toJSON(e.data);
        }
        let i = {}, r = !1;
        for(let l in this.morphAttributes){
            let c = this.morphAttributes[l], h = [];
            for(let u = 0, d = c.length; u < d; u++){
                let f = c[u];
                h.push(f.toJSON(e.data));
            }
            h.length > 0 && (i[l] = h, r = !0);
        }
        r && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
        let o = this.groups;
        o.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(o)));
        let a = this.boundingSphere;
        return a !== null && (e.data.boundingSphere = {
            center: a.center.toArray(),
            radius: a.radius
        }), e;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
        let t = {};
        this.name = e.name;
        let n = e.index;
        n !== null && this.setIndex(n.clone(t));
        let i = e.attributes;
        for(let c in i){
            let h = i[c];
            this.setAttribute(c, h.clone(t));
        }
        let r = e.morphAttributes;
        for(let c in r){
            let h = [], u = r[c];
            for(let d = 0, f = u.length; d < f; d++)h.push(u[d].clone(t));
            this.morphAttributes[c] = h;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        let o = e.groups;
        for(let c = 0, h = o.length; c < h; c++){
            let u = o[c];
            this.addGroup(u.start, u.count, u.materialIndex);
        }
        let a = e.boundingBox;
        a !== null && (this.boundingBox = a.clone());
        let l = e.boundingSphere;
        return l !== null && (this.boundingSphere = l.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, e.parameters !== void 0 && (this.parameters = Object.assign({}, e.parameters)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
_e.prototype.isBufferGeometry = !0;
var Cl = new pe, hi = new Cn, Bo = new An, mn = new M, gn = new M, xn = new M, zo = new M, Uo = new M, Oo = new M, Kr = new M, es = new M, ts = new M, ns = new X, is = new X, rs = new X, Ho = new M, ss = new M, st = class extends Ne {
    constructor(e = new _e, t = new hn){
        super();
        this.type = "Mesh", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = e.material, this.geometry = e.geometry, this;
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t = e.morphTargets;
            t !== void 0 && t.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
    raycast(e, t) {
        let n = this.geometry, i = this.material, r = this.matrixWorld;
        if (i === void 0 || (n.boundingSphere === null && n.computeBoundingSphere(), Bo.copy(n.boundingSphere), Bo.applyMatrix4(r), e.ray.intersectsSphere(Bo) === !1) || (Cl.copy(r).invert(), hi.copy(e.ray).applyMatrix4(Cl), n.boundingBox !== null && hi.intersectsBox(n.boundingBox) === !1)) return;
        let o;
        if (n.isBufferGeometry) {
            let a = n.index, l = n.attributes.position, c = n.morphAttributes.position, h = n.morphTargetsRelative, u = n.attributes.uv, d = n.attributes.uv2, f = n.groups, m = n.drawRange;
            if (a !== null) if (Array.isArray(i)) for(let x = 0, v = f.length; x < v; x++){
                let g = f[x], p = i[g.materialIndex], _ = Math.max(g.start, m.start), y = Math.min(a.count, Math.min(g.start + g.count, m.start + m.count));
                for(let b = _, A = y; b < A; b += 3){
                    let L = a.getX(b), I = a.getX(b + 1), k = a.getX(b + 2);
                    o = os(this, p, e, hi, l, c, h, u, d, L, I, k), o && (o.faceIndex = Math.floor(b / 3), o.face.materialIndex = g.materialIndex, t.push(o));
                }
            }
            else {
                let x = Math.max(0, m.start), v = Math.min(a.count, m.start + m.count);
                for(let g = x, p = v; g < p; g += 3){
                    let _ = a.getX(g), y = a.getX(g + 1), b = a.getX(g + 2);
                    o = os(this, i, e, hi, l, c, h, u, d, _, y, b), o && (o.faceIndex = Math.floor(g / 3), t.push(o));
                }
            }
            else if (l !== void 0) if (Array.isArray(i)) for(let x = 0, v = f.length; x < v; x++){
                let g = f[x], p = i[g.materialIndex], _ = Math.max(g.start, m.start), y = Math.min(l.count, Math.min(g.start + g.count, m.start + m.count));
                for(let b = _, A = y; b < A; b += 3){
                    let L = b, I = b + 1, k = b + 2;
                    o = os(this, p, e, hi, l, c, h, u, d, L, I, k), o && (o.faceIndex = Math.floor(b / 3), o.face.materialIndex = g.materialIndex, t.push(o));
                }
            }
            else {
                let x = Math.max(0, m.start), v = Math.min(l.count, m.start + m.count);
                for(let g = x, p = v; g < p; g += 3){
                    let _ = g, y = g + 1, b = g + 2;
                    o = os(this, i, e, hi, l, c, h, u, d, _, y, b), o && (o.faceIndex = Math.floor(g / 3), t.push(o));
                }
            }
        } else n.isGeometry && console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
};
st.prototype.isMesh = !0;
function hf(s, e, t, n, i, r, o, a) {
    let l;
    if (e.side === it ? l = n.intersectTriangle(o, r, i, !0, a) : l = n.intersectTriangle(i, r, o, e.side !== Ci, a), l === null) return null;
    ss.copy(a), ss.applyMatrix4(s.matrixWorld);
    let c = t.ray.origin.distanceTo(ss);
    return c < t.near || c > t.far ? null : {
        distance: c,
        point: ss.clone(),
        object: s
    };
}
function os(s, e, t, n, i, r, o, a, l, c, h, u) {
    mn.fromBufferAttribute(i, c), gn.fromBufferAttribute(i, h), xn.fromBufferAttribute(i, u);
    let d = s.morphTargetInfluences;
    if (r && d) {
        Kr.set(0, 0, 0), es.set(0, 0, 0), ts.set(0, 0, 0);
        for(let m = 0, x = r.length; m < x; m++){
            let v = d[m], g = r[m];
            v !== 0 && (zo.fromBufferAttribute(g, c), Uo.fromBufferAttribute(g, h), Oo.fromBufferAttribute(g, u), o ? (Kr.addScaledVector(zo, v), es.addScaledVector(Uo, v), ts.addScaledVector(Oo, v)) : (Kr.addScaledVector(zo.sub(mn), v), es.addScaledVector(Uo.sub(gn), v), ts.addScaledVector(Oo.sub(xn), v)));
        }
        mn.add(Kr), gn.add(es), xn.add(ts);
    }
    s.isSkinnedMesh && (s.boneTransform(c, mn), s.boneTransform(h, gn), s.boneTransform(u, xn));
    let f = hf(s, e, t, n, mn, gn, xn, Ho);
    if (f) {
        a && (ns.fromBufferAttribute(a, c), is.fromBufferAttribute(a, h), rs.fromBufferAttribute(a, u), f.uv = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X)), l && (ns.fromBufferAttribute(l, c), is.fromBufferAttribute(l, h), rs.fromBufferAttribute(l, u), f.uv2 = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X));
        let m = {
            a: c,
            b: h,
            c: u,
            normal: new M,
            materialIndex: 0
        };
        nt.getNormal(mn, gn, xn, m.normal), f.face = m;
    }
    return f;
}
var wn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1, r = 1, o = 1){
        super();
        this.type = "BoxGeometry", this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: o
        };
        let a = this;
        i = Math.floor(i), r = Math.floor(r), o = Math.floor(o);
        let l = [], c = [], h = [], u = [], d = 0, f = 0;
        m("z", "y", "x", -1, -1, n, t, e, o, r, 0), m("z", "y", "x", 1, -1, n, t, -e, o, r, 1), m("x", "z", "y", 1, 1, e, n, t, i, o, 2), m("x", "z", "y", 1, -1, e, n, -t, i, o, 3), m("x", "y", "z", 1, -1, e, t, n, i, r, 4), m("x", "y", "z", -1, -1, e, t, -n, i, r, 5), this.setIndex(l), this.setAttribute("position", new de(c, 3)), this.setAttribute("normal", new de(h, 3)), this.setAttribute("uv", new de(u, 2));
        function m(x, v, g, p, _, y, b, A, L, I, k) {
            let B = y / L, P = b / I, w = y / 2, E = b / 2, D = A / 2, U = L + 1, F = I + 1, O = 0, ne = 0, ce = new M;
            for(let V = 0; V < F; V++){
                let W = V * P - E;
                for(let he = 0; he < U; he++){
                    let le = he * B - w;
                    ce[x] = le * p, ce[v] = W * _, ce[g] = D, c.push(ce.x, ce.y, ce.z), ce[x] = 0, ce[v] = 0, ce[g] = A > 0 ? 1 : -1, h.push(ce.x, ce.y, ce.z), u.push(he / L), u.push(1 - V / I), O += 1;
                }
            }
            for(let V = 0; V < I; V++)for(let W = 0; W < L; W++){
                let he = d + W + U * V, le = d + W + U * (V + 1), fe = d + (W + 1) + U * (V + 1), Be = d + (W + 1) + U * V;
                l.push(he, le, Be), l.push(le, fe, Be), ne += 6;
            }
            a.addGroup(f, ne, k), f += ne, d += O;
        }
    }
    static fromJSON(e) {
        return new wn(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
    }
};
function Ri(s) {
    let e = {};
    for(let t in s){
        e[t] = {};
        for(let n in s[t]){
            let i = s[t][n];
            i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? e[t][n] = i.clone() : Array.isArray(i) ? e[t][n] = i.slice() : e[t][n] = i;
        }
    }
    return e;
}
function yt(s) {
    let e = {};
    for(let t = 0; t < s.length; t++){
        let n = Ri(s[t]);
        for(let i in n)e[i] = n[i];
    }
    return e;
}
var uf = {
    clone: Ri,
    merge: yt
}, df = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, ff = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, sn = class extends dt {
    constructor(e){
        super();
        this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = df, this.fragmentShader = ff, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        }, this.defaultAttributeValues = {
            color: [
                1,
                1,
                1
            ],
            uv: [
                0,
                0
            ],
            uv2: [
                0,
                0
            ]
        }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && (e.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e));
    }
    copy(e) {
        return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Ri(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        t.glslVersion = this.glslVersion, t.uniforms = {};
        for(let i in this.uniforms){
            let o = this.uniforms[i].value;
            o && o.isTexture ? t.uniforms[i] = {
                type: "t",
                value: o.toJSON(e).uuid
            } : o && o.isColor ? t.uniforms[i] = {
                type: "c",
                value: o.getHex()
            } : o && o.isVector2 ? t.uniforms[i] = {
                type: "v2",
                value: o.toArray()
            } : o && o.isVector3 ? t.uniforms[i] = {
                type: "v3",
                value: o.toArray()
            } : o && o.isVector4 ? t.uniforms[i] = {
                type: "v4",
                value: o.toArray()
            } : o && o.isMatrix3 ? t.uniforms[i] = {
                type: "m3",
                value: o.toArray()
            } : o && o.isMatrix4 ? t.uniforms[i] = {
                type: "m4",
                value: o.toArray()
            } : t.uniforms[i] = {
                value: o
            };
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
        let n = {};
        for(let i in this.extensions)this.extensions[i] === !0 && (n[i] = !0);
        return Object.keys(n).length > 0 && (t.extensions = n), t;
    }
};
sn.prototype.isShaderMaterial = !0;
var Ir = class extends Ne {
    constructor(){
        super();
        this.type = "Camera", this.matrixWorldInverse = new pe, this.projectionMatrix = new pe, this.projectionMatrixInverse = new pe;
    }
    copy(e, t) {
        return super.copy(e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(-t[8], -t[9], -t[10]).normalize();
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    updateWorldMatrix(e, t) {
        super.updateWorldMatrix(e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Ir.prototype.isCamera = !0;
var ut = class extends Ir {
    constructor(e = 50, t = 1, n = .1, i = 2e3){
        super();
        this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = n, this.far = i, this.focus = 10, this.aspect = t, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
    }
    setFocalLength(e) {
        let t = .5 * this.getFilmHeight() / e;
        this.fov = dr * 2 * Math.atan(t), this.updateProjectionMatrix();
    }
    getFocalLength() {
        let e = Math.tan(Wn * .5 * this.fov);
        return .5 * this.getFilmHeight() / e;
    }
    getEffectiveFOV() {
        return dr * 2 * Math.atan(Math.tan(Wn * .5 * this.fov) / this.zoom);
    }
    getFilmWidth() {
        return this.filmGauge * Math.min(this.aspect, 1);
    }
    getFilmHeight() {
        return this.filmGauge / Math.max(this.aspect, 1);
    }
    setViewOffset(e, t, n, i, r, o) {
        this.aspect = e / t, this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = this.near, t = e * Math.tan(Wn * .5 * this.fov) / this.zoom, n = 2 * t, i = this.aspect * n, r = -.5 * i, o = this.view;
        if (this.view !== null && this.view.enabled) {
            let l = o.fullWidth, c = o.fullHeight;
            r += o.offsetX * i / l, t -= o.offsetY * n / c, i *= o.width / l, n *= o.height / c;
        }
        let a = this.filmOffset;
        a !== 0 && (r += e * a / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, t, t - n, e, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, this.view !== null && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
    }
};
ut.prototype.isPerspectiveCamera = !0;
var ui = 90, di = 1, $s = class extends Ne {
    constructor(e, t, n){
        super();
        if (this.type = "CubeCamera", n.isWebGLCubeRenderTarget !== !0) {
            console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");
            return;
        }
        this.renderTarget = n;
        let i = new ut(ui, di, e, t);
        i.layers = this.layers, i.up.set(0, -1, 0), i.lookAt(new M(1, 0, 0)), this.add(i);
        let r = new ut(ui, di, e, t);
        r.layers = this.layers, r.up.set(0, -1, 0), r.lookAt(new M(-1, 0, 0)), this.add(r);
        let o = new ut(ui, di, e, t);
        o.layers = this.layers, o.up.set(0, 0, 1), o.lookAt(new M(0, 1, 0)), this.add(o);
        let a = new ut(ui, di, e, t);
        a.layers = this.layers, a.up.set(0, 0, -1), a.lookAt(new M(0, -1, 0)), this.add(a);
        let l = new ut(ui, di, e, t);
        l.layers = this.layers, l.up.set(0, -1, 0), l.lookAt(new M(0, 0, 1)), this.add(l);
        let c = new ut(ui, di, e, t);
        c.layers = this.layers, c.up.set(0, -1, 0), c.lookAt(new M(0, 0, -1)), this.add(c);
    }
    update(e, t) {
        this.parent === null && this.updateMatrixWorld();
        let n = this.renderTarget, [i, r, o, a, l, c] = this.children, h = e.xr.enabled, u = e.getRenderTarget();
        e.xr.enabled = !1;
        let d = n.texture.generateMipmaps;
        n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0), e.render(t, i), e.setRenderTarget(n, 1), e.render(t, r), e.setRenderTarget(n, 2), e.render(t, o), e.setRenderTarget(n, 3), e.render(t, a), e.setRenderTarget(n, 4), e.render(t, l), n.texture.generateMipmaps = d, e.setRenderTarget(n, 5), e.render(t, c), e.setRenderTarget(u), e.xr.enabled = h;
    }
}, ki = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        e = e !== void 0 ? e : [], t = t !== void 0 ? t : Bi;
        super(e, t, n, i, r, o, a, l, c, h);
        this.flipY = !1;
    }
    get images() {
        return this.image;
    }
    set images(e) {
        this.image = e;
    }
};
ki.prototype.isCubeTexture = !0;
var js = class extends At {
    constructor(e, t, n){
        Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), t = n);
        super(e, e, t);
        t = t || {}, this.texture = new ki(void 0, t.mapping, t.wrapS, t.wrapT, t.magFilter, t.minFilter, t.format, t.type, t.anisotropy, t.encoding), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = t.generateMipmaps !== void 0 ? t.generateMipmaps : !1, this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : tt, this.texture._needsFlipEnvMap = !1;
    }
    fromEquirectangularTexture(e, t) {
        this.texture.type = t.type, this.texture.format = ct, this.texture.encoding = t.encoding, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
        let n = {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
            fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
        }, i = new wn(5, 5, 5), r = new sn({
            name: "CubemapFromEquirect",
            uniforms: Ri(n.uniforms),
            vertexShader: n.vertexShader,
            fragmentShader: n.fragmentShader,
            side: it,
            blending: vn
        });
        r.uniforms.tEquirect.value = t;
        let o = new st(i, r), a = t.minFilter;
        return t.minFilter === Ui && (t.minFilter = tt), new $s(1, 10, this).update(e, o), t.minFilter = a, o.geometry.dispose(), o.material.dispose(), this;
    }
    clear(e, t, n, i) {
        let r = e.getRenderTarget();
        for(let o = 0; o < 6; o++)e.setRenderTarget(this, o), e.clear(t, n, i);
        e.setRenderTarget(r);
    }
};
js.prototype.isWebGLCubeRenderTarget = !0;
var ko = new M, pf = new M, mf = new lt, Wt = class {
    constructor(e = new M(1, 0, 0), t = 0){
        this.normal = e, this.constant = t;
    }
    set(e, t) {
        return this.normal.copy(e), this.constant = t, this;
    }
    setComponents(e, t, n, i) {
        return this.normal.set(e, t, n), this.constant = i, this;
    }
    setFromNormalAndCoplanarPoint(e, t) {
        return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
    }
    setFromCoplanarPoints(e, t, n) {
        let i = ko.subVectors(n, t).cross(pf.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
    }
    copy(e) {
        return this.normal.copy(e.normal), this.constant = e.constant, this;
    }
    normalize() {
        let e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), this.constant *= e, this;
    }
    negate() {
        return this.constant *= -1, this.normal.negate(), this;
    }
    distanceToPoint(e) {
        return this.normal.dot(e) + this.constant;
    }
    distanceToSphere(e) {
        return this.distanceToPoint(e.center) - e.radius;
    }
    projectPoint(e, t) {
        return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);
    }
    intersectLine(e, t) {
        let n = e.delta(ko), i = this.normal.dot(n);
        if (i === 0) return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
        let r = -(e.start.dot(this.normal) + this.constant) / i;
        return r < 0 || r > 1 ? null : t.copy(n).multiplyScalar(r).add(e.start);
    }
    intersectsLine(e) {
        let t = this.distanceToPoint(e.start), n = this.distanceToPoint(e.end);
        return t < 0 && n > 0 || n < 0 && t > 0;
    }
    intersectsBox(e) {
        return e.intersectsPlane(this);
    }
    intersectsSphere(e) {
        return e.intersectsPlane(this);
    }
    coplanarPoint(e) {
        return e.copy(this.normal).multiplyScalar(-this.constant);
    }
    applyMatrix4(e, t) {
        let n = t || mf.getNormalMatrix(e), i = this.coplanarPoint(ko).applyMatrix4(e), r = this.normal.applyMatrix3(n).normalize();
        return this.constant = -i.dot(r), this;
    }
    translate(e) {
        return this.constant -= e.dot(this.normal), this;
    }
    equals(e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Wt.prototype.isPlane = !0;
var fi = new An, as = new M, Dr = class {
    constructor(e = new Wt, t = new Wt, n = new Wt, i = new Wt, r = new Wt, o = new Wt){
        this.planes = [
            e,
            t,
            n,
            i,
            r,
            o
        ];
    }
    set(e, t, n, i, r, o) {
        let a = this.planes;
        return a[0].copy(e), a[1].copy(t), a[2].copy(n), a[3].copy(i), a[4].copy(r), a[5].copy(o), this;
    }
    copy(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)t[n].copy(e.planes[n]);
        return this;
    }
    setFromProjectionMatrix(e) {
        let t = this.planes, n = e.elements, i = n[0], r = n[1], o = n[2], a = n[3], l = n[4], c = n[5], h = n[6], u = n[7], d = n[8], f = n[9], m = n[10], x = n[11], v = n[12], g = n[13], p = n[14], _ = n[15];
        return t[0].setComponents(a - i, u - l, x - d, _ - v).normalize(), t[1].setComponents(a + i, u + l, x + d, _ + v).normalize(), t[2].setComponents(a + r, u + c, x + f, _ + g).normalize(), t[3].setComponents(a - r, u - c, x - f, _ - g).normalize(), t[4].setComponents(a - o, u - h, x - m, _ - p).normalize(), t[5].setComponents(a + o, u + h, x + m, _ + p).normalize(), this;
    }
    intersectsObject(e) {
        let t = e.geometry;
        return t.boundingSphere === null && t.computeBoundingSphere(), fi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSprite(e) {
        return fi.center.set(0, 0, 0), fi.radius = .7071067811865476, fi.applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSphere(e) {
        let t = this.planes, n = e.center, i = -e.radius;
        for(let r = 0; r < 6; r++)if (t[r].distanceToPoint(n) < i) return !1;
        return !0;
    }
    intersectsBox(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++){
            let i = t[n];
            if (as.x = i.normal.x > 0 ? e.max.x : e.min.x, as.y = i.normal.y > 0 ? e.max.y : e.min.y, as.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(as) < 0) return !1;
        }
        return !0;
    }
    containsPoint(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)if (t[n].distanceToPoint(e) < 0) return !1;
        return !0;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
function rh() {
    let s = null, e = !1, t = null, n = null;
    function i(r, o) {
        t(r, o), n = s.requestAnimationFrame(i);
    }
    return {
        start: function() {
            e !== !0 && t !== null && (n = s.requestAnimationFrame(i), e = !0);
        },
        stop: function() {
            s.cancelAnimationFrame(n), e = !1;
        },
        setAnimationLoop: function(r) {
            t = r;
        },
        setContext: function(r) {
            s = r;
        }
    };
}
function gf(s, e) {
    let t = e.isWebGL2, n = new WeakMap;
    function i(c, h) {
        let u = c.array, d = c.usage, f = s.createBuffer();
        s.bindBuffer(h, f), s.bufferData(h, u, d), c.onUploadCallback();
        let m = 5126;
        return u instanceof Float32Array ? m = 5126 : u instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : u instanceof Uint16Array ? c.isFloat16BufferAttribute ? t ? m = 5131 : console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.") : m = 5123 : u instanceof Int16Array ? m = 5122 : u instanceof Uint32Array ? m = 5125 : u instanceof Int32Array ? m = 5124 : u instanceof Int8Array ? m = 5120 : (u instanceof Uint8Array || u instanceof Uint8ClampedArray) && (m = 5121), {
            buffer: f,
            type: m,
            bytesPerElement: u.BYTES_PER_ELEMENT,
            version: c.version
        };
    }
    function r(c, h, u) {
        let d = h.array, f = h.updateRange;
        s.bindBuffer(u, c), f.count === -1 ? s.bufferSubData(u, 0, d) : (t ? s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d, f.offset, f.count) : s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d.subarray(f.offset, f.offset + f.count)), f.count = -1);
    }
    function o(c) {
        return c.isInterleavedBufferAttribute && (c = c.data), n.get(c);
    }
    function a(c) {
        c.isInterleavedBufferAttribute && (c = c.data);
        let h = n.get(c);
        h && (s.deleteBuffer(h.buffer), n.delete(c));
    }
    function l(c, h) {
        if (c.isGLBufferAttribute) {
            let d = n.get(c);
            (!d || d.version < c.version) && n.set(c, {
                buffer: c.buffer,
                type: c.type,
                bytesPerElement: c.elementSize,
                version: c.version
            });
            return;
        }
        c.isInterleavedBufferAttribute && (c = c.data);
        let u = n.get(c);
        u === void 0 ? n.set(c, i(c, h)) : u.version < c.version && (r(u.buffer, c, h), u.version = c.version);
    }
    return {
        get: o,
        remove: a,
        update: l
    };
}
var Pi = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1){
        super();
        this.type = "PlaneGeometry", this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: i
        };
        let r = e / 2, o = t / 2, a = Math.floor(n), l = Math.floor(i), c = a + 1, h = l + 1, u = e / a, d = t / l, f = [], m = [], x = [], v = [];
        for(let g = 0; g < h; g++){
            let p = g * d - o;
            for(let _ = 0; _ < c; _++){
                let y = _ * u - r;
                m.push(y, -p, 0), x.push(0, 0, 1), v.push(_ / a), v.push(1 - g / l);
            }
        }
        for(let g = 0; g < l; g++)for(let p = 0; p < a; p++){
            let _ = p + c * g, y = p + c * (g + 1), b = p + 1 + c * (g + 1), A = p + 1 + c * g;
            f.push(_, y, A), f.push(y, b, A);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Pi(e.width, e.height, e.widthSegments, e.heightSegments);
    }
}, xf = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`, yf = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, vf = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, _f = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, Mf = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, bf = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, wf = "vec3 transformed = vec3( position );", Sf = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, Tf = `vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`, Ef = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, Af = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, Cf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, Lf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Rf = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, Pf = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, If = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Df = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, Ff = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, Nf = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`, Bf = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, zf = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Uf = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, Of = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`, Hf = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, kf = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, Gf = "gl_FragColor = linearToOutputTexel( gl_FragColor );", Vf = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, Wf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, qf = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, Xf = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, Jf = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, Yf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, Zf = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, $f = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, jf = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, Qf = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, Kf = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`, ep = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, tp = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, np = `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`, ip = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, rp = `#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`, sp = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, op = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`, ap = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, lp = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`, cp = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`, hp = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, up = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, dp = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, fp = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`, pp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, mp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, gp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, xp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, yp = `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`, vp = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, _p = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, Mp = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, bp = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`, wp = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, Sp = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, Tp = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, Ep = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, Ap = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`, Cp = `#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, Lp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Rp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Pp = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Ip = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`, Dp = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`, Fp = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`, Np = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`, Bp = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, zp = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`, Up = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, Op = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, Hp = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, kp = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, Gp = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`, Vp = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, Wp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, qp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, Xp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`, Jp = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, Yp = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, Zp = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`, $p = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, jp = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, Qp = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, Kp = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, em = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, tm = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, nm = `#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`, im = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`, rm = `#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`, sm = `#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`, om = `#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, am = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, lm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`, cm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`, hm = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`, um = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, dm = `uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, fm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, pm = `#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, mm = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, gm = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, xm = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, ym = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, vm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, _m = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, Mm = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, bm = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, wm = `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, Sm = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Tm = `#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Em = `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Am = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, Cm = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Lm = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Rm = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`, Pm = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Im = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Dm = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, Fm = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Nm = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Bm = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, zm = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, Um = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Om = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Hm = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, km = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, Gm = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, Fe = {
    alphamap_fragment: xf,
    alphamap_pars_fragment: yf,
    alphatest_fragment: vf,
    alphatest_pars_fragment: _f,
    aomap_fragment: Mf,
    aomap_pars_fragment: bf,
    begin_vertex: wf,
    beginnormal_vertex: Sf,
    bsdfs: Tf,
    bumpmap_pars_fragment: Ef,
    clipping_planes_fragment: Af,
    clipping_planes_pars_fragment: Cf,
    clipping_planes_pars_vertex: Lf,
    clipping_planes_vertex: Rf,
    color_fragment: Pf,
    color_pars_fragment: If,
    color_pars_vertex: Df,
    color_vertex: Ff,
    common: Nf,
    cube_uv_reflection_fragment: Bf,
    defaultnormal_vertex: zf,
    displacementmap_pars_vertex: Uf,
    displacementmap_vertex: Of,
    emissivemap_fragment: Hf,
    emissivemap_pars_fragment: kf,
    encodings_fragment: Gf,
    encodings_pars_fragment: Vf,
    envmap_fragment: Wf,
    envmap_common_pars_fragment: qf,
    envmap_pars_fragment: Xf,
    envmap_pars_vertex: Jf,
    envmap_physical_pars_fragment: rp,
    envmap_vertex: Yf,
    fog_vertex: Zf,
    fog_pars_vertex: $f,
    fog_fragment: jf,
    fog_pars_fragment: Qf,
    gradientmap_pars_fragment: Kf,
    lightmap_fragment: ep,
    lightmap_pars_fragment: tp,
    lights_lambert_vertex: np,
    lights_pars_begin: ip,
    lights_toon_fragment: sp,
    lights_toon_pars_fragment: op,
    lights_phong_fragment: ap,
    lights_phong_pars_fragment: lp,
    lights_physical_fragment: cp,
    lights_physical_pars_fragment: hp,
    lights_fragment_begin: up,
    lights_fragment_maps: dp,
    lights_fragment_end: fp,
    logdepthbuf_fragment: pp,
    logdepthbuf_pars_fragment: mp,
    logdepthbuf_pars_vertex: gp,
    logdepthbuf_vertex: xp,
    map_fragment: yp,
    map_pars_fragment: vp,
    map_particle_fragment: _p,
    map_particle_pars_fragment: Mp,
    metalnessmap_fragment: bp,
    metalnessmap_pars_fragment: wp,
    morphnormal_vertex: Sp,
    morphtarget_pars_vertex: Tp,
    morphtarget_vertex: Ep,
    normal_fragment_begin: Ap,
    normal_fragment_maps: Cp,
    normal_pars_fragment: Lp,
    normal_pars_vertex: Rp,
    normal_vertex: Pp,
    normalmap_pars_fragment: Ip,
    clearcoat_normal_fragment_begin: Dp,
    clearcoat_normal_fragment_maps: Fp,
    clearcoat_pars_fragment: Np,
    output_fragment: Bp,
    packing: zp,
    premultiplied_alpha_fragment: Up,
    project_vertex: Op,
    dithering_fragment: Hp,
    dithering_pars_fragment: kp,
    roughnessmap_fragment: Gp,
    roughnessmap_pars_fragment: Vp,
    shadowmap_pars_fragment: Wp,
    shadowmap_pars_vertex: qp,
    shadowmap_vertex: Xp,
    shadowmask_pars_fragment: Jp,
    skinbase_vertex: Yp,
    skinning_pars_vertex: Zp,
    skinning_vertex: $p,
    skinnormal_vertex: jp,
    specularmap_fragment: Qp,
    specularmap_pars_fragment: Kp,
    tonemapping_fragment: em,
    tonemapping_pars_fragment: tm,
    transmission_fragment: nm,
    transmission_pars_fragment: im,
    uv_pars_fragment: rm,
    uv_pars_vertex: sm,
    uv_vertex: om,
    uv2_pars_fragment: am,
    uv2_pars_vertex: lm,
    uv2_vertex: cm,
    worldpos_vertex: hm,
    background_vert: um,
    background_frag: dm,
    cube_vert: fm,
    cube_frag: pm,
    depth_vert: mm,
    depth_frag: gm,
    distanceRGBA_vert: xm,
    distanceRGBA_frag: ym,
    equirect_vert: vm,
    equirect_frag: _m,
    linedashed_vert: Mm,
    linedashed_frag: bm,
    meshbasic_vert: wm,
    meshbasic_frag: Sm,
    meshlambert_vert: Tm,
    meshlambert_frag: Em,
    meshmatcap_vert: Am,
    meshmatcap_frag: Cm,
    meshnormal_vert: Lm,
    meshnormal_frag: Rm,
    meshphong_vert: Pm,
    meshphong_frag: Im,
    meshphysical_vert: Dm,
    meshphysical_frag: Fm,
    meshtoon_vert: Nm,
    meshtoon_frag: Bm,
    points_vert: zm,
    points_frag: Um,
    shadow_vert: Om,
    shadow_frag: Hm,
    sprite_vert: km,
    sprite_frag: Gm
}, ie = {
    common: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        map: {
            value: null
        },
        uvTransform: {
            value: new lt
        },
        uv2Transform: {
            value: new lt
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        }
    },
    specularmap: {
        specularMap: {
            value: null
        }
    },
    envmap: {
        envMap: {
            value: null
        },
        flipEnvMap: {
            value: -1
        },
        reflectivity: {
            value: 1
        },
        ior: {
            value: 1.5
        },
        refractionRatio: {
            value: .98
        }
    },
    aomap: {
        aoMap: {
            value: null
        },
        aoMapIntensity: {
            value: 1
        }
    },
    lightmap: {
        lightMap: {
            value: null
        },
        lightMapIntensity: {
            value: 1
        }
    },
    emissivemap: {
        emissiveMap: {
            value: null
        }
    },
    bumpmap: {
        bumpMap: {
            value: null
        },
        bumpScale: {
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            value: null
        },
        normalScale: {
            value: new X(1, 1)
        }
    },
    displacementmap: {
        displacementMap: {
            value: null
        },
        displacementScale: {
            value: 1
        },
        displacementBias: {
            value: 0
        }
    },
    roughnessmap: {
        roughnessMap: {
            value: null
        }
    },
    metalnessmap: {
        metalnessMap: {
            value: null
        }
    },
    gradientmap: {
        gradientMap: {
            value: null
        }
    },
    fog: {
        fogDensity: {
            value: 25e-5
        },
        fogNear: {
            value: 1
        },
        fogFar: {
            value: 2e3
        },
        fogColor: {
            value: new ae(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            value: []
        },
        lightProbe: {
            value: []
        },
        directionalLights: {
            value: [],
            properties: {
                direction: {},
                color: {}
            }
        },
        directionalLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        directionalShadowMap: {
            value: []
        },
        directionalShadowMatrix: {
            value: []
        },
        spotLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {}
            }
        },
        spotLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        spotShadowMap: {
            value: []
        },
        spotShadowMatrix: {
            value: []
        },
        pointLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                decay: {},
                distance: {}
            }
        },
        pointLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {}
            }
        },
        pointShadowMap: {
            value: []
        },
        pointShadowMatrix: {
            value: []
        },
        hemisphereLights: {
            value: [],
            properties: {
                direction: {},
                skyColor: {},
                groundColor: {}
            }
        },
        rectAreaLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                width: {},
                height: {}
            }
        },
        ltc_1: {
            value: null
        },
        ltc_2: {
            value: null
        }
    },
    points: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        size: {
            value: 1
        },
        scale: {
            value: 1
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    },
    sprite: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        center: {
            value: new X(.5, .5)
        },
        rotation: {
            value: 0
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    }
}, qt = {
    basic: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.fog
        ]),
        vertexShader: Fe.meshbasic_vert,
        fragmentShader: Fe.meshbasic_frag
    },
    lambert: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshlambert_vert,
        fragmentShader: Fe.meshlambert_frag
    },
    phong: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                specular: {
                    value: new ae(1118481)
                },
                shininess: {
                    value: 30
                }
            }
        ]),
        vertexShader: Fe.meshphong_vert,
        fragmentShader: Fe.meshphong_frag
    },
    standard: {
        uniforms: yt([
            ie.common,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.roughnessmap,
            ie.metalnessmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                roughness: {
                    value: 1
                },
                metalness: {
                    value: 0
                },
                envMapIntensity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshphysical_vert,
        fragmentShader: Fe.meshphysical_frag
    },
    toon: {
        uniforms: yt([
            ie.common,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.gradientmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshtoon_vert,
        fragmentShader: Fe.meshtoon_frag
    },
    matcap: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            {
                matcap: {
                    value: null
                }
            }
        ]),
        vertexShader: Fe.meshmatcap_vert,
        fragmentShader: Fe.meshmatcap_frag
    },
    points: {
        uniforms: yt([
            ie.points,
            ie.fog
        ]),
        vertexShader: Fe.points_vert,
        fragmentShader: Fe.points_frag
    },
    dashed: {
        uniforms: yt([
            ie.common,
            ie.fog,
            {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }
        ]),
        vertexShader: Fe.linedashed_vert,
        fragmentShader: Fe.linedashed_frag
    },
    depth: {
        uniforms: yt([
            ie.common,
            ie.displacementmap
        ]),
        vertexShader: Fe.depth_vert,
        fragmentShader: Fe.depth_frag
    },
    normal: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshnormal_vert,
        fragmentShader: Fe.meshnormal_frag
    },
    sprite: {
        uniforms: yt([
            ie.sprite,
            ie.fog
        ]),
        vertexShader: Fe.sprite_vert,
        fragmentShader: Fe.sprite_frag
    },
    background: {
        uniforms: {
            uvTransform: {
                value: new lt
            },
            t2D: {
                value: null
            }
        },
        vertexShader: Fe.background_vert,
        fragmentShader: Fe.background_frag
    },
    cube: {
        uniforms: yt([
            ie.envmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.cube_vert,
        fragmentShader: Fe.cube_frag
    },
    equirect: {
        uniforms: {
            tEquirect: {
                value: null
            }
        },
        vertexShader: Fe.equirect_vert,
        fragmentShader: Fe.equirect_frag
    },
    distanceRGBA: {
        uniforms: yt([
            ie.common,
            ie.displacementmap,
            {
                referencePosition: {
                    value: new M
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }
        ]),
        vertexShader: Fe.distanceRGBA_vert,
        fragmentShader: Fe.distanceRGBA_frag
    },
    shadow: {
        uniforms: yt([
            ie.lights,
            ie.fog,
            {
                color: {
                    value: new ae(0)
                },
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.shadow_vert,
        fragmentShader: Fe.shadow_frag
    }
};
qt.physical = {
    uniforms: yt([
        qt.standard.uniforms,
        {
            clearcoat: {
                value: 0
            },
            clearcoatMap: {
                value: null
            },
            clearcoatRoughness: {
                value: 0
            },
            clearcoatRoughnessMap: {
                value: null
            },
            clearcoatNormalScale: {
                value: new X(1, 1)
            },
            clearcoatNormalMap: {
                value: null
            },
            sheen: {
                value: 0
            },
            sheenColor: {
                value: new ae(0)
            },
            sheenColorMap: {
                value: null
            },
            sheenRoughness: {
                value: 0
            },
            sheenRoughnessMap: {
                value: null
            },
            transmission: {
                value: 0
            },
            transmissionMap: {
                value: null
            },
            transmissionSamplerSize: {
                value: new X
            },
            transmissionSamplerMap: {
                value: null
            },
            thickness: {
                value: 0
            },
            thicknessMap: {
                value: null
            },
            attenuationDistance: {
                value: 0
            },
            attenuationColor: {
                value: new ae(0)
            },
            specularIntensity: {
                value: 0
            },
            specularIntensityMap: {
                value: null
            },
            specularColor: {
                value: new ae(1, 1, 1)
            },
            specularColorMap: {
                value: null
            }
        }
    ]),
    vertexShader: Fe.meshphysical_vert,
    fragmentShader: Fe.meshphysical_frag
};
function Vm(s, e, t, n, i) {
    let r = new ae(0), o = 0, a, l, c = null, h = 0, u = null;
    function d(m, x) {
        let v = !1, g = x.isScene === !0 ? x.background : null;
        g && g.isTexture && (g = e.get(g));
        let p = s.xr, _ = p.getSession && p.getSession();
        _ && _.environmentBlendMode === "additive" && (g = null), g === null ? f(r, o) : g && g.isColor && (f(g, 1), v = !0), (s.autoClear || v) && s.clear(s.autoClearColor, s.autoClearDepth, s.autoClearStencil), g && (g.isCubeTexture || g.mapping === Pr) ? (l === void 0 && (l = new st(new wn(1, 1, 1), new sn({
            name: "BackgroundCubeMaterial",
            uniforms: Ri(qt.cube.uniforms),
            vertexShader: qt.cube.vertexShader,
            fragmentShader: qt.cube.fragmentShader,
            side: it,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), l.geometry.deleteAttribute("normal"), l.geometry.deleteAttribute("uv"), l.onBeforeRender = function(y, b, A) {
            this.matrixWorld.copyPosition(A.matrixWorld);
        }, Object.defineProperty(l.material, "envMap", {
            get: function() {
                return this.uniforms.envMap.value;
            }
        }), n.update(l)), l.material.uniforms.envMap.value = g, l.material.uniforms.flipEnvMap.value = g.isCubeTexture && g.isRenderTargetTexture === !1 ? -1 : 1, (c !== g || h !== g.version || u !== s.toneMapping) && (l.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(l, l.geometry, l.material, 0, 0, null)) : g && g.isTexture && (a === void 0 && (a = new st(new Pi(2, 2), new sn({
            name: "BackgroundMaterial",
            uniforms: Ri(qt.background.uniforms),
            vertexShader: qt.background.vertexShader,
            fragmentShader: qt.background.fragmentShader,
            side: Ai,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), a.geometry.deleteAttribute("normal"), Object.defineProperty(a.material, "map", {
            get: function() {
                return this.uniforms.t2D.value;
            }
        }), n.update(a)), a.material.uniforms.t2D.value = g, g.matrixAutoUpdate === !0 && g.updateMatrix(), a.material.uniforms.uvTransform.value.copy(g.matrix), (c !== g || h !== g.version || u !== s.toneMapping) && (a.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(a, a.geometry, a.material, 0, 0, null));
    }
    function f(m, x) {
        t.buffers.color.setClear(m.r, m.g, m.b, x, i);
    }
    return {
        getClearColor: function() {
            return r;
        },
        setClearColor: function(m, x = 1) {
            r.set(m), o = x, f(r, o);
        },
        getClearAlpha: function() {
            return o;
        },
        setClearAlpha: function(m) {
            o = m, f(r, o);
        },
        render: d
    };
}
function Wm(s, e, t, n) {
    let i = s.getParameter(34921), r = n.isWebGL2 ? null : e.get("OES_vertex_array_object"), o = n.isWebGL2 || r !== null, a = {}, l = x(null), c = l;
    function h(E, D, U, F, O) {
        let ne = !1;
        if (o) {
            let ce = m(F, U, D);
            c !== ce && (c = ce, d(c.object)), ne = v(F, O), ne && g(F, O);
        } else {
            let ce = D.wireframe === !0;
            (c.geometry !== F.id || c.program !== U.id || c.wireframe !== ce) && (c.geometry = F.id, c.program = U.id, c.wireframe = ce, ne = !0);
        }
        E.isInstancedMesh === !0 && (ne = !0), O !== null && t.update(O, 34963), ne && (L(E, D, U, F), O !== null && s.bindBuffer(34963, t.get(O).buffer));
    }
    function u() {
        return n.isWebGL2 ? s.createVertexArray() : r.createVertexArrayOES();
    }
    function d(E) {
        return n.isWebGL2 ? s.bindVertexArray(E) : r.bindVertexArrayOES(E);
    }
    function f(E) {
        return n.isWebGL2 ? s.deleteVertexArray(E) : r.deleteVertexArrayOES(E);
    }
    function m(E, D, U) {
        let F = U.wireframe === !0, O = a[E.id];
        O === void 0 && (O = {}, a[E.id] = O);
        let ne = O[D.id];
        ne === void 0 && (ne = {}, O[D.id] = ne);
        let ce = ne[F];
        return ce === void 0 && (ce = x(u()), ne[F] = ce), ce;
    }
    function x(E) {
        let D = [], U = [], F = [];
        for(let O = 0; O < i; O++)D[O] = 0, U[O] = 0, F[O] = 0;
        return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: D,
            enabledAttributes: U,
            attributeDivisors: F,
            object: E,
            attributes: {},
            index: null
        };
    }
    function v(E, D) {
        let U = c.attributes, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = U[ne], V = F[ne];
            if (ce === void 0 || ce.attribute !== V || ce.data !== V.data) return !0;
            O++;
        }
        return c.attributesNum !== O || c.index !== D;
    }
    function g(E, D) {
        let U = {}, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = F[ne], V = {};
            V.attribute = ce, ce.data && (V.data = ce.data), U[ne] = V, O++;
        }
        c.attributes = U, c.attributesNum = O, c.index = D;
    }
    function p() {
        let E = c.newAttributes;
        for(let D = 0, U = E.length; D < U; D++)E[D] = 0;
    }
    function _(E) {
        y(E, 0);
    }
    function y(E, D) {
        let U = c.newAttributes, F = c.enabledAttributes, O = c.attributeDivisors;
        U[E] = 1, F[E] === 0 && (s.enableVertexAttribArray(E), F[E] = 1), O[E] !== D && ((n.isWebGL2 ? s : e.get("ANGLE_instanced_arrays"))[n.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](E, D), O[E] = D);
    }
    function b() {
        let E = c.newAttributes, D = c.enabledAttributes;
        for(let U = 0, F = D.length; U < F; U++)D[U] !== E[U] && (s.disableVertexAttribArray(U), D[U] = 0);
    }
    function A(E, D, U, F, O, ne) {
        n.isWebGL2 === !0 && (U === 5124 || U === 5125) ? s.vertexAttribIPointer(E, D, U, O, ne) : s.vertexAttribPointer(E, D, U, F, O, ne);
    }
    function L(E, D, U, F) {
        if (n.isWebGL2 === !1 && (E.isInstancedMesh || F.isInstancedBufferGeometry) && e.get("ANGLE_instanced_arrays") === null) return;
        p();
        let O = F.attributes, ne = U.getAttributes(), ce = D.defaultAttributeValues;
        for(let V in ne){
            let W = ne[V];
            if (W.location >= 0) {
                let he = O[V];
                if (he === void 0 && (V === "instanceMatrix" && E.instanceMatrix && (he = E.instanceMatrix), V === "instanceColor" && E.instanceColor && (he = E.instanceColor)), he !== void 0) {
                    let le = he.normalized, fe = he.itemSize, Be = t.get(he);
                    if (Be === void 0) continue;
                    let Y = Be.buffer, Ce = Be.type, ye = Be.bytesPerElement;
                    if (he.isInterleavedBufferAttribute) {
                        let ge = he.data, xe = ge.stride, Oe = he.offset;
                        if (ge && ge.isInstancedInterleavedBuffer) {
                            for(let G = 0; G < W.locationSize; G++)y(W.location + G, ge.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = ge.meshPerAttribute * ge.count);
                        } else for(let G = 0; G < W.locationSize; G++)_(W.location + G);
                        s.bindBuffer(34962, Y);
                        for(let G = 0; G < W.locationSize; G++)A(W.location + G, fe / W.locationSize, Ce, le, xe * ye, (Oe + fe / W.locationSize * G) * ye);
                    } else {
                        if (he.isInstancedBufferAttribute) {
                            for(let ge = 0; ge < W.locationSize; ge++)y(W.location + ge, he.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = he.meshPerAttribute * he.count);
                        } else for(let ge = 0; ge < W.locationSize; ge++)_(W.location + ge);
                        s.bindBuffer(34962, Y);
                        for(let ge = 0; ge < W.locationSize; ge++)A(W.location + ge, fe / W.locationSize, Ce, le, fe * ye, fe / W.locationSize * ge * ye);
                    }
                } else if (ce !== void 0) {
                    let le = ce[V];
                    if (le !== void 0) switch(le.length){
                        case 2:
                            s.vertexAttrib2fv(W.location, le);
                            break;
                        case 3:
                            s.vertexAttrib3fv(W.location, le);
                            break;
                        case 4:
                            s.vertexAttrib4fv(W.location, le);
                            break;
                        default:
                            s.vertexAttrib1fv(W.location, le);
                    }
                }
            }
        }
        b();
    }
    function I() {
        P();
        for(let E in a){
            let D = a[E];
            for(let U in D){
                let F = D[U];
                for(let O in F)f(F[O].object), delete F[O];
                delete D[U];
            }
            delete a[E];
        }
    }
    function k(E) {
        if (a[E.id] === void 0) return;
        let D = a[E.id];
        for(let U in D){
            let F = D[U];
            for(let O in F)f(F[O].object), delete F[O];
            delete D[U];
        }
        delete a[E.id];
    }
    function B(E) {
        for(let D in a){
            let U = a[D];
            if (U[E.id] === void 0) continue;
            let F = U[E.id];
            for(let O in F)f(F[O].object), delete F[O];
            delete U[E.id];
        }
    }
    function P() {
        w(), c !== l && (c = l, d(c.object));
    }
    function w() {
        l.geometry = null, l.program = null, l.wireframe = !1;
    }
    return {
        setup: h,
        reset: P,
        resetDefaultState: w,
        dispose: I,
        releaseStatesOfGeometry: k,
        releaseStatesOfProgram: B,
        initAttributes: p,
        enableAttribute: _,
        disableUnusedAttributes: b
    };
}
function qm(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(c) {
        r = c;
    }
    function a(c, h) {
        s.drawArrays(r, c, h), t.update(h, r, 1);
    }
    function l(c, h, u) {
        if (u === 0) return;
        let d, f;
        if (i) d = s, f = "drawArraysInstanced";
        else if (d = e.get("ANGLE_instanced_arrays"), f = "drawArraysInstancedANGLE", d === null) {
            console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        d[f](r, c, h, u), t.update(h, r, u);
    }
    this.setMode = o, this.render = a, this.renderInstances = l;
}
function Xm(s, e, t) {
    let n;
    function i() {
        if (n !== void 0) return n;
        if (e.has("EXT_texture_filter_anisotropic") === !0) {
            let L = e.get("EXT_texture_filter_anisotropic");
            n = s.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        } else n = 0;
        return n;
    }
    function r(L) {
        if (L === "highp") {
            if (s.getShaderPrecisionFormat(35633, 36338).precision > 0 && s.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
            L = "mediump";
        }
        return L === "mediump" && s.getShaderPrecisionFormat(35633, 36337).precision > 0 && s.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp";
    }
    let o = typeof WebGL2RenderingContext < "u" && s instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext < "u" && s instanceof WebGL2ComputeRenderingContext, a = t.precision !== void 0 ? t.precision : "highp", l = r(a);
    l !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", l, "instead."), a = l);
    let c = o || e.has("WEBGL_draw_buffers"), h = t.logarithmicDepthBuffer === !0, u = s.getParameter(34930), d = s.getParameter(35660), f = s.getParameter(3379), m = s.getParameter(34076), x = s.getParameter(34921), v = s.getParameter(36347), g = s.getParameter(36348), p = s.getParameter(36349), _ = d > 0, y = o || e.has("OES_texture_float"), b = _ && y, A = o ? s.getParameter(36183) : 0;
    return {
        isWebGL2: o,
        drawBuffers: c,
        getMaxAnisotropy: i,
        getMaxPrecision: r,
        precision: a,
        logarithmicDepthBuffer: h,
        maxTextures: u,
        maxVertexTextures: d,
        maxTextureSize: f,
        maxCubemapSize: m,
        maxAttributes: x,
        maxVertexUniforms: v,
        maxVaryings: g,
        maxFragmentUniforms: p,
        vertexTextures: _,
        floatFragmentTextures: y,
        floatVertexTextures: b,
        maxSamples: A
    };
}
function Jm(s) {
    let e = this, t = null, n = 0, i = !1, r = !1, o = new Wt, a = new lt, l = {
        value: null,
        needsUpdate: !1
    };
    this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(u, d, f) {
        let m = u.length !== 0 || d || n !== 0 || i;
        return i = d, t = h(u, f, 0), n = u.length, m;
    }, this.beginShadows = function() {
        r = !0, h(null);
    }, this.endShadows = function() {
        r = !1, c();
    }, this.setState = function(u, d, f) {
        let m = u.clippingPlanes, x = u.clipIntersection, v = u.clipShadows, g = s.get(u);
        if (!i || m === null || m.length === 0 || r && !v) r ? h(null) : c();
        else {
            let p = r ? 0 : n, _ = p * 4, y = g.clippingState || null;
            l.value = y, y = h(m, d, _, f);
            for(let b = 0; b !== _; ++b)y[b] = t[b];
            g.clippingState = y, this.numIntersection = x ? this.numPlanes : 0, this.numPlanes += p;
        }
    };
    function c() {
        l.value !== t && (l.value = t, l.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0;
    }
    function h(u, d, f, m) {
        let x = u !== null ? u.length : 0, v = null;
        if (x !== 0) {
            if (v = l.value, m !== !0 || v === null) {
                let g = f + x * 4, p = d.matrixWorldInverse;
                a.getNormalMatrix(p), (v === null || v.length < g) && (v = new Float32Array(g));
                for(let _ = 0, y = f; _ !== x; ++_, y += 4)o.copy(u[_]).applyMatrix4(p, a), o.normal.toArray(v, y), v[y + 3] = o.constant;
            }
            l.value = v, l.needsUpdate = !0;
        }
        return e.numPlanes = x, e.numIntersection = 0, v;
    }
}
function Ym(s) {
    let e = new WeakMap;
    function t(o, a) {
        return a === Ds ? o.mapping = Bi : a === Fs && (o.mapping = zi), o;
    }
    function n(o) {
        if (o && o.isTexture && o.isRenderTargetTexture === !1) {
            let a = o.mapping;
            if (a === Ds || a === Fs) if (e.has(o)) {
                let l = e.get(o).texture;
                return t(l, o.mapping);
            } else {
                let l = o.image;
                if (l && l.height > 0) {
                    let c = s.getRenderTarget(), h = new js(l.height / 2);
                    return h.fromEquirectangularTexture(s, o), e.set(o, h), s.setRenderTarget(c), o.addEventListener("dispose", i), t(h.texture, o.mapping);
                } else return null;
            }
        }
        return o;
    }
    function i(o) {
        let a = o.target;
        a.removeEventListener("dispose", i);
        let l = e.get(a);
        l !== void 0 && (e.delete(a), l.dispose());
    }
    function r() {
        e = new WeakMap;
    }
    return {
        get: n,
        dispose: r
    };
}
var Fr = class extends Ir {
    constructor(e = -1, t = 1, n = 1, i = -1, r = .1, o = 2e3){
        super();
        this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = t, this.top = n, this.bottom = i, this.near = r, this.far = o, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
    }
    setViewOffset(e, t, n, i, r, o) {
        this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, r = n - e, o = n + e, a = i + t, l = i - t;
        if (this.view !== null && this.view.enabled) {
            let c = (this.right - this.left) / this.view.fullWidth / this.zoom, h = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            r += c * this.view.offsetX, o = r + c * this.view.width, a -= h * this.view.offsetY, l = a - h * this.view.height;
        }
        this.projectionMatrix.makeOrthographic(r, o, a, l, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, this.view !== null && (t.object.view = Object.assign({}, this.view)), t;
    }
};
Fr.prototype.isOrthographicCamera = !0;
var Gi = class extends sn {
    constructor(e){
        super(e);
        this.type = "RawShaderMaterial";
    }
};
Gi.prototype.isRawShaderMaterial = !0;
var Ei = 4, Mn = 8, Vt = Math.pow(2, Mn), sh = [
    .125,
    .215,
    .35,
    .446,
    .526,
    .582
], oh = Mn - Ei + 1 + sh.length, pi = 20, Hs = {
    [Nt]: 0,
    [Oi]: 1
}, Go = new Fr, { _lodPlanes: ji , _sizeLods: Ll , _sigmas: ls  } = Zm(), Rl = new ae, Vo = null, On = (1 + Math.sqrt(5)) / 2, mi = 1 / On, Pl = [
    new M(1, 1, 1),
    new M(-1, 1, 1),
    new M(1, 1, -1),
    new M(-1, 1, -1),
    new M(0, On, mi),
    new M(0, On, -mi),
    new M(mi, 0, On),
    new M(-mi, 0, On),
    new M(On, mi, 0),
    new M(-On, mi, 0)
], ah = class {
    constructor(e){
        this._renderer = e, this._pingPongRenderTarget = null, this._blurMaterial = $m(pi), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial);
    }
    fromScene(e, t = 0, n = .1, i = 100) {
        Vo = this._renderer.getRenderTarget();
        let r = this._allocateTargets();
        return this._sceneToCubeUV(e, n, i, r), t > 0 && this._blur(r, 0, 0, t), this._applyPMREM(r), this._cleanup(r), r;
    }
    fromEquirectangular(e) {
        return this._fromTexture(e);
    }
    fromCubemap(e) {
        return this._fromTexture(e);
    }
    compileCubemapShader() {
        this._cubemapShader === null && (this._cubemapShader = Fl(), this._compileMaterial(this._cubemapShader));
    }
    compileEquirectangularShader() {
        this._equirectShader === null && (this._equirectShader = Dl(), this._compileMaterial(this._equirectShader));
    }
    dispose() {
        this._blurMaterial.dispose(), this._cubemapShader !== null && this._cubemapShader.dispose(), this._equirectShader !== null && this._equirectShader.dispose();
        for(let e = 0; e < ji.length; e++)ji[e].dispose();
    }
    _cleanup(e) {
        this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Vo), e.scissorTest = !1, cs(e, 0, 0, e.width, e.height);
    }
    _fromTexture(e) {
        Vo = this._renderer.getRenderTarget();
        let t = this._allocateTargets(e);
        return this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t;
    }
    _allocateTargets(e) {
        let t = {
            magFilter: tt,
            minFilter: tt,
            generateMipmaps: !1,
            type: kn,
            format: ct,
            encoding: Nt,
            depthBuffer: !1
        }, n = Il(t);
        return n.depthBuffer = !e, this._pingPongRenderTarget = Il(t), n;
    }
    _compileMaterial(e) {
        let t = new st(ji[0], e);
        this._renderer.compile(t, Go);
    }
    _sceneToCubeUV(e, t, n, i) {
        let a = new ut(90, 1, t, n), l = [
            1,
            -1,
            1,
            1,
            1,
            1
        ], c = [
            1,
            1,
            1,
            -1,
            -1,
            -1
        ], h = this._renderer, u = h.autoClear, d = h.toneMapping;
        h.getClearColor(Rl), h.toneMapping = _n, h.autoClear = !1;
        let f = new hn({
            name: "PMREM.Background",
            side: it,
            depthWrite: !1,
            depthTest: !1
        }), m = new st(new wn, f), x = !1, v = e.background;
        v ? v.isColor && (f.color.copy(v), e.background = null, x = !0) : (f.color.copy(Rl), x = !0);
        for(let g = 0; g < 6; g++){
            let p = g % 3;
            p == 0 ? (a.up.set(0, l[g], 0), a.lookAt(c[g], 0, 0)) : p == 1 ? (a.up.set(0, 0, l[g]), a.lookAt(0, c[g], 0)) : (a.up.set(0, l[g], 0), a.lookAt(0, 0, c[g])), cs(i, p * Vt, g > 2 ? Vt : 0, Vt, Vt), h.setRenderTarget(i), x && h.render(m, a), h.render(e, a);
        }
        m.geometry.dispose(), m.material.dispose(), h.toneMapping = d, h.autoClear = u, e.background = v;
    }
    _setEncoding(e, t) {
        this._renderer.capabilities.isWebGL2 === !0 && t.format === ct && t.type === rn && t.encoding === Oi ? e.value = Hs[Nt] : e.value = Hs[t.encoding];
    }
    _textureToCubeUV(e, t) {
        let n = this._renderer, i = e.mapping === Bi || e.mapping === zi;
        i ? this._cubemapShader == null && (this._cubemapShader = Fl()) : this._equirectShader == null && (this._equirectShader = Dl());
        let r = i ? this._cubemapShader : this._equirectShader, o = new st(ji[0], r), a = r.uniforms;
        a.envMap.value = e, i || a.texelSize.value.set(1 / e.image.width, 1 / e.image.height), this._setEncoding(a.inputEncoding, e), cs(t, 0, 0, 3 * Vt, 2 * Vt), n.setRenderTarget(t), n.render(o, Go);
    }
    _applyPMREM(e) {
        let t = this._renderer, n = t.autoClear;
        t.autoClear = !1;
        for(let i = 1; i < oh; i++){
            let r = Math.sqrt(ls[i] * ls[i] - ls[i - 1] * ls[i - 1]), o = Pl[(i - 1) % Pl.length];
            this._blur(e, i - 1, i, r, o);
        }
        t.autoClear = n;
    }
    _blur(e, t, n, i, r) {
        let o = this._pingPongRenderTarget;
        this._halfBlur(e, o, t, n, i, "latitudinal", r), this._halfBlur(o, e, n, n, i, "longitudinal", r);
    }
    _halfBlur(e, t, n, i, r, o, a) {
        let l = this._renderer, c = this._blurMaterial;
        o !== "latitudinal" && o !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
        let h = 3, u = new st(ji[i], c), d = c.uniforms, f = Ll[n] - 1, m = isFinite(r) ? Math.PI / (2 * f) : 2 * Math.PI / (2 * pi - 1), x = r / m, v = isFinite(r) ? 1 + Math.floor(h * x) : pi;
        v > pi && console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${pi}`);
        let g = [], p = 0;
        for(let A = 0; A < pi; ++A){
            let L = A / x, I = Math.exp(-L * L / 2);
            g.push(I), A == 0 ? p += I : A < v && (p += 2 * I);
        }
        for(let A = 0; A < g.length; A++)g[A] = g[A] / p;
        d.envMap.value = e.texture, d.samples.value = v, d.weights.value = g, d.latitudinal.value = o === "latitudinal", a && (d.poleAxis.value = a), d.dTheta.value = m, d.mipInt.value = Mn - n;
        let _ = Ll[i], y = 3 * Math.max(0, Vt - 2 * _), b = (i === 0 ? 0 : 2 * Vt) + 2 * _ * (i > Mn - Ei ? i - Mn + Ei : 0);
        cs(t, y, b, 3 * _, 2 * _), l.setRenderTarget(t), l.render(u, Go);
    }
};
function Zm() {
    let s = [], e = [], t = [], n = Mn;
    for(let i = 0; i < oh; i++){
        let r = Math.pow(2, n);
        e.push(r);
        let o = 1 / r;
        i > Mn - Ei ? o = sh[i - Mn + Ei - 1] : i == 0 && (o = 0), t.push(o);
        let a = 1 / (r - 1), l = -a / 2, c = 1 + a / 2, h = [
            l,
            l,
            c,
            l,
            c,
            c,
            l,
            l,
            c,
            c,
            l,
            c
        ], u = 6, d = 6, f = 3, m = 2, x = 1, v = new Float32Array(f * d * u), g = new Float32Array(m * d * u), p = new Float32Array(x * d * u);
        for(let y = 0; y < u; y++){
            let b = y % 3 * 2 / 3 - 1, A = y > 2 ? 0 : -1, L = [
                b,
                A,
                0,
                b + 2 / 3,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A + 1,
                0
            ];
            v.set(L, f * d * y), g.set(h, m * d * y);
            let I = [
                y,
                y,
                y,
                y,
                y,
                y
            ];
            p.set(I, x * d * y);
        }
        let _ = new _e;
        _.setAttribute("position", new Ue(v, f)), _.setAttribute("uv", new Ue(g, m)), _.setAttribute("faceIndex", new Ue(p, x)), s.push(_), n > Ei && n--;
    }
    return {
        _lodPlanes: s,
        _sizeLods: e,
        _sigmas: t
    };
}
function Il(s) {
    let e = new At(3 * Vt, 3 * Vt, s);
    return e.texture.mapping = Pr, e.texture.name = "PMREM.cubeUv", e.scissorTest = !0, e;
}
function cs(s, e, t, n, i) {
    s.viewport.set(e, t, n, i), s.scissor.set(e, t, n, i);
}
function $m(s) {
    let e = new Float32Array(s), t = new M(0, 1, 0);
    return new Gi({
        name: "SphericalGaussianBlur",
        defines: {
            n: s
        },
        uniforms: {
            envMap: {
                value: null
            },
            samples: {
                value: 1
            },
            weights: {
                value: e
            },
            latitudinal: {
                value: !1
            },
            dTheta: {
                value: 0
            },
            mipInt: {
                value: 0
            },
            poleAxis: {
                value: t
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${pa()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Dl() {
    let s = new X(1, 1);
    return new Gi({
        name: "EquirectangularToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            texelSize: {
                value: s
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${pa()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Fl() {
    return new Gi({
        name: "CubemapToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${pa()}

			void main() {

				gl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function fa() {
    return `

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function pa() {
    return `

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`;
}
function jm(s) {
    let e = new WeakMap, t = null;
    function n(a) {
        if (a && a.isTexture && a.isRenderTargetTexture === !1) {
            let l = a.mapping, c = l === Ds || l === Fs, h = l === Bi || l === zi;
            if (c || h) {
                if (e.has(a)) return e.get(a).texture;
                {
                    let u = a.image;
                    if (c && u && u.height > 0 || h && u && i(u)) {
                        let d = s.getRenderTarget();
                        t === null && (t = new ah(s));
                        let f = c ? t.fromEquirectangular(a) : t.fromCubemap(a);
                        return e.set(a, f), s.setRenderTarget(d), a.addEventListener("dispose", r), f.texture;
                    } else return null;
                }
            }
        }
        return a;
    }
    function i(a) {
        let l = 0, c = 6;
        for(let h = 0; h < c; h++)a[h] !== void 0 && l++;
        return l === c;
    }
    function r(a) {
        let l = a.target;
        l.removeEventListener("dispose", r);
        let c = e.get(l);
        c !== void 0 && (e.delete(l), c.dispose());
    }
    function o() {
        e = new WeakMap, t !== null && (t.dispose(), t = null);
    }
    return {
        get: n,
        dispose: o
    };
}
function Qm(s) {
    let e = {};
    function t(n) {
        if (e[n] !== void 0) return e[n];
        let i;
        switch(n){
            case "WEBGL_depth_texture":
                i = s.getExtension("WEBGL_depth_texture") || s.getExtension("MOZ_WEBGL_depth_texture") || s.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
            case "EXT_texture_filter_anisotropic":
                i = s.getExtension("EXT_texture_filter_anisotropic") || s.getExtension("MOZ_EXT_texture_filter_anisotropic") || s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
            case "WEBGL_compressed_texture_s3tc":
                i = s.getExtension("WEBGL_compressed_texture_s3tc") || s.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
            case "WEBGL_compressed_texture_pvrtc":
                i = s.getExtension("WEBGL_compressed_texture_pvrtc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
            default:
                i = s.getExtension(n);
        }
        return e[n] = i, i;
    }
    return {
        has: function(n) {
            return t(n) !== null;
        },
        init: function(n) {
            n.isWebGL2 ? t("EXT_color_buffer_float") : (t("WEBGL_depth_texture"), t("OES_texture_float"), t("OES_texture_half_float"), t("OES_texture_half_float_linear"), t("OES_standard_derivatives"), t("OES_element_index_uint"), t("OES_vertex_array_object"), t("ANGLE_instanced_arrays")), t("OES_texture_float_linear"), t("EXT_color_buffer_half_float"), t("WEBGL_multisampled_render_to_texture");
        },
        get: function(n) {
            let i = t(n);
            return i === null && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), i;
        }
    };
}
function Km(s, e, t, n) {
    let i = {}, r = new WeakMap;
    function o(u) {
        let d = u.target;
        d.index !== null && e.remove(d.index);
        for(let m in d.attributes)e.remove(d.attributes[m]);
        d.removeEventListener("dispose", o), delete i[d.id];
        let f = r.get(d);
        f && (e.remove(f), r.delete(d)), n.releaseStatesOfGeometry(d), d.isInstancedBufferGeometry === !0 && delete d._maxInstanceCount, t.memory.geometries--;
    }
    function a(u, d) {
        return i[d.id] === !0 || (d.addEventListener("dispose", o), i[d.id] = !0, t.memory.geometries++), d;
    }
    function l(u) {
        let d = u.attributes;
        for(let m in d)e.update(d[m], 34962);
        let f = u.morphAttributes;
        for(let m in f){
            let x = f[m];
            for(let v = 0, g = x.length; v < g; v++)e.update(x[v], 34962);
        }
    }
    function c(u) {
        let d = [], f = u.index, m = u.attributes.position, x = 0;
        if (f !== null) {
            let p = f.array;
            x = f.version;
            for(let _ = 0, y = p.length; _ < y; _ += 3){
                let b = p[_ + 0], A = p[_ + 1], L = p[_ + 2];
                d.push(b, A, A, L, L, b);
            }
        } else {
            let p = m.array;
            x = m.version;
            for(let _ = 0, y = p.length / 3 - 1; _ < y; _ += 3){
                let b = _ + 0, A = _ + 1, L = _ + 2;
                d.push(b, A, A, L, L, b);
            }
        }
        let v = new (Yc(d) > 65535 ? Zs : Ys)(d, 1);
        v.version = x;
        let g = r.get(u);
        g && e.remove(g), r.set(u, v);
    }
    function h(u) {
        let d = r.get(u);
        if (d) {
            let f = u.index;
            f !== null && d.version < f.version && c(u);
        } else c(u);
        return r.get(u);
    }
    return {
        get: a,
        update: l,
        getWireframeAttribute: h
    };
}
function eg(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(d) {
        r = d;
    }
    let a, l;
    function c(d) {
        a = d.type, l = d.bytesPerElement;
    }
    function h(d, f) {
        s.drawElements(r, f, a, d * l), t.update(f, r, 1);
    }
    function u(d, f, m) {
        if (m === 0) return;
        let x, v;
        if (i) x = s, v = "drawElementsInstanced";
        else if (x = e.get("ANGLE_instanced_arrays"), v = "drawElementsInstancedANGLE", x === null) {
            console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        x[v](r, f, a, d * l, m), t.update(f, r, m);
    }
    this.setMode = o, this.setIndex = c, this.render = h, this.renderInstances = u;
}
function tg(s) {
    let e = {
        geometries: 0,
        textures: 0
    }, t = {
        frame: 0,
        calls: 0,
        triangles: 0,
        points: 0,
        lines: 0
    };
    function n(r, o, a) {
        switch(t.calls++, o){
            case 4:
                t.triangles += a * (r / 3);
                break;
            case 1:
                t.lines += a * (r / 2);
                break;
            case 3:
                t.lines += a * (r - 1);
                break;
            case 2:
                t.lines += a * r;
                break;
            case 0:
                t.points += a * r;
                break;
            default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", o);
                break;
        }
    }
    function i() {
        t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
    }
    return {
        memory: e,
        render: t,
        programs: null,
        autoReset: !0,
        reset: i,
        update: n
    };
}
var Qs = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
Qs.prototype.isDataTexture2DArray = !0;
function ng(s, e) {
    return s[0] - e[0];
}
function ig(s, e) {
    return Math.abs(e[1]) - Math.abs(s[1]);
}
function Nl(s, e) {
    let t = 1, n = e.isInterleavedBufferAttribute ? e.data.array : e.array;
    n instanceof Int8Array ? t = 127 : n instanceof Int16Array ? t = 32767 : n instanceof Int32Array ? t = 2147483647 : console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ", n), s.divideScalar(t);
}
function rg(s, e, t) {
    let n = {}, i = new Float32Array(8), r = new WeakMap, o = new M, a = [];
    for(let c = 0; c < 8; c++)a[c] = [
        c,
        0
    ];
    function l(c, h, u, d) {
        let f = c.morphTargetInfluences;
        if (e.isWebGL2 === !0) {
            let m = h.morphAttributes.position.length, x = r.get(h);
            if (x === void 0 || x.count !== m) {
                x !== void 0 && x.texture.dispose();
                let p = h.morphAttributes.normal !== void 0, _ = h.morphAttributes.position, y = h.morphAttributes.normal || [], b = h.attributes.position.count, A = p === !0 ? 2 : 1, L = b * A, I = 1;
                L > e.maxTextureSize && (I = Math.ceil(L / e.maxTextureSize), L = e.maxTextureSize);
                let k = new Float32Array(L * I * 4 * m), B = new Qs(k, L, I, m);
                B.format = ct, B.type = nn, B.needsUpdate = !0;
                let P = A * 4;
                for(let w = 0; w < m; w++){
                    let E = _[w], D = y[w], U = L * I * 4 * w;
                    for(let F = 0; F < E.count; F++){
                        o.fromBufferAttribute(E, F), E.normalized === !0 && Nl(o, E);
                        let O = F * P;
                        k[U + O + 0] = o.x, k[U + O + 1] = o.y, k[U + O + 2] = o.z, k[U + O + 3] = 0, p === !0 && (o.fromBufferAttribute(D, F), D.normalized === !0 && Nl(o, D), k[U + O + 4] = o.x, k[U + O + 5] = o.y, k[U + O + 6] = o.z, k[U + O + 7] = 0);
                    }
                }
                x = {
                    count: m,
                    texture: B,
                    size: new X(L, I)
                }, r.set(h, x);
            }
            let v = 0;
            for(let p = 0; p < f.length; p++)v += f[p];
            let g = h.morphTargetsRelative ? 1 : 1 - v;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", g), d.getUniforms().setValue(s, "morphTargetInfluences", f), d.getUniforms().setValue(s, "morphTargetsTexture", x.texture, t), d.getUniforms().setValue(s, "morphTargetsTextureSize", x.size);
        } else {
            let m = f === void 0 ? 0 : f.length, x = n[h.id];
            if (x === void 0 || x.length !== m) {
                x = [];
                for(let y = 0; y < m; y++)x[y] = [
                    y,
                    0
                ];
                n[h.id] = x;
            }
            for(let y = 0; y < m; y++){
                let b = x[y];
                b[0] = y, b[1] = f[y];
            }
            x.sort(ig);
            for(let y = 0; y < 8; y++)y < m && x[y][1] ? (a[y][0] = x[y][0], a[y][1] = x[y][1]) : (a[y][0] = Number.MAX_SAFE_INTEGER, a[y][1] = 0);
            a.sort(ng);
            let v = h.morphAttributes.position, g = h.morphAttributes.normal, p = 0;
            for(let y = 0; y < 8; y++){
                let b = a[y], A = b[0], L = b[1];
                A !== Number.MAX_SAFE_INTEGER && L ? (v && h.getAttribute("morphTarget" + y) !== v[A] && h.setAttribute("morphTarget" + y, v[A]), g && h.getAttribute("morphNormal" + y) !== g[A] && h.setAttribute("morphNormal" + y, g[A]), i[y] = L, p += L) : (v && h.hasAttribute("morphTarget" + y) === !0 && h.deleteAttribute("morphTarget" + y), g && h.hasAttribute("morphNormal" + y) === !0 && h.deleteAttribute("morphNormal" + y), i[y] = 0);
            }
            let _ = h.morphTargetsRelative ? 1 : 1 - p;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", _), d.getUniforms().setValue(s, "morphTargetInfluences", i);
        }
    }
    return {
        update: l
    };
}
function sg(s, e, t, n) {
    let i = new WeakMap;
    function r(l) {
        let c = n.render.frame, h = l.geometry, u = e.get(l, h);
        return i.get(u) !== c && (e.update(u), i.set(u, c)), l.isInstancedMesh && (l.hasEventListener("dispose", a) === !1 && l.addEventListener("dispose", a), t.update(l.instanceMatrix, 34962), l.instanceColor !== null && t.update(l.instanceColor, 34962)), u;
    }
    function o() {
        i = new WeakMap;
    }
    function a(l) {
        let c = l.target;
        c.removeEventListener("dispose", a), t.remove(c.instanceMatrix), c.instanceColor !== null && t.remove(c.instanceColor);
    }
    return {
        update: r,
        dispose: o
    };
}
var ma = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
ma.prototype.isDataTexture3D = !0;
var lh = new ot, ch = new Qs, hh = new ma, uh = new ki, Bl = [], zl = [], Ul = new Float32Array(16), Ol = new Float32Array(9), Hl = new Float32Array(4);
function Vi(s, e, t) {
    let n = s[0];
    if (n <= 0 || n > 0) return s;
    let i = e * t, r = Bl[i];
    if (r === void 0 && (r = new Float32Array(i), Bl[i] = r), e !== 0) {
        n.toArray(r, 0);
        for(let o = 1, a = 0; o !== e; ++o)a += t, s[o].toArray(r, a);
    }
    return r;
}
function Mt(s, e) {
    if (s.length !== e.length) return !1;
    for(let t = 0, n = s.length; t < n; t++)if (s[t] !== e[t]) return !1;
    return !0;
}
function _t(s, e) {
    for(let t = 0, n = e.length; t < n; t++)s[t] = e[t];
}
function Ks(s, e) {
    let t = zl[e];
    t === void 0 && (t = new Int32Array(e), zl[e] = t);
    for(let n = 0; n !== e; ++n)t[n] = s.allocateTextureUnit();
    return t;
}
function og(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1f(this.addr, e), t[0] = e);
}
function ag(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y) && (s.uniform2f(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
    else {
        if (Mt(t, e)) return;
        s.uniform2fv(this.addr, e), _t(t, e);
    }
}
function lg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (s.uniform3f(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
    else if (e.r !== void 0) (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) && (s.uniform3f(this.addr, e.r, e.g, e.b), t[0] = e.r, t[1] = e.g, t[2] = e.b);
    else {
        if (Mt(t, e)) return;
        s.uniform3fv(this.addr, e), _t(t, e);
    }
}
function cg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (s.uniform4f(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
    else {
        if (Mt(t, e)) return;
        s.uniform4fv(this.addr, e), _t(t, e);
    }
}
function hg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix2fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Hl.set(n), s.uniformMatrix2fv(this.addr, !1, Hl), _t(t, n);
    }
}
function ug(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix3fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ol.set(n), s.uniformMatrix3fv(this.addr, !1, Ol), _t(t, n);
    }
}
function dg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix4fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ul.set(n), s.uniformMatrix4fv(this.addr, !1, Ul), _t(t, n);
    }
}
function fg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1i(this.addr, e), t[0] = e);
}
function pg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2iv(this.addr, e), _t(t, e));
}
function mg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3iv(this.addr, e), _t(t, e));
}
function gg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4iv(this.addr, e), _t(t, e));
}
function xg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1ui(this.addr, e), t[0] = e);
}
function yg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2uiv(this.addr, e), _t(t, e));
}
function vg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3uiv(this.addr, e), _t(t, e));
}
function _g(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4uiv(this.addr, e), _t(t, e));
}
function Mg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTexture2D(e || lh, i);
}
function bg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture3D(e || hh, i);
}
function wg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTextureCube(e || uh, i);
}
function Sg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture2DArray(e || ch, i);
}
function Tg(s) {
    switch(s){
        case 5126:
            return og;
        case 35664:
            return ag;
        case 35665:
            return lg;
        case 35666:
            return cg;
        case 35674:
            return hg;
        case 35675:
            return ug;
        case 35676:
            return dg;
        case 5124:
        case 35670:
            return fg;
        case 35667:
        case 35671:
            return pg;
        case 35668:
        case 35672:
            return mg;
        case 35669:
        case 35673:
            return gg;
        case 5125:
            return xg;
        case 36294:
            return yg;
        case 36295:
            return vg;
        case 36296:
            return _g;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return Mg;
        case 35679:
        case 36299:
        case 36307:
            return bg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return wg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Sg;
    }
}
function Eg(s, e) {
    s.uniform1fv(this.addr, e);
}
function Ag(s, e) {
    let t = Vi(e, this.size, 2);
    s.uniform2fv(this.addr, t);
}
function Cg(s, e) {
    let t = Vi(e, this.size, 3);
    s.uniform3fv(this.addr, t);
}
function Lg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniform4fv(this.addr, t);
}
function Rg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniformMatrix2fv(this.addr, !1, t);
}
function Pg(s, e) {
    let t = Vi(e, this.size, 9);
    s.uniformMatrix3fv(this.addr, !1, t);
}
function Ig(s, e) {
    let t = Vi(e, this.size, 16);
    s.uniformMatrix4fv(this.addr, !1, t);
}
function Dg(s, e) {
    s.uniform1iv(this.addr, e);
}
function Fg(s, e) {
    s.uniform2iv(this.addr, e);
}
function Ng(s, e) {
    s.uniform3iv(this.addr, e);
}
function Bg(s, e) {
    s.uniform4iv(this.addr, e);
}
function zg(s, e) {
    s.uniform1uiv(this.addr, e);
}
function Ug(s, e) {
    s.uniform2uiv(this.addr, e);
}
function Og(s, e) {
    s.uniform3uiv(this.addr, e);
}
function Hg(s, e) {
    s.uniform4uiv(this.addr, e);
}
function kg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTexture2D(e[r] || lh, i[r]);
}
function Gg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture3D(e[r] || hh, i[r]);
}
function Vg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTextureCube(e[r] || uh, i[r]);
}
function Wg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture2DArray(e[r] || ch, i[r]);
}
function qg(s) {
    switch(s){
        case 5126:
            return Eg;
        case 35664:
            return Ag;
        case 35665:
            return Cg;
        case 35666:
            return Lg;
        case 35674:
            return Rg;
        case 35675:
            return Pg;
        case 35676:
            return Ig;
        case 5124:
        case 35670:
            return Dg;
        case 35667:
        case 35671:
            return Fg;
        case 35668:
        case 35672:
            return Ng;
        case 35669:
        case 35673:
            return Bg;
        case 5125:
            return zg;
        case 36294:
            return Ug;
        case 36295:
            return Og;
        case 36296:
            return Hg;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return kg;
        case 35679:
        case 36299:
        case 36307:
            return Gg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return Vg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Wg;
    }
}
function Xg(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.setValue = Tg(e.type);
}
function dh(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.size = e.size, this.setValue = qg(e.type);
}
dh.prototype.updateCache = function(s) {
    let e = this.cache;
    s instanceof Float32Array && e.length !== s.length && (this.cache = new Float32Array(s.length)), _t(e, s);
};
function fh(s) {
    this.id = s, this.seq = [], this.map = {};
}
fh.prototype.setValue = function(s, e, t) {
    let n = this.seq;
    for(let i = 0, r = n.length; i !== r; ++i){
        let o = n[i];
        o.setValue(s, e[o.id], t);
    }
};
var Wo = /(\w+)(\])?(\[|\.)?/g;
function kl(s, e) {
    s.seq.push(e), s.map[e.id] = e;
}
function Jg(s, e, t) {
    let n = s.name, i = n.length;
    for(Wo.lastIndex = 0;;){
        let r = Wo.exec(n), o = Wo.lastIndex, a = r[1], l = r[2] === "]", c = r[3];
        if (l && (a = a | 0), c === void 0 || c === "[" && o + 2 === i) {
            kl(t, c === void 0 ? new Xg(a, s, e) : new dh(a, s, e));
            break;
        } else {
            let u = t.map[a];
            u === void 0 && (u = new fh(a), kl(t, u)), t = u;
        }
    }
}
function bn(s, e) {
    this.seq = [], this.map = {};
    let t = s.getProgramParameter(e, 35718);
    for(let n = 0; n < t; ++n){
        let i = s.getActiveUniform(e, n), r = s.getUniformLocation(e, i.name);
        Jg(i, r, this);
    }
}
bn.prototype.setValue = function(s, e, t, n) {
    let i = this.map[e];
    i !== void 0 && i.setValue(s, t, n);
};
bn.prototype.setOptional = function(s, e, t) {
    let n = e[t];
    n !== void 0 && this.setValue(s, t, n);
};
bn.upload = function(s, e, t, n) {
    for(let i = 0, r = e.length; i !== r; ++i){
        let o = e[i], a = t[o.id];
        a.needsUpdate !== !1 && o.setValue(s, a.value, n);
    }
};
bn.seqWithValue = function(s, e) {
    let t = [];
    for(let n = 0, i = s.length; n !== i; ++n){
        let r = s[n];
        r.id in e && t.push(r);
    }
    return t;
};
function Gl(s, e, t) {
    let n = s.createShader(e);
    return s.shaderSource(n, t), s.compileShader(n), n;
}
var Yg = 0;
function Zg(s) {
    let e = s.split(`
`);
    for(let t = 0; t < e.length; t++)e[t] = t + 1 + ": " + e[t];
    return e.join(`
`);
}
function ph(s) {
    switch(s){
        case Nt:
            return [
                "Linear",
                "( value )"
            ];
        case Oi:
            return [
                "sRGB",
                "( value )"
            ];
        default:
            return console.warn("THREE.WebGLProgram: Unsupported encoding:", s), [
                "Linear",
                "( value )"
            ];
    }
}
function Vl(s, e, t) {
    let n = s.getShaderParameter(e, 35713), i = s.getShaderInfoLog(e).trim();
    return n && i === "" ? "" : t.toUpperCase() + `

` + i + `

` + Zg(s.getShaderSource(e));
}
function Dn(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return " + t[0] + "ToLinear" + t[1] + "; }";
}
function $g(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return LinearTo" + t[0] + t[1] + "; }";
}
function jg(s, e) {
    let t;
    switch(e){
        case Nu:
            t = "Linear";
            break;
        case Bu:
            t = "Reinhard";
            break;
        case zu:
            t = "OptimizedCineon";
            break;
        case Uu:
            t = "ACESFilmic";
            break;
        case Ou:
            t = "Custom";
            break;
        default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), t = "Linear";
    }
    return "vec3 " + s + "( vec3 color ) { return " + t + "ToneMapping( color ); }";
}
function Qg(s) {
    return [
        s.extensionDerivatives || s.envMapCubeUV || s.bumpMap || s.tangentSpaceNormalMap || s.clearcoatNormalMap || s.flatShading || s.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "",
        (s.extensionFragDepth || s.logarithmicDepthBuffer) && s.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "",
        s.extensionDrawBuffers && s.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "",
        (s.extensionShaderTextureLOD || s.envMap || s.transmission) && s.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""
    ].filter(rr).join(`
`);
}
function Kg(s) {
    let e = [];
    for(let t in s){
        let n = s[t];
        n !== !1 && e.push("#define " + t + " " + n);
    }
    return e.join(`
`);
}
function ex(s, e) {
    let t = {}, n = s.getProgramParameter(e, 35721);
    for(let i = 0; i < n; i++){
        let r = s.getActiveAttrib(e, i), o = r.name, a = 1;
        r.type === 35674 && (a = 2), r.type === 35675 && (a = 3), r.type === 35676 && (a = 4), t[o] = {
            type: r.type,
            location: s.getAttribLocation(e, o),
            locationSize: a
        };
    }
    return t;
}
function rr(s) {
    return s !== "";
}
function Wl(s, e) {
    return s.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function ql(s, e) {
    return s.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
}
var tx = /^[ \t]*#include +<([\w\d./]+)>/gm;
function ra(s) {
    return s.replace(tx, nx);
}
function nx(s, e) {
    let t = Fe[e];
    if (t === void 0) throw new Error("Can not resolve #include <" + e + ">");
    return ra(t);
}
var ix = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, rx = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function Xl(s) {
    return s.replace(rx, mh).replace(ix, sx);
}
function sx(s, e, t, n) {
    return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), mh(s, e, t, n);
}
function mh(s, e, t, n) {
    let i = "";
    for(let r = parseInt(e); r < parseInt(t); r++)i += n.replace(/\[\s*i\s*\]/g, "[ " + r + " ]").replace(/UNROLLED_LOOP_INDEX/g, r);
    return i;
}
function Jl(s) {
    let e = "precision " + s.precision + ` float;
precision ` + s.precision + " int;";
    return s.precision === "highp" ? e += `
#define HIGH_PRECISION` : s.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : s.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
}
function ox(s) {
    let e = "SHADOWMAP_TYPE_BASIC";
    return s.shadowMapType === Hc ? e = "SHADOWMAP_TYPE_PCF" : s.shadowMapType === fu ? e = "SHADOWMAP_TYPE_PCF_SOFT" : s.shadowMapType === ir && (e = "SHADOWMAP_TYPE_VSM"), e;
}
function ax(s) {
    let e = "ENVMAP_TYPE_CUBE";
    if (s.envMap) switch(s.envMapMode){
        case Bi:
        case zi:
            e = "ENVMAP_TYPE_CUBE";
            break;
        case Pr:
        case Ws:
            e = "ENVMAP_TYPE_CUBE_UV";
            break;
    }
    return e;
}
function lx(s) {
    let e = "ENVMAP_MODE_REFLECTION";
    if (s.envMap) switch(s.envMapMode){
        case zi:
        case Ws:
            e = "ENVMAP_MODE_REFRACTION";
            break;
    }
    return e;
}
function cx(s) {
    let e = "ENVMAP_BLENDING_NONE";
    if (s.envMap) switch(s.combine){
        case Vs:
            e = "ENVMAP_BLENDING_MULTIPLY";
            break;
        case Du:
            e = "ENVMAP_BLENDING_MIX";
            break;
        case Fu:
            e = "ENVMAP_BLENDING_ADD";
            break;
    }
    return e;
}
function hx(s, e, t, n) {
    let i = s.getContext(), r = t.defines, o = t.vertexShader, a = t.fragmentShader, l = ox(t), c = ax(t), h = lx(t), u = cx(t), d = t.isWebGL2 ? "" : Qg(t), f = Kg(r), m = i.createProgram(), x, v, g = t.glslVersion ? "#version " + t.glslVersion + `
` : "";
    t.isRawShaderMaterial ? (x = [
        f
    ].filter(rr).join(`
`), x.length > 0 && (x += `
`), v = [
        d,
        f
    ].filter(rr).join(`
`), v.length > 0 && (v += `
`)) : (x = [
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.instancing ? "#define USE_INSTANCING" : "",
        t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        t.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
        "#define MAX_BONES " + t.maxBones,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + h : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.displacementMap && t.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.skinning ? "#define USE_SKINNING" : "",
        t.useVertexTexture ? "#define BONE_TEXTURE" : "",
        t.morphTargets ? "#define USE_MORPHTARGETS" : "",
        t.morphNormals && t.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`
    ].filter(rr).join(`
`), v = [
        d,
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.matcap ? "#define USE_MATCAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + c : "",
        t.envMap ? "#define " + h : "",
        t.envMap ? "#define " + u : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoat ? "#define USE_CLEARCOAT" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaTest ? "#define USE_ALPHATEST" : "",
        t.sheen ? "#define USE_SHEEN" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.gradientMap ? "#define USE_GRADIENTMAP" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        t.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        (t.extensionShaderTextureLOD || t.envMap) && t.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        t.toneMapping !== _n ? "#define TONE_MAPPING" : "",
        t.toneMapping !== _n ? Fe.tonemapping_pars_fragment : "",
        t.toneMapping !== _n ? jg("toneMapping", t.toneMapping) : "",
        t.dithering ? "#define DITHERING" : "",
        t.format === Gn ? "#define OPAQUE" : "",
        Fe.encodings_pars_fragment,
        t.map ? Dn("mapTexelToLinear", t.mapEncoding) : "",
        t.matcap ? Dn("matcapTexelToLinear", t.matcapEncoding) : "",
        t.envMap ? Dn("envMapTexelToLinear", t.envMapEncoding) : "",
        t.emissiveMap ? Dn("emissiveMapTexelToLinear", t.emissiveMapEncoding) : "",
        t.specularColorMap ? Dn("specularColorMapTexelToLinear", t.specularColorMapEncoding) : "",
        t.sheenColorMap ? Dn("sheenColorMapTexelToLinear", t.sheenColorMapEncoding) : "",
        t.lightMap ? Dn("lightMapTexelToLinear", t.lightMapEncoding) : "",
        $g("linearToOutputTexel", t.outputEncoding),
        t.depthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
        `
`
    ].filter(rr).join(`
`)), o = ra(o), o = Wl(o, t), o = ql(o, t), a = ra(a), a = Wl(a, t), a = ql(a, t), o = Xl(o), a = Xl(a), t.isWebGL2 && t.isRawShaderMaterial !== !0 && (g = `#version 300 es
`, x = [
        "precision mediump sampler2DArray;",
        "#define attribute in",
        "#define varying out",
        "#define texture2D texture"
    ].join(`
`) + `
` + x, v = [
        "#define varying in",
        t.glslVersion === xl ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
        t.glslVersion === xl ? "" : "#define gl_FragColor pc_fragColor",
        "#define gl_FragDepthEXT gl_FragDepth",
        "#define texture2D texture",
        "#define textureCube texture",
        "#define texture2DProj textureProj",
        "#define texture2DLodEXT textureLod",
        "#define texture2DProjLodEXT textureProjLod",
        "#define textureCubeLodEXT textureLod",
        "#define texture2DGradEXT textureGrad",
        "#define texture2DProjGradEXT textureProjGrad",
        "#define textureCubeGradEXT textureGrad"
    ].join(`
`) + `
` + v);
    let p = g + x + o, _ = g + v + a, y = Gl(i, 35633, p), b = Gl(i, 35632, _);
    if (i.attachShader(m, y), i.attachShader(m, b), t.index0AttributeName !== void 0 ? i.bindAttribLocation(m, 0, t.index0AttributeName) : t.morphTargets === !0 && i.bindAttribLocation(m, 0, "position"), i.linkProgram(m), s.debug.checkShaderErrors) {
        let I = i.getProgramInfoLog(m).trim(), k = i.getShaderInfoLog(y).trim(), B = i.getShaderInfoLog(b).trim(), P = !0, w = !0;
        if (i.getProgramParameter(m, 35714) === !1) {
            P = !1;
            let E = Vl(i, y, "vertex"), D = Vl(i, b, "fragment");
            console.error("THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(m, 35715) + `

Program Info Log: ` + I + `
` + E + `
` + D);
        } else I !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", I) : (k === "" || B === "") && (w = !1);
        w && (this.diagnostics = {
            runnable: P,
            programLog: I,
            vertexShader: {
                log: k,
                prefix: x
            },
            fragmentShader: {
                log: B,
                prefix: v
            }
        });
    }
    i.deleteShader(y), i.deleteShader(b);
    let A;
    this.getUniforms = function() {
        return A === void 0 && (A = new bn(i, m)), A;
    };
    let L;
    return this.getAttributes = function() {
        return L === void 0 && (L = ex(i, m)), L;
    }, this.destroy = function() {
        n.releaseStatesOfProgram(this), i.deleteProgram(m), this.program = void 0;
    }, this.name = t.shaderName, this.id = Yg++, this.cacheKey = e, this.usedTimes = 1, this.program = m, this.vertexShader = y, this.fragmentShader = b, this;
}
var ux = 0, gh = class {
    constructor(){
        this.shaderCache = new Map, this.materialCache = new Map;
    }
    update(e) {
        let t = e.vertexShader, n = e.fragmentShader, i = this._getShaderStage(t), r = this._getShaderStage(n), o = this._getShaderCacheForMaterial(e);
        return o.has(i) === !1 && (o.add(i), i.usedTimes++), o.has(r) === !1 && (o.add(r), r.usedTimes++), this;
    }
    remove(e) {
        let t = this.materialCache.get(e);
        for (let n of t)n.usedTimes--, n.usedTimes === 0 && this.shaderCache.delete(n);
        return this.materialCache.delete(e), this;
    }
    getVertexShaderID(e) {
        return this._getShaderStage(e.vertexShader).id;
    }
    getFragmentShaderID(e) {
        return this._getShaderStage(e.fragmentShader).id;
    }
    dispose() {
        this.shaderCache.clear(), this.materialCache.clear();
    }
    _getShaderCacheForMaterial(e) {
        let t = this.materialCache;
        return t.has(e) === !1 && t.set(e, new Set), t.get(e);
    }
    _getShaderStage(e) {
        let t = this.shaderCache;
        if (t.has(e) === !1) {
            let n = new xh;
            t.set(e, n);
        }
        return t.get(e);
    }
}, xh = class {
    constructor(){
        this.id = ux++, this.usedTimes = 0;
    }
};
function dx(s, e, t, n, i, r, o) {
    let a = new Js, l = new gh, c = [], h = i.isWebGL2, u = i.logarithmicDepthBuffer, d = i.floatVertexTextures, f = i.maxVertexUniforms, m = i.vertexTextures, x = i.precision, v = {
        MeshDepthMaterial: "depth",
        MeshDistanceMaterial: "distanceRGBA",
        MeshNormalMaterial: "normal",
        MeshBasicMaterial: "basic",
        MeshLambertMaterial: "lambert",
        MeshPhongMaterial: "phong",
        MeshToonMaterial: "toon",
        MeshStandardMaterial: "physical",
        MeshPhysicalMaterial: "physical",
        MeshMatcapMaterial: "matcap",
        LineBasicMaterial: "basic",
        LineDashedMaterial: "dashed",
        PointsMaterial: "points",
        ShadowMaterial: "shadow",
        SpriteMaterial: "sprite"
    };
    function g(w) {
        let D = w.skeleton.bones;
        if (d) return 1024;
        {
            let F = Math.floor((f - 20) / 4), O = Math.min(F, D.length);
            return O < D.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + D.length + " bones. This GPU supports " + O + "."), 0) : O;
        }
    }
    function p(w) {
        let E;
        return w && w.isTexture ? E = w.encoding : w && w.isWebGLRenderTarget ? (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), E = w.texture.encoding) : E = Nt, h && w && w.isTexture && w.format === ct && w.type === rn && w.encoding === Oi && (E = Nt), E;
    }
    function _(w, E, D, U, F) {
        let O = U.fog, ne = w.isMeshStandardMaterial ? U.environment : null, ce = (w.isMeshStandardMaterial ? t : e).get(w.envMap || ne), V = v[w.type], W = F.isSkinnedMesh ? g(F) : 0;
        w.precision !== null && (x = i.getMaxPrecision(w.precision), x !== w.precision && console.warn("THREE.WebGLProgram.getParameters:", w.precision, "not supported, using", x, "instead."));
        let he, le, fe, Be;
        if (V) {
            let xe = qt[V];
            he = xe.vertexShader, le = xe.fragmentShader;
        } else he = w.vertexShader, le = w.fragmentShader, l.update(w), fe = l.getVertexShaderID(w), Be = l.getFragmentShaderID(w);
        let Y = s.getRenderTarget(), Ce = w.alphaTest > 0, ye = w.clearcoat > 0;
        return {
            isWebGL2: h,
            shaderID: V,
            shaderName: w.type,
            vertexShader: he,
            fragmentShader: le,
            defines: w.defines,
            customVertexShaderID: fe,
            customFragmentShaderID: Be,
            isRawShaderMaterial: w.isRawShaderMaterial === !0,
            glslVersion: w.glslVersion,
            precision: x,
            instancing: F.isInstancedMesh === !0,
            instancingColor: F.isInstancedMesh === !0 && F.instanceColor !== null,
            supportsVertexTextures: m,
            outputEncoding: Y !== null ? p(Y.texture) : s.outputEncoding,
            map: !!w.map,
            mapEncoding: p(w.map),
            matcap: !!w.matcap,
            matcapEncoding: p(w.matcap),
            envMap: !!ce,
            envMapMode: ce && ce.mapping,
            envMapEncoding: p(ce),
            envMapCubeUV: !!ce && (ce.mapping === Pr || ce.mapping === Ws),
            lightMap: !!w.lightMap,
            lightMapEncoding: p(w.lightMap),
            aoMap: !!w.aoMap,
            emissiveMap: !!w.emissiveMap,
            emissiveMapEncoding: p(w.emissiveMap),
            bumpMap: !!w.bumpMap,
            normalMap: !!w.normalMap,
            objectSpaceNormalMap: w.normalMapType === zd,
            tangentSpaceNormalMap: w.normalMapType === Hi,
            clearcoat: ye,
            clearcoatMap: ye && !!w.clearcoatMap,
            clearcoatRoughnessMap: ye && !!w.clearcoatRoughnessMap,
            clearcoatNormalMap: ye && !!w.clearcoatNormalMap,
            displacementMap: !!w.displacementMap,
            roughnessMap: !!w.roughnessMap,
            metalnessMap: !!w.metalnessMap,
            specularMap: !!w.specularMap,
            specularIntensityMap: !!w.specularIntensityMap,
            specularColorMap: !!w.specularColorMap,
            specularColorMapEncoding: p(w.specularColorMap),
            alphaMap: !!w.alphaMap,
            alphaTest: Ce,
            gradientMap: !!w.gradientMap,
            sheen: w.sheen > 0,
            sheenColorMap: !!w.sheenColorMap,
            sheenColorMapEncoding: p(w.sheenColorMap),
            sheenRoughnessMap: !!w.sheenRoughnessMap,
            transmission: w.transmission > 0,
            transmissionMap: !!w.transmissionMap,
            thicknessMap: !!w.thicknessMap,
            combine: w.combine,
            vertexTangents: !!w.normalMap && !!F.geometry && !!F.geometry.attributes.tangent,
            vertexColors: w.vertexColors,
            vertexAlphas: w.vertexColors === !0 && !!F.geometry && !!F.geometry.attributes.color && F.geometry.attributes.color.itemSize === 4,
            vertexUvs: !!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatMap || !!w.clearcoatRoughnessMap || !!w.clearcoatNormalMap || !!w.displacementMap || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || !!w.sheenColorMap || !!w.sheenRoughnessMap,
            uvsVertexOnly: !(!!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatNormalMap || w.transmission > 0 || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || w.sheen > 0 || !!w.sheenColorMap || !!w.sheenRoughnessMap) && !!w.displacementMap,
            fog: !!O,
            useFog: w.fog,
            fogExp2: O && O.isFogExp2,
            flatShading: !!w.flatShading,
            sizeAttenuation: w.sizeAttenuation,
            logarithmicDepthBuffer: u,
            skinning: F.isSkinnedMesh === !0 && W > 0,
            maxBones: W,
            useVertexTexture: d,
            morphTargets: !!F.geometry && !!F.geometry.morphAttributes.position,
            morphNormals: !!F.geometry && !!F.geometry.morphAttributes.normal,
            morphTargetsCount: !!F.geometry && !!F.geometry.morphAttributes.position ? F.geometry.morphAttributes.position.length : 0,
            numDirLights: E.directional.length,
            numPointLights: E.point.length,
            numSpotLights: E.spot.length,
            numRectAreaLights: E.rectArea.length,
            numHemiLights: E.hemi.length,
            numDirLightShadows: E.directionalShadowMap.length,
            numPointLightShadows: E.pointShadowMap.length,
            numSpotLightShadows: E.spotShadowMap.length,
            numClippingPlanes: o.numPlanes,
            numClipIntersection: o.numIntersection,
            format: w.format,
            dithering: w.dithering,
            shadowMapEnabled: s.shadowMap.enabled && D.length > 0,
            shadowMapType: s.shadowMap.type,
            toneMapping: w.toneMapped ? s.toneMapping : _n,
            physicallyCorrectLights: s.physicallyCorrectLights,
            premultipliedAlpha: w.premultipliedAlpha,
            doubleSided: w.side === Ci,
            flipSided: w.side === it,
            depthPacking: w.depthPacking !== void 0 ? w.depthPacking : !1,
            index0AttributeName: w.index0AttributeName,
            extensionDerivatives: w.extensions && w.extensions.derivatives,
            extensionFragDepth: w.extensions && w.extensions.fragDepth,
            extensionDrawBuffers: w.extensions && w.extensions.drawBuffers,
            extensionShaderTextureLOD: w.extensions && w.extensions.shaderTextureLOD,
            rendererExtensionFragDepth: h || n.has("EXT_frag_depth"),
            rendererExtensionDrawBuffers: h || n.has("WEBGL_draw_buffers"),
            rendererExtensionShaderTextureLod: h || n.has("EXT_shader_texture_lod"),
            customProgramCacheKey: w.customProgramCacheKey()
        };
    }
    function y(w) {
        let E = [];
        if (w.shaderID ? E.push(w.shaderID) : (E.push(w.customVertexShaderID), E.push(w.customFragmentShaderID)), w.defines !== void 0) for(let D in w.defines)E.push(D), E.push(w.defines[D]);
        return w.isRawShaderMaterial === !1 && (b(E, w), A(E, w), E.push(s.outputEncoding)), E.push(w.customProgramCacheKey), E.join();
    }
    function b(w, E) {
        w.push(E.precision), w.push(E.outputEncoding), w.push(E.mapEncoding), w.push(E.matcapEncoding), w.push(E.envMapMode), w.push(E.envMapEncoding), w.push(E.lightMapEncoding), w.push(E.emissiveMapEncoding), w.push(E.combine), w.push(E.vertexUvs), w.push(E.fogExp2), w.push(E.sizeAttenuation), w.push(E.maxBones), w.push(E.morphTargetsCount), w.push(E.numDirLights), w.push(E.numPointLights), w.push(E.numSpotLights), w.push(E.numHemiLights), w.push(E.numRectAreaLights), w.push(E.numDirLightShadows), w.push(E.numPointLightShadows), w.push(E.numSpotLightShadows), w.push(E.shadowMapType), w.push(E.toneMapping), w.push(E.numClippingPlanes), w.push(E.numClipIntersection), w.push(E.format), w.push(E.specularColorMapEncoding), w.push(E.sheenColorMapEncoding);
    }
    function A(w, E) {
        a.disableAll(), E.isWebGL2 && a.enable(0), E.supportsVertexTextures && a.enable(1), E.instancing && a.enable(2), E.instancingColor && a.enable(3), E.map && a.enable(4), E.matcap && a.enable(5), E.envMap && a.enable(6), E.envMapCubeUV && a.enable(7), E.lightMap && a.enable(8), E.aoMap && a.enable(9), E.emissiveMap && a.enable(10), E.bumpMap && a.enable(11), E.normalMap && a.enable(12), E.objectSpaceNormalMap && a.enable(13), E.tangentSpaceNormalMap && a.enable(14), E.clearcoat && a.enable(15), E.clearcoatMap && a.enable(16), E.clearcoatRoughnessMap && a.enable(17), E.clearcoatNormalMap && a.enable(18), E.displacementMap && a.enable(19), E.specularMap && a.enable(20), E.roughnessMap && a.enable(21), E.metalnessMap && a.enable(22), E.gradientMap && a.enable(23), E.alphaMap && a.enable(24), E.alphaTest && a.enable(25), E.vertexColors && a.enable(26), E.vertexAlphas && a.enable(27), E.vertexUvs && a.enable(28), E.vertexTangents && a.enable(29), E.uvsVertexOnly && a.enable(30), E.fog && a.enable(31), w.push(a.mask), a.disableAll(), E.useFog && a.enable(0), E.flatShading && a.enable(1), E.logarithmicDepthBuffer && a.enable(2), E.skinning && a.enable(3), E.useVertexTexture && a.enable(4), E.morphTargets && a.enable(5), E.morphNormals && a.enable(6), E.premultipliedAlpha && a.enable(7), E.shadowMapEnabled && a.enable(8), E.physicallyCorrectLights && a.enable(9), E.doubleSided && a.enable(10), E.flipSided && a.enable(11), E.depthPacking && a.enable(12), E.dithering && a.enable(13), E.specularIntensityMap && a.enable(14), E.specularColorMap && a.enable(15), E.transmission && a.enable(16), E.transmissionMap && a.enable(17), E.thicknessMap && a.enable(18), E.sheen && a.enable(19), E.sheenColorMap && a.enable(20), E.sheenRoughnessMap && a.enable(21), w.push(a.mask);
    }
    function L(w) {
        let E = v[w.type], D;
        if (E) {
            let U = qt[E];
            D = uf.clone(U.uniforms);
        } else D = w.uniforms;
        return D;
    }
    function I(w, E) {
        let D;
        for(let U = 0, F = c.length; U < F; U++){
            let O = c[U];
            if (O.cacheKey === E) {
                D = O, ++D.usedTimes;
                break;
            }
        }
        return D === void 0 && (D = new hx(s, E, w, r), c.push(D)), D;
    }
    function k(w) {
        if (--w.usedTimes === 0) {
            let E = c.indexOf(w);
            c[E] = c[c.length - 1], c.pop(), w.destroy();
        }
    }
    function B(w) {
        l.remove(w);
    }
    function P() {
        l.dispose();
    }
    return {
        getParameters: _,
        getProgramCacheKey: y,
        getUniforms: L,
        acquireProgram: I,
        releaseProgram: k,
        releaseShaderCache: B,
        programs: c,
        dispose: P
    };
}
function fx() {
    let s = new WeakMap;
    function e(r) {
        let o = s.get(r);
        return o === void 0 && (o = {}, s.set(r, o)), o;
    }
    function t(r) {
        s.delete(r);
    }
    function n(r, o, a) {
        s.get(r)[o] = a;
    }
    function i() {
        s = new WeakMap;
    }
    return {
        get: e,
        remove: t,
        update: n,
        dispose: i
    };
}
function px(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.material.id !== e.material.id ? s.material.id - e.material.id : s.z !== e.z ? s.z - e.z : s.id - e.id;
}
function Yl(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.z !== e.z ? e.z - s.z : s.id - e.id;
}
function Zl() {
    let s = [], e = 0, t = [], n = [], i = [];
    function r() {
        e = 0, t.length = 0, n.length = 0, i.length = 0;
    }
    function o(u, d, f, m, x, v) {
        let g = s[e];
        return g === void 0 ? (g = {
            id: u.id,
            object: u,
            geometry: d,
            material: f,
            groupOrder: m,
            renderOrder: u.renderOrder,
            z: x,
            group: v
        }, s[e] = g) : (g.id = u.id, g.object = u, g.geometry = d, g.material = f, g.groupOrder = m, g.renderOrder = u.renderOrder, g.z = x, g.group = v), e++, g;
    }
    function a(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.push(g) : f.transparent === !0 ? i.push(g) : t.push(g);
    }
    function l(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.unshift(g) : f.transparent === !0 ? i.unshift(g) : t.unshift(g);
    }
    function c(u, d) {
        t.length > 1 && t.sort(u || px), n.length > 1 && n.sort(d || Yl), i.length > 1 && i.sort(d || Yl);
    }
    function h() {
        for(let u = e, d = s.length; u < d; u++){
            let f = s[u];
            if (f.id === null) break;
            f.id = null, f.object = null, f.geometry = null, f.material = null, f.group = null;
        }
    }
    return {
        opaque: t,
        transmissive: n,
        transparent: i,
        init: r,
        push: a,
        unshift: l,
        finish: h,
        sort: c
    };
}
function mx() {
    let s = new WeakMap;
    function e(n, i) {
        let r;
        return s.has(n) === !1 ? (r = new Zl, s.set(n, [
            r
        ])) : i >= s.get(n).length ? (r = new Zl, s.get(n).push(r)) : r = s.get(n)[i], r;
    }
    function t() {
        s = new WeakMap;
    }
    return {
        get: e,
        dispose: t
    };
}
function gx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        direction: new M,
                        color: new ae
                    };
                    break;
                case "SpotLight":
                    t = {
                        position: new M,
                        direction: new M,
                        color: new ae,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0
                    };
                    break;
                case "PointLight":
                    t = {
                        position: new M,
                        color: new ae,
                        distance: 0,
                        decay: 0
                    };
                    break;
                case "HemisphereLight":
                    t = {
                        direction: new M,
                        skyColor: new ae,
                        groundColor: new ae
                    };
                    break;
                case "RectAreaLight":
                    t = {
                        color: new ae,
                        position: new M,
                        halfWidth: new M,
                        halfHeight: new M
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
function xx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "SpotLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "PointLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
var yx = 0;
function vx(s, e) {
    return (e.castShadow ? 1 : 0) - (s.castShadow ? 1 : 0);
}
function _x(s, e) {
    let t = new gx, n = xx(), i = {
        version: 0,
        hash: {
            directionalLength: -1,
            pointLength: -1,
            spotLength: -1,
            rectAreaLength: -1,
            hemiLength: -1,
            numDirectionalShadows: -1,
            numPointShadows: -1,
            numSpotShadows: -1
        },
        ambient: [
            0,
            0,
            0
        ],
        probe: [],
        directional: [],
        directionalShadow: [],
        directionalShadowMap: [],
        directionalShadowMatrix: [],
        spot: [],
        spotShadow: [],
        spotShadowMap: [],
        spotShadowMatrix: [],
        rectArea: [],
        rectAreaLTC1: null,
        rectAreaLTC2: null,
        point: [],
        pointShadow: [],
        pointShadowMap: [],
        pointShadowMatrix: [],
        hemi: []
    };
    for(let h = 0; h < 9; h++)i.probe.push(new M);
    let r = new M, o = new pe, a = new pe;
    function l(h, u) {
        let d = 0, f = 0, m = 0;
        for(let k = 0; k < 9; k++)i.probe[k].set(0, 0, 0);
        let x = 0, v = 0, g = 0, p = 0, _ = 0, y = 0, b = 0, A = 0;
        h.sort(vx);
        let L = u !== !0 ? Math.PI : 1;
        for(let k = 0, B = h.length; k < B; k++){
            let P = h[k], w = P.color, E = P.intensity, D = P.distance, U = P.shadow && P.shadow.map ? P.shadow.map.texture : null;
            if (P.isAmbientLight) d += w.r * E * L, f += w.g * E * L, m += w.b * E * L;
            else if (P.isLightProbe) for(let F = 0; F < 9; F++)i.probe[F].addScaledVector(P.sh.coefficients[F], E);
            else if (P.isDirectionalLight) {
                let F = t.get(P);
                if (F.color.copy(P.color).multiplyScalar(P.intensity * L), P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, i.directionalShadow[x] = ne, i.directionalShadowMap[x] = U, i.directionalShadowMatrix[x] = P.shadow.matrix, y++;
                }
                i.directional[x] = F, x++;
            } else if (P.isSpotLight) {
                let F = t.get(P);
                if (F.position.setFromMatrixPosition(P.matrixWorld), F.color.copy(w).multiplyScalar(E * L), F.distance = D, F.coneCos = Math.cos(P.angle), F.penumbraCos = Math.cos(P.angle * (1 - P.penumbra)), F.decay = P.decay, P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, i.spotShadow[g] = ne, i.spotShadowMap[g] = U, i.spotShadowMatrix[g] = P.shadow.matrix, A++;
                }
                i.spot[g] = F, g++;
            } else if (P.isRectAreaLight) {
                let F = t.get(P);
                F.color.copy(w).multiplyScalar(E), F.halfWidth.set(P.width * .5, 0, 0), F.halfHeight.set(0, P.height * .5, 0), i.rectArea[p] = F, p++;
            } else if (P.isPointLight) {
                let F = t.get(P);
                if (F.color.copy(P.color).multiplyScalar(P.intensity * L), F.distance = P.distance, F.decay = P.decay, P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, ne.shadowCameraNear = O.camera.near, ne.shadowCameraFar = O.camera.far, i.pointShadow[v] = ne, i.pointShadowMap[v] = U, i.pointShadowMatrix[v] = P.shadow.matrix, b++;
                }
                i.point[v] = F, v++;
            } else if (P.isHemisphereLight) {
                let F = t.get(P);
                F.skyColor.copy(P.color).multiplyScalar(E * L), F.groundColor.copy(P.groundColor).multiplyScalar(E * L), i.hemi[_] = F, _++;
            }
        }
        p > 0 && (e.isWebGL2 || s.has("OES_texture_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_FLOAT_1, i.rectAreaLTC2 = ie.LTC_FLOAT_2) : s.has("OES_texture_half_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_HALF_1, i.rectAreaLTC2 = ie.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), i.ambient[0] = d, i.ambient[1] = f, i.ambient[2] = m;
        let I = i.hash;
        (I.directionalLength !== x || I.pointLength !== v || I.spotLength !== g || I.rectAreaLength !== p || I.hemiLength !== _ || I.numDirectionalShadows !== y || I.numPointShadows !== b || I.numSpotShadows !== A) && (i.directional.length = x, i.spot.length = g, i.rectArea.length = p, i.point.length = v, i.hemi.length = _, i.directionalShadow.length = y, i.directionalShadowMap.length = y, i.pointShadow.length = b, i.pointShadowMap.length = b, i.spotShadow.length = A, i.spotShadowMap.length = A, i.directionalShadowMatrix.length = y, i.pointShadowMatrix.length = b, i.spotShadowMatrix.length = A, I.directionalLength = x, I.pointLength = v, I.spotLength = g, I.rectAreaLength = p, I.hemiLength = _, I.numDirectionalShadows = y, I.numPointShadows = b, I.numSpotShadows = A, i.version = yx++);
    }
    function c(h, u) {
        let d = 0, f = 0, m = 0, x = 0, v = 0, g = u.matrixWorldInverse;
        for(let p = 0, _ = h.length; p < _; p++){
            let y = h[p];
            if (y.isDirectionalLight) {
                let b = i.directional[d];
                b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(g), d++;
            } else if (y.isSpotLight) {
                let b = i.spot[m];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(g), b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(g), m++;
            } else if (y.isRectAreaLight) {
                let b = i.rectArea[x];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(g), a.identity(), o.copy(y.matrixWorld), o.premultiply(g), a.extractRotation(o), b.halfWidth.set(y.width * .5, 0, 0), b.halfHeight.set(0, y.height * .5, 0), b.halfWidth.applyMatrix4(a), b.halfHeight.applyMatrix4(a), x++;
            } else if (y.isPointLight) {
                let b = i.point[f];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(g), f++;
            } else if (y.isHemisphereLight) {
                let b = i.hemi[v];
                b.direction.setFromMatrixPosition(y.matrixWorld), b.direction.transformDirection(g), b.direction.normalize(), v++;
            }
        }
    }
    return {
        setup: l,
        setupView: c,
        state: i
    };
}
function $l(s, e) {
    let t = new _x(s, e), n = [], i = [];
    function r() {
        n.length = 0, i.length = 0;
    }
    function o(u) {
        n.push(u);
    }
    function a(u) {
        i.push(u);
    }
    function l(u) {
        t.setup(n, u);
    }
    function c(u) {
        t.setupView(n, u);
    }
    return {
        init: r,
        state: {
            lightsArray: n,
            shadowsArray: i,
            lights: t
        },
        setupLights: l,
        setupLightsView: c,
        pushLight: o,
        pushShadow: a
    };
}
function Mx(s, e) {
    let t = new WeakMap;
    function n(r, o = 0) {
        let a;
        return t.has(r) === !1 ? (a = new $l(s, e), t.set(r, [
            a
        ])) : o >= t.get(r).length ? (a = new $l(s, e), t.get(r).push(a)) : a = t.get(r)[o], a;
    }
    function i() {
        t = new WeakMap;
    }
    return {
        get: n,
        dispose: i
    };
}
var eo = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDepthMaterial", this.depthPacking = Nd, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
    }
};
eo.prototype.isMeshDepthMaterial = !0;
var to = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDistanceMaterial", this.referencePosition = new M, this.nearDistance = 1, this.farDistance = 1e3, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
    }
};
to.prototype.isMeshDistanceMaterial = !0;
var bx = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, wx = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function yh(s, e, t) {
    let n = new Dr, i = new X, r = new X, o = new Ve, a = new eo({
        depthPacking: Bd
    }), l = new to, c = {}, h = t.maxTextureSize, u = {
        0: it,
        1: Ai,
        2: Ci
    }, d = new sn({
        defines: {
            VSM_SAMPLES: 8
        },
        uniforms: {
            shadow_pass: {
                value: null
            },
            resolution: {
                value: new X
            },
            radius: {
                value: 4
            }
        },
        vertexShader: bx,
        fragmentShader: wx
    }), f = d.clone();
    f.defines.HORIZONTAL_PASS = 1;
    let m = new _e;
    m.setAttribute("position", new Ue(new Float32Array([
        -1,
        -1,
        .5,
        3,
        -1,
        .5,
        -1,
        3,
        .5
    ]), 3));
    let x = new st(m, d), v = this;
    this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = Hc, this.render = function(y, b, A) {
        if (v.enabled === !1 || v.autoUpdate === !1 && v.needsUpdate === !1 || y.length === 0) return;
        let L = s.getRenderTarget(), I = s.getActiveCubeFace(), k = s.getActiveMipmapLevel(), B = s.state;
        B.setBlending(vn), B.buffers.color.setClear(1, 1, 1, 1), B.buffers.depth.setTest(!0), B.setScissorTest(!1);
        for(let P = 0, w = y.length; P < w; P++){
            let E = y[P], D = E.shadow;
            if (D === void 0) {
                console.warn("THREE.WebGLShadowMap:", E, "has no shadow.");
                continue;
            }
            if (D.autoUpdate === !1 && D.needsUpdate === !1) continue;
            i.copy(D.mapSize);
            let U = D.getFrameExtents();
            if (i.multiply(U), r.copy(D.mapSize), (i.x > h || i.y > h) && (i.x > h && (r.x = Math.floor(h / U.x), i.x = r.x * U.x, D.mapSize.x = r.x), i.y > h && (r.y = Math.floor(h / U.y), i.y = r.y * U.y, D.mapSize.y = r.y)), D.map === null && !D.isPointLightShadow && this.type === ir) {
                let O = {
                    minFilter: tt,
                    magFilter: tt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O), D.map.texture.name = E.name + ".shadowMap", D.mapPass = new At(i.x, i.y, O), D.camera.updateProjectionMatrix();
            }
            if (D.map === null) {
                let O = {
                    minFilter: rt,
                    magFilter: rt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O), D.map.texture.name = E.name + ".shadowMap", D.camera.updateProjectionMatrix();
            }
            s.setRenderTarget(D.map), s.clear();
            let F = D.getViewportCount();
            for(let O = 0; O < F; O++){
                let ne = D.getViewport(O);
                o.set(r.x * ne.x, r.y * ne.y, r.x * ne.z, r.y * ne.w), B.viewport(o), D.updateMatrices(E, O), n = D.getFrustum(), _(b, A, D.camera, E, this.type);
            }
            !D.isPointLightShadow && this.type === ir && g(D, A), D.needsUpdate = !1;
        }
        v.needsUpdate = !1, s.setRenderTarget(L, I, k);
    };
    function g(y, b) {
        let A = e.update(x);
        d.defines.VSM_SAMPLES !== y.blurSamples && (d.defines.VSM_SAMPLES = y.blurSamples, f.defines.VSM_SAMPLES = y.blurSamples, d.needsUpdate = !0, f.needsUpdate = !0), d.uniforms.shadow_pass.value = y.map.texture, d.uniforms.resolution.value = y.mapSize, d.uniforms.radius.value = y.radius, s.setRenderTarget(y.mapPass), s.clear(), s.renderBufferDirect(b, null, A, d, x, null), f.uniforms.shadow_pass.value = y.mapPass.texture, f.uniforms.resolution.value = y.mapSize, f.uniforms.radius.value = y.radius, s.setRenderTarget(y.map), s.clear(), s.renderBufferDirect(b, null, A, f, x, null);
    }
    function p(y, b, A, L, I, k, B) {
        let P = null, w = L.isPointLight === !0 ? y.customDistanceMaterial : y.customDepthMaterial;
        if (w !== void 0 ? P = w : P = L.isPointLight === !0 ? l : a, s.localClippingEnabled && A.clipShadows === !0 && A.clippingPlanes.length !== 0 || A.displacementMap && A.displacementScale !== 0 || A.alphaMap && A.alphaTest > 0) {
            let E = P.uuid, D = A.uuid, U = c[E];
            U === void 0 && (U = {}, c[E] = U);
            let F = U[D];
            F === void 0 && (F = P.clone(), U[D] = F), P = F;
        }
        return P.visible = A.visible, P.wireframe = A.wireframe, B === ir ? P.side = A.shadowSide !== null ? A.shadowSide : A.side : P.side = A.shadowSide !== null ? A.shadowSide : u[A.side], P.alphaMap = A.alphaMap, P.alphaTest = A.alphaTest, P.clipShadows = A.clipShadows, P.clippingPlanes = A.clippingPlanes, P.clipIntersection = A.clipIntersection, P.displacementMap = A.displacementMap, P.displacementScale = A.displacementScale, P.displacementBias = A.displacementBias, P.wireframeLinewidth = A.wireframeLinewidth, P.linewidth = A.linewidth, L.isPointLight === !0 && P.isMeshDistanceMaterial === !0 && (P.referencePosition.setFromMatrixPosition(L.matrixWorld), P.nearDistance = I, P.farDistance = k), P;
    }
    function _(y, b, A, L, I) {
        if (y.visible === !1) return;
        if (y.layers.test(b.layers) && (y.isMesh || y.isLine || y.isPoints) && (y.castShadow || y.receiveShadow && I === ir) && (!y.frustumCulled || n.intersectsObject(y))) {
            y.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse, y.matrixWorld);
            let P = e.update(y), w = y.material;
            if (Array.isArray(w)) {
                let E = P.groups;
                for(let D = 0, U = E.length; D < U; D++){
                    let F = E[D], O = w[F.materialIndex];
                    if (O && O.visible) {
                        let ne = p(y, P, O, L, A.near, A.far, I);
                        s.renderBufferDirect(A, null, P, ne, y, F);
                    }
                }
            } else if (w.visible) {
                let E = p(y, P, w, L, A.near, A.far, I);
                s.renderBufferDirect(A, null, P, E, y, null);
            }
        }
        let B = y.children;
        for(let P = 0, w = B.length; P < w; P++)_(B[P], b, A, L, I);
    }
}
function Sx(s, e, t) {
    let n = t.isWebGL2;
    function i() {
        let R = !1, ee = new Ve, Q = null, Ee = new Ve(0, 0, 0, 0);
        return {
            setMask: function(me) {
                Q !== me && !R && (s.colorMask(me, me, me, me), Q = me);
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me, Re, oe, Le, Xe) {
                Xe === !0 && (me *= Le, Re *= Le, oe *= Le), ee.set(me, Re, oe, Le), Ee.equals(ee) === !1 && (s.clearColor(me, Re, oe, Le), Ee.copy(ee));
            },
            reset: function() {
                R = !1, Q = null, Ee.set(-1, 0, 0, 0);
            }
        };
    }
    function r() {
        let R = !1, ee = null, Q = null, Ee = null;
        return {
            setTest: function(me) {
                me ? le(2929) : fe(2929);
            },
            setMask: function(me) {
                ee !== me && !R && (s.depthMask(me), ee = me);
            },
            setFunc: function(me) {
                if (Q !== me) {
                    if (me) switch(me){
                        case Eu:
                            s.depthFunc(512);
                            break;
                        case Au:
                            s.depthFunc(519);
                            break;
                        case Cu:
                            s.depthFunc(513);
                            break;
                        case ea:
                            s.depthFunc(515);
                            break;
                        case Lu:
                            s.depthFunc(514);
                            break;
                        case Ru:
                            s.depthFunc(518);
                            break;
                        case Pu:
                            s.depthFunc(516);
                            break;
                        case Iu:
                            s.depthFunc(517);
                            break;
                        default:
                            s.depthFunc(515);
                    }
                    else s.depthFunc(515);
                    Q = me;
                }
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me) {
                Ee !== me && (s.clearDepth(me), Ee = me);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null;
            }
        };
    }
    function o() {
        let R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
        return {
            setTest: function(We) {
                R || (We ? le(2960) : fe(2960));
            },
            setMask: function(We) {
                ee !== We && !R && (s.stencilMask(We), ee = We);
            },
            setFunc: function(We, Ut, Ot) {
                (Q !== We || Ee !== Ut || me !== Ot) && (s.stencilFunc(We, Ut, Ot), Q = We, Ee = Ut, me = Ot);
            },
            setOp: function(We, Ut, Ot) {
                (Re !== We || oe !== Ut || Le !== Ot) && (s.stencilOp(We, Ut, Ot), Re = We, oe = Ut, Le = Ot);
            },
            setLocked: function(We) {
                R = We;
            },
            setClear: function(We) {
                Xe !== We && (s.clearStencil(We), Xe = We);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
            }
        };
    }
    let a = new i, l = new r, c = new o, h = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, P = s.getParameter(35661), w = !1, E = 0, D = s.getParameter(7938);
    D.indexOf("WebGL") !== -1 ? (E = parseFloat(/^WebGL (\d)/.exec(D)[1]), w = E >= 1) : D.indexOf("OpenGL ES") !== -1 && (E = parseFloat(/^OpenGL ES (\d)/.exec(D)[1]), w = E >= 2);
    let U = null, F = {}, O = s.getParameter(3088), ne = s.getParameter(2978), ce = new Ve().fromArray(O), V = new Ve().fromArray(ne);
    function W(R, ee, Q) {
        let Ee = new Uint8Array(4), me = s.createTexture();
        s.bindTexture(R, me), s.texParameteri(R, 10241, 9728), s.texParameteri(R, 10240, 9728);
        for(let Re = 0; Re < Q; Re++)s.texImage2D(ee + Re, 0, 6408, 1, 1, 0, 6408, 5121, Ee);
        return me;
    }
    let he = {};
    he[3553] = W(3553, 3553, 1), he[34067] = W(34067, 34069, 6), a.setClear(0, 0, 0, 1), l.setClear(1), c.setClear(0), le(2929), l.setFunc(ea), Oe(!1), G(tl), le(2884), ge(vn);
    function le(R) {
        h[R] !== !0 && (s.enable(R), h[R] = !0);
    }
    function fe(R) {
        h[R] !== !1 && (s.disable(R), h[R] = !1);
    }
    function Be(R, ee) {
        return u[R] !== ee ? (s.bindFramebuffer(R, ee), u[R] = ee, n && (R === 36009 && (u[36160] = ee), R === 36160 && (u[36009] = ee)), !0) : !1;
    }
    function Y(R) {
        return d !== R ? (s.useProgram(R), d = R, !0) : !1;
    }
    let Ce = {
        [_i]: 32774,
        [mu]: 32778,
        [gu]: 32779
    };
    if (n) Ce[sl] = 32775, Ce[ol] = 32776;
    else {
        let R = e.get("EXT_blend_minmax");
        R !== null && (Ce[sl] = R.MIN_EXT, Ce[ol] = R.MAX_EXT);
    }
    let ye = {
        [xu]: 0,
        [yu]: 1,
        [vu]: 768,
        [Gc]: 770,
        [Tu]: 776,
        [wu]: 774,
        [Mu]: 772,
        [_u]: 769,
        [Vc]: 771,
        [Su]: 775,
        [bu]: 773
    };
    function ge(R, ee, Q, Ee, me, Re, oe, Le) {
        if (R === vn) {
            f === !0 && (fe(3042), f = !1);
            return;
        }
        if (f === !1 && (le(3042), f = !0), R !== pu) {
            if (R !== m || Le !== b) {
                if ((x !== _i || p !== _i) && (s.blendEquation(32774), x = _i, p = _i), Le) switch(R){
                    case sr:
                        s.blendFuncSeparate(1, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(1, 1);
                        break;
                    case il:
                        s.blendFuncSeparate(0, 0, 769, 771);
                        break;
                    case rl:
                        s.blendFuncSeparate(0, 768, 0, 770);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                else switch(R){
                    case sr:
                        s.blendFuncSeparate(770, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(770, 1);
                        break;
                    case il:
                        s.blendFunc(0, 769);
                        break;
                    case rl:
                        s.blendFunc(0, 768);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                v = null, g = null, _ = null, y = null, m = R, b = Le;
            }
            return;
        }
        me = me || ee, Re = Re || Q, oe = oe || Ee, (ee !== x || me !== p) && (s.blendEquationSeparate(Ce[ee], Ce[me]), x = ee, p = me), (Q !== v || Ee !== g || Re !== _ || oe !== y) && (s.blendFuncSeparate(ye[Q], ye[Ee], ye[Re], ye[oe]), v = Q, g = Ee, _ = Re, y = oe), m = R, b = null;
    }
    function xe(R, ee) {
        R.side === Ci ? fe(2884) : le(2884);
        let Q = R.side === it;
        ee && (Q = !Q), Oe(Q), R.blending === sr && R.transparent === !1 ? ge(vn) : ge(R.blending, R.blendEquation, R.blendSrc, R.blendDst, R.blendEquationAlpha, R.blendSrcAlpha, R.blendDstAlpha, R.premultipliedAlpha), l.setFunc(R.depthFunc), l.setTest(R.depthTest), l.setMask(R.depthWrite), a.setMask(R.colorWrite);
        let Ee = R.stencilWrite;
        c.setTest(Ee), Ee && (c.setMask(R.stencilWriteMask), c.setFunc(R.stencilFunc, R.stencilRef, R.stencilFuncMask), c.setOp(R.stencilFail, R.stencilZFail, R.stencilZPass)), K(R.polygonOffset, R.polygonOffsetFactor, R.polygonOffsetUnits), R.alphaToCoverage === !0 ? le(32926) : fe(32926);
    }
    function Oe(R) {
        A !== R && (R ? s.frontFace(2304) : s.frontFace(2305), A = R);
    }
    function G(R) {
        R !== uu ? (le(2884), R !== L && (R === tl ? s.cullFace(1029) : R === du ? s.cullFace(1028) : s.cullFace(1032))) : fe(2884), L = R;
    }
    function j(R) {
        R !== I && (w && s.lineWidth(R), I = R);
    }
    function K(R, ee, Q) {
        R ? (le(32823), (k !== ee || B !== Q) && (s.polygonOffset(ee, Q), k = ee, B = Q)) : fe(32823);
    }
    function ue(R) {
        R ? le(3089) : fe(3089);
    }
    function se(R) {
        R === void 0 && (R = 33984 + P - 1), U !== R && (s.activeTexture(R), U = R);
    }
    function Se(R, ee) {
        U === null && se();
        let Q = F[U];
        Q === void 0 && (Q = {
            type: void 0,
            texture: void 0
        }, F[U] = Q), (Q.type !== R || Q.texture !== ee) && (s.bindTexture(R, ee || he[R]), Q.type = R, Q.texture = ee);
    }
    function Te() {
        let R = F[U];
        R !== void 0 && R.type !== void 0 && (s.bindTexture(R.type, null), R.type = void 0, R.texture = void 0);
    }
    function Pe() {
        try {
            s.compressedTexImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Ye() {
        try {
            s.texSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function C() {
        try {
            s.texSubImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function T() {
        try {
            s.compressedTexSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function J() {
        try {
            s.texStorage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function $() {
        try {
            s.texStorage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function re() {
        try {
            s.texImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Z() {
        try {
            s.texImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Me(R) {
        ce.equals(R) === !1 && (s.scissor(R.x, R.y, R.z, R.w), ce.copy(R));
    }
    function ve(R) {
        V.equals(R) === !1 && (s.viewport(R.x, R.y, R.z, R.w), V.copy(R));
    }
    function te() {
        s.disable(3042), s.disable(2884), s.disable(2929), s.disable(32823), s.disable(3089), s.disable(2960), s.disable(32926), s.blendEquation(32774), s.blendFunc(1, 0), s.blendFuncSeparate(1, 0, 1, 0), s.colorMask(!0, !0, !0, !0), s.clearColor(0, 0, 0, 0), s.depthMask(!0), s.depthFunc(513), s.clearDepth(1), s.stencilMask(4294967295), s.stencilFunc(519, 0, 4294967295), s.stencilOp(7680, 7680, 7680), s.clearStencil(0), s.cullFace(1029), s.frontFace(2305), s.polygonOffset(0, 0), s.activeTexture(33984), s.bindFramebuffer(36160, null), n === !0 && (s.bindFramebuffer(36009, null), s.bindFramebuffer(36008, null)), s.useProgram(null), s.lineWidth(1), s.scissor(0, 0, s.canvas.width, s.canvas.height), s.viewport(0, 0, s.canvas.width, s.canvas.height), h = {}, U = null, F = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, ce.set(0, 0, s.canvas.width, s.canvas.height), V.set(0, 0, s.canvas.width, s.canvas.height), a.reset(), l.reset(), c.reset();
    }
    return {
        buffers: {
            color: a,
            depth: l,
            stencil: c
        },
        enable: le,
        disable: fe,
        bindFramebuffer: Be,
        useProgram: Y,
        setBlending: ge,
        setMaterial: xe,
        setFlipSided: Oe,
        setCullFace: G,
        setLineWidth: j,
        setPolygonOffset: K,
        setScissorTest: ue,
        activeTexture: se,
        bindTexture: Se,
        unbindTexture: Te,
        compressedTexImage2D: Pe,
        texImage2D: re,
        texImage3D: Z,
        texStorage2D: J,
        texStorage3D: $,
        texSubImage2D: Ye,
        texSubImage3D: C,
        compressedTexSubImage2D: T,
        scissor: Me,
        viewport: ve,
        reset: te
    };
}
function Tx(s, e, t, n, i, r, o) {
    let a = i.isWebGL2, l = i.maxTextures, c = i.maxCubemapSize, h = i.maxTextureSize, u = i.maxSamples, f = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : void 0, m = new WeakMap, x, v = !1;
    try {
        v = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
    } catch  {}
    function g(C, T) {
        return v ? new OffscreenCanvas(C, T) : qs("canvas");
    }
    function p(C, T, J, $) {
        let re = 1;
        if ((C.width > $ || C.height > $) && (re = $ / Math.max(C.width, C.height)), re < 1 || T === !0) if (typeof HTMLImageElement < "u" && C instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && C instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && C instanceof ImageBitmap) {
            let Z = T ? Jc : Math.floor, Me = Z(re * C.width), ve = Z(re * C.height);
            x === void 0 && (x = g(Me, ve));
            let te = J ? g(Me, ve) : x;
            return te.width = Me, te.height = ve, te.getContext("2d").drawImage(C, 0, 0, Me, ve), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + C.width + "x" + C.height + ") to (" + Me + "x" + ve + ")."), te;
        } else return "data" in C && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + C.width + "x" + C.height + ")."), C;
        return C;
    }
    function _(C) {
        return ia(C.width) && ia(C.height);
    }
    function y(C) {
        return a ? !1 : C.wrapS !== vt || C.wrapT !== vt || C.minFilter !== rt && C.minFilter !== tt;
    }
    function b(C, T) {
        return C.generateMipmaps && T && C.minFilter !== rt && C.minFilter !== tt;
    }
    function A(C) {
        s.generateMipmap(C);
    }
    function L(C, T, J, $) {
        if (a === !1) return T;
        if (C !== null) {
            if (s[C] !== void 0) return s[C];
            console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + C + "'");
        }
        let re = T;
        return T === 6403 && (J === 5126 && (re = 33326), J === 5131 && (re = 33325), J === 5121 && (re = 33321)), T === 6407 && (J === 5126 && (re = 34837), J === 5131 && (re = 34843), J === 5121 && (re = 32849)), T === 6408 && (J === 5126 && (re = 34836), J === 5131 && (re = 34842), J === 5121 && (re = $ === Oi ? 35907 : 32856)), (re === 33325 || re === 33326 || re === 34842 || re === 34836) && e.get("EXT_color_buffer_float"), re;
    }
    function I(C, T, J) {
        return b(C, J) === !0 || C.isFramebufferTexture && C.minFilter !== rt && C.minFilter !== tt ? Math.log2(Math.max(T.width, T.height)) + 1 : C.mipmaps !== void 0 && C.mipmaps.length > 0 ? C.mipmaps.length : C.isCompressedTexture && Array.isArray(C.image) ? T.mipmaps.length : 1;
    }
    function k(C) {
        return C === rt || C === ta || C === na ? 9728 : 9729;
    }
    function B(C) {
        let T = C.target;
        T.removeEventListener("dispose", B), w(T), T.isVideoTexture && m.delete(T), o.memory.textures--;
    }
    function P(C) {
        let T = C.target;
        T.removeEventListener("dispose", P), E(T);
    }
    function w(C) {
        let T = n.get(C);
        T.__webglInit !== void 0 && (s.deleteTexture(T.__webglTexture), n.remove(C));
    }
    function E(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        if (!!C) {
            if ($.__webglTexture !== void 0 && (s.deleteTexture($.__webglTexture), o.memory.textures--), C.depthTexture && C.depthTexture.dispose(), C.isWebGLCubeRenderTarget) for(let re = 0; re < 6; re++)s.deleteFramebuffer(J.__webglFramebuffer[re]), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer[re]);
            else s.deleteFramebuffer(J.__webglFramebuffer), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer), J.__webglMultisampledFramebuffer && s.deleteFramebuffer(J.__webglMultisampledFramebuffer), J.__webglColorRenderbuffer && s.deleteRenderbuffer(J.__webglColorRenderbuffer), J.__webglDepthRenderbuffer && s.deleteRenderbuffer(J.__webglDepthRenderbuffer);
            if (C.isWebGLMultipleRenderTargets) for(let re = 0, Z = T.length; re < Z; re++){
                let Me = n.get(T[re]);
                Me.__webglTexture && (s.deleteTexture(Me.__webglTexture), o.memory.textures--), n.remove(T[re]);
            }
            n.remove(T), n.remove(C);
        }
    }
    let D = 0;
    function U() {
        D = 0;
    }
    function F() {
        let C = D;
        return C >= l && console.warn("THREE.WebGLTextures: Trying to use " + C + " texture units while this GPU supports only " + l), D += 1, C;
    }
    function O(C, T) {
        let J = n.get(C);
        if (C.isVideoTexture && se(C), C.version > 0 && J.__version !== C.version) {
            let $ = C.image;
            if ($ === void 0) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else if ($.complete === !1) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            else {
                Be(J, C, T);
                return;
            }
        }
        t.activeTexture(33984 + T), t.bindTexture(3553, J.__webglTexture);
    }
    function ne(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(35866, J.__webglTexture);
    }
    function ce(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(32879, J.__webglTexture);
    }
    function V(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Y(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(34067, J.__webglTexture);
    }
    let W = {
        [Ns]: 10497,
        [vt]: 33071,
        [Bs]: 33648
    }, he = {
        [rt]: 9728,
        [ta]: 9984,
        [na]: 9986,
        [tt]: 9729,
        [Wc]: 9985,
        [Ui]: 9987
    };
    function le(C, T, J) {
        if (J ? (s.texParameteri(C, 10242, W[T.wrapS]), s.texParameteri(C, 10243, W[T.wrapT]), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, W[T.wrapR]), s.texParameteri(C, 10240, he[T.magFilter]), s.texParameteri(C, 10241, he[T.minFilter])) : (s.texParameteri(C, 10242, 33071), s.texParameteri(C, 10243, 33071), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, 33071), (T.wrapS !== vt || T.wrapT !== vt) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), s.texParameteri(C, 10240, k(T.magFilter)), s.texParameteri(C, 10241, k(T.minFilter)), T.minFilter !== rt && T.minFilter !== tt && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), e.has("EXT_texture_filter_anisotropic") === !0) {
            let $ = e.get("EXT_texture_filter_anisotropic");
            if (T.type === nn && e.has("OES_texture_float_linear") === !1 || a === !1 && T.type === kn && e.has("OES_texture_half_float_linear") === !1) return;
            (T.anisotropy > 1 || n.get(T).__currentAnisotropy) && (s.texParameterf(C, $.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(T.anisotropy, i.getMaxAnisotropy())), n.get(T).__currentAnisotropy = T.anisotropy);
        }
    }
    function fe(C, T) {
        C.__webglInit === void 0 && (C.__webglInit = !0, T.addEventListener("dispose", B), C.__webglTexture = s.createTexture(), o.memory.textures++);
    }
    function Be(C, T, J) {
        let $ = 3553;
        T.isDataTexture2DArray && ($ = 35866), T.isDataTexture3D && ($ = 32879), fe(C, T), t.activeTexture(33984 + J), t.bindTexture($, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let re = y(T) && _(T.image) === !1, Z = p(T.image, re, !1, h), Me = _(Z) || a, ve = r.convert(T.format), te = r.convert(T.type), R = L(T.internalFormat, ve, te, T.encoding);
        le($, T, Me);
        let ee, Q = T.mipmaps, Ee = a && T.isVideoTexture !== !0, me = C.__version === void 0, Re = I(T, Z, Me);
        if (T.isDepthTexture) R = 6402, a ? T.type === nn ? R = 36012 : T.type === Ps ? R = 33190 : T.type === Ti ? R = 35056 : R = 33189 : T.type === nn && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), T.format === Vn && R === 6402 && T.type !== cr && T.type !== Ps && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), T.type = cr, te = r.convert(T.type)), T.format === Li && R === 6402 && (R = 34041, T.type !== Ti && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), T.type = Ti, te = r.convert(T.type))), Ee && me ? t.texStorage2D(3553, 1, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (T.isDataTexture) if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], Ee ? t.texSubImage2D(3553, 0, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe, R, ee.width, ee.height, 0, ve, te, ee.data);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, Z.width, Z.height, ve, te, Z.data)) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, Z.data);
        else if (T.isCompressedTexture) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], T.format !== ct && T.format !== Gn ? ve !== null ? Ee ? t.compressedTexSubImage2D(3553, oe, 0, 0, ee.width, ee.height, ve, ee.data) : t.compressedTexImage2D(3553, oe, R, ee.width, ee.height, 0, ee.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : Ee ? t.texSubImage2D(3553, oe, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe, R, ee.width, ee.height, 0, ve, te, ee.data);
        } else if (T.isDataTexture2DArray) Ee ? (me && t.texStorage3D(35866, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(35866, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(35866, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isDataTexture3D) Ee ? (me && t.texStorage3D(32879, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(32879, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(32879, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isFramebufferTexture) Ee && me ? t.texStorage2D(3553, Re, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], Ee ? t.texSubImage2D(3553, oe, 0, 0, ve, te, ee) : t.texImage2D(3553, oe, R, ve, te, ee);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, ve, te, Z)) : t.texImage2D(3553, 0, R, ve, te, Z);
        b(T, Me) && A($), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Y(C, T, J) {
        if (T.image.length !== 6) return;
        fe(C, T), t.activeTexture(33984 + J), t.bindTexture(34067, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let $ = T && (T.isCompressedTexture || T.image[0].isCompressedTexture), re = T.image[0] && T.image[0].isDataTexture, Z = [];
        for(let oe = 0; oe < 6; oe++)!$ && !re ? Z[oe] = p(T.image[oe], !1, !0, c) : Z[oe] = re ? T.image[oe].image : T.image[oe];
        let Me = Z[0], ve = _(Me) || a, te = r.convert(T.format), R = r.convert(T.type), ee = L(T.internalFormat, te, R, T.encoding), Q = a && T.isVideoTexture !== !0, Ee = C.__version === void 0, me = I(T, Me, ve);
        le(34067, T, ve);
        let Re;
        if ($) {
            Q && Ee && t.texStorage2D(34067, me, ee, Me.width, Me.height);
            for(let oe = 0; oe < 6; oe++){
                Re = Z[oe].mipmaps;
                for(let Le = 0; Le < Re.length; Le++){
                    let Xe = Re[Le];
                    T.format !== ct && T.format !== Gn ? te !== null ? Q ? t.compressedTexSubImage2D(34069 + oe, Le, 0, 0, Xe.width, Xe.height, te, Xe.data) : t.compressedTexImage2D(34069 + oe, Le, ee, Xe.width, Xe.height, 0, Xe.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : Q ? t.texSubImage2D(34069 + oe, Le, 0, 0, Xe.width, Xe.height, te, R, Xe.data) : t.texImage2D(34069 + oe, Le, ee, Xe.width, Xe.height, 0, te, R, Xe.data);
                }
            }
        } else {
            Re = T.mipmaps, Q && Ee && (Re.length > 0 && me++, t.texStorage2D(34067, me, ee, Z[0].width, Z[0].height));
            for(let oe = 0; oe < 6; oe++)if (re) {
                Q ? t.texSubImage2D(34069 + oe, 0, 0, 0, Z[oe].width, Z[oe].height, te, R, Z[oe].data) : t.texImage2D(34069 + oe, 0, ee, Z[oe].width, Z[oe].height, 0, te, R, Z[oe].data);
                for(let Le = 0; Le < Re.length; Le++){
                    let We = Re[Le].image[oe].image;
                    Q ? t.texSubImage2D(34069 + oe, Le + 1, 0, 0, We.width, We.height, te, R, We.data) : t.texImage2D(34069 + oe, Le + 1, ee, We.width, We.height, 0, te, R, We.data);
                }
            } else {
                Q ? t.texSubImage2D(34069 + oe, 0, 0, 0, te, R, Z[oe]) : t.texImage2D(34069 + oe, 0, ee, te, R, Z[oe]);
                for(let Le = 0; Le < Re.length; Le++){
                    let Xe = Re[Le];
                    Q ? t.texSubImage2D(34069 + oe, Le + 1, 0, 0, te, R, Xe.image[oe]) : t.texImage2D(34069 + oe, Le + 1, ee, te, R, Xe.image[oe]);
                }
            }
        }
        b(T, ve) && A(34067), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Ce(C, T, J, $, re) {
        let Z = r.convert(J.format), Me = r.convert(J.type), ve = L(J.internalFormat, Z, Me, J.encoding);
        n.get(T).__hasExternalTextures || (re === 32879 || re === 35866 ? t.texImage3D(re, 0, ve, T.width, T.height, T.depth, 0, Z, Me, null) : t.texImage2D(re, 0, ve, T.width, T.height, 0, Z, Me, null)), t.bindFramebuffer(36160, C), T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, $, re, n.get(J).__webglTexture, 0, ue(T)) : s.framebufferTexture2D(36160, $, re, n.get(J).__webglTexture, 0), t.bindFramebuffer(36160, null);
    }
    function ye(C, T, J) {
        if (s.bindRenderbuffer(36161, C), T.depthBuffer && !T.stencilBuffer) {
            let $ = 33189;
            if (J || T.useRenderToTexture) {
                let re = T.depthTexture;
                re && re.isDepthTexture && (re.type === nn ? $ = 36012 : re.type === Ps && ($ = 33190));
                let Z = ue(T);
                T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, Z, $, T.width, T.height) : s.renderbufferStorageMultisample(36161, Z, $, T.width, T.height);
            } else s.renderbufferStorage(36161, $, T.width, T.height);
            s.framebufferRenderbuffer(36160, 36096, 36161, C);
        } else if (T.depthBuffer && T.stencilBuffer) {
            let $ = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, $, 35056, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, $, 35056, T.width, T.height) : s.renderbufferStorage(36161, 34041, T.width, T.height), s.framebufferRenderbuffer(36160, 33306, 36161, C);
        } else {
            let $ = T.isWebGLMultipleRenderTargets === !0 ? T.texture[0] : T.texture, re = r.convert($.format), Z = r.convert($.type), Me = L($.internalFormat, re, Z, $.encoding), ve = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, ve, Me, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, ve, Me, T.width, T.height) : s.renderbufferStorage(36161, Me, T.width, T.height);
        }
        s.bindRenderbuffer(36161, null);
    }
    function ge(C, T) {
        if (T && T.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
        if (t.bindFramebuffer(36160, C), !(T.depthTexture && T.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
        (!n.get(T.depthTexture).__webglTexture || T.depthTexture.image.width !== T.width || T.depthTexture.image.height !== T.height) && (T.depthTexture.image.width = T.width, T.depthTexture.image.height = T.height, T.depthTexture.needsUpdate = !0), O(T.depthTexture, 0);
        let $ = n.get(T.depthTexture).__webglTexture, re = ue(T);
        if (T.depthTexture.format === Vn) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, $, 0, re) : s.framebufferTexture2D(36160, 36096, 3553, $, 0);
        else if (T.depthTexture.format === Li) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, $, 0, re) : s.framebufferTexture2D(36160, 33306, 3553, $, 0);
        else throw new Error("Unknown depthTexture format");
    }
    function xe(C) {
        let T = n.get(C), J = C.isWebGLCubeRenderTarget === !0;
        if (C.depthTexture && !T.__autoAllocateDepthBuffer) {
            if (J) throw new Error("target.depthTexture not supported in Cube render targets");
            ge(T.__webglFramebuffer, C);
        } else if (J) {
            T.__webglDepthbuffer = [];
            for(let $ = 0; $ < 6; $++)t.bindFramebuffer(36160, T.__webglFramebuffer[$]), T.__webglDepthbuffer[$] = s.createRenderbuffer(), ye(T.__webglDepthbuffer[$], C, !1);
        } else t.bindFramebuffer(36160, T.__webglFramebuffer), T.__webglDepthbuffer = s.createRenderbuffer(), ye(T.__webglDepthbuffer, C, !1);
        t.bindFramebuffer(36160, null);
    }
    function Oe(C, T, J) {
        let $ = n.get(C);
        T !== void 0 && Ce($.__webglFramebuffer, C, C.texture, 36064, 3553), J !== void 0 && xe(C);
    }
    function G(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        C.addEventListener("dispose", P), C.isWebGLMultipleRenderTargets !== !0 && ($.__webglTexture === void 0 && ($.__webglTexture = s.createTexture()), $.__version = T.version, o.memory.textures++);
        let re = C.isWebGLCubeRenderTarget === !0, Z = C.isWebGLMultipleRenderTargets === !0, Me = T.isDataTexture3D || T.isDataTexture2DArray, ve = _(C) || a;
        if (a && T.format === Gn && (T.type === nn || T.type === kn) && (T.format = ct, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), re) {
            J.__webglFramebuffer = [];
            for(let te = 0; te < 6; te++)J.__webglFramebuffer[te] = s.createFramebuffer();
        } else if (J.__webglFramebuffer = s.createFramebuffer(), Z) if (i.drawBuffers) {
            let te = C.texture;
            for(let R = 0, ee = te.length; R < ee; R++){
                let Q = n.get(te[R]);
                Q.__webglTexture === void 0 && (Q.__webglTexture = s.createTexture(), o.memory.textures++);
            }
        } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
        else if (C.useRenderbuffer) if (a) {
            J.__webglMultisampledFramebuffer = s.createFramebuffer(), J.__webglColorRenderbuffer = s.createRenderbuffer(), s.bindRenderbuffer(36161, J.__webglColorRenderbuffer);
            let te = r.convert(T.format), R = r.convert(T.type), ee = L(T.internalFormat, te, R, T.encoding), Q = ue(C);
            s.renderbufferStorageMultisample(36161, Q, ee, C.width, C.height), t.bindFramebuffer(36160, J.__webglMultisampledFramebuffer), s.framebufferRenderbuffer(36160, 36064, 36161, J.__webglColorRenderbuffer), s.bindRenderbuffer(36161, null), C.depthBuffer && (J.__webglDepthRenderbuffer = s.createRenderbuffer(), ye(J.__webglDepthRenderbuffer, C, !0)), t.bindFramebuffer(36160, null);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
        if (re) {
            t.bindTexture(34067, $.__webglTexture), le(34067, T, ve);
            for(let te = 0; te < 6; te++)Ce(J.__webglFramebuffer[te], C, T, 36064, 34069 + te);
            b(T, ve) && A(34067), t.unbindTexture();
        } else if (Z) {
            let te = C.texture;
            for(let R = 0, ee = te.length; R < ee; R++){
                let Q = te[R], Ee = n.get(Q);
                t.bindTexture(3553, Ee.__webglTexture), le(3553, Q, ve), Ce(J.__webglFramebuffer, C, Q, 36064 + R, 3553), b(Q, ve) && A(3553);
            }
            t.unbindTexture();
        } else {
            let te = 3553;
            Me && (a ? te = T.isDataTexture3D ? 32879 : 35866 : console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")), t.bindTexture(te, $.__webglTexture), le(te, T, ve), Ce(J.__webglFramebuffer, C, T, 36064, te), b(T, ve) && A(te), t.unbindTexture();
        }
        C.depthBuffer && xe(C);
    }
    function j(C) {
        let T = _(C) || a, J = C.isWebGLMultipleRenderTargets === !0 ? C.texture : [
            C.texture
        ];
        for(let $ = 0, re = J.length; $ < re; $++){
            let Z = J[$];
            if (b(Z, T)) {
                let Me = C.isWebGLCubeRenderTarget ? 34067 : 3553, ve = n.get(Z).__webglTexture;
                t.bindTexture(Me, ve), A(Me), t.unbindTexture();
            }
        }
    }
    function K(C) {
        if (C.useRenderbuffer) if (a) {
            let T = C.width, J = C.height, $ = 16384, re = [
                36064
            ], Z = C.stencilBuffer ? 33306 : 36096;
            C.depthBuffer && re.push(Z), C.ignoreDepthForMultisampleCopy || (C.depthBuffer && ($ |= 256), C.stencilBuffer && ($ |= 1024));
            let Me = n.get(C);
            t.bindFramebuffer(36008, Me.__webglMultisampledFramebuffer), t.bindFramebuffer(36009, Me.__webglFramebuffer), C.ignoreDepthForMultisampleCopy && (s.invalidateFramebuffer(36008, [
                Z
            ]), s.invalidateFramebuffer(36009, [
                Z
            ])), s.blitFramebuffer(0, 0, T, J, 0, 0, T, J, $, 9728), s.invalidateFramebuffer(36008, re), t.bindFramebuffer(36008, null), t.bindFramebuffer(36009, Me.__webglMultisampledFramebuffer);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
    }
    function ue(C) {
        return a && (C.useRenderbuffer || C.useRenderToTexture) ? Math.min(u, C.samples) : 0;
    }
    function se(C) {
        let T = o.render.frame;
        m.get(C) !== T && (m.set(C, T), C.update());
    }
    let Se = !1, Te = !1;
    function Pe(C, T) {
        C && C.isWebGLRenderTarget && (Se === !1 && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), Se = !0), C = C.texture), O(C, T);
    }
    function Ye(C, T) {
        C && C.isWebGLCubeRenderTarget && (Te === !1 && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), Te = !0), C = C.texture), V(C, T);
    }
    this.allocateTextureUnit = F, this.resetTextureUnits = U, this.setTexture2D = O, this.setTexture2DArray = ne, this.setTexture3D = ce, this.setTextureCube = V, this.rebindTextures = Oe, this.setupRenderTarget = G, this.updateRenderTargetMipmap = j, this.updateMultisampleRenderTarget = K, this.setupDepthRenderbuffer = xe, this.setupFrameBufferTexture = Ce, this.safeSetTexture2D = Pe, this.safeSetTextureCube = Ye;
}
function Ex(s, e, t) {
    let n = t.isWebGL2;
    function i(r) {
        let o;
        if (r === rn) return 5121;
        if (r === Vu) return 32819;
        if (r === Wu) return 32820;
        if (r === qu) return 33635;
        if (r === Hu) return 5120;
        if (r === ku) return 5122;
        if (r === cr) return 5123;
        if (r === Gu) return 5124;
        if (r === Ps) return 5125;
        if (r === nn) return 5126;
        if (r === kn) return n ? 5131 : (o = e.get("OES_texture_half_float"), o !== null ? o.HALF_FLOAT_OES : null);
        if (r === Xu) return 6406;
        if (r === Gn) return 6407;
        if (r === ct) return 6408;
        if (r === Ju) return 6409;
        if (r === Yu) return 6410;
        if (r === Vn) return 6402;
        if (r === Li) return 34041;
        if (r === Zu) return 6403;
        if (r === $u) return 36244;
        if (r === ju) return 33319;
        if (r === Qu) return 33320;
        if (r === Ku) return 36248;
        if (r === ed) return 36249;
        if (r === al || r === ll || r === cl || r === hl) if (o = e.get("WEBGL_compressed_texture_s3tc"), o !== null) {
            if (r === al) return o.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (r === ll) return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (r === cl) return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (r === hl) return o.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        } else return null;
        if (r === ul || r === dl || r === fl || r === pl) if (o = e.get("WEBGL_compressed_texture_pvrtc"), o !== null) {
            if (r === ul) return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (r === dl) return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (r === fl) return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (r === pl) return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
        } else return null;
        if (r === td) return o = e.get("WEBGL_compressed_texture_etc1"), o !== null ? o.COMPRESSED_RGB_ETC1_WEBGL : null;
        if ((r === ml || r === gl) && (o = e.get("WEBGL_compressed_texture_etc"), o !== null)) {
            if (r === ml) return o.COMPRESSED_RGB8_ETC2;
            if (r === gl) return o.COMPRESSED_RGBA8_ETC2_EAC;
        }
        if (r === nd || r === id || r === rd || r === sd || r === od || r === ad || r === ld || r === cd || r === hd || r === ud || r === dd || r === fd || r === pd || r === md || r === xd || r === yd || r === vd || r === _d || r === Md || r === bd || r === wd || r === Sd || r === Td || r === Ed || r === Ad || r === Cd || r === Ld || r === Rd) return o = e.get("WEBGL_compressed_texture_astc"), o !== null ? r : null;
        if (r === gd) return o = e.get("EXT_texture_compression_bptc"), o !== null ? r : null;
        if (r === Ti) return n ? 34042 : (o = e.get("WEBGL_depth_texture"), o !== null ? o.UNSIGNED_INT_24_8_WEBGL : null);
    }
    return {
        convert: i
    };
}
var ga = class extends ut {
    constructor(e = []){
        super();
        this.cameras = e;
    }
};
ga.prototype.isArrayCamera = !0;
var Hn = class extends Ne {
    constructor(){
        super();
        this.type = "Group";
    }
};
Hn.prototype.isGroup = !0;
var Ax = {
    type: "move"
}, Is = class {
    constructor(){
        this._targetRay = null, this._grip = null, this._hand = null;
    }
    getHandSpace() {
        return this._hand === null && (this._hand = new Hn, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
            pinching: !1
        }), this._hand;
    }
    getTargetRaySpace() {
        return this._targetRay === null && (this._targetRay = new Hn, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new M, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new M), this._targetRay;
    }
    getGripSpace() {
        return this._grip === null && (this._grip = new Hn, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new M, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new M), this._grip;
    }
    dispatchEvent(e) {
        return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
    }
    disconnect(e) {
        return this.dispatchEvent({
            type: "disconnected",
            data: e
        }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
    }
    update(e, t, n) {
        let i = null, r = null, o = null, a = this._targetRay, l = this._grip, c = this._hand;
        if (e && t.session.visibilityState !== "visible-blurred") if (a !== null && (i = t.getPose(e.targetRaySpace, n), i !== null && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale), i.linearVelocity ? (a.hasLinearVelocity = !0, a.linearVelocity.copy(i.linearVelocity)) : a.hasLinearVelocity = !1, i.angularVelocity ? (a.hasAngularVelocity = !0, a.angularVelocity.copy(i.angularVelocity)) : a.hasAngularVelocity = !1, this.dispatchEvent(Ax))), c && e.hand) {
            o = !0;
            for (let x of e.hand.values()){
                let v = t.getJointPose(x, n);
                if (c.joints[x.jointName] === void 0) {
                    let p = new Hn;
                    p.matrixAutoUpdate = !1, p.visible = !1, c.joints[x.jointName] = p, c.add(p);
                }
                let g = c.joints[x.jointName];
                v !== null && (g.matrix.fromArray(v.transform.matrix), g.matrix.decompose(g.position, g.rotation, g.scale), g.jointRadius = v.radius), g.visible = v !== null;
            }
            let h = c.joints["index-finger-tip"], u = c.joints["thumb-tip"], d = h.position.distanceTo(u.position), f = .02, m = .005;
            c.inputState.pinching && d > f + m ? (c.inputState.pinching = !1, this.dispatchEvent({
                type: "pinchend",
                handedness: e.handedness,
                target: this
            })) : !c.inputState.pinching && d <= f - m && (c.inputState.pinching = !0, this.dispatchEvent({
                type: "pinchstart",
                handedness: e.handedness,
                target: this
            }));
        } else l !== null && e.gripSpace && (r = t.getPose(e.gripSpace, n), r !== null && (l.matrix.fromArray(r.transform.matrix), l.matrix.decompose(l.position, l.rotation, l.scale), r.linearVelocity ? (l.hasLinearVelocity = !0, l.linearVelocity.copy(r.linearVelocity)) : l.hasLinearVelocity = !1, r.angularVelocity ? (l.hasAngularVelocity = !0, l.angularVelocity.copy(r.angularVelocity)) : l.hasAngularVelocity = !1));
        return a !== null && (a.visible = i !== null), l !== null && (l.visible = r !== null), c !== null && (c.visible = o !== null), this;
    }
}, ks = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        if (h = h !== void 0 ? h : Vn, h !== Vn && h !== Li) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        n === void 0 && h === Vn && (n = cr), n === void 0 && h === Li && (n = Ti);
        super(null, i, r, o, a, l, h, n, c);
        this.image = {
            width: e,
            height: t
        }, this.magFilter = a !== void 0 ? a : rt, this.minFilter = l !== void 0 ? l : rt, this.flipY = !1, this.generateMipmaps = !1;
    }
};
ks.prototype.isDepthTexture = !0;
var vh = class extends En {
    constructor(e, t){
        super();
        let n = this, i = null, r = 1, o = null, a = "local-floor", l = e.extensions.has("WEBGL_multisampled_render_to_texture"), c = null, h = null, u = null, d = null, f = !1, m = null, x = t.getContextAttributes(), v = null, g = null, p = [], _ = new Map, y = new ut;
        y.layers.enable(1), y.viewport = new Ve;
        let b = new ut;
        b.layers.enable(2), b.viewport = new Ve;
        let A = [
            y,
            b
        ], L = new ga;
        L.layers.enable(1), L.layers.enable(2);
        let I = null, k = null;
        this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getTargetRaySpace();
        }, this.getControllerGrip = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getGripSpace();
        }, this.getHand = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getHandSpace();
        };
        function B(V) {
            let W = _.get(V.inputSource);
            W && W.dispatchEvent({
                type: V.type,
                data: V.inputSource
            });
        }
        function P() {
            _.forEach(function(V, W) {
                V.disconnect(W);
            }), _.clear(), I = null, k = null, e.setRenderTarget(v), d = null, u = null, h = null, i = null, g = null, ce.stop(), n.isPresenting = !1, n.dispatchEvent({
                type: "sessionend"
            });
        }
        this.setFramebufferScaleFactor = function(V) {
            r = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
        }, this.setReferenceSpaceType = function(V) {
            a = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
        }, this.getReferenceSpace = function() {
            return o;
        }, this.getBaseLayer = function() {
            return u !== null ? u : d;
        }, this.getBinding = function() {
            return h;
        }, this.getFrame = function() {
            return m;
        }, this.getSession = function() {
            return i;
        }, this.setSession = async function(V) {
            if (i = V, i !== null) {
                if (v = e.getRenderTarget(), i.addEventListener("select", B), i.addEventListener("selectstart", B), i.addEventListener("selectend", B), i.addEventListener("squeeze", B), i.addEventListener("squeezestart", B), i.addEventListener("squeezeend", B), i.addEventListener("end", P), i.addEventListener("inputsourceschange", w), x.xrCompatible !== !0 && await t.makeXRCompatible(), i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1) {
                    let W = {
                        antialias: i.renderState.layers === void 0 ? x.antialias : !0,
                        alpha: x.alpha,
                        depth: x.depth,
                        stencil: x.stencil,
                        framebufferScaleFactor: r
                    };
                    d = new XRWebGLLayer(i, t, W), i.updateRenderState({
                        baseLayer: d
                    }), g = new At(d.framebufferWidth, d.framebufferHeight, {
                        format: ct,
                        type: rn,
                        encoding: e.outputEncoding
                    });
                } else {
                    f = x.antialias;
                    let W = null, he = null, le = null;
                    x.depth && (le = x.stencil ? 35056 : 33190, W = x.stencil ? Li : Vn, he = x.stencil ? Ti : cr);
                    let fe = {
                        colorFormat: x.alpha || f ? 32856 : 32849,
                        depthFormat: le,
                        scaleFactor: r
                    };
                    h = new XRWebGLBinding(i, t), u = h.createProjectionLayer(fe), i.updateRenderState({
                        layers: [
                            u
                        ]
                    }), f ? g = new Xs(u.textureWidth, u.textureHeight, {
                        format: ct,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        useRenderToTexture: l,
                        encoding: e.outputEncoding
                    }) : g = new At(u.textureWidth, u.textureHeight, {
                        format: x.alpha ? ct : Gn,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        encoding: e.outputEncoding
                    });
                }
                this.setFoveation(1), o = await i.requestReferenceSpace(a), ce.setContext(i), ce.start(), n.isPresenting = !0, n.dispatchEvent({
                    type: "sessionstart"
                });
            }
        };
        function w(V) {
            let W = i.inputSources;
            for(let he = 0; he < p.length; he++)_.set(W[he], p[he]);
            for(let he = 0; he < V.removed.length; he++){
                let le = V.removed[he], fe = _.get(le);
                fe && (fe.dispatchEvent({
                    type: "disconnected",
                    data: le
                }), _.delete(le));
            }
            for(let he = 0; he < V.added.length; he++){
                let le = V.added[he], fe = _.get(le);
                fe && fe.dispatchEvent({
                    type: "connected",
                    data: le
                });
            }
        }
        let E = new M, D = new M;
        function U(V, W, he) {
            E.setFromMatrixPosition(W.matrixWorld), D.setFromMatrixPosition(he.matrixWorld);
            let le = E.distanceTo(D), fe = W.projectionMatrix.elements, Be = he.projectionMatrix.elements, Y = fe[14] / (fe[10] - 1), Ce = fe[14] / (fe[10] + 1), ye = (fe[9] + 1) / fe[5], ge = (fe[9] - 1) / fe[5], xe = (fe[8] - 1) / fe[0], Oe = (Be[8] + 1) / Be[0], G = Y * xe, j = Y * Oe, K = le / (-xe + Oe), ue = K * -xe;
            W.matrixWorld.decompose(V.position, V.quaternion, V.scale), V.translateX(ue), V.translateZ(K), V.matrixWorld.compose(V.position, V.quaternion, V.scale), V.matrixWorldInverse.copy(V.matrixWorld).invert();
            let se = Y + K, Se = Ce + K, Te = G - ue, Pe = j + (le - ue), Ye = ye * Ce / Se * se, C = ge * Ce / Se * se;
            V.projectionMatrix.makePerspective(Te, Pe, Ye, C, se, Se);
        }
        function F(V, W) {
            W === null ? V.matrixWorld.copy(V.matrix) : V.matrixWorld.multiplyMatrices(W.matrixWorld, V.matrix), V.matrixWorldInverse.copy(V.matrixWorld).invert();
        }
        this.updateCamera = function(V) {
            if (i === null) return;
            L.near = b.near = y.near = V.near, L.far = b.far = y.far = V.far, (I !== L.near || k !== L.far) && (i.updateRenderState({
                depthNear: L.near,
                depthFar: L.far
            }), I = L.near, k = L.far);
            let W = V.parent, he = L.cameras;
            F(L, W);
            for(let fe = 0; fe < he.length; fe++)F(he[fe], W);
            L.matrixWorld.decompose(L.position, L.quaternion, L.scale), V.position.copy(L.position), V.quaternion.copy(L.quaternion), V.scale.copy(L.scale), V.matrix.copy(L.matrix), V.matrixWorld.copy(L.matrixWorld);
            let le = V.children;
            for(let fe = 0, Be = le.length; fe < Be; fe++)le[fe].updateMatrixWorld(!0);
            he.length === 2 ? U(L, y, b) : L.projectionMatrix.copy(y.projectionMatrix);
        }, this.getCamera = function() {
            return L;
        }, this.getFoveation = function() {
            if (u !== null) return u.fixedFoveation;
            if (d !== null) return d.fixedFoveation;
        }, this.setFoveation = function(V) {
            u !== null && (u.fixedFoveation = V), d !== null && d.fixedFoveation !== void 0 && (d.fixedFoveation = V);
        };
        let O = null;
        function ne(V, W) {
            if (c = W.getViewerPose(o), m = W, c !== null) {
                let le = c.views;
                d !== null && (e.setRenderTargetFramebuffer(g, d.framebuffer), e.setRenderTarget(g));
                let fe = !1;
                le.length !== L.cameras.length && (L.cameras.length = 0, fe = !0);
                for(let Be = 0; Be < le.length; Be++){
                    let Y = le[Be], Ce = null;
                    if (d !== null) Ce = d.getViewport(Y);
                    else {
                        let ge = h.getViewSubImage(u, Y);
                        Ce = ge.viewport, Be === 0 && (e.setRenderTargetTextures(g, ge.colorTexture, u.ignoreDepthValues ? void 0 : ge.depthStencilTexture), e.setRenderTarget(g));
                    }
                    let ye = A[Be];
                    ye.matrix.fromArray(Y.transform.matrix), ye.projectionMatrix.fromArray(Y.projectionMatrix), ye.viewport.set(Ce.x, Ce.y, Ce.width, Ce.height), Be === 0 && L.matrix.copy(ye.matrix), fe === !0 && L.cameras.push(ye);
                }
            }
            let he = i.inputSources;
            for(let le = 0; le < p.length; le++){
                let fe = p[le], Be = he[le];
                fe.update(Be, W, o);
            }
            O && O(V, W), m = null;
        }
        let ce = new rh;
        ce.setAnimationLoop(ne), this.setAnimationLoop = function(V) {
            O = V;
        }, this.dispose = function() {};
    }
};
function Cx(s) {
    function e(g, p) {
        g.fogColor.value.copy(p.color), p.isFog ? (g.fogNear.value = p.near, g.fogFar.value = p.far) : p.isFogExp2 && (g.fogDensity.value = p.density);
    }
    function t(g, p, _, y, b) {
        p.isMeshBasicMaterial ? n(g, p) : p.isMeshLambertMaterial ? (n(g, p), l(g, p)) : p.isMeshToonMaterial ? (n(g, p), h(g, p)) : p.isMeshPhongMaterial ? (n(g, p), c(g, p)) : p.isMeshStandardMaterial ? (n(g, p), p.isMeshPhysicalMaterial ? d(g, p, b) : u(g, p)) : p.isMeshMatcapMaterial ? (n(g, p), f(g, p)) : p.isMeshDepthMaterial ? (n(g, p), m(g, p)) : p.isMeshDistanceMaterial ? (n(g, p), x(g, p)) : p.isMeshNormalMaterial ? (n(g, p), v(g, p)) : p.isLineBasicMaterial ? (i(g, p), p.isLineDashedMaterial && r(g, p)) : p.isPointsMaterial ? o(g, p, _, y) : p.isSpriteMaterial ? a(g, p) : p.isShadowMaterial ? (g.color.value.copy(p.color), g.opacity.value = p.opacity) : p.isShaderMaterial && (p.uniformsNeedUpdate = !1);
    }
    function n(g, p) {
        g.opacity.value = p.opacity, p.color && g.diffuse.value.copy(p.color), p.emissive && g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity), p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.specularMap && (g.specularMap.value = p.specularMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _ = s.get(p).envMap;
        _ && (g.envMap.value = _, g.flipEnvMap.value = _.isCubeTexture && _.isRenderTargetTexture === !1 ? -1 : 1, g.reflectivity.value = p.reflectivity, g.ior.value = p.ior, g.refractionRatio.value = p.refractionRatio), p.lightMap && (g.lightMap.value = p.lightMap, g.lightMapIntensity.value = p.lightMapIntensity), p.aoMap && (g.aoMap.value = p.aoMap, g.aoMapIntensity.value = p.aoMapIntensity);
        let y;
        p.map ? y = p.map : p.specularMap ? y = p.specularMap : p.displacementMap ? y = p.displacementMap : p.normalMap ? y = p.normalMap : p.bumpMap ? y = p.bumpMap : p.roughnessMap ? y = p.roughnessMap : p.metalnessMap ? y = p.metalnessMap : p.alphaMap ? y = p.alphaMap : p.emissiveMap ? y = p.emissiveMap : p.clearcoatMap ? y = p.clearcoatMap : p.clearcoatNormalMap ? y = p.clearcoatNormalMap : p.clearcoatRoughnessMap ? y = p.clearcoatRoughnessMap : p.specularIntensityMap ? y = p.specularIntensityMap : p.specularColorMap ? y = p.specularColorMap : p.transmissionMap ? y = p.transmissionMap : p.thicknessMap ? y = p.thicknessMap : p.sheenColorMap ? y = p.sheenColorMap : p.sheenRoughnessMap && (y = p.sheenRoughnessMap), y !== void 0 && (y.isWebGLRenderTarget && (y = y.texture), y.matrixAutoUpdate === !0 && y.updateMatrix(), g.uvTransform.value.copy(y.matrix));
        let b;
        p.aoMap ? b = p.aoMap : p.lightMap && (b = p.lightMap), b !== void 0 && (b.isWebGLRenderTarget && (b = b.texture), b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uv2Transform.value.copy(b.matrix));
    }
    function i(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity;
    }
    function r(g, p) {
        g.dashSize.value = p.dashSize, g.totalSize.value = p.dashSize + p.gapSize, g.scale.value = p.scale;
    }
    function o(g, p, _, y) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.size.value = p.size * _, g.scale.value = y * .5, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let b;
        p.map ? b = p.map : p.alphaMap && (b = p.alphaMap), b !== void 0 && (b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uvTransform.value.copy(b.matrix));
    }
    function a(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.rotation.value = p.rotation, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _;
        p.map ? _ = p.map : p.alphaMap && (_ = p.alphaMap), _ !== void 0 && (_.matrixAutoUpdate === !0 && _.updateMatrix(), g.uvTransform.value.copy(_.matrix));
    }
    function l(g, p) {
        p.emissiveMap && (g.emissiveMap.value = p.emissiveMap);
    }
    function c(g, p) {
        g.specular.value.copy(p.specular), g.shininess.value = Math.max(p.shininess, 1e-4), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function h(g, p) {
        p.gradientMap && (g.gradientMap.value = p.gradientMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function u(g, p) {
        g.roughness.value = p.roughness, g.metalness.value = p.metalness, p.roughnessMap && (g.roughnessMap.value = p.roughnessMap), p.metalnessMap && (g.metalnessMap.value = p.metalnessMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), s.get(p).envMap && (g.envMapIntensity.value = p.envMapIntensity);
    }
    function d(g, p, _) {
        u(g, p), g.ior.value = p.ior, p.sheen > 0 && (g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen), g.sheenRoughness.value = p.sheenRoughness, p.sheenColorMap && (g.sheenColorMap.value = p.sheenColorMap), p.sheenRoughnessMap && (g.sheenRoughnessMap.value = p.sheenRoughnessMap)), p.clearcoat > 0 && (g.clearcoat.value = p.clearcoat, g.clearcoatRoughness.value = p.clearcoatRoughness, p.clearcoatMap && (g.clearcoatMap.value = p.clearcoatMap), p.clearcoatRoughnessMap && (g.clearcoatRoughnessMap.value = p.clearcoatRoughnessMap), p.clearcoatNormalMap && (g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale), g.clearcoatNormalMap.value = p.clearcoatNormalMap, p.side === it && g.clearcoatNormalScale.value.negate())), p.transmission > 0 && (g.transmission.value = p.transmission, g.transmissionSamplerMap.value = _.texture, g.transmissionSamplerSize.value.set(_.width, _.height), p.transmissionMap && (g.transmissionMap.value = p.transmissionMap), g.thickness.value = p.thickness, p.thicknessMap && (g.thicknessMap.value = p.thicknessMap), g.attenuationDistance.value = p.attenuationDistance, g.attenuationColor.value.copy(p.attenuationColor)), g.specularIntensity.value = p.specularIntensity, g.specularColor.value.copy(p.specularColor), p.specularIntensityMap && (g.specularIntensityMap.value = p.specularIntensityMap), p.specularColorMap && (g.specularColorMap.value = p.specularColorMap);
    }
    function f(g, p) {
        p.matcap && (g.matcap.value = p.matcap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function m(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function x(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), g.referencePosition.value.copy(p.referencePosition), g.nearDistance.value = p.nearDistance, g.farDistance.value = p.farDistance;
    }
    function v(g, p) {
        p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    return {
        refreshFogUniforms: e,
        refreshMaterialUniforms: t
    };
}
function Lx() {
    let s = qs("canvas");
    return s.style.display = "block", s;
}
function qe(s = {}) {
    let e = s.canvas !== void 0 ? s.canvas : Lx(), t = s.context !== void 0 ? s.context : null, n = s.alpha !== void 0 ? s.alpha : !1, i = s.depth !== void 0 ? s.depth : !0, r = s.stencil !== void 0 ? s.stencil : !0, o = s.antialias !== void 0 ? s.antialias : !1, a = s.premultipliedAlpha !== void 0 ? s.premultipliedAlpha : !0, l = s.preserveDrawingBuffer !== void 0 ? s.preserveDrawingBuffer : !1, c = s.powerPreference !== void 0 ? s.powerPreference : "default", h = s.failIfMajorPerformanceCaveat !== void 0 ? s.failIfMajorPerformanceCaveat : !1, u = null, d = null, f = [], m = [];
    this.domElement = e, this.debug = {
        checkShaderErrors: !0
    }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.outputEncoding = Nt, this.physicallyCorrectLights = !1, this.toneMapping = _n, this.toneMappingExposure = 1;
    let x = this, v = !1, g = 0, p = 0, _ = null, y = -1, b = null, A = new Ve, L = new Ve, I = null, k = e.width, B = e.height, P = 1, w = null, E = null, D = new Ve(0, 0, k, B), U = new Ve(0, 0, k, B), F = !1, O = [], ne = new Dr, ce = !1, V = !1, W = null, he = new pe, le = new M, fe = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0
    };
    function Be() {
        return _ === null ? P : 1;
    }
    let Y = t;
    function Ce(S, N) {
        for(let H = 0; H < S.length; H++){
            let z = S[H], q = e.getContext(z, N);
            if (q !== null) return q;
        }
        return null;
    }
    try {
        let S = {
            alpha: n,
            depth: i,
            stencil: r,
            antialias: o,
            premultipliedAlpha: a,
            preserveDrawingBuffer: l,
            powerPreference: c,
            failIfMajorPerformanceCaveat: h
        };
        if ("setAttribute" in e && e.setAttribute("data-engine", `three.js r${ca}`), e.addEventListener("webglcontextlost", Ee, !1), e.addEventListener("webglcontextrestored", me, !1), Y === null) {
            let N = [
                "webgl2",
                "webgl",
                "experimental-webgl"
            ];
            if (x.isWebGL1Renderer === !0 && N.shift(), Y = Ce(N, S), Y === null) throw Ce(N) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
        }
        Y.getShaderPrecisionFormat === void 0 && (Y.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            };
        });
    } catch (S) {
        throw console.error("THREE.WebGLRenderer: " + S.message), S;
    }
    let ye, ge, xe, Oe, G, j, K, ue, se, Se, Te, Pe, Ye, C, T, J, $, re, Z, Me, ve, te, R;
    function ee() {
        ye = new Qm(Y), ge = new Xm(Y, ye, s), ye.init(ge), te = new Ex(Y, ye, ge), xe = new Sx(Y, ye, ge), O[0] = 1029, Oe = new tg(Y), G = new fx, j = new Tx(Y, ye, xe, G, ge, te, Oe), K = new Ym(x), ue = new jm(x), se = new gf(Y, ge), R = new Wm(Y, ye, se, ge), Se = new Km(Y, se, Oe, R), Te = new sg(Y, Se, se, Oe), Z = new rg(Y, ge, j), J = new Jm(G), Pe = new dx(x, K, ue, ye, ge, R, J), Ye = new Cx(G), C = new mx, T = new Mx(ye, ge), re = new Vm(x, K, xe, Te, a), $ = new yh(x, Te, ge), Me = new qm(Y, ye, Oe, ge), ve = new eg(Y, ye, Oe, ge), Oe.programs = Pe.programs, x.capabilities = ge, x.extensions = ye, x.properties = G, x.renderLists = C, x.shadowMap = $, x.state = xe, x.info = Oe;
    }
    ee();
    let Q = new vh(x, Y);
    this.xr = Q, this.getContext = function() {
        return Y;
    }, this.getContextAttributes = function() {
        return Y.getContextAttributes();
    }, this.forceContextLoss = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.loseContext();
    }, this.forceContextRestore = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.restoreContext();
    }, this.getPixelRatio = function() {
        return P;
    }, this.setPixelRatio = function(S) {
        S !== void 0 && (P = S, this.setSize(k, B, !1));
    }, this.getSize = function(S) {
        return S.set(k, B);
    }, this.setSize = function(S, N, H) {
        if (Q.isPresenting) {
            console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
            return;
        }
        k = S, B = N, e.width = Math.floor(S * P), e.height = Math.floor(N * P), H !== !1 && (e.style.width = S + "px", e.style.height = N + "px"), this.setViewport(0, 0, S, N);
    }, this.getDrawingBufferSize = function(S) {
        return S.set(k * P, B * P).floor();
    }, this.setDrawingBufferSize = function(S, N, H) {
        k = S, B = N, P = H, e.width = Math.floor(S * H), e.height = Math.floor(N * H), this.setViewport(0, 0, S, N);
    }, this.getCurrentViewport = function(S) {
        return S.copy(A);
    }, this.getViewport = function(S) {
        return S.copy(D);
    }, this.setViewport = function(S, N, H, z) {
        S.isVector4 ? D.set(S.x, S.y, S.z, S.w) : D.set(S, N, H, z), xe.viewport(A.copy(D).multiplyScalar(P).floor());
    }, this.getScissor = function(S) {
        return S.copy(U);
    }, this.setScissor = function(S, N, H, z) {
        S.isVector4 ? U.set(S.x, S.y, S.z, S.w) : U.set(S, N, H, z), xe.scissor(L.copy(U).multiplyScalar(P).floor());
    }, this.getScissorTest = function() {
        return F;
    }, this.setScissorTest = function(S) {
        xe.setScissorTest(F = S);
    }, this.setOpaqueSort = function(S) {
        w = S;
    }, this.setTransparentSort = function(S) {
        E = S;
    }, this.getClearColor = function(S) {
        return S.copy(re.getClearColor());
    }, this.setClearColor = function() {
        re.setClearColor.apply(re, arguments);
    }, this.getClearAlpha = function() {
        return re.getClearAlpha();
    }, this.setClearAlpha = function() {
        re.setClearAlpha.apply(re, arguments);
    }, this.clear = function(S, N, H) {
        let z = 0;
        (S === void 0 || S) && (z |= 16384), (N === void 0 || N) && (z |= 256), (H === void 0 || H) && (z |= 1024), Y.clear(z);
    }, this.clearColor = function() {
        this.clear(!0, !1, !1);
    }, this.clearDepth = function() {
        this.clear(!1, !0, !1);
    }, this.clearStencil = function() {
        this.clear(!1, !1, !0);
    }, this.dispose = function() {
        e.removeEventListener("webglcontextlost", Ee, !1), e.removeEventListener("webglcontextrestored", me, !1), C.dispose(), T.dispose(), G.dispose(), K.dispose(), ue.dispose(), Te.dispose(), R.dispose(), Pe.dispose(), Q.dispose(), Q.removeEventListener("sessionstart", Ut), Q.removeEventListener("sessionend", Ot), W && (W.dispose(), W = null), Ln.stop();
    };
    function Ee(S) {
        S.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), v = !0;
    }
    function me() {
        console.log("THREE.WebGLRenderer: Context Restored."), v = !1;
        let S = Oe.autoReset, N = $.enabled, H = $.autoUpdate, z = $.needsUpdate, q = $.type;
        ee(), Oe.autoReset = S, $.enabled = N, $.autoUpdate = H, $.needsUpdate = z, $.type = q;
    }
    function Re(S) {
        let N = S.target;
        N.removeEventListener("dispose", Re), oe(N);
    }
    function oe(S) {
        Le(S), G.remove(S);
    }
    function Le(S) {
        let N = G.get(S).programs;
        N !== void 0 && (N.forEach(function(H) {
            Pe.releaseProgram(H);
        }), S.isShaderMaterial && Pe.releaseShaderCache(S));
    }
    this.renderBufferDirect = function(S, N, H, z, q, be) {
        N === null && (N = fe);
        let Ae = q.isMesh && q.matrixWorld.determinant() < 0, Ie = lu(S, N, H, z, q);
        xe.setMaterial(z, Ae);
        let we = H.index, He = H.attributes.position;
        if (we === null) {
            if (He === void 0 || He.count === 0) return;
        } else if (we.count === 0) return;
        let De = 1;
        z.wireframe === !0 && (we = Se.getWireframeAttribute(H), De = 2), R.setup(q, z, Ie, H, we);
        let ze, je = Me;
        we !== null && (ze = se.get(we), je = ve, je.setIndex(ze));
        let Rn = we !== null ? we.count : He.count, ei = H.drawRange.start * De, Ge = H.drawRange.count * De, Ht = be !== null ? be.start * De : 0, at = be !== null ? be.count * De : 1 / 0, kt = Math.max(ei, Ht), Gr = Math.min(Rn, ei + Ge, Ht + at) - 1, Gt = Math.max(0, Gr - kt + 1);
        if (Gt !== 0) {
            if (q.isMesh) z.wireframe === !0 ? (xe.setLineWidth(z.wireframeLinewidth * Be()), je.setMode(1)) : je.setMode(4);
            else if (q.isLine) {
                let Zt = z.linewidth;
                Zt === void 0 && (Zt = 1), xe.setLineWidth(Zt * Be()), q.isLineSegments ? je.setMode(1) : q.isLineLoop ? je.setMode(2) : je.setMode(3);
            } else q.isPoints ? je.setMode(0) : q.isSprite && je.setMode(4);
            if (q.isInstancedMesh) je.renderInstances(kt, Gt, q.count);
            else if (H.isInstancedBufferGeometry) {
                let Zt = Math.min(H.instanceCount, H._maxInstanceCount);
                je.renderInstances(kt, Gt, Zt);
            } else je.render(kt, Gt);
        }
    }, this.compile = function(S, N) {
        d = T.get(S), d.init(), m.push(d), S.traverseVisible(function(H) {
            H.isLight && H.layers.test(N.layers) && (d.pushLight(H), H.castShadow && d.pushShadow(H));
        }), d.setupLights(x.physicallyCorrectLights), S.traverse(function(H) {
            let z = H.material;
            if (z) if (Array.isArray(z)) for(let q = 0; q < z.length; q++){
                let be = z[q];
                xo(be, S, H);
            }
            else xo(z, S, H);
        }), m.pop(), d = null;
    };
    let Xe = null;
    function We(S) {
        Xe && Xe(S);
    }
    function Ut() {
        Ln.stop();
    }
    function Ot() {
        Ln.start();
    }
    let Ln = new rh;
    Ln.setAnimationLoop(We), typeof window < "u" && Ln.setContext(window), this.setAnimationLoop = function(S) {
        Xe = S, Q.setAnimationLoop(S), S === null ? Ln.stop() : Ln.start();
    }, Q.addEventListener("sessionstart", Ut), Q.addEventListener("sessionend", Ot), this.render = function(S, N) {
        if (N !== void 0 && N.isCamera !== !0) {
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            return;
        }
        if (v === !0) return;
        S.autoUpdate === !0 && S.updateMatrixWorld(), N.parent === null && N.updateMatrixWorld(), Q.enabled === !0 && Q.isPresenting === !0 && (Q.cameraAutoUpdate === !0 && Q.updateCamera(N), N = Q.getCamera()), S.isScene === !0 && S.onBeforeRender(x, S, N, _), d = T.get(S, m.length), d.init(), m.push(d), he.multiplyMatrices(N.projectionMatrix, N.matrixWorldInverse), ne.setFromProjectionMatrix(he), V = this.localClippingEnabled, ce = J.init(this.clippingPlanes, V, N), u = C.get(S, f.length), u.init(), f.push(u), Qa(S, N, 0, x.sortObjects), u.finish(), x.sortObjects === !0 && u.sort(w, E), ce === !0 && J.beginShadows();
        let H = d.state.shadowsArray;
        if ($.render(H, S, N), ce === !0 && J.endShadows(), this.info.autoReset === !0 && this.info.reset(), re.render(u, S), d.setupLights(x.physicallyCorrectLights), N.isArrayCamera) {
            let z = N.cameras;
            for(let q = 0, be = z.length; q < be; q++){
                let Ae = z[q];
                Ka(u, S, Ae, Ae.viewport);
            }
        } else Ka(u, S, N);
        _ !== null && (j.updateMultisampleRenderTarget(_), j.updateRenderTargetMipmap(_)), S.isScene === !0 && S.onAfterRender(x, S, N), xe.buffers.depth.setTest(!0), xe.buffers.depth.setMask(!0), xe.buffers.color.setMask(!0), xe.setPolygonOffset(!1), R.resetDefaultState(), y = -1, b = null, m.pop(), m.length > 0 ? d = m[m.length - 1] : d = null, f.pop(), f.length > 0 ? u = f[f.length - 1] : u = null;
    };
    function Qa(S, N, H, z) {
        if (S.visible === !1) return;
        if (S.layers.test(N.layers)) {
            if (S.isGroup) H = S.renderOrder;
            else if (S.isLOD) S.autoUpdate === !0 && S.update(N);
            else if (S.isLight) d.pushLight(S), S.castShadow && d.pushShadow(S);
            else if (S.isSprite) {
                if (!S.frustumCulled || ne.intersectsSprite(S)) {
                    z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                    let Ae = Te.update(S), Ie = S.material;
                    Ie.visible && u.push(S, Ae, Ie, H, le.z, null);
                }
            } else if ((S.isMesh || S.isLine || S.isPoints) && (S.isSkinnedMesh && S.skeleton.frame !== Oe.render.frame && (S.skeleton.update(), S.skeleton.frame = Oe.render.frame), !S.frustumCulled || ne.intersectsObject(S))) {
                z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                let Ae = Te.update(S), Ie = S.material;
                if (Array.isArray(Ie)) {
                    let we = Ae.groups;
                    for(let He = 0, De = we.length; He < De; He++){
                        let ze = we[He], je = Ie[ze.materialIndex];
                        je && je.visible && u.push(S, Ae, je, H, le.z, ze);
                    }
                } else Ie.visible && u.push(S, Ae, Ie, H, le.z, null);
            }
        }
        let be = S.children;
        for(let Ae = 0, Ie = be.length; Ae < Ie; Ae++)Qa(be[Ae], N, H, z);
    }
    function Ka(S, N, H, z) {
        let q = S.opaque, be = S.transmissive, Ae = S.transparent;
        d.setupLightsView(H), be.length > 0 && ou(q, N, H), z && xe.viewport(A.copy(z)), q.length > 0 && kr(q, N, H), be.length > 0 && kr(be, N, H), Ae.length > 0 && kr(Ae, N, H);
    }
    function ou(S, N, H) {
        if (W === null) {
            let Ae = o === !0 && ge.isWebGL2 === !0 ? Xs : At;
            W = new Ae(1024, 1024, {
                generateMipmaps: !0,
                type: te.convert(kn) !== null ? kn : rn,
                minFilter: Ui,
                magFilter: rt,
                wrapS: vt,
                wrapT: vt,
                useRenderToTexture: ye.has("WEBGL_multisampled_render_to_texture")
            });
        }
        let z = x.getRenderTarget();
        x.setRenderTarget(W), x.clear();
        let q = x.toneMapping;
        x.toneMapping = _n, kr(S, N, H), x.toneMapping = q, j.updateMultisampleRenderTarget(W), j.updateRenderTargetMipmap(W), x.setRenderTarget(z);
    }
    function kr(S, N, H) {
        let z = N.isScene === !0 ? N.overrideMaterial : null;
        for(let q = 0, be = S.length; q < be; q++){
            let Ae = S[q], Ie = Ae.object, we = Ae.geometry, He = z === null ? Ae.material : z, De = Ae.group;
            Ie.layers.test(H.layers) && au(Ie, N, H, we, He, De);
        }
    }
    function au(S, N, H, z, q, be) {
        S.onBeforeRender(x, N, H, z, q, be), S.modelViewMatrix.multiplyMatrices(H.matrixWorldInverse, S.matrixWorld), S.normalMatrix.getNormalMatrix(S.modelViewMatrix), q.onBeforeRender(x, N, H, z, S, be), q.transparent === !0 && q.side === Ci ? (q.side = it, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ai, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ci) : x.renderBufferDirect(H, N, z, q, S, be), S.onAfterRender(x, N, H, z, q, be);
    }
    function xo(S, N, H) {
        N.isScene !== !0 && (N = fe);
        let z = G.get(S), q = d.state.lights, be = d.state.shadowsArray, Ae = q.state.version, Ie = Pe.getParameters(S, q.state, be, N, H), we = Pe.getProgramCacheKey(Ie), He = z.programs;
        z.environment = S.isMeshStandardMaterial ? N.environment : null, z.fog = N.fog, z.envMap = (S.isMeshStandardMaterial ? ue : K).get(S.envMap || z.environment), He === void 0 && (S.addEventListener("dispose", Re), He = new Map, z.programs = He);
        let De = He.get(we);
        if (De !== void 0) {
            if (z.currentProgram === De && z.lightsStateVersion === Ae) return el(S, Ie), De;
        } else Ie.uniforms = Pe.getUniforms(S), S.onBuild(H, Ie, x), S.onBeforeCompile(Ie, x), De = Pe.acquireProgram(Ie, we), He.set(we, De), z.uniforms = Ie.uniforms;
        let ze = z.uniforms;
        (!S.isShaderMaterial && !S.isRawShaderMaterial || S.clipping === !0) && (ze.clippingPlanes = J.uniform), el(S, Ie), z.needsLights = hu(S), z.lightsStateVersion = Ae, z.needsLights && (ze.ambientLightColor.value = q.state.ambient, ze.lightProbe.value = q.state.probe, ze.directionalLights.value = q.state.directional, ze.directionalLightShadows.value = q.state.directionalShadow, ze.spotLights.value = q.state.spot, ze.spotLightShadows.value = q.state.spotShadow, ze.rectAreaLights.value = q.state.rectArea, ze.ltc_1.value = q.state.rectAreaLTC1, ze.ltc_2.value = q.state.rectAreaLTC2, ze.pointLights.value = q.state.point, ze.pointLightShadows.value = q.state.pointShadow, ze.hemisphereLights.value = q.state.hemi, ze.directionalShadowMap.value = q.state.directionalShadowMap, ze.directionalShadowMatrix.value = q.state.directionalShadowMatrix, ze.spotShadowMap.value = q.state.spotShadowMap, ze.spotShadowMatrix.value = q.state.spotShadowMatrix, ze.pointShadowMap.value = q.state.pointShadowMap, ze.pointShadowMatrix.value = q.state.pointShadowMatrix);
        let je = De.getUniforms(), Rn = bn.seqWithValue(je.seq, ze);
        return z.currentProgram = De, z.uniformsList = Rn, De;
    }
    function el(S, N) {
        let H = G.get(S);
        H.outputEncoding = N.outputEncoding, H.instancing = N.instancing, H.skinning = N.skinning, H.morphTargets = N.morphTargets, H.morphNormals = N.morphNormals, H.morphTargetsCount = N.morphTargetsCount, H.numClippingPlanes = N.numClippingPlanes, H.numIntersection = N.numClipIntersection, H.vertexAlphas = N.vertexAlphas, H.vertexTangents = N.vertexTangents, H.toneMapping = N.toneMapping;
    }
    function lu(S, N, H, z, q) {
        N.isScene !== !0 && (N = fe), j.resetTextureUnits();
        let be = N.fog, Ae = z.isMeshStandardMaterial ? N.environment : null, Ie = _ === null ? x.outputEncoding : _.texture.encoding, we = (z.isMeshStandardMaterial ? ue : K).get(z.envMap || Ae), He = z.vertexColors === !0 && !!H.attributes.color && H.attributes.color.itemSize === 4, De = !!z.normalMap && !!H.attributes.tangent, ze = !!H.morphAttributes.position, je = !!H.morphAttributes.normal, Rn = H.morphAttributes.position ? H.morphAttributes.position.length : 0, ei = z.toneMapped ? x.toneMapping : _n, Ge = G.get(z), Ht = d.state.lights;
        if (ce === !0 && (V === !0 || S !== b)) {
            let Pt = S === b && z.id === y;
            J.setState(z, S, Pt);
        }
        let at = !1;
        z.version === Ge.__version ? (Ge.needsLights && Ge.lightsStateVersion !== Ht.state.version || Ge.outputEncoding !== Ie || q.isInstancedMesh && Ge.instancing === !1 || !q.isInstancedMesh && Ge.instancing === !0 || q.isSkinnedMesh && Ge.skinning === !1 || !q.isSkinnedMesh && Ge.skinning === !0 || Ge.envMap !== we || z.fog && Ge.fog !== be || Ge.numClippingPlanes !== void 0 && (Ge.numClippingPlanes !== J.numPlanes || Ge.numIntersection !== J.numIntersection) || Ge.vertexAlphas !== He || Ge.vertexTangents !== De || Ge.morphTargets !== ze || Ge.morphNormals !== je || Ge.toneMapping !== ei || ge.isWebGL2 === !0 && Ge.morphTargetsCount !== Rn) && (at = !0) : (at = !0, Ge.__version = z.version);
        let kt = Ge.currentProgram;
        at === !0 && (kt = xo(z, N, q));
        let Gr = !1, Gt = !1, Zt = !1, xt = kt.getUniforms(), Xi = Ge.uniforms;
        if (xe.useProgram(kt.program) && (Gr = !0, Gt = !0, Zt = !0), z.id !== y && (y = z.id, Gt = !0), Gr || b !== S) {
            if (xt.setValue(Y, "projectionMatrix", S.projectionMatrix), ge.logarithmicDepthBuffer && xt.setValue(Y, "logDepthBufFC", 2 / (Math.log(S.far + 1) / Math.LN2)), b !== S && (b = S, Gt = !0, Zt = !0), z.isShaderMaterial || z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshStandardMaterial || z.envMap) {
                let Pt = xt.map.cameraPosition;
                Pt !== void 0 && Pt.setValue(Y, le.setFromMatrixPosition(S.matrixWorld));
            }
            (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial) && xt.setValue(Y, "isOrthographic", S.isOrthographicCamera === !0), (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial || z.isShadowMaterial || q.isSkinnedMesh) && xt.setValue(Y, "viewMatrix", S.matrixWorldInverse);
        }
        if (q.isSkinnedMesh) {
            xt.setOptional(Y, q, "bindMatrix"), xt.setOptional(Y, q, "bindMatrixInverse");
            let Pt = q.skeleton;
            Pt && (ge.floatVertexTextures ? (Pt.boneTexture === null && Pt.computeBoneTexture(), xt.setValue(Y, "boneTexture", Pt.boneTexture, j), xt.setValue(Y, "boneTextureSize", Pt.boneTextureSize)) : xt.setOptional(Y, Pt, "boneMatrices"));
        }
        return !!H && (H.morphAttributes.position !== void 0 || H.morphAttributes.normal !== void 0) && Z.update(q, H, z, kt), (Gt || Ge.receiveShadow !== q.receiveShadow) && (Ge.receiveShadow = q.receiveShadow, xt.setValue(Y, "receiveShadow", q.receiveShadow)), Gt && (xt.setValue(Y, "toneMappingExposure", x.toneMappingExposure), Ge.needsLights && cu(Xi, Zt), be && z.fog && Ye.refreshFogUniforms(Xi, be), Ye.refreshMaterialUniforms(Xi, z, P, B, W), bn.upload(Y, Ge.uniformsList, Xi, j)), z.isShaderMaterial && z.uniformsNeedUpdate === !0 && (bn.upload(Y, Ge.uniformsList, Xi, j), z.uniformsNeedUpdate = !1), z.isSpriteMaterial && xt.setValue(Y, "center", q.center), xt.setValue(Y, "modelViewMatrix", q.modelViewMatrix), xt.setValue(Y, "normalMatrix", q.normalMatrix), xt.setValue(Y, "modelMatrix", q.matrixWorld), kt;
    }
    function cu(S, N) {
        S.ambientLightColor.needsUpdate = N, S.lightProbe.needsUpdate = N, S.directionalLights.needsUpdate = N, S.directionalLightShadows.needsUpdate = N, S.pointLights.needsUpdate = N, S.pointLightShadows.needsUpdate = N, S.spotLights.needsUpdate = N, S.spotLightShadows.needsUpdate = N, S.rectAreaLights.needsUpdate = N, S.hemisphereLights.needsUpdate = N;
    }
    function hu(S) {
        return S.isMeshLambertMaterial || S.isMeshToonMaterial || S.isMeshPhongMaterial || S.isMeshStandardMaterial || S.isShadowMaterial || S.isShaderMaterial && S.lights === !0;
    }
    this.getActiveCubeFace = function() {
        return g;
    }, this.getActiveMipmapLevel = function() {
        return p;
    }, this.getRenderTarget = function() {
        return _;
    }, this.setRenderTargetTextures = function(S, N, H) {
        G.get(S.texture).__webglTexture = N, G.get(S.depthTexture).__webglTexture = H;
        let z = G.get(S);
        z.__hasExternalTextures = !0, z.__hasExternalTextures && (z.__autoAllocateDepthBuffer = H === void 0, z.__autoAllocateDepthBuffer || S.useRenderToTexture && (console.warn("render-to-texture extension was disabled because an external texture was provided"), S.useRenderToTexture = !1, S.useRenderbuffer = !0));
    }, this.setRenderTargetFramebuffer = function(S, N) {
        let H = G.get(S);
        H.__webglFramebuffer = N, H.__useDefaultFramebuffer = N === void 0;
    }, this.setRenderTarget = function(S, N = 0, H = 0) {
        _ = S, g = N, p = H;
        let z = !0;
        if (S) {
            let we = G.get(S);
            we.__useDefaultFramebuffer !== void 0 ? (xe.bindFramebuffer(36160, null), z = !1) : we.__webglFramebuffer === void 0 ? j.setupRenderTarget(S) : we.__hasExternalTextures && j.rebindTextures(S, G.get(S.texture).__webglTexture, G.get(S.depthTexture).__webglTexture);
        }
        let q = null, be = !1, Ae = !1;
        if (S) {
            let we = S.texture;
            (we.isDataTexture3D || we.isDataTexture2DArray) && (Ae = !0);
            let He = G.get(S).__webglFramebuffer;
            S.isWebGLCubeRenderTarget ? (q = He[N], be = !0) : S.useRenderbuffer ? q = G.get(S).__webglMultisampledFramebuffer : q = He, A.copy(S.viewport), L.copy(S.scissor), I = S.scissorTest;
        } else A.copy(D).multiplyScalar(P).floor(), L.copy(U).multiplyScalar(P).floor(), I = F;
        if (xe.bindFramebuffer(36160, q) && ge.drawBuffers && z) {
            let we = !1;
            if (S) if (S.isWebGLMultipleRenderTargets) {
                let He = S.texture;
                if (O.length !== He.length || O[0] !== 36064) {
                    for(let De = 0, ze = He.length; De < ze; De++)O[De] = 36064 + De;
                    O.length = He.length, we = !0;
                }
            } else (O.length !== 1 || O[0] !== 36064) && (O[0] = 36064, O.length = 1, we = !0);
            else (O.length !== 1 || O[0] !== 1029) && (O[0] = 1029, O.length = 1, we = !0);
            we && (ge.isWebGL2 ? Y.drawBuffers(O) : ye.get("WEBGL_draw_buffers").drawBuffersWEBGL(O));
        }
        if (xe.viewport(A), xe.scissor(L), xe.setScissorTest(I), be) {
            let we = G.get(S.texture);
            Y.framebufferTexture2D(36160, 36064, 34069 + N, we.__webglTexture, H);
        } else if (Ae) {
            let we = G.get(S.texture), He = N || 0;
            Y.framebufferTextureLayer(36160, 36064, we.__webglTexture, H || 0, He);
        }
        y = -1;
    }, this.readRenderTargetPixels = function(S, N, H, z, q, be, Ae) {
        if (!(S && S.isWebGLRenderTarget)) {
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            return;
        }
        let Ie = G.get(S).__webglFramebuffer;
        if (S.isWebGLCubeRenderTarget && Ae !== void 0 && (Ie = Ie[Ae]), Ie) {
            xe.bindFramebuffer(36160, Ie);
            try {
                let we = S.texture, He = we.format, De = we.type;
                if (He !== ct && te.convert(He) !== Y.getParameter(35739)) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    return;
                }
                let ze = De === kn && (ye.has("EXT_color_buffer_half_float") || ge.isWebGL2 && ye.has("EXT_color_buffer_float"));
                if (De !== rn && te.convert(De) !== Y.getParameter(35738) && !(De === nn && (ge.isWebGL2 || ye.has("OES_texture_float") || ye.has("WEBGL_color_buffer_float"))) && !ze) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    return;
                }
                Y.checkFramebufferStatus(36160) === 36053 ? N >= 0 && N <= S.width - z && H >= 0 && H <= S.height - q && Y.readPixels(N, H, z, q, te.convert(He), te.convert(De), be) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
            } finally{
                let we = _ !== null ? G.get(_).__webglFramebuffer : null;
                xe.bindFramebuffer(36160, we);
            }
        }
    }, this.copyFramebufferToTexture = function(S, N, H = 0) {
        if (N.isFramebufferTexture !== !0) {
            console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");
            return;
        }
        let z = Math.pow(2, -H), q = Math.floor(N.image.width * z), be = Math.floor(N.image.height * z);
        j.setTexture2D(N, 0), Y.copyTexSubImage2D(3553, H, 0, 0, S.x, S.y, q, be), xe.unbindTexture();
    }, this.copyTextureToTexture = function(S, N, H, z = 0) {
        let q = N.image.width, be = N.image.height, Ae = te.convert(H.format), Ie = te.convert(H.type);
        j.setTexture2D(H, 0), Y.pixelStorei(37440, H.flipY), Y.pixelStorei(37441, H.premultiplyAlpha), Y.pixelStorei(3317, H.unpackAlignment), N.isDataTexture ? Y.texSubImage2D(3553, z, S.x, S.y, q, be, Ae, Ie, N.image.data) : N.isCompressedTexture ? Y.compressedTexSubImage2D(3553, z, S.x, S.y, N.mipmaps[0].width, N.mipmaps[0].height, Ae, N.mipmaps[0].data) : Y.texSubImage2D(3553, z, S.x, S.y, Ae, Ie, N.image), z === 0 && H.generateMipmaps && Y.generateMipmap(3553), xe.unbindTexture();
    }, this.copyTextureToTexture3D = function(S, N, H, z, q = 0) {
        if (x.isWebGL1Renderer) {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
            return;
        }
        let be = S.max.x - S.min.x + 1, Ae = S.max.y - S.min.y + 1, Ie = S.max.z - S.min.z + 1, we = te.convert(z.format), He = te.convert(z.type), De;
        if (z.isDataTexture3D) j.setTexture3D(z, 0), De = 32879;
        else if (z.isDataTexture2DArray) j.setTexture2DArray(z, 0), De = 35866;
        else {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
            return;
        }
        Y.pixelStorei(37440, z.flipY), Y.pixelStorei(37441, z.premultiplyAlpha), Y.pixelStorei(3317, z.unpackAlignment);
        let ze = Y.getParameter(3314), je = Y.getParameter(32878), Rn = Y.getParameter(3316), ei = Y.getParameter(3315), Ge = Y.getParameter(32877), Ht = H.isCompressedTexture ? H.mipmaps[0] : H.image;
        Y.pixelStorei(3314, Ht.width), Y.pixelStorei(32878, Ht.height), Y.pixelStorei(3316, S.min.x), Y.pixelStorei(3315, S.min.y), Y.pixelStorei(32877, S.min.z), H.isDataTexture || H.isDataTexture3D ? Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht.data) : H.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), Y.compressedTexSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, Ht.data)) : Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht), Y.pixelStorei(3314, ze), Y.pixelStorei(32878, je), Y.pixelStorei(3316, Rn), Y.pixelStorei(3315, ei), Y.pixelStorei(32877, Ge), q === 0 && z.generateMipmaps && Y.generateMipmap(De), xe.unbindTexture();
    }, this.initTexture = function(S) {
        j.setTexture2D(S, 0), xe.unbindTexture();
    }, this.resetState = function() {
        g = 0, p = 0, _ = null, xe.reset(), R.reset();
    }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
        detail: this
    }));
}
qe.prototype.isWebGLRenderer = !0;
var _h = class extends qe {
};
_h.prototype.isWebGL1Renderer = !0;
var Nr = class {
    constructor(e, t = 25e-5){
        this.name = "", this.color = new ae(e), this.density = t;
    }
    clone() {
        return new Nr(this.color, this.density);
    }
    toJSON() {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        };
    }
};
Nr.prototype.isFogExp2 = !0;
var Br = class {
    constructor(e, t = 1, n = 1e3){
        this.name = "", this.color = new ae(e), this.near = t, this.far = n;
    }
    clone() {
        return new Br(this.color, this.near, this.far);
    }
    toJSON() {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        };
    }
};
Br.prototype.isFog = !0;
var no = class extends Ne {
    constructor(){
        super();
        this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
            detail: this
        }));
    }
    copy(e, t) {
        return super.copy(e, t), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return this.fog !== null && (t.object.fog = this.fog.toJSON()), t;
    }
};
no.prototype.isScene = !0;
var $n = class {
    constructor(e, t){
        this.array = e, this.stride = t, this.count = e !== void 0 ? e.length / t : 0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0, this.uuid = Et();
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.stride, n *= t.stride;
        for(let i = 0, r = this.stride; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    clone(e) {
        e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
        let t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), n = new this.constructor(t, this.stride);
        return n.setUsage(this.usage), n;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    toJSON(e) {
        return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {
            uuid: this.uuid,
            buffer: this.array.buffer._uuid,
            type: this.array.constructor.name,
            stride: this.stride
        };
    }
};
$n.prototype.isInterleavedBuffer = !0;
var Ke = new M, Sn = class {
    constructor(e, t, n, i = !1){
        this.name = "", this.data = e, this.itemSize = t, this.offset = n, this.normalized = i === !0;
    }
    get count() {
        return this.data.count;
    }
    get array() {
        return this.data.array;
    }
    set needsUpdate(e) {
        this.data.needsUpdate = e;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.data.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyMatrix4(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyNormalMatrix(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.transformDirection(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    setX(e, t) {
        return this.data.array[e * this.data.stride + this.offset] = t, this;
    }
    setY(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 1] = t, this;
    }
    setZ(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 2] = t, this;
    }
    setW(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 3] = t, this;
    }
    getX(e) {
        return this.data.array[e * this.data.stride + this.offset];
    }
    getY(e) {
        return this.data.array[e * this.data.stride + this.offset + 1];
    }
    getZ(e) {
        return this.data.array[e * this.data.stride + this.offset + 2];
    }
    getW(e) {
        return this.data.array[e * this.data.stride + this.offset + 3];
    }
    setXY(e, t, n) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this;
    }
    clone(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return new Ue(new this.array.constructor(t), this.itemSize, this.normalized);
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new Sn(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
    }
    toJSON(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: t,
                normalized: this.normalized
            };
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
            isInterleavedBufferAttribute: !0,
            itemSize: this.itemSize,
            data: this.data.uuid,
            offset: this.offset,
            normalized: this.normalized
        };
    }
};
Sn.prototype.isInterleavedBufferAttribute = !0;
var io = class extends dt {
    constructor(e){
        super();
        this.type = "SpriteMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
io.prototype.isSpriteMaterial = !0;
var gi, Qi = new M, xi = new M, yi = new M, vi = new X, Ki = new X, Mh = new pe, hs = new M, er = new M, us = new M, jl = new X, qo = new X, Ql = new X, ro = class extends Ne {
    constructor(e){
        super();
        if (this.type = "Sprite", gi === void 0) {
            gi = new _e;
            let t = new Float32Array([
                -.5,
                -.5,
                0,
                0,
                0,
                .5,
                -.5,
                0,
                1,
                0,
                .5,
                .5,
                0,
                1,
                1,
                -.5,
                .5,
                0,
                0,
                1
            ]), n = new $n(t, 5);
            gi.setIndex([
                0,
                1,
                2,
                0,
                2,
                3
            ]), gi.setAttribute("position", new Sn(n, 3, 0, !1)), gi.setAttribute("uv", new Sn(n, 2, 3, !1));
        }
        this.geometry = gi, this.material = e !== void 0 ? e : new io, this.center = new X(.5, .5);
    }
    raycast(e, t) {
        e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), xi.setFromMatrixScale(this.matrixWorld), Mh.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), yi.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && xi.multiplyScalar(-yi.z);
        let n = this.material.rotation, i, r;
        n !== 0 && (r = Math.cos(n), i = Math.sin(n));
        let o = this.center;
        ds(hs.set(-.5, -.5, 0), yi, o, xi, i, r), ds(er.set(.5, -.5, 0), yi, o, xi, i, r), ds(us.set(.5, .5, 0), yi, o, xi, i, r), jl.set(0, 0), qo.set(1, 0), Ql.set(1, 1);
        let a = e.ray.intersectTriangle(hs, er, us, !1, Qi);
        if (a === null && (ds(er.set(-.5, .5, 0), yi, o, xi, i, r), qo.set(0, 1), a = e.ray.intersectTriangle(hs, us, er, !1, Qi), a === null)) return;
        let l = e.ray.origin.distanceTo(Qi);
        l < e.near || l > e.far || t.push({
            distance: l,
            point: Qi.clone(),
            uv: nt.getUV(Qi, hs, er, us, jl, qo, Ql, new X),
            face: null,
            object: this
        });
    }
    copy(e) {
        return super.copy(e), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
    }
};
ro.prototype.isSprite = !0;
function ds(s, e, t, n, i, r) {
    vi.subVectors(s, t).addScalar(.5).multiply(n), i !== void 0 ? (Ki.x = r * vi.x - i * vi.y, Ki.y = i * vi.x + r * vi.y) : Ki.copy(vi), s.copy(e), s.x += Ki.x, s.y += Ki.y, s.applyMatrix4(Mh);
}
var fs = new M, Kl = new M, bh = class extends Ne {
    constructor(){
        super();
        this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            },
            isLOD: {
                value: !0
            }
        }), this.autoUpdate = !0;
    }
    copy(e) {
        super.copy(e, !1);
        let t = e.levels;
        for(let n = 0, i = t.length; n < i; n++){
            let r = t[n];
            this.addLevel(r.object.clone(), r.distance);
        }
        return this.autoUpdate = e.autoUpdate, this;
    }
    addLevel(e, t = 0) {
        t = Math.abs(t);
        let n = this.levels, i;
        for(i = 0; i < n.length && !(t < n[i].distance); i++);
        return n.splice(i, 0, {
            distance: t,
            object: e
        }), this.add(e), this;
    }
    getCurrentLevel() {
        return this._currentLevel;
    }
    getObjectForDistance(e) {
        let t = this.levels;
        if (t.length > 0) {
            let n, i;
            for(n = 1, i = t.length; n < i && !(e < t[n].distance); n++);
            return t[n - 1].object;
        }
        return null;
    }
    raycast(e, t) {
        if (this.levels.length > 0) {
            fs.setFromMatrixPosition(this.matrixWorld);
            let i = e.ray.origin.distanceTo(fs);
            this.getObjectForDistance(i).raycast(e, t);
        }
    }
    update(e) {
        let t = this.levels;
        if (t.length > 1) {
            fs.setFromMatrixPosition(e.matrixWorld), Kl.setFromMatrixPosition(this.matrixWorld);
            let n = fs.distanceTo(Kl) / e.zoom;
            t[0].object.visible = !0;
            let i, r;
            for(i = 1, r = t.length; i < r && n >= t[i].distance; i++)t[i - 1].object.visible = !1, t[i].object.visible = !0;
            for(this._currentLevel = i - 1; i < r; i++)t[i].object.visible = !1;
        }
    }
    toJSON(e) {
        let t = super.toJSON(e);
        this.autoUpdate === !1 && (t.object.autoUpdate = !1), t.object.levels = [];
        let n = this.levels;
        for(let i = 0, r = n.length; i < r; i++){
            let o = n[i];
            t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance
            });
        }
        return t;
    }
}, ec = new M, tc = new Ve, nc = new Ve, Rx = new M, ic = new pe, so = class extends st {
    constructor(e, t){
        super(e, t);
        this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new pe, this.bindMatrixInverse = new pe;
    }
    copy(e) {
        return super.copy(e), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, this;
    }
    bind(e, t) {
        this.skeleton = e, t === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert();
    }
    pose() {
        this.skeleton.pose();
    }
    normalizeSkinWeights() {
        let e = new Ve, t = this.geometry.attributes.skinWeight;
        for(let n = 0, i = t.count; n < i; n++){
            e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
            let r = 1 / e.manhattanLength();
            r !== 1 / 0 ? e.multiplyScalar(r) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w);
        }
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.bindMode === "attached" ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === "detached" ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
    }
    boneTransform(e, t) {
        let n = this.skeleton, i = this.geometry;
        tc.fromBufferAttribute(i.attributes.skinIndex, e), nc.fromBufferAttribute(i.attributes.skinWeight, e), ec.copy(t).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
        for(let r = 0; r < 4; r++){
            let o = nc.getComponent(r);
            if (o !== 0) {
                let a = tc.getComponent(r);
                ic.multiplyMatrices(n.bones[a].matrixWorld, n.boneInverses[a]), t.addScaledVector(Rx.copy(ec).applyMatrix4(ic), o);
            }
        }
        return t.applyMatrix4(this.bindMatrixInverse);
    }
};
so.prototype.isSkinnedMesh = !0;
var oo = class extends Ne {
    constructor(){
        super();
        this.type = "Bone";
    }
};
oo.prototype.isBone = !0;
var qn = class extends ot {
    constructor(e = null, t = 1, n = 1, i, r, o, a, l, c = rt, h = rt, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            data: e,
            width: t,
            height: n
        }, this.magFilter = c, this.minFilter = h, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
qn.prototype.isDataTexture = !0;
var rc = new pe, Px = new pe, ao = class {
    constructor(e = [], t = []){
        this.uuid = Et(), this.bones = e.slice(0), this.boneInverses = t, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.frame = -1, this.init();
    }
    init() {
        let e = this.bones, t = this.boneInverses;
        if (this.boneMatrices = new Float32Array(e.length * 16), t.length === 0) this.calculateInverses();
        else if (e.length !== t.length) {
            console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
            for(let n = 0, i = this.bones.length; n < i; n++)this.boneInverses.push(new pe);
        }
    }
    calculateInverses() {
        this.boneInverses.length = 0;
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = new pe;
            this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(n);
        }
    }
    pose() {
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && n.matrixWorld.copy(this.boneInverses[e]).invert();
        }
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && (n.parent && n.parent.isBone ? (n.matrix.copy(n.parent.matrixWorld).invert(), n.matrix.multiply(n.matrixWorld)) : n.matrix.copy(n.matrixWorld), n.matrix.decompose(n.position, n.quaternion, n.scale));
        }
    }
    update() {
        let e = this.bones, t = this.boneInverses, n = this.boneMatrices, i = this.boneTexture;
        for(let r = 0, o = e.length; r < o; r++){
            let a = e[r] ? e[r].matrixWorld : Px;
            rc.multiplyMatrices(a, t[r]), rc.toArray(n, r * 16);
        }
        i !== null && (i.needsUpdate = !0);
    }
    clone() {
        return new ao(this.bones, this.boneInverses);
    }
    computeBoneTexture() {
        let e = Math.sqrt(this.bones.length * 4);
        e = Xc(e), e = Math.max(e, 4);
        let t = new Float32Array(e * e * 4);
        t.set(this.boneMatrices);
        let n = new qn(t, e, e, ct, nn);
        return n.needsUpdate = !0, this.boneMatrices = t, this.boneTexture = n, this.boneTextureSize = e, this;
    }
    getBoneByName(e) {
        for(let t = 0, n = this.bones.length; t < n; t++){
            let i = this.bones[t];
            if (i.name === e) return i;
        }
    }
    dispose() {
        this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
    }
    fromJSON(e, t) {
        this.uuid = e.uuid;
        for(let n = 0, i = e.bones.length; n < i; n++){
            let r = e.bones[n], o = t[r];
            o === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", r), o = new oo), this.bones.push(o), this.boneInverses.push(new pe().fromArray(e.boneInverses[n]));
        }
        return this.init(), this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Skeleton",
                generator: "Skeleton.toJSON"
            },
            bones: [],
            boneInverses: []
        };
        e.uuid = this.uuid;
        let t = this.bones, n = this.boneInverses;
        for(let i = 0, r = t.length; i < r; i++){
            let o = t[i];
            e.bones.push(o.uuid);
            let a = n[i];
            e.boneInverses.push(a.toArray());
        }
        return e;
    }
}, Xn = class extends Ue {
    constructor(e, t, n, i = 1){
        typeof n == "number" && (i = n, n = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));
        super(e, t, n);
        this.meshPerAttribute = i;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
    }
};
Xn.prototype.isInstancedBufferAttribute = !0;
var sc = new pe, oc = new pe, ps = [], tr = new st, xa = class extends st {
    constructor(e, t, n){
        super(e, t);
        this.instanceMatrix = new Xn(new Float32Array(n * 16), 16), this.instanceColor = null, this.count = n, this.frustumCulled = !1;
    }
    copy(e) {
        return super.copy(e), this.instanceMatrix.copy(e.instanceMatrix), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, this;
    }
    getColorAt(e, t) {
        t.fromArray(this.instanceColor.array, e * 3);
    }
    getMatrixAt(e, t) {
        t.fromArray(this.instanceMatrix.array, e * 16);
    }
    raycast(e, t) {
        let n = this.matrixWorld, i = this.count;
        if (tr.geometry = this.geometry, tr.material = this.material, tr.material !== void 0) for(let r = 0; r < i; r++){
            this.getMatrixAt(r, sc), oc.multiplyMatrices(n, sc), tr.matrixWorld = oc, tr.raycast(e, ps);
            for(let o = 0, a = ps.length; o < a; o++){
                let l = ps[o];
                l.instanceId = r, l.object = this, t.push(l);
            }
            ps.length = 0;
        }
    }
    setColorAt(e, t) {
        this.instanceColor === null && (this.instanceColor = new Xn(new Float32Array(this.instanceMatrix.count * 3), 3)), t.toArray(this.instanceColor.array, e * 3);
    }
    setMatrixAt(e, t) {
        t.toArray(this.instanceMatrix.array, e * 16);
    }
    updateMorphTargets() {}
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
xa.prototype.isInstancedMesh = !0;
var ft = class extends dt {
    constructor(e){
        super();
        this.type = "LineBasicMaterial", this.color = new ae(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this;
    }
};
ft.prototype.isLineBasicMaterial = !0;
var ac = new M, lc = new M, cc = new pe, Xo = new Cn, ms = new An, on = class extends Ne {
    constructor(e = new _e, t = new ft){
        super();
        this.type = "Line", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [
                0
            ];
            for(let i = 1, r = t.count; i < r; i++)ac.fromBufferAttribute(t, i - 1), lc.fromBufferAttribute(t, i), n[i] = n[i - 1], n[i] += ac.distanceTo(lc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Line.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), ms.copy(n.boundingSphere), ms.applyMatrix4(i), ms.radius += r, e.ray.intersectsSphere(ms) === !1) return;
        cc.copy(i).invert(), Xo.copy(e.ray).applyMatrix4(cc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = new M, h = new M, u = new M, d = new M, f = this.isLineSegments ? 2 : 1;
        if (n.isBufferGeometry) {
            let m = n.index, v = n.attributes.position;
            if (m !== null) {
                let g = Math.max(0, o.start), p = Math.min(m.count, o.start + o.count);
                for(let _ = g, y = p - 1; _ < y; _ += f){
                    let b = m.getX(_), A = m.getX(_ + 1);
                    if (c.fromBufferAttribute(v, b), h.fromBufferAttribute(v, A), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let I = e.ray.origin.distanceTo(d);
                    I < e.near || I > e.far || t.push({
                        distance: I,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            } else {
                let g = Math.max(0, o.start), p = Math.min(v.count, o.start + o.count);
                for(let _ = g, y = p - 1; _ < y; _ += f){
                    if (c.fromBufferAttribute(v, _), h.fromBufferAttribute(v, _ + 1), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let A = e.ray.origin.distanceTo(d);
                    A < e.near || A > e.far || t.push({
                        distance: A,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            }
        } else n.isGeometry && console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t = e.morphTargets;
            t !== void 0 && t.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
on.prototype.isLine = !0;
var hc = new M, uc = new M, wt = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineSegments";
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [];
            for(let i = 0, r = t.count; i < r; i += 2)hc.fromBufferAttribute(t, i), uc.fromBufferAttribute(t, i + 1), n[i] = i === 0 ? 0 : n[i - 1], n[i + 1] = n[i] + hc.distanceTo(uc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
};
wt.prototype.isLineSegments = !0;
var ya = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineLoop";
    }
};
ya.prototype.isLineLoop = !0;
var jn = class extends dt {
    constructor(e){
        super();
        this.type = "PointsMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
jn.prototype.isPointsMaterial = !0;
var dc = new pe, sa = new Cn, gs = new An, xs = new M, zr = class extends Ne {
    constructor(e = new _e, t = new jn){
        super();
        this.type = "Points", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Points.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), gs.copy(n.boundingSphere), gs.applyMatrix4(i), gs.radius += r, e.ray.intersectsSphere(gs) === !1) return;
        dc.copy(i).invert(), sa.copy(e.ray).applyMatrix4(dc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a;
        if (n.isBufferGeometry) {
            let c = n.index, u = n.attributes.position;
            if (c !== null) {
                let d = Math.max(0, o.start), f = Math.min(c.count, o.start + o.count);
                for(let m = d, x = f; m < x; m++){
                    let v = c.getX(m);
                    xs.fromBufferAttribute(u, v), fc(xs, v, l, i, e, t, this);
                }
            } else {
                let d = Math.max(0, o.start), f = Math.min(u.count, o.start + o.count);
                for(let m = d, x = f; m < x; m++)xs.fromBufferAttribute(u, m), fc(xs, m, l, i, e, t, this);
            }
        } else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t = e.morphTargets;
            t !== void 0 && t.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
zr.prototype.isPoints = !0;
function fc(s, e, t, n, i, r, o) {
    let a = sa.distanceSqToPoint(s);
    if (a < t) {
        let l = new M;
        sa.closestPointToPoint(s, l), l.applyMatrix4(n);
        let c = i.ray.origin.distanceTo(l);
        if (c < i.near || c > i.far) return;
        r.push({
            distance: c,
            distanceToRay: Math.sqrt(a),
            point: l,
            index: e,
            face: null,
            object: o
        });
    }
}
var wh = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.format = a !== void 0 ? a : Gn, this.minFilter = o !== void 0 ? o : tt, this.magFilter = r !== void 0 ? r : tt, this.generateMipmaps = !1;
        let h = this;
        function u() {
            h.needsUpdate = !0, e.requestVideoFrameCallback(u);
        }
        "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(u);
    }
    clone() {
        return new this.constructor(this.image).copy(this);
    }
    update() {
        let e = this.image;
        "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
    }
};
wh.prototype.isVideoTexture = !0;
var Sh = class extends ot {
    constructor(e, t, n){
        super({
            width: e,
            height: t
        });
        this.format = n, this.magFilter = rt, this.minFilter = rt, this.generateMipmaps = !1, this.needsUpdate = !0;
    }
};
Sh.prototype.isFramebufferTexture = !0;
var va = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            width: t,
            height: n
        }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
    }
};
va.prototype.isCompressedTexture = !0;
var Th = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.needsUpdate = !0;
    }
};
Th.prototype.isCanvasTexture = !0;
var fr = class extends _e {
    constructor(e = 1, t = 8, n = 0, i = Math.PI * 2){
        super();
        this.type = "CircleGeometry", this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: i
        }, t = Math.max(3, t);
        let r = [], o = [], a = [], l = [], c = new M, h = new X;
        o.push(0, 0, 0), a.push(0, 0, 1), l.push(.5, .5);
        for(let u = 0, d = 3; u <= t; u++, d += 3){
            let f = n + u / t * i;
            c.x = e * Math.cos(f), c.y = e * Math.sin(f), o.push(c.x, c.y, c.z), a.push(0, 0, 1), h.x = (o[d] / e + 1) / 2, h.y = (o[d + 1] / e + 1) / 2, l.push(h.x, h.y);
        }
        for(let u = 1; u <= t; u++)r.push(u, u + 1, 0);
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("normal", new de(a, 3)), this.setAttribute("uv", new de(l, 2));
    }
    static fromJSON(e) {
        return new fr(e.radius, e.segments, e.thetaStart, e.thetaLength);
    }
}, Jn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 8, r = 1, o = !1, a = 0, l = Math.PI * 2){
        super();
        this.type = "CylinderGeometry", this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: i,
            heightSegments: r,
            openEnded: o,
            thetaStart: a,
            thetaLength: l
        };
        let c = this;
        i = Math.floor(i), r = Math.floor(r);
        let h = [], u = [], d = [], f = [], m = 0, x = [], v = n / 2, g = 0;
        p(), o === !1 && (e > 0 && _(!0), t > 0 && _(!1)), this.setIndex(h), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function p() {
            let y = new M, b = new M, A = 0, L = (t - e) / n;
            for(let I = 0; I <= r; I++){
                let k = [], B = I / r, P = B * (t - e) + e;
                for(let w = 0; w <= i; w++){
                    let E = w / i, D = E * l + a, U = Math.sin(D), F = Math.cos(D);
                    b.x = P * U, b.y = -B * n + v, b.z = P * F, u.push(b.x, b.y, b.z), y.set(U, L, F).normalize(), d.push(y.x, y.y, y.z), f.push(E, 1 - B), k.push(m++);
                }
                x.push(k);
            }
            for(let I = 0; I < i; I++)for(let k = 0; k < r; k++){
                let B = x[k][I], P = x[k + 1][I], w = x[k + 1][I + 1], E = x[k][I + 1];
                h.push(B, P, E), h.push(P, w, E), A += 6;
            }
            c.addGroup(g, A, 0), g += A;
        }
        function _(y) {
            let b = m, A = new X, L = new M, I = 0, k = y === !0 ? e : t, B = y === !0 ? 1 : -1;
            for(let w = 1; w <= i; w++)u.push(0, v * B, 0), d.push(0, B, 0), f.push(.5, .5), m++;
            let P = m;
            for(let w = 0; w <= i; w++){
                let D = w / i * l + a, U = Math.cos(D), F = Math.sin(D);
                L.x = k * F, L.y = v * B, L.z = k * U, u.push(L.x, L.y, L.z), d.push(0, B, 0), A.x = U * .5 + .5, A.y = F * .5 * B + .5, f.push(A.x, A.y), m++;
            }
            for(let w = 0; w < i; w++){
                let E = b + w, D = P + w;
                y === !0 ? h.push(D, D + 1, E) : h.push(D + 1, D, E), I += 3;
            }
            c.addGroup(g, I, y === !0 ? 1 : 2), g += I;
        }
    }
    static fromJSON(e) {
        return new Jn(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, pr = class extends Jn {
    constructor(e = 1, t = 1, n = 8, i = 1, r = !1, o = 0, a = Math.PI * 2){
        super(0, e, t, n, i, r, o, a);
        this.type = "ConeGeometry", this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: i,
            openEnded: r,
            thetaStart: o,
            thetaLength: a
        };
    }
    static fromJSON(e) {
        return new pr(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, an = class extends _e {
    constructor(e = [], t = [], n = 1, i = 0){
        super();
        this.type = "PolyhedronGeometry", this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: i
        };
        let r = [], o = [];
        a(i), c(n), h(), this.setAttribute("position", new de(r, 3)), this.setAttribute("normal", new de(r.slice(), 3)), this.setAttribute("uv", new de(o, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
        function a(p) {
            let _ = new M, y = new M, b = new M;
            for(let A = 0; A < t.length; A += 3)f(t[A + 0], _), f(t[A + 1], y), f(t[A + 2], b), l(_, y, b, p);
        }
        function l(p, _, y, b) {
            let A = b + 1, L = [];
            for(let I = 0; I <= A; I++){
                L[I] = [];
                let k = p.clone().lerp(y, I / A), B = _.clone().lerp(y, I / A), P = A - I;
                for(let w = 0; w <= P; w++)w === 0 && I === A ? L[I][w] = k : L[I][w] = k.clone().lerp(B, w / P);
            }
            for(let I = 0; I < A; I++)for(let k = 0; k < 2 * (A - I) - 1; k++){
                let B = Math.floor(k / 2);
                k % 2 === 0 ? (d(L[I][B + 1]), d(L[I + 1][B]), d(L[I][B])) : (d(L[I][B + 1]), d(L[I + 1][B + 1]), d(L[I + 1][B]));
            }
        }
        function c(p) {
            let _ = new M;
            for(let y = 0; y < r.length; y += 3)_.x = r[y + 0], _.y = r[y + 1], _.z = r[y + 2], _.normalize().multiplyScalar(p), r[y + 0] = _.x, r[y + 1] = _.y, r[y + 2] = _.z;
        }
        function h() {
            let p = new M;
            for(let _ = 0; _ < r.length; _ += 3){
                p.x = r[_ + 0], p.y = r[_ + 1], p.z = r[_ + 2];
                let y = v(p) / 2 / Math.PI + .5, b = g(p) / Math.PI + .5;
                o.push(y, 1 - b);
            }
            m(), u();
        }
        function u() {
            for(let p = 0; p < o.length; p += 6){
                let _ = o[p + 0], y = o[p + 2], b = o[p + 4], A = Math.max(_, y, b), L = Math.min(_, y, b);
                A > .9 && L < .1 && (_ < .2 && (o[p + 0] += 1), y < .2 && (o[p + 2] += 1), b < .2 && (o[p + 4] += 1));
            }
        }
        function d(p) {
            r.push(p.x, p.y, p.z);
        }
        function f(p, _) {
            let y = p * 3;
            _.x = e[y + 0], _.y = e[y + 1], _.z = e[y + 2];
        }
        function m() {
            let p = new M, _ = new M, y = new M, b = new M, A = new X, L = new X, I = new X;
            for(let k = 0, B = 0; k < r.length; k += 9, B += 6){
                p.set(r[k + 0], r[k + 1], r[k + 2]), _.set(r[k + 3], r[k + 4], r[k + 5]), y.set(r[k + 6], r[k + 7], r[k + 8]), A.set(o[B + 0], o[B + 1]), L.set(o[B + 2], o[B + 3]), I.set(o[B + 4], o[B + 5]), b.copy(p).add(_).add(y).divideScalar(3);
                let P = v(b);
                x(A, B + 0, p, P), x(L, B + 2, _, P), x(I, B + 4, y, P);
            }
        }
        function x(p, _, y, b) {
            b < 0 && p.x === 1 && (o[_] = p.x - 1), y.x === 0 && y.z === 0 && (o[_] = b / 2 / Math.PI + .5);
        }
        function v(p) {
            return Math.atan2(p.z, -p.x);
        }
        function g(p) {
            return Math.atan2(-p.y, Math.sqrt(p.x * p.x + p.z * p.z));
        }
    }
    static fromJSON(e) {
        return new an(e.vertices, e.indices, e.radius, e.details);
    }
}, mr = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = 1 / n, r = [
            -1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            1,
            1,
            1,
            0,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            0,
            -n,
            0,
            -i,
            n,
            0,
            -i,
            -n,
            0,
            i,
            n,
            0,
            i
        ], o = [
            3,
            11,
            7,
            3,
            7,
            15,
            3,
            15,
            13,
            7,
            19,
            17,
            7,
            17,
            6,
            7,
            6,
            15,
            17,
            4,
            8,
            17,
            8,
            10,
            17,
            10,
            6,
            8,
            0,
            16,
            8,
            16,
            2,
            8,
            2,
            10,
            0,
            12,
            1,
            0,
            1,
            18,
            0,
            18,
            16,
            6,
            10,
            2,
            6,
            2,
            13,
            6,
            13,
            15,
            2,
            16,
            18,
            2,
            18,
            3,
            2,
            3,
            13,
            18,
            1,
            9,
            18,
            9,
            11,
            18,
            11,
            3,
            4,
            14,
            12,
            4,
            12,
            0,
            4,
            0,
            8,
            11,
            9,
            5,
            11,
            5,
            19,
            11,
            19,
            7,
            19,
            5,
            14,
            19,
            14,
            4,
            19,
            4,
            17,
            1,
            12,
            14,
            1,
            14,
            5,
            1,
            5,
            9
        ];
        super(r, o, e, t);
        this.type = "DodecahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new mr(e.radius, e.detail);
    }
}, ys = new M, vs = new M, Jo = new M, _s = new nt, _a = class extends _e {
    constructor(e = null, t = 1){
        super();
        if (this.type = "EdgesGeometry", this.parameters = {
            geometry: e,
            thresholdAngle: t
        }, e !== null) {
            let i = Math.pow(10, 4), r = Math.cos(Wn * t), o = e.getIndex(), a = e.getAttribute("position"), l = o ? o.count : a.count, c = [
                0,
                0,
                0
            ], h = [
                "a",
                "b",
                "c"
            ], u = new Array(3), d = {}, f = [];
            for(let m = 0; m < l; m += 3){
                o ? (c[0] = o.getX(m), c[1] = o.getX(m + 1), c[2] = o.getX(m + 2)) : (c[0] = m, c[1] = m + 1, c[2] = m + 2);
                let { a: x , b: v , c: g  } = _s;
                if (x.fromBufferAttribute(a, c[0]), v.fromBufferAttribute(a, c[1]), g.fromBufferAttribute(a, c[2]), _s.getNormal(Jo), u[0] = `${Math.round(x.x * i)},${Math.round(x.y * i)},${Math.round(x.z * i)}`, u[1] = `${Math.round(v.x * i)},${Math.round(v.y * i)},${Math.round(v.z * i)}`, u[2] = `${Math.round(g.x * i)},${Math.round(g.y * i)},${Math.round(g.z * i)}`, !(u[0] === u[1] || u[1] === u[2] || u[2] === u[0])) for(let p = 0; p < 3; p++){
                    let _ = (p + 1) % 3, y = u[p], b = u[_], A = _s[h[p]], L = _s[h[_]], I = `${y}_${b}`, k = `${b}_${y}`;
                    k in d && d[k] ? (Jo.dot(d[k].normal) <= r && (f.push(A.x, A.y, A.z), f.push(L.x, L.y, L.z)), d[k] = null) : I in d || (d[I] = {
                        index0: c[p],
                        index1: c[_],
                        normal: Jo.clone()
                    });
                }
            }
            for(let m in d)if (d[m]) {
                let { index0: x , index1: v  } = d[m];
                ys.fromBufferAttribute(a, x), vs.fromBufferAttribute(a, v), f.push(ys.x, ys.y, ys.z), f.push(vs.x, vs.y, vs.z);
            }
            this.setAttribute("position", new de(f, 3));
        }
    }
}, Ct = class {
    constructor(){
        this.type = "Curve", this.arcLengthDivisions = 200;
    }
    getPoint() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
    }
    getPointAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getPoint(n, t);
    }
    getPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return t;
    }
    getSpacedPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPointAt(n / e));
        return t;
    }
    getLength() {
        let e = this.getLengths();
        return e[e.length - 1];
    }
    getLengths(e = this.arcLengthDivisions) {
        if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        let t = [], n, i = this.getPoint(0), r = 0;
        t.push(0);
        for(let o = 1; o <= e; o++)n = this.getPoint(o / e), r += n.distanceTo(i), t.push(r), i = n;
        return this.cacheArcLengths = t, t;
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.getLengths();
    }
    getUtoTmapping(e, t) {
        let n = this.getLengths(), i = 0, r = n.length, o;
        t ? o = t : o = e * n[r - 1];
        let a = 0, l = r - 1, c;
        for(; a <= l;)if (i = Math.floor(a + (l - a) / 2), c = n[i] - o, c < 0) a = i + 1;
        else if (c > 0) l = i - 1;
        else {
            l = i;
            break;
        }
        if (i = l, n[i] === o) return i / (r - 1);
        let h = n[i], d = n[i + 1] - h, f = (o - h) / d;
        return (i + f) / (r - 1);
    }
    getTangent(e, t) {
        let i = e - 1e-4, r = e + 1e-4;
        i < 0 && (i = 0), r > 1 && (r = 1);
        let o = this.getPoint(i), a = this.getPoint(r), l = t || (o.isVector2 ? new X : new M);
        return l.copy(a).sub(o).normalize(), l;
    }
    getTangentAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getTangent(n, t);
    }
    computeFrenetFrames(e, t) {
        let n = new M, i = [], r = [], o = [], a = new M, l = new pe;
        for(let f = 0; f <= e; f++){
            let m = f / e;
            i[f] = this.getTangentAt(m, new M);
        }
        r[0] = new M, o[0] = new M;
        let c = Number.MAX_VALUE, h = Math.abs(i[0].x), u = Math.abs(i[0].y), d = Math.abs(i[0].z);
        h <= c && (c = h, n.set(1, 0, 0)), u <= c && (c = u, n.set(0, 1, 0)), d <= c && n.set(0, 0, 1), a.crossVectors(i[0], n).normalize(), r[0].crossVectors(i[0], a), o[0].crossVectors(i[0], r[0]);
        for(let f = 1; f <= e; f++){
            if (r[f] = r[f - 1].clone(), o[f] = o[f - 1].clone(), a.crossVectors(i[f - 1], i[f]), a.length() > Number.EPSILON) {
                a.normalize();
                let m = Math.acos(mt(i[f - 1].dot(i[f]), -1, 1));
                r[f].applyMatrix4(l.makeRotationAxis(a, m));
            }
            o[f].crossVectors(i[f], r[f]);
        }
        if (t === !0) {
            let f = Math.acos(mt(r[0].dot(r[e]), -1, 1));
            f /= e, i[0].dot(a.crossVectors(r[0], r[e])) > 0 && (f = -f);
            for(let m = 1; m <= e; m++)r[m].applyMatrix4(l.makeRotationAxis(i[m], f * m)), o[m].crossVectors(i[m], r[m]);
        }
        return {
            tangents: i,
            normals: r,
            binormals: o
        };
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Curve",
                generator: "Curve.toJSON"
            }
        };
        return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
    }
    fromJSON(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
}, Ur = class extends Ct {
    constructor(e = 0, t = 0, n = 1, i = 1, r = 0, o = Math.PI * 2, a = !1, l = 0){
        super();
        this.type = "EllipseCurve", this.aX = e, this.aY = t, this.xRadius = n, this.yRadius = i, this.aStartAngle = r, this.aEndAngle = o, this.aClockwise = a, this.aRotation = l;
    }
    getPoint(e, t) {
        let n = t || new X, i = Math.PI * 2, r = this.aEndAngle - this.aStartAngle, o = Math.abs(r) < Number.EPSILON;
        for(; r < 0;)r += i;
        for(; r > i;)r -= i;
        r < Number.EPSILON && (o ? r = 0 : r = i), this.aClockwise === !0 && !o && (r === i ? r = -i : r = r - i);
        let a = this.aStartAngle + e * r, l = this.aX + this.xRadius * Math.cos(a), c = this.aY + this.yRadius * Math.sin(a);
        if (this.aRotation !== 0) {
            let h = Math.cos(this.aRotation), u = Math.sin(this.aRotation), d = l - this.aX, f = c - this.aY;
            l = d * h - f * u + this.aX, c = d * u + f * h + this.aY;
        }
        return n.set(l, c);
    }
    copy(e) {
        return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
};
Ur.prototype.isEllipseCurve = !0;
var Ma = class extends Ur {
    constructor(e, t, n, i, r, o){
        super(e, t, n, n, i, r, o);
        this.type = "ArcCurve";
    }
};
Ma.prototype.isArcCurve = !0;
function ba() {
    let s = 0, e = 0, t = 0, n = 0;
    function i(r, o, a, l) {
        s = r, e = a, t = -3 * r + 3 * o - 2 * a - l, n = 2 * r - 2 * o + a + l;
    }
    return {
        initCatmullRom: function(r, o, a, l, c) {
            i(o, a, c * (a - r), c * (l - o));
        },
        initNonuniformCatmullRom: function(r, o, a, l, c, h, u) {
            let d = (o - r) / c - (a - r) / (c + h) + (a - o) / h, f = (a - o) / h - (l - o) / (h + u) + (l - a) / u;
            d *= h, f *= h, i(o, a, d, f);
        },
        calc: function(r) {
            let o = r * r, a = o * r;
            return s + e * r + t * o + n * a;
        }
    };
}
var Ms = new M, Yo = new ba, Zo = new ba, $o = new ba, wa = class extends Ct {
    constructor(e = [], t = !1, n = "centripetal", i = .5){
        super();
        this.type = "CatmullRomCurve3", this.points = e, this.closed = t, this.curveType = n, this.tension = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.points, r = i.length, o = (r - (this.closed ? 0 : 1)) * e, a = Math.floor(o), l = o - a;
        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / r) + 1) * r : l === 0 && a === r - 1 && (a = r - 2, l = 1);
        let c, h;
        this.closed || a > 0 ? c = i[(a - 1) % r] : (Ms.subVectors(i[0], i[1]).add(i[0]), c = Ms);
        let u = i[a % r], d = i[(a + 1) % r];
        if (this.closed || a + 2 < r ? h = i[(a + 2) % r] : (Ms.subVectors(i[r - 1], i[r - 2]).add(i[r - 1]), h = Ms), this.curveType === "centripetal" || this.curveType === "chordal") {
            let f = this.curveType === "chordal" ? .5 : .25, m = Math.pow(c.distanceToSquared(u), f), x = Math.pow(u.distanceToSquared(d), f), v = Math.pow(d.distanceToSquared(h), f);
            x < 1e-4 && (x = 1), m < 1e-4 && (m = x), v < 1e-4 && (v = x), Yo.initNonuniformCatmullRom(c.x, u.x, d.x, h.x, m, x, v), Zo.initNonuniformCatmullRom(c.y, u.y, d.y, h.y, m, x, v), $o.initNonuniformCatmullRom(c.z, u.z, d.z, h.z, m, x, v);
        } else this.curveType === "catmullrom" && (Yo.initCatmullRom(c.x, u.x, d.x, h.x, this.tension), Zo.initCatmullRom(c.y, u.y, d.y, h.y, this.tension), $o.initCatmullRom(c.z, u.z, d.z, h.z, this.tension));
        return n.set(Yo.calc(l), Zo.calc(l), $o.calc(l)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new M().fromArray(i));
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
};
wa.prototype.isCatmullRomCurve3 = !0;
function pc(s, e, t, n, i) {
    let r = (n - e) * .5, o = (i - t) * .5, a = s * s, l = s * a;
    return (2 * t - 2 * n + r + o) * l + (-3 * t + 3 * n - 2 * r - o) * a + r * s + t;
}
function Ix(s, e) {
    let t = 1 - s;
    return t * t * e;
}
function Dx(s, e) {
    return 2 * (1 - s) * s * e;
}
function Fx(s, e) {
    return s * s * e;
}
function ar(s, e, t, n) {
    return Ix(s, e) + Dx(s, t) + Fx(s, n);
}
function Nx(s, e) {
    let t = 1 - s;
    return t * t * t * e;
}
function Bx(s, e) {
    let t = 1 - s;
    return 3 * t * t * s * e;
}
function zx(s, e) {
    return 3 * (1 - s) * s * s * e;
}
function Ux(s, e) {
    return s * s * s * e;
}
function lr(s, e, t, n, i) {
    return Nx(s, e) + Bx(s, t) + zx(s, n) + Ux(s, i);
}
var lo = class extends Ct {
    constructor(e = new X, t = new X, n = new X, i = new X){
        super();
        this.type = "CubicBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
lo.prototype.isCubicBezierCurve = !0;
var Sa = class extends Ct {
    constructor(e = new M, t = new M, n = new M, i = new M){
        super();
        this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y), lr(e, i.z, r.z, o.z, a.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
Sa.prototype.isCubicBezierCurve3 = !0;
var Or = class extends Ct {
    constructor(e = new X, t = new X){
        super();
        this.type = "LineCurve", this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new X) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t) {
        let n = t || new X;
        return n.copy(this.v2).sub(this.v1).normalize(), n;
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
Or.prototype.isLineCurve = !0;
var Eh = class extends Ct {
    constructor(e = new M, t = new M){
        super();
        this.type = "LineCurve3", this.isLineCurve3 = !0, this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new M) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, co = class extends Ct {
    constructor(e = new X, t = new X, n = new X){
        super();
        this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
co.prototype.isQuadraticBezierCurve = !0;
var ho = class extends Ct {
    constructor(e = new M, t = new M, n = new M){
        super();
        this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y), ar(e, i.z, r.z, o.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
ho.prototype.isQuadraticBezierCurve3 = !0;
var uo = class extends Ct {
    constructor(e = []){
        super();
        this.type = "SplineCurve", this.points = e;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.points, r = (i.length - 1) * e, o = Math.floor(r), a = r - o, l = i[o === 0 ? o : o - 1], c = i[o], h = i[o > i.length - 2 ? i.length - 1 : o + 1], u = i[o > i.length - 3 ? i.length - 1 : o + 2];
        return n.set(pc(a, l.x, c.x, h.x, u.x), pc(a, l.y, c.y, h.y, u.y)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new X().fromArray(i));
        }
        return this;
    }
};
uo.prototype.isSplineCurve = !0;
var Ta = Object.freeze({
    __proto__: null,
    ArcCurve: Ma,
    CatmullRomCurve3: wa,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    EllipseCurve: Ur,
    LineCurve: Or,
    LineCurve3: Eh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    SplineCurve: uo
}), Ah = class extends Ct {
    constructor(){
        super();
        this.type = "CurvePath", this.curves = [], this.autoClose = !1;
    }
    add(e) {
        this.curves.push(e);
    }
    closePath() {
        let e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
        e.equals(t) || this.curves.push(new Or(t, e));
    }
    getPoint(e, t) {
        let n = e * this.getLength(), i = this.getCurveLengths(), r = 0;
        for(; r < i.length;){
            if (i[r] >= n) {
                let o = i[r] - n, a = this.curves[r], l = a.getLength(), c = l === 0 ? 0 : 1 - o / l;
                return a.getPointAt(c, t);
            }
            r++;
        }
        return null;
    }
    getLength() {
        let e = this.getCurveLengths();
        return e[e.length - 1];
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
    }
    getCurveLengths() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        let e = [], t = 0;
        for(let n = 0, i = this.curves.length; n < i; n++)t += this.curves[n].getLength(), e.push(t);
        return this.cacheLengths = e, e;
    }
    getSpacedPoints(e = 40) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t;
    }
    getPoints(e = 12) {
        let t = [], n;
        for(let i = 0, r = this.curves; i < r.length; i++){
            let o = r[i], a = o && o.isEllipseCurve ? e * 2 : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, l = o.getPoints(a);
            for(let c = 0; c < l.length; c++){
                let h = l[c];
                n && n.equals(h) || (t.push(h), n = h);
            }
        }
        return this.autoClose && t.length > 1 && !t[t.length - 1].equals(t[0]) && t.push(t[0]), t;
    }
    copy(e) {
        super.copy(e), this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(i.clone());
        }
        return this.autoClose = e.autoClose, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.autoClose = this.autoClose, e.curves = [];
        for(let t = 0, n = this.curves.length; t < n; t++){
            let i = this.curves[t];
            e.curves.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(new Ta[i.type]().fromJSON(i));
        }
        return this;
    }
}, gr = class extends Ah {
    constructor(e){
        super();
        this.type = "Path", this.currentPoint = new X, e && this.setFromPoints(e);
    }
    setFromPoints(e) {
        this.moveTo(e[0].x, e[0].y);
        for(let t = 1, n = e.length; t < n; t++)this.lineTo(e[t].x, e[t].y);
        return this;
    }
    moveTo(e, t) {
        return this.currentPoint.set(e, t), this;
    }
    lineTo(e, t) {
        let n = new Or(this.currentPoint.clone(), new X(e, t));
        return this.curves.push(n), this.currentPoint.set(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        let r = new co(this.currentPoint.clone(), new X(e, t), new X(n, i));
        return this.curves.push(r), this.currentPoint.set(n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        let a = new lo(this.currentPoint.clone(), new X(e, t), new X(n, i), new X(r, o));
        return this.curves.push(a), this.currentPoint.set(r, o), this;
    }
    splineThru(e) {
        let t = [
            this.currentPoint.clone()
        ].concat(e), n = new uo(t);
        return this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this;
    }
    arc(e, t, n, i, r, o) {
        let a = this.currentPoint.x, l = this.currentPoint.y;
        return this.absarc(e + a, t + l, n, i, r, o), this;
    }
    absarc(e, t, n, i, r, o) {
        return this.absellipse(e, t, n, n, i, r, o), this;
    }
    ellipse(e, t, n, i, r, o, a, l) {
        let c = this.currentPoint.x, h = this.currentPoint.y;
        return this.absellipse(e + c, t + h, n, i, r, o, a, l), this;
    }
    absellipse(e, t, n, i, r, o, a, l) {
        let c = new Ur(e, t, n, i, r, o, a, l);
        if (this.curves.length > 0) {
            let u = c.getPoint(0);
            u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
        }
        this.curves.push(c);
        let h = c.getPoint(1);
        return this.currentPoint.copy(h), this;
    }
    copy(e) {
        return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.currentPoint = this.currentPoint.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
    }
}, Xt = class extends gr {
    constructor(e){
        super(e);
        this.uuid = Et(), this.type = "Shape", this.holes = [];
    }
    getPointsHoles(e) {
        let t = [];
        for(let n = 0, i = this.holes.length; n < i; n++)t[n] = this.holes[n].getPoints(e);
        return t;
    }
    extractPoints(e) {
        return {
            shape: this.getPoints(e),
            holes: this.getPointsHoles(e)
        };
    }
    copy(e) {
        super.copy(e), this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.uuid = this.uuid, e.holes = [];
        for(let t = 0, n = this.holes.length; t < n; t++){
            let i = this.holes[t];
            e.holes.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(new gr().fromJSON(i));
        }
        return this;
    }
}, Ox = {
    triangulate: function(s, e, t = 2) {
        let n = e && e.length, i = n ? e[0] * t : s.length, r = Ch(s, 0, i, t, !0), o = [];
        if (!r || r.next === r.prev) return o;
        let a, l, c, h, u, d, f;
        if (n && (r = Wx(s, e, r, t)), s.length > 80 * t) {
            a = c = s[0], l = h = s[1];
            for(let m = t; m < i; m += t)u = s[m], d = s[m + 1], u < a && (a = u), d < l && (l = d), u > c && (c = u), d > h && (h = d);
            f = Math.max(c - a, h - l), f = f !== 0 ? 1 / f : 0;
        }
        return xr(r, o, t, a, l, f), o;
    }
};
function Ch(s, e, t, n, i) {
    let r, o;
    if (i === ty(s, e, t, n) > 0) for(r = e; r < t; r += n)o = mc(r, s[r], s[r + 1], o);
    else for(r = t - n; r >= e; r -= n)o = mc(r, s[r], s[r + 1], o);
    return o && fo(o, o.next) && (vr(o), o = o.next), o;
}
function Tn(s, e) {
    if (!s) return s;
    e || (e = s);
    let t = s, n;
    do if (n = !1, !t.steiner && (fo(t, t.next) || $e(t.prev, t, t.next) === 0)) {
        if (vr(t), t = e = t.prev, t === t.next) break;
        n = !0;
    } else t = t.next;
    while (n || t !== e)
    return e;
}
function xr(s, e, t, n, i, r, o) {
    if (!s) return;
    !o && r && Zx(s, n, i, r);
    let a = s, l, c;
    for(; s.prev !== s.next;){
        if (l = s.prev, c = s.next, r ? kx(s, n, i, r) : Hx(s)) {
            e.push(l.i / t), e.push(s.i / t), e.push(c.i / t), vr(s), s = c.next, a = c.next;
            continue;
        }
        if (s = c, s === a) {
            o ? o === 1 ? (s = Gx(Tn(s), e, t), xr(s, e, t, n, i, r, 2)) : o === 2 && Vx(s, e, t, n, i, r) : xr(Tn(s), e, t, n, i, r, 1);
            break;
        }
    }
}
function Hx(s) {
    let e = s.prev, t = s, n = s.next;
    if ($e(e, t, n) >= 0) return !1;
    let i = s.next.next;
    for(; i !== s.prev;){
        if (Si(e.x, e.y, t.x, t.y, n.x, n.y, i.x, i.y) && $e(i.prev, i, i.next) >= 0) return !1;
        i = i.next;
    }
    return !0;
}
function kx(s, e, t, n) {
    let i = s.prev, r = s, o = s.next;
    if ($e(i, r, o) >= 0) return !1;
    let a = i.x < r.x ? i.x < o.x ? i.x : o.x : r.x < o.x ? r.x : o.x, l = i.y < r.y ? i.y < o.y ? i.y : o.y : r.y < o.y ? r.y : o.y, c = i.x > r.x ? i.x > o.x ? i.x : o.x : r.x > o.x ? r.x : o.x, h = i.y > r.y ? i.y > o.y ? i.y : o.y : r.y > o.y ? r.y : o.y, u = oa(a, l, e, t, n), d = oa(c, h, e, t, n), f = s.prevZ, m = s.nextZ;
    for(; f && f.z >= u && m && m.z <= d;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0 || (f = f.prevZ, m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0)) return !1;
        m = m.nextZ;
    }
    for(; f && f.z >= u;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0) return !1;
        f = f.prevZ;
    }
    for(; m && m.z <= d;){
        if (m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0) return !1;
        m = m.nextZ;
    }
    return !0;
}
function Gx(s, e, t) {
    let n = s;
    do {
        let i = n.prev, r = n.next.next;
        !fo(i, r) && Lh(i, n, n.next, r) && yr(i, r) && yr(r, i) && (e.push(i.i / t), e.push(n.i / t), e.push(r.i / t), vr(n), vr(n.next), n = s = r), n = n.next;
    }while (n !== s)
    return Tn(n);
}
function Vx(s, e, t, n, i, r) {
    let o = s;
    do {
        let a = o.next.next;
        for(; a !== o.prev;){
            if (o.i !== a.i && Qx(o, a)) {
                let l = Rh(o, a);
                o = Tn(o, o.next), l = Tn(l, l.next), xr(o, e, t, n, i, r), xr(l, e, t, n, i, r);
                return;
            }
            a = a.next;
        }
        o = o.next;
    }while (o !== s)
}
function Wx(s, e, t, n) {
    let i = [], r, o, a, l, c;
    for(r = 0, o = e.length; r < o; r++)a = e[r] * n, l = r < o - 1 ? e[r + 1] * n : s.length, c = Ch(s, a, l, n, !1), c === c.next && (c.steiner = !0), i.push(jx(c));
    for(i.sort(qx), r = 0; r < i.length; r++)Xx(i[r], t), t = Tn(t, t.next);
    return t;
}
function qx(s, e) {
    return s.x - e.x;
}
function Xx(s, e) {
    if (e = Jx(s, e), e) {
        let t = Rh(e, s);
        Tn(e, e.next), Tn(t, t.next);
    }
}
function Jx(s, e) {
    let t = e, n = s.x, i = s.y, r = -1 / 0, o;
    do {
        if (i <= t.y && i >= t.next.y && t.next.y !== t.y) {
            let d = t.x + (i - t.y) * (t.next.x - t.x) / (t.next.y - t.y);
            if (d <= n && d > r) {
                if (r = d, d === n) {
                    if (i === t.y) return t;
                    if (i === t.next.y) return t.next;
                }
                o = t.x < t.next.x ? t : t.next;
            }
        }
        t = t.next;
    }while (t !== e)
    if (!o) return null;
    if (n === r) return o;
    let a = o, l = o.x, c = o.y, h = 1 / 0, u;
    t = o;
    do n >= t.x && t.x >= l && n !== t.x && Si(i < c ? n : r, i, l, c, i < c ? r : n, i, t.x, t.y) && (u = Math.abs(i - t.y) / (n - t.x), yr(t, s) && (u < h || u === h && (t.x > o.x || t.x === o.x && Yx(o, t))) && (o = t, h = u)), t = t.next;
    while (t !== a)
    return o;
}
function Yx(s, e) {
    return $e(s.prev, s, e.prev) < 0 && $e(e.next, s, s.next) < 0;
}
function Zx(s, e, t, n) {
    let i = s;
    do i.z === null && (i.z = oa(i.x, i.y, e, t, n)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
    while (i !== s)
    i.prevZ.nextZ = null, i.prevZ = null, $x(i);
}
function $x(s) {
    let e, t, n, i, r, o, a, l, c = 1;
    do {
        for(t = s, s = null, r = null, o = 0; t;){
            for(o++, n = t, a = 0, e = 0; e < c && (a++, n = n.nextZ, !!n); e++);
            for(l = c; a > 0 || l > 0 && n;)a !== 0 && (l === 0 || !n || t.z <= n.z) ? (i = t, t = t.nextZ, a--) : (i = n, n = n.nextZ, l--), r ? r.nextZ = i : s = i, i.prevZ = r, r = i;
            t = n;
        }
        r.nextZ = null, c *= 2;
    }while (o > 1)
    return s;
}
function oa(s, e, t, n, i) {
    return s = 32767 * (s - t) * i, e = 32767 * (e - n) * i, s = (s | s << 8) & 16711935, s = (s | s << 4) & 252645135, s = (s | s << 2) & 858993459, s = (s | s << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, s | e << 1;
}
function jx(s) {
    let e = s, t = s;
    do (e.x < t.x || e.x === t.x && e.y < t.y) && (t = e), e = e.next;
    while (e !== s)
    return t;
}
function Si(s, e, t, n, i, r, o, a) {
    return (i - o) * (e - a) - (s - o) * (r - a) >= 0 && (s - o) * (n - a) - (t - o) * (e - a) >= 0 && (t - o) * (r - a) - (i - o) * (n - a) >= 0;
}
function Qx(s, e) {
    return s.next.i !== e.i && s.prev.i !== e.i && !Kx(s, e) && (yr(s, e) && yr(e, s) && ey(s, e) && ($e(s.prev, s, e.prev) || $e(s, e.prev, e)) || fo(s, e) && $e(s.prev, s, s.next) > 0 && $e(e.prev, e, e.next) > 0);
}
function $e(s, e, t) {
    return (e.y - s.y) * (t.x - e.x) - (e.x - s.x) * (t.y - e.y);
}
function fo(s, e) {
    return s.x === e.x && s.y === e.y;
}
function Lh(s, e, t, n) {
    let i = ws($e(s, e, t)), r = ws($e(s, e, n)), o = ws($e(t, n, s)), a = ws($e(t, n, e));
    return !!(i !== r && o !== a || i === 0 && bs(s, t, e) || r === 0 && bs(s, n, e) || o === 0 && bs(t, s, n) || a === 0 && bs(t, e, n));
}
function bs(s, e, t) {
    return e.x <= Math.max(s.x, t.x) && e.x >= Math.min(s.x, t.x) && e.y <= Math.max(s.y, t.y) && e.y >= Math.min(s.y, t.y);
}
function ws(s) {
    return s > 0 ? 1 : s < 0 ? -1 : 0;
}
function Kx(s, e) {
    let t = s;
    do {
        if (t.i !== s.i && t.next.i !== s.i && t.i !== e.i && t.next.i !== e.i && Lh(t, t.next, s, e)) return !0;
        t = t.next;
    }while (t !== s)
    return !1;
}
function yr(s, e) {
    return $e(s.prev, s, s.next) < 0 ? $e(s, e, s.next) >= 0 && $e(s, s.prev, e) >= 0 : $e(s, e, s.prev) < 0 || $e(s, s.next, e) < 0;
}
function ey(s, e) {
    let t = s, n = !1, i = (s.x + e.x) / 2, r = (s.y + e.y) / 2;
    do t.y > r != t.next.y > r && t.next.y !== t.y && i < (t.next.x - t.x) * (r - t.y) / (t.next.y - t.y) + t.x && (n = !n), t = t.next;
    while (t !== s)
    return n;
}
function Rh(s, e) {
    let t = new aa(s.i, s.x, s.y), n = new aa(e.i, e.x, e.y), i = s.next, r = e.prev;
    return s.next = e, e.prev = s, t.next = i, i.prev = t, n.next = t, t.prev = n, r.next = n, n.prev = r, n;
}
function mc(s, e, t, n) {
    let i = new aa(s, e, t);
    return n ? (i.next = n.next, i.prev = n, n.next.prev = i, n.next = i) : (i.prev = i, i.next = i), i;
}
function vr(s) {
    s.next.prev = s.prev, s.prev.next = s.next, s.prevZ && (s.prevZ.nextZ = s.nextZ), s.nextZ && (s.nextZ.prevZ = s.prevZ);
}
function aa(s, e, t) {
    this.i = s, this.x = e, this.y = t, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
}
function ty(s, e, t, n) {
    let i = 0;
    for(let r = e, o = t - n; r < t; r += n)i += (s[o] - s[r]) * (s[r + 1] + s[o + 1]), o = r;
    return i;
}
var Jt = class {
    static area(e) {
        let t = e.length, n = 0;
        for(let i = t - 1, r = 0; r < t; i = r++)n += e[i].x * e[r].y - e[r].x * e[i].y;
        return n * .5;
    }
    static isClockWise(e) {
        return Jt.area(e) < 0;
    }
    static triangulateShape(e, t) {
        let n = [], i = [], r = [];
        gc(e), xc(n, e);
        let o = e.length;
        t.forEach(gc);
        for(let l = 0; l < t.length; l++)i.push(o), o += t[l].length, xc(n, t[l]);
        let a = Ox.triangulate(n, i);
        for(let l = 0; l < a.length; l += 3)r.push(a.slice(l, l + 3));
        return r;
    }
};
function gc(s) {
    let e = s.length;
    e > 2 && s[e - 1].equals(s[0]) && s.pop();
}
function xc(s, e) {
    for(let t = 0; t < e.length; t++)s.push(e[t].x), s.push(e[t].y);
}
var ln = class extends _e {
    constructor(e = new Xt([
        new X(.5, .5),
        new X(-.5, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = {}){
        super();
        this.type = "ExtrudeGeometry", this.parameters = {
            shapes: e,
            options: t
        }, e = Array.isArray(e) ? e : [
            e
        ];
        let n = this, i = [], r = [];
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a];
            o(c);
        }
        this.setAttribute("position", new de(i, 3)), this.setAttribute("uv", new de(r, 2)), this.computeVertexNormals();
        function o(a) {
            let l = [], c = t.curveSegments !== void 0 ? t.curveSegments : 12, h = t.steps !== void 0 ? t.steps : 1, u = t.depth !== void 0 ? t.depth : 1, d = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0, f = t.bevelThickness !== void 0 ? t.bevelThickness : .2, m = t.bevelSize !== void 0 ? t.bevelSize : f - .1, x = t.bevelOffset !== void 0 ? t.bevelOffset : 0, v = t.bevelSegments !== void 0 ? t.bevelSegments : 3, g = t.extrudePath, p = t.UVGenerator !== void 0 ? t.UVGenerator : ny;
            t.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), u = t.amount);
            let _, y = !1, b, A, L, I;
            g && (_ = g.getSpacedPoints(h), y = !0, d = !1, b = g.computeFrenetFrames(h, !1), A = new M, L = new M, I = new M), d || (v = 0, f = 0, m = 0, x = 0);
            let k = a.extractPoints(c), B = k.shape, P = k.holes;
            if (!Jt.isClockWise(B)) {
                B = B.reverse();
                for(let G = 0, j = P.length; G < j; G++){
                    let K = P[G];
                    Jt.isClockWise(K) && (P[G] = K.reverse());
                }
            }
            let E = Jt.triangulateShape(B, P), D = B;
            for(let G = 0, j = P.length; G < j; G++){
                let K = P[G];
                B = B.concat(K);
            }
            function U(G, j, K) {
                return j || console.error("THREE.ExtrudeGeometry: vec does not exist"), j.clone().multiplyScalar(K).add(G);
            }
            let F = B.length, O = E.length;
            function ne(G, j, K) {
                let ue, se, Se, Te = G.x - j.x, Pe = G.y - j.y, Ye = K.x - G.x, C = K.y - G.y, T = Te * Te + Pe * Pe, J = Te * C - Pe * Ye;
                if (Math.abs(J) > Number.EPSILON) {
                    let $ = Math.sqrt(T), re = Math.sqrt(Ye * Ye + C * C), Z = j.x - Pe / $, Me = j.y + Te / $, ve = K.x - C / re, te = K.y + Ye / re, R = ((ve - Z) * C - (te - Me) * Ye) / (Te * C - Pe * Ye);
                    ue = Z + Te * R - G.x, se = Me + Pe * R - G.y;
                    let ee = ue * ue + se * se;
                    if (ee <= 2) return new X(ue, se);
                    Se = Math.sqrt(ee / 2);
                } else {
                    let $ = !1;
                    Te > Number.EPSILON ? Ye > Number.EPSILON && ($ = !0) : Te < -Number.EPSILON ? Ye < -Number.EPSILON && ($ = !0) : Math.sign(Pe) === Math.sign(C) && ($ = !0), $ ? (ue = -Pe, se = Te, Se = Math.sqrt(T)) : (ue = Te, se = Pe, Se = Math.sqrt(T / 2));
                }
                return new X(ue / Se, se / Se);
            }
            let ce = [];
            for(let G = 0, j = D.length, K = j - 1, ue = G + 1; G < j; G++, K++, ue++)K === j && (K = 0), ue === j && (ue = 0), ce[G] = ne(D[G], D[K], D[ue]);
            let V = [], W, he = ce.concat();
            for(let G = 0, j = P.length; G < j; G++){
                let K = P[G];
                W = [];
                for(let ue = 0, se = K.length, Se = se - 1, Te = ue + 1; ue < se; ue++, Se++, Te++)Se === se && (Se = 0), Te === se && (Te = 0), W[ue] = ne(K[ue], K[Se], K[Te]);
                V.push(W), he = he.concat(W);
            }
            for(let G = 0; G < v; G++){
                let j = G / v, K = f * Math.cos(j * Math.PI / 2), ue = m * Math.sin(j * Math.PI / 2) + x;
                for(let se = 0, Se = D.length; se < Se; se++){
                    let Te = U(D[se], ce[se], ue);
                    Ce(Te.x, Te.y, -K);
                }
                for(let se = 0, Se = P.length; se < Se; se++){
                    let Te = P[se];
                    W = V[se];
                    for(let Pe = 0, Ye = Te.length; Pe < Ye; Pe++){
                        let C = U(Te[Pe], W[Pe], ue);
                        Ce(C.x, C.y, -K);
                    }
                }
            }
            let le = m + x;
            for(let G = 0; G < F; G++){
                let j = d ? U(B[G], he[G], le) : B[G];
                y ? (L.copy(b.normals[0]).multiplyScalar(j.x), A.copy(b.binormals[0]).multiplyScalar(j.y), I.copy(_[0]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(j.x, j.y, 0);
            }
            for(let G = 1; G <= h; G++)for(let j = 0; j < F; j++){
                let K = d ? U(B[j], he[j], le) : B[j];
                y ? (L.copy(b.normals[G]).multiplyScalar(K.x), A.copy(b.binormals[G]).multiplyScalar(K.y), I.copy(_[G]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(K.x, K.y, u / h * G);
            }
            for(let G = v - 1; G >= 0; G--){
                let j = G / v, K = f * Math.cos(j * Math.PI / 2), ue = m * Math.sin(j * Math.PI / 2) + x;
                for(let se = 0, Se = D.length; se < Se; se++){
                    let Te = U(D[se], ce[se], ue);
                    Ce(Te.x, Te.y, u + K);
                }
                for(let se = 0, Se = P.length; se < Se; se++){
                    let Te = P[se];
                    W = V[se];
                    for(let Pe = 0, Ye = Te.length; Pe < Ye; Pe++){
                        let C = U(Te[Pe], W[Pe], ue);
                        y ? Ce(C.x, C.y + _[h - 1].y, _[h - 1].x + K) : Ce(C.x, C.y, u + K);
                    }
                }
            }
            fe(), Be();
            function fe() {
                let G = i.length / 3;
                if (d) {
                    let j = 0, K = F * j;
                    for(let ue = 0; ue < O; ue++){
                        let se = E[ue];
                        ye(se[2] + K, se[1] + K, se[0] + K);
                    }
                    j = h + v * 2, K = F * j;
                    for(let ue = 0; ue < O; ue++){
                        let se = E[ue];
                        ye(se[0] + K, se[1] + K, se[2] + K);
                    }
                } else {
                    for(let j = 0; j < O; j++){
                        let K = E[j];
                        ye(K[2], K[1], K[0]);
                    }
                    for(let j = 0; j < O; j++){
                        let K = E[j];
                        ye(K[0] + F * h, K[1] + F * h, K[2] + F * h);
                    }
                }
                n.addGroup(G, i.length / 3 - G, 0);
            }
            function Be() {
                let G = i.length / 3, j = 0;
                Y(D, j), j += D.length;
                for(let K = 0, ue = P.length; K < ue; K++){
                    let se = P[K];
                    Y(se, j), j += se.length;
                }
                n.addGroup(G, i.length / 3 - G, 1);
            }
            function Y(G, j) {
                let K = G.length;
                for(; --K >= 0;){
                    let ue = K, se = K - 1;
                    se < 0 && (se = G.length - 1);
                    for(let Se = 0, Te = h + v * 2; Se < Te; Se++){
                        let Pe = F * Se, Ye = F * (Se + 1), C = j + ue + Pe, T = j + se + Pe, J = j + se + Ye, $ = j + ue + Ye;
                        ge(C, T, J, $);
                    }
                }
            }
            function Ce(G, j, K) {
                l.push(G), l.push(j), l.push(K);
            }
            function ye(G, j, K) {
                xe(G), xe(j), xe(K);
                let ue = i.length / 3, se = p.generateTopUV(n, i, ue - 3, ue - 2, ue - 1);
                Oe(se[0]), Oe(se[1]), Oe(se[2]);
            }
            function ge(G, j, K, ue) {
                xe(G), xe(j), xe(ue), xe(j), xe(K), xe(ue);
                let se = i.length / 3, Se = p.generateSideWallUV(n, i, se - 6, se - 3, se - 2, se - 1);
                Oe(Se[0]), Oe(Se[1]), Oe(Se[3]), Oe(Se[1]), Oe(Se[2]), Oe(Se[3]);
            }
            function xe(G) {
                i.push(l[G * 3 + 0]), i.push(l[G * 3 + 1]), i.push(l[G * 3 + 2]);
            }
            function Oe(G) {
                r.push(G.x), r.push(G.y);
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes, n = this.parameters.options;
        return iy(t, n, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let r = 0, o = e.shapes.length; r < o; r++){
            let a = t[e.shapes[r]];
            n.push(a);
        }
        let i = e.options.extrudePath;
        return i !== void 0 && (e.options.extrudePath = new Ta[i.type]().fromJSON(i)), new ln(n, e.options);
    }
}, ny = {
    generateTopUV: function(s, e, t, n, i) {
        let r = e[t * 3], o = e[t * 3 + 1], a = e[n * 3], l = e[n * 3 + 1], c = e[i * 3], h = e[i * 3 + 1];
        return [
            new X(r, o),
            new X(a, l),
            new X(c, h)
        ];
    },
    generateSideWallUV: function(s, e, t, n, i, r) {
        let o = e[t * 3], a = e[t * 3 + 1], l = e[t * 3 + 2], c = e[n * 3], h = e[n * 3 + 1], u = e[n * 3 + 2], d = e[i * 3], f = e[i * 3 + 1], m = e[i * 3 + 2], x = e[r * 3], v = e[r * 3 + 1], g = e[r * 3 + 2];
        return Math.abs(a - h) < Math.abs(o - c) ? [
            new X(o, 1 - l),
            new X(c, 1 - u),
            new X(d, 1 - m),
            new X(x, 1 - g)
        ] : [
            new X(a, 1 - l),
            new X(h, 1 - u),
            new X(f, 1 - m),
            new X(v, 1 - g)
        ];
    }
};
function iy(s, e, t) {
    if (t.shapes = [], Array.isArray(s)) for(let n = 0, i = s.length; n < i; n++){
        let r = s[n];
        t.shapes.push(r.uuid);
    }
    else t.shapes.push(s.uuid);
    return e.extrudePath !== void 0 && (t.options.extrudePath = e.extrudePath.toJSON()), t;
}
var _r = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = [
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            0,
            0,
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            n,
            0,
            -1,
            n,
            0,
            1,
            -n,
            0,
            -1,
            -n,
            0,
            1
        ], r = [
            0,
            11,
            5,
            0,
            5,
            1,
            0,
            1,
            7,
            0,
            7,
            10,
            0,
            10,
            11,
            1,
            5,
            9,
            5,
            11,
            4,
            11,
            10,
            2,
            10,
            7,
            6,
            7,
            1,
            8,
            3,
            9,
            4,
            3,
            4,
            2,
            3,
            2,
            6,
            3,
            6,
            8,
            3,
            8,
            9,
            4,
            9,
            5,
            2,
            4,
            11,
            6,
            2,
            10,
            8,
            6,
            7,
            9,
            8,
            1
        ];
        super(i, r, e, t);
        this.type = "IcosahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new _r(e.radius, e.detail);
    }
}, Mr = class extends _e {
    constructor(e = [
        new X(0, .5),
        new X(.5, 0),
        new X(0, -.5)
    ], t = 12, n = 0, i = Math.PI * 2){
        super();
        this.type = "LatheGeometry", this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: i
        }, t = Math.floor(t), i = mt(i, 0, Math.PI * 2);
        let r = [], o = [], a = [], l = [], c = [], h = 1 / t, u = new M, d = new X, f = new M, m = new M, x = new M, v = 0, g = 0;
        for(let p = 0; p <= e.length - 1; p++)switch(p){
            case 0:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, x.copy(f), f.normalize(), l.push(f.x, f.y, f.z);
                break;
            case e.length - 1:
                l.push(x.x, x.y, x.z);
                break;
            default:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, m.copy(f), f.x += x.x, f.y += x.y, f.z += x.z, f.normalize(), l.push(f.x, f.y, f.z), x.copy(m);
        }
        for(let p = 0; p <= t; p++){
            let _ = n + p * h * i, y = Math.sin(_), b = Math.cos(_);
            for(let A = 0; A <= e.length - 1; A++){
                u.x = e[A].x * y, u.y = e[A].y, u.z = e[A].x * b, o.push(u.x, u.y, u.z), d.x = p / t, d.y = A / (e.length - 1), a.push(d.x, d.y);
                let L = l[3 * A + 0] * y, I = l[3 * A + 1], k = l[3 * A + 0] * b;
                c.push(L, I, k);
            }
        }
        for(let p = 0; p < t; p++)for(let _ = 0; _ < e.length - 1; _++){
            let y = _ + p * e.length, b = y, A = y + e.length, L = y + e.length + 1, I = y + 1;
            r.push(b, A, I), r.push(A, L, I);
        }
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("uv", new de(a, 2)), this.setAttribute("normal", new de(c, 3));
    }
    static fromJSON(e) {
        return new Mr(e.points, e.segments, e.phiStart, e.phiLength);
    }
}, Ii = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1
        ], i = [
            0,
            2,
            4,
            0,
            4,
            3,
            0,
            3,
            5,
            0,
            5,
            2,
            1,
            2,
            5,
            1,
            5,
            3,
            1,
            3,
            4,
            1,
            4,
            2
        ];
        super(n, i, e, t);
        this.type = "OctahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new Ii(e.radius, e.detail);
    }
}, br = class extends _e {
    constructor(e = .5, t = 1, n = 8, i = 1, r = 0, o = Math.PI * 2){
        super();
        this.type = "RingGeometry", this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: i,
            thetaStart: r,
            thetaLength: o
        }, n = Math.max(3, n), i = Math.max(1, i);
        let a = [], l = [], c = [], h = [], u = e, d = (t - e) / i, f = new M, m = new X;
        for(let x = 0; x <= i; x++){
            for(let v = 0; v <= n; v++){
                let g = r + v / n * o;
                f.x = u * Math.cos(g), f.y = u * Math.sin(g), l.push(f.x, f.y, f.z), c.push(0, 0, 1), m.x = (f.x / t + 1) / 2, m.y = (f.y / t + 1) / 2, h.push(m.x, m.y);
            }
            u += d;
        }
        for(let x = 0; x < i; x++){
            let v = x * (n + 1);
            for(let g = 0; g < n; g++){
                let p = g + v, _ = p, y = p + n + 1, b = p + n + 2, A = p + 1;
                a.push(_, y, A), a.push(y, b, A);
            }
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
    }
    static fromJSON(e) {
        return new br(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
    }
}, Di = class extends _e {
    constructor(e = new Xt([
        new X(0, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = 12){
        super();
        this.type = "ShapeGeometry", this.parameters = {
            shapes: e,
            curveSegments: t
        };
        let n = [], i = [], r = [], o = [], a = 0, l = 0;
        if (Array.isArray(e) === !1) c(e);
        else for(let h = 0; h < e.length; h++)c(e[h]), this.addGroup(a, l, h), a += l, l = 0;
        this.setIndex(n), this.setAttribute("position", new de(i, 3)), this.setAttribute("normal", new de(r, 3)), this.setAttribute("uv", new de(o, 2));
        function c(h) {
            let u = i.length / 3, d = h.extractPoints(t), f = d.shape, m = d.holes;
            Jt.isClockWise(f) === !1 && (f = f.reverse());
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v];
                Jt.isClockWise(p) === !0 && (m[v] = p.reverse());
            }
            let x = Jt.triangulateShape(f, m);
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v];
                f = f.concat(p);
            }
            for(let v = 0, g = f.length; v < g; v++){
                let p = f[v];
                i.push(p.x, p.y, 0), r.push(0, 0, 1), o.push(p.x, p.y);
            }
            for(let v = 0, g = x.length; v < g; v++){
                let p = x[v], _ = p[0] + u, y = p[1] + u, b = p[2] + u;
                n.push(_, y, b), l += 3;
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes;
        return ry(t, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let i = 0, r = e.shapes.length; i < r; i++){
            let o = t[e.shapes[i]];
            n.push(o);
        }
        return new Di(n, e.curveSegments);
    }
};
function ry(s, e) {
    if (e.shapes = [], Array.isArray(s)) for(let t = 0, n = s.length; t < n; t++){
        let i = s[t];
        e.shapes.push(i.uuid);
    }
    else e.shapes.push(s.uuid);
    return e;
}
var Fi = class extends _e {
    constructor(e = 1, t = 32, n = 16, i = 0, r = Math.PI * 2, o = 0, a = Math.PI){
        super();
        this.type = "SphereGeometry", this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: i,
            phiLength: r,
            thetaStart: o,
            thetaLength: a
        }, t = Math.max(3, Math.floor(t)), n = Math.max(2, Math.floor(n));
        let l = Math.min(o + a, Math.PI), c = 0, h = [], u = new M, d = new M, f = [], m = [], x = [], v = [];
        for(let g = 0; g <= n; g++){
            let p = [], _ = g / n, y = 0;
            g == 0 && o == 0 ? y = .5 / t : g == n && l == Math.PI && (y = -.5 / t);
            for(let b = 0; b <= t; b++){
                let A = b / t;
                u.x = -e * Math.cos(i + A * r) * Math.sin(o + _ * a), u.y = e * Math.cos(o + _ * a), u.z = e * Math.sin(i + A * r) * Math.sin(o + _ * a), m.push(u.x, u.y, u.z), d.copy(u).normalize(), x.push(d.x, d.y, d.z), v.push(A + y, 1 - _), p.push(c++);
            }
            h.push(p);
        }
        for(let g = 0; g < n; g++)for(let p = 0; p < t; p++){
            let _ = h[g][p + 1], y = h[g][p], b = h[g + 1][p], A = h[g + 1][p + 1];
            (g !== 0 || o > 0) && f.push(_, y, A), (g !== n - 1 || l < Math.PI) && f.push(y, b, A);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Fi(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
    }
}, wr = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            1,
            -1,
            -1
        ], i = [
            2,
            1,
            0,
            0,
            3,
            2,
            1,
            3,
            0,
            2,
            3,
            1
        ];
        super(n, i, e, t);
        this.type = "TetrahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new wr(e.radius, e.detail);
    }
}, Sr = class extends _e {
    constructor(e = 1, t = .4, n = 8, i = 6, r = Math.PI * 2){
        super();
        this.type = "TorusGeometry", this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: i,
            arc: r
        }, n = Math.floor(n), i = Math.floor(i);
        let o = [], a = [], l = [], c = [], h = new M, u = new M, d = new M;
        for(let f = 0; f <= n; f++)for(let m = 0; m <= i; m++){
            let x = m / i * r, v = f / n * Math.PI * 2;
            u.x = (e + t * Math.cos(v)) * Math.cos(x), u.y = (e + t * Math.cos(v)) * Math.sin(x), u.z = t * Math.sin(v), a.push(u.x, u.y, u.z), h.x = e * Math.cos(x), h.y = e * Math.sin(x), d.subVectors(u, h).normalize(), l.push(d.x, d.y, d.z), c.push(m / i), c.push(f / n);
        }
        for(let f = 1; f <= n; f++)for(let m = 1; m <= i; m++){
            let x = (i + 1) * f + m - 1, v = (i + 1) * (f - 1) + m - 1, g = (i + 1) * (f - 1) + m, p = (i + 1) * f + m;
            o.push(x, v, p), o.push(v, g, p);
        }
        this.setIndex(o), this.setAttribute("position", new de(a, 3)), this.setAttribute("normal", new de(l, 3)), this.setAttribute("uv", new de(c, 2));
    }
    static fromJSON(e) {
        return new Sr(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
    }
}, Tr = class extends _e {
    constructor(e = 1, t = .4, n = 64, i = 8, r = 2, o = 3){
        super();
        this.type = "TorusKnotGeometry", this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: i,
            p: r,
            q: o
        }, n = Math.floor(n), i = Math.floor(i);
        let a = [], l = [], c = [], h = [], u = new M, d = new M, f = new M, m = new M, x = new M, v = new M, g = new M;
        for(let _ = 0; _ <= n; ++_){
            let y = _ / n * r * Math.PI * 2;
            p(y, r, o, e, f), p(y + .01, r, o, e, m), v.subVectors(m, f), g.addVectors(m, f), x.crossVectors(v, g), g.crossVectors(x, v), x.normalize(), g.normalize();
            for(let b = 0; b <= i; ++b){
                let A = b / i * Math.PI * 2, L = -t * Math.cos(A), I = t * Math.sin(A);
                u.x = f.x + (L * g.x + I * x.x), u.y = f.y + (L * g.y + I * x.y), u.z = f.z + (L * g.z + I * x.z), l.push(u.x, u.y, u.z), d.subVectors(u, f).normalize(), c.push(d.x, d.y, d.z), h.push(_ / n), h.push(b / i);
            }
        }
        for(let _ = 1; _ <= n; _++)for(let y = 1; y <= i; y++){
            let b = (i + 1) * (_ - 1) + (y - 1), A = (i + 1) * _ + (y - 1), L = (i + 1) * _ + y, I = (i + 1) * (_ - 1) + y;
            a.push(b, A, I), a.push(A, L, I);
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
        function p(_, y, b, A, L) {
            let I = Math.cos(_), k = Math.sin(_), B = b / y * _, P = Math.cos(B);
            L.x = A * (2 + P) * .5 * I, L.y = A * (2 + P) * k * .5, L.z = A * Math.sin(B) * .5;
        }
    }
    static fromJSON(e) {
        return new Tr(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
    }
}, Er = class extends _e {
    constructor(e = new ho(new M(-1, -1, 0), new M(-1, 1, 0), new M(1, 1, 0)), t = 64, n = 1, i = 8, r = !1){
        super();
        this.type = "TubeGeometry", this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: i,
            closed: r
        };
        let o = e.computeFrenetFrames(t, r);
        this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
        let a = new M, l = new M, c = new X, h = new M, u = [], d = [], f = [], m = [];
        x(), this.setIndex(m), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function x() {
            for(let _ = 0; _ < t; _++)v(_);
            v(r === !1 ? t : 0), p(), g();
        }
        function v(_) {
            h = e.getPointAt(_ / t, h);
            let y = o.normals[_], b = o.binormals[_];
            for(let A = 0; A <= i; A++){
                let L = A / i * Math.PI * 2, I = Math.sin(L), k = -Math.cos(L);
                l.x = k * y.x + I * b.x, l.y = k * y.y + I * b.y, l.z = k * y.z + I * b.z, l.normalize(), d.push(l.x, l.y, l.z), a.x = h.x + n * l.x, a.y = h.y + n * l.y, a.z = h.z + n * l.z, u.push(a.x, a.y, a.z);
            }
        }
        function g() {
            for(let _ = 1; _ <= t; _++)for(let y = 1; y <= i; y++){
                let b = (i + 1) * (_ - 1) + (y - 1), A = (i + 1) * _ + (y - 1), L = (i + 1) * _ + y, I = (i + 1) * (_ - 1) + y;
                m.push(b, A, I), m.push(A, L, I);
            }
        }
        function p() {
            for(let _ = 0; _ <= t; _++)for(let y = 0; y <= i; y++)c.x = _ / t, c.y = y / i, f.push(c.x, c.y);
        }
    }
    toJSON() {
        let e = super.toJSON();
        return e.path = this.parameters.path.toJSON(), e;
    }
    static fromJSON(e) {
        return new Er(new Ta[e.path.type]().fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed);
    }
}, Ea = class extends _e {
    constructor(e = null){
        super();
        if (this.type = "WireframeGeometry", this.parameters = {
            geometry: e
        }, e !== null) {
            let t = [], n = new Set, i = new M, r = new M;
            if (e.index !== null) {
                let o = e.attributes.position, a = e.index, l = e.groups;
                l.length === 0 && (l = [
                    {
                        start: 0,
                        count: a.count,
                        materialIndex: 0
                    }
                ]);
                for(let c = 0, h = l.length; c < h; ++c){
                    let u = l[c], d = u.start, f = u.count;
                    for(let m = d, x = d + f; m < x; m += 3)for(let v = 0; v < 3; v++){
                        let g = a.getX(m + v), p = a.getX(m + (v + 1) % 3);
                        i.fromBufferAttribute(o, g), r.fromBufferAttribute(o, p), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                    }
                }
            } else {
                let o = e.attributes.position;
                for(let a = 0, l = o.count / 3; a < l; a++)for(let c = 0; c < 3; c++){
                    let h = 3 * a + c, u = 3 * a + (c + 1) % 3;
                    i.fromBufferAttribute(o, h), r.fromBufferAttribute(o, u), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                }
            }
            this.setAttribute("position", new de(t, 3));
        }
    }
};
function yc(s, e, t) {
    let n = `${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;
    return t.has(n) === !0 || t.has(i) === !0 ? !1 : (t.add(n, i), !0);
}
var vc = Object.freeze({
    __proto__: null,
    BoxGeometry: wn,
    BoxBufferGeometry: wn,
    CircleGeometry: fr,
    CircleBufferGeometry: fr,
    ConeGeometry: pr,
    ConeBufferGeometry: pr,
    CylinderGeometry: Jn,
    CylinderBufferGeometry: Jn,
    DodecahedronGeometry: mr,
    DodecahedronBufferGeometry: mr,
    EdgesGeometry: _a,
    ExtrudeGeometry: ln,
    ExtrudeBufferGeometry: ln,
    IcosahedronGeometry: _r,
    IcosahedronBufferGeometry: _r,
    LatheGeometry: Mr,
    LatheBufferGeometry: Mr,
    OctahedronGeometry: Ii,
    OctahedronBufferGeometry: Ii,
    PlaneGeometry: Pi,
    PlaneBufferGeometry: Pi,
    PolyhedronGeometry: an,
    PolyhedronBufferGeometry: an,
    RingGeometry: br,
    RingBufferGeometry: br,
    ShapeGeometry: Di,
    ShapeBufferGeometry: Di,
    SphereGeometry: Fi,
    SphereBufferGeometry: Fi,
    TetrahedronGeometry: wr,
    TetrahedronBufferGeometry: wr,
    TorusGeometry: Sr,
    TorusBufferGeometry: Sr,
    TorusKnotGeometry: Tr,
    TorusKnotBufferGeometry: Tr,
    TubeGeometry: Er,
    TubeBufferGeometry: Er,
    WireframeGeometry: Ea
}), Aa = class extends dt {
    constructor(e){
        super();
        this.type = "ShadowMaterial", this.color = new ae(0), this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this;
    }
};
Aa.prototype.isShadowMaterial = !0;
var po = class extends dt {
    constructor(e){
        super();
        this.defines = {
            STANDARD: ""
        }, this.type = "MeshStandardMaterial", this.color = new ae(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: ""
        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
po.prototype.isMeshStandardMaterial = !0;
var Ca = class extends po {
    constructor(e){
        super();
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.type = "MeshPhysicalMaterial", this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new X(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
            get: function() {
                return mt(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
            },
            set: function(t) {
                this.ior = (1 + .4 * t) / (1 - .4 * t);
            }
        }), this.sheenColor = new ae(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 0, this.attenuationColor = new ae(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new ae(1, 1, 1), this.specularColorMap = null, this._sheen = 0, this._clearcoat = 0, this._transmission = 0, this.setValues(e);
    }
    get sheen() {
        return this._sheen;
    }
    set sheen(e) {
        this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
    }
    get clearcoat() {
        return this._clearcoat;
    }
    set clearcoat(e) {
        this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
    }
    get transmission() {
        return this._transmission;
    }
    set transmission(e) {
        this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.ior = e.ior, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
    }
};
Ca.prototype.isMeshPhysicalMaterial = !0;
var La = class extends dt {
    constructor(e){
        super();
        this.type = "MeshPhongMaterial", this.color = new ae(16777215), this.specular = new ae(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
La.prototype.isMeshPhongMaterial = !0;
var Ra = class extends dt {
    constructor(e){
        super();
        this.defines = {
            TOON: ""
        }, this.type = "MeshToonMaterial", this.color = new ae(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ra.prototype.isMeshToonMaterial = !0;
var Pa = class extends dt {
    constructor(e){
        super();
        this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
    }
};
Pa.prototype.isMeshNormalMaterial = !0;
var Ia = class extends dt {
    constructor(e){
        super();
        this.type = "MeshLambertMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ia.prototype.isMeshLambertMaterial = !0;
var Da = class extends dt {
    constructor(e){
        super();
        this.defines = {
            MATCAP: ""
        }, this.type = "MeshMatcapMaterial", this.color = new ae(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            MATCAP: ""
        }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this;
    }
};
Da.prototype.isMeshMatcapMaterial = !0;
var Fa = class extends ft {
    constructor(e){
        super();
        this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
    }
};
Fa.prototype.isLineDashedMaterial = !0;
var sy = Object.freeze({
    __proto__: null,
    ShadowMaterial: Aa,
    SpriteMaterial: io,
    RawShaderMaterial: Gi,
    ShaderMaterial: sn,
    PointsMaterial: jn,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshPhongMaterial: La,
    MeshToonMaterial: Ra,
    MeshNormalMaterial: Pa,
    MeshLambertMaterial: Ia,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshBasicMaterial: hn,
    MeshMatcapMaterial: Da,
    LineDashedMaterial: Fa,
    LineBasicMaterial: ft,
    Material: dt
}), Ze = {
    arraySlice: function(s, e, t) {
        return Ze.isTypedArray(s) ? new s.constructor(s.subarray(e, t !== void 0 ? t : s.length)) : s.slice(e, t);
    },
    convertArray: function(s, e, t) {
        return !s || !t && s.constructor === e ? s : typeof e.BYTES_PER_ELEMENT == "number" ? new e(s) : Array.prototype.slice.call(s);
    },
    isTypedArray: function(s) {
        return ArrayBuffer.isView(s) && !(s instanceof DataView);
    },
    getKeyframeOrder: function(s) {
        function e(i, r) {
            return s[i] - s[r];
        }
        let t = s.length, n = new Array(t);
        for(let i = 0; i !== t; ++i)n[i] = i;
        return n.sort(e), n;
    },
    sortedArray: function(s, e, t) {
        let n = s.length, i = new s.constructor(n);
        for(let r = 0, o = 0; o !== n; ++r){
            let a = t[r] * e;
            for(let l = 0; l !== e; ++l)i[o++] = s[a + l];
        }
        return i;
    },
    flattenJSON: function(s, e, t, n) {
        let i = 1, r = s[0];
        for(; r !== void 0 && r[n] === void 0;)r = s[i++];
        if (r === void 0) return;
        let o = r[n];
        if (o !== void 0) if (Array.isArray(o)) do o = r[n], o !== void 0 && (e.push(r.time), t.push.apply(t, o)), r = s[i++];
        while (r !== void 0)
        else if (o.toArray !== void 0) do o = r[n], o !== void 0 && (e.push(r.time), o.toArray(t, t.length)), r = s[i++];
        while (r !== void 0)
        else do o = r[n], o !== void 0 && (e.push(r.time), t.push(o)), r = s[i++];
        while (r !== void 0)
    },
    subclip: function(s, e, t, n, i = 30) {
        let r = s.clone();
        r.name = e;
        let o = [];
        for(let l = 0; l < r.tracks.length; ++l){
            let c = r.tracks[l], h = c.getValueSize(), u = [], d = [];
            for(let f = 0; f < c.times.length; ++f){
                let m = c.times[f] * i;
                if (!(m < t || m >= n)) {
                    u.push(c.times[f]);
                    for(let x = 0; x < h; ++x)d.push(c.values[f * h + x]);
                }
            }
            u.length !== 0 && (c.times = Ze.convertArray(u, c.times.constructor), c.values = Ze.convertArray(d, c.values.constructor), o.push(c));
        }
        r.tracks = o;
        let a = 1 / 0;
        for(let l = 0; l < r.tracks.length; ++l)a > r.tracks[l].times[0] && (a = r.tracks[l].times[0]);
        for(let l = 0; l < r.tracks.length; ++l)r.tracks[l].shift(-1 * a);
        return r.resetDuration(), r;
    },
    makeClipAdditive: function(s, e = 0, t = s, n = 30) {
        n <= 0 && (n = 30);
        let i = t.tracks.length, r = e / n;
        for(let o = 0; o < i; ++o){
            let a = t.tracks[o], l = a.ValueTypeName;
            if (l === "bool" || l === "string") continue;
            let c = s.tracks.find(function(g) {
                return g.name === a.name && g.ValueTypeName === l;
            });
            if (c === void 0) continue;
            let h = 0, u = a.getValueSize();
            a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (h = u / 3);
            let d = 0, f = c.getValueSize();
            c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (d = f / 3);
            let m = a.times.length - 1, x;
            if (r <= a.times[0]) {
                let g = h, p = u - h;
                x = Ze.arraySlice(a.values, g, p);
            } else if (r >= a.times[m]) {
                let g = m * u + h, p = g + u - h;
                x = Ze.arraySlice(a.values, g, p);
            } else {
                let g = a.createInterpolant(), p = h, _ = u - h;
                g.evaluate(r), x = Ze.arraySlice(g.resultBuffer, p, _);
            }
            l === "quaternion" && new gt().fromArray(x).normalize().conjugate().toArray(x);
            let v = c.times.length;
            for(let g = 0; g < v; ++g){
                let p = g * f + d;
                if (l === "quaternion") gt.multiplyQuaternionsFlat(c.values, p, x, 0, c.values, p);
                else {
                    let _ = f - d * 2;
                    for(let y = 0; y < _; ++y)c.values[p + y] -= x[y];
                }
            }
        }
        return s.blendMode = qc, s;
    }
}, cn = class {
    constructor(e, t, n, i){
        this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new t.constructor(n), this.sampleValues = t, this.valueSize = n, this.settings = null, this.DefaultSettings_ = {};
    }
    evaluate(e) {
        let t = this.parameterPositions, n = this._cachedIndex, i = t[n], r = t[n - 1];
        e: {
            t: {
                let o;
                n: {
                    i: if (!(e < i)) {
                        for(let a = n + 2;;){
                            if (i === void 0) {
                                if (e < r) break i;
                                return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, r);
                            }
                            if (n === a) break;
                            if (r = i, i = t[++n], e < i) break t;
                        }
                        o = t.length;
                        break n;
                    }
                    if (!(e >= r)) {
                        let a = t[1];
                        e < a && (n = 2, r = a);
                        for(let l = n - 2;;){
                            if (r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                            if (n === l) break;
                            if (i = r, r = t[--n - 1], e >= r) break t;
                        }
                        o = n, n = 0;
                        break n;
                    }
                    break e;
                }
                for(; n < o;){
                    let a = n + o >>> 1;
                    e < t[a] ? o = a : n = a + 1;
                }
                if (i = t[n], r = t[n - 1], r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                if (i === void 0) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, r, e);
            }
            this._cachedIndex = n, this.intervalChanged_(n, r, i);
        }
        return this.interpolate_(n, r, e, i);
    }
    getSettings_() {
        return this.settings || this.DefaultSettings_;
    }
    copySampleValue_(e) {
        let t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i;
        for(let o = 0; o !== i; ++o)t[o] = n[r + o];
        return t;
    }
    interpolate_() {
        throw new Error("call to abstract method");
    }
    intervalChanged_() {}
};
cn.prototype.beforeStart_ = cn.prototype.copySampleValue_;
cn.prototype.afterEnd_ = cn.prototype.copySampleValue_;
var Ph = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
        this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
            endingStart: Mi,
            endingEnd: Mi
        };
    }
    intervalChanged_(e, t, n) {
        let i = this.parameterPositions, r = e - 2, o = e + 1, a = i[r], l = i[o];
        if (a === void 0) switch(this.getSettings_().endingStart){
            case bi:
                r = e, a = 2 * t - n;
                break;
            case Os:
                r = i.length - 2, a = t + i[r] - i[r + 1];
                break;
            default:
                r = e, a = n;
        }
        if (l === void 0) switch(this.getSettings_().endingEnd){
            case bi:
                o = e, l = 2 * n - t;
                break;
            case Os:
                o = 1, l = n + i[1] - i[0];
                break;
            default:
                o = e - 1, l = t;
        }
        let c = (n - t) * .5, h = this.valueSize;
        this._weightPrev = c / (t - a), this._weightNext = c / (l - n), this._offsetPrev = r * h, this._offsetNext = o * h;
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = this._offsetPrev, u = this._offsetNext, d = this._weightPrev, f = this._weightNext, m = (n - t) / (i - t), x = m * m, v = x * m, g = -d * v + 2 * d * x - d * m, p = (1 + d) * v + (-1.5 - 2 * d) * x + (-.5 + d) * m + 1, _ = (-1 - f) * v + (1.5 + f) * x + .5 * m, y = f * v - f * x;
        for(let b = 0; b !== a; ++b)r[b] = g * o[h + b] + p * o[c + b] + _ * o[l + b] + y * o[u + b];
        return r;
    }
}, Na = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = (n - t) / (i - t), u = 1 - h;
        for(let d = 0; d !== a; ++d)r[d] = o[c + d] * u + o[l + d] * h;
        return r;
    }
}, Ih = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e) {
        return this.copySampleValue_(e - 1);
    }
}, zt = class {
    constructor(e, t, n, i){
        if (e === void 0) throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (t === void 0 || t.length === 0) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
        this.name = e, this.times = Ze.convertArray(t, this.TimeBufferType), this.values = Ze.convertArray(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
    }
    static toJSON(e) {
        let t = e.constructor, n;
        if (t.toJSON !== this.toJSON) n = t.toJSON(e);
        else {
            n = {
                name: e.name,
                times: Ze.convertArray(e.times, Array),
                values: Ze.convertArray(e.values, Array)
            };
            let i = e.getInterpolation();
            i !== e.DefaultInterpolation && (n.interpolation = i);
        }
        return n.type = e.ValueTypeName, n;
    }
    InterpolantFactoryMethodDiscrete(e) {
        return new Ih(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodLinear(e) {
        return new Na(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodSmooth(e) {
        return new Ph(this.times, this.values, this.getValueSize(), e);
    }
    setInterpolation(e) {
        let t;
        switch(e){
            case zs:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case Us:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case yo:
                t = this.InterpolantFactoryMethodSmooth;
                break;
        }
        if (t === void 0) {
            let n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
            if (this.createInterpolant === void 0) if (e !== this.DefaultInterpolation) this.setInterpolation(this.DefaultInterpolation);
            else throw new Error(n);
            return console.warn("THREE.KeyframeTrack:", n), this;
        }
        return this.createInterpolant = t, this;
    }
    getInterpolation() {
        switch(this.createInterpolant){
            case this.InterpolantFactoryMethodDiscrete:
                return zs;
            case this.InterpolantFactoryMethodLinear:
                return Us;
            case this.InterpolantFactoryMethodSmooth:
                return yo;
        }
    }
    getValueSize() {
        return this.values.length / this.times.length;
    }
    shift(e) {
        if (e !== 0) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] += e;
        }
        return this;
    }
    scale(e) {
        if (e !== 1) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] *= e;
        }
        return this;
    }
    trim(e, t) {
        let n = this.times, i = n.length, r = 0, o = i - 1;
        for(; r !== i && n[r] < e;)++r;
        for(; o !== -1 && n[o] > t;)--o;
        if (++o, r !== 0 || o !== i) {
            r >= o && (o = Math.max(o, 1), r = o - 1);
            let a = this.getValueSize();
            this.times = Ze.arraySlice(n, r, o), this.values = Ze.arraySlice(this.values, r * a, o * a);
        }
        return this;
    }
    validate() {
        let e = !0, t = this.getValueSize();
        t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
        let n = this.times, i = this.values, r = n.length;
        r === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
        let o = null;
        for(let a = 0; a !== r; a++){
            let l = n[a];
            if (typeof l == "number" && isNaN(l)) {
                console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, l), e = !1;
                break;
            }
            if (o !== null && o > l) {
                console.error("THREE.KeyframeTrack: Out of order keys.", this, a, l, o), e = !1;
                break;
            }
            o = l;
        }
        if (i !== void 0 && Ze.isTypedArray(i)) for(let a = 0, l = i.length; a !== l; ++a){
            let c = i[a];
            if (isNaN(c)) {
                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, c), e = !1;
                break;
            }
        }
        return e;
    }
    optimize() {
        let e = Ze.arraySlice(this.times), t = Ze.arraySlice(this.values), n = this.getValueSize(), i = this.getInterpolation() === yo, r = e.length - 1, o = 1;
        for(let a = 1; a < r; ++a){
            let l = !1, c = e[a], h = e[a + 1];
            if (c !== h && (a !== 1 || c !== e[0])) if (i) l = !0;
            else {
                let u = a * n, d = u - n, f = u + n;
                for(let m = 0; m !== n; ++m){
                    let x = t[u + m];
                    if (x !== t[d + m] || x !== t[f + m]) {
                        l = !0;
                        break;
                    }
                }
            }
            if (l) {
                if (a !== o) {
                    e[o] = e[a];
                    let u = a * n, d = o * n;
                    for(let f = 0; f !== n; ++f)t[d + f] = t[u + f];
                }
                ++o;
            }
        }
        if (r > 0) {
            e[o] = e[r];
            for(let a = r * n, l = o * n, c = 0; c !== n; ++c)t[l + c] = t[a + c];
            ++o;
        }
        return o !== e.length ? (this.times = Ze.arraySlice(e, 0, o), this.values = Ze.arraySlice(t, 0, o * n)) : (this.times = e, this.values = t), this;
    }
    clone() {
        let e = Ze.arraySlice(this.times, 0), t = Ze.arraySlice(this.values, 0), n = this.constructor, i = new n(this.name, e, t);
        return i.createInterpolant = this.createInterpolant, i;
    }
};
zt.prototype.TimeBufferType = Float32Array;
zt.prototype.ValueBufferType = Float32Array;
zt.prototype.DefaultInterpolation = Us;
var Qn = class extends zt {
};
Qn.prototype.ValueTypeName = "bool";
Qn.prototype.ValueBufferType = Array;
Qn.prototype.DefaultInterpolation = zs;
Qn.prototype.InterpolantFactoryMethodLinear = void 0;
Qn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Ba = class extends zt {
};
Ba.prototype.ValueTypeName = "color";
var Ar = class extends zt {
};
Ar.prototype.ValueTypeName = "number";
var Dh = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = (n - t) / (i - t), c = e * a;
        for(let h = c + a; c !== h; c += 4)gt.slerpFlat(r, 0, o, c - a, o, c, l);
        return r;
    }
}, Wi = class extends zt {
    InterpolantFactoryMethodLinear(e) {
        return new Dh(this.times, this.values, this.getValueSize(), e);
    }
};
Wi.prototype.ValueTypeName = "quaternion";
Wi.prototype.DefaultInterpolation = Us;
Wi.prototype.InterpolantFactoryMethodSmooth = void 0;
var Kn = class extends zt {
};
Kn.prototype.ValueTypeName = "string";
Kn.prototype.ValueBufferType = Array;
Kn.prototype.DefaultInterpolation = zs;
Kn.prototype.InterpolantFactoryMethodLinear = void 0;
Kn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Cr = class extends zt {
};
Cr.prototype.ValueTypeName = "vector";
var Lr = class {
    constructor(e, t = -1, n, i = ua){
        this.name = e, this.tracks = n, this.duration = t, this.blendMode = i, this.uuid = Et(), this.duration < 0 && this.resetDuration();
    }
    static parse(e) {
        let t = [], n = e.tracks, i = 1 / (e.fps || 1);
        for(let o = 0, a = n.length; o !== a; ++o)t.push(ay(n[o]).scale(i));
        let r = new this(e.name, e.duration, t, e.blendMode);
        return r.uuid = e.uuid, r;
    }
    static toJSON(e) {
        let t = [], n = e.tracks, i = {
            name: e.name,
            duration: e.duration,
            tracks: t,
            uuid: e.uuid,
            blendMode: e.blendMode
        };
        for(let r = 0, o = n.length; r !== o; ++r)t.push(zt.toJSON(n[r]));
        return i;
    }
    static CreateFromMorphTargetSequence(e, t, n, i) {
        let r = t.length, o = [];
        for(let a = 0; a < r; a++){
            let l = [], c = [];
            l.push((a + r - 1) % r, a, (a + 1) % r), c.push(0, 1, 0);
            let h = Ze.getKeyframeOrder(l);
            l = Ze.sortedArray(l, 1, h), c = Ze.sortedArray(c, 1, h), !i && l[0] === 0 && (l.push(r), c.push(c[0])), o.push(new Ar(".morphTargetInfluences[" + t[a].name + "]", l, c).scale(1 / n));
        }
        return new this(e, -1, o);
    }
    static findByName(e, t) {
        let n = e;
        if (!Array.isArray(e)) {
            let i = e;
            n = i.geometry && i.geometry.animations || i.animations;
        }
        for(let i = 0; i < n.length; i++)if (n[i].name === t) return n[i];
        return null;
    }
    static CreateClipsFromMorphTargetSequences(e, t, n) {
        let i = {}, r = /^([\w-]*?)([\d]+)$/;
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a], h = c.name.match(r);
            if (h && h.length > 1) {
                let u = h[1], d = i[u];
                d || (i[u] = d = []), d.push(c);
            }
        }
        let o = [];
        for(let a in i)o.push(this.CreateFromMorphTargetSequence(a, i[a], t, n));
        return o;
    }
    static parseAnimation(e, t) {
        if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        let n = function(u, d, f, m, x) {
            if (f.length !== 0) {
                let v = [], g = [];
                Ze.flattenJSON(f, v, g, m), v.length !== 0 && x.push(new u(d, v, g));
            }
        }, i = [], r = e.name || "default", o = e.fps || 30, a = e.blendMode, l = e.length || -1, c = e.hierarchy || [];
        for(let u = 0; u < c.length; u++){
            let d = c[u].keys;
            if (!(!d || d.length === 0)) if (d[0].morphTargets) {
                let f = {}, m;
                for(m = 0; m < d.length; m++)if (d[m].morphTargets) for(let x = 0; x < d[m].morphTargets.length; x++)f[d[m].morphTargets[x]] = -1;
                for(let x in f){
                    let v = [], g = [];
                    for(let p = 0; p !== d[m].morphTargets.length; ++p){
                        let _ = d[m];
                        v.push(_.time), g.push(_.morphTarget === x ? 1 : 0);
                    }
                    i.push(new Ar(".morphTargetInfluence[" + x + "]", v, g));
                }
                l = f.length * (o || 1);
            } else {
                let f = ".bones[" + t[u].name + "]";
                n(Cr, f + ".position", d, "pos", i), n(Wi, f + ".quaternion", d, "rot", i), n(Cr, f + ".scale", d, "scl", i);
            }
        }
        return i.length === 0 ? null : new this(r, l, i, a);
    }
    resetDuration() {
        let e = this.tracks, t = 0;
        for(let n = 0, i = e.length; n !== i; ++n){
            let r = this.tracks[n];
            t = Math.max(t, r.times[r.times.length - 1]);
        }
        return this.duration = t, this;
    }
    trim() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].trim(0, this.duration);
        return this;
    }
    validate() {
        let e = !0;
        for(let t = 0; t < this.tracks.length; t++)e = e && this.tracks[t].validate();
        return e;
    }
    optimize() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].optimize();
        return this;
    }
    clone() {
        let e = [];
        for(let t = 0; t < this.tracks.length; t++)e.push(this.tracks[t].clone());
        return new this.constructor(this.name, this.duration, e, this.blendMode);
    }
    toJSON() {
        return this.constructor.toJSON(this);
    }
};
function oy(s) {
    switch(s.toLowerCase()){
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
            return Ar;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
            return Cr;
        case "color":
            return Ba;
        case "quaternion":
            return Wi;
        case "bool":
        case "boolean":
            return Qn;
        case "string":
            return Kn;
    }
    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + s);
}
function ay(s) {
    if (s.type === void 0) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    let e = oy(s.type);
    if (s.times === void 0) {
        let t = [], n = [];
        Ze.flattenJSON(s.keys, t, n, "value"), s.times = t, s.values = n;
    }
    return e.parse !== void 0 ? e.parse(s) : new e(s.name, s.times, s.values, s.interpolation);
}
var Ni = {
    enabled: !1,
    files: {},
    add: function(s, e) {
        this.enabled !== !1 && (this.files[s] = e);
    },
    get: function(s) {
        if (this.enabled !== !1) return this.files[s];
    },
    remove: function(s) {
        delete this.files[s];
    },
    clear: function() {
        this.files = {};
    }
}, za = class {
    constructor(e, t, n){
        let i = this, r = !1, o = 0, a = 0, l, c = [];
        this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function(h) {
            a++, r === !1 && i.onStart !== void 0 && i.onStart(h, o, a), r = !0;
        }, this.itemEnd = function(h) {
            o++, i.onProgress !== void 0 && i.onProgress(h, o, a), o === a && (r = !1, i.onLoad !== void 0 && i.onLoad());
        }, this.itemError = function(h) {
            i.onError !== void 0 && i.onError(h);
        }, this.resolveURL = function(h) {
            return l ? l(h) : h;
        }, this.setURLModifier = function(h) {
            return l = h, this;
        }, this.addHandler = function(h, u) {
            return c.push(h, u), this;
        }, this.removeHandler = function(h) {
            let u = c.indexOf(h);
            return u !== -1 && c.splice(u, 2), this;
        }, this.getHandler = function(h) {
            for(let u = 0, d = c.length; u < d; u += 2){
                let f = c[u], m = c[u + 1];
                if (f.global && (f.lastIndex = 0), f.test(h)) return m;
            }
            return null;
        };
    }
}, ly = new za, bt = class {
    constructor(e){
        this.manager = e !== void 0 ? e : ly, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
    }
    load() {}
    loadAsync(e, t) {
        let n = this;
        return new Promise(function(i, r) {
            n.load(e, i, t, r);
        });
    }
    parse() {}
    setCrossOrigin(e) {
        return this.crossOrigin = e, this;
    }
    setWithCredentials(e) {
        return this.withCredentials = e, this;
    }
    setPath(e) {
        return this.path = e, this;
    }
    setResourcePath(e) {
        return this.resourcePath = e, this;
    }
    setRequestHeader(e) {
        return this.requestHeader = e, this;
    }
}, tn = {}, Yt = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = Ni.get(e);
        if (r !== void 0) return this.manager.itemStart(e), setTimeout(()=>{
            t && t(r), this.manager.itemEnd(e);
        }, 0), r;
        if (tn[e] !== void 0) {
            tn[e].push({
                onLoad: t,
                onProgress: n,
                onError: i
            });
            return;
        }
        tn[e] = [], tn[e].push({
            onLoad: t,
            onProgress: n,
            onError: i
        });
        let o = new Request(e, {
            headers: new Headers(this.requestHeader),
            credentials: this.withCredentials ? "include" : "same-origin"
        });
        fetch(o).then((a)=>{
            if (a.status === 200 || a.status === 0) {
                if (a.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || a.body.getReader === void 0) return a;
                let l = tn[e], c = a.body.getReader(), h = a.headers.get("Content-Length"), u = h ? parseInt(h) : 0, d = u !== 0, f = 0, m = new ReadableStream({
                    start (x) {
                        v();
                        function v() {
                            c.read().then(({ done: g , value: p  })=>{
                                if (g) x.close();
                                else {
                                    f += p.byteLength;
                                    let _ = new ProgressEvent("progress", {
                                        lengthComputable: d,
                                        loaded: f,
                                        total: u
                                    });
                                    for(let y = 0, b = l.length; y < b; y++){
                                        let A = l[y];
                                        A.onProgress && A.onProgress(_);
                                    }
                                    x.enqueue(p), v();
                                }
                            });
                        }
                    }
                });
                return new Response(m);
            } else throw Error(`fetch for "${a.url}" responded with ${a.status}: ${a.statusText}`);
        }).then((a)=>{
            switch(this.responseType){
                case "arraybuffer":
                    return a.arrayBuffer();
                case "blob":
                    return a.blob();
                case "document":
                    return a.text().then((l)=>new DOMParser().parseFromString(l, this.mimeType));
                case "json":
                    return a.json();
                default:
                    return a.text();
            }
        }).then((a)=>{
            Ni.add(e, a);
            let l = tn[e];
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onLoad && u.onLoad(a);
            }
        }).catch((a)=>{
            let l = tn[e];
            if (l === void 0) throw this.manager.itemError(e), a;
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onError && u.onError(a);
            }
            this.manager.itemError(e);
        }).finally(()=>{
            this.manager.itemEnd(e);
        }), this.manager.itemStart(e);
    }
    setResponseType(e) {
        return this.responseType = e, this;
    }
    setMimeType(e) {
        return this.mimeType = e, this;
    }
}, cy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = [];
        for(let n = 0; n < e.length; n++){
            let i = Lr.parse(e[n]);
            t.push(i);
        }
        return t;
    }
}, hy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = [], a = new va, l = new Yt(this.manager);
        l.setPath(this.path), l.setResponseType("arraybuffer"), l.setRequestHeader(this.requestHeader), l.setWithCredentials(r.withCredentials);
        let c = 0;
        function h(u) {
            l.load(e[u], function(d) {
                let f = r.parse(d, !0);
                o[u] = {
                    width: f.width,
                    height: f.height,
                    format: f.format,
                    mipmaps: f.mipmaps
                }, c += 1, c === 6 && (f.mipmapCount === 1 && (a.minFilter = tt), a.image = o, a.format = f.format, a.needsUpdate = !0, t && t(a));
            }, n, i);
        }
        if (Array.isArray(e)) for(let u = 0, d = e.length; u < d; ++u)h(u);
        else l.load(e, function(u) {
            let d = r.parse(u, !0);
            if (d.isCubemap) {
                let f = d.mipmaps.length / d.mipmapCount;
                for(let m = 0; m < f; m++){
                    o[m] = {
                        mipmaps: []
                    };
                    for(let x = 0; x < d.mipmapCount; x++)o[m].mipmaps.push(d.mipmaps[m * d.mipmapCount + x]), o[m].format = d.format, o[m].width = d.width, o[m].height = d.height;
                }
                a.image = o;
            } else a.image.width = d.width, a.image.height = d.height, a.mipmaps = d.mipmaps;
            d.mipmapCount === 1 && (a.minFilter = tt), a.format = d.format, a.needsUpdate = !0, t && t(a);
        }, n, i);
        return a;
    }
}, Rr = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = qs("img");
        function l() {
            h(), Ni.add(e, this), t && t(this), r.manager.itemEnd(e);
        }
        function c(u) {
            h(), i && i(u), r.manager.itemError(e), r.manager.itemEnd(e);
        }
        function h() {
            a.removeEventListener("load", l, !1), a.removeEventListener("error", c, !1);
        }
        return a.addEventListener("load", l, !1), a.addEventListener("error", c, !1), e.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (a.crossOrigin = this.crossOrigin), r.manager.itemStart(e), a.src = e, a;
    }
}, Fh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ki, o = new Rr(this.manager);
        o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
        let a = 0;
        function l(c) {
            o.load(e[c], function(h) {
                r.images[c] = h, a++, a === 6 && (r.needsUpdate = !0, t && t(r));
            }, void 0, i);
        }
        for(let c = 0; c < e.length; ++c)l(c);
        return r;
    }
}, Nh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new qn, a = new Yt(this.manager);
        return a.setResponseType("arraybuffer"), a.setRequestHeader(this.requestHeader), a.setPath(this.path), a.setWithCredentials(r.withCredentials), a.load(e, function(l) {
            let c = r.parse(l);
            !c || (c.image !== void 0 ? o.image = c.image : c.data !== void 0 && (o.image.width = c.width, o.image.height = c.height, o.image.data = c.data), o.wrapS = c.wrapS !== void 0 ? c.wrapS : vt, o.wrapT = c.wrapT !== void 0 ? c.wrapT : vt, o.magFilter = c.magFilter !== void 0 ? c.magFilter : tt, o.minFilter = c.minFilter !== void 0 ? c.minFilter : tt, o.anisotropy = c.anisotropy !== void 0 ? c.anisotropy : 1, c.encoding !== void 0 && (o.encoding = c.encoding), c.flipY !== void 0 && (o.flipY = c.flipY), c.format !== void 0 && (o.format = c.format), c.type !== void 0 && (o.type = c.type), c.mipmaps !== void 0 && (o.mipmaps = c.mipmaps, o.minFilter = Ui), c.mipmapCount === 1 && (o.minFilter = tt), c.generateMipmaps !== void 0 && (o.generateMipmaps = c.generateMipmaps), o.needsUpdate = !0, t && t(o, c));
        }, n, i), o;
    }
}, Bh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ot, o = new Rr(this.manager);
        return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function(a) {
            r.image = a, r.needsUpdate = !0, t !== void 0 && t(r);
        }, n, i), r;
    }
}, Bt = class extends Ne {
    constructor(e, t = 1){
        super();
        this.type = "Light", this.color = new ae(e), this.intensity = t;
    }
    dispose() {}
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.intensity = e.intensity, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, this.groundColor !== void 0 && (t.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (t.object.distance = this.distance), this.angle !== void 0 && (t.object.angle = this.angle), this.decay !== void 0 && (t.object.decay = this.decay), this.penumbra !== void 0 && (t.object.penumbra = this.penumbra), this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()), t;
    }
};
Bt.prototype.isLight = !0;
var Ua = class extends Bt {
    constructor(e, t, n){
        super(e, n);
        this.type = "HemisphereLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.groundColor = new ae(t);
    }
    copy(e) {
        return Bt.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this;
    }
};
Ua.prototype.isHemisphereLight = !0;
var _c = new pe, Mc = new M, bc = new M, mo = class {
    constructor(e){
        this.camera = e, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new X(512, 512), this.map = null, this.mapPass = null, this.matrix = new pe, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new Dr, this._frameExtents = new X(1, 1), this._viewportCount = 1, this._viewports = [
            new Ve(0, 0, 1, 1)
        ];
    }
    getViewportCount() {
        return this._viewportCount;
    }
    getFrustum() {
        return this._frustum;
    }
    updateMatrices(e) {
        let t = this.camera, n = this.matrix;
        Mc.setFromMatrixPosition(e.matrixWorld), t.position.copy(Mc), bc.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(bc), t.updateMatrixWorld(), _c.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(_c), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse);
    }
    getViewport(e) {
        return this._viewports[e];
    }
    getFrameExtents() {
        return this._frameExtents;
    }
    dispose() {
        this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
    }
    copy(e) {
        return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = {};
        return this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
    }
}, Oa = class extends mo {
    constructor(){
        super(new ut(50, 1, .5, 500));
        this.focus = 1;
    }
    updateMatrices(e) {
        let t = this.camera, n = dr * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, r = e.distance || t.far;
        (n !== t.fov || i !== t.aspect || r !== t.far) && (t.fov = n, t.aspect = i, t.far = r, t.updateProjectionMatrix()), super.updateMatrices(e);
    }
    copy(e) {
        return super.copy(e), this.focus = e.focus, this;
    }
};
Oa.prototype.isSpotLightShadow = !0;
var Ha = class extends Bt {
    constructor(e, t, n = 0, i = Math.PI / 3, r = 0, o = 1){
        super(e, t);
        this.type = "SpotLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.distance = n, this.angle = i, this.penumbra = r, this.decay = o, this.shadow = new Oa;
    }
    get power() {
        return this.intensity * Math.PI;
    }
    set power(e) {
        this.intensity = e / Math.PI;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Ha.prototype.isSpotLight = !0;
var wc = new pe, nr = new M, jo = new M, ka = class extends mo {
    constructor(){
        super(new ut(90, 1, .5, 500));
        this._frameExtents = new X(4, 2), this._viewportCount = 6, this._viewports = [
            new Ve(2, 1, 1, 1),
            new Ve(0, 1, 1, 1),
            new Ve(3, 1, 1, 1),
            new Ve(1, 1, 1, 1),
            new Ve(3, 0, 1, 1),
            new Ve(1, 0, 1, 1)
        ], this._cubeDirections = [
            new M(1, 0, 0),
            new M(-1, 0, 0),
            new M(0, 0, 1),
            new M(0, 0, -1),
            new M(0, 1, 0),
            new M(0, -1, 0)
        ], this._cubeUps = [
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 0, 1),
            new M(0, 0, -1)
        ];
    }
    updateMatrices(e, t = 0) {
        let n = this.camera, i = this.matrix, r = e.distance || n.far;
        r !== n.far && (n.far = r, n.updateProjectionMatrix()), nr.setFromMatrixPosition(e.matrixWorld), n.position.copy(nr), jo.copy(n.position), jo.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(jo), n.updateMatrixWorld(), i.makeTranslation(-nr.x, -nr.y, -nr.z), wc.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(wc);
    }
};
ka.prototype.isPointLightShadow = !0;
var Ga = class extends Bt {
    constructor(e, t, n = 0, i = 1){
        super(e, t);
        this.type = "PointLight", this.distance = n, this.decay = i, this.shadow = new ka;
    }
    get power() {
        return this.intensity * 4 * Math.PI;
    }
    set power(e) {
        this.intensity = e / (4 * Math.PI);
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
    }
};
Ga.prototype.isPointLight = !0;
var Va = class extends mo {
    constructor(){
        super(new Fr(-5, 5, 5, -5, .5, 500));
    }
};
Va.prototype.isDirectionalLightShadow = !0;
var Wa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "DirectionalLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.shadow = new Va;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Wa.prototype.isDirectionalLight = !0;
var qa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "AmbientLight";
    }
};
qa.prototype.isAmbientLight = !0;
var Xa = class extends Bt {
    constructor(e, t, n = 10, i = 10){
        super(e, t);
        this.type = "RectAreaLight", this.width = n, this.height = i;
    }
    get power() {
        return this.intensity * this.width * this.height * Math.PI;
    }
    set power(e) {
        this.intensity = e / (this.width * this.height * Math.PI);
    }
    copy(e) {
        return super.copy(e), this.width = e.width, this.height = e.height, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.width = this.width, t.object.height = this.height, t;
    }
};
Xa.prototype.isRectAreaLight = !0;
var Ja = class {
    constructor(){
        this.coefficients = [];
        for(let e = 0; e < 9; e++)this.coefficients.push(new M);
    }
    set(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].copy(e[t]);
        return this;
    }
    zero() {
        for(let e = 0; e < 9; e++)this.coefficients[e].set(0, 0, 0);
        return this;
    }
    getAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.282095), t.addScaledVector(o[1], .488603 * i), t.addScaledVector(o[2], .488603 * r), t.addScaledVector(o[3], .488603 * n), t.addScaledVector(o[4], 1.092548 * (n * i)), t.addScaledVector(o[5], 1.092548 * (i * r)), t.addScaledVector(o[6], .315392 * (3 * r * r - 1)), t.addScaledVector(o[7], 1.092548 * (n * r)), t.addScaledVector(o[8], .546274 * (n * n - i * i)), t;
    }
    getIrradianceAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.886227), t.addScaledVector(o[1], 2 * .511664 * i), t.addScaledVector(o[2], 2 * .511664 * r), t.addScaledVector(o[3], 2 * .511664 * n), t.addScaledVector(o[4], 2 * .429043 * n * i), t.addScaledVector(o[5], 2 * .429043 * i * r), t.addScaledVector(o[6], .743125 * r * r - .247708), t.addScaledVector(o[7], 2 * .429043 * n * r), t.addScaledVector(o[8], .429043 * (n * n - i * i)), t;
    }
    add(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].add(e.coefficients[t]);
        return this;
    }
    addScaledSH(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].addScaledVector(e.coefficients[n], t);
        return this;
    }
    scale(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].multiplyScalar(e);
        return this;
    }
    lerp(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].lerp(e.coefficients[n], t);
        return this;
    }
    equals(e) {
        for(let t = 0; t < 9; t++)if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
        return !0;
    }
    copy(e) {
        return this.set(e.coefficients);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    fromArray(e, t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].fromArray(e, t + i * 3);
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].toArray(e, t + i * 3);
        return e;
    }
    static getBasisAt(e, t) {
        let n = e.x, i = e.y, r = e.z;
        t[0] = .282095, t[1] = .488603 * i, t[2] = .488603 * r, t[3] = .488603 * n, t[4] = 1.092548 * n * i, t[5] = 1.092548 * i * r, t[6] = .315392 * (3 * r * r - 1), t[7] = 1.092548 * n * r, t[8] = .546274 * (n * n - i * i);
    }
};
Ja.prototype.isSphericalHarmonics3 = !0;
var Hr = class extends Bt {
    constructor(e = new Ja, t = 1){
        super(void 0, t);
        this.sh = e;
    }
    copy(e) {
        return super.copy(e), this.sh.copy(e.sh), this;
    }
    fromJSON(e) {
        return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.sh = this.sh.toArray(), t;
    }
};
Hr.prototype.isLightProbe = !0;
var zh = class extends bt {
    constructor(e){
        super(e);
        this.textures = {};
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = this.textures;
        function n(r) {
            return t[r] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", r), t[r];
        }
        let i = new sy[e.type];
        if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new ae().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.format !== void 0 && (i.format = e.format), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== 1 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0) for(let r in e.uniforms){
            let o = e.uniforms[r];
            switch(i.uniforms[r] = {}, o.type){
                case "t":
                    i.uniforms[r].value = n(o.value);
                    break;
                case "c":
                    i.uniforms[r].value = new ae().setHex(o.value);
                    break;
                case "v2":
                    i.uniforms[r].value = new X().fromArray(o.value);
                    break;
                case "v3":
                    i.uniforms[r].value = new M().fromArray(o.value);
                    break;
                case "v4":
                    i.uniforms[r].value = new Ve().fromArray(o.value);
                    break;
                case "m3":
                    i.uniforms[r].value = new lt().fromArray(o.value);
                    break;
                case "m4":
                    i.uniforms[r].value = new pe().fromArray(o.value);
                    break;
                default:
                    i.uniforms[r].value = o.value;
            }
        }
        if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.extensions !== void 0) for(let r in e.extensions)i.extensions[r] = e.extensions[r];
        if (e.shading !== void 0 && (i.flatShading = e.shading === 1), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = n(e.map)), e.matcap !== void 0 && (i.matcap = n(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = n(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = n(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = n(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
            let r = e.normalScale;
            Array.isArray(r) === !1 && (r = [
                r,
                r
            ]), i.normalScale = new X().fromArray(r);
        }
        return e.displacementMap !== void 0 && (i.displacementMap = n(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = n(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = n(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = n(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = n(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = n(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = n(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = n(e.envMap)), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = n(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = n(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = n(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = n(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = n(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new X().fromArray(e.clearcoatNormalScale)), e.transmissionMap !== void 0 && (i.transmissionMap = n(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = n(e.thicknessMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = n(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = n(e.sheenRoughnessMap)), i;
    }
    setTextures(e) {
        return this.textures = e, this;
    }
}, Gs = class {
    static decodeText(e) {
        if (typeof TextDecoder < "u") return new TextDecoder().decode(e);
        let t = "";
        for(let n = 0, i = e.length; n < i; n++)t += String.fromCharCode(e[n]);
        try {
            return decodeURIComponent(escape(t));
        } catch  {
            return t;
        }
    }
    static extractUrlBase(e) {
        let t = e.lastIndexOf("/");
        return t === -1 ? "./" : e.substr(0, t + 1);
    }
    static resolveURL(e, t) {
        return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(t) && /^\//.test(e) && (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : t + e);
    }
}, Ya = class extends _e {
    constructor(){
        super();
        this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
    }
    copy(e) {
        return super.copy(e), this.instanceCount = e.instanceCount, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = super.toJSON(this);
        return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
    }
};
Ya.prototype.isInstancedBufferGeometry = !0;
var Uh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = {}, n = {};
        function i(f, m) {
            if (t[m] !== void 0) return t[m];
            let v = f.interleavedBuffers[m], g = r(f, v.buffer), p = wi(v.type, g), _ = new $n(p, v.stride);
            return _.uuid = v.uuid, t[m] = _, _;
        }
        function r(f, m) {
            if (n[m] !== void 0) return n[m];
            let v = f.arrayBuffers[m], g = new Uint32Array(v).buffer;
            return n[m] = g, g;
        }
        let o = e.isInstancedBufferGeometry ? new Ya : new _e, a = e.data.index;
        if (a !== void 0) {
            let f = wi(a.type, a.array);
            o.setIndex(new Ue(f, 1));
        }
        let l = e.data.attributes;
        for(let f in l){
            let m = l[f], x;
            if (m.isInterleavedBufferAttribute) {
                let v = i(e.data, m.data);
                x = new Sn(v, m.itemSize, m.offset, m.normalized);
            } else {
                let v = wi(m.type, m.array), g = m.isInstancedBufferAttribute ? Xn : Ue;
                x = new g(v, m.itemSize, m.normalized);
            }
            m.name !== void 0 && (x.name = m.name), m.usage !== void 0 && x.setUsage(m.usage), m.updateRange !== void 0 && (x.updateRange.offset = m.updateRange.offset, x.updateRange.count = m.updateRange.count), o.setAttribute(f, x);
        }
        let c = e.data.morphAttributes;
        if (c) for(let f in c){
            let m = c[f], x = [];
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v], _;
                if (p.isInterleavedBufferAttribute) {
                    let y = i(e.data, p.data);
                    _ = new Sn(y, p.itemSize, p.offset, p.normalized);
                } else {
                    let y = wi(p.type, p.array);
                    _ = new Ue(y, p.itemSize, p.normalized);
                }
                p.name !== void 0 && (_.name = p.name), x.push(_);
            }
            o.morphAttributes[f] = x;
        }
        e.data.morphTargetsRelative && (o.morphTargetsRelative = !0);
        let u = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (u !== void 0) for(let f = 0, m = u.length; f !== m; ++f){
            let x = u[f];
            o.addGroup(x.start, x.count, x.materialIndex);
        }
        let d = e.data.boundingSphere;
        if (d !== void 0) {
            let f = new M;
            d.center !== void 0 && f.fromArray(d.center), o.boundingSphere = new An(f, d.radius);
        }
        return e.name && (o.name = e.name), e.userData && (o.userData = e.userData), o;
    }
}, uy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || o;
        let a = new Yt(this.manager);
        a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(l) {
            let c = null;
            try {
                c = JSON.parse(l);
            } catch (u) {
                i !== void 0 && i(u), console.error("THREE:ObjectLoader: Can't parse " + e + ".", u.message);
                return;
            }
            let h = c.metadata;
            if (h === void 0 || h.type === void 0 || h.type.toLowerCase() === "geometry") {
                console.error("THREE.ObjectLoader: Can't load " + e);
                return;
            }
            r.parse(c, t);
        }, n, i);
    }
    async loadAsync(e, t) {
        let n = this, i = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || i;
        let r = new Yt(this.manager);
        r.setPath(this.path), r.setRequestHeader(this.requestHeader), r.setWithCredentials(this.withCredentials);
        let o = await r.loadAsync(e, t), a = JSON.parse(o), l = a.metadata;
        if (l === void 0 || l.type === void 0 || l.type.toLowerCase() === "geometry") throw new Error("THREE.ObjectLoader: Can't load " + e);
        return await n.parseAsync(a);
    }
    parse(e, t) {
        let n = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), r = this.parseGeometries(e.geometries, i), o = this.parseImages(e.images, function() {
            t !== void 0 && t(c);
        }), a = this.parseTextures(e.textures, o), l = this.parseMaterials(e.materials, a), c = this.parseObject(e.object, r, l, a, n), h = this.parseSkeletons(e.skeletons, c);
        if (this.bindSkeletons(c, h), t !== void 0) {
            let u = !1;
            for(let d in o)if (o[d] instanceof HTMLImageElement) {
                u = !0;
                break;
            }
            u === !1 && t(c);
        }
        return c;
    }
    async parseAsync(e) {
        let t = this.parseAnimations(e.animations), n = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, n), r = await this.parseImagesAsync(e.images), o = this.parseTextures(e.textures, r), a = this.parseMaterials(e.materials, o), l = this.parseObject(e.object, i, a, o, t), c = this.parseSkeletons(e.skeletons, l);
        return this.bindSkeletons(l, c), l;
    }
    parseShapes(e) {
        let t = {};
        if (e !== void 0) for(let n = 0, i = e.length; n < i; n++){
            let r = new Xt().fromJSON(e[n]);
            t[r.uuid] = r;
        }
        return t;
    }
    parseSkeletons(e, t) {
        let n = {}, i = {};
        if (t.traverse(function(r) {
            r.isBone && (i[r.uuid] = r);
        }), e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = new ao().fromJSON(e[r], i);
            n[a.uuid] = a;
        }
        return n;
    }
    parseGeometries(e, t) {
        let n = {};
        if (e !== void 0) {
            let i = new Uh;
            for(let r = 0, o = e.length; r < o; r++){
                let a, l = e[r];
                switch(l.type){
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        a = i.parse(l);
                        break;
                    case "Geometry":
                        console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");
                        break;
                    default:
                        l.type in vc ? a = vc[l.type].fromJSON(l, t) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`);
                }
                a.uuid = l.uuid, l.name !== void 0 && (a.name = l.name), a.isBufferGeometry === !0 && l.userData !== void 0 && (a.userData = l.userData), n[l.uuid] = a;
            }
        }
        return n;
    }
    parseMaterials(e, t) {
        let n = {}, i = {};
        if (e !== void 0) {
            let r = new zh;
            r.setTextures(t);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o];
                if (l.type === "MultiMaterial") {
                    let c = [];
                    for(let h = 0; h < l.materials.length; h++){
                        let u = l.materials[h];
                        n[u.uuid] === void 0 && (n[u.uuid] = r.parse(u)), c.push(n[u.uuid]);
                    }
                    i[l.uuid] = c;
                } else n[l.uuid] === void 0 && (n[l.uuid] = r.parse(l)), i[l.uuid] = n[l.uuid];
            }
        }
        return i;
    }
    parseAnimations(e) {
        let t = {};
        if (e !== void 0) for(let n = 0; n < e.length; n++){
            let i = e[n], r = Lr.parse(i);
            t[r.uuid] = r;
        }
        return t;
    }
    parseImages(e, t) {
        let n = this, i = {}, r;
        function o(l) {
            return n.manager.itemStart(l), r.load(l, function() {
                n.manager.itemEnd(l);
            }, void 0, function() {
                n.manager.itemError(l), n.manager.itemEnd(l);
            });
        }
        function a(l) {
            if (typeof l == "string") {
                let c = l, h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c) ? c : n.resourcePath + c;
                return o(h);
            } else return l.data ? {
                data: wi(l.type, l.data),
                width: l.width,
                height: l.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            let l = new za(t);
            r = new Rr(l), r.setCrossOrigin(this.crossOrigin);
            for(let c = 0, h = e.length; c < h; c++){
                let u = e[c], d = u.url;
                if (Array.isArray(d)) {
                    i[u.uuid] = [];
                    for(let f = 0, m = d.length; f < m; f++){
                        let x = d[f], v = a(x);
                        v !== null && (v instanceof HTMLImageElement ? i[u.uuid].push(v) : i[u.uuid].push(new qn(v.data, v.width, v.height)));
                    }
                } else {
                    let f = a(u.url);
                    f !== null && (i[u.uuid] = f);
                }
            }
        }
        return i;
    }
    async parseImagesAsync(e) {
        let t = this, n = {}, i;
        async function r(o) {
            if (typeof o == "string") {
                let a = o, l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a) ? a : t.resourcePath + a;
                return await i.loadAsync(l);
            } else return o.data ? {
                data: wi(o.type, o.data),
                width: o.width,
                height: o.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            i = new Rr(this.manager), i.setCrossOrigin(this.crossOrigin);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o], c = l.url;
                if (Array.isArray(c)) {
                    n[l.uuid] = [];
                    for(let h = 0, u = c.length; h < u; h++){
                        let d = c[h], f = await r(d);
                        f !== null && (f instanceof HTMLImageElement ? n[l.uuid].push(f) : n[l.uuid].push(new qn(f.data, f.width, f.height)));
                    }
                } else {
                    let h = await r(l.url);
                    h !== null && (n[l.uuid] = h);
                }
            }
        }
        return n;
    }
    parseTextures(e, t) {
        function n(r, o) {
            return typeof r == "number" ? r : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", r), o[r]);
        }
        let i = {};
        if (e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = e[r];
            a.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), t[a.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", a.image);
            let l, c = t[a.image];
            Array.isArray(c) ? (l = new ki(c), c.length === 6 && (l.needsUpdate = !0)) : (c && c.data ? l = new qn(c.data, c.width, c.height) : l = new ot(c), c && (l.needsUpdate = !0)), l.uuid = a.uuid, a.name !== void 0 && (l.name = a.name), a.mapping !== void 0 && (l.mapping = n(a.mapping, dy)), a.offset !== void 0 && l.offset.fromArray(a.offset), a.repeat !== void 0 && l.repeat.fromArray(a.repeat), a.center !== void 0 && l.center.fromArray(a.center), a.rotation !== void 0 && (l.rotation = a.rotation), a.wrap !== void 0 && (l.wrapS = n(a.wrap[0], Sc), l.wrapT = n(a.wrap[1], Sc)), a.format !== void 0 && (l.format = a.format), a.type !== void 0 && (l.type = a.type), a.encoding !== void 0 && (l.encoding = a.encoding), a.minFilter !== void 0 && (l.minFilter = n(a.minFilter, Tc)), a.magFilter !== void 0 && (l.magFilter = n(a.magFilter, Tc)), a.anisotropy !== void 0 && (l.anisotropy = a.anisotropy), a.flipY !== void 0 && (l.flipY = a.flipY), a.premultiplyAlpha !== void 0 && (l.premultiplyAlpha = a.premultiplyAlpha), a.unpackAlignment !== void 0 && (l.unpackAlignment = a.unpackAlignment), a.userData !== void 0 && (l.userData = a.userData), i[a.uuid] = l;
        }
        return i;
    }
    parseObject(e, t, n, i, r) {
        let o;
        function a(d) {
            return t[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", d), t[d];
        }
        function l(d) {
            if (d !== void 0) {
                if (Array.isArray(d)) {
                    let f = [];
                    for(let m = 0, x = d.length; m < x; m++){
                        let v = d[m];
                        n[v] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", v), f.push(n[v]);
                    }
                    return f;
                }
                return n[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", d), n[d];
            }
        }
        function c(d) {
            return i[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", d), i[d];
        }
        let h, u;
        switch(e.type){
            case "Scene":
                o = new no, e.background !== void 0 && (Number.isInteger(e.background) ? o.background = new ae(e.background) : o.background = c(e.background)), e.environment !== void 0 && (o.environment = c(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? o.fog = new Br(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (o.fog = new Nr(e.fog.color, e.fog.density)));
                break;
            case "PerspectiveCamera":
                o = new ut(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (o.focus = e.focus), e.zoom !== void 0 && (o.zoom = e.zoom), e.filmGauge !== void 0 && (o.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (o.filmOffset = e.filmOffset), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "OrthographicCamera":
                o = new Fr(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (o.zoom = e.zoom), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "AmbientLight":
                o = new qa(e.color, e.intensity);
                break;
            case "DirectionalLight":
                o = new Wa(e.color, e.intensity);
                break;
            case "PointLight":
                o = new Ga(e.color, e.intensity, e.distance, e.decay);
                break;
            case "RectAreaLight":
                o = new Xa(e.color, e.intensity, e.width, e.height);
                break;
            case "SpotLight":
                o = new Ha(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                break;
            case "HemisphereLight":
                o = new Ua(e.color, e.groundColor, e.intensity);
                break;
            case "LightProbe":
                o = new Hr().fromJSON(e);
                break;
            case "SkinnedMesh":
                h = a(e.geometry), u = l(e.material), o = new so(h, u), e.bindMode !== void 0 && (o.bindMode = e.bindMode), e.bindMatrix !== void 0 && o.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (o.skeleton = e.skeleton);
                break;
            case "Mesh":
                h = a(e.geometry), u = l(e.material), o = new st(h, u);
                break;
            case "InstancedMesh":
                h = a(e.geometry), u = l(e.material);
                let d = e.count, f = e.instanceMatrix, m = e.instanceColor;
                o = new xa(h, u, d), o.instanceMatrix = new Xn(new Float32Array(f.array), 16), m !== void 0 && (o.instanceColor = new Xn(new Float32Array(m.array), m.itemSize));
                break;
            case "LOD":
                o = new bh;
                break;
            case "Line":
                o = new on(a(e.geometry), l(e.material));
                break;
            case "LineLoop":
                o = new ya(a(e.geometry), l(e.material));
                break;
            case "LineSegments":
                o = new wt(a(e.geometry), l(e.material));
                break;
            case "PointCloud":
            case "Points":
                o = new zr(a(e.geometry), l(e.material));
                break;
            case "Sprite":
                o = new ro(l(e.material));
                break;
            case "Group":
                o = new Hn;
                break;
            case "Bone":
                o = new oo;
                break;
            default:
                o = new Ne;
        }
        if (o.uuid = e.uuid, e.name !== void 0 && (o.name = e.name), e.matrix !== void 0 ? (o.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (o.matrixAutoUpdate = e.matrixAutoUpdate), o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (e.position !== void 0 && o.position.fromArray(e.position), e.rotation !== void 0 && o.rotation.fromArray(e.rotation), e.quaternion !== void 0 && o.quaternion.fromArray(e.quaternion), e.scale !== void 0 && o.scale.fromArray(e.scale)), e.castShadow !== void 0 && (o.castShadow = e.castShadow), e.receiveShadow !== void 0 && (o.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.bias !== void 0 && (o.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (o.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (o.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && o.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (o.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (o.visible = e.visible), e.frustumCulled !== void 0 && (o.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (o.renderOrder = e.renderOrder), e.userData !== void 0 && (o.userData = e.userData), e.layers !== void 0 && (o.layers.mask = e.layers), e.children !== void 0) {
            let d = e.children;
            for(let f = 0; f < d.length; f++)o.add(this.parseObject(d[f], t, n, i, r));
        }
        if (e.animations !== void 0) {
            let d = e.animations;
            for(let f = 0; f < d.length; f++){
                let m = d[f];
                o.animations.push(r[m]);
            }
        }
        if (e.type === "LOD") {
            e.autoUpdate !== void 0 && (o.autoUpdate = e.autoUpdate);
            let d = e.levels;
            for(let f = 0; f < d.length; f++){
                let m = d[f], x = o.getObjectByProperty("uuid", m.object);
                x !== void 0 && o.addLevel(x, m.distance);
            }
        }
        return o;
    }
    bindSkeletons(e, t) {
        Object.keys(t).length !== 0 && e.traverse(function(n) {
            if (n.isSkinnedMesh === !0 && n.skeleton !== void 0) {
                let i = t[n.skeleton];
                i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", n.skeleton) : n.bind(i, n.bindMatrix);
            }
        });
    }
    setTexturePath(e) {
        return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e);
    }
}, dy = {
    UVMapping: ha,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws
}, Sc = {
    RepeatWrapping: Ns,
    ClampToEdgeWrapping: vt,
    MirroredRepeatWrapping: Bs
}, Tc = {
    NearestFilter: rt,
    NearestMipmapNearestFilter: ta,
    NearestMipmapLinearFilter: na,
    LinearFilter: tt,
    LinearMipmapNearestFilter: Wc,
    LinearMipmapLinearFilter: Ui
}, Oh = class extends bt {
    constructor(e){
        super(e);
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = {
            premultiplyAlpha: "none"
        };
    }
    setOptions(e) {
        return this.options = e, this;
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = {};
        a.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", a.headers = this.requestHeader, fetch(e, a).then(function(l) {
            return l.blob();
        }).then(function(l) {
            return createImageBitmap(l, Object.assign(r.options, {
                colorSpaceConversion: "none"
            }));
        }).then(function(l) {
            Ni.add(e, l), t && t(l), r.manager.itemEnd(e);
        }).catch(function(l) {
            i && i(l), r.manager.itemError(e), r.manager.itemEnd(e);
        }), r.manager.itemStart(e);
    }
};
Oh.prototype.isImageBitmapLoader = !0;
var Ss, Hh = {
    getContext: function() {
        return Ss === void 0 && (Ss = new (window.AudioContext || window.webkitAudioContext)), Ss;
    },
    setContext: function(s) {
        Ss = s;
    }
}, kh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setResponseType("arraybuffer"), o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                let l = a.slice(0);
                Hh.getContext().decodeAudioData(l, function(h) {
                    t(h);
                });
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
}, Gh = class extends Hr {
    constructor(e, t, n = 1){
        super(void 0, n);
        let i = new ae().set(e), r = new ae().set(t), o = new M(i.r, i.g, i.b), a = new M(r.r, r.g, r.b), l = Math.sqrt(Math.PI), c = l * Math.sqrt(.75);
        this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l), this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c);
    }
};
Gh.prototype.isHemisphereLightProbe = !0;
var Vh = class extends Hr {
    constructor(e, t = 1){
        super(void 0, t);
        let n = new ae().set(e);
        this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI));
    }
};
Vh.prototype.isAmbientLightProbe = !0;
var Ec = new pe, Ac = new pe, Fn = new pe, fy = class {
    constructor(){
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new ut, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new ut, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
            focus: null,
            fov: null,
            aspect: null,
            near: null,
            far: null,
            zoom: null,
            eyeSep: null
        };
    }
    update(e) {
        let t = this._cache;
        if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
            t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep, Fn.copy(e.projectionMatrix);
            let i = t.eyeSep / 2, r = i * t.near / t.focus, o = t.near * Math.tan(Wn * t.fov * .5) / t.zoom, a, l;
            Ac.elements[12] = -i, Ec.elements[12] = i, a = -o * t.aspect + r, l = o * t.aspect + r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraL.projectionMatrix.copy(Fn), a = -o * t.aspect - r, l = o * t.aspect - r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraR.projectionMatrix.copy(Fn);
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Ac), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ec);
    }
}, Wh = class {
    constructor(e = !0){
        this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
    }
    start() {
        this.startTime = Cc(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
    }
    stop() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
    }
    getElapsedTime() {
        return this.getDelta(), this.elapsedTime;
    }
    getDelta() {
        let e = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running) {
            let t = Cc();
            e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
        }
        return e;
    }
};
function Cc() {
    return (typeof performance > "u" ? Date : performance).now();
}
var Nn = new M, Lc = new gt, py = new M, Bn = new M, my = class extends Ne {
    constructor(){
        super();
        this.type = "AudioListener", this.context = Hh.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new Wh;
    }
    getInput() {
        return this.gain;
    }
    removeFilter() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
    }
    getFilter() {
        return this.filter;
    }
    setFilter(e) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
    }
    getMasterVolume() {
        return this.gain.gain.value;
    }
    setMasterVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e);
        let t = this.context.listener, n = this.up;
        if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Nn, Lc, py), Bn.set(0, 0, -1).applyQuaternion(Lc), t.positionX) {
            let i = this.context.currentTime + this.timeDelta;
            t.positionX.linearRampToValueAtTime(Nn.x, i), t.positionY.linearRampToValueAtTime(Nn.y, i), t.positionZ.linearRampToValueAtTime(Nn.z, i), t.forwardX.linearRampToValueAtTime(Bn.x, i), t.forwardY.linearRampToValueAtTime(Bn.y, i), t.forwardZ.linearRampToValueAtTime(Bn.z, i), t.upX.linearRampToValueAtTime(n.x, i), t.upY.linearRampToValueAtTime(n.y, i), t.upZ.linearRampToValueAtTime(n.z, i);
        } else t.setPosition(Nn.x, Nn.y, Nn.z), t.setOrientation(Bn.x, Bn.y, Bn.z, n.x, n.y, n.z);
    }
}, Za = class extends Ne {
    constructor(e){
        super();
        this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
    }
    getOutput() {
        return this.gain;
    }
    setNodeSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
    }
    setMediaElementSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
    }
    setMediaStreamSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
    }
    setBuffer(e) {
        return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
    }
    play(e = 0) {
        if (this.isPlaying === !0) {
            console.warn("THREE.Audio: Audio is already playing.");
            return;
        }
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this._startedAt = this.context.currentTime + e;
        let t = this.context.createBufferSource();
        return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
    }
    pause() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
    }
    stop() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
    }
    connect() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
        } else this.source.connect(this.getOutput());
        return this._connected = !0, this;
    }
    disconnect() {
        if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else this.source.disconnect(this.getOutput());
        return this._connected = !1, this;
    }
    getFilters() {
        return this.filters;
    }
    setFilters(e) {
        return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
    }
    setDetune(e) {
        if (this.detune = e, this.source.detune !== void 0) return this.isPlaying === !0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;
    }
    getDetune() {
        return this.detune;
    }
    getFilter() {
        return this.getFilters()[0];
    }
    setFilter(e) {
        return this.setFilters(e ? [
            e
        ] : []);
    }
    setPlaybackRate(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
    }
    getPlaybackRate() {
        return this.playbackRate;
    }
    onEnded() {
        this.isPlaying = !1;
    }
    getLoop() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
    }
    setLoop(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
    }
    setLoopStart(e) {
        return this.loopStart = e, this;
    }
    setLoopEnd(e) {
        return this.loopEnd = e, this;
    }
    getVolume() {
        return this.gain.gain.value;
    }
    setVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
}, zn = new M, Rc = new gt, gy = new M, Un = new M, xy = class extends Za {
    constructor(e){
        super(e);
        this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
    }
    getOutput() {
        return this.panner;
    }
    getRefDistance() {
        return this.panner.refDistance;
    }
    setRefDistance(e) {
        return this.panner.refDistance = e, this;
    }
    getRolloffFactor() {
        return this.panner.rolloffFactor;
    }
    setRolloffFactor(e) {
        return this.panner.rolloffFactor = e, this;
    }
    getDistanceModel() {
        return this.panner.distanceModel;
    }
    setDistanceModel(e) {
        return this.panner.distanceModel = e, this;
    }
    getMaxDistance() {
        return this.panner.maxDistance;
    }
    setMaxDistance(e) {
        return this.panner.maxDistance = e, this;
    }
    setDirectionalCone(e, t, n) {
        return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this;
    }
    updateMatrixWorld(e) {
        if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1) return;
        this.matrixWorld.decompose(zn, Rc, gy), Un.set(0, 0, 1).applyQuaternion(Rc);
        let t = this.panner;
        if (t.positionX) {
            let n = this.context.currentTime + this.listener.timeDelta;
            t.positionX.linearRampToValueAtTime(zn.x, n), t.positionY.linearRampToValueAtTime(zn.y, n), t.positionZ.linearRampToValueAtTime(zn.z, n), t.orientationX.linearRampToValueAtTime(Un.x, n), t.orientationY.linearRampToValueAtTime(Un.y, n), t.orientationZ.linearRampToValueAtTime(Un.z, n);
        } else t.setPosition(zn.x, zn.y, zn.z), t.setOrientation(Un.x, Un.y, Un.z);
    }
}, qh = class {
    constructor(e, t = 2048){
        this.analyser = e.context.createAnalyser(), this.analyser.fftSize = t, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
    }
    getFrequencyData() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
    }
    getAverageFrequency() {
        let e = 0, t = this.getFrequencyData();
        for(let n = 0; n < t.length; n++)e += t[n];
        return e / t.length;
    }
}, Xh = class {
    constructor(e, t, n){
        this.binding = e, this.valueSize = n;
        let i, r, o;
        switch(t){
            case "quaternion":
                i = this._slerp, r = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(n * 6), this._workIndex = 5;
                break;
            case "string":
            case "bool":
                i = this._select, r = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(n * 5);
                break;
            default:
                i = this._lerp, r = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(n * 5);
        }
        this._mixBufferRegion = i, this._mixBufferRegionAdditive = r, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
    }
    accumulate(e, t) {
        let n = this.buffer, i = this.valueSize, r = e * i + i, o = this.cumulativeWeight;
        if (o === 0) {
            for(let a = 0; a !== i; ++a)n[r + a] = n[a];
            o = t;
        } else {
            o += t;
            let a = t / o;
            this._mixBufferRegion(n, r, 0, a, i);
        }
        this.cumulativeWeight = o;
    }
    accumulateAdditive(e) {
        let t = this.buffer, n = this.valueSize, i = n * this._addIndex;
        this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(t, i, 0, e, n), this.cumulativeWeightAdditive += e;
    }
    apply(e) {
        let t = this.valueSize, n = this.buffer, i = e * t + t, r = this.cumulativeWeight, o = this.cumulativeWeightAdditive, a = this.binding;
        if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, r < 1) {
            let l = t * this._origIndex;
            this._mixBufferRegion(n, i, l, 1 - r, t);
        }
        o > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
        for(let l = t, c = t + t; l !== c; ++l)if (n[l] !== n[l + t]) {
            a.setValue(n, i);
            break;
        }
    }
    saveOriginalState() {
        let e = this.binding, t = this.buffer, n = this.valueSize, i = n * this._origIndex;
        e.getValue(t, i);
        for(let r = n, o = i; r !== o; ++r)t[r] = t[i + r % n];
        this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
    }
    restoreOriginalState() {
        let e = this.valueSize * 3;
        this.binding.setValue(this.buffer, e);
    }
    _setAdditiveIdentityNumeric() {
        let e = this._addIndex * this.valueSize, t = e + this.valueSize;
        for(let n = e; n < t; n++)this.buffer[n] = 0;
    }
    _setAdditiveIdentityQuaternion() {
        this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
    }
    _setAdditiveIdentityOther() {
        let e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize;
        for(let n = 0; n < this.valueSize; n++)this.buffer[t + n] = this.buffer[e + n];
    }
    _select(e, t, n, i, r) {
        if (i >= .5) for(let o = 0; o !== r; ++o)e[t + o] = e[n + o];
    }
    _slerp(e, t, n, i) {
        gt.slerpFlat(e, t, e, t, e, n, i);
    }
    _slerpAdditive(e, t, n, i, r) {
        let o = this._workIndex * r;
        gt.multiplyQuaternionsFlat(e, o, e, t, e, n), gt.slerpFlat(e, t, e, t, e, o, i);
    }
    _lerp(e, t, n, i, r) {
        let o = 1 - i;
        for(let a = 0; a !== r; ++a){
            let l = t + a;
            e[l] = e[l] * o + e[n + a] * i;
        }
    }
    _lerpAdditive(e, t, n, i, r) {
        for(let o = 0; o !== r; ++o){
            let a = t + o;
            e[a] = e[a] + e[n + o] * i;
        }
    }
}, $a = "\\[\\]\\.:\\/", yy = new RegExp("[" + $a + "]", "g"), ja = "[^" + $a + "]", vy = "[^" + $a.replace("\\.", "") + "]", _y = /((?:WC+[\/:])*)/.source.replace("WC", ja), My = /(WCOD+)?/.source.replace("WCOD", vy), by = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", ja), wy = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", ja), Sy = new RegExp("^" + _y + My + by + wy + "$"), Ty = [
    "material",
    "materials",
    "bones"
], Jh = class {
    constructor(e, t, n){
        let i = n || ke.parseTrackName(t);
        this._targetGroup = e, this._bindings = e.subscribe_(t, i);
    }
    getValue(e, t) {
        this.bind();
        let n = this._targetGroup.nCachedObjects_, i = this._bindings[n];
        i !== void 0 && i.getValue(e, t);
    }
    setValue(e, t) {
        let n = this._bindings;
        for(let i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)n[i].setValue(e, t);
    }
    bind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].bind();
    }
    unbind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].unbind();
    }
}, ke = class {
    constructor(e, t, n){
        this.path = t, this.parsedPath = n || ke.parseTrackName(t), this.node = ke.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
    static create(e, t, n) {
        return e && e.isAnimationObjectGroup ? new ke.Composite(e, t, n) : new ke(e, t, n);
    }
    static sanitizeNodeName(e) {
        return e.replace(/\s/g, "_").replace(yy, "");
    }
    static parseTrackName(e) {
        let t = Sy.exec(e);
        if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
        let n = {
            nodeName: t[2],
            objectName: t[3],
            objectIndex: t[4],
            propertyName: t[5],
            propertyIndex: t[6]
        }, i = n.nodeName && n.nodeName.lastIndexOf(".");
        if (i !== void 0 && i !== -1) {
            let r = n.nodeName.substring(i + 1);
            Ty.indexOf(r) !== -1 && (n.nodeName = n.nodeName.substring(0, i), n.objectName = r);
        }
        if (n.propertyName === null || n.propertyName.length === 0) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
        return n;
    }
    static findNode(e, t) {
        if (!t || t === "" || t === "." || t === -1 || t === e.name || t === e.uuid) return e;
        if (e.skeleton) {
            let n = e.skeleton.getBoneByName(t);
            if (n !== void 0) return n;
        }
        if (e.children) {
            let n = function(r) {
                for(let o = 0; o < r.length; o++){
                    let a = r[o];
                    if (a.name === t || a.uuid === t) return a;
                    let l = n(a.children);
                    if (l) return l;
                }
                return null;
            }, i = n(e.children);
            if (i) return i;
        }
        return null;
    }
    _getValue_unavailable() {}
    _setValue_unavailable() {}
    _getValue_direct(e, t) {
        e[t] = this.targetObject[this.propertyName];
    }
    _getValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)e[t++] = n[i];
    }
    _getValue_arrayElement(e, t) {
        e[t] = this.resolvedProperty[this.propertyIndex];
    }
    _getValue_toArray(e, t) {
        this.resolvedProperty.toArray(e, t);
    }
    _setValue_direct(e, t) {
        this.targetObject[this.propertyName] = e[t];
    }
    _setValue_direct_setNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
    }
    _setValue_array_setNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.needsUpdate = !0;
    }
    _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_arrayElement(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t];
    }
    _setValue_arrayElement_setNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_fromArray(e, t) {
        this.resolvedProperty.fromArray(e, t);
    }
    _setValue_fromArray_setNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0;
    }
    _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _getValue_unbound(e, t) {
        this.bind(), this.getValue(e, t);
    }
    _setValue_unbound(e, t) {
        this.bind(), this.setValue(e, t);
    }
    bind() {
        let e = this.node, t = this.parsedPath, n = t.objectName, i = t.propertyName, r = t.propertyIndex;
        if (e || (e = ke.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
            console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
            return;
        }
        if (n) {
            let c = t.objectIndex;
            switch(n){
                case "materials":
                    if (!e.material) {
                        console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        return;
                    }
                    if (!e.material.materials) {
                        console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        return;
                    }
                    e = e.material.materials;
                    break;
                case "bones":
                    if (!e.skeleton) {
                        console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        return;
                    }
                    e = e.skeleton.bones;
                    for(let h = 0; h < e.length; h++)if (e[h].name === c) {
                        c = h;
                        break;
                    }
                    break;
                default:
                    if (e[n] === void 0) {
                        console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        return;
                    }
                    e = e[n];
            }
            if (c !== void 0) {
                if (e[c] === void 0) {
                    console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                    return;
                }
                e = e[c];
            }
        }
        let o = e[i];
        if (o === void 0) {
            let c = t.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + c + "." + i + " but it wasn't found.", e);
            return;
        }
        let a = this.Versioning.None;
        this.targetObject = e, e.needsUpdate !== void 0 ? a = this.Versioning.NeedsUpdate : e.matrixWorldNeedsUpdate !== void 0 && (a = this.Versioning.MatrixWorldNeedsUpdate);
        let l = this.BindingType.Direct;
        if (r !== void 0) {
            if (i === "morphTargetInfluences") {
                if (!e.geometry) {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                    return;
                }
                if (e.geometry.isBufferGeometry) {
                    if (!e.geometry.morphAttributes) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        return;
                    }
                    e.morphTargetDictionary[r] !== void 0 && (r = e.morphTargetDictionary[r]);
                } else {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                    return;
                }
            }
            l = this.BindingType.ArrayElement, this.resolvedProperty = o, this.propertyIndex = r;
        } else o.fromArray !== void 0 && o.toArray !== void 0 ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray, this.resolvedProperty = o) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][a];
    }
    unbind() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
};
ke.Composite = Jh;
ke.prototype.BindingType = {
    Direct: 0,
    EntireArray: 1,
    ArrayElement: 2,
    HasFromToArray: 3
};
ke.prototype.Versioning = {
    None: 0,
    NeedsUpdate: 1,
    MatrixWorldNeedsUpdate: 2
};
ke.prototype.GetterByBindingType = [
    ke.prototype._getValue_direct,
    ke.prototype._getValue_array,
    ke.prototype._getValue_arrayElement,
    ke.prototype._getValue_toArray
];
ke.prototype.SetterByBindingTypeAndVersioning = [
    [
        ke.prototype._setValue_direct,
        ke.prototype._setValue_direct_setNeedsUpdate,
        ke.prototype._setValue_direct_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_array,
        ke.prototype._setValue_array_setNeedsUpdate,
        ke.prototype._setValue_array_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_arrayElement,
        ke.prototype._setValue_arrayElement_setNeedsUpdate,
        ke.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_fromArray,
        ke.prototype._setValue_fromArray_setNeedsUpdate,
        ke.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
    ]
];
var Yh = class {
    constructor(){
        this.uuid = Et(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        let e = {};
        this._indicesByUUID = e;
        for(let n = 0, i = arguments.length; n !== i; ++n)e[arguments[n].uuid] = n;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        let t = this;
        this.stats = {
            objects: {
                get total () {
                    return t._objects.length;
                },
                get inUse () {
                    return this.total - t.nCachedObjects_;
                }
            },
            get bindingsPerObject () {
                return t._bindings.length;
            }
        };
    }
    add() {
        let e = this._objects, t = this._indicesByUUID, n = this._paths, i = this._parsedPaths, r = this._bindings, o = r.length, a, l = e.length, c = this.nCachedObjects_;
        for(let h = 0, u = arguments.length; h !== u; ++h){
            let d = arguments[h], f = d.uuid, m = t[f];
            if (m === void 0) {
                m = l++, t[f] = m, e.push(d);
                for(let x = 0, v = o; x !== v; ++x)r[x].push(new ke(d, n[x], i[x]));
            } else if (m < c) {
                a = e[m];
                let x = --c, v = e[x];
                t[v.uuid] = m, e[m] = v, t[f] = x, e[x] = d;
                for(let g = 0, p = o; g !== p; ++g){
                    let _ = r[g], y = _[x], b = _[m];
                    _[m] = y, b === void 0 && (b = new ke(d, n[g], i[g])), _[x] = b;
                }
            } else e[m] !== a && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = c;
    }
    remove() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_;
        for(let o = 0, a = arguments.length; o !== a; ++o){
            let l = arguments[o], c = l.uuid, h = t[c];
            if (h !== void 0 && h >= r) {
                let u = r++, d = e[u];
                t[d.uuid] = h, e[h] = d, t[c] = u, e[u] = l;
                for(let f = 0, m = i; f !== m; ++f){
                    let x = n[f], v = x[u], g = x[h];
                    x[h] = v, x[u] = g;
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    uncache() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_, o = e.length;
        for(let a = 0, l = arguments.length; a !== l; ++a){
            let c = arguments[a], h = c.uuid, u = t[h];
            if (u !== void 0) if (delete t[h], u < r) {
                let d = --r, f = e[d], m = --o, x = e[m];
                t[f.uuid] = u, e[u] = f, t[x.uuid] = d, e[d] = x, e.pop();
                for(let v = 0, g = i; v !== g; ++v){
                    let p = n[v], _ = p[d], y = p[m];
                    p[u] = _, p[d] = y, p.pop();
                }
            } else {
                let d = --o, f = e[d];
                d > 0 && (t[f.uuid] = u), e[u] = f, e.pop();
                for(let m = 0, x = i; m !== x; ++m){
                    let v = n[m];
                    v[u] = v[d], v.pop();
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    subscribe_(e, t) {
        let n = this._bindingsIndicesByPath, i = n[e], r = this._bindings;
        if (i !== void 0) return r[i];
        let o = this._paths, a = this._parsedPaths, l = this._objects, c = l.length, h = this.nCachedObjects_, u = new Array(c);
        i = r.length, n[e] = i, o.push(e), a.push(t), r.push(u);
        for(let d = h, f = l.length; d !== f; ++d){
            let m = l[d];
            u[d] = new ke(m, e, t);
        }
        return u;
    }
    unsubscribe_(e) {
        let t = this._bindingsIndicesByPath, n = t[e];
        if (n !== void 0) {
            let i = this._paths, r = this._parsedPaths, o = this._bindings, a = o.length - 1, l = o[a], c = e[a];
            t[c] = n, o[n] = l, o.pop(), r[n] = r[a], r.pop(), i[n] = i[a], i.pop();
        }
    }
};
Yh.prototype.isAnimationObjectGroup = !0;
var Zh = class {
    constructor(e, t, n = null, i = t.blendMode){
        this._mixer = e, this._clip = t, this._localRoot = n, this.blendMode = i;
        let r = t.tracks, o = r.length, a = new Array(o), l = {
            endingStart: Mi,
            endingEnd: Mi
        };
        for(let c = 0; c !== o; ++c){
            let h = r[c].createInterpolant(null);
            a[c] = h, h.settings = l;
        }
        this._interpolantSettings = l, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Id, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
    }
    play() {
        return this._mixer._activateAction(this), this;
    }
    stop() {
        return this._mixer._deactivateAction(this), this.reset();
    }
    reset() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
    }
    isRunning() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
    }
    isScheduled() {
        return this._mixer._isActiveAction(this);
    }
    startAt(e) {
        return this._startTime = e, this;
    }
    setLoop(e, t) {
        return this.loop = e, this.repetitions = t, this;
    }
    setEffectiveWeight(e) {
        return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
    }
    getEffectiveWeight() {
        return this._effectiveWeight;
    }
    fadeIn(e) {
        return this._scheduleFading(e, 0, 1);
    }
    fadeOut(e) {
        return this._scheduleFading(e, 1, 0);
    }
    crossFadeFrom(e, t, n) {
        if (e.fadeOut(t), this.fadeIn(t), n) {
            let i = this._clip.duration, r = e._clip.duration, o = r / i, a = i / r;
            e.warp(1, o, t), this.warp(a, 1, t);
        }
        return this;
    }
    crossFadeTo(e, t, n) {
        return e.crossFadeFrom(this, t, n);
    }
    stopFading() {
        let e = this._weightInterpolant;
        return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    setEffectiveTimeScale(e) {
        return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
    }
    getEffectiveTimeScale() {
        return this._effectiveTimeScale;
    }
    setDuration(e) {
        return this.timeScale = this._clip.duration / e, this.stopWarping();
    }
    syncWith(e) {
        return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
    }
    halt(e) {
        return this.warp(this._effectiveTimeScale, 0, e);
    }
    warp(e, t, n) {
        let i = this._mixer, r = i.time, o = this.timeScale, a = this._timeScaleInterpolant;
        a === null && (a = i._lendControlInterpolant(), this._timeScaleInterpolant = a);
        let l = a.parameterPositions, c = a.sampleValues;
        return l[0] = r, l[1] = r + n, c[0] = e / o, c[1] = t / o, this;
    }
    stopWarping() {
        let e = this._timeScaleInterpolant;
        return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    getMixer() {
        return this._mixer;
    }
    getClip() {
        return this._clip;
    }
    getRoot() {
        return this._localRoot || this._mixer._root;
    }
    _update(e, t, n, i) {
        if (!this.enabled) {
            this._updateWeight(e);
            return;
        }
        let r = this._startTime;
        if (r !== null) {
            let l = (e - r) * n;
            if (l < 0 || n === 0) return;
            this._startTime = null, t = n * l;
        }
        t *= this._updateTimeScale(e);
        let o = this._updateTime(t), a = this._updateWeight(e);
        if (a > 0) {
            let l = this._interpolants, c = this._propertyBindings;
            switch(this.blendMode){
                case qc:
                    for(let h = 0, u = l.length; h !== u; ++h)l[h].evaluate(o), c[h].accumulateAdditive(a);
                    break;
                case ua:
                default:
                    for(let h = 0, u = l.length; h !== u; ++h)l[h].evaluate(o), c[h].accumulate(i, a);
            }
        }
    }
    _updateWeight(e) {
        let t = 0;
        if (this.enabled) {
            t = this.weight;
            let n = this._weightInterpolant;
            if (n !== null) {
                let i = n.evaluate(e)[0];
                t *= i, e > n.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
            }
        }
        return this._effectiveWeight = t, t;
    }
    _updateTimeScale(e) {
        let t = 0;
        if (!this.paused) {
            t = this.timeScale;
            let n = this._timeScaleInterpolant;
            n !== null && (t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), t === 0 ? this.paused = !0 : this.timeScale = t));
        }
        return this._effectiveTimeScale = t, t;
    }
    _updateTime(e) {
        let t = this._clip.duration, n = this.loop, i = this.time + e, r = this._loopCount, o = n === Dd;
        if (e === 0) return r === -1 ? i : o && (r & 1) === 1 ? t - i : i;
        if (n === Pd) {
            r === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
            e: {
                if (i >= t) i = t;
                else if (i < 0) i = 0;
                else {
                    this.time = i;
                    break e;
                }
                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e < 0 ? -1 : 1
                });
            }
        } else {
            if (r === -1 && (e >= 0 ? (r = 0, this._setEndings(!0, this.repetitions === 0, o)) : this._setEndings(this.repetitions === 0, !0, o)), i >= t || i < 0) {
                let a = Math.floor(i / t);
                i -= t * a, r += Math.abs(a);
                let l = this.repetitions - r;
                if (l <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? t : 0, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e > 0 ? 1 : -1
                });
                else {
                    if (l === 1) {
                        let c = e < 0;
                        this._setEndings(c, !c, o);
                    } else this._setEndings(!1, !1, o);
                    this._loopCount = r, this.time = i, this._mixer.dispatchEvent({
                        type: "loop",
                        action: this,
                        loopDelta: a
                    });
                }
            } else this.time = i;
            if (o && (r & 1) === 1) return t - i;
        }
        return i;
    }
    _setEndings(e, t, n) {
        let i = this._interpolantSettings;
        n ? (i.endingStart = bi, i.endingEnd = bi) : (e ? i.endingStart = this.zeroSlopeAtStart ? bi : Mi : i.endingStart = Os, t ? i.endingEnd = this.zeroSlopeAtEnd ? bi : Mi : i.endingEnd = Os);
    }
    _scheduleFading(e, t, n) {
        let i = this._mixer, r = i.time, o = this._weightInterpolant;
        o === null && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
        let a = o.parameterPositions, l = o.sampleValues;
        return a[0] = r, l[0] = t, a[1] = r + e, l[1] = n, this;
    }
}, $h = class extends En {
    constructor(e){
        super();
        this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
    }
    _bindAction(e, t) {
        let n = e._localRoot || this._root, i = e._clip.tracks, r = i.length, o = e._propertyBindings, a = e._interpolants, l = n.uuid, c = this._bindingsByRootAndName, h = c[l];
        h === void 0 && (h = {}, c[l] = h);
        for(let u = 0; u !== r; ++u){
            let d = i[u], f = d.name, m = h[f];
            if (m !== void 0) o[u] = m;
            else {
                if (m = o[u], m !== void 0) {
                    m._cacheIndex === null && (++m.referenceCount, this._addInactiveBinding(m, l, f));
                    continue;
                }
                let x = t && t._propertyBindings[u].binding.parsedPath;
                m = new Xh(ke.create(n, f, x), d.ValueTypeName, d.getValueSize()), ++m.referenceCount, this._addInactiveBinding(m, l, f), o[u] = m;
            }
            a[u].resultBuffer = m.buffer;
        }
    }
    _activateAction(e) {
        if (!this._isActiveAction(e)) {
            if (e._cacheIndex === null) {
                let n = (e._localRoot || this._root).uuid, i = e._clip.uuid, r = this._actionsByClip[i];
                this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, i, n);
            }
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                r.useCount++ === 0 && (this._lendBinding(r), r.saveOriginalState());
            }
            this._lendAction(e);
        }
    }
    _deactivateAction(e) {
        if (this._isActiveAction(e)) {
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                --r.useCount === 0 && (r.restoreOriginalState(), this._takeBackBinding(r));
            }
            this._takeBackAction(e);
        }
    }
    _initMemoryManager() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        let e = this;
        this.stats = {
            actions: {
                get total () {
                    return e._actions.length;
                },
                get inUse () {
                    return e._nActiveActions;
                }
            },
            bindings: {
                get total () {
                    return e._bindings.length;
                },
                get inUse () {
                    return e._nActiveBindings;
                }
            },
            controlInterpolants: {
                get total () {
                    return e._controlInterpolants.length;
                },
                get inUse () {
                    return e._nActiveControlInterpolants;
                }
            }
        };
    }
    _isActiveAction(e) {
        let t = e._cacheIndex;
        return t !== null && t < this._nActiveActions;
    }
    _addInactiveAction(e, t, n) {
        let i = this._actions, r = this._actionsByClip, o = r[t];
        if (o === void 0) o = {
            knownActions: [
                e
            ],
            actionByRoot: {}
        }, e._byClipCacheIndex = 0, r[t] = o;
        else {
            let a = o.knownActions;
            e._byClipCacheIndex = a.length, a.push(e);
        }
        e._cacheIndex = i.length, i.push(e), o.actionByRoot[n] = e;
    }
    _removeInactiveAction(e) {
        let t = this._actions, n = t[t.length - 1], i = e._cacheIndex;
        n._cacheIndex = i, t[i] = n, t.pop(), e._cacheIndex = null;
        let r = e._clip.uuid, o = this._actionsByClip, a = o[r], l = a.knownActions, c = l[l.length - 1], h = e._byClipCacheIndex;
        c._byClipCacheIndex = h, l[h] = c, l.pop(), e._byClipCacheIndex = null;
        let u = a.actionByRoot, d = (e._localRoot || this._root).uuid;
        delete u[d], l.length === 0 && delete o[r], this._removeInactiveBindingsForAction(e);
    }
    _removeInactiveBindingsForAction(e) {
        let t = e._propertyBindings;
        for(let n = 0, i = t.length; n !== i; ++n){
            let r = t[n];
            --r.referenceCount === 0 && this._removeInactiveBinding(r);
        }
    }
    _lendAction(e) {
        let t = this._actions, n = e._cacheIndex, i = this._nActiveActions++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackAction(e) {
        let t = this._actions, n = e._cacheIndex, i = --this._nActiveActions, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _addInactiveBinding(e, t, n) {
        let i = this._bindingsByRootAndName, r = this._bindings, o = i[t];
        o === void 0 && (o = {}, i[t] = o), o[n] = e, e._cacheIndex = r.length, r.push(e);
    }
    _removeInactiveBinding(e) {
        let t = this._bindings, n = e.binding, i = n.rootNode.uuid, r = n.path, o = this._bindingsByRootAndName, a = o[i], l = t[t.length - 1], c = e._cacheIndex;
        l._cacheIndex = c, t[c] = l, t.pop(), delete a[r], Object.keys(a).length === 0 && delete o[i];
    }
    _lendBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = this._nActiveBindings++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = --this._nActiveBindings, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _lendControlInterpolant() {
        let e = this._controlInterpolants, t = this._nActiveControlInterpolants++, n = e[t];
        return n === void 0 && (n = new Na(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), n.__cacheIndex = t, e[t] = n), n;
    }
    _takeBackControlInterpolant(e) {
        let t = this._controlInterpolants, n = e.__cacheIndex, i = --this._nActiveControlInterpolants, r = t[i];
        e.__cacheIndex = i, t[i] = e, r.__cacheIndex = n, t[n] = r;
    }
    clipAction(e, t, n) {
        let i = t || this._root, r = i.uuid, o = typeof e == "string" ? Lr.findByName(i, e) : e, a = o !== null ? o.uuid : e, l = this._actionsByClip[a], c = null;
        if (n === void 0 && (o !== null ? n = o.blendMode : n = ua), l !== void 0) {
            let u = l.actionByRoot[r];
            if (u !== void 0 && u.blendMode === n) return u;
            c = l.knownActions[0], o === null && (o = c._clip);
        }
        if (o === null) return null;
        let h = new Zh(this, o, t, n);
        return this._bindAction(h, c), this._addInactiveAction(h, a, r), h;
    }
    existingAction(e, t) {
        let n = t || this._root, i = n.uuid, r = typeof e == "string" ? Lr.findByName(n, e) : e, o = r ? r.uuid : e, a = this._actionsByClip[o];
        return a !== void 0 && a.actionByRoot[i] || null;
    }
    stopAllAction() {
        let e = this._actions, t = this._nActiveActions;
        for(let n = t - 1; n >= 0; --n)e[n].stop();
        return this;
    }
    update(e) {
        e *= this.timeScale;
        let t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), o = this._accuIndex ^= 1;
        for(let c = 0; c !== n; ++c)t[c]._update(i, e, r, o);
        let a = this._bindings, l = this._nActiveBindings;
        for(let c = 0; c !== l; ++c)a[c].apply(o);
        return this;
    }
    setTime(e) {
        this.time = 0;
        for(let t = 0; t < this._actions.length; t++)this._actions[t].time = 0;
        return this.update(e);
    }
    getRoot() {
        return this._root;
    }
    uncacheClip(e) {
        let t = this._actions, n = e.uuid, i = this._actionsByClip, r = i[n];
        if (r !== void 0) {
            let o = r.knownActions;
            for(let a = 0, l = o.length; a !== l; ++a){
                let c = o[a];
                this._deactivateAction(c);
                let h = c._cacheIndex, u = t[t.length - 1];
                c._cacheIndex = null, c._byClipCacheIndex = null, u._cacheIndex = h, t[h] = u, t.pop(), this._removeInactiveBindingsForAction(c);
            }
            delete i[n];
        }
    }
    uncacheRoot(e) {
        let t = e.uuid, n = this._actionsByClip;
        for(let o in n){
            let a = n[o].actionByRoot, l = a[t];
            l !== void 0 && (this._deactivateAction(l), this._removeInactiveAction(l));
        }
        let i = this._bindingsByRootAndName, r = i[t];
        if (r !== void 0) for(let o in r){
            let a = r[o];
            a.restoreOriginalState(), this._removeInactiveBinding(a);
        }
    }
    uncacheAction(e, t) {
        let n = this.existingAction(e, t);
        n !== null && (this._deactivateAction(n), this._removeInactiveAction(n));
    }
};
$h.prototype._controlInterpolantsResultBuffer = new Float32Array(1);
var go = class {
    constructor(e){
        typeof e == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e;
    }
    clone() {
        return new go(this.value.clone === void 0 ? this.value : this.value.clone());
    }
}, jh = class extends $n {
    constructor(e, t, n = 1){
        super(e, t);
        this.meshPerAttribute = n;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    clone(e) {
        let t = super.clone(e);
        return t.meshPerAttribute = this.meshPerAttribute, t;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t;
    }
};
jh.prototype.isInstancedInterleavedBuffer = !0;
var Qh = class {
    constructor(e, t, n, i, r){
        this.buffer = e, this.type = t, this.itemSize = n, this.elementSize = i, this.count = r, this.version = 0;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setBuffer(e) {
        return this.buffer = e, this;
    }
    setType(e, t) {
        return this.type = e, this.elementSize = t, this;
    }
    setItemSize(e) {
        return this.itemSize = e, this;
    }
    setCount(e) {
        return this.count = e, this;
    }
};
Qh.prototype.isGLBufferAttribute = !0;
var Ey = class {
    constructor(e, t, n = 0, i = 1 / 0){
        this.ray = new Cn(e, t), this.near = n, this.far = i, this.camera = null, this.layers = new Js, this.params = {
            Mesh: {},
            Line: {
                threshold: 1
            },
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        };
    }
    set(e, t) {
        this.ray.set(e, t);
    }
    setFromCamera(e, t) {
        t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type: " + t.type);
    }
    intersectObject(e, t = !0, n = []) {
        return la(e, this, n, t), n.sort(Pc), n;
    }
    intersectObjects(e, t = !0, n = []) {
        for(let i = 0, r = e.length; i < r; i++)la(e[i], this, n, t);
        return n.sort(Pc), n;
    }
};
function Pc(s, e) {
    return s.distance - e.distance;
}
function la(s, e, t, n) {
    if (s.layers.test(e.layers) && s.raycast(e, t), n === !0) {
        let i = s.children;
        for(let r = 0, o = i.length; r < o; r++)la(i[r], e, t, !0);
    }
}
var Ay = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
    }
    makeSafe() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + t * t + n * n), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(mt(t / this.radius, -1, 1))), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Cy = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Ic = new X, qi = class {
    constructor(e = new X(1 / 0, 1 / 0), t = new X(-1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ic.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ic.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
qi.prototype.isBox2 = !0;
var Dc = new M, Ts = new M, Kh = class {
    constructor(e = new M, t = new M){
        this.start = e, this.end = t;
    }
    set(e, t) {
        return this.start.copy(e), this.end.copy(t), this;
    }
    copy(e) {
        return this.start.copy(e.start), this.end.copy(e.end), this;
    }
    getCenter(e) {
        return e.addVectors(this.start, this.end).multiplyScalar(.5);
    }
    delta(e) {
        return e.subVectors(this.end, this.start);
    }
    distanceSq() {
        return this.start.distanceToSquared(this.end);
    }
    distance() {
        return this.start.distanceTo(this.end);
    }
    at(e, t) {
        return this.delta(t).multiplyScalar(e).add(this.start);
    }
    closestPointToPointParameter(e, t) {
        Dc.subVectors(e, this.start), Ts.subVectors(this.end, this.start);
        let n = Ts.dot(Ts), r = Ts.dot(Dc) / n;
        return t && (r = mt(r, 0, 1)), r;
    }
    closestPointToPoint(e, t, n) {
        let i = this.closestPointToPointParameter(e, t);
        return this.delta(n).multiplyScalar(i).add(this.start);
    }
    applyMatrix4(e) {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
    }
    equals(e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Fc = new M, Ly = class extends Ne {
    constructor(e, t){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;
        let n = new _e, i = [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            -1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            -1,
            1
        ];
        for(let o = 0, a = 1, l = 32; o < l; o++, a++){
            let c = o / l * Math.PI * 2, h = a / l * Math.PI * 2;
            i.push(Math.cos(c), Math.sin(c), 1, Math.cos(h), Math.sin(h), 1);
        }
        n.setAttribute("position", new de(i, 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.cone = new wt(n, r), this.add(this.cone), this.update();
    }
    dispose() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
    }
    update() {
        this.light.updateMatrixWorld();
        let e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e), Fc.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Fc), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
    }
}, yn = new M, Es = new pe, Qo = new pe, eu = class extends wt {
    constructor(e){
        let t = tu(e), n = new _e, i = [], r = [], o = new ae(0, 0, 1), a = new ae(0, 1, 0);
        for(let c = 0; c < t.length; c++){
            let h = t[c];
            h.parent && h.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(o.r, o.g, o.b), r.push(a.r, a.g, a.b));
        }
        n.setAttribute("position", new de(i, 3)), n.setAttribute("color", new de(r, 3));
        let l = new ft({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0
        });
        super(n, l);
        this.type = "SkeletonHelper", this.isSkeletonHelper = !0, this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
    }
    updateMatrixWorld(e) {
        let t = this.bones, n = this.geometry, i = n.getAttribute("position");
        Qo.copy(this.root.matrixWorld).invert();
        for(let r = 0, o = 0; r < t.length; r++){
            let a = t[r];
            a.parent && a.parent.isBone && (Es.multiplyMatrices(Qo, a.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o, yn.x, yn.y, yn.z), Es.multiplyMatrices(Qo, a.parent.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o + 1, yn.x, yn.y, yn.z), o += 2);
        }
        n.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
    }
};
function tu(s) {
    let e = [];
    s && s.isBone && e.push(s);
    for(let t = 0; t < s.children.length; t++)e.push.apply(e, tu(s.children[t]));
    return e;
}
var Ry = class extends st {
    constructor(e, t, n){
        let i = new Fi(t, 4, 2), r = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        });
        super(i, r);
        this.light = e, this.light.updateMatrixWorld(), this.color = n, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
    update() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
    }
}, Py = new M, Nc = new ae, Bc = new ae, Iy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n;
        let i = new Ii(t);
        i.rotateY(Math.PI * .5), this.material = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        }), this.color === void 0 && (this.material.vertexColors = !0);
        let r = i.getAttribute("position"), o = new Float32Array(r.count * 3);
        i.setAttribute("color", new Ue(o, 3)), this.add(new st(i, this.material)), this.update();
    }
    dispose() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
    }
    update() {
        let e = this.children[0];
        if (this.color !== void 0) this.material.color.set(this.color);
        else {
            let t = e.geometry.getAttribute("color");
            Nc.copy(this.light.color), Bc.copy(this.light.groundColor);
            for(let n = 0, i = t.count; n < i; n++){
                let r = n < i / 2 ? Nc : Bc;
                t.setXYZ(n, r.r, r.g, r.b);
            }
            t.needsUpdate = !0;
        }
        e.lookAt(Py.setFromMatrixPosition(this.light.matrixWorld).negate());
    }
}, nu = class extends wt {
    constructor(e = 10, t = 10, n = 4473924, i = 8947848){
        n = new ae(n), i = new ae(i);
        let r = t / 2, o = e / t, a = e / 2, l = [], c = [];
        for(let d = 0, f = 0, m = -a; d <= t; d++, m += o){
            l.push(-a, 0, m, a, 0, m), l.push(m, 0, -a, m, 0, a);
            let x = d === r ? n : i;
            x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3;
        }
        let h = new _e;
        h.setAttribute("position", new de(l, 3)), h.setAttribute("color", new de(c, 3));
        let u = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(h, u);
        this.type = "GridHelper";
    }
}, Dy = class extends wt {
    constructor(e = 10, t = 16, n = 8, i = 64, r = 4473924, o = 8947848){
        r = new ae(r), o = new ae(o);
        let a = [], l = [];
        for(let u = 0; u <= t; u++){
            let d = u / t * (Math.PI * 2), f = Math.sin(d) * e, m = Math.cos(d) * e;
            a.push(0, 0, 0), a.push(f, 0, m);
            let x = u & 1 ? r : o;
            l.push(x.r, x.g, x.b), l.push(x.r, x.g, x.b);
        }
        for(let u = 0; u <= n; u++){
            let d = u & 1 ? r : o, f = e - e / n * u;
            for(let m = 0; m < i; m++){
                let x = m / i * (Math.PI * 2), v = Math.sin(x) * f, g = Math.cos(x) * f;
                a.push(v, 0, g), l.push(d.r, d.g, d.b), x = (m + 1) / i * (Math.PI * 2), v = Math.sin(x) * f, g = Math.cos(x) * f, a.push(v, 0, g), l.push(d.r, d.g, d.b);
            }
        }
        let c = new _e;
        c.setAttribute("position", new de(a, 3)), c.setAttribute("color", new de(l, 3));
        let h = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(c, h);
        this.type = "PolarGridHelper";
    }
}, zc = new M, As = new M, Uc = new M, Fy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, t === void 0 && (t = 1);
        let i = new _e;
        i.setAttribute("position", new de([
            -t,
            t,
            0,
            t,
            t,
            0,
            t,
            -t,
            0,
            -t,
            -t,
            0,
            -t,
            t,
            0
        ], 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.lightPlane = new on(i, r), this.add(this.lightPlane), i = new _e, i.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            0,
            1
        ], 3)), this.targetLine = new on(i, r), this.add(this.targetLine), this.update();
    }
    dispose() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
    }
    update() {
        zc.setFromMatrixPosition(this.light.matrixWorld), As.setFromMatrixPosition(this.light.target.matrixWorld), Uc.subVectors(As, zc), this.lightPlane.lookAt(As), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(As), this.targetLine.scale.z = Uc.length();
    }
}, Cs = new M, Qe = new Ir, Ny = class extends wt {
    constructor(e){
        let t = new _e, n = new ft({
            color: 16777215,
            vertexColors: !0,
            toneMapped: !1
        }), i = [], r = [], o = {}, a = new ae(16755200), l = new ae(16711680), c = new ae(43775), h = new ae(16777215), u = new ae(3355443);
        d("n1", "n2", a), d("n2", "n4", a), d("n4", "n3", a), d("n3", "n1", a), d("f1", "f2", a), d("f2", "f4", a), d("f4", "f3", a), d("f3", "f1", a), d("n1", "f1", a), d("n2", "f2", a), d("n3", "f3", a), d("n4", "f4", a), d("p", "n1", l), d("p", "n2", l), d("p", "n3", l), d("p", "n4", l), d("u1", "u2", c), d("u2", "u3", c), d("u3", "u1", c), d("c", "t", h), d("p", "c", u), d("cn1", "cn2", u), d("cn3", "cn4", u), d("cf1", "cf2", u), d("cf3", "cf4", u);
        function d(m, x, v) {
            f(m, v), f(x, v);
        }
        function f(m, x) {
            i.push(0, 0, 0), r.push(x.r, x.g, x.b), o[m] === void 0 && (o[m] = []), o[m].push(i.length / 3 - 1);
        }
        t.setAttribute("position", new de(i, 3)), t.setAttribute("color", new de(r, 3));
        super(t, n);
        this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update();
    }
    update() {
        let e = this.geometry, t = this.pointMap, n = 1, i = 1;
        Qe.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), et("c", t, e, Qe, 0, 0, -1), et("t", t, e, Qe, 0, 0, 1), et("n1", t, e, Qe, -n, -i, -1), et("n2", t, e, Qe, n, -i, -1), et("n3", t, e, Qe, -n, i, -1), et("n4", t, e, Qe, n, i, -1), et("f1", t, e, Qe, -n, -i, 1), et("f2", t, e, Qe, n, -i, 1), et("f3", t, e, Qe, -n, i, 1), et("f4", t, e, Qe, n, i, 1), et("u1", t, e, Qe, n * .7, i * 1.1, -1), et("u2", t, e, Qe, -n * .7, i * 1.1, -1), et("u3", t, e, Qe, 0, i * 2, -1), et("cf1", t, e, Qe, -n, 0, 1), et("cf2", t, e, Qe, n, 0, 1), et("cf3", t, e, Qe, 0, -i, 1), et("cf4", t, e, Qe, 0, i, 1), et("cn1", t, e, Qe, -n, 0, -1), et("cn2", t, e, Qe, n, 0, -1), et("cn3", t, e, Qe, 0, -i, -1), et("cn4", t, e, Qe, 0, i, -1), e.getAttribute("position").needsUpdate = !0;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
};
function et(s, e, t, n, i, r, o) {
    Cs.set(i, r, o).unproject(n);
    let a = e[s];
    if (a !== void 0) {
        let l = t.getAttribute("position");
        for(let c = 0, h = a.length; c < h; c++)l.setXYZ(a[c], Cs.x, Cs.y, Cs.z);
    }
}
var Ls = new Lt, iu = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = new Float32Array(8 * 3), r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new Ue(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
    }
    update(e) {
        if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Ls.setFromObject(this.object), Ls.isEmpty()) return;
        let t = Ls.min, n = Ls.max, i = this.geometry.attributes.position, r = i.array;
        r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = t.x, r[4] = n.y, r[5] = n.z, r[6] = t.x, r[7] = t.y, r[8] = n.z, r[9] = n.x, r[10] = t.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = t.z, r[15] = t.x, r[16] = n.y, r[17] = t.z, r[18] = t.x, r[19] = t.y, r[20] = t.z, r[21] = n.x, r[22] = t.y, r[23] = t.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
    }
    setFromObject(e) {
        return this.object = e, this.update(), this;
    }
    copy(e) {
        return wt.prototype.copy.call(this, e), this.object = e.object, this;
    }
}, By = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            -1
        ], r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new de(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
    }
    updateMatrixWorld(e) {
        let t = this.box;
        t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e));
    }
}, zy = class extends on {
    constructor(e, t = 1, n = 16776960){
        let i = n, r = [
            1,
            -1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ], o = new _e;
        o.setAttribute("position", new de(r, 3)), o.computeBoundingSphere();
        super(o, new ft({
            color: i,
            toneMapped: !1
        }));
        this.type = "PlaneHelper", this.plane = e, this.size = t;
        let a = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1
        ], l = new _e;
        l.setAttribute("position", new de(a, 3)), l.computeBoundingSphere(), this.add(new st(l, new hn({
            color: i,
            opacity: .2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1
        })));
    }
    updateMatrixWorld(e) {
        let t = -this.plane.constant;
        Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.children[0].material.side = t < 0 ? it : Ai, this.lookAt(this.plane.normal), super.updateMatrixWorld(e);
    }
}, Oc = new M, Rs, Ko, Uy = class extends Ne {
    constructor(e = new M(0, 0, 1), t = new M(0, 0, 0), n = 1, i = 16776960, r = n * .2, o = r * .2){
        super();
        this.type = "ArrowHelper", Rs === void 0 && (Rs = new _e, Rs.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            1,
            0
        ], 3)), Ko = new Jn(0, .5, 1, 5, 1), Ko.translate(0, -.5, 0)), this.position.copy(t), this.line = new on(Rs, new ft({
            color: i,
            toneMapped: !1
        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new st(Ko, new hn({
            color: i,
            toneMapped: !1
        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(n, r, o);
    }
    setDirection(e) {
        if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
        else {
            Oc.set(e.z, 0, -e.x).normalize();
            let t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(Oc, t);
        }
    }
    setLength(e, t = e * .2, n = t * .2) {
        this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix();
    }
    setColor(e) {
        this.line.material.color.set(e), this.cone.material.color.set(e);
    }
    copy(e) {
        return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
    }
}, ru = class extends wt {
    constructor(e = 1){
        let t = [
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e
        ], n = [
            1,
            0,
            0,
            1,
            .6,
            0,
            0,
            1,
            0,
            .6,
            1,
            0,
            0,
            0,
            1,
            0,
            .6,
            1
        ], i = new _e;
        i.setAttribute("position", new de(t, 3)), i.setAttribute("color", new de(n, 3));
        let r = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(i, r);
        this.type = "AxesHelper";
    }
    setColors(e, t, n) {
        let i = new ae, r = this.geometry.attributes.color.array;
        return i.set(e), i.toArray(r, 0), i.toArray(r, 3), i.set(t), i.toArray(r, 6), i.toArray(r, 9), i.set(n), i.toArray(r, 12), i.toArray(r, 15), this.geometry.attributes.color.needsUpdate = !0, this;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, Oy = class {
    constructor(){
        this.type = "ShapePath", this.color = new ae, this.subPaths = [], this.currentPath = null;
    }
    moveTo(e, t) {
        return this.currentPath = new gr, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this;
    }
    lineTo(e, t) {
        return this.currentPath.lineTo(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        return this.currentPath.quadraticCurveTo(e, t, n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        return this.currentPath.bezierCurveTo(e, t, n, i, r, o), this;
    }
    splineThru(e) {
        return this.currentPath.splineThru(e), this;
    }
    toShapes(e, t) {
        function n(p) {
            let _ = [];
            for(let y = 0, b = p.length; y < b; y++){
                let A = p[y], L = new Xt;
                L.curves = A.curves, _.push(L);
            }
            return _;
        }
        function i(p, _) {
            let y = _.length, b = !1;
            for(let A = y - 1, L = 0; L < y; A = L++){
                let I = _[A], k = _[L], B = k.x - I.x, P = k.y - I.y;
                if (Math.abs(P) > Number.EPSILON) {
                    if (P < 0 && (I = _[L], B = -B, k = _[A], P = -P), p.y < I.y || p.y > k.y) continue;
                    if (p.y === I.y) {
                        if (p.x === I.x) return !0;
                    } else {
                        let w = P * (p.x - I.x) - B * (p.y - I.y);
                        if (w === 0) return !0;
                        if (w < 0) continue;
                        b = !b;
                    }
                } else {
                    if (p.y !== I.y) continue;
                    if (k.x <= p.x && p.x <= I.x || I.x <= p.x && p.x <= k.x) return !0;
                }
            }
            return b;
        }
        let r = Jt.isClockWise, o = this.subPaths;
        if (o.length === 0) return [];
        if (t === !0) return n(o);
        let a, l, c, h = [];
        if (o.length === 1) return l = o[0], c = new Xt, c.curves = l.curves, h.push(c), h;
        let u = !r(o[0].getPoints());
        u = e ? !u : u;
        let d = [], f = [], m = [], x = 0, v;
        f[x] = void 0, m[x] = [];
        for(let p = 0, _ = o.length; p < _; p++)l = o[p], v = l.getPoints(), a = r(v), a = e ? !a : a, a ? (!u && f[x] && x++, f[x] = {
            s: new Xt,
            p: v
        }, f[x].s.curves = l.curves, u && x++, m[x] = []) : m[x].push({
            h: l,
            p: v[0]
        });
        if (!f[0]) return n(o);
        if (f.length > 1) {
            let p = !1, _ = [];
            for(let y = 0, b = f.length; y < b; y++)d[y] = [];
            for(let y = 0, b = f.length; y < b; y++){
                let A = m[y];
                for(let L = 0; L < A.length; L++){
                    let I = A[L], k = !0;
                    for(let B = 0; B < f.length; B++)i(I.p, f[B].p) && (y !== B && _.push({
                        froms: y,
                        tos: B,
                        hole: L
                    }), k ? (k = !1, d[B].push(I)) : p = !0);
                    k && d[y].push(I);
                }
            }
            _.length > 0 && (p || (m = d));
        }
        let g;
        for(let p = 0, _ = f.length; p < _; p++){
            c = f[p].s, h.push(c), g = m[p];
            for(let y = 0, b = g.length; y < b; y++)c.holes.push(g[y].h);
        }
        return h;
    }
}, su = new Float32Array(1), Hy = new Int32Array(su.buffer), ky = class {
    static toHalfFloat(e) {
        e > 65504 && (console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."), e = 65504), su[0] = e;
        let t = Hy[0], n = t >> 16 & 32768, i = t >> 12 & 2047, r = t >> 23 & 255;
        return r < 103 ? n : r > 142 ? (n |= 31744, n |= (r == 255 ? 0 : 1) && t & 8388607, n) : r < 113 ? (i |= 2048, n |= (i >> 114 - r) + (i >> 113 - r & 1), n) : (n |= r - 112 << 10 | i >> 1, n += i & 1, n);
    }
}, b0 = 0, w0 = 1, S0 = 0, T0 = 1, E0 = 2;
function A0(s) {
    return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), s;
}
function C0(s = []) {
    return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), s.isMultiMaterial = !0, s.materials = s, s.clone = function() {
        return s.slice();
    }, s;
}
function L0(s, e) {
    return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new zr(s, e);
}
function R0(s) {
    return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new ro(s);
}
function P0(s, e) {
    return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new zr(s, e);
}
function I0(s) {
    return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function D0(s) {
    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function F0(s) {
    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function N0(s, e, t) {
    return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new M(s, e, t);
}
function B0(s, e) {
    return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."), new Ue(s, e).setUsage(ur);
}
function z0(s, e) {
    return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new jc(s, e);
}
function U0(s, e) {
    return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new Qc(s, e);
}
function O0(s, e) {
    return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Kc(s, e);
}
function H0(s, e) {
    return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new eh(s, e);
}
function k0(s, e) {
    return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Ys(s, e);
}
function G0(s, e) {
    return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new th(s, e);
}
function V0(s, e) {
    return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Zs(s, e);
}
function W0(s, e) {
    return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new de(s, e);
}
function q0(s, e) {
    return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new ih(s, e);
}
Ct.create = function(s, e) {
    return console.log("THREE.Curve.create() has been deprecated"), s.prototype = Object.create(Ct.prototype), s.prototype.constructor = s, s.prototype.getPoint = e, s;
};
gr.prototype.fromPoints = function(s) {
    return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(s);
};
function X0(s) {
    return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new ru(s);
}
function J0(s, e) {
    return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new iu(s, e);
}
function Y0(s, e) {
    return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new wt(new _a(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
nu.prototype.setColors = function() {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
};
eu.prototype.update = function() {
    console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
};
function Z0(s, e) {
    return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new wt(new Ea(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
bt.prototype.extractUrlBase = function(s) {
    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Gs.extractUrlBase(s);
};
bt.Handlers = {
    add: function() {
        console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.");
    },
    get: function() {
        console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.");
    }
};
function $0(s) {
    return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new Yt(s);
}
function j0(s) {
    return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new Nh(s);
}
qi.prototype.center = function(s) {
    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
qi.prototype.empty = function() {
    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
qi.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
qi.prototype.size = function(s) {
    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(s);
};
Lt.prototype.center = function(s) {
    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
Lt.prototype.empty = function() {
    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Lt.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Lt.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
Lt.prototype.size = function(s) {
    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(s);
};
An.prototype.empty = function() {
    return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Dr.prototype.setFromMatrix = function(s) {
    return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(s);
};
Kh.prototype.center = function(s) {
    return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
lt.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
lt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
};
lt.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
};
lt.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
pe.prototype.extractPosition = function(s) {
    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(s);
};
pe.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
pe.prototype.getPosition = function() {
    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), new M().setFromMatrixColumn(this, 3);
};
pe.prototype.setRotationFromQuaternion = function(s) {
    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(s);
};
pe.prototype.multiplyToArray = function() {
    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
};
pe.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector4 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
};
pe.prototype.rotateAxis = function(s) {
    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), s.transformDirection(this);
};
pe.prototype.crossVector = function(s) {
    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.translate = function() {
    console.error("THREE.Matrix4: .translate() has been removed.");
};
pe.prototype.rotateX = function() {
    console.error("THREE.Matrix4: .rotateX() has been removed.");
};
pe.prototype.rotateY = function() {
    console.error("THREE.Matrix4: .rotateY() has been removed.");
};
pe.prototype.rotateZ = function() {
    console.error("THREE.Matrix4: .rotateZ() has been removed.");
};
pe.prototype.rotateByAxis = function() {
    console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
};
pe.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
};
pe.prototype.makeFrustum = function(s, e, t, n, i, r) {
    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(s, e, n, t, i, r);
};
pe.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
Wt.prototype.isIntersectionLine = function(s) {
    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(s);
};
gt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), s.applyQuaternion(this);
};
gt.prototype.inverse = function() {
    return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."), this.invert();
};
Cn.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Cn.prototype.isIntersectionPlane = function(s) {
    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(s);
};
Cn.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
nt.prototype.area = function() {
    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
};
nt.prototype.barycoordFromPoint = function(s, e) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(s, e);
};
nt.prototype.midpoint = function(s) {
    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(s);
};
nt.prototypenormal = function(s) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(s);
};
nt.prototype.plane = function(s) {
    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(s);
};
nt.barycoordFromPoint = function(s, e, t, n, i) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), nt.getBarycoord(s, e, t, n, i);
};
nt.normal = function(s, e, t, n) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), nt.getNormal(s, e, t, n);
};
Xt.prototype.extractAllPoints = function(s) {
    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(s);
};
Xt.prototype.extrude = function(s) {
    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new ln(this, s);
};
Xt.prototype.makeGeometry = function(s) {
    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Di(this, s);
};
X.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
X.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
X.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
M.prototype.setEulerFromRotationMatrix = function() {
    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
};
M.prototype.setEulerFromQuaternion = function() {
    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
};
M.prototype.getPositionFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(s);
};
M.prototype.getScaleFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(s);
};
M.prototype.getColumnFromMatrix = function(s, e) {
    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, s);
};
M.prototype.applyProjection = function(s) {
    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(s);
};
M.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
M.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
M.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ve.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
Ve.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ne.prototype.getChildByName = function(s) {
    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(s);
};
Ne.prototype.renderDepth = function() {
    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
};
Ne.prototype.translate = function(s, e) {
    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e, s);
};
Ne.prototype.getWorldRotation = function() {
    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
};
Ne.prototype.applyMatrix = function(s) {
    return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(Ne.prototype, {
    eulerOrder: {
        get: function() {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
        },
        set: function(s) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = s;
        }
    },
    useQuaternion: {
        get: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        },
        set: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        }
    }
});
st.prototype.setDrawMode = function() {
    console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
};
Object.defineProperties(st.prototype, {
    drawMode: {
        get: function() {
            return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), Fd;
        },
        set: function() {
            console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
        }
    }
});
so.prototype.initBones = function() {
    console.error("THREE.SkinnedMesh: initBones() has been removed.");
};
ut.prototype.setLens = function(s, e) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), e !== void 0 && (this.filmGauge = e), this.setFocalLength(s);
};
Object.defineProperties(Bt.prototype, {
    onlyShadow: {
        set: function() {
            console.warn("THREE.Light: .onlyShadow has been removed.");
        }
    },
    shadowCameraFov: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = s;
        }
    },
    shadowCameraLeft: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = s;
        }
    },
    shadowCameraRight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = s;
        }
    },
    shadowCameraTop: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = s;
        }
    },
    shadowCameraBottom: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = s;
        }
    },
    shadowCameraNear: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = s;
        }
    },
    shadowCameraFar: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = s;
        }
    },
    shadowCameraVisible: {
        set: function() {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
        }
    },
    shadowBias: {
        set: function(s) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = s;
        }
    },
    shadowDarkness: {
        set: function() {
            console.warn("THREE.Light: .shadowDarkness has been removed.");
        }
    },
    shadowMapWidth: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = s;
        }
    },
    shadowMapHeight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = s;
        }
    }
});
Object.defineProperties(Ue.prototype, {
    length: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
        }
    },
    dynamic: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.usage === ur;
        },
        set: function() {
            console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(ur);
        }
    }
});
Ue.prototype.setDynamic = function(s) {
    return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
Ue.prototype.copyIndicesArray = function() {
    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
}, Ue.prototype.setArray = function() {
    console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
_e.prototype.addIndex = function(s) {
    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(s);
};
_e.prototype.addAttribute = function(s, e) {
    return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), !(e && e.isBufferAttribute) && !(e && e.isInterleavedBufferAttribute) ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(s, new Ue(arguments[1], arguments[2]))) : s === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(e), this) : this.setAttribute(s, e);
};
_e.prototype.addDrawCall = function(s, e, t) {
    t !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(s, e);
};
_e.prototype.clearDrawCalls = function() {
    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
};
_e.prototype.computeOffsets = function() {
    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
};
_e.prototype.removeAttribute = function(s) {
    return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(s);
};
_e.prototype.applyMatrix = function(s) {
    return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(_e.prototype, {
    drawcalls: {
        get: function() {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
        }
    },
    offsets: {
        get: function() {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
        }
    }
});
$n.prototype.setDynamic = function(s) {
    return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
$n.prototype.setArray = function() {
    console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
ln.prototype.getArrays = function() {
    console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.");
};
ln.prototype.addShapeList = function() {
    console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.");
};
ln.prototype.addShape = function() {
    console.error("THREE.ExtrudeGeometry: .addShape() has been removed.");
};
no.prototype.dispose = function() {
    console.error("THREE.Scene: .dispose() has been removed.");
};
go.prototype.onUpdate = function() {
    return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
};
Object.defineProperties(dt.prototype, {
    wrapAround: {
        get: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        }
    },
    overdraw: {
        get: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        }
    },
    wrapRGB: {
        get: function() {
            return console.warn("THREE.Material: .wrapRGB has been removed."), new ae;
        }
    },
    shading: {
        get: function() {
            console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = s === kc;
        }
    },
    stencilMask: {
        get: function() {
            return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask;
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = s;
        }
    },
    vertexTangents: {
        get: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        },
        set: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        }
    }
});
Object.defineProperties(sn.prototype, {
    derivatives: {
        get: function() {
            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
        },
        set: function(s) {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = s;
        }
    }
});
qe.prototype.clearTarget = function(s, e, t, n) {
    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(s), this.clear(e, t, n);
};
qe.prototype.animate = function(s) {
    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(s);
};
qe.prototype.getCurrentRenderTarget = function() {
    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
};
qe.prototype.getMaxAnisotropy = function() {
    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
};
qe.prototype.getPrecision = function() {
    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
};
qe.prototype.resetGLState = function() {
    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
};
qe.prototype.supportsFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
};
qe.prototype.supportsHalfFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
};
qe.prototype.supportsStandardDerivatives = function() {
    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
};
qe.prototype.supportsCompressedTextureS3TC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
};
qe.prototype.supportsCompressedTexturePVRTC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
};
qe.prototype.supportsBlendMinMax = function() {
    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
};
qe.prototype.supportsVertexTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
};
qe.prototype.supportsInstancedArrays = function() {
    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
};
qe.prototype.enableScissorTest = function(s) {
    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(s);
};
qe.prototype.initMaterial = function() {
    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
};
qe.prototype.addPrePlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
};
qe.prototype.addPostPlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
};
qe.prototype.updateShadowMap = function() {
    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
};
qe.prototype.setFaceCulling = function() {
    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
};
qe.prototype.allocTextureUnit = function() {
    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");
};
qe.prototype.setTexture = function() {
    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
};
qe.prototype.setTexture2D = function() {
    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");
};
qe.prototype.setTextureCube = function() {
    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");
};
qe.prototype.getActiveMipMapLevel = function() {
    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel();
};
Object.defineProperties(qe.prototype, {
    shadowMapEnabled: {
        get: function() {
            return this.shadowMap.enabled;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = s;
        }
    },
    shadowMapType: {
        get: function() {
            return this.shadowMap.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = s;
        }
    },
    shadowMapCullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    context: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext();
        }
    },
    vr: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr;
        }
    },
    gammaInput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");
        }
    },
    gammaOutput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = s === !0 ? Oi : Nt;
        }
    },
    toneMappingWhitePoint: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."), 1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");
        }
    },
    gammaFactor: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."), 2;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.");
        }
    }
});
Object.defineProperties(yh.prototype, {
    cullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    renderReverseSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        }
    },
    renderSingleSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        }
    }
});
function Q0(s, e, t) {
    return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."), new js(s, t);
}
Object.defineProperties(At.prototype, {
    wrapS: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = s;
        }
    },
    wrapT: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = s;
        }
    },
    magFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = s;
        }
    },
    minFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = s;
        }
    },
    anisotropy: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = s;
        }
    },
    offset: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = s;
        }
    },
    repeat: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = s;
        }
    },
    format: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = s;
        }
    },
    type: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = s;
        }
    },
    generateMipmaps: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = s;
        }
    }
});
Za.prototype.load = function(s) {
    console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
    let e = this;
    return new kh().load(s, function(n) {
        e.setBuffer(n);
    }), this;
};
qh.prototype.getData = function() {
    return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
};
$s.prototype.updateCubeMap = function(s, e) {
    return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(s, e);
};
$s.prototype.clear = function(s, e, t, n) {
    return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."), this.renderTarget.clear(s, e, t, n);
};
Yn.crossOrigin = void 0;
Yn.loadTexture = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
    let i = new Bh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadTextureCube = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
    let i = new Fh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadCompressedTexture = function() {
    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
};
Yn.loadCompressedTextureCube = function() {
    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
};
function K0() {
    console.error("THREE.CanvasRenderer has been removed");
}
function ev() {
    console.error("THREE.JSONLoader has been removed.");
}
var tv = {
    createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    }
};
function nv() {
    console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js");
}
function iv() {
    return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"), new _e;
}
function rv() {
    return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"), new _e;
}
function sv() {
    console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js");
}
function ov() {
    console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js");
}
function av() {
    console.error("THREE.ImmediateRenderObject has been removed.");
}
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
    detail: {
        revision: ca
    }
}));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = ca);
const mod = {
    ACESFilmicToneMapping: Uu,
    AddEquation: _i,
    AddOperation: Fu,
    AdditiveAnimationBlendMode: qc,
    AdditiveBlending: nl,
    AlphaFormat: Xu,
    AlwaysDepth: Au,
    AlwaysStencilFunc: Ud,
    AmbientLight: qa,
    AmbientLightProbe: Vh,
    AnimationClip: Lr,
    AnimationLoader: cy,
    AnimationMixer: $h,
    AnimationObjectGroup: Yh,
    AnimationUtils: Ze,
    ArcCurve: Ma,
    ArrayCamera: ga,
    ArrowHelper: Uy,
    Audio: Za,
    AudioAnalyser: qh,
    AudioContext: Hh,
    AudioListener: my,
    AudioLoader: kh,
    AxesHelper: ru,
    AxisHelper: X0,
    BackSide: it,
    BasicDepthPacking: Nd,
    BasicShadowMap: qy,
    BinaryTextureLoader: j0,
    Bone: oo,
    BooleanKeyframeTrack: Qn,
    BoundingBoxHelper: J0,
    Box2: qi,
    Box3: Lt,
    Box3Helper: By,
    BoxBufferGeometry: wn,
    BoxGeometry: wn,
    BoxHelper: iu,
    BufferAttribute: Ue,
    BufferGeometry: _e,
    BufferGeometryLoader: Uh,
    ByteType: Hu,
    Cache: Ni,
    Camera: Ir,
    CameraHelper: Ny,
    CanvasRenderer: K0,
    CanvasTexture: Th,
    CatmullRomCurve3: wa,
    CineonToneMapping: zu,
    CircleBufferGeometry: fr,
    CircleGeometry: fr,
    ClampToEdgeWrapping: vt,
    Clock: Wh,
    Color: ae,
    ColorKeyframeTrack: Ba,
    CompressedTexture: va,
    CompressedTextureLoader: hy,
    ConeBufferGeometry: pr,
    ConeGeometry: pr,
    CubeCamera: $s,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    CubeTexture: ki,
    CubeTextureLoader: Fh,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    CubicInterpolant: Ph,
    CullFaceBack: tl,
    CullFaceFront: du,
    CullFaceFrontBack: Wy,
    CullFaceNone: uu,
    Curve: Ct,
    CurvePath: Ah,
    CustomBlending: pu,
    CustomToneMapping: Ou,
    CylinderBufferGeometry: Jn,
    CylinderGeometry: Jn,
    Cylindrical: Cy,
    DataTexture: qn,
    DataTexture2DArray: Qs,
    DataTexture3D: ma,
    DataTextureLoader: Nh,
    DataUtils: ky,
    DecrementStencilOp: n0,
    DecrementWrapStencilOp: r0,
    DefaultLoadingManager: ly,
    DepthFormat: Vn,
    DepthStencilFormat: Li,
    DepthTexture: ks,
    DirectionalLight: Wa,
    DirectionalLightHelper: Fy,
    DiscreteInterpolant: Ih,
    DodecahedronBufferGeometry: mr,
    DodecahedronGeometry: mr,
    DoubleSide: Ci,
    DstAlphaFactor: Mu,
    DstColorFactor: wu,
    DynamicBufferAttribute: B0,
    DynamicCopyUsage: y0,
    DynamicDrawUsage: ur,
    DynamicReadUsage: m0,
    EdgesGeometry: _a,
    EdgesHelper: Y0,
    EllipseCurve: Ur,
    EqualDepth: Lu,
    EqualStencilFunc: l0,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    Euler: Zn,
    EventDispatcher: En,
    ExtrudeBufferGeometry: ln,
    ExtrudeGeometry: ln,
    FaceColors: T0,
    FileLoader: Yt,
    FlatShading: kc,
    Float16BufferAttribute: nh,
    Float32Attribute: W0,
    Float32BufferAttribute: de,
    Float64Attribute: q0,
    Float64BufferAttribute: ih,
    FloatType: nn,
    Fog: Br,
    FogExp2: Nr,
    Font: ov,
    FontLoader: sv,
    FramebufferTexture: Sh,
    FrontSide: Ai,
    Frustum: Dr,
    GLBufferAttribute: Qh,
    GLSL1: _0,
    GLSL3: xl,
    GreaterDepth: Pu,
    GreaterEqualDepth: Ru,
    GreaterEqualStencilFunc: d0,
    GreaterStencilFunc: h0,
    GridHelper: nu,
    Group: Hn,
    HalfFloatType: kn,
    HemisphereLight: Ua,
    HemisphereLightHelper: Iy,
    HemisphereLightProbe: Gh,
    IcosahedronBufferGeometry: _r,
    IcosahedronGeometry: _r,
    ImageBitmapLoader: Oh,
    ImageLoader: Rr,
    ImageUtils: Yn,
    ImmediateRenderObject: av,
    IncrementStencilOp: t0,
    IncrementWrapStencilOp: i0,
    InstancedBufferAttribute: Xn,
    InstancedBufferGeometry: Ya,
    InstancedInterleavedBuffer: jh,
    InstancedMesh: xa,
    Int16Attribute: H0,
    Int16BufferAttribute: eh,
    Int32Attribute: G0,
    Int32BufferAttribute: th,
    Int8Attribute: z0,
    Int8BufferAttribute: jc,
    IntType: Gu,
    InterleavedBuffer: $n,
    InterleavedBufferAttribute: Sn,
    Interpolant: cn,
    InterpolateDiscrete: zs,
    InterpolateLinear: Us,
    InterpolateSmooth: yo,
    InvertStencilOp: s0,
    JSONLoader: ev,
    KeepStencilOp: vo,
    KeyframeTrack: zt,
    LOD: bh,
    LatheBufferGeometry: Mr,
    LatheGeometry: Mr,
    Layers: Js,
    LensFlare: nv,
    LessDepth: Cu,
    LessEqualDepth: ea,
    LessEqualStencilFunc: c0,
    LessStencilFunc: a0,
    Light: Bt,
    LightProbe: Hr,
    Line: on,
    Line3: Kh,
    LineBasicMaterial: ft,
    LineCurve: Or,
    LineCurve3: Eh,
    LineDashedMaterial: Fa,
    LineLoop: ya,
    LinePieces: w0,
    LineSegments: wt,
    LineStrip: b0,
    LinearEncoding: Nt,
    LinearFilter: tt,
    LinearInterpolant: Na,
    LinearMipMapLinearFilter: $y,
    LinearMipMapNearestFilter: Zy,
    LinearMipmapLinearFilter: Ui,
    LinearMipmapNearestFilter: Wc,
    LinearToneMapping: Nu,
    Loader: bt,
    LoaderUtils: Gs,
    LoadingManager: za,
    LoopOnce: Pd,
    LoopPingPong: Dd,
    LoopRepeat: Id,
    LuminanceAlphaFormat: Yu,
    LuminanceFormat: Ju,
    MOUSE: Gy,
    Material: dt,
    MaterialLoader: zh,
    Math: M0,
    MathUtils: M0,
    Matrix3: lt,
    Matrix4: pe,
    MaxEquation: ol,
    Mesh: st,
    MeshBasicMaterial: hn,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshFaceMaterial: A0,
    MeshLambertMaterial: Ia,
    MeshMatcapMaterial: Da,
    MeshNormalMaterial: Pa,
    MeshPhongMaterial: La,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshToonMaterial: Ra,
    MinEquation: sl,
    MirroredRepeatWrapping: Bs,
    MixOperation: Du,
    MultiMaterial: C0,
    MultiplyBlending: rl,
    MultiplyOperation: Vs,
    NearestFilter: rt,
    NearestMipMapLinearFilter: Yy,
    NearestMipMapNearestFilter: Jy,
    NearestMipmapLinearFilter: na,
    NearestMipmapNearestFilter: ta,
    NeverDepth: Eu,
    NeverStencilFunc: o0,
    NoBlending: vn,
    NoColors: S0,
    NoToneMapping: _n,
    NormalAnimationBlendMode: ua,
    NormalBlending: sr,
    NotEqualDepth: Iu,
    NotEqualStencilFunc: u0,
    NumberKeyframeTrack: Ar,
    Object3D: Ne,
    ObjectLoader: uy,
    ObjectSpaceNormalMap: zd,
    OctahedronBufferGeometry: Ii,
    OctahedronGeometry: Ii,
    OneFactor: yu,
    OneMinusDstAlphaFactor: bu,
    OneMinusDstColorFactor: Su,
    OneMinusSrcAlphaFactor: Vc,
    OneMinusSrcColorFactor: _u,
    OrthographicCamera: Fr,
    PCFShadowMap: Hc,
    PCFSoftShadowMap: fu,
    PMREMGenerator: ah,
    ParametricGeometry: iv,
    Particle: R0,
    ParticleBasicMaterial: D0,
    ParticleSystem: P0,
    ParticleSystemMaterial: F0,
    Path: gr,
    PerspectiveCamera: ut,
    Plane: Wt,
    PlaneBufferGeometry: Pi,
    PlaneGeometry: Pi,
    PlaneHelper: zy,
    PointCloud: L0,
    PointCloudMaterial: I0,
    PointLight: Ga,
    PointLightHelper: Ry,
    Points: zr,
    PointsMaterial: jn,
    PolarGridHelper: Dy,
    PolyhedronBufferGeometry: an,
    PolyhedronGeometry: an,
    PositionalAudio: xy,
    PropertyBinding: ke,
    PropertyMixer: Xh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    Quaternion: gt,
    QuaternionKeyframeTrack: Wi,
    QuaternionLinearInterpolant: Dh,
    REVISION: ca,
    RGBADepthPacking: Bd,
    RGBAFormat: ct,
    RGBAIntegerFormat: ed,
    RGBA_ASTC_10x10_Format: fd,
    RGBA_ASTC_10x5_Format: hd,
    RGBA_ASTC_10x6_Format: ud,
    RGBA_ASTC_10x8_Format: dd,
    RGBA_ASTC_12x10_Format: pd,
    RGBA_ASTC_12x12_Format: md,
    RGBA_ASTC_4x4_Format: nd,
    RGBA_ASTC_5x4_Format: id,
    RGBA_ASTC_5x5_Format: rd,
    RGBA_ASTC_6x5_Format: sd,
    RGBA_ASTC_6x6_Format: od,
    RGBA_ASTC_8x5_Format: ad,
    RGBA_ASTC_8x6_Format: ld,
    RGBA_ASTC_8x8_Format: cd,
    RGBA_BPTC_Format: gd,
    RGBA_ETC2_EAC_Format: gl,
    RGBA_PVRTC_2BPPV1_Format: pl,
    RGBA_PVRTC_4BPPV1_Format: fl,
    RGBA_S3TC_DXT1_Format: ll,
    RGBA_S3TC_DXT3_Format: cl,
    RGBA_S3TC_DXT5_Format: hl,
    RGBFormat: Gn,
    RGBIntegerFormat: Ku,
    RGB_ETC1_Format: td,
    RGB_ETC2_Format: ml,
    RGB_PVRTC_2BPPV1_Format: dl,
    RGB_PVRTC_4BPPV1_Format: ul,
    RGB_S3TC_DXT1_Format: al,
    RGFormat: ju,
    RGIntegerFormat: Qu,
    RawShaderMaterial: Gi,
    Ray: Cn,
    Raycaster: Ey,
    RectAreaLight: Xa,
    RedFormat: Zu,
    RedIntegerFormat: $u,
    ReinhardToneMapping: Bu,
    RepeatWrapping: Ns,
    ReplaceStencilOp: e0,
    ReverseSubtractEquation: gu,
    RingBufferGeometry: br,
    RingGeometry: br,
    SRGB8_ALPHA8_ASTC_10x10_Format: Cd,
    SRGB8_ALPHA8_ASTC_10x5_Format: Td,
    SRGB8_ALPHA8_ASTC_10x6_Format: Ed,
    SRGB8_ALPHA8_ASTC_10x8_Format: Ad,
    SRGB8_ALPHA8_ASTC_12x10_Format: Ld,
    SRGB8_ALPHA8_ASTC_12x12_Format: Rd,
    SRGB8_ALPHA8_ASTC_4x4_Format: xd,
    SRGB8_ALPHA8_ASTC_5x4_Format: yd,
    SRGB8_ALPHA8_ASTC_5x5_Format: vd,
    SRGB8_ALPHA8_ASTC_6x5_Format: _d,
    SRGB8_ALPHA8_ASTC_6x6_Format: Md,
    SRGB8_ALPHA8_ASTC_8x5_Format: bd,
    SRGB8_ALPHA8_ASTC_8x6_Format: wd,
    SRGB8_ALPHA8_ASTC_8x8_Format: Sd,
    Scene: no,
    SceneUtils: tv,
    ShaderChunk: Fe,
    ShaderLib: qt,
    ShaderMaterial: sn,
    ShadowMaterial: Aa,
    Shape: Xt,
    ShapeBufferGeometry: Di,
    ShapeGeometry: Di,
    ShapePath: Oy,
    ShapeUtils: Jt,
    ShortType: ku,
    Skeleton: ao,
    SkeletonHelper: eu,
    SkinnedMesh: so,
    SmoothShading: Xy,
    Sphere: An,
    SphereBufferGeometry: Fi,
    SphereGeometry: Fi,
    Spherical: Ay,
    SphericalHarmonics3: Ja,
    SplineCurve: uo,
    SpotLight: Ha,
    SpotLightHelper: Ly,
    Sprite: ro,
    SpriteMaterial: io,
    SrcAlphaFactor: Gc,
    SrcAlphaSaturateFactor: Tu,
    SrcColorFactor: vu,
    StaticCopyUsage: x0,
    StaticDrawUsage: hr,
    StaticReadUsage: p0,
    StereoCamera: fy,
    StreamCopyUsage: v0,
    StreamDrawUsage: f0,
    StreamReadUsage: g0,
    StringKeyframeTrack: Kn,
    SubtractEquation: mu,
    SubtractiveBlending: il,
    TOUCH: Vy,
    TangentSpaceNormalMap: Hi,
    TetrahedronBufferGeometry: wr,
    TetrahedronGeometry: wr,
    TextGeometry: rv,
    Texture: ot,
    TextureLoader: Bh,
    TorusBufferGeometry: Sr,
    TorusGeometry: Sr,
    TorusKnotBufferGeometry: Tr,
    TorusKnotGeometry: Tr,
    Triangle: nt,
    TriangleFanDrawMode: Qy,
    TriangleStripDrawMode: jy,
    TrianglesDrawMode: Fd,
    TubeBufferGeometry: Er,
    TubeGeometry: Er,
    UVMapping: ha,
    Uint16Attribute: k0,
    Uint16BufferAttribute: Ys,
    Uint32Attribute: V0,
    Uint32BufferAttribute: Zs,
    Uint8Attribute: U0,
    Uint8BufferAttribute: Qc,
    Uint8ClampedAttribute: O0,
    Uint8ClampedBufferAttribute: Kc,
    Uniform: go,
    UniformsLib: ie,
    UniformsUtils: uf,
    UnsignedByteType: rn,
    UnsignedInt248Type: Ti,
    UnsignedIntType: Ps,
    UnsignedShort4444Type: Vu,
    UnsignedShort5551Type: Wu,
    UnsignedShort565Type: qu,
    UnsignedShortType: cr,
    VSMShadowMap: ir,
    Vector2: X,
    Vector3: M,
    Vector4: Ve,
    VectorKeyframeTrack: Cr,
    Vertex: N0,
    VertexColors: E0,
    VideoTexture: wh,
    WebGL1Renderer: _h,
    WebGLCubeRenderTarget: js,
    WebGLMultipleRenderTargets: Zc,
    WebGLMultisampleRenderTarget: Xs,
    WebGLRenderTarget: At,
    WebGLRenderTargetCube: Q0,
    WebGLRenderer: qe,
    WebGLUtils: Ex,
    WireframeGeometry: Ea,
    WireframeHelper: Z0,
    WrapAroundEnding: Os,
    XHRLoader: $0,
    ZeroCurvatureEnding: Mi,
    ZeroFactor: xu,
    ZeroSlopeEnding: bi,
    ZeroStencilOp: Ky,
    sRGBEncoding: Oi
};
function getWebGLErrorMessage() {
    return getErrorMessage(1);
}
function getErrorMessage(version) {
    var names = {
        1: "WebGL",
        2: "WebGL 2"
    };
    var contexts = {
        1: window.WebGLRenderingContext,
        2: window.WebGL2RenderingContext
    };
    var message = 'Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';
    var element = document.createElement("div");
    element.id = "webglmessage";
    element.style.fontFamily = "monospace";
    element.style.fontSize = "13px";
    element.style.fontWeight = "normal";
    element.style.textAlign = "center";
    element.style.background = "#fff";
    element.style.color = "#000";
    element.style.padding = "1.5em";
    element.style.width = "400px";
    element.style.margin = "5em auto 0";
    if (contexts[version]) {
        message = message.replace("$0", "graphics card");
    } else {
        message = message.replace("$0", "browser");
    }
    message = message.replace("$1", names[version]);
    element.innerHTML = message;
    return element;
}
const pixelRatio = window.devicePixelRatio || 1.0;
function event2scene_pixel(scene, event) {
    const { canvas  } = scene.screen;
    const rect = canvas.getBoundingClientRect();
    const x = (event.clientX - rect.left) * pixelRatio;
    const y = (rect.height - (event.clientY - rect.top)) * pixelRatio;
    return [
        x,
        y
    ];
}
function Identity4x4() {
    return new pe();
}
function in_scene(scene, mouse_event) {
    const [x, y] = event2scene_pixel(scene, mouse_event);
    const [sx, sy, sw, sh] = scene.pixelarea.value;
    return x >= sx && x < sx + sw && y >= sy && y < sy + sh;
}
function attach_3d_camera(canvas, makie_camera, cam3d, scene) {
    if (cam3d === undefined) {
        return;
    }
    const [w, h] = makie_camera.resolution.value;
    const camera = new ut(cam3d.fov, w / h, cam3d.near, cam3d.far);
    const center = new M(...cam3d.lookat);
    camera.up = new M(...cam3d.upvector);
    camera.position.set(...cam3d.eyeposition);
    camera.lookAt(center);
    function update() {
        const view = camera.matrixWorldInverse;
        const projection = camera.projectionMatrix;
        const [width, height] = cam3d.resolution.value;
        const [x, y, z] = camera.position;
        camera.aspect = width / height;
        camera.updateProjectionMatrix();
        camera.updateWorldMatrix();
        makie_camera.update_matrices(view.elements, projection.elements, [
            width,
            height
        ], [
            x,
            y,
            z
        ]);
    }
    cam3d.resolution.on(update);
    function addMouseHandler(domObject, drag, zoomIn, zoomOut) {
        let startDragX = null;
        let startDragY = null;
        function mouseWheelHandler(e) {
            e = window.event || e;
            if (!in_scene(scene, e)) {
                return;
            }
            const delta = Math.sign(e.deltaY);
            if (delta == -1) {
                zoomOut();
            } else if (delta == 1) {
                zoomIn();
            }
            e.preventDefault();
        }
        function mouseDownHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseMoveHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            if (startDragX === null || startDragY === null) return;
            if (drag) drag(e.clientX - startDragX, e.clientY - startDragY);
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseUpHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            mouseMoveHandler.call(this, e);
            startDragX = null;
            startDragY = null;
            e.preventDefault();
        }
        domObject.addEventListener("wheel", mouseWheelHandler);
        domObject.addEventListener("mousedown", mouseDownHandler);
        domObject.addEventListener("mousemove", mouseMoveHandler);
        domObject.addEventListener("mouseup", mouseUpHandler);
    }
    function drag(deltaX, deltaY) {
        const radPerPixel = Math.PI / 450;
        const deltaPhi = radPerPixel * deltaX;
        const deltaTheta = radPerPixel * deltaY;
        const pos = camera.position.sub(center);
        const radius = pos.length();
        let theta = Math.acos(pos.z / radius);
        let phi = Math.atan2(pos.y, pos.x);
        theta = Math.min(Math.max(theta - deltaTheta, 0), Math.PI);
        phi -= deltaPhi;
        pos.x = radius * Math.sin(theta) * Math.cos(phi);
        pos.y = radius * Math.sin(theta) * Math.sin(phi);
        pos.z = radius * Math.cos(theta);
        camera.position.add(center);
        camera.lookAt(center);
        update();
    }
    function zoomIn() {
        camera.position.sub(center).multiplyScalar(0.9).add(center);
        update();
    }
    function zoomOut() {
        camera.position.sub(center).multiplyScalar(1.1).add(center);
        update();
    }
    addMouseHandler(canvas, drag, zoomIn, zoomOut);
}
function mul(a, b) {
    return b.clone().multiply(a);
}
function orthographicprojection(left, right, bottom, top, znear, zfar) {
    return [
        2 / (right - left),
        0,
        0,
        0,
        0,
        2 / (top - bottom),
        0,
        0,
        0,
        0,
        -2 / (zfar - znear),
        0,
        -(right + left) / (right - left),
        -(top + bottom) / (top - bottom),
        -(zfar + znear) / (zfar - znear),
        1
    ];
}
function pixel_space_inverse(w, h, near) {
    return [
        0.5 * w,
        0,
        0,
        0,
        0,
        0.5 * h,
        0,
        0,
        0,
        0,
        near,
        0,
        0.5 * w,
        0.5 * h,
        0,
        1
    ];
}
function relative_space() {
    const relative = Identity4x4();
    relative.fromArray([
        2,
        0,
        0,
        0,
        0,
        2,
        0,
        0,
        0,
        0,
        1,
        0,
        -1,
        -1,
        0,
        1
    ]);
    return relative;
}
class MakieCamera {
    constructor(){
        this.view = new go(Identity4x4());
        this.projection = new go(Identity4x4());
        this.projectionview = new go(Identity4x4());
        this.pixel_space = new go(Identity4x4());
        this.pixel_space_inverse = new go(Identity4x4());
        this.projectionview_inverse = new go(Identity4x4());
        this.relative_space = new go(relative_space());
        this.relative_inverse = new go(relative_space().invert());
        this.clip_space = new go(Identity4x4());
        this.resolution = new go(new X());
        this.eyeposition = new go(new M());
        this.preprojections = {};
    }
    calculate_matrices() {
        const [w, h] = this.resolution.value;
        const nearclip = -10_000;
        this.pixel_space.value.fromArray(orthographicprojection(0, w, 0, h, nearclip, 10_000));
        this.pixel_space_inverse.value.fromArray(pixel_space_inverse(w, h, nearclip));
        const proj_view = mul(this.view.value, this.projection.value);
        this.projectionview.value = proj_view;
        this.projectionview_inverse.value = proj_view.clone().invert();
        Object.keys(this.preprojections).forEach((key)=>{
            const [space, markerspace] = key.split(",");
            this.preprojections[key].value = this.calculate_preprojection_matrix(space, markerspace);
        });
    }
    update_matrices(view, projection, resolution, eyepos) {
        this.view.value.fromArray(view);
        this.projection.value.fromArray(projection);
        this.resolution.value.fromArray(resolution);
        this.eyeposition.value.fromArray(eyepos);
        this.calculate_matrices();
        return;
    }
    clip_to_space(space) {
        if (space === "data") {
            return this.projectionview_inverse.value;
        } else if (space === "pixel") {
            return this.pixel_space_inverse.value;
        } else if (space === "relative") {
            return this.relative_inverse.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    space_to_clip(space) {
        if (space === "data") {
            return this.projectionview.value;
        } else if (space === "pixel") {
            return this.pixel_space.value;
        } else if (space === "relative") {
            return this.relative_space.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    calculate_preprojection_matrix(space, markerspace) {
        const cp = this.clip_to_space(markerspace);
        const sc = this.space_to_clip(space);
        return mul(sc, cp);
    }
    preprojection_matrix(space, markerspace) {
        const key = [
            space,
            markerspace
        ];
        const matrix_uniform = this.preprojections[key];
        if (matrix_uniform) {
            return matrix_uniform;
        } else {
            const matrix = this.calculate_preprojection_matrix(space, markerspace);
            const uniform = new go(matrix);
            this.preprojections[key] = uniform;
            return uniform;
        }
    }
}
const scene_cache = {};
const plot_cache = {};
const TEXTURE_ATLAS = [
    undefined
];
function add_scene(scene_id, three_scene) {
    scene_cache[scene_id] = three_scene;
}
function find_scene(scene_id) {
    return scene_cache[scene_id];
}
function delete_scene(scene_id) {
    const scene = scene_cache[scene_id];
    if (!scene) {
        return;
    }
    while(scene.children.length > 0){
        scene.remove(scene.children[0]);
    }
    delete scene_cache[scene_id];
}
function find_plots(plot_uuids) {
    const plots = [];
    plot_uuids.forEach((id)=>{
        const plot = plot_cache[id];
        if (plot) {
            plots.push(plot);
        }
    });
    return plots;
}
function delete_scenes(scene_uuids, plot_uuids) {
    plot_uuids.forEach((plot_id)=>{
        delete plot_cache[plot_id];
    });
    scene_uuids.forEach((scene_id)=>{
        delete_scene(scene_id);
    });
}
function insert_plot(scene_id, plot_data) {
    const scene = find_scene(scene_id);
    plot_data.forEach((plot)=>{
        add_plot(scene, plot);
    });
}
function delete_plots(scene_id, plot_uuids) {
    console.log(`deleting plots!: ${plot_uuids}`);
    const scene = find_scene(scene_id);
    const plots = find_plots(plot_uuids);
    plots.forEach((p)=>{
        scene.remove(p);
        delete plot_cache[p];
    });
}
function convert_texture(data) {
    const tex = create_texture(data);
    tex.needsUpdate = true;
    tex.minFilter = mod[data.minFilter];
    tex.magFilter = mod[data.magFilter];
    tex.anisotropy = data.anisotropy;
    tex.wrapS = mod[data.wrapS];
    if (data.size.length > 1) {
        tex.wrapT = mod[data.wrapT];
    }
    if (data.size.length > 2) {
        tex.wrapR = mod[data.wrapR];
    }
    return tex;
}
function is_three_fixed_array(value) {
    return value instanceof mod.Vector2 || value instanceof mod.Vector3 || value instanceof mod.Vector4 || value instanceof mod.Matrix4;
}
function to_uniform(data) {
    if (data.type !== undefined) {
        if (data.type == "Sampler") {
            return convert_texture(data);
        }
        throw new Error(`Type ${data.type} not known`);
    }
    if (Array.isArray(data) || ArrayBuffer.isView(data)) {
        if (!data.every((x)=>typeof x === "number")) {
            return data;
        }
        if (data.length == 2) {
            return new mod.Vector2().fromArray(data);
        }
        if (data.length == 3) {
            return new mod.Vector3().fromArray(data);
        }
        if (data.length == 4) {
            return new mod.Vector4().fromArray(data);
        }
        if (data.length == 16) {
            const mat = new mod.Matrix4();
            mat.fromArray(data);
            return mat;
        }
    }
    return data;
}
function deserialize_uniforms(data) {
    const result = {};
    for(const name in data){
        const value = data[name];
        if (value instanceof mod.Uniform) {
            result[name] = value;
        } else {
            const ser = to_uniform(value);
            result[name] = new mod.Uniform(ser);
        }
    }
    return result;
}
function deserialize_plot(data) {
    let mesh;
    if ("instance_attributes" in data) {
        mesh = create_instanced_mesh(data);
    } else {
        mesh = create_mesh(data);
    }
    mesh.name = data.name;
    mesh.frustumCulled = false;
    mesh.matrixAutoUpdate = false;
    mesh.plot_uuid = data.uuid;
    const update_visible = (v)=>{
        mesh.visible = v;
        return;
    };
    update_visible(data.visible.value);
    data.visible.on(update_visible);
    connect_uniforms(mesh, data.uniform_updater);
    connect_attributes(mesh, data.attribute_updater);
    return mesh;
}
const ON_NEXT_INSERT = new Set();
function on_next_insert(f) {
    ON_NEXT_INSERT.add(f);
}
function add_plot(scene, plot_data) {
    const cam = scene.wgl_camera;
    const identity = new mod.Uniform(new mod.Matrix4());
    if (plot_data.cam_space == "data") {
        plot_data.uniforms.view = cam.view;
        plot_data.uniforms.projection = cam.projection;
        plot_data.uniforms.projectionview = cam.projectionview;
        plot_data.uniforms.eyeposition = cam.eyeposition;
    } else if (plot_data.cam_space == "pixel") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.pixel_space;
        plot_data.uniforms.projectionview = cam.pixel_space;
    } else if (plot_data.cam_space == "relative") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.relative_space;
        plot_data.uniforms.projectionview = cam.relative_space;
    } else {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = identity;
        plot_data.uniforms.projectionview = identity;
    }
    plot_data.uniforms.resolution = cam.resolution;
    if (plot_data.uniforms.preprojection) {
        const { space , markerspace  } = plot_data;
        plot_data.uniforms.preprojection = cam.preprojection_matrix(space.value, markerspace.value);
    }
    const p = deserialize_plot(plot_data);
    plot_cache[plot_data.uuid] = p;
    scene.add(p);
    const next_insert = new Set(ON_NEXT_INSERT);
    next_insert.forEach((f)=>f());
}
function connect_uniforms(mesh, updater) {
    updater.on(([name, data])=>{
        if (name === "none") {
            return;
        }
        const uniform = mesh.material.uniforms[name];
        if (uniform.value.isTexture) {
            const im_data = uniform.value.image;
            const [size, tex_data] = data;
            if (tex_data.length == im_data.data.length) {
                im_data.data.set(tex_data);
            } else {
                const old_texture = uniform.value;
                uniform.value = re_create_texture(old_texture, tex_data, size);
                old_texture.dispose();
            }
            uniform.value.needsUpdate = true;
        } else {
            if (is_three_fixed_array(uniform.value)) {
                uniform.value.fromArray(data);
            } else {
                uniform.value = data;
            }
        }
    });
}
function create_texture(data) {
    const buffer = data.data;
    if (data.size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, data.size[0], data.size[1], data.size[2]);
        tex.format = mod[data.three_format];
        tex.type = mod[data.three_type];
        return tex;
    } else {
        const tex_data = buffer == "texture_atlas" ? TEXTURE_ATLAS[0].value : buffer;
        return new mod.DataTexture(tex_data, data.size[0], data.size[1], mod[data.three_format], mod[data.three_type]);
    }
}
function re_create_texture(old_texture, buffer, size) {
    if (size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, size[0], size[1], size[2]);
        tex.format = old_texture.format;
        tex.type = old_texture.type;
        return tex;
    } else {
        return new mod.DataTexture(buffer, size[0], size[1] ? size[1] : 1, old_texture.format, old_texture.type);
    }
}
function BufferAttribute(buffer) {
    const jsbuff = new mod.BufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function InstanceBufferAttribute(buffer) {
    const jsbuff = new mod.InstancedBufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function attach_geometry(buffer_geometry, vertexarrays, faces) {
    for(const name in vertexarrays){
        const buff = vertexarrays[name];
        let buffer;
        if (buff.to_update) {
            buffer = new mod.BufferAttribute(buff.to_update, buff.itemSize);
        } else {
            buffer = BufferAttribute(buff);
        }
        buffer_geometry.setAttribute(name, buffer);
    }
    buffer_geometry.setIndex(faces);
    buffer_geometry.boundingSphere = new mod.Sphere();
    buffer_geometry.boundingSphere.radius = 10000000000000;
    buffer_geometry.frustumCulled = false;
    return buffer_geometry;
}
function attach_instanced_geometry(buffer_geometry, instance_attributes) {
    for(const name in instance_attributes){
        const buffer = InstanceBufferAttribute(instance_attributes[name]);
        buffer_geometry.setAttribute(name, buffer);
    }
}
function recreate_geometry(mesh, vertexarrays, faces) {
    const buffer_geometry = new mod.BufferGeometry();
    attach_geometry(buffer_geometry, vertexarrays, faces);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function recreate_instanced_geometry(mesh) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const vertexarrays = {};
    const instance_attributes = {};
    const faces = [
        ...mesh.geometry.index.array
    ];
    Object.keys(mesh.geometry.attributes).forEach((name)=>{
        const buffer = mesh.geometry.attributes[name];
        const copy = buffer.to_update ? buffer.to_update : buffer.array.map((x)=>x);
        if (buffer.isInstancedBufferAttribute) {
            instance_attributes[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        } else {
            vertexarrays[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        }
    });
    attach_geometry(buffer_geometry, vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, instance_attributes);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function create_material(program) {
    const is_volume = "volumedata" in program.uniforms;
    return new mod.RawShaderMaterial({
        uniforms: deserialize_uniforms(program.uniforms),
        vertexShader: program.vertex_source,
        fragmentShader: program.fragment_source,
        side: is_volume ? mod.BackSide : mod.DoubleSide,
        transparent: true,
        depthTest: !program.overdraw.value,
        depthWrite: !program.transparency.value
    });
}
function create_mesh(program) {
    const buffer_geometry = new mod.BufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function create_instanced_mesh(program) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, program.instance_attributes);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function first(x) {
    return x[Object.keys(x)[0]];
}
function connect_attributes(mesh, updater) {
    const instance_buffers = {};
    const geometry_buffers = {};
    let first_instance_buffer;
    const real_instance_length = [
        0
    ];
    let first_geometry_buffer;
    const real_geometry_length = [
        0
    ];
    function re_assign_buffers() {
        const attributes = mesh.geometry.attributes;
        Object.keys(attributes).forEach((name)=>{
            const buffer = attributes[name];
            if (buffer.isInstancedBufferAttribute) {
                instance_buffers[name] = buffer;
            } else {
                geometry_buffers[name] = buffer;
            }
        });
        first_instance_buffer = first(instance_buffers);
        if (first_instance_buffer) {
            real_instance_length[0] = first_instance_buffer.count;
        }
        first_geometry_buffer = first(geometry_buffers);
        real_geometry_length[0] = first_geometry_buffer.count;
    }
    re_assign_buffers();
    updater.on(([name, new_values, length])=>{
        const buffer = mesh.geometry.attributes[name];
        let buffers;
        let real_length;
        let is_instance = false;
        if (name in instance_buffers) {
            buffers = instance_buffers;
            first_instance_buffer;
            real_length = real_instance_length;
            is_instance = true;
        } else {
            buffers = geometry_buffers;
            first_geometry_buffer;
            real_length = real_geometry_length;
        }
        if (length <= real_length[0]) {
            buffer.set(new_values);
            buffer.needsUpdate = true;
            if (is_instance) {
                mesh.geometry.instanceCount = length;
            }
        } else {
            buffer.to_update = new_values;
            const all_have_same_length = Object.values(buffers).every((x)=>x.to_update && x.to_update.length / x.itemSize == length);
            if (all_have_same_length) {
                if (is_instance) {
                    recreate_instanced_geometry(mesh);
                    re_assign_buffers();
                    mesh.geometry.instanceCount = new_values.length / buffer.itemSize;
                } else {
                    recreate_geometry(mesh, buffers, mesh.geometry.index);
                    re_assign_buffers();
                }
            }
        }
    });
}
function deserialize_scene(data, screen) {
    const scene = new mod.Scene();
    scene.screen = screen;
    const { canvas  } = screen;
    add_scene(data.uuid, scene);
    scene.scene_uuid = data.uuid;
    scene.frustumCulled = false;
    scene.pixelarea = data.pixelarea;
    scene.backgroundcolor = data.backgroundcolor;
    scene.clearscene = data.clearscene;
    scene.visible = data.visible;
    const camera = new MakieCamera();
    scene.wgl_camera = camera;
    function update_cam(camera_matrices) {
        const [view, projection, resolution, eyepos] = camera_matrices;
        camera.update_matrices(view, projection, resolution, eyepos);
    }
    update_cam(data.camera.value);
    if (data.cam3d_state) {
        attach_3d_camera(canvas, camera, data.cam3d_state, scene);
    } else {
        data.camera.on(update_cam);
    }
    data.plots.forEach((plot_data)=>{
        add_plot(scene, plot_data);
    });
    scene.scene_children = data.children.map((child)=>deserialize_scene(child, screen));
    return scene;
}
function delete_plot(plot) {
    delete plot_cache[plot.plot_uuid];
    const { parent  } = plot;
    if (parent) {
        parent.remove(plot);
    }
    plot.geometry.dispose();
    plot.material.dispose();
}
function delete_three_scene(scene) {
    delete scene_cache[scene.scene_uuid];
    scene.scene_children.forEach(delete_three_scene);
    while(scene.children.length > 0){
        delete_plot(scene.children[0]);
    }
}
window.THREE = mod;
const pixelRatio1 = window.devicePixelRatio || 1.0;
function render_scene(scene, picking = false) {
    const { camera , renderer  } = scene.screen;
    const canvas = renderer.domElement;
    if (!document.body.contains(canvas)) {
        console.log("EXITING WGL");
        renderer.state.reset();
        renderer.dispose();
        delete_three_scene(scene);
        return false;
    }
    if (!scene.visible.value) {
        return true;
    }
    renderer.autoClear = scene.clearscene.value;
    const area = scene.pixelarea.value;
    if (area) {
        const [x, y, w, h] = area.map((t)=>t / pixelRatio1);
        renderer.setViewport(x, y, w, h);
        renderer.setScissor(x, y, w, h);
        renderer.setScissorTest(true);
        if (picking) {
            renderer.setClearAlpha(0);
            renderer.setClearColor(new mod.Color(0), 0.0);
        } else {
            renderer.setClearColor(scene.backgroundcolor.value);
        }
        renderer.render(scene, camera);
    }
    return scene.scene_children.every((x)=>render_scene(x, picking));
}
function start_renderloop(three_scene) {
    const { fps  } = three_scene.screen;
    const time_per_frame = 1 / fps * 1000;
    let last_time_stamp = performance.now();
    function renderloop(timestamp) {
        if (timestamp - last_time_stamp > time_per_frame) {
            const all_rendered = render_scene(three_scene);
            if (!all_rendered) {
                return;
            }
            last_time_stamp = performance.now();
        }
        window.requestAnimationFrame(renderloop);
    }
    render_scene(three_scene);
    renderloop();
}
function throttle_function(func, delay) {
    let prev = 0;
    let future_id = undefined;
    function inner_throttle(...args) {
        const now = new Date().getTime();
        if (future_id !== undefined) {
            clearTimeout(future_id);
            future_id = undefined;
        }
        if (now - prev > delay) {
            prev = now;
            return func(...args);
        } else {
            future_id = setTimeout(()=>inner_throttle(...args), now - prev + 1);
        }
    }
    return inner_throttle;
}
function threejs_module(canvas, comm, width, height, resize_to_body) {
    let context = canvas.getContext("webgl2", {
        preserveDrawingBuffer: true
    });
    if (!context) {
        console.warn("WebGL 2.0 not supported by browser, falling back to WebGL 1.0 (Volume plots will not work)");
        context = canvas.getContext("webgl", {
            preserveDrawingBuffer: true
        });
    }
    if (!context) {
        return;
    }
    const renderer = new mod.WebGLRenderer({
        antialias: true,
        canvas: canvas,
        context: context,
        powerPreference: "high-performance"
    });
    renderer.setClearColor("#ffffff");
    renderer.setPixelRatio(pixelRatio1);
    renderer.setSize(width / pixelRatio1, height / pixelRatio1);
    const mouse_callback = (x, y)=>comm.notify({
            mouseposition: [
                x,
                y
            ]
        });
    const notify_mouse_throttled = throttle_function(mouse_callback, 40);
    function mousemove(event) {
        var rect = canvas.getBoundingClientRect();
        var x = (event.clientX - rect.left) * pixelRatio1;
        var y = (event.clientY - rect.top) * pixelRatio1;
        notify_mouse_throttled(x, y);
        return false;
    }
    canvas.addEventListener("mousemove", mousemove);
    function mousedown(event) {
        comm.notify({
            mousedown: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mousedown", mousedown);
    function mouseup(event) {
        comm.notify({
            mouseup: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mouseup", mouseup);
    function wheel(event) {
        comm.notify({
            scroll: [
                event.deltaX,
                -event.deltaY
            ]
        });
        event.preventDefault();
        return false;
    }
    canvas.addEventListener("wheel", wheel);
    function keydown(event) {
        comm.notify({
            keydown: event.code
        });
        return false;
    }
    canvas.addEventListener("keydown", keydown);
    function keyup(event) {
        comm.notify({
            keyup: event.code
        });
        return false;
    }
    canvas.addEventListener("keyup", keyup);
    function contextmenu(event) {
        comm.notify({
            keyup: "delete_keys"
        });
        return false;
    }
    canvas.addEventListener("contextmenu", (e)=>e.preventDefault());
    canvas.addEventListener("focusout", contextmenu);
    function resize_callback() {
        const bodyStyle = window.getComputedStyle(document.body);
        const width_padding = parseInt(bodyStyle.paddingLeft, 10) + parseInt(bodyStyle.paddingRight, 10) + parseInt(bodyStyle.marginLeft, 10) + parseInt(bodyStyle.marginRight, 10);
        const height_padding = parseInt(bodyStyle.paddingTop, 10) + parseInt(bodyStyle.paddingBottom, 10) + parseInt(bodyStyle.marginTop, 10) + parseInt(bodyStyle.marginBottom, 10);
        const width = (window.innerWidth - width_padding) * pixelRatio1;
        const height = (window.innerHeight - height_padding) * pixelRatio1;
        comm.notify({
            resize: [
                width,
                height
            ]
        });
    }
    if (resize_to_body) {
        const resize_callback_throttled = throttle_function(resize_callback, 100);
        window.addEventListener("resize", (event)=>resize_callback_throttled());
        resize_callback_throttled();
    }
    return renderer;
}
function create_scene(wrapper, canvas, canvas_width, scenes, comm, width, height, texture_atlas_obs, fps, resize_to_body) {
    const renderer = threejs_module(canvas, comm, width, height, resize_to_body);
    TEXTURE_ATLAS[0] = texture_atlas_obs;
    if (renderer) {
        const camera = new mod.PerspectiveCamera(45, 1, 0, 100);
        camera.updateProjectionMatrix();
        const size = new mod.Vector2();
        renderer.getDrawingBufferSize(size);
        const picking_target = new mod.WebGLRenderTarget(size.x, size.y);
        const screen = {
            renderer,
            picking_target,
            camera,
            fps,
            canvas
        };
        const three_scene = deserialize_scene(scenes, screen);
        console.log(three_scene);
        start_renderloop(three_scene);
        canvas_width.on((w_h)=>{
            const pixelRatio = renderer.getPixelRatio();
            renderer.setSize(w_h[0] / pixelRatio, w_h[1] / pixelRatio);
        });
    } else {
        const warning = getWebGLErrorMessage();
        wrapper.appendChild(warning);
    }
}
function set_picking_uniforms(scene, last_id, picking, picked_plots, plots, id_to_plot) {
    scene.children.forEach((plot, index)=>{
        const { material  } = plot;
        const { uniforms  } = material;
        if (picking) {
            uniforms.object_id.value = last_id + index;
            uniforms.picking.value = true;
            material.blending = mod.NoBlending;
        } else {
            uniforms.picking.value = false;
            material.blending = mod.NormalBlending;
            const id = uniforms.object_id.value;
            if (id in picked_plots) {
                plots.push([
                    plot,
                    picked_plots[id]
                ]);
                id_to_plot[id] = plot;
            }
        }
    });
    let next_id = last_id + scene.children.length;
    scene.scene_children.forEach((scene)=>{
        next_id = set_picking_uniforms(scene, next_id, picking, picked_plots, plots, id_to_plot);
    });
    return next_id;
}
function pick_native(scene, x, y, w, h) {
    const { renderer , picking_target  } = scene.screen;
    renderer.setRenderTarget(picking_target);
    set_picking_uniforms(scene, 1, true);
    render_scene(scene, true);
    renderer.setRenderTarget(null);
    const nbytes = w * h * 4;
    const pixel_bytes = new Uint8Array(nbytes);
    renderer.readRenderTargetPixels(picking_target, x, y, w, h, pixel_bytes);
    const picked_plots = {};
    const picked_plots_array = [];
    const reinterpret_view = new DataView(pixel_bytes.buffer);
    for(let i = 0; i < pixel_bytes.length / 4; i++){
        const id = reinterpret_view.getUint16(i * 4);
        const index = reinterpret_view.getUint16(i * 4 + 2);
        picked_plots_array.push([
            id,
            index
        ]);
        picked_plots[id] = index;
    }
    const plots = [];
    const id_to_plot = {};
    set_picking_uniforms(scene, 0, false, picked_plots, plots, id_to_plot);
    const picked_plots_matrix = picked_plots_array.map(([id, index])=>{
        const p = id_to_plot[id];
        return [
            p ? p.plot_uuid : null,
            index
        ];
    });
    const plot_matrix = {
        data: picked_plots_matrix,
        size: [
            w,
            h
        ]
    };
    return [
        plot_matrix,
        plots
    ];
}
function pick_closest(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, _] = pick_native(scene, x0, y0, dx, dy);
    const plot_matrix = plot_data.data;
    let min_dist = range ^ 2;
    let selection = [
        null,
        0
    ];
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            if (d < min_dist && plot_uuid) {
                min_dist = d;
                selection = [
                    plot_uuid,
                    index
                ];
            }
        }
    }
    return selection;
}
function pick_sorted(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return null;
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, selected] = pick_native(scene, x0, y0, dx, dy);
    if (selected.length == 0) {
        return null;
    }
    const plot_matrix = plot_data.data;
    const distances = selected.map((x)=>range ^ 2);
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            const plot_index = selected.findIndex((x)=>x[0].plot_uuid == plot_uuid);
            if (plot_index >= 0 && d < distances[plot_index]) {
                distances[plot_index] = d;
            }
        }
    }
    const sorted_indices = Array.from(Array(distances.length).keys()).sort((a, b)=>distances[a] < distances[b] ? -1 : distances[b] < distances[a] | 0);
    return sorted_indices.map((idx)=>{
        const [plot, index] = selected[idx];
        return [
            plot.plot_uuid,
            index
        ];
    });
}
function pick_native_uuid(scene, x, y, w, h) {
    const [_, picked_plots] = pick_native(scene, x, y, w, h);
    return picked_plots.map(([p, index])=>[
            p.plot_uuid,
            index
        ]);
}
function pick_native_matrix(scene, x, y, w, h) {
    const [matrix, _] = pick_native(scene, x, y, w, h);
    return matrix;
}
function register_popup(popup, scene, plots_to_pick, callback) {
    if (!scene || !scene.screen) {
        return;
    }
    const { canvas  } = scene.screen;
    canvas.addEventListener("mousedown", (event)=>{
        if (!popup.classList.contains("show")) {
            popup.classList.add("show");
        }
        popup.style.left = event.pageX + "px";
        popup.style.top = event.pageY + "px";
        const [x, y] = event2scene_pixel(scene, event);
        const [_, picks] = pick_native(scene, x, y, 1, 1);
        if (picks.length == 1) {
            const [plot, index] = picks[0];
            if (plots_to_pick.has(plot.plot_uuid)) {
                const result = callback(plot, index);
                if (typeof result === "string" || result instanceof String) {
                    popup.innerText = result;
                } else {
                    popup.innerHTML = result;
                }
            }
        } else {
            popup.classList.remove("show");
        }
    });
    canvas.addEventListener("keyup", (event)=>{
        if (event.key === "Escape") {
            popup.classList.remove("show");
        }
    });
}
window.WGL = {
    deserialize_scene,
    threejs_module,
    start_renderloop,
    delete_plots,
    insert_plot,
    find_plots,
    delete_scene,
    find_scene,
    scene_cache,
    plot_cache,
    delete_scenes,
    create_scene,
    event2scene_pixel,
    on_next_insert,
    register_popup,
    render_scene
};
export { deserialize_scene as deserialize_scene, threejs_module as threejs_module, start_renderloop as start_renderloop, delete_plots as delete_plots, insert_plot as insert_plot, find_plots as find_plots, delete_scene as delete_scene, find_scene as find_scene, scene_cache as scene_cache, plot_cache as plot_cache, delete_scenes as delete_scenes, create_scene as create_scene, event2scene_pixel as event2scene_pixel, on_next_insert as on_next_insert };
export { render_scene as render_scene };
export { pick_native as pick_native };
export { pick_closest as pick_closest };
export { pick_sorted as pick_sorted };
export { pick_native_uuid as pick_native_uuid };
export { pick_native_matrix as pick_native_matrix };
export { register_popup as register_popup };

" type="module"></script>
    </div>
  </div>
  <div data-jscall-id="5">
    <script src="data:application/javascript;base64,    JSServe.lock_loading(() => {
        return JSServe.fetch_binary('data:application/octet-stream;base64,kscsapPZJGIyMTViYmRlLTdlZGQtNDNmNC04Y2Y1LTU1MTIxZjdjMTkxNoCjc3VigqdwYXlsb2Fkk8kAFnaWa5LHLGqT2SRiMjE1YmJkZS03ZWRkLTQzZjQtOGNmNS01NTEyMWY3YzE5MTaAo3N1YoKncGF5bG9hZJbIAjprkse/apPZJGIyMTViYmRlLTdlZGQtNDNmNC04Y2Y1LTU1MTIxZjdjMTkxNoOzODc5MDAwNDUxMjQzMTE2NTA2NscWZZKzODc5MDAwNDUxMjQzMTE2NTA2NgG0MTAzMTg2MDE0MTA1MDQ1MzI4NjHHF2WStDEwMzE4NjAxNDEwNTA0NTMyODYxAbMyNDkxODM1NjIzNzkxMDc3MDIzxyBlkrMyNDkxODM1NjIzNzkxMDc3MDIzmgECAwQFBgcICQqjc3Vig6NvYnPHFWi0MTAzMTg2MDE0MTA1MDQ1MzI4NjGncGF5bG9hZMgBQ2aTgrQxMTAzMjk5NTA5NjE3MzYyMzUzMccUaLM4NzkwMDA0NTEyNDMxMTY1MDY2tDEwNjk3Mjc2Mzc1NTk5NzYyNTYzxxRoszI0OTE4MzU2MjM3OTEwNzcwMjPZqXJldHVybiAoaW5kZXgpID0+IHsKICAgIGNvbnN0IHZhbHVlcyA9IF9fbG9va3VwX2ludGVycG9sYXRlZCgnMTA2OTcyNzYzNzU1OTk3NjI1NjMnKS52YWx1ZQogICAgX19sb29rdXBfaW50ZXJwb2xhdGVkKCcxMTAzMjk5NTA5NjE3MzYyMzUzMScpLm5vdGlmeSh2YWx1ZXNbaW5kZXggLSAxXSkKfQrZPC9ob21lL3J1bm5lci8uanVsaWEvcGFja2FnZXMvSlNTZXJ2ZS90dUREWS9zcmMvd2lkZ2V0cy5qbDo1Nahtc2dfdHlwZaExyAFXa5LHW2qT2SRiMjE1YmJkZS03ZWRkLTQzZjQtOGNmNS01NTEyMWY3YzE5MTaBszM4NDM1MTUyNjMxMDg2NDk3MTbHGGWSszM4NDM1MTUyNjMxMDg2NDk3MTaiMTCjc3Vig6NvYnPHFGizMzg0MzUxNTI2MzEwODY0OTcxNqdwYXlsb2Fkx8Zmk4DZanJldHVybiB2YWx1ZT0+IEpTU2VydmUudXBkYXRlX25vZGVfYXR0cmlidXRlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWpzY2FsbC1pZD0iNyJdJyksICdtYXgnLCB2YWx1ZSnZVi9ob21lL3J1bm5lci8uanVsaWEvcGFja2FnZXMvSlNTZXJ2ZS90dUREWS9zcmMvcmVuZGVyaW5nL2h5cGVyc2NyaXB0X2ludGVncmF0aW9uLmpsOjkxqG1zZ190eXBloTHIAVhrksdaapPZJGIyMTViYmRlLTdlZGQtNDNmNC04Y2Y1LTU1MTIxZjdjMTkxNoGzNTczMTA1NTE1Mzk0MDExODA4N8cXZZKzNTczMTA1NTE1Mzk0MDExODA4N6Exo3N1YoOjb2JzxxRoszU3MzEwNTUxNTM5NDAxMTgwODencGF5bG9hZMfIZpOA2WxyZXR1cm4gdmFsdWU9PiBKU1NlcnZlLnVwZGF0ZV9ub2RlX2F0dHJpYnV0ZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjciXScpLCAndmFsdWUnLCB2YWx1ZSnZVi9ob21lL3J1bm5lci8uanVsaWEvcGFja2FnZXMvSlNTZXJ2ZS90dUREWS9zcmMvcmVuZGVyaW5nL2h5cGVyc2NyaXB0X2ludGVncmF0aW9uLmpsOjkxqG1zZ190eXBloTHIATVrksdaapPZJGIyMTViYmRlLTdlZGQtNDNmNC04Y2Y1LTU1MTIxZjdjMTkxNoGzNjg5MzIxNzczODU4ODAyNjUwOMcXZZKzNjg5MzIxNzczODU4ODAyNjUwOKExo3N1YoOjb2JzxxRoszY4OTMyMTc3Mzg1ODgwMjY1MDincGF5bG9hZMelZpOA2VVyZXR1cm4gKHZhbCk9PiB7CiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjgiXScpLmlubmVyVGV4dCA9IHZhbAp92UovaG9tZS9ydW5uZXIvLmp1bGlhL3BhY2thZ2VzL0pTU2VydmUvdHVERFkvc3JjL3JlbmRlcmluZy9vYnNlcnZhYmxlcy5qbDo4Nahtc2dfdHlwZaExyQAWbqVrkshHnGqT2SRiMjE1YmJkZS03ZWRkLTQzZjQtOGNmNS01NTEyMWY3YzE5MTbeASO0MTQzMDQzODQ2NDkzNDEzMTgyMjTHGmWStDE0MzA0Mzg0NjQ5MzQxMzE4MjI0k6CQALM1MDg5MDMwNjExMDQzNDA1Mzg0xxZlkrM1MDg5MDMwNjExMDQzNDA1Mzg0wrQxNzU5ODE1NDc2MzkxMzQ5MTk2OccbZZK0MTc1OTgxNTQ3NjM5MTM0OTE5NjmkZGF0YbQxNTIxNTQ5MjA1NjU2ODEzNjI2NscXZZK0MTUyMTU0OTIwNTY1NjgxMzYyNjbCtDE0MTQ3Mzk3MjkzNjE2MjM0OTQwxxdlkrQxNDE0NzM5NzI5MzYxNjIzNDk0MMK0MTEwNjA0NTczMTM0MzQwMzA3MjTHF2WStDExMDYwNDU3MzEzNDM0MDMwNzI0w7QxMTY0NzUxOTIzNTAwODYzMDM2NscXZZK0MTE2NDc1MTkyMzUwMDg2MzAzNjbDszM0NzYyMDgzNDU1NDcxNjg3OTLHG2WSszM0NzYyMDgzNDU1NDcxNjg3OTKlcGl4ZWy0MTExNzcyNTIwNTM1MjQ1MTM0MDXHF2WStDExMTc3MjUyMDUzNTI0NTEzNDA1w7QxMDM2Nzk4NDI3NjQ5Njg0MTQyNscXZZK0MTAzNjc5ODQyNzY0OTY4NDE0MjbDszE0NzEwMjMwOTIwNDcwNDIxMjLHFmWSszE0NzEwMjMwOTIwNDcwNDIxMjLCtDEwOTQ0ODQ3ODY1ODgyNTcyMTg0xyhlkrQxMDk0NDg0Nzg2NTg4MjU3MjE4NNgVAAAAAAAAAAAgAwAAWAIAALMyMTMzNjc4NTY1MDgzNTkwODgwxxllkrMyMTMzNjc4NTY1MDgzNTkwODgwk6CQALQxNjA3MjAwMzM4NTk4NTUxNTUxMscxZZK0MTYwNzIwMDMzODU5ODU1MTU1MTLHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAAC0MTY5MTUzODA2MDY0OTk2Nzg1MTjHHWWStDE2OTE1MzgwNjA2NDk5Njc4NTE4kqRub25lkLQxNjQ2NDg3MjM1NTUwNTk1OTU2NscdZZK0MTY0NjQ4NzIzNTU1MDU5NTk1NjaSpG5vbmWQszE1MjYxMzQ4MTc0ODA0NTI5MDfHFmWSszE1MjYxMzQ4MTc0ODA0NTI5MDfDszMxNTg0NDExNDM4MzkwNzgxNDTHJ2WSszMxNTg0NDExNDM4MzkwNzgxNDTYFaoBAAArAAAAZgEAAB0CAAC0MTUxNTE0MzgyNDk5MDQwMjIwMjDHG2WStDE1MTUxNDM4MjQ5OTA0MDIyMDIwpGRhdGG0MTM4NjczMDY3MzcyMDU2NzQ4NDfHG2WStDEzODY3MzA2NzM3MjA1Njc0ODQ3pGRhdGGzNTAxNzI2MTg1MDIzNDE3NzYxMscZZZKzNTAxNzI2MTg1MDIzNDE3NzYxMpOgkACzMTI1MTkzOTIwMDMyMzMxOTUxMccWZZKzMTI1MTkzOTIwMDMyMzMxOTUxMcKzMzc4MzMzMjc2OTMxNDY5ODQwMMcwZZKzMzc4MzMzMjc2OTMxNDY5ODQwMMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNzYxNjMzNDcxNjExMTUzODUyMccXZZK0MTc2MTYzMzQ3MTYxMTE1Mzg1MjHCszUxNzQyNjYyMTQ5MDE0OTg1NTfHGmWSszUxNzQyNjYyMTQ5MDE0OTg1NTekZGF0YbMzNzMzMzY1NjA2MjQwOTU3Mzk3xxplkrMzNzMzMzY1NjA2MjQwOTU3Mzk3pGRhdGG0MTI0MjI1MTc5MTcyMjg5ODkxMDLHqWWStDEyNDIyNTE3OTE3MjI4OTg5MTAyx5AWAAAAAAEAAAACAAAAAAAAAAIAAAADAAAABAAAAAUAAAAGAAAABAAAAAYAAAAHAAAACAAAAAkAAAAKAAAACAAAAAoAAAALAAAADAAAAA0AAAAOAAAADAAAAA4AAAAPAAAAEAAAABEAAAASAAAAEAAAABIAAAATAAAAFAAAABUAAAAWAAAAFAAAABYAAAAXAAAAsjc0OTIzNTQ1NjE3NDEyMjYxMscYZZKyNzQ5MjM1NDU2MTc0MTIyNjEyk6CQALI0MjY3NzAwNTQ0NTM4OTMzMTDHGGWSsjQyNjc3MDA1NDQ1Mzg5MzMxMJOgkAC0MTM3NDE0OTc3MjU0NDIyNTA1NzfHF2WStDEzNzQxNDk3NzI1NDQyMjUwNTc3wrM3ODg0Mjc1NTMyNzg1NzUyMzY0xxZlkrM3ODg0Mjc1NTMyNzg1NzUyMzY0wrQxNjE4NDk3NjA5OTEyNzM2MTQyM8caZZK0MTYxODQ5NzYwOTkxMjczNjE0MjOToJAAszc2NDAxMzMzMTQ3OTgxNDg5ODfHFmWSszc2NDAxMzMzMTQ3OTgxNDg5ODfCszc1Mzc2ODEwNjM3OTc5NjE0OTnHGWWSszc1Mzc2ODEwNjM3OTc5NjE0OTmToJAAtDExNzM3NTA4NzQzNzM2Mjg3MjE0xzFlkrQxMTczNzUwODc0MzczNjI4NzIxNMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxMzAyOTAwMjY5MjY3NDA5MDMzNccbZZK0MTMwMjkwMDI2OTI2NzQwOTAzMzWkZGF0YbM0OTA5NjYyNzcxNTUyNjI5MzY5xxZlkrM0OTA5NjYyNzcxNTUyNjI5MzY5wrMxMDI2NDA4MzA0OTE3NTQ0MTcyxydlkrMxMDI2NDA4MzA0OTE3NTQ0MTcy2BUQAAAAKwAAAGYBAAAdAgAAtDExOTc4MDcxNTg0Mzk0MjA4ODc2xzFlkrQxMTk3ODA3MTU4NDM5NDIwODg3NscYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNDU3NDkwMjI3NjY2NTg1OTcyMccXZZK0MTQ1NzQ5MDIyNzY2NjU4NTk3MjHCszUzMzY2NzEzODg4ODg4Mzc0OTnHFmWSszUzMzY2NzEzODg4ODg4Mzc0OTnCtDEyNzcwNDUxMjgwMTYyNDU3Nzg5xxplkrQxMjc3MDQ1MTI4MDE2MjQ1Nzc4OZOgkAC0MTI0NDQxMDE1OTM3OTMwMTg4MTjHMWWStDEyNDQ0MTAxNTkzNzkzMDE4ODE4xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszkxNDM0MjY0MjI2MzEzNzk0MjTHGmWSszkxNDM0MjY0MjI2MzEzNzk0MjSkZGF0YbQxNDc2ODYwNzc0MjEyMjQ2MzM5N8cXZZK0MTQ3Njg2MDc3NDIxMjI0NjMzOTfCszYyMDI3MDI5NDkzNzU5MzUzNjjHHGWSszYyMDI3MDI5NDkzNzU5MzUzNjiSpG5vbmWQszg0NTMwNTkxNDUxMjkxMzU4MDnHFmWSszg0NTMwNTkxNDUxMjkxMzU4MDnCszMzNjk5NTk2MDQxODM4NDYzNTTHFmWSszMzNjk5NTk2MDQxODM4NDYzNTTDtDE3OTE5ODc4OTk4MDIxNDc5MjcwxxdlkrQxNzkxOTg3ODk5ODAyMTQ3OTI3MMKzMzg0OTg3MTg1MjI1NzA5NjY5NcccZZKzMzg0OTg3MTg1MjI1NzA5NjY5NZKkbm9uZZC0MTE4MzM3NDEwMTIyMjI4Nzk5OTbHMWWStDExODMzNzQxMDEyMjIyODc5OTk2xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDE1MDg1NTg5NjMxMzA5OTM5OTA4xx1lkrQxNTA4NTU4OTYzMTMwOTkzOTkwOJKkbm9uZZC0MTMxNTc0NjcyMjYxNDU5NzI3MzHHF2WStDEzMTU3NDY3MjI2MTQ1OTcyNzMxwrMxNzA5MjE1MTU2ODQ1ODczMDc5xxllkrMxNzA5MjE1MTU2ODQ1ODczMDc5k6CQALQxMDA4NTg2OTIxNjUwNjM1NzAwMMcXZZK0MTAwODU4NjkyMTY1MDYzNTcwMDDCtDExODY3MTk4NzM4NzYyMzY2NTAwxzFlkrQxMTg2NzE5ODczODc2MjM2NjUwMMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNzIxMzA5OTIxNTIwNjI2ODkyM8cXZZK0MTcyMTMwOTkyMTUyMDYyNjg5MjPDtDE4MjcyNzk3NTMxNDM4MzEyNjg1xxplkrQxODI3Mjc5NzUzMTQzODMxMjY4NZOgkACzMTUwMjczMzk2MzAyMjYzMjE3OccWZZKzMTUwMjczMzk2MzAyMjYzMjE3OcKzNDc3MjA4NDc3OTE4NDA0Njg4OMcaZZKzNDc3MjA4NDc3OTE4NDA0Njg4OKRkYXRhtDE0NjU5MDg2NDE3NzE5NjkzMjE0xxplkrQxNDY1OTA4NjQxNzcxOTY5MzIxNJOgkAC0MTAyNTEwNDk5MDUxMjE5NDA3MDbHMWWStDEwMjUxMDQ5OTA1MTIxOTQwNzA2xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszU5MTAwNjIxNzU0MTEyMTU1OTnHGmWSszU5MTAwNjIxNzU0MTEyMTU1OTmkZGF0YbM3MDE0ODIyMTI3MDMzMDc5MzY0xxZlkrM3MDE0ODIyMTI3MDMzMDc5MzY0wrE0NzQyMTU1NTEwODgzNDMwMscUZZKxNDc0MjE1NTUxMDg4MzQzMDLDtDE3Nzg1MzQyNTU5MDA3NzQ3NjU5xxdlkrQxNzc4NTM0MjU1OTAwNzc0NzY1OcKzMzQwMzU3MDMyOTUxNjU0NDQwNMccZZKzMzQwMzU3MDMyOTUxNjU0NDQwNJKkbm9uZZC0MTI1NzE5NjU5ODcxODM5Nzk0MjDHMWWStDEyNTcxOTY1OTg3MTgzOTc5NDIwxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDE0MzExNzg4MDYyNDQ3NTQ4MTQ1xxdlkrQxNDMxMTc4ODA2MjQ0NzU0ODE0NcK0MTAxOTY1MDYwNzMxNDc5NjE0MzXHHmWStDEwMTk2NTA2MDczMTQ3OTYxNDM1pyNGRkZGRka0MTAzMDAwNDQ3MTc4MDcwMjM1MDDHF2WStDEwMzAwMDQ0NzE3ODA3MDIzNTAww7QxODEzMDAwMzU4MTYzOTM4NzU3OMcXZZK0MTgxMzAwMDM1ODE2MzkzODc1NzjCszgzNjI0MTQ0ODgzODQ4MTYyNznHMGWSszgzNjI0MTQ0ODgzODQ4MTYyNznHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTEwNzQwNzE1OTA2NTQ1NDg3NTjHHmWStDExMDc0MDcxNTkwNjU0NTQ4NzU4pyNGRkZGRka0MTc5MjkyNTUyMTU4MTE3MzE0OTbHHGWStDE3OTI5MjU1MjE1ODExNzMxNDk2pXBpeGVsszE1MTc0MTYzMjU5MjMyODcyNTXHFmWSszE1MTc0MTYzMjU5MjMyODcyNTXCszgxNjQ1MDIyMjU2NTc1NDc5ODTHHGWSszgxNjQ1MDIyMjU2NTc1NDc5ODSSpG5vbmWQtDEwNTgyNzU0OTQ4NzIzNDAwMzI2xxdlkrQxMDU4Mjc1NDk0ODcyMzQwMDMyNsK0MTM1MjY3MjczODYzNTM2MDUzMTjHHWWStDEzNTI2NzI3Mzg2MzUzNjA1MzE4kqRub25lkLQxNzA5NTUwNzE0NTUxNTE3MDg0MscxZZK0MTcwOTU1MDcxNDU1MTUxNzA4NDLHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTI5MTA4MDgzMDk2NDMwMzQ1NjTHtmWStDEyOTEwODA4MzA5NjQzMDM0NTY0lMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD/HQBcK1yM7AAAAAAAAAAAAAAAAAAAAAA50WjsAAAAAAAAAAAAAAAAAAAAAF7fRuAAAAAAAAIC/AACAvwAAAIAAAIA/1xcAAEhEAAAWRMcMFwAAgD8AAIA/AACAP7I0ODM1Njg0NTc2Mzc2MDEzODbHGWWSsjQ4MzU2ODQ1NzYzNzYwMTM4NqRkYXRhszYzNDg4NzMwOTc5ODI5ODYwMzDHFmWSszYzNDg4NzMwOTc5ODI5ODYwMzDCszQyODUxMjQ0NTc4NDI1MTY1OTjHFmWSszQyODUxMjQ0NTc4NDI1MTY1OTjCszkzMDk5Mzk4MTQ0NDIwMjQ2NTLHFmWSszkzMDk5Mzk4MTQ0NDIwMjQ2NTLDszcyNjk5MTQzNTIzMzEwMTg1ODbHMGWSszcyNjk5MTQzNTIzMzEwMTg1ODbHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAACzMTE1MDQ2OTUxNzY0ODU2NTY1MsccZZKzMTE1MDQ2OTUxNzY0ODU2NTY1MpKkbm9uZZCzNTQ4NDA1NzU0NjM1MTEzOTMyM610cmFja2luZy1vbmx5szc1MTEzMDg4MDkxMTMxMjcxMznHFmWSszc1MTEzMDg4MDkxMTMxMjcxMznDtDE3NzM3NjgzNjE4NjAxMDM2MzA5xxplkrQxNzczNzY4MzYxODYwMTAzNjMwOZOgkACzMzIxNzcwMTI1ODIxOTAzMzQxM8cWZZKzMzIxNzcwMTI1ODIxOTAzMzQxM8KzMTE4NDQ5ODY3Njc3MjY5MDQzOMcaZZKzMTE4NDQ5ODY3Njc3MjY5MDQzOKRkYXRhtDEyODI3NjY1NjI0MDExNTU2NjU4xxplkrQxMjgyNzY2NTYyNDAxMTU1NjY1OJOgkAC0MTEzODI2MDQ4MDkwODg2NzkxMjPHHWWStDExMzgyNjA0ODA5MDg4Njc5MTIzkqRub25lkLQxMjI5MzExNzk5NDg2MTA3MTUwNccdZZK0MTIyOTMxMTc5OTQ4NjEwNzE1MDWSpG5vbmWQtDEzMTE5NTk2NDIxNDc1MzM0NzUxxxtlkrQxMzExOTU5NjQyMTQ3NTMzNDc1MaRkYXRhtDExODgyNDg0OTg0Nzg5OTQ2NDIxxzFlkrQxMTg4MjQ4NDk4NDc4OTk0NjQyMccYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALI0OTYwNzM2ODU0MzYxNDE5NjTHGGWSsjQ5NjA3MzY4NTQzNjE0MTk2NJOgkACzODczOTQ0NDU3NDEzNzExMTQ3MMccZZKzODczOTQ0NDU3NDEzNzExMTQ3MJKkbm9uZZCzODc2MTE2NTU5MTcxNzIxNzYwM8cwZZKzODc2MTE2NTU5MTcxNzIxNzYwM8cYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALM0MDgzMjYyNjMwMDc3NjQ1NjY1xzBlkrM0MDgzMjYyNjMwMDc3NjQ1NjY1xxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAsjU4MTAwMzgwOTQ4OTc3Mzk5M8cVZZKyNTgxMDAzODA5NDg5NzczOTkzw7QxMzA3MjI1MDM0ODM0MjIxNDIxMMcXZZK0MTMwNzIyNTAzNDgzNDIyMTQyMTDDszg2OTkwMDQwNjA4NDcyMzMwMTHHFmWSszg2OTkwMDQwNjA4NDcyMzMwMTHCszU0MTM2MTYxNTU2MzEzMDgyNDDHHWWSszU0MTM2MTYxNTU2MzEzMDgyNDCnI0ZGRkZGRrM0OTEwMDM5NTE3MTg4MDM4MDQ1x7VlkrM0OTEwMDM5NTE3MTg4MDM4MDQ1lMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD/HQBfNzEw+AAAAAAAAAAAAAAAAAAAAAM3MTD4AAAAAAAAAAAAAAAAAAAAAF7fRuAAAAADNzIy/zcyMvwAAAIAAAIA/1xcAALNDAEAHRMcMFwAAgD8AAIA/AACAP7QxODM4NjA3NjU3MDUxMTc0MDUzMscbZZK0MTgzODYwNzY1NzA1MTE3NDA1MzKkZGF0YbM3ODIxNzkwMjYwMDQ3ODE0MDc3xxxlkrM3ODIxNzkwMjYwMDQ3ODE0MDc3kqRub25lkLMyNDI1MDgwOTA3ODQ2MzIzNjgyxxllkrMyNDI1MDgwOTA3ODQ2MzIzNjgyk6CQALQxMzU4MDQ0Njk4MTczOTYxNDQ0NMcXZZK0MTM1ODA0NDY5ODE3Mzk2MTQ0NDTDsjIxMzIwNDg0MDM3NTA0MTQzNscVZZKyMjEzMjA0ODQwMzc1MDQxNDM2w7QxNDI0ODA1ODc3NTI5ODA0NzY1M8cdZZK0MTQyNDgwNTg3NzUyOTgwNDc2NTOSpG5vbmWQtDE2NDc5ODA1MzQ1OTE0NjU5MzI0xxtlkrQxNjQ3OTgwNTM0NTkxNDY1OTMyNKRkYXRhtDE3OTA0ODQ5OTgxMDU0MDM2ODIzxxplkrQxNzkwNDg0OTk4MTA1NDAzNjgyM5OgkAC0MTgyOTc4NTE4NjgwMDg3NjA0MTfHHWWStDE4Mjk3ODUxODY4MDA4NzYwNDE3kqRub25lkLM1MzEzODg3MzAyNjE5MTYxNjk0xxZlkrM1MzEzODg3MzAyNjE5MTYxNjk0wrM2MTc1ODI0MTk5MDc0MDMzNzU3xxZlkrM2MTc1ODI0MTk5MDc0MDMzNzU3wrM5MTU4OTAyNzEzMTIwMDkwMzI1xxplkrM5MTU4OTAyNzEzMTIwMDkwMzI1pGRhdGGzMjY1NDkxNDUzNTc5ODM0NDczM8ccZZKzMjY1NDkxNDUzNTc5ODM0NDczM5Kkbm9uZZCzMjk1NzE1MjY4MDU0ODg2ODkxMccnZZKzMjk1NzE1MjY4MDU0ODg2ODkxMdgVAAAAAAAAAAAgAwAAWAIAALMxNDE2NTA0NjI3MTQ2NjA3MzMzxzBlkrMxNDE2NTA0NjI3MTQ2NjA3MzMzxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszIwMzkxNTE5MzMzNDQ0NjQ1MTHHMGWSszIwMzkxNTE5MzMzNDQ0NjQ1MTHHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNTM3ODIyNzUxMzg4NDM3MTE2NscWZZKzNTM3ODIyNzUxMzg4NDM3MTE2NsKzNTY1MjExMjg3MzM1MTM0NTk1NccWZZKzNTY1MjExMjg3MzM1MTM0NTk1NcKyNTA3Njk3NDc3NTU3MjI5NTg2xxtlkrI1MDc2OTc0Nzc1NTcyMjk1ODaSpG5vbmWQszE5MTI3NDYxMjc3NjIwODg1ODPHFmWSszE5MTI3NDYxMjc3NjIwODg1ODPCszM1ODEzOTg5OTAyMzkzMzY1NTHHFmWSszM1ODEzOTg5OTAyMzkzMzY1NTHCtDE0ODU3Mzk5MzA1MzkwNTQ0NjMxxxdlkrQxNDg1NzM5OTMwNTM5MDU0NDYzMcKzNDI5MjA0NDY0NzYwNDQzNjQwNMccZZKzNDI5MjA0NDY0NzYwNDQzNjQwNJKkbm9uZZCzOTU4OTIxNzUzODk0OTc3NDk0OccaZZKzOTU4OTIxNzUzODk0OTc3NDk0OaRkYXRhszE0NDAzNDk5MjU4ODExMDUzOTbHMGWSszE0NDAzNDk5MjU4ODExMDUzOTbHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzMTg1Mjg1MTMwNjk1MjI3NjA3MscaZZKzMTg1Mjg1MTMwNjk1MjI3NjA3MqRkYXRhtDEwOTMxMzA4MjIxMDE4ODgyOTE5xxtlkrQxMDkzMTMwODIyMTAxODg4MjkxOaRkYXRhszcwMTE0NTA3NDYyMDUwMzUzNjjHGWWSszcwMTE0NTA3NDYyMDUwMzUzNjiToJAAszQ0MzE2MDQ3NTc3NjA3NzMzOTnHFmWSszQ0MzE2MDQ3NTc3NjA3NzMzOTnCtDEzNDQ3OTM1Nzg3OTQ3OTc5NjAzxxdlkrQxMzQ0NzkzNTc4Nzk0Nzk3OTYwM8K0MTc4MjY5ODUxMjgxNTg0NzI1ODfHF2WStDE3ODI2OTg1MTI4MTU4NDcyNTg3wrQxNjYyODY3NTYwNTAxMjgwMzkzMMcdZZK0MTY2Mjg2NzU2MDUwMTI4MDM5MzCSpG5vbmWQszg2MjYwOTI0MzI4NzE4NzI5NzjHHGWSszg2MjYwOTI0MzI4NzE4NzI5NziSpG5vbmWQtDEzMjY1MzA1NzI5NjgwNjM1OTA3xxdlkrQxMzI2NTMwNTcyOTY4MDYzNTkwN8KzODg4NDcxNjg2MjcxODMzOTM1M8cWZZKzODg4NDcxNjg2MjcxODMzOTM1M8KzNzk5NzkzODQ3ODIzMTkwMjk0M8cZZZKzNzk5NzkzODQ3ODIzMTkwMjk0M5OgkACzMTY4NDkwMjEyODY0NTcwNjI0M8cWZZKzMTY4NDkwMjEyODY0NTcwNjI0M4C0MTE3NDEzMzIxMDAwMDk1NDAwODfHMWWStDExNzQxMzMyMTAwMDA5NTQwMDg3xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDE3ODQ2MDk5MTkwMDQ3MjAwODYyxxdlkrQxNzg0NjA5OTE5MDA0NzIwMDg2MsKzMjI1NDU1MDkzNzUzMjYyMDg5NccWZZKzMjI1NDU1MDkzNzUzMjYyMDg5NcKzODA0NjgzNjQxOTc3MjAxNDA3Mse1ZZKzODA0NjgzNjQxOTc3MjAxNDA3MpTHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/x0AXCtcjOwAAAAAAAAAAAAAAAAAAAAAOdFo7AAAAAAAAAAAAAAAAAAAAABe30bgAAAAAAACAvwAAgL8AAACAAACAP9cXAABIRAAAFkTHDBcAAIA/AACAPwAAgD+0MTUyMjk4NjEzMzkwOTkyOTc3OTfHG2WStDE1MjI5ODYxMzM5MDk5Mjk3Nzk3pGRhdGGzOTcyMzQzODA1MzA0OTQzNTUyNscWZZKzOTcyMzQzODA1MzA0OTQzNTUyNsKzNTI3MjUzMjQ4MTAzNzkxODg0OccnZZKzNTI3MjUzMjQ4MTAzNzkxODg0OdgVAAAAAAAAAAAgAwAAWAIAALM5OTc2NzM2MDQ5NjYzMDczOTQ3xzBlkrM5OTc2NzM2MDQ5NjYzMDczOTQ3xxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAszM5NzY3NDM1ODg1MTAyOTcyOTXHGWWSszM5NzY3NDM1ODg1MTAyOTcyOTWToJAAszM1MTU4MjczODE5MTU2NDg0ODXHMGWSszM1MTU4MjczODE5MTU2NDg0ODXHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTcyMjkyNjgxMDE2NTA4NjEyMDHHMWWStDE3MjI5MjY4MTAxNjUwODYxMjAxxxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAtDE2MTI5OTU4NzE4MDc2NTEwMDA5xxdlkrQxNjEyOTk1ODcxODA3NjUxMDAwOcO0MTU0MDUyNDIwNzM0MDU1NjE2NjnHMWWStDE1NDA1MjQyMDczNDA1NTYxNjY5xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDEwNzM0NjQ1NDc1MDc4MDAwMTA4xxtlkrQxMDczNDY0NTQ3NTA3ODAwMDEwOKRkYXRhtDE0NDg5MDg2NzM1MTI5ODc4MzUxxx1lkrQxNDQ4OTA4NjczNTEyOTg3ODM1MZKkbm9uZZC0MTQxMDk4NzUxMDIzNTgxNjY4ODbHGmWStDE0MTA5ODc1MTAyMzU4MTY2ODg2k6CQALQxMjkxMjY5NDM4NTI0NjAxMDE3NccaZZK0MTI5MTI2OTQzODUyNDYwMTAxNzWToJAAszcwMjI3MDI5MDQ1Mzk4NTUxNjnHG2WSszcwMjI3MDI5MDQ1Mzk4NTUxNjmlcGl4ZWy0MTczNDIyMTUyOTE5NDAwMDU4ODPHGmWStDE3MzQyMjE1MjkxOTQwMDA1ODgzk6CQALM0NjcwODEyMjg1OTkzOTY4NjA2xxxlkrM0NjcwODEyMjg1OTkzOTY4NjA2kqRub25lkLM5NjIzOTgwMzk4MzY2NTgxMzU5xzBlkrM5NjIzOTgwMzk4MzY2NTgxMzU5xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDE2MTU1NDQwMDU2ODA0ODAxNzA2xxdlkrQxNjE1NTQ0MDA1NjgwNDgwMTcwNsK0MTc3NjI1NDQ5NTcwOTcyNDIxMzTHF2WStDE3NzYyNTQ0OTU3MDk3MjQyMTM0wrQxNDY3NDY4NTQ0MDE4NzU4Nzc1N8cXZZK0MTQ2NzQ2ODU0NDAxODc1ODc3NTfCtDExMzY4NzE2ODgzMTU0MDQ4MzEyxxdlkrQxMTM2ODcxNjg4MzE1NDA0ODMxMsKyODgxMjY0MzQ4NjM0MDQ3MjcyxxtlkrI4ODEyNjQzNDg2MzQwNDcyNzKSpG5vbmWQszk3Nzk0MDYxNTAxMzYzMjMyNTLHMGWSszk3Nzk0MDYxNTAxMzYzMjMyNTLHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTYyNTQ0MjYzOTY1Mjg3NjA2OTLHG2WStDE2MjU0NDI2Mzk2NTI4NzYwNjkypGRhdGG0MTQ2OTg0MjE3NTAxNTc5OTMxMzDHF2WStDE0Njk4NDIxNzUwMTU3OTkzMTMwwrQxMDMzMjY2NDIwNjI5OTYwOTg3M8cbZZK0MTAzMzI2NjQyMDYyOTk2MDk4NzOkZGF0YbMzOTQyODkzMDMyNTEzODc4NDgwxxtlkrMzOTQyODkzMDMyNTEzODc4NDgwpXBpeGVsszc3NDgxNzYyMjMyNjMyMTkyMjTHFmWSszc3NDgxNzYyMjMyNjMyMTkyMjTCszIyMDk2MDA5ODIzMjc1MjQwNTfHG2WSszIyMDk2MDA5ODIzMjc1MjQwNTelcGl4ZWy0MTYzNjQ2MDcxMjM0NjMzODE0MTPHHWWStDE2MzY0NjA3MTIzNDYzMzgxNDEzkqRub25lkLM1OTk0MTMzNjI3MjQzNTMzNTUzxxllkrM1OTk0MTMzNjI3MjQzNTMzNTUzk6CQALM3OTAxOTk4NDg1NTc0NzE2NjYxxxZlkrM3OTAxOTk4NDg1NTc0NzE2NjYxwrM0NjExNTExNjkwODE4NzExMDA1xxZlkrM0NjExNTExNjkwODE4NzExMDA1wrQxMTEyNTAyMjc4NDQ4MTc3NzQ5MscXZZK0MTExMjUwMjI3ODQ0ODE3Nzc0OTLDszQ2NTEzNTYzNjk0ODI0MjI5ODXHFmWSszQ2NTEzNTYzNjk0ODI0MjI5ODXDtDEzMjAwNDA4MDc4NDA1MjEzODc0xxdlkrQxMzIwMDQwODA3ODQwNTIxMzg3NMO0MTM3ODE0MDU2MzA1NzYyOTM5NDnHHWWStDEzNzgxNDA1NjMwNTc2MjkzOTQ5kqRub25lkLQxMzI4MjMxNzA5NDUxODM1OTY4NccXZZK0MTMyODIzMTcwOTQ1MTgzNTk2ODXCszk1NTc3NzU4MjM4MjIyNzI5MjXHHGWSszk1NTc3NzU4MjM4MjIyNzI5MjWSzQMgzQJYszEzMTkyMTI5NzQ3OTQzOTI2NDPHFmWSszEzMTkyMTI5NzQ3OTQzOTI2NDPCszM1ODc5NDgwMzAzOTE0OTU4NTHHtWWSszM1ODc5NDgwMzAzOTE0OTU4NTGUx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP8dAFwrXIzsAAAAAAAAAAAAAAAAAAAAADnRaOwAAAAAAAAAAAAAAAAAAAAAXt9G4AAAAAAAAgL8AAIC/AAAAgAAAgD/XFwAASEQAABZExwwXAACAPwAAgD8AAIA/tDE1MTAzODA4MzU5OTE0NjI2MTM4xx1lkrQxNTEwMzgwODM1OTkxNDYyNjEzOJKkbm9uZZCzODMwNjg3MDE1OTk2NzkwNDkwNscWZZKzODMwNjg3MDE1OTk2NzkwNDkwNsOzNTc0Nzk0OTQyMzg3NjE2MTM3NsccZZKzNTc0Nzk0OTQyMzg3NjE2MTM3NpKkbm9uZZCzMTY2OTM5NTk4MzUxMzAzOTI1MMcZZZKzMTY2OTM5NTk4MzUxMzAzOTI1MJOgkAC0MTY3MDYwNzQyNDYwNzQzODAwNTDHF2WStDE2NzA2MDc0MjQ2MDc0MzgwMDUwwrI1Mzc4MDI0NzUzMTMzNjcxOTTHG2WSsjUzNzgwMjQ3NTMxMzM2NzE5NJKkbm9uZZC0MTI4NTc1MTY1NDQ1MjMzNTc5NDnHF2WStDEyODU3NTE2NTQ0NTIzMzU3OTQ5wrM2MTAwMjU0NTE4OTA2NzUzMDc2xxllkrM2MTAwMjU0NTE4OTA2NzUzMDc2k6CQALQxNTU2MDc4OTE2MzEzNDAwNDQwN8caZZK0MTU1NjA3ODkxNjMxMzQwMDQ0MDeToJAAtDE3MTc0Njc1Mjk0MTc4NzUxNzE2xxplkrQxNzE3NDY3NTI5NDE3ODc1MTcxNpOgkAC0MTc5NDA3NTgyNTc5NzEzNzcyMDPHF2WStDE3OTQwNzU4MjU3OTcxMzc3MjAzw7QxODE4MjI5MTIxNzc3NzA4NDE3OMcbZZK0MTgxODIyOTEyMTc3NzcwODQxNzikZGF0YbM4NzE3NDAwMzI1OTIyOTg0NzczxxllkrM4NzE3NDAwMzI1OTIyOTg0Nzczk6CQALQxMDkzMjQyNzExNzk5MDMwNDEyNMcXZZK0MTA5MzI0MjcxMTc5OTAzMDQxMjTDszQ1OTU3NjgwMDA3MDkxNjc1MzDHGmWSszQ1OTU3NjgwMDA3MDkxNjc1MzCkZGF0YbQxNTM5OTg5MTQwNzQ0NzkwNzIwN8caZZK0MTUzOTk4OTE0MDc0NDc5MDcyMDeToJAAszY0ODY2MzU0OTI1NDY0NTY4OTLHH2WSszY0ODY2MzU0OTI1NDY0NTY4OTLXFWYBAAAdAgAAszUyNTAyNDMxODU2ODQ1Njg1NjfHFmWSszUyNTAyNDMxODU2ODQ1Njg1NjfCszQ3Njg2Nzg5MTE5MTg3MDg1NDnHeGWSszQ3Njg2Nzg5MTE5MTg3MDg1NDnHYBYAAAAAAQAAAAQAAAAEAAAAAQAAAAUAAAABAAAAAgAAAAUAAAAFAAAAAgAAAAYAAAACAAAAAwAAAAYAAAAGAAAAAwAAAAcAAAADAAAAAAAAAAcAAAAHAAAAAAAAAAQAAAC0MTUxNjY2MDI4NDIzODg0MzE3NzbHG2WStDE1MTY2NjAyODQyMzg4NDMxNzc2pGRhdGGzMzA3MTk2OTU2NzgxMzQyMTQ4MMcwZZKzMzA3MTk2OTU2NzgxMzQyMTQ4MMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxMzkwNjgxNjIwNjA2OTg3NTA0N8caZZK0MTM5MDY4MTYyMDYwNjk4NzUwNDeToJAAtDEwNTg2ODA4MjA0ODUyMTIzMDAwxzFlkrQxMDU4NjgwODIwNDg1MjEyMzAwMMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxMjU2MzU5NzMyNzE1NTUzMDIzOccxZZK0MTI1NjM1OTczMjcxNTU1MzAyMznHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAACzMzMzODU3NzU5MDUyMTUxOTU5McccZZKzMzMzODU3NzU5MDUyMTUxOTU5MZKkbm9uZZC0MTA3ODE1NDY5NDk2MDQxMjk3OTPHF2WStDEwNzgxNTQ2OTQ5NjA0MTI5NzkzwrMyNDc4NjYyMDEzMzExOTk0NjE5xxZlkrMyNDc4NjYyMDEzMzExOTk0NjE5wrMyNzgwNTIxNDEwNjI2MDMyNjA0xzBlkrMyNzgwNTIxNDEwNjI2MDMyNjA0xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDEyNzQ3NTk3ODQxOTAxNTIzOTI2xxtlkrQxMjc0NzU5Nzg0MTkwMTUyMzkyNqRkYXRhszI1MjI1Njc5Mjg1NjEwMDczNjTHFmWSszI1MjI1Njc5Mjg1NjEwMDczNjTDtDE0NDEwNjE5MTQ5MTc3NzI1OTY4xxtlkrQxNDQxMDYxOTE0OTE3NzcyNTk2OKRkYXRhszk4MTQyMjQwNDUyOTYzNjc1MDjHFmWSszk4MTQyMjQwNDUyOTYzNjc1MDjCszY0NjY1MjY3NTI5NDIzNTc4ODLHFmWSszY0NjY1MjY3NTI5NDIzNTc4ODLDsjU5MjgwNzExMzMwMTU4NTE2M8cVZZKyNTkyODA3MTEzMzAxNTg1MTYzw7MyMDcwNTQwNDM1NjU1MjE0MzE2xx1lkrMyMDcwNTQwNDM1NjU1MjE0MzE2pyNGRkZGRkazMjcyMzcwMTg4MTYzNzE3MTA1N8cwZZKzMjcyMzcwMTg4MTYzNzE3MTA1N8cYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM0MDE3OTg4NjU1NTMzMjUyODM4yAl5ZZKzNDAxNzk4ODY1NTUzMzI1MjgzOMgJYBYAAAAAAQAAAAwAAAAAAAAADAAAAAsAAAALAAAADAAAABcAAAALAAAAFwAAABYAAAAWAAAAFwAAACIAAAAWAAAAIgAAACEAAAAhAAAAIgAAAC0AAAAhAAAALQAAACwAAAAsAAAALQAAADgAAAAsAAAAOAAAADcAAAA3AAAAOAAAAEMAAAA3AAAAQwAAAEIAAABCAAAAQwAAAE4AAABCAAAATgAAAE0AAABNAAAATgAAAFkAAABNAAAAWQAAAFgAAABYAAAAWQAAAGQAAABYAAAAZAAAAGMAAABjAAAAZAAAAG8AAABjAAAAbwAAAG4AAAABAAAAAgAAAA0AAAABAAAADQAAAAwAAAAMAAAADQAAABgAAAAMAAAAGAAAABcAAAAXAAAAGAAAACMAAAAXAAAAIwAAACIAAAAiAAAAIwAAAC4AAAAiAAAALgAAAC0AAAAtAAAALgAAADkAAAAtAAAAOQAAADgAAAA4AAAAOQAAAEQAAAA4AAAARAAAAEMAAABDAAAARAAAAE8AAABDAAAATwAAAE4AAABOAAAATwAAAFoAAABOAAAAWgAAAFkAAABZAAAAWgAAAGUAAABZAAAAZQAAAGQAAABkAAAAZQAAAHAAAABkAAAAcAAAAG8AAAACAAAAAwAAAA4AAAACAAAADgAAAA0AAAANAAAADgAAABkAAAANAAAAGQAAABgAAAAYAAAAGQAAACQAAAAYAAAAJAAAACMAAAAjAAAAJAAAAC8AAAAjAAAALwAAAC4AAAAuAAAALwAAADoAAAAuAAAAOgAAADkAAAA5AAAAOgAAAEUAAAA5AAAARQAAAEQAAABEAAAARQAAAFAAAABEAAAAUAAAAE8AAABPAAAAUAAAAFsAAABPAAAAWwAAAFoAAABaAAAAWwAAAGYAAABaAAAAZgAAAGUAAABlAAAAZgAAAHEAAABlAAAAcQAAAHAAAAADAAAABAAAAA8AAAADAAAADwAAAA4AAAAOAAAADwAAABoAAAAOAAAAGgAAABkAAAAZAAAAGgAAACUAAAAZAAAAJQAAACQAAAAkAAAAJQAAADAAAAAkAAAAMAAAAC8AAAAvAAAAMAAAADsAAAAvAAAAOwAAADoAAAA6AAAAOwAAAEYAAAA6AAAARgAAAEUAAABFAAAARgAAAFEAAABFAAAAUQAAAFAAAABQAAAAUQAAAFwAAABQAAAAXAAAAFsAAABbAAAAXAAAAGcAAABbAAAAZwAAAGYAAABmAAAAZwAAAHIAAABmAAAAcgAAAHEAAAAEAAAABQAAABAAAAAEAAAAEAAAAA8AAAAPAAAAEAAAABsAAAAPAAAAGwAAABoAAAAaAAAAGwAAACYAAAAaAAAAJgAAACUAAAAlAAAAJgAAADEAAAAlAAAAMQAAADAAAAAwAAAAMQAAADwAAAAwAAAAPAAAADsAAAA7AAAAPAAAAEcAAAA7AAAARwAAAEYAAABGAAAARwAAAFIAAABGAAAAUgAAAFEAAABRAAAAUgAAAF0AAABRAAAAXQAAAFwAAABcAAAAXQAAAGgAAABcAAAAaAAAAGcAAABnAAAAaAAAAHMAAABnAAAAcwAAAHIAAAAFAAAABgAAABEAAAAFAAAAEQAAABAAAAAQAAAAEQAAABwAAAAQAAAAHAAAABsAAAAbAAAAHAAAACcAAAAbAAAAJwAAACYAAAAmAAAAJwAAADIAAAAmAAAAMgAAADEAAAAxAAAAMgAAAD0AAAAxAAAAPQAAADwAAAA8AAAAPQAAAEgAAAA8AAAASAAAAEcAAABHAAAASAAAAFMAAABHAAAAUwAAAFIAAABSAAAAUwAAAF4AAABSAAAAXgAAAF0AAABdAAAAXgAAAGkAAABdAAAAaQAAAGgAAABoAAAAaQAAAHQAAABoAAAAdAAAAHMAAAAGAAAABwAAABIAAAAGAAAAEgAAABEAAAARAAAAEgAAAB0AAAARAAAAHQAAABwAAAAcAAAAHQAAACgAAAAcAAAAKAAAACcAAAAnAAAAKAAAADMAAAAnAAAAMwAAADIAAAAyAAAAMwAAAD4AAAAyAAAAPgAAAD0AAAA9AAAAPgAAAEkAAAA9AAAASQAAAEgAAABIAAAASQAAAFQAAABIAAAAVAAAAFMAAABTAAAAVAAAAF8AAABTAAAAXwAAAF4AAABeAAAAXwAAAGoAAABeAAAAagAAAGkAAABpAAAAagAAAHUAAABpAAAAdQAAAHQAAAAHAAAACAAAABMAAAAHAAAAEwAAABIAAAASAAAAEwAAAB4AAAASAAAAHgAAAB0AAAAdAAAAHgAAACkAAAAdAAAAKQAAACgAAAAoAAAAKQAAADQAAAAoAAAANAAAADMAAAAzAAAANAAAAD8AAAAzAAAAPwAAAD4AAAA+AAAAPwAAAEoAAAA+AAAASgAAAEkAAABJAAAASgAAAFUAAABJAAAAVQAAAFQAAABUAAAAVQAAAGAAAABUAAAAYAAAAF8AAABfAAAAYAAAAGsAAABfAAAAawAAAGoAAABqAAAAawAAAHYAAABqAAAAdgAAAHUAAAAIAAAACQAAABQAAAAIAAAAFAAAABMAAAATAAAAFAAAAB8AAAATAAAAHwAAAB4AAAAeAAAAHwAAACoAAAAeAAAAKgAAACkAAAApAAAAKgAAADUAAAApAAAANQAAADQAAAA0AAAANQAAAEAAAAA0AAAAQAAAAD8AAAA/AAAAQAAAAEsAAAA/AAAASwAAAEoAAABKAAAASwAAAFYAAABKAAAAVgAAAFUAAABVAAAAVgAAAGEAAABVAAAAYQAAAGAAAABgAAAAYQAAAGwAAABgAAAAbAAAAGsAAABrAAAAbAAAAHcAAABrAAAAdwAAAHYAAAAJAAAACgAAABUAAAAJAAAAFQAAABQAAAAUAAAAFQAAACAAAAAUAAAAIAAAAB8AAAAfAAAAIAAAACsAAAAfAAAAKwAAACoAAAAqAAAAKwAAADYAAAAqAAAANgAAADUAAAA1AAAANgAAAEEAAAA1AAAAQQAAAEAAAABAAAAAQQAAAEwAAABAAAAATAAAAEsAAABLAAAATAAAAFcAAABLAAAAVwAAAFYAAABWAAAAVwAAAGIAAABWAAAAYgAAAGEAAABhAAAAYgAAAG0AAABhAAAAbQAAAGwAAABsAAAAbQAAAHgAAABsAAAAeAAAAHcAAAC0MTM5MzQ4MjUyMzI5OTU3NTU3OTPHF2WStDEzOTM0ODI1MjMyOTk1NzU1NzkzwrQxNTM5NDA2MTQwMzY3MDQ3Njg0NscbZZK0MTUzOTQwNjE0MDM2NzA0NzY4NDakZGF0YbQxMjM1OTc2NDc3ODI2NzUzODEzOMccZZK0MTIzNTk3NjQ3NzgyNjc1MzgxMzilcGl4ZWyzMTM4NDExOTkxOTgxMzg5NjY0N8cdZZKzMTM4NDExOTkxOTgxMzg5NjY0N6cjRkZGRkZGszY5NzI1MjA2MjkwMjU5OTY2OTDHFmWSszY5NzI1MjA2MjkwMjU5OTY2OTDCszQzODU2MzMyODYxMzgyNzgzNDTHGmWSszQzODU2MzMyODYxMzgyNzgzNDSkZGF0YbMyMzM1NzQ1ODQxNDY4NzcyNTU2xxllkrMyMzM1NzQ1ODQxNDY4NzcyNTU2k6CQALM2MTI1OTUyMzU2MDc0MDc1ODg2xxZlkrM2MTI1OTUyMzU2MDc0MDc1ODg2w7QxMzg0MDA3MTk3MzAxMjM2NTU1MscXZZK0MTM4NDAwNzE5NzMwMTIzNjU1NTLCszYwMDk4NzU5NTk4NzM4MTQ1NDbHFmWSszYwMDk4NzU5NTk4NzM4MTQ1NDbCszIzOTcyNzk5Mzc4NTA0OTYzODHHFmWSszIzOTcyNzk5Mzc4NTA0OTYzODHCszQ3NzY1MDM0MzUwODYxMDYxMTfHFmWSszQ3NzY1MDM0MzUwODYxMDYxMTfDtDE1OTkwMzc4Nzg3NzY4ODEyOTQ3xxdlkrQxNTk5MDM3ODc4Nzc2ODgxMjk0N8KzNjk0MjczNTQwNDQ2OTk2NTQ5MscWZZKzNjk0MjczNTQwNDQ2OTk2NTQ5MsKzNTg1NDQ4OTUyOTg1MzczMDU1N8cWZZKzNTg1NDQ4OTUyOTg1MzczMDU1N8KzNTgwMDkxNTI4Njc0NjkxOTgxNMcaZZKzNTgwMDkxNTI4Njc0NjkxOTgxNKRkYXRhtDE1NzY0NDI1MDQ3NDY4NjUxMDM1xxplkrQxNTc2NDQyNTA0NzQ2ODY1MTAzNZOgkAC0MTM4NDk3Mjk0NDUwNDYyNDcyNznHHWWStDEzODQ5NzI5NDQ1MDQ2MjQ3Mjc5kqRub25lkLM1OTY2NTY5MjI0MDM5MjIzODYwxxplkrM1OTY2NTY5MjI0MDM5MjIzODYwpGRhdGG0MTgxMDMwMjI4MDAxODgzNDMxMjHHF2WStDE4MTAzMDIyODAwMTg4MzQzMTIxw7QxMzIyNzA4MTkxODk5NTQ4MDA0MMcxZZK0MTMyMjcwODE5MTg5OTU0ODAwNDDHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzODY1Nzc2ODkzODc5ODc4Mjc1OccaZZKzODY1Nzc2ODkzODc5ODc4Mjc1OaRkYXRhszg2ODYxNDk5NjAyOTc0MTg5MzDHFmWSszg2ODYxNDk5NjAyOTc0MTg5MzDCtDE2OTg5MjkwNjI1MzE4MzA4MjAzxzFlkrQxNjk4OTI5MDYyNTMxODMwODIwM8cYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALI4MzM1MjYzNzU1MzQ0MTE5NzDHGGWSsjgzMzUyNjM3NTUzNDQxMTk3MJOgkACzNjQ0NzA5NTM5NzQ4MDk4NjU4NMcWZZKzNjQ0NzA5NTM5NzQ4MDk4NjU4NMOzOTMxMjk2MTU3NTQ0MzA2MTczMcccZZKzOTMxMjk2MTU3NTQ0MzA2MTczMZKkbm9uZZC0MTgwNTQ1MTI5NTc4MDY1MDIwMDXHF2WStDE4MDU0NTEyOTU3ODA2NTAyMDA1wrMyNTEyNjI2MTU2MTUyMjUwOTExxxxlkrMyNTEyNjI2MTU2MTUyMjUwOTExkqRub25lkLQxNjMxNTQyOTcyNjQ0NDA3OTQ5OccxZZK0MTYzMTU0Mjk3MjY0NDQwNzk0OTnHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNTI0MTM0MDQwNTY3NzI5OTgyN8cWZZKzNTI0MTM0MDQwNTY3NzI5OTgyN8KzOTQ1NjE3MzQxOTI5MDQ3NzU3M8cWZZKzOTQ1NjE3MzQxOTI5MDQ3NzU3M8K0MTU1Njk1MjcxMjU2NjA3NzEyMjjHF2WStDE1NTY5NTI3MTI1NjYwNzcxMjI4wrI0MDE1NjMzMDkxMjYzOTk2NzHHFWWSsjQwMTU2MzMwOTEyNjM5OTY3McK0MTA4NjMwNTQ1MzAzNjIxNjg4MTTHGmWStDEwODYzMDU0NTMwMzYyMTY4ODE0k6CQALIxNjk5MzM2MjY4MTY1OTA0MDPHFWWSsjE2OTkzMzYyNjgxNjU5MDQwM8K0MTMxMzc0NTc1Mjc1NDk4ODc4ODXHF2WStDEzMTM3NDU3NTI3NTQ5ODg3ODg1wrQxMTI4MTU4ODI2MDQ0NTg5ODE3N8cXZZK0MTEyODE1ODgyNjA0NDU4OTgxNzfCszIzMDYyOTQwNTQ1NTc5NzgxNjPHHGWSszIzMDYyOTQwNTQ1NTc5NzgxNjOSpG5vbmWQsjY2MzY0NjgwOTIwMjg3MzU3NccbZZKyNjYzNjQ2ODA5MjAyODczNTc1kqRub25lkLM5Mjk4OTYxNzAwMDU0MTI1ODI3xzBlkrM5Mjk4OTYxNzAwMDU0MTI1ODI3xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszIyNTgyMjMwMDU3MjM0NjYyOTXHFmWSszIyNTgyMjMwMDU3MjM0NjYyOTXCszc4MTM2ODUyMjI5NzE1NTQxMDfHHGWSszc4MTM2ODUyMjI5NzE1NTQxMDeSpG5vbmWQtDEzMTgyNjgzOTQzMzcyNjkwMjk2xxdlkrQxMzE4MjY4Mzk0MzM3MjY5MDI5NsKzMzQxMDYwNjk2NjM5MTcxMTc4OccaZZKzMzQxMDYwNjk2NjM5MTcxMTc4OaRkYXRhtDE4MDI2ODIwODQ2OTE1MzExNTUzxxtlkrQxODAyNjgyMDg0NjkxNTMxMTU1M6RkYXRhtDE2MDUyNDcyODY0MDMwNTM0MTEyxx1lkrQxNjA1MjQ3Mjg2NDAzMDUzNDExMpKkbm9uZZCzODg0Nzg2NTQ2NzkwOTY1NDk0M8cWZZKzODg0Nzg2NTQ2NzkwOTY1NDk0M8KzMTM1NjQ5MzExNzI2MzcwNzI5N8cWZZKzMTM1NjQ5MzExNzI2MzcwNzI5N8OzMzM5NTAxNTg2MjgyMzIzODYyOMcaZZKzMzM5NTAxNTg2MjgyMzIzODYyOKRkYXRhszM1NzUwODM1Nzc5MTM0MDM2NTLHtWWSszM1NzUwODM1Nzc5MTM0MDM2NTKUx0AX8wQ1v+wF0b46zRM/AAAAAPMENT/sBdG+Os0TPwAAAAAAAAAA6wVRPzvNEz8AAAAAAAAAAEDzeT81birCAACAP8dAF6p9aUAAAAAAAAAAAAAAAAAAAAAAeYIaQAAAAAAAAAAAAAAAAAAAAADd04i/AACAvwAAAAAAAAAAfa2zwAAAAADXFwAAs0MAQAdExwwXKPzHQSj8x0Epa75BtDE1NzQxNjM1ODMwNDY3ODY3MjQxxxdlkrQxNTc0MTYzNTgzMDQ2Nzg2NzI0McO0MTE1MzgzNDQzMzU5NzkzNDQxOTTHF2WStDExNTM4MzQ0MzM1OTc5MzQ0MTk0wrM1NzM5OTkyNjQyMzU1NjYzNjYxxxZlkrM1NzM5OTkyNjQyMzU1NjYzNjYxwrMzNjM2NTkwNjUwMzIzMjU2MzU2xxllkrMzNjM2NTkwNjUwMzIzMjU2MzU2k6CQALQxMzEwMDM1OTk4MjQ2OTQ1MTA3MscXZZK0MTMxMDAzNTk5ODI0Njk0NTEwNzLDtDE0OTQ3NDEyMTAwNDU1ODA2MjQxxxdlkrQxNDk0NzQxMjEwMDQ1NTgwNjI0McO0MTY4MDE0ODA1NjI0MTI4MTk2MznHF2WStDE2ODAxNDgwNTYyNDEyODE5NjM5w7M4NzI3MTEwNzU4NDc1MDY1MjMyxxtlkrM4NzI3MTEwNzU4NDc1MDY1MjMypXBpeGVsszE2NTM1NjI2NjcxMDAxMDgyNDHHGWWSszE2NTM1NjI2NjcxMDAxMDgyNDGToJAAszU0NTQ4MTM5NzkxNDgyMDkyNTTHGmWSszU0NTQ4MTM5NzkxNDgyMDkyNTSkZGF0YbQxNTI5MDUzMDY1NTU4NDAzNDg3N8cXZZK0MTUyOTA1MzA2NTU1ODQwMzQ4NzfCszI2MjAyNjU2NDUwNDk3NDMwODLHFmWSszI2MjAyNjU2NDUwNDk3NDMwODLDszY1NzIxMjIyMzA2Njk0ODc1NzjHHGWSszY1NzIxMjIyMzA2Njk0ODc1NziSpG5vbmWQszIzNTc2NTQ3ODEwNDQzNjQ2NjnHGWWSszIzNTc2NTQ3ODEwNDQzNjQ2NjmToJAAszg4MDM2NzMwMDIzMDYzMzk3MjXHFmWSszg4MDM2NzMwMDIzMDYzMzk3MjXCo3N1YoKncGF5bG9hZMkAFibqZpOFszg1MDg0MjEyODE1NzQwMTYwMjbHFWi0MTY3MDYwNzQyNDYwNzQzODAwNTCzNTYzMTU3MjY4MjYzMTg2Mjc2N8cUaLMxNjg0OTAyMTI4NjQ1NzA2MjQzszQxMDg5MzkxNDgxMTM0Mzc3MTbHFGizNTQ4NDA1NzU0NjM1MTEzOTMyM7MxNjA3NDAzNzkyMDUxNzc4ODEwiad2aXNpYmxlxxVotDEzMTAwMzU5OTgyNDY5NDUxMDcypXBsb3RzkK9iYWNrZ3JvdW5kY29sb3LHFGizNTQxMzYxNjE1NTYzMTMwODI0MKlwaXhlbGFyZWHHFGizMjk1NzE1MjY4MDU0ODg2ODkxMaZjYW1lcmHHFGizMzU4Nzk0ODAzMDM5MTQ5NTg1MaR1dWlkszk0NjI0MjM4Mjc5MTA2MjM2MDKrY2FtM2Rfc3RhdGXAqmNsZWFyc2NlbmXHFWi0MTA5MzI0MjcxMTc5OTAzMDQxMjSoY2hpbGRyZW6Siad2aXNpYmxlxxVotDE3OTQwNzU4MjU3OTcxMzc3MjAzpXBsb3RzkK9iYWNrZ3JvdW5kY29sb3LHFWi0MTEwNzQwNzE1OTA2NTQ1NDg3NTipcGl4ZWxhcmVhxxRoszUyNzI1MzI0ODEwMzc5MTg4NDmmY2FtZXJhxxRoszgwNDY4MzY0MTk3NzIwMTQwNzKkdXVpZLQxODA2OTcyNzUyMjkxOTMyODA1OatjYW0zZF9zdGF0ZcCqY2xlYXJzY2VuZccUaLM1MzEzODg3MzAyNjE5MTYxNjk0qGNoaWxkcmVukYmndmlzaWJsZccUaLMyNjIwMjY1NjQ1MDQ5NzQzMDgypXBsb3Rzld4AEKx0cmFuc3BhcmVuY3nHFGizNjEyNTk1MjM1NjA3NDA3NTg4NqVzcGFjZccVaLQxNTM5NDA2MTQwMzY3MDQ3Njg0Nqx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIA/AACAPwAAgD8AAAAAAAAAAAAAgD8AAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAL8AAAC/AAAAPwAAAL8AAAC/AAAAPwAAAD8AAAA/pG5hbWW5dGV4dC0xMDEwMTg5MzgxMTY3NTg4NzE4N6ljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc94AFKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+qY29sb3JyYW5nZcKpYmlsbGJvYXJkwqhoaWdoY2xpcNgXAAAAAAAAAAAAAAAAAAAAAK1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAK1kaXN0YW5jZWZpZWxkiqltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKQYAAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTrlJlcGVhdFdyYXBwaW5npGRhdGGtdGV4dHVyZV9hdGxhc6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemWSzQQAzQQApXdyYXBUrlJlcGVhdFdyYXBwaW5npHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZadsb3djbGlw2BcAAAAAAAAAAAAAAAAAAAAAsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAAs0MAQAdEpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFyj8x0Eo/MdBKWu+QaVjb2xvctgXAAAAAAAAAAAAAAAAAACAP6hjb2xvcm1hcMKndmlzaWJsZccVaLQxMzU4MDQ0Njk4MTczOTYxNDQ0NKttYXJrZXJzcGFjZccVaLQxMDkzMTMwODIyMTAxODg4MjkxObFhdHRyaWJ1dGVfdXBkYXRlcscUaLMxNjY5Mzk1OTgzNTEzMDM5MjUwqG92ZXJkcmF3xxRoszEzMTkyMTI5NzQ3OTQzOTI2NDOvdW5pZm9ybV91cGRhdGVyxxNosjY2MzY0NjgwOTIwMjg3MzU3NaVmYWNlc8cUaLM3MjY5OTE0MzUyMzMxMDE4NTg2pHV1aWS0MTAxMDE4OTM4MTE2NzU4ODcxODetdmVydGV4X3NvdXJjZdobiSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoT8yN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBib29sIGNvbG9ybWFwOwpib29sIGdldF9jb2xvcm1hcCgpe3JldHVybiBjb2xvcm1hcDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4arcXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0yAFQFxb7S76xnW++fPIwvmdmZr4W+0u+sZ1vvqqCUb5nZma+fPIwvmdmZr5h5VC+s51vvmHlUL6znW++fPIwvmdmZr4W+0u+sZ1vvjojSr5nZma+fPIwvmdmZr5h5VC+s51vvjC7J75nZma+FvtLvrGdb7588jC+Z2Zmvhb7S76xnW++H/mDvnE9ir4W+0u+sZ1vvnzyML5nZma+FvtLvrGdb76qglG+Z2ZmvnzyML5nZma+YeVQvrOdb75h5VC+s51vvnzyML5nZma+FvtLvrGdb746I0q+Z2ZmvnzyML5nZma+YeVQvrOdb74wuye+Z2Zmvhb7S76xnW++fPIwvmdmZr4W+0u+sZ1vvgHegr6Bmtq+FvtLvrGdb76qglG+Z2ZmvmIyVb5nZma+FvtLvrGdb77Oqk++sZ1vvjC7J75nZma+FvtLvrGdb77Un32+cT2KvqptYXJrZXJzaXplgqt0eXBlX2xlbmd0aAKkZmxhdMgBUBdseDo/CmhiP6YsAz+mLAM/bHg6PwpoYj+bdzw/OBpgP6YsAz+mLAM/7Z48PzgaYD/tnjw/OBpgP6YsAz+mLAM/bHg6PwpoYj+kATw/ZMxdP6YsAz+mLAM/7Z48PzgaYD/+1Bg/OBpgP2x4Oj8KaGI/piwDP6YsAz9seDo/CmhiPzlKXj/d0mo/bHg6PwpoYj+mLAM/piwDP2x4Oj8KaGI/m3c8PzgaYD+mLAM/piwDP+2ePD84GmA/7Z48PzgaYD+mLAM/piwDP2x4Oj8KaGI/pAE8P2TMXT+mLAM/piwDP+2ePD84GmA//tQYPzgaYD9seDo/CmhiP6YsAz+mLAM/bHg6PwpoYj+YqF4/soCJP2x4Oj8KaGI/m3c8PzgaYD9uxT4/OBpgP1pkOz8KaGI/SFA8PwpoYj/+1Bg/OBpgP2x4Oj8KaGI/pcJYP93Saj+tbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTIAfgX5fJfPubyX7IAAAAA5vJfPp7Nqj4AAAAA5/JfPjYaAD8AAAAA5fJfPubyX7IAAAAA5vJfPp7Nqj4AAAAA5/JfPjYaAD8AAAAA5fJfPubyX7IAAAAA5vJfPp7Nqj4AAAAA5/JfPjYaAD8AAAAA5fJfPubyX7IAAAAA5vJfPp7Nqj4AAAAA5/JfPjYaAD8AAAAA5fJfPubyX7IAAAAA5vJfPp7Nqj4AAAAA6PJfPp7NKj8AAAAA6PJfPgaBVT8AAAAAiV6GPopehrIAAAAABoFVP+vyXz4AAAAANhoAP+nyXz4AAAAAnc2qPujyXz4AAAAABoFVP+vyXz4AAAAANhoAP+nyXz4AAAAAnc2qPujyXz4AAAAABoFVP+vyXz4AAAAANhoAP+nyXz4AAAAAnc2qPujyXz4AAAAABoFVP+vyXz4AAAAANhoAP+nyXz4AAAAAnc2qPujyXz4AAAAA63OVP+3yXz4AAAAABoFVP+vyXz4AAAAANxoAP+nyXz4AAAAAnc2qPujyXz4AAAAA61G4Potehj4AAAAAnc2qPubyX7Ln8l++nc2qPubyX7Ln8l++nc2qPubyX7Ln8l++nc2qPubyX7Ln8l++nc2qPubyX7Ln8l++ns0qP+byX7Lp8l++nc2qPubyX7Ln8l++6lG4PopehrKKXoa+r3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTIAqAXAMCUPgDA1z4AQKg+AEDvPgCAMD4A4Bo/AIBLPgCgIT8AwJQ+AMDXPgBAqD4AQO8+AMCUPgDA7z4AQKg+AGADPwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AGAbPwBAqD4A4CY/AMCUPgBgGz8AQKg+AOAmPwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AMDXPgBAqD4AQO8+AMCUPgAgMz8AQKg+AKA+PwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AGAbPwBAqD4A4CY/AIAwPgAgDz8AgE8+AKAaPwDAlD4AwNc+AECoPgBA7z4AgDA+AOAaPwCASz4AoCE/AMCUPgDA1z4AQKg+AEDvPgDgcD8AgBE+AGB6PwCAOT4AwJQ+AMDXPgBAqD4AQO8+AIAwPgDgGj8AgEs+AKAhPwDAlD4AwNc+AECoPgBA7z4AwJQ+AMDvPgBAqD4AYAM/AIAwPgDgGj8AgEs+AKAhPwDAlD4AYBs/AECoPgDgJj8AwJQ+AGAbPwBAqD4A4CY/AIAwPgDgGj8AgEs+AKAhPwDAlD4AwNc+AECoPgBA7z4AwJQ+ACAzPwBAqD4AoD4/AIAwPgDgGj8AgEs+AKAhPwDAlD4AYBs/AECoPgDgJj8AgDA+ACAPPwCATz4AoBo/AMCUPgDA1z4AQKg+AEDvPgCAMD4A4Bo/AIBLPgCgIT8AwJQ+AMDXPgBAqD4AQO8+ACAMPwCAbD4AoBU/AMCNPgDAlD4AwNc+AECoPgBA7z4AwJQ+AMDvPgBAqD4AYAM/AMCUPgCgDz8AQKg+ACAbPwDAlD4AICc/AECoPgDgMj8AwJQ+AOA+PwBAqD4AoEo/AIAwPgAgDz8AgE8+AKAaPwDAlD4AwNc+AECoPgBA7z4A4BU/AIBsPgAgHz8AQIo+o3Bvc4KrdHlwZV9sZW5ndGgDpGZsYXTIAfgXAAAAAKwcSkEAAIC/AAAAAKwcSkEAAIC/AAAAAKwcSkEAAIC///8fQKwcSkEAAIC///8fQKwcSkEAAIC///8fQKwcSkEAAIC/AACgQKwcSkEAAIC/AACgQKwcSkEAAIC/AACgQKwcSkEAAIC/AADwQKwcSkEAAIC/AADwQKwcSkEAAIC/AADwQKwcSkEAAIC/AAAgQawcSkEAAIC/AAAgQawcSkEAAIC/AAAgQawcSkEAAIC/AAAgQawcSkEAAIC/MzMzQKK0Y0EAAIC/rBxKQQAAAAAAAIC/rBxKQQAAAAAAAIC/rBxKQQAAAAAAAIC/rBxKQf//H0AAAIC/rBxKQf//H0AAAIC/rBxKQf//H0AAAIC/rBxKQQAAoEAAAIC/rBxKQQAAoEAAAIC/rBxKQQAAoEAAAIC/rBxKQQAA8EAAAIC/rBxKQQAA8EAAAIC/rBxKQQAA8EAAAIC/rBxKQQAAIEEAAIC/rBxKQQAAIEEAAIC/rBxKQQAAIEEAAIC/rBxKQQAAIEEAAIC/orRjQTMzM0AAAIC/rBxKQc3MDMAAAAAArBxKQc3MDMAAAABArBxKQc3MDMAAAIBArBxKQc3MDMAAAMBArBxKQc3MDMAAAABBrBxKQc3MDMAAACBBrBxKQc3MDMAAACBB/7JbQc3MDMAAAIBAqXJvdGF0aW9uc4KrdHlwZV9sZW5ndGgEpGZsYXTIAqAXAAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07s2PABDPzBDU/8wQ1P2PABLNjwAQz8wQ1P/MENT9jwASzY8AEM/MENT/zBDU/Y8AEs2PABDPzBDU/8wQ1P2PABLNjwAQz8wQ1P/MENT9jwASzY8AEM/MENT/zBDU/Y8AEs2PABDPzBDU/8wQ1P2PABLNjwAQz8wQ1P/MENT9jwASzj6x0cmFuc3BhcmVuY3nHFWi0MTAwODU4NjkyMTY1MDYzNTcwMDClc3BhY2XHFWi0MTIzNTk3NjQ3NzgyNjc1MzgxMzisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1lv2xpbmVzZWdtZW50cy0yNjkxMzUzNjEwMzAzNjcxOTmpY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAALNDAEAHRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXKPzHQSj8x0Epa75BqW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxRoszc1MTEzMDg4MDkxMTMxMjcxMzmxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTA4NjMwNTQ1MzAzNjIxNjg4MTSob3ZlcmRyYXfHFWi0MTEyODE1ODgyNjA0NDU4OTgxNzevdW5pZm9ybV91cGRhdGVyxxRoszM0MDM1NzAzMjk1MTY1NDQ0MDSlZmFjZXPHFWi0MTY5ODkyOTA2MjUzMTgzMDgyMDOkdXVpZLIyNjkxMzUzNjEwMzAzNjcxOTmtdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizNjQ0NzA5NTM5NzQ4MDk4NjU4NKVzcGFjZccVaLQxNzU5ODE1NDc2MzkxMzQ5MTk2Oax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy0yMjEzMDI3MjY3ODg3ODMzNzIxqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAALNDAEAHRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXKPzHQSj8x0Epa75BqW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDEzNTgwNDQ2OTgxNzM5NjE0NDQ0sWF0dHJpYnV0ZV91cGRhdGVyxxVotDE3OTA0ODQ5OTgxMDU0MDM2ODIzqG92ZXJkcmF3xxVotDE4MTMwMDAzNTgxNjM5Mzg3NTc4r3VuaWZvcm1fdXBkYXRlcscUaLMxMTUwNDY5NTE3NjQ4NTY1NjUypWZhY2VzxxRoszE0NDAzNDk5MjU4ODExMDUzOTakdXVpZLMyMjEzMDI3MjY3ODg3ODMzNzIxrXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzMgc2VnbWVudF9zdGFydDsKdmVjMyBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMzIHNlZ21lbnRfZW5kOwp2ZWMzIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0yAIwFwAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+rWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0x4wXAADAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AADAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AADAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD+rY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0yAIwFwAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+q3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAOkZmxhdMgBpBczM0NBzcwMwAAAgL8zM0NBAAAAAAAAgL8zM0NB//8fQAAAgL8zM0NBAACgQAAAgL8zM0NBAADwQAAAgL8zM0NBAAAgQQAAgL8zM0NBzcwMwAAAAAAzM0NBzcwMwAAAAEAzM0NBzcwMwAAAgEAzM0NBzcwMwAAAwEAzM0NBzcwMwAAAAEEzM0NBzcwMwAAAIEHNzAzAMzNDQQAAgL/NzAzAMzNDQQAAAADNzAzAMzNDQQAAAEDNzAzAMzNDQQAAgEDNzAzAMzNDQQAAwEDNzAzAMzNDQQAAAEHNzAzAMzNDQQAAIEEAAAAAMzNDQQAAgL///x9AMzNDQQAAgL8AAKBAMzNDQQAAgL8AAPBAMzNDQQAAgL8AACBBMzNDQQAAgL/NzAzAzcwMwAAAMEEAAAAAzcwMwAAAMEH//x9AzcwMwAAAMEEAAKBAzcwMwAAAMEEAAPBAzcwMwAAAMEEAACBBzcwMwAAAMEHNzAzAAAAAAAAAMEHNzAzA//8fQAAAMEHNzAzAAACgQAAAMEHNzAzAAADwQAAAMEHNzAzAAAAgQQAAMEGtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgDpGZsYXTIAaQXzcwMwM3MDMAAAIC/zcwMwAAAAAAAAIC/zcwMwP//H0AAAIC/zcwMwAAAoEAAAIC/zcwMwAAA8EAAAIC/zcwMwAAAIEEAAIC/zcwMwM3MDMAAAAAAzcwMwM3MDMAAAABAzcwMwM3MDMAAAIBAzcwMwM3MDMAAAMBAzcwMwM3MDMAAAABBzcwMwM3MDMAAACBBzcwMwM3MDMAAAIC/zcwMwM3MDMAAAAAAzcwMwM3MDMAAAABAzcwMwM3MDMAAAIBAzcwMwM3MDMAAAMBAzcwMwM3MDMAAAABBzcwMwM3MDMAAACBBAAAAAM3MDMAAAIC///8fQM3MDMAAAIC/AACgQM3MDMAAAIC/AADwQM3MDMAAAIC/AAAgQc3MDMAAAIC/zcwMwM3MDMAAAIC/AAAAAM3MDMAAAIC///8fQM3MDMAAAIC/AACgQM3MDMAAAIC/AADwQM3MDMAAAIC/AAAgQc3MDMAAAIC/zcwMwAAAAAAAAIC/zcwMwP//H0AAAIC/zcwMwAAAoEAAAIC/zcwMwAAA8EAAAIC/zcwMwAAAIEEAAIC/r2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHjBcAAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAP46sdHJhbnNwYXJlbmN5xxVotDE1MjE1NDkyMDU2NTY4MTM2MjY2pXNwYWNlxxVotDE0NDEwNjE5MTQ5MTc3NzI1OTY4rHZlcnRleGFycmF5c4GocG9zaXRpb26Cq3R5cGVfbGVuZ3RoA6RmbGF0yAEgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAIA/AACAPwAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAgD8AAIA/AAAAAAAAgD8AAAAAAAAAAAAAgD8AAIA/AACAPwAAAAAAAIA/AACAPwAAAAAAAAAAAACAPwAAgD8AAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAAAAAACAPwAAgD8AAAAAAAAAAAAAgD8AAIA/AAAAAAAAgD8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AACAP6RuYW1lunZvbHVtZS00MjE0NzU0MTA3NDg0ODM3NTUwqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gAWpW1vZGVsx0AXAAAgQQAAAAAAAAAAAAAAAAAAAAAAACBBAAAAAAAAAAAAAAAAAAAAAAAAIEEAAAAAAAAAAAAAAAAAAAAAAACAP6dkaWZmdXNlxwwXzczMPs3MzD7NzMw+qmNvbG9ycmFuZ2XXF7gb/zpFvH8/p2xvd2NsaXDYF8C0iD4Ttp87FamoPgAAAACoaGlnaGNsaXDYF4BFfj/o+Wc/9WMTPgAAAACqdm9sdW1lZGF0YYuqYW5pc290cm9weco/gAAApXdyYXBSs0NsYW1wVG9FZGdlV3JhcHBpbmekZGF0YcgPoBfl5k0/CeroPrmSIj8YJWc/HApRPf3+XD8lU34+XQZTP9Jxcj86zSk9pi/XPpeA+z7wAE0/alplP12UCz9hDSI9IQpXP5OKKD+8p7s+e+JhP3lJoz5HVKc+Fi0fP2hzqD4KZ1E/kyEzP8v4YT8xqSU9f7pKP+X0rz5drS8/dHF5P/eqdT4OwHM/LBAfPweLCztJQ6k+9OmhPof8Pj+P9Qg/33lpP+gsbD9QA8U+L+H5PlYmZT+ZmDw/ca9uPWrQmT7L/GQ/5uAbPgLOZz1a5Dg/oCIKP09uQj9IOns+zDELP42IQT+r70k/Ak+xPjw8Hz9Bx1Y/kTYlP4EBlD7G2R4/OrQlP/OeDz0AyD88WftcPar0Aj8Jchs+VBVZPwhrPT66c44+F30dP5GUqj7RPI4+U2VpPw8YDj8xKaA+K+l6PZh5tD2tXuQ9HkyiPmLQIj8Z5nQ/I0VrP5jdXT+qnk8/E2NhP84RNT/9sV0+fmS2PmAtED5Er3M/H7K8PmMu+z6Plo8+0O6WPq9b7TtA4I4+uGUyPw7KAj/uLDc/gUJEP7wQJj8u/Co/ISXUPq5ySj9XU48+h5XlPKi0JD9O3zA/eK7SPueWJz8WKS4+wQ0OP/Mi1T4O64s+bZh+PxOOkj4DgjE+gkwJPzcvWj8ZiDQ/A+ATPyN9yD7NY4k+jrK4PjbuLj+BS88+pX1OPm43Lj+QDQY/7llBPvj5xT5Ndkw9iCcFPz4DVD+kVXU/dJlgPlha0T62etM+kH5SP9J+Mj8otrg+BTRcPwmbzT4p+aw74VHuPtVSTz9TH34/GzQDP/J8fT95W9c+/fA2PmGusT6tqXY/qB5rP/08Ej8+iyE/KvssP5otST+nNic/ir9JP4RjKj53F5Y7mdaMPvtutz77fzE+o5s6Pwng/T7JTtE+792OPgOnTj4ThIE+98o9PmzbmD4JEmE/mVoIP7yR9T4b1Ig80OPzPZQUQj8WezE/1kADPxxCoj4+IEI/1Np3P9UT7T6P4WU/NcnQPszU+j49RyE/NVZcPy+gSz+aqGI95BsoPltczj53DZI+mPM0Pp4AND7jD8Q+pASIPhYLHj+J5pU+cBBhPtmaFD766zQ9+MtDPlT/ET5pTEo/JglpPx+BMD8sd3w/6zIqPngwDT8QhEQ/9Nc2PwluPD+Un20/kxr1PigTEj94Q2w/dlVHP/zQxD6tDbg+GmhVPvSwdT+5I2A/4YdAPxKdgz54cic9JRARP3Ws1T2qXE4/JncpPz6M7T4CYF8/PRjXPtUVwT6zwjo+uWsJPyzykT6YO3E/A0GwPlJhKD172QU/Qf4+P1Ni9z3r9aI+/59PPtqbYD5HPCM/8JciPz2LJT82A+o+/t/OPrYHJD/dGIE+WaXqPvSGUz86rBA/YM4oPxtH0z60LGE/YTMNP59tbD2Nq0M+z1cAPsTfuDyXQHY8wBUBP7JHUz8ndCQ8//UxP4w59z68upE8H1HePi27MT8xcFY/dugjP+d+Gj4RiuU+IBsxP1nPhT4SXZM+2IS5Pmi2qD6yKk49z4R8P0fwaT+0OEw+Fl+EPiUHkj7L/Oc9nzAPP472iT61odQ9MruBPnfUeD9JkSs/zb8wPyozcT8RvIM9KVMgP3eQLD9xjUA+Uwz/PVdGhj0NZeg+3ATiPlDucj9cz98+Ufk+P6HLAj9gwMA+qxawPge4ST8aEXw/luGXPrtY+D5ZTyo/EDi6PtvXOj8RlWk/MWxSPz72LD+lLJc+xBlvP69+4D45hGk/fO4/P+p6sT7a78M+Q3LCPltEDz5BAH49Z76HPkuyNT8pV3s/CLH6PlR1ez9LwGA9OY3HPvSG0T5jANY8+opvPqvx8jwnOQg/31/0Psb58T7ji04/YFb1PW26Yz+9b6s+4UsrPpIa/T4aKc8+SGgdP3+c5T5KI8s+M7VJP7KGAj+YXBI/N9X7PumdAj8C2RM/LcAUPWMYITw8Jaw+xmoOPygl2z1wLXo/E6kwPxt/NT5VtBk/YlIsPwsyzj77+X0/yFM1PyuK5D4a7y0+R7yHPkhP+z6bD08/cz8cPwmuTD9d3gk/YNjDPsuuqj64G/86RFBAP9S5sz69Pmk/1vAGPxG9pT6xXAU/0NVSP9O2KDyuwF4/FRMHPQg1GD9ynIA89Gj4PvMe0z433PU+2eW1PavVMT6z0wU/NYu5PudScz4GjsI+d/tEPsyJsz7Gzws+kWMYP20qtj76Owg+dspJPvXaOz0j8IU+Zn3VPsMjxT1x50c8BOp9Px+V9D7kkls/nDXJPR87Vz7WYHE/1mR2Pk9OKT+R0eI+VUwcPReZgz6Xhv8+83pyPwBfoj7NH5A991PmPgZhpT5z/8A+CXjuPvodIT/+9C4/6TytPvAOYT57vKM+ofZ0PxG8BTucjvc+MEMXP57AGz8N8jg/q3YSPt0jWj9xuuo+YDtZP1mKGT89iXE/qRsYP/B1rj7pl0M+C0xdPSNuXj+YgUk+AIA+PkZNIT/cPZw+QkdjPxAoBD+YkUA/ESwVP0W8fz+zAT4//xGVPuET5j6x15k+GMkAP0pJGT/emLU+ylikPpUwMj/e1UQ/4wxHPyGLdD/4RA0/EqLKPuiS/jwKv7s+531PPxTv7j6A4To/Z53cPryFTz5XAN8+kCQRP998yz5ReW0/9cF3Pv2A+D5fYdg+jFh0PsL9IT8Wbkk/rsMNPn+2kz0rmxQ/MbQnP5La9z2laCM/RGpbPylBIj8GMSE/0MM2PltVgT3Ispg+0miTPV2S0T4wmGw/He5ZP5vVFD+VhKo8e7awPkfiPj8eTBo8dff2PrKLCD/OrDk/vqCJPk/9Qz/2RNA+PxxYP7zaWD8nCls/L0l1PlhZBz9C1sk+s6EYP80Z8z4Ukho+VvLJPt6RNT1JypE+8BNAP0AeMz+khNs9TO7sPmHj6z6YOMk+EsYYPxYvJz+YW609AvolP3uMBz+qmU8/sVndPQwZMT8kQxI/1tJoPy2LeD/UMGs/yOPBPjI9pz4l4RI/gaA5PykA+T6/CMM8zNYsP7ipbD/um5U+G5DCPhsiQT8ef2M/gkvsPhEaez+BdR8/kX2UPlOICD8dUWY/3knLPqufJj+aX+4+xEq9Phyzvz6FcRs/KmdWP+c+UT/76qQ+EBRRP07dQj9ScWQ/6Ch6PHrrCz+y4Lw+U24dP/Eafj7gToM+HFU2Pu9oUT+stMU+cLkMPyTyuT6zDRM/p12gPjdjjj3CAl4+y7p5P4yO2j70Ttw+AdWVPiN7Iz9uM209TbV7PyKaDD/qwkI/lOkhP8Lq9D6rxWQ/toHyPkVtVj+7WZE+kki4PskKcD4lDgQ/m6FdPiz0/TzRFeI9KYY5PbdNuT24fZ4+ffndPiVQbz+/FrE+Ib+NPu7wuT2LjFs/amQ3Pznwcj8Ebzo+v95qP7afYD9b+I47HHD7PSG4uDzp4GY+wFU7Pr8O/D2rd8c9d4A6P1bVPD+WdBA/7pR4P32mMT+bLw0+4h72PrJRbT8cki0/SxRmPp33WT+YoI4+9s1dPvOjDD9YcSo/jqFJP9qzUj51aF0/K4UBP/KjND+BuQA/fepbP3WeNT/rAck+TvvKPou7Bj8Mpjw8yAQJPyBp6D6eLYY+/PBFPwGBdD9zKjw/X2M3P/O2cj835Qo/6s0dP6k2FT8bovE9MTe3PgSpoj6TTT8/cyQsP7lytz4Yu8c8u1RMP0jPND6mFCo/AXy0PuoNCD/JII8+h0kCP9WMkz6hY2E/fy24PrNyOD/unY49FANwPlf3yD3Ei+E+tnwxP27jXD/ngjQ/RdDzPrHbLD/diZU9RIYrP1bsgT5CKUc/GDhFP8mCLT8sqkk/zzkePrT2gz5/b8Y+wwMwPxGDdD7t3OY+//MDPykv9T5gYHk/9HGOPmPyOT+ykmk9Zc/8PsaaqD4domg/KB70Puw58D63plE/KzkPP1OJuD42mMM9d/B1P4tlUj7Lyik/GWs4PpGTPz9c3hU/CjazPi1dwT3w+Vc8Lp0XPlYUZj/Kzgk/4qU2P8YpLD/REYY+E6sdP2xZaD9fsWI+Q+qEPvkdIT8PGnQ+MwxCP0nJWT+ZeGs/AvoXP0peuD5gXBg/sLMWPsmXPz7QezU+mxJ4P3ORdj8tWkw/MVF9P5FQkD4Ywn4+xGkIP6yvOz9HNu49abhWPz+1PT+xF2s/dQ5wP78jAj/cFds+UdWEPndPaz8LcVQ/kcKfPtxrQD+Rt0o/CA+9PtdJ4T202hw/oKmvPtbVGz+xJSo/LAQ/P+cgCz+MNyk/ytEhP785aD7tHK4+aOVNP69gTT8vMPk+PyXDPoJvXD7D4kM+TSBmP3plqz6t4Wk/dGYIP8/wPz+04TU/tWUsP56lCj/vXBY+5ZI8P8OGhD1beHk/8tKfPtaWbz8BRS0/S/43P76TlT57xSk/68ISPZRN+T69pVg+HQV6P3eFQD8a2HY/zlQsP35ZuT6stD0+ioJZP8WHHz+g6C0/tqpSPEXk0j2SaAc/abeHPF+mDT/q0Xs9XAzkPtQnMj/m6z4/69AGPeAmWj+oVxk/aEvdPaHJpz6kxzI+LXZoPz7HoD5ymUs9Hwk5P9OYJT6c7fc+Dg9aPtRtTj5ejzA9WGEQP/ZwTD9GYiU/tSYoPv0TJz/TZw8/mpydPQ1Tez+brxw/Qr8cPwCeMz+ZZB8/WUA4P30hlj1QP88+vyUPPgSbrz7QeDc+Q5I4P8+TUT7q6E8/XC49PpuOyD4LzhM+icx8P0MiGD9vZPs+X9moPl8Mfj9PT9M9USuqPrhdhj0tEaQ99qI1P1W0jj59bw4+2RPlPOVlXj87G94+cP0rPvPnGz6Ebgw/Z6cqP3dOQj/JamA+jQXrPRO2AD+rFyE+XHlOPz7+sz0QVn8/C5FaP6yarD6hHrM+0hWTPt6P3z7fpJw+ae9oP/TKUz/b4WE/LooxP0n6pT4DLw8/lxlxPmxdCj/yIFE/s2DoPoW0Qz9/c4c9FXvEPqKiUz8yvYI+/k7yPZnLcT/8Q1A9zr0tPwfO+j4/AQA/dDWPPtpR9z7T/vQ+sDc/Pz8iRD8ZIU8/gvTlPqL55T5+jDg/LDX6PsKwtT6dWiA/dfVNP3rDhz0M5zA+Pcw0PksgGT+cl249LXjnPphdqTwyBJQ+FAUhP3e+TT+LFxU/BIhIPp0Hpj6h8Vc/G4syP/xEYj+HvBw9Cp4nPY30MD9Hyk8/Ji6PPl/lET8u9M4+HI9mP7Z11T7EbWE/t1TOPnYqrj4uF3Q/Is0wP5vnSD7wVFQ+TOaoPJQ/dD3ZPQc/t5QLP4Ur7T5jnCE/6Q8tPt7xnD6vMoo+ncthP6H4HD/d5gQ/qW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU7NDbGFtcFRvRWRnZVdyYXBwaW5nrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZccMFQoAAAAKAAAACgAAAKV3cmFwVLNDbGFtcFRvRWRnZVdyYXBwaW5npHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZadhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAKtleWVwb3NpdGlvbscMFwAAgD8AAIA/AACAP6hzcGVjdWxhcscMF83MTD7NzEw+zcxMPqdwaWNraW5nwqhtb2RlbGludsdAF83MzD0AAAAAAAAAAAAAAAAAAAAAzczMPQAAAAAAAAAAAAAAAAAAAADNzMw9AAAAAAAAAAAAAAAAAAAAAAAAgD+pYWxnb3JpdGhtB6lvYmplY3RfaWQAqGlzb3Jhbmdlyj1MzM2qYWJzb3JwdGlvbso/gAAArWxpZ2h0cG9zaXRpb27HDBco/MdBKPzHQSlrvkGrZGVwdGhfc2hpZnTKAAAAAKVjb2xvcsKpc2hpbmluZXNzykIAAACoaXNvdmFsdWXKPwAAAKhjb2xvcm1hcImpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5yj+AAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU7NDbGFtcFRvRWRnZVdyYXBwaW5npGRhdGHID6AXwLSIPhO2nzsVqag+AAAAAKx+iT6mWR884s+rPgAAAACzPoo+c9BzPG/urj4AAAAAtPSKPo+xpjxtBLI+AAAAAMqgiz73GNY8YBG1PgAAAAC+Qow+ORkEPXAVuD4AAAAAydqMPl1uHj3mD7s+AAAAAMZojT75LDk93AC+PgAAAACg7I0+SO5SPRTowD4AAAAAcWaOPrTfaz39xMM+AAAAACzWjj7ZFII9kpfGPgAAAAChO48+LvWNPZpfyT4AAAAA7JaPPvKbmT2+HMw+AAAAAAHojz7/EqU92c7OPgAAAADULpA+gWGwPbJ10T4AAAAAb2uQPhWNuz31ENQ+AAAAAMqdkD4om8Y9cKDWPgAAAADtxZA+to/RPfcj2T4AAAAA3+OQPq5t3D1em9s+AAAAAKr3kD5GOOc9WAbePgAAAAA4AZE+fvHxPcJk4D4AAAAAmwCRPkib/D14tuI+AAAAAOX1kD6rmwM+QvvkPgAAAAAo4ZA+ZeMIPv8y5z4AAAAAY8KQPoglDj6cXek+AAAAAKuZkD5JYhM+9HrrPgAAAAA5Z5A+CpoYPuOK7T4AAAAA/SqQPkvNHT5Fje8+AAAAACDljz4m/CI+JILxPgAAAADIlY8+yiYoPnZp8z4AAAAADz2PPh9NLT4VQ/U+AAAAABbbjj5BbzI+Dw/3PgAAAAADcI4+do03PlXN+D4AAAAAFPyNPmmnPD76ffo+AAAAAJF/jT4tvUE+ICH8PgAAAABt+ow+0s5GPrO2/T4AAAAA+GyMPljcSz7IPv8+AAAAAGPXiz5H5VA+0lwAPwAAgD8QOos+yOlVPpcTAT8AAIA/KpWKPqTpWj7TwwE/AACAP9boiT7U5F8+qG0CPwAAgD84NYk+FttkPgoRAz8AAIA/6HqIPlfMaT4nrgM/AACAPxG6hz5RuG4+9UQEPwAAgD/L8oY+DZ9zPsfVBD8AAIA/oiWGPlGAeD6UYAU/AACAP71ShT5OXH0+neUFPwAAgD+FeoQ+PhmBPvdkBj8AAAAASJ2DPlqBgz7J3gY/AAAAAGW7gj6q5oU+P1MHPwAAAAAI1YE+9UiIPmPCBz8AAAAAfuqAPjqoij5tLAg/AAAAAEv4fz55BI0+iJEIPwAAAACKFH4+ql2PPtDxCD8AAAAA0Sp8PqezkT53TQk/AAAAAGo7ej54BpQ+pqQJPwAAAADJRng+RFaWPoD3CT8AAAAAr012PtGimD4mRgo/AAAAAJFQdD407Jo+0ZAKPwAAAAALUHI+fDKdPpvXCj8AAAAAAk1wPqF1nz64Ggs/AAAAAAVIbj6JtaE+SFoLPwAAAABhQWw+SfKjPniWCz8AAAAAozlqPvErpj5uzws/AAAAAFgxaD6TYqg+TgUMPwAAAADyKGY+MJaqPjI4DD8AAAAA+yBkPsfGrD4/aAw/AAAAAOIZYj5s9K4+oZUMPwAAAAAOFGA+Lx+xPnzADD8AAAAA8g9ePvlGsz7e6Aw/AAAAAPENXD4DbLU+9g4NPwAAAABTDlo+WI63PuYyDT8AAAAAkBFYPu6tuT7BVA0/AAAAAAYYVj7dyrs+tHQNPwAAAAD8IVQ+MuW9PsuSDT8AAAAAuy9SPgT9vz4Vrw0/AAAAABtBUD5eEsI+sskNPwAAAAC6Vk4+dyXEPrfiDT8AAAAAhHBMPkE2xj5G+g0/AAAAAGuOSj7TRMg+YhAOPwAAgD8usUg+MlHKPh0lDj8AAIA/Y9hGPn5bzD6YOA4/AACAPz8ERT7bY84+10oOPwAAgD/GNEM+TWrQPtlbDj8AAIA/WGpBPupu0j66aw4/AACAP1OkPz6+cdQ+hHoOPwAAgD/54j0+8HLWPkWIDj8AAIA/RSY8Ppty2D7/lA4/AACAP+5tOj6ocNo+sqAOPwAAAADKuTg+Vm3cPm+rDj8AAAAAMAo3PqNo3j46tQ4/AAAAAG5eNT6eYuA+GL4OPwAAAACUtjM+eFviPvfFDj8AAAAAqBIyPidT5D7tzA4/AAAAAAlyMD7VSeY+8dIOPwAAAADJ1C4+dT/oPgbYDj8AAAAA3TotPig06j4f3A4/AAAAAMejKz4JKOw+R98OPwAAAACFDyo+IxvuPmjhDj8AAAAAo30oPowN8D6B4g4/AAAAABDuJj5G//E+k+IOPwAAAACeYCU+bfDzPo3hDj8AAAAA0tQjPgzh9T5d3w4/AAAAAKxKIj4s0fc++tsOPwAAAAAswiA+9MD5PmPXDj8AAAAACzsfPlOw+z6P0Q4/AAAAAAS1HT5bn/0+Y8oOPwAAAAA8MBw+HI7/Ps/BDj8AAAAArKwaPla+AD/Ttw4/AAAAAGAqGT6BtQE/WKwOPwAAAABzqRc+n6wCP16fDj8AAAAA5ikWPqejAz/FkA4/AAAAAOerFD6jmgQ/dYAOPwAAAABfLxM+n5EFP2FuDj8AAAAAzLQRPpuIBj93Wg4/AAAAAJ88ED6Kfwc/pkQOPwAAAAAhxw4+gXYIP9ssDj8AAAAA0FQNPn1tCT/2Eg4/AAAAAHbmCz6HZAo/8fYNPwAAAABefQo+hlsLP8nYDT8AAAAAiBkJPqBSDD9VuA0/AACAPx68Bz6vSQ0/epUNPwAAgD8KZgY+3EAOPylwDT8AAIA/5RgFPgs4Dz9fSA0/AACAP1bVAz47LxA/2B0NPwAAgD+qnQI+eyYRP6zwDD8AAIA/3HIBPrwdEj+XwAw/AACAP4JXAD4MFRM/vo0MPwAAgD+Ymf49TgwUP+JXDD8AAIA/c6n8PZ4DFT8MHww/AACAPwHj+j3f+hU/DOMLPwAAAABySvk9IPIWP9+jCz8AAAAANOX3PV3pFz9lYQs/AAAAAP239j2J4Bg/lBsLPwAAAABPyPU9o9cZP0vSCj8AAAAANxv1PajOGj+YhQo/AAAAAMe19D2KxRs/SDUKPwAAAACGnfQ9TbwcP0LhCT8AAAAAWNj0PfSyHT+CiQk/AAAAALpq9T1rqR4/9S0JPwAAAAAZWvY9s58fP4nOCD8AAAAAuqv3PbyVID8xawg/AAAAACFk+T2QiyE/2wMIPwAAAABJh/s9IIEiP2aYBz8AAAAAVRn+PWB2Iz/RKAc/AAAAAIaOAD5JayQ/DbUGPwAAAADDSgI+2l8lP/08Bj8AAAAApkIEPglUJj+awAU/AAAAAAJ3Bj7QRyc/2T8FPwAAAABm6Ag+ITsoP6m6BD8AAAAAEZcLPvstKT/3MAQ/AAAAAC6DDj5LICo/vaIDPwAAAAB/rBE+ExIrP+QPAz8AAAAAcxIVPkgDLD9qeAI/AAAAAKu0GD7U8yw/S9wBPwAAAAAbkhw+vOMtP2c7AT8AAAAAvakgPvnSLj/AlQA/AAAAAL76JD55wS8/hdb/PgAAAACggyk+N68wP+N3/j4AAAAAJEMuPiacMT9rD/0+AAAAACs4Mz5CiDI/K537PgAAAADkYDg+bnMzP9Ig+j4AAAAASLw9PrNdND+Lmvg+AACAP4dIQz4DRzU/QAr3PgAAgD+rBEk+XS82P81v9T4AAIA/0u5OPqAWNz8wy/M+AACAP9EFVT7K/Dc/aRzyPgAAgD+ASVs+0+E4Pzlj8D4AAIA/cLdhPqHFOT93n+4+AACAPzxOaD5RqDo/Z9HsPgAAgD/IDG8+pYk7PwT56j4AAIA/8fF1PrppPD8UFuk+AAAAAJj8fD58SD0/0SjnPgAAAADPFYI+zyU+Pxgx5T4AAAAA+L6FPrwBPz/KLuM+AAAAAGJ5iT4n3D8/4SHhPgAAAAC0RI0+DrVAP0kK3z4AAAAAXyCRPmqMQT8c6Nw+AAAAAOcLlT4gYkI/XLvaPgAAAAD5Bpk+LzZDPweE2D4AAAAAKRGdPpMIRD8eQtY+AAAAACQqoT462UQ/oPXTPgAAAACeUaU+F6hFP4Ke0T4AAAAAMoepPh11Rj+ePM8+AAAAAKvKrT4+QEc//c/MPgAAAAC0G7I+dAlIP8hYyj4AAAAA73m2Pq3QSD/+1sc+AAAAAAXluj7olUk/kErFPgAAAAC/XL8+EllKP5+zwj4AAAAA5eDDPiYaSz8pEsA+AAAAAB9xyD4W2Us/Ima9PgAAAAA4Dc0+3ZVMP6qvuj4AAAAADLXRPmRQTT+X7rc+AAAAAGNo1j6fCE4/+CK1PgAAAADeJts+jL5OP/9Msj4AAAAAPvDfPiJyTz+4bK8+AAAAAEjE5D5XI1A/PIKsPgAAAAC1ouk+I9JQP5SNqT4AAAAAPIvuPm9+UT/2jqY+AAAAAK598z5JKFI/PoajPgAAAADrefg+lM9SP65zoD4AAAAAd3/9PkN0Uz95V50+AAAAABxHAT9jFlQ/iTGaPgAAAAD40gM/6rVUPzIClz4AAIA/LmMGP8ZSVT9kyZM+AACAP5f3CD/z7FU/WoeQPgAAgD8BkAs/YoRWP508jT4AAIA/ViwOPyMZVz846Yk+AACAP2zMED8uq1c/nI2GPgAAgD8PcBM/cDpYP/Mpgz4AAIA/HBcWP+TGWD9IfX8+AACAP1HBGD+pUFk/8ph4PgAAgD+Xbhs/rtdZP1GncT4AAIA/uB4eP/RbWj8Dqmo+AAAAAHHRID993Vo/M6JjPgAAAACnhiM/V1xbP2yRXD4AAAAACD4mP4XYWz/SeVU+AAAAAG73KD8EUlw/VF1OPgAAAACdsis/3shcP64+Rz4AAAAAU28uPy09XT+0IEA+AAAAAFQtMT/yrl0/+QY5PgAAAABZ7DM/Nx5ePzP1MT4AAAAAJaw2PxSLXj9A8Co+AAAAAIJsOT+X9V4/v/0jPgAAAAAcLTw/1V1fP+8jHT4AAAAAq+0+P93DXz90ahY+AAAAAOetQT/TJ2A/CtoPPgAAAACRbUQ/yolgP/58CT4AAAAAWixHP9TpYD/PXgM+AAAAAPfpST8eSGE/mBn7PQAAAAAqpkw/uKRhP4ws8D0AAAAAmmBPP8H/YT/AF+Y9AAAAAAkZUj9jWWI/S//cPQAAAAA/z1Q/ubFiP+QJ1T0AAAAA64JXP+gIYz91Xs49AAAAAMYzWj8UX2M/3iLJPQAAAACR4Vw/YbRjPzJ5xT0AAAAAHIxfP/MIZD8CfcM9AAAAACgzYj/tXGQ/N0LDPQAAAACJ1mQ/aLBkP+HRxD0AAAAA/3VnP5wDZT89Ksg9AAAAAF8Raj+bVmU/vz7NPQAAAAA+qGw/uallP5H60z0AAAAAkjpvP+/8ZT8JQNw9AAAAAFvIcT9yUGY/SO7lPQAAAAB/UXQ/TaRmP8Xh8D0AAAAA19V2P674Zj92+Pw9AAAAAFBVeT+tTWc/0gcFPgAAAADZz3s/WaNnP4UEDD4AAAAAgEV+P+j5Zz/1YxM+AAAAAKx0aHJlZV9mb3JtYXSqUkdCQUZvcm1hdKRzaXpl1hX6AAAApHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZad2aXNpYmxlxxRoszY0NjY1MjY3NTI5NDIzNTc4ODKxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTI5MTI2OTQzODUyNDYwMTAxNzWob3ZlcmRyYXfHFWi0MTMyODIzMTcwOTQ1MTgzNTk2ODWvdW5pZm9ybV91cGRhdGVyxxVotDE1MDg1NTg5NjMxMzA5OTM5OTA4pWZhY2VzxxVotDEyNDIyNTE3OTE3MjI4OTg5MTAypHV1aWSzNDIxNDc1NDEwNzQ4NDgzNzU1MK12ZXJ0ZXhfc291cmNl2gdOI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMzIHBvc2l0aW9uOwp2ZWMzIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gZmxvYXQgYWJzb3JwdGlvbjsKZmxvYXQgZ2V0X2Fic29ycHRpb24oKXtyZXR1cm4gYWJzb3JwdGlvbjt9CnVuaWZvcm0gc2FtcGxlcjJEIGNvbG9ybWFwOwp1bmlmb3JtIGZsb2F0IGlzb3ZhbHVlOwpmbG9hdCBnZXRfaXNvdmFsdWUoKXtyZXR1cm4gaXNvdmFsdWU7fQp1bmlmb3JtIHZlYzMgbGlnaHRwb3NpdGlvbjsKdmVjMyBnZXRfbGlnaHRwb3NpdGlvbigpe3JldHVybiBsaWdodHBvc2l0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjMyBleWVwb3NpdGlvbjsKdmVjMyBnZXRfZXllcG9zaXRpb24oKXtyZXR1cm4gZXllcG9zaXRpb247fQp1bmlmb3JtIGZsb2F0IGlzb3JhbmdlOwpmbG9hdCBnZXRfaXNvcmFuZ2UoKXtyZXR1cm4gaXNvcmFuZ2U7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIG1hdDQgbW9kZWxpbnY7Cm1hdDQgZ2V0X21vZGVsaW52KCl7cmV0dXJuIG1vZGVsaW52O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIHVpbnQgYWxnb3JpdGhtOwp1aW50IGdldF9hbGdvcml0aG0oKXtyZXR1cm4gYWxnb3JpdGhtO30KdW5pZm9ybSB2ZWMzIGFtYmllbnQ7CnZlYzMgZ2V0X2FtYmllbnQoKXtyZXR1cm4gYW1iaWVudDt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHNhbXBsZXIzRCB2b2x1bWVkYXRhOwp1bmlmb3JtIHZlYzIgY29sb3JyYW5nZTsKdmVjMiBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSBib29sIGNvbG9yOwpib29sIGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKCgpvdXQgdmVjMyBmcmFnX3ZlcnQ7Cm91dCB2ZWMzIG9fbGlnaHRfZGlyOwoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb24sIHZpZXc7Cgp2b2lkIG1haW4oKQp7CiAgICBmcmFnX3ZlcnQgPSBwb3NpdGlvbjsKICAgIHZlYzQgd29ybGRfdmVydCA9IG1vZGVsICogdmVjNChwb3NpdGlvbiwgMSk7CiAgICBvX2xpZ2h0X2RpciA9IHZlYzMobW9kZWxpbnYgKiB2ZWM0KGdldF9saWdodHBvc2l0aW9uKCksIDEpKTsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbiAqIHZpZXcgKiB3b3JsZF92ZXJ0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaIXYjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSBmbG9hdCBhYnNvcnB0aW9uOwpmbG9hdCBnZXRfYWJzb3JwdGlvbigpe3JldHVybiBhYnNvcnB0aW9uO30KdW5pZm9ybSBzYW1wbGVyMkQgY29sb3JtYXA7CnVuaWZvcm0gZmxvYXQgaXNvdmFsdWU7CmZsb2F0IGdldF9pc292YWx1ZSgpe3JldHVybiBpc292YWx1ZTt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWMzIGV5ZXBvc2l0aW9uOwp2ZWMzIGdldF9leWVwb3NpdGlvbigpe3JldHVybiBleWVwb3NpdGlvbjt9CnVuaWZvcm0gZmxvYXQgaXNvcmFuZ2U7CmZsb2F0IGdldF9pc29yYW5nZSgpe3JldHVybiBpc29yYW5nZTt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMzIHNwZWN1bGFyOwp2ZWMzIGdldF9zcGVjdWxhcigpe3JldHVybiBzcGVjdWxhcjt9CnVuaWZvcm0gbWF0NCBtb2RlbGludjsKbWF0NCBnZXRfbW9kZWxpbnYoKXtyZXR1cm4gbW9kZWxpbnY7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gdWludCBhbGdvcml0aG07CnVpbnQgZ2V0X2FsZ29yaXRobSgpe3JldHVybiBhbGdvcml0aG07fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gc2FtcGxlcjNEIHZvbHVtZWRhdGE7CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CgpzdHJ1Y3QgTm90aGluZ3sgLy9Ob3RoaW5nIHR5cGUsIHRvIGVuY29kZSBpZiBzb21lIHZhcmlhYmxlIGRvZXNuJ3QgY29udGFpbiBhbnkgZGF0YQogICAgYm9vbCBfOyAvL2VtcHR5IHN0cnVjdHMgYXJlIG5vdCBhbGxvd2VkCn07CmluIHZlYzMgZnJhZ192ZXJ0OwppbiB2ZWMzIG9fbGlnaHRfZGlyOwoKY29uc3QgZmxvYXQgbWF4X2Rpc3RhbmNlID0gMS4zOwoKY29uc3QgaW50IG51bV9zYW1wbGVzID0gMjAwOwpjb25zdCBmbG9hdCBzdGVwX3NpemUgPSBtYXhfZGlzdGFuY2UgLyBmbG9hdChudW1fc2FtcGxlcyk7CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pCnsKICAgIHJldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7Cn0KCnZlYzQgY29sb3JfbG9va3VwKGZsb2F0IGludGVuc2l0eSwgc2FtcGxlcjJEIGNvbG9yX3JhbXAsIHZlYzIgbm9ybSkKewogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfcmFtcCwgdmVjMihfbm9ybWFsaXplKGludGVuc2l0eSwgbm9ybS54LCBub3JtLnkpLCAwLjApKTsKfQoKdmVjMyBnZW5ub3JtYWwodmVjMyB1dncsIGZsb2F0IGQpCnsKICAgIHZlYzMgYSwgYjsKICAgIC8vIGhhbmRsZSBub3JtYWxzIGF0IGVkZ2VzIQogICAgaWYodXZ3LnggKyBkID49IDEuMCl7CiAgICAgICAgcmV0dXJuIHZlYzMoMSwgMCwgMCk7CiAgICB9CiAgICBpZih1dncueSArIGQgPj0gMS4wKXsKICAgICAgICByZXR1cm4gdmVjMygwLCAxLCAwKTsKICAgIH0KICAgIGlmKHV2dy56ICsgZCA+PSAxLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIDAsIDEpOwogICAgfQoKICAgIGlmKHV2dy54IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKC0xLCAwLCAwKTsKICAgIH0KICAgIGlmKHV2dy55IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIC0xLCAwKTsKICAgIH0KICAgIGlmKHV2dy56IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIDAsIC0xKTsKICAgIH0KCiAgICBhLnggPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHV2dyAtIHZlYzMoZCwwLjAsMC4wKSkucjsKICAgIGIueCA9IHRleHR1cmUodm9sdW1lZGF0YSwgdXZ3ICsgdmVjMyhkLDAuMCwwLjApKS5yOwoKICAgIGEueSA9IHRleHR1cmUodm9sdW1lZGF0YSwgdXZ3IC0gdmVjMygwLjAsZCwwLjApKS5yOwogICAgYi55ID0gdGV4dHVyZSh2b2x1bWVkYXRhLCB1dncgKyB2ZWMzKDAuMCxkLDAuMCkpLnI7CgogICAgYS56ID0gdGV4dHVyZSh2b2x1bWVkYXRhLCB1dncgLSB2ZWMzKDAuMCwwLjAsZCkpLnI7CiAgICBiLnogPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHV2dyArIHZlYzMoMC4wLDAuMCxkKSkucjsKICAgIHJldHVybiBub3JtYWxpemUoYS1iKTsKfQoKdmVjMyBibGlubnBob25nKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIHZlYzMgY29sb3IpewogICAgZmxvYXQgZGlmZl9jb2VmZiA9IG1heChkb3QoTCwgTiksIDAuMCkgKyBtYXgoZG90KEwsIC1OKSwgMC4wKTsKICAgIC8vIHNwZWN1bGFyIGNvZWZmaWNpZW50CiAgICB2ZWMzIEggPSBub3JtYWxpemUoTCArIFYpOwogICAgZmxvYXQgc3BlY19jb2VmZiA9IHBvdyhtYXgoZG90KEgsIE4pLCAwLjApICsgbWF4KGRvdChILCAtTiksIDAuMCksIHNoaW5pbmVzcyk7CiAgICAvLyBmaW5hbCBsaWdodGluZyBtb2RlbAogICAgcmV0dXJuIHZlYzMoCiAgICAgICAgYW1iaWVudCAqIGNvbG9yICsKICAgICAgICBkaWZmdXNlICogZGlmZl9jb2VmZiAqIGNvbG9yICsKICAgICAgICBzcGVjdWxhciAqIHNwZWNfY29lZmYKICAgICk7Cn0KCi8vIFNpbXBsZSByYW5kb20gZ2VuZXJhdG9yIGZvdW5kOgovLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQyMDAyMjQvcmFuZG9tLW5vaXNlLWZ1bmN0aW9ucy1mb3ItZ2xzbApmbG9hdCByYW5kKCl7CiAgICByZXR1cm4gZnJhY3Qoc2luKGdsX0ZyYWdDb29yZC54ICogMTIuOTg5OCArIGdsX0ZyYWdDb29yZC55ICogNzguMjMzKSAqIDQzNzU4LjU0NTMpOwp9Cgp2ZWM0IHZvbHVtZSh2ZWMzIGZyb250LCB2ZWMzIGRpcikKewogICAgLy8gVGhlIHBlci12b3hlbCBhbHBoYSBjaGFubmVsIGlzIHNwZWNpZmllZCBpbiB1bml0cyBvZiBvcGFjaXR5L2xlbmd0aC4KICAgIC8vIElmIG91ciB2b3hlbHMgYXJlIG5vdCBpc290cm9waWMsIHRoZW4gdGhlIGRpc3RhbmNlIHRoYXQgd2UgdHJhY2UgdGhyb3VnaAogICAgLy8gZGVwZW5kcyBvbiB0aGUgZGlyZWN0aW9uLgogICAgdmVjMyAgcG9zID0gZnJvbnQ7CiAgICBmbG9hdCBUID0gMS4wOwogICAgdmVjMyBMbyA9IHZlYzMoMC4wKTsKICAgIGludCBpID0gMDsKICAgIGZvciAoaTsgaSA8IG51bV9zYW1wbGVzOyArK2kpIHsKICAgICAgICBmbG9hdCBpbnRlbnNpdHkgPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHBvcykueDsKICAgICAgICB2ZWM0IGRlbnNpdHkgPSBjb2xvcl9sb29rdXAoaW50ZW5zaXR5LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICAgICAgZmxvYXQgb3BhY2l0eSA9IHN0ZXBfc2l6ZSAqIGRlbnNpdHkuYSAqIGFic29ycHRpb247CiAgICAgICAgVCAqPSAxLjAgLSBvcGFjaXR5OwogICAgICAgIGlmIChUIDw9IDAuMDEpCiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICBMbyArPSAoVCpvcGFjaXR5KSpkZW5zaXR5LnJnYjsKICAgICAgICBwb3MgKz0gZGlyOwogICAgfQogICAgcmV0dXJuIHZlYzQoTG8sIDEuMCAtIFQpOwp9CgoKdmVjNCB2b2x1bWVyZ2JhKHZlYzMgZnJvbnQsIHZlYzMgZGlyKQp7CiAgICB2ZWMzICBwb3MgPSBmcm9udDsKICAgIGZsb2F0IFQgPSAxLjA7CiAgICB2ZWMzIExvID0gdmVjMygwLjApOwogICAgaW50IGkgPSAwOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXMgOyArK2kpIHsKICAgICAgICB2ZWM0IGRlbnNpdHkgPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHBvcyk7CiAgICAgICAgZmxvYXQgb3BhY2l0eSA9IHN0ZXBfc2l6ZSAqIGRlbnNpdHkuYTsKICAgICAgICBUICo9IDEuMCAtIG9wYWNpdHk7CiAgICAgICAgaWYgKFQgPD0gMC4wMSkKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgIExvICs9IChUKm9wYWNpdHkpKmRlbnNpdHkucmdiOwogICAgICAgIHBvcyArPSBkaXI7CiAgICB9CiAgICByZXR1cm4gdmVjNChMbywgMS4wIC0gVCk7Cn0KCnZlYzQgY29udG91cnModmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICBmbG9hdCBUID0gMS4wOwogICAgdmVjMyBMbyA9IHZlYzMoMC4wKTsKICAgIGludCBpID0gMDsKICAgIHZlYzMgY2FtZGlyID0gbm9ybWFsaXplKC1kaXIpOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSkgewogICAgICAgIGZsb2F0IGludGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIHZlYzQgZGVuc2l0eSA9IGNvbG9yX2xvb2t1cChpbnRlbnNpdHksIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgICAgICBmbG9hdCBvcGFjaXR5ID0gZGVuc2l0eS5hOwogICAgICAgIGlmKG9wYWNpdHkgPiAwLjApewogICAgICAgICAgICB2ZWMzIE4gPSBnZW5ub3JtYWwocG9zLCBzdGVwX3NpemUpOwogICAgICAgICAgICB2ZWMzIEwgPSBub3JtYWxpemUob19saWdodF9kaXIgLSBwb3MpOwogICAgICAgICAgICB2ZWMzIG9wYXF1ZSA9IGJsaW5ucGhvbmcoTiwgY2FtZGlyLCBMLCBkZW5zaXR5LnJnYik7CiAgICAgICAgICAgIExvICs9IChUICogb3BhY2l0eSkgKiBvcGFxdWU7CiAgICAgICAgICAgIFQgKj0gMS4wIC0gb3BhY2l0eTsKICAgICAgICAgICAgaWYgKFQgPD0gMC4wMSkKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBwb3MgKz0gZGlyOwogICAgfQogICAgcmV0dXJuIHZlYzQoTG8sIDEuMCAtIFQpOwp9Cgp2ZWM0IGlzb3N1cmZhY2UodmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICB2ZWM0IGMgPSB2ZWM0KDAuMCk7CiAgICBpbnQgaSA9IDA7CiAgICB2ZWM0IGRpZmZ1c2VfY29sb3IgPSBjb2xvcl9sb29rdXAoaXNvdmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIHZlYzMgY2FtZGlyID0gbm9ybWFsaXplKC1kaXIpOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSl7CiAgICAgICAgZmxvYXQgZGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIGlmKGFicyhkZW5zaXR5IC0gaXNvdmFsdWUpIDwgaXNvcmFuZ2UpewogICAgICAgICAgICB2ZWMzIE4gPSBnZW5ub3JtYWwocG9zLCBzdGVwX3NpemUpOwogICAgICAgICAgICB2ZWMzIEwgPSBub3JtYWxpemUob19saWdodF9kaXIgLSBwb3MpOwogICAgICAgICAgICBjID0gdmVjNCgKICAgICAgICAgICAgICAgIGJsaW5ucGhvbmcoTiwgY2FtZGlyLCBMLCBkaWZmdXNlX2NvbG9yLnJnYiksCiAgICAgICAgICAgICAgICBkaWZmdXNlX2NvbG9yLmEKICAgICAgICAgICAgKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIHBvcyArPSBkaXI7CiAgICB9CiAgICByZXR1cm4gYzsKfQoKdmVjNCBtaXAodmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICBpbnQgaSA9IDA7CiAgICBmbG9hdCBtYXhpbXVtID0gMC4wOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSwgcG9zICs9IGRpcil7CiAgICAgICAgZmxvYXQgZGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIGlmKG1heGltdW0gPCBkZW5zaXR5KQogICAgICAgICAgICBtYXhpbXVtID0gZGVuc2l0eTsKICAgIH0KICAgIHJldHVybiBjb2xvcl9sb29rdXAobWF4aW11bSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwp9Cgp1bmlmb3JtIHVpbnQgb2JqZWN0aWQ7Cgpjb25zdCBmbG9hdCB0eXBlbWF4ID0gMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLjA7Cgpib29sIG5vX3NvbHV0aW9uKGZsb2F0IHgpewogICAgcmV0dXJuIHggPD0gMC4wMDAxIHx8IGlzaW5mKHgpIHx8IGlzbmFuKHgpOwp9CgpmbG9hdCBtaW5fYmlnZ2VyXzAoZmxvYXQgYSwgZmxvYXQgYil7CiAgICBib29sIGFfbm8gPSBub19zb2x1dGlvbihhKTsKICAgIGJvb2wgYl9ubyA9IG5vX3NvbHV0aW9uKGIpOwogICAgaWYoYV9ubyAmJiBiX25vKXsKICAgICAgICAvLyBubyBzb2x1dGlvbgogICAgICAgIHJldHVybiB0eXBlbWF4OwogICAgfQogICAgaWYoYV9ubyl7CiAgICAgICAgcmV0dXJuIGI7CiAgICB9CiAgICBpZihiX25vKXsKICAgICAgICByZXR1cm4gYTsKICAgIH0KICAgIHJldHVybiBtaW4oYSwgYik7Cn0KCmZsb2F0IG1pbl9iaWdnZXJfMCh2ZWMzIHYxLCB2ZWMzIHYyKXsKICAgIGZsb2F0IHggPSBtaW5fYmlnZ2VyXzAodjEueCwgdjIueCk7CiAgICBmbG9hdCB5ID0gbWluX2JpZ2dlcl8wKHYxLnksIHYyLnkpOwogICAgZmxvYXQgeiA9IG1pbl9iaWdnZXJfMCh2MS56LCB2Mi56KTsKICAgIHJldHVybiBtaW4oeCwgbWluKHksIHopKTsKfQoKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjNCBjb2xvcjsKICAgIHZlYzMgZXllX3VuaXQgPSB2ZWMzKG1vZGVsaW52ICogdmVjNChleWVwb3NpdGlvbiwgMSkpOwogICAgdmVjMyBiYWNrX3Bvc2l0aW9uID0gZnJhZ192ZXJ0OwogICAgdmVjMyBkaXIgPSBub3JtYWxpemUoZXllX3VuaXQgLSBiYWNrX3Bvc2l0aW9uKTsKICAgIC8vIHNvbHZlIGJhY2tfcG9zaXRpb24gKyBkaXN0YW5jZSAqIGRpciA9PSAxCiAgICAvLyBzb2x2ZSBiYWNrX3Bvc2l0aW9uICsgZGlzdGFuY2UgKiBkaXIgPT0gMAogICAgLy8gdG8gc2VlIHdoZXJlIGl0IGZpcnN0IGhpdHMgdW5pdCBjdWJlIQogICAgdmVjMyBzb2x1dGlvbl8xID0gKDEuMCAtIGJhY2tfcG9zaXRpb24pIC8gZGlyOwogICAgdmVjMyBzb2x1dGlvbl8wID0gKDAuMCAtIGJhY2tfcG9zaXRpb24pIC8gZGlyOwogICAgZmxvYXQgc29sdXRpb24gPSBtaW5fYmlnZ2VyXzAoc29sdXRpb25fMSwgc29sdXRpb25fMCk7CgogICAgdmVjMyBzdGFydCA9IGJhY2tfcG9zaXRpb24gKyBzb2x1dGlvbiAqIGRpcjsKICAgIHZlYzMgc3RlcF9pbl9kaXIgPSAoYmFja19wb3NpdGlvbiAtIHN0YXJ0KSAvIGZsb2F0KG51bV9zYW1wbGVzKTsKCiAgICBmbG9hdCBzdGVwcyA9IDAuMTsKICAgIGlmKGFsZ29yaXRobSA9PSB1aW50KDApKQogICAgICAgIGNvbG9yID0gaXNvc3VyZmFjZShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgxKSkKICAgICAgICBjb2xvciA9IHZvbHVtZShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgyKSkKICAgICAgICBjb2xvciA9IG1pcChzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgzKSkKICAgICAgICBjb2xvciA9IHZvbHVtZXJnYmEoc3RhcnQsIHN0ZXBfaW5fZGlyKTsKICAgIGVsc2UgaWYoYWxnb3JpdGhtID09IHVpbnQoNCkpCiAgICAgICAgY29sb3IgPSB2ZWM0KDAuMCk7CiAgICAgICAgLy8gY29sb3IgPSB2b2x1bWVpbmRleGVkcmdiYShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZQogICAgICAgIGNvbG9yID0gY29udG91cnMoc3RhcnQsIHN0ZXBfaW5fZGlyKTsKCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChjb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCB1aW50KDApKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGNvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBjb2xvcjsKCn0Kj6x0cmFuc3BhcmVuY3nHFWi0MTMyNjUzMDU3Mjk2ODA2MzU5MDelc3BhY2XHFWi0MTMxMTk1OTY0MjE0NzUzMzQ3NTGsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtOTUyNzA3MjE2OTIxMDM0OTExMKljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAgD8AAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0ykAAAACpbGluZXdpZHRoykAAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAACzQwBAB0StbGluZXdpZHRoX2VuZMpAAAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAIA/AAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFyj8x0Eo/MdBKWu+QaVjb2xvctgXAACAPwAAAAAAAAAAAACAP6d2aXNpYmxlxxVotDExMTI1MDIyNzg0NDgxNzc3NDkysWF0dHJpYnV0ZV91cGRhdGVyxxVotDE4MjcyNzk3NTMxNDM4MzEyNjg1qG92ZXJkcmF3xxVotDE0NzY4NjA3NzQyMTIyNDYzMzk3r3VuaWZvcm1fdXBkYXRlcscVaLQxMzg0OTcyOTQ0NTA0NjI0NzI3OaVmYWNlc8cUaLM5NjIzOTgwMzk4MzY2NTgxMzU5pHV1aWSzOTUyNzA3MjE2OTIxMDM0OTExMK12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAwQQAAgL8AADBBAAAwQQAAgL8AADBBAACAvwAAgL+tc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAIC/AACAvwAAMEEAAIC/AAAwQQAAMEEAAIC/AAAwQa9iYWNrZ3JvdW5kY29sb3LHFGizMTM4NDExOTkxOTgxMzg5NjY0N6lwaXhlbGFyZWHHFGizMTAyNjQwODMwNDkxNzU0NDE3MqZjYW1lcmHHFGizMzU3NTA4MzU3NzkxMzQwMzY1MqR1dWlktDEwMzkzNjA0MDMzMzk2MjYzOTMxq2NhbTNkX3N0YXRlh6Zsb29rYXTHDBf+Q8ZA/kPGQAAAoECrZXllcG9zaXRpb27HDBco/MdBKPzHQSlrvkGqcmVzb2x1dGlvbscUaLM2NDg2NjM1NDkyNTQ2NDU2ODkyqHVwdmVjdG9yxwwXAAAAAAAAAAAAAIA/o2ZvdspCNAAApG5lYXLKQC2wPaNmYXLKQqLVOapjbGVhcnNjZW5lxxRoszg4NDc4NjU0Njc5MDk2NTQ5NDOoY2hpbGRyZW6Qiad2aXNpYmxlxxRoszEzNTY0OTMxMTcyNjM3MDcyOTelcGxvdHPcAB+OrHRyYW5zcGFyZW5jeccVaLQxNzgyNjk4NTEyODE1ODQ3MjU4N6VzcGFjZccVaLQxNTE1MTQzODI0OTkwNDAyMjAyMKx2ZXJ0ZXhhcnJheXOBqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAA1UMAACxCAABERAAALEIAANVDAAASRAAAREQAABJEpG5hbWW4bWVzaC0yNzM0OTgxNTU3MzMyOTY2NjU2qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gAXvmludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcsOpYmFja2xpZ2h0ygAAAAClbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAyMIAAIA/p2RpZmZ1c2XHDBfNzMw+zczMPs3MzD6qY29sb3JyYW5nZcKnbG93Y2xpcNgXAAAAAAAAAAAAAAAAAAAAAKhoaWdoY2xpcNgXAAAAAAAAAAAAAAAAAAAAAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAKdwYXR0ZXJuwqxub3JtYWxtYXRyaXjHJBcAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+idXbXFwAAAAAAAAAAp3NoYWRpbmfCqHNwZWN1bGFyxwwXzcxMPs3MTD7NzEw+p25vcm1hbHPHDBcAAAAAAAAAAAAAAACncGlja2luZ8Kpb2JqZWN0X2lkAK11bmlmb3JtX2NvbG9y2BcAAIA/AACAPwAAgD8AAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvcsKpc2hpbmluZXNzykIAAACoY29sb3JtYXDCp3Zpc2libGXHFGizMzM2OTk1OTYwNDE4Mzg0NjM1NLFhdHRyaWJ1dGVfdXBkYXRlcscUaLM3MDExNDUwNzQ2MjA1MDM1MzY4qG92ZXJkcmF3xxVotDE3NjE2MzM0NzE2MTExNTM4NTIxr3VuaWZvcm1fdXBkYXRlcscUaLM2NTcyMTIyMjMwNjY5NDg3NTc4pWZhY2VzxxRoszk5NzY3MzYwNDk2NjMwNzM5NDekdXVpZLMyNzM0OTgxNTU3MzMyOTY2NjU2rXZlcnRleF9zb3VyY2XaFCkjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIGNvbG9yOwpib29sIGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gdmVjNCB1bmlmb3JtX2NvbG9yOwp2ZWM0IGdldF91bmlmb3JtX2NvbG9yKCl7cmV0dXJuIHVuaWZvcm1fY29sb3I7fQp1bmlmb3JtIGJvb2wgc2hhZGluZzsKYm9vbCBnZXRfc2hhZGluZygpe3JldHVybiBzaGFkaW5nO30KdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKCgpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgdmVjMyBvX25vcm1hbDsKb3V0IHZlYzMgb19jYW1kaXI7Cm91dCB2ZWMzIG9fbGlnaHRkaXI7CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNChmbG9hdCB2KXtyZXR1cm4gdmVjNCh2LCAwLjAsIDAuMCwgMC4wKTt9CnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKZmxvYXQgX25vcm1hbGl6ZShmbG9hdCB2YWwsIGZsb2F0IGZyb20sIGZsb2F0IHRvKXtyZXR1cm4gKHZhbC1mcm9tKSAvICh0byAtIGZyb20pO30KCnZlYzQgZ2V0X2NvbG9yX2Zyb21fY21hcChmbG9hdCB2YWx1ZSwgc2FtcGxlcjJEIGNvbG9yX21hcCwgdmVjMiBjb2xvcnJhbmdlKSB7CiAgICBmbG9hdCBjbWluID0gY29sb3JyYW5nZS54OwogICAgZmxvYXQgY21heCA9IGNvbG9ycmFuZ2UueTsKICAgIGlmICh2YWx1ZSA8PSBjbWF4ICYmIHZhbHVlID49IGNtaW4pIHsKICAgICAgICAvLyBpbiB2YWx1ZSByYW5nZSwgY29udGludWUhCiAgICB9IGVsc2UgaWYgKHZhbHVlIDwgY21pbikgewogICAgICAgIHJldHVybiBnZXRfbG93Y2xpcCgpOwogICAgfSBlbHNlIGlmICh2YWx1ZSA+IGNtYXgpIHsKICAgICAgICByZXR1cm4gZ2V0X2hpZ2hjbGlwKCk7CiAgICB9IGVsc2UgewogICAgICAgIC8vIGlzbmFuIGlzIGJyb2tlbiAob2YgY291cnNlKSAtLi0KICAgICAgICAvLyBzbyBpZiBvdXRzaWRlIHZhbHVlIHJhbmdlIGFuZCBub3Qgc21hbGxlci9iaWdnZXIgbWluL21heCB3ZSBhc3N1bWUgTmFOCiAgICAgICAgcmV0dXJuIGdldF9uYW5fY29sb3IoKTsKICAgIH0KICAgIGZsb2F0IGkwMSA9IGNsYW1wKCh2YWx1ZSAtIGNtaW4pIC8gKGNtYXggLSBjbWluKSwgMC4wLCAxLjApOwogICAgLy8gMS8wIGNvcnJlc3BvbmRzIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGNvbG9ybWFwLCBzbyB0byBwcm9wZXJseSBpbnRlcnBvbGF0ZQogICAgLy8gYmV0d2VlbiB0aGUgY29sb3JzLCB3ZSBuZWVkIHRvIHNjYWxlIGl0LCBzbyB0aGF0IHRoZSBlbmRzIGFyZSBhdCAxIC0gKHN0ZXBzaXplLzIpIGFuZCAwKyhzdGVwc2l6ZS8yKS4KICAgIGZsb2F0IHN0ZXBzaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoY29sb3JfbWFwLCAwKSk7CiAgICBpMDEgPSAoMS4wIC0gc3RlcHNpemUpICogaTAxICsgMC41ICogc3RlcHNpemU7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvcl9tYXAsIHZlYzIoaTAxLCAwLjApKTsKfQoKdmVjNCB2ZXJ0ZXhfY29sb3IodmVjMyBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiB2ZWM0KGNvbG9yLCAxLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKHZlYzQgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IoYm9vbCBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgdmFsdWUsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGZsb2F0IHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIHZlYzQodmFsdWUsIDAuMCwgMC4wLCAwLjApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcCh2YWx1ZSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwogICAgfQp9Cgp2b2lkIHJlbmRlcih2ZWM0IHBvc2l0aW9uX3dvcmxkLCB2ZWMzIG5vcm1hbCwgbWF0NCB2aWV3LCBtYXQ0IHByb2plY3Rpb24sIHZlYzMgbGlnaHRwb3NpdGlvbikKewogICAgLy8gbm9ybWFsIGluIHdvcmxkIHNwYWNlCiAgICBvX25vcm1hbCA9IGdldF9ub3JtYWxtYXRyaXgoKSAqIG5vcm1hbDsKICAgIC8vIHBvc2l0aW9uIGluIHZpZXcgc3BhY2UgKGFzIHNlZW4gZnJvbSBjYW1lcmEpCiAgICB2ZWM0IHZpZXdfcG9zID0gdmlldyAqIHBvc2l0aW9uX3dvcmxkOwogICAgLy8gcG9zaXRpb24gaW4gY2xpcCBzcGFjZSAody8gZGVwdGgpCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3X3BvczsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwogICAgLy8gZGlyZWN0aW9uIHRvIGxpZ2h0CiAgICBvX2xpZ2h0ZGlyID0gbm9ybWFsaXplKHZpZXcqdmVjNChsaWdodHBvc2l0aW9uLCAxLjApIC0gdmlld19wb3MpLnh5ejsKICAgIC8vIGRpcmVjdGlvbiB0byBjYW1lcmEKICAgIC8vIFRoaXMgaXMgZXF1aXZhbGVudCB0bwogICAgLy8gbm9ybWFsaXplKHZpZXcqdmVjNChleWVwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXoKICAgIC8vIChieSBkZWZpbml0aW9uIGB2aWV3ICogZXllcG9zaXRpb24gPSAwYCkKICAgIG9fY2FtZGlyID0gbm9ybWFsaXplKC12aWV3X3BvcykueHl6Owp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIC8vIGdldF8qIGdldHMgdGhlIGdsb2JhbCBpbnB1dHMgKHVuaWZvcm0sIHNhbXBsZXIsIHBvc2l0aW9uIGFycmF5KQogICAgLy8gdGhvc2UgZnVuY3Rpb25zIHdpbGwgZ2V0IGluc2VydGVkIGJ5IHRoZSBzaGFkZXIgY3JlYXRpb24gcGlwZWxpbmUKICAgIHZlYzMgdmVydGV4X3Bvc2l0aW9uID0gdG92ZWMzKGdldF9wb3NpdGlvbigpKTsKICAgIGlmIChpc25hbih2ZXJ0ZXhfcG9zaXRpb24ueikpIHsKICAgICAgICB2ZXJ0ZXhfcG9zaXRpb24ueiA9IDAuMDsKICAgIH0KICAgIHZlYzQgcG9zaXRpb25fd29ybGQgPSBtb2RlbCAqIHZlYzQodmVydGV4X3Bvc2l0aW9uLCAxKTsKCiAgICByZW5kZXIocG9zaXRpb25fd29ybGQsIGdldF9ub3JtYWxzKCksIHZpZXcsIHByb2plY3Rpb24sIGdldF9saWdodHBvc2l0aW9uKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191diA9IHZlYzIoMS4wIC0gZnJhZ191di55LCBmcmFnX3V2LngpOwogICAgZnJhZ19jb2xvciA9IHZlcnRleF9jb2xvcihnZXRfY29sb3IoKSwgZ2V0X2NvbG9ycmFuZ2UoKSwgY29sb3JtYXApOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX1ZlcnRleElEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoVVCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMzIHNwZWN1bGFyOwp2ZWMzIGdldF9zcGVjdWxhcigpe3JldHVybiBzcGVjdWxhcjt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIHZlYzMgbm9ybWFsczsKdmVjMyBnZXRfbm9ybWFscygpe3JldHVybiBub3JtYWxzO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBib29sIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjsKYm9vbCBnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCl7cmV0dXJuIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjt9CnVuaWZvcm0gZmxvYXQgYmFja2xpZ2h0OwpmbG9hdCBnZXRfYmFja2xpZ2h0KCl7cmV0dXJuIGJhY2tsaWdodDt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIG1hdDMgbm9ybWFsbWF0cml4OwptYXQzIGdldF9ub3JtYWxtYXRyaXgoKXtyZXR1cm4gbm9ybWFsbWF0cml4O30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSB2ZWM0IHVuaWZvcm1fY29sb3I7CnZlYzQgZ2V0X3VuaWZvcm1fY29sb3IoKXtyZXR1cm4gdW5pZm9ybV9jb2xvcjt9CnVuaWZvcm0gYm9vbCBzaGFkaW5nOwpib29sIGdldF9zaGFkaW5nKCl7cmV0dXJuIHNoYWRpbmc7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CgppbiB2ZWMyIGZyYWdfdXY7CmluIHZlYzQgZnJhZ19jb2xvcjsKZmxhdCBpbiBpbnQgc2FtcGxlX2ZyYWdfY29sb3I7CgppbiB2ZWMzIG9fbm9ybWFsOwppbiB2ZWMzIG9fY2FtZGlyOwppbiB2ZWMzIG9fbGlnaHRkaXI7Cgp2ZWMzIGJsaW5ucGhvbmcodmVjMyBOLCB2ZWMzIFYsIHZlYzMgTCwgdmVjMyBjb2xvcil7CiAgICBmbG9hdCBkaWZmX2NvZWZmID0gbWF4KGRvdChMLCBOKSwgMC4wKTsKCiAgICAvLyBzcGVjdWxhciBjb2VmZmljaWVudAogICAgdmVjMyBIID0gbm9ybWFsaXplKEwgKyBWKTsKCiAgICBmbG9hdCBzcGVjX2NvZWZmID0gcG93KG1heChkb3QoSCwgTiksIDAuMCksIGdldF9zaGluaW5lc3MoKSk7CiAgICBpZiAoZGlmZl9jb2VmZiA8PSAwLjApCiAgICAgICAgc3BlY19jb2VmZiA9IDAuMDsKICAgIC8vIGZpbmFsIGxpZ2h0aW5nIG1vZGVsCiAgICByZXR1cm4gdmVjMygKICAgICAgICBnZXRfZGlmZnVzZSgpICogZGlmZl9jb2VmZiAqIGNvbG9yICsKICAgICAgICBnZXRfc3BlY3VsYXIoKSAqIHNwZWNfY29lZmYKICAgICk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzMgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQoKdmVjNCBnZXRfY29sb3IodmVjNCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBjb2xvcjsKfQoKdmVjNCBnZXRfY29sb3IoYm9vbCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBmcmFnX2NvbG9yOyAgLy8gY29sb3Igbm90IGluIHVuaWZvcm0KfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgaWYgKGdldF9wYXR0ZXJuKCkpIHsKICAgICAgICB2ZWMyIHNpemUgPSB2ZWMyKHRleHR1cmVTaXplKGNvbG9yLCAwKSk7CiAgICAgICAgdmVjMiBwb3MgPSBnbF9GcmFnQ29vcmQueHk7CiAgICAgICAgcmV0dXJuIHRleGVsRmV0Y2goY29sb3IsIGl2ZWMyKG1vZChwb3MueCwgc2l6ZS54KSwgbW9kKHBvcy55LCBzaXplLnkpKSwgMCk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yLCB1dik7CiAgICB9Cn0KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCkpIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcChmcmFnX2NvbG9yLngsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZyYWdfY29sb3I7CiAgICB9Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCB2YWx1ZXMsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGZsb2F0IHZhbHVlID0gdGV4dHVyZSh2YWx1ZXMsIHV2KS54OwogICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgdmVjNCByZWFsX2NvbG9yID0gZ2V0X2NvbG9yKHVuaWZvcm1fY29sb3IsIGZyYWdfdXYsIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKICAgIHZlYzMgc2hhZGVkX2NvbG9yID0gcmVhbF9jb2xvci5yZ2I7CgogICAgaWYoZ2V0X3NoYWRpbmcoKSl7CiAgICAgICAgdmVjMyBMID0gbm9ybWFsaXplKG9fbGlnaHRkaXIpOwogICAgICAgIHZlYzMgTiA9IG5vcm1hbGl6ZShvX25vcm1hbCk7CiAgICAgICAgdmVjMyBsaWdodDEgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCBMLCByZWFsX2NvbG9yLnJnYik7CiAgICAgICAgdmVjMyBsaWdodDIgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCAtTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHNoYWRlZF9jb2xvciA9IGdldF9hbWJpZW50KCkgKiByZWFsX2NvbG9yLnJnYiArIGxpZ2h0MSArIGdldF9iYWNrbGlnaHQoKSAqIGxpZ2h0MjsKICAgIH0KCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChyZWFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKHJlYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IHZlYzQoc2hhZGVkX2NvbG9yLCByZWFsX2NvbG9yLmEpOwp9Co+sdHJhbnNwYXJlbmN5xxVotDE3ODI2OTg1MTI4MTU4NDcyNTg3pXNwYWNlxxVotDE1MTUxNDM4MjQ5OTA0MDIyMDIwrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZb9saW5lc2VnbWVudHMtNDQwODA5ODU5NjYwMDUxMDQyqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAAAAAKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAADIwgAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKAAAAAKlsaW5ld2lkdGjKAAAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kygAAAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAAACrZGVwdGhfc2hpZnTKtyfFrK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAAAAp3Zpc2libGXHFGizMzM2OTk1OTYwNDE4Mzg0NjM1NLFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxNTM5OTg5MTQwNzQ0NzkwNzIwN6hvdmVyZHJhd8cVaLQxNzYxNjMzNDcxNjExMTUzODUyMa91bmlmb3JtX3VwZGF0ZXLHFWi0MTY0NjQ4NzIzNTU1MDU5NTk1NjalZmFjZXPHFGizMzUxNTgyNzM4MTkxNTY0ODQ4NaR1dWlksjQ0MDgwOTg1OTY2MDA1MTA0Mq12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAABERAAALEIAAEREAAASRAAA1UMAABJEAADVQwAALEKtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAANVDAAAsQgAAREQAACxCAABERAAAEkQAANVDAAASRI+sdHJhbnNwYXJlbmN5xxRoszk4MTQyMjQwNDUyOTYzNjc1MDilc3BhY2XHFGizMzQxMDYwNjk2NjM5MTcxMTc4Oax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIWxpbmVzZWdtZW50cy0xMDA5ODUwMTYyNzQzMDMxMzA4MaljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAI/C9T2lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIMEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAACPwvU9q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAj8L1Pad2aXNpYmxlxxVotDE2ODAxNDgwNTYyNDEyODE5NjM5sWF0dHJpYnV0ZV91cGRhdGVyxxVotDE1NzY0NDI1MDQ3NDY4NjUxMDM1qG92ZXJkcmF3xxRoszUzMzY2NzEzODg4ODg4Mzc0OTmvdW5pZm9ybV91cGRhdGVyxxNosjg4MTI2NDM0ODYzNDA0NzI3MqVmYWNlc8cVaLQxNzA5NTUwNzE0NTUxNTE3MDg0MqR1dWlktDEwMDk4NTAxNjI3NDMwMzEzMDgxrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBea2e9DAAASRDPTCUQAABJEmrkbRAAAEkQAoC1EAAASRGaGP0QAABJErXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXmtnvQwAALEIz0wlEAAAsQpq5G0QAACxCAKAtRAAALEJmhj9EAAAsQo+sdHJhbnNwYXJlbmN5xxVotDE0MzExNzg4MDYyNDQ3NTQ4MTQ1pXNwYWNlxxVotDEzODY3MzA2NzM3MjA1Njc0ODQ3rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTE0OTkzODkzMzYzMTQ0NzczNDI0qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAzcxMPaVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgwQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAM3MTD2rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAADNzEw9p3Zpc2libGXHFGizNjAwOTg3NTk1OTg3MzgxNDU0NrFhdHRyaWJ1dGVfdXBkYXRlcscUaLMzNjM2NTkwNjUwMzIzMjU2MzU2qG92ZXJkcmF3xxVotDE4MDU0NTEyOTU3ODA2NTAyMDA1r3VuaWZvcm1fdXBkYXRlcscUaLM4NzM5NDQ0NTc0MTM3MTExNDcwpWZhY2VzxxRoszM3ODMzMzI3NjkzMTQ2OTg0MDCkdXVpZLQxNDk5Mzg5MzM2MzE0NDc3MzQyNK12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXM/PdQwAAEkQA4ABEAAASRGbGEkQAABJEzawkRAAAEkQ0kzZEAAASRK1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFzPz3UMAACxCAOAARAAALEJmxhJEAAAsQs2sJEQAACxCNJM2RAAALEKPrHRyYW5zcGFyZW5jeccUaLM4ODg0NzE2ODYyNzE4MzM5MzUzpXNwYWNlxxVotDE4MDI2ODIwODQ2OTE1MzExNTUzrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTE4MDY1MzQ0ODg5MzU1MzE1ODc1qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAj8L1PaVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgwQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAI/C9T2rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAACPwvU9p3Zpc2libGXHFGizNDY1MTM1NjM2OTQ4MjQyMjk4NbFhdHRyaWJ1dGVfdXBkYXRlcscUaLM1OTk0MTMzNjI3MjQzNTMzNTUzqG92ZXJkcmF3xxVotDE0MTQ3Mzk3MjkzNjE2MjM0OTQwr3VuaWZvcm1fdXBkYXRlcscUaLMzODQ5ODcxODUyMjU3MDk2Njk1pWZhY2VzxxVotDE2MzE1NDI5NzI2NDQ0MDc5NDk5pHV1aWS0MTgwNjUzNDQ4ODkzNTUzMTU4NzWtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAARETNTPhCAABERJlZaEMAAEREZ0aqQwAAREQAYOBDAABERM08C0Stc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAANVDzUz4QgAA1UOZWWhDAADVQ2dGqkMAANVDAGDgQwAA1UPNPAtEj6x0cmFuc3BhcmVuY3nHFWi0MTM0NDc5MzU3ODc5NDc5Nzk2MDOlc3BhY2XHFWi0MTgxODIyOTEyMTc3NzcwODQxNzisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtMzU0NjAwMzk2MDkzOTE2MDcwN6ljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAM3MTD2lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIMEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAADNzEw9q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAzcxMPad2aXNpYmxlxxRoszU3Mzk5OTI2NDIzNTU2NjM2NjGxYXR0cmlidXRlX3VwZGF0ZXLHFGizMjM1NzY1NDc4MTA0NDM2NDY2OahvdmVyZHJhd8cUaLM5NzIzNDM4MDUzMDQ5NDM1NTI2r3VuaWZvcm1fdXBkYXRlcscVaLQxMzUyNjcyNzM4NjM1MzYwNTMxOKVmYWNlc8cUaLM5Nzc5NDA2MTUwMTM2MzIzMjUypHV1aWSzMzU0NjAwMzk2MDkzOTE2MDcwN612ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAABERJoZjEIAAEREAEAyQwAARESaOY9DAABERDNTxUMAAEREzWz7Q61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAA1UOaGYxCAADVQwBAMkMAANVDmjmPQwAA1UMzU8VDAADVQ81s+0OPrHRyYW5zcGFyZW5jeccVaLQxNTU2OTUyNzEyNTY2MDc3MTIyOKVzcGFjZccVaLQxNjI1NDQyNjM5NjUyODc2MDY5Mqx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy02NDgxMDMwNDM0MDU1MDk5MTEzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTU3NDE2MzU4MzA0Njc4NjcyNDGxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTQ2NTkwODY0MTc3MTk2OTMyMTSob3ZlcmRyYXfHFWi0MTc3NjI1NDQ5NTcwOTcyNDIxMzSvdW5pZm9ybV91cGRhdGVyxxVotDE0MjQ4MDU4Nzc1Mjk4MDQ3NjUzpWZhY2VzxxVotDExODMzNzQxMDEyMjIyODc5OTk2pHV1aWSzNjQ4MTAzMDQzNDA1NTA5OTExM612ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXmtnvQwAAEkIz0wlEAAASQpq5G0QAABJCAKAtRAAAEkJmhj9EAAASQq1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoF5rZ70MAACpCM9MJRAAAKkKauRtEAAAqQgCgLUQAACpCZoY/RAAAKkKPrHRyYW5zcGFyZW5jeccVaLQxNzkxOTg3ODk5ODAyMTQ3OTI3MKVzcGFjZccUaLM1ODAwOTE1Mjg2NzQ2OTE5ODE0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEzMTYyNjIzNDQ3ODA5OTk1MTgwqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizNTg1NDQ4OTUyOTg1MzczMDU1N7FhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMjc3MDQ1MTI4MDE2MjQ1Nzc4OahvdmVyZHJhd8cUaLM3NzQ4MTc2MjIzMjYzMjE5MjI0r3VuaWZvcm1fdXBkYXRlcscUaLM3ODEzNjg1MjIyOTcxNTU0MTA3pWZhY2VzxxRoszMwNzE5Njk1Njc4MTM0MjE0ODCkdXVpZLQxMzE2MjYyMzQ0NzgwOTk5NTE4MK12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXM/PdQwAAGkIA4ABEAAAaQmbGEkQAABpCzawkRAAAGkI0kzZEAAAaQq1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFzPz3UMAACpCAOAARAAAKkJmxhJEAAAqQs2sJEQAACpCNJM2RAAAKkLeABCsdHJhbnNwYXJlbmN5xxVotDE0Njc0Njg1NDQwMTg3NTg3NzU3pXNwYWNlxxRoszkxNTg5MDI3MTMxMjAwOTAzMjWsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1lt3RleHQtMjczOTI4NDczMjM4ODk3NzE4qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gAUpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6pjb2xvcnJhbmdlwqliaWxsYm9hcmTCqGhpZ2hjbGlw2BcAAAAAAAAAAAAAAAAAAAAArXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+pbmFuX2NvbG9y2BcAAAAAAAAAAAAAAAAAAAAArWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlp2xvd2NsaXDYFwAAAAAAAAAAAAAAAAAAAACyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/qGNvbG9ybWFwwqd2aXNpYmxlxxVotDEwMzY3OTg0Mjc2NDk2ODQxNDI2q21hcmtlcnNwYWNlxxRoszQzODU2MzMyODYxMzgyNzgzNDSxYXR0cmlidXRlX3VwZGF0ZXLHFGizMTcwOTIxNTE1Njg0NTg3MzA3OahvdmVyZHJhd8cUaLMxOTEyNzQ2MTI3NzYyMDg4NTgzr3VuaWZvcm1fdXBkYXRlcscVaLQxNTEwMzgwODM1OTkxNDYyNjEzOKVmYWNlc8cUaLM0MDgzMjYyNjMwMDc3NjQ1NjY1pHV1aWSyMjczOTI4NDczMjM4ODk3NzE4rXZlcnRleF9zb3VyY2XaG4kjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBib29sIGNvbG9ybWFwOwpib29sIGdldF9jb2xvcm1hcCgpe3JldHVybiBjb2xvcm1hcDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBtYXJrZXJzaXplOwp2ZWMyIGdldF9tYXJrZXJzaXplKCl7cmV0dXJuIG1hcmtlcnNpemU7fQppbiB2ZWM0IHJvdGF0aW9uczsKdmVjNCBnZXRfcm90YXRpb25zKCl7cmV0dXJuIHJvdGF0aW9uczt9CmluIHZlYzMgcG9zOwp2ZWMzIGdldF9wb3MoKXtyZXR1cm4gcG9zO30KaW4gdmVjMiBxdWFkX29mZnNldDsKdmVjMiBnZXRfcXVhZF9vZmZzZXQoKXtyZXR1cm4gcXVhZF9vZmZzZXQ7fQppbiB2ZWM0IHV2X29mZnNldF93aWR0aDsKdmVjNCBnZXRfdXZfb2Zmc2V0X3dpZHRoKCl7cmV0dXJuIHV2X29mZnNldF93aWR0aDt9CmluIHZlYzMgbWFya2VyX29mZnNldDsKdmVjMyBnZXRfbWFya2VyX29mZnNldCgpe3JldHVybiBtYXJrZXJfb2Zmc2V0O30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4X2RpbTsKCm91dCB2ZWM0IGZyYWdfY29sb3I7Cm91dCB2ZWMyIGZyYWdfdXY7Cm91dCBmbG9hdCBmcmFnX3V2c2NhbGU7Cm91dCBmbG9hdCBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGU7Cm91dCB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKCm1hdDQgcW1hdCh2ZWM0IHF1YXQpewogICAgZmxvYXQgbnVtID0gcXVhdC54ICogMi4wOwogICAgZmxvYXQgbnVtMiA9IHF1YXQueSAqIDIuMDsKICAgIGZsb2F0IG51bTMgPSBxdWF0LnogKiAyLjA7CiAgICBmbG9hdCBudW00ID0gcXVhdC54ICogbnVtOwogICAgZmxvYXQgbnVtNSA9IHF1YXQueSAqIG51bTI7CiAgICBmbG9hdCBudW02ID0gcXVhdC56ICogbnVtMzsKICAgIGZsb2F0IG51bTcgPSBxdWF0LnggKiBudW0yOwogICAgZmxvYXQgbnVtOCA9IHF1YXQueCAqIG51bTM7CiAgICBmbG9hdCBudW05ID0gcXVhdC55ICogbnVtMzsKICAgIGZsb2F0IG51bTEwID0gcXVhdC53ICogbnVtOwogICAgZmxvYXQgbnVtMTEgPSBxdWF0LncgKiBudW0yOwogICAgZmxvYXQgbnVtMTIgPSBxdWF0LncgKiBudW0zOwogICAgcmV0dXJuIG1hdDQoCiAgICAgICAgKDEuMCAtIChudW01ICsgbnVtNikpLCAobnVtNyArIG51bTEyKSwgICAgICAgIChudW04IC0gbnVtMTEpLCAgICAgICAgMC4wLAogICAgICAgIChudW03IC0gbnVtMTIpLCAgICAgICAgKDEuMCAtIChudW00ICsgbnVtNikpLCAobnVtOSArIG51bTEwKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtOCArIG51bTExKSwgICAgICAgIChudW05IC0gbnVtMTApLCAgICAgICAgKDEuMCAtIChudW00ICsgbnVtNSkpLCAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMS4wCiAgICApOwp9CgpmbG9hdCBkaXN0YW5jZWZpZWxkX3NjYWxlKCl7CiAgICAvLyBHbHlwaCBkaXN0YW5jZSBmaWVsZCB1bml0cyBhcmUgaW4gcGl4ZWxzOyBjb252ZXJ0IHRvIGRpbWVuc2lvbmxlc3MKICAgIC8vIHgtY29vcmRpbmF0ZSBvZiB0ZXh0dXJlIGluc3RlYWQgZm9yIGNvbnNpc3RlbmN5IHdpdGggcHJvZ3JhbW1hdGljIHV2CiAgICAvLyBkaXN0YW5jZSBmaWVsZHMgaW4gZnJhZ21lbnQgc2hhZGVyLiBTZWUgYWxzbyBjb21tZW50cyBiZWxvdy4KICAgIHZlYzQgdXZfcmVjdCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIGZsb2F0IHBpeHNpemVfeCA9ICh1dl9yZWN0LnogLSB1dl9yZWN0LngpICogZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpOwogICAgcmV0dXJuIC0xLjAvcGl4c2l6ZV94Owp9Cgp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKbWF0MiBkaWFnbSh2ZWMyIHYpewogICAgcmV0dXJuIG1hdDIodi54LCAwLjAsIDAuMCwgdi55KTsKfQoKZmxvYXQgX2RldGVybWluYW50KG1hdDIgbSkgewogIHJldHVybiBtWzBdWzBdICogbVsxXVsxXSAtIG1bMF1bMV0gKiBtWzFdWzBdOwp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIHZlYzIgYmJveF9zaWduZWRfcmFkaXVzID0gMC41ICogZ2V0X21hcmtlcnNpemUoKTsgLy8gbm90ZTsgY29tcG9uZW50cyBtYXkgYmUgbmVnYXRpdmUuCiAgICB2ZWMyIHNwcml0ZV9iYm94X2NlbnRyZSA9IGdldF9xdWFkX29mZnNldCgpICsgYmJveF9zaWduZWRfcmFkaXVzOwoKICAgIG1hdDQgcHZpZXcgPSBwcm9qZWN0aW9uICogdmlldzsKICAgIC8vIENvbXB1dGUgdHJhbnNmb3JtIGZvciB0aGUgb2Zmc2V0IHZlY3RvcnMgZnJvbSB0aGUgY2VudHJhbCBwb2ludAogICAgbWF0NCB0cmFucyA9IGdldF90cmFuc2Zvcm1fbWFya2VyKCkgPyBtb2RlbCA6IG1hdDQoMS4wKTsKICAgIHRyYW5zID0gKGdldF9iaWxsYm9hcmQoKSA/IHByb2plY3Rpb24gOiBwdmlldykgKiBxbWF0KGdldF9yb3RhdGlvbnMoKSkgKiB0cmFuczsKCiAgICAvLyBDb21wdXRlIGNlbnRyZSBvZiBiaWxsYm9hcmQgaW4gY2xpcHBpbmcgY29vcmRpbmF0ZXMKICAgIHZlYzQgc3ByaXRlX2NlbnRlciA9IHRyYW5zICogdmVjNChzcHJpdGVfYmJveF9jZW50cmUsIDAsIDApOwogICAgdmVjNCBkYXRhX3BvaW50ID0gZ2V0X3ByZXByb2plY3Rpb24oKSAqIG1vZGVsICogdmVjNCh0b3ZlYzMoZ2V0X3BvcygpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gdmVjNChkYXRhX3BvaW50Lnh5eiAvIGRhdGFfcG9pbnQudyArIG1hdDMobW9kZWwpICogdG92ZWMzKGdldF9tYXJrZXJfb2Zmc2V0KCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSBwdmlldyAqIGRhdGFfcG9pbnQ7CiAgICB2ZWM0IHZjbGlwID0gZGF0YV9wb2ludCArIHNwcml0ZV9jZW50ZXI7CgogICAgLy8gRXh0cmEgYnVmZmVyaW5nIGlzIHJlcXVpcmVkIGFyb3VuZCBzcHJpdGVzIHdoaWNoIGFyZSBhbnRpYWxpYXNlZCBzbyB0aGF0CiAgICAvLyB0aGUgYW50aWFsaWFzIGJsdXIgZG9lc24ndCBnZXQgY3V0IG9mZiAoc2VlICMxNSkuIFRoaXMgYmx1ciBmYWxscyB0bwogICAgLy8gemVybyBhdCBhIHJhZGl1cyBvZiBBTlRJQUxJQVNfUkFESVVTIHBpeGVscyBpbiB0aGUgdmlld3BvcnQgY29vcmRpbmF0ZXMKICAgIC8vIGFuZCB3ZSB3YW50IHRvIGJ1ZmZlciB0aGUgdmVydGljZXMgaW4gdGhlICpzb3VyY2UqIHNwcml0ZSBjb29yZGluYXRlCiAgICAvLyBzeXN0ZW0gc28gdGhhdCB3ZSBnZXQgdGhpcyBhbW91bnQgaW4gdGhlIG91dHB1dCBjb29yZGluYXRlcy4KICAgIC8vCiAgICAvLyBIZXJlIHdlIGNhbGN1bGF0ZSB0aGUgZGVyaXZhdGl2ZSBvZiB0aGUgbWFwcGluZyBmcm9tIHNwcml0ZSB4eQogICAgLy8gY29vcmRpbmF0ZXMgKGRlZmluZWQgYnkgYHRyYW5zYCkgaW50byB0aGUgdmlld3BvcnQgcGl4ZWwgY29vcmRpbmF0ZXMuCiAgICAvLyBUaGUgZGVyaXZhdGl2ZSBuZWVkcyB0byBpbmNsdWRlIHRoZSBwcm9wZXIgdGVybSBmb3IgdGhlIHBlcnNwZWN0aXZlCiAgICAvLyBkaXZpZGUgaW50byBOREMsIGV2YWx1YXRlZCBhdCB0aGUgY2VudHJlIHBvaW50IGB2Y2xpcGAuCiAgICBtYXQ0IGRfbmRjX2RfY2xpcCA9IG1hdDQoCiAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsCiAgICAgICAgLXZjbGlwLnh5ei8odmNsaXAudyp2Y2xpcC53KSwgICAgICAgICAgMC4wCiAgICApOwogICAgbWF0MiBkeHl2X2R4eXMgPSBkaWFnbSgwLjUgKiBnZXRfcmVzb2x1dGlvbigpKSAqIG1hdDIoZF9uZGNfZF9jbGlwKnRyYW5zKTsKICAgIC8vIE5vdywgb3VyIGJ1ZmZlciBzaXplIGlzIGV4cHJlc3NlZCBpbiB2aWV3cG9ydCBwaXhlbHMgYnV0IHdlIGdldCBiYWNrIHRvCiAgICAvLyB0aGUgc3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHVzaW5nIHRoZSBzY2FsZSBmYWN0b3Igb2YgdGhlCiAgICAvLyB0cmFuc2Zvcm1hdGlvbiAoZm9yIGlzb3Ryb3BpYyB0cmFuc2Zvcm1hdGlvbnMpLiBGb3IgYW5pc290cm9waWMKICAgIC8vIHRyYW5zZm9ybWF0aW9ucywgdGhlIGdlb21ldHJpYyBtZWFuIG9mIHRoZSB0d28gcHJpbmNpcGxlIHNjYWxlIGZhY3RvcnMKICAgIC8vIGlzIGEgcmVhc29uYWJsZSBjb21wcm9taXNlOgogICAgZmxvYXQgdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgPSBzcXJ0KGFicyhfZGV0ZXJtaW5hbnQoZHh5dl9keHlzKSkpOwoKICAgIC8vIEluIHRoZSBmcmFnbWVudCBzaGFkZXIgd2Ugd2FudCBvdXIgc2lnbmVkIGRpc3RhbmNlIGluIHZpZXdwb3J0IChwaXhlbCkKICAgIC8vIGNvb3JkcyBmb3IgZGlyZWN0IHVzZSBpbiBhbnRpYWxpYXNpbmcgc3RlcCBmdW5jdGlvbnMuIFdlIHRoZXJlZm9yZSBuZWVkCiAgICAvLyBhIHNjYWxpbmcgZmFjdG9yIHNpbWlsYXIgdG8gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUsIGJ1dCBpbmNsdWRpbmcKICAgIC8vIHRoZSB1di0+c3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHNjYWxpbmcgZmFjdG9yIGFzIHdlbGwuICBXZSBjaG9vc2UgdG8KICAgIC8vIHVzZSB0aGUgYm91bmRpbmcgYm94ICp4KiB3aWR0aCBmb3IgdGhpcy4gVGhpcyBjb21lcyB3aXRoIHNvbWUKICAgIC8vIGNvbnNpc3RlbmN5IGNvbmRpdGlvbnM6CiAgICAvLyAqIEZvciBwcm9jZWR1cmFsIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0aGUgc3ByaXRlIGJvdW5kaW5nIGJveCB0byBiZQogICAgLy8gICBzcXVhcmUuIChJZiBub3QsIHRoZSB1diBjb29yZGluYXRlcyB3aWxsIGJlIGFuaXNvdHJvcGljYWxseSBzY2FsZWQgYW5kCiAgICAvLyAgIGFueSBjYWxjdWxhdGlvbiBiYXNlZCBvbiB0aGVtIHdpbGwgbm90IGJlIGEgZGlzdGFuY2UgZnVuY3Rpb24uKQogICAgLy8gKiBGb3Igc2FtcGxlZCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdG8gY29uc2lzdGVudGx5IGNob29zZSB0aGUgKngqCiAgICAvLyAgIGZvciB0aGUgc2NhbGluZyBpbiBnZXRfZGlzdGFuY2VmaWVsZF9zY2FsZSgpLgogICAgZmxvYXQgc3ByaXRlX2Zyb21fdV9zY2FsZSA9IGFicyhnZXRfbWFya2Vyc2l6ZSgpLngpOwogICAgZnJhZ191dnNjYWxlID0gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgKiBzcHJpdGVfZnJvbV91X3NjYWxlOwogICAgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlID0gZGlzdGFuY2VmaWVsZF9zY2FsZSgpOwogICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3IoKSk7CiAgICBmcmFnX3V2ID0gZ2V0X3V2KCk7CiAgICBmcmFnX3V2X29mZnNldF93aWR0aCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIC8vIHNjcmVlbiBzcGFjZSBjb29yZGluYXRlcyBvZiB0aGUgcG9zaXRpb24KICAgIHZlYzQgcXVhZF92ZXJ0ZXggPSAodHJhbnMgKiB2ZWM0KDIuMCAqIGJib3hfc2lnbmVkX3JhZGl1cyAqIGdldF9wb3NpdGlvbigpLCAwLjAsIDAuMCkpOwogICAgZ2xfUG9zaXRpb24gPSB2Y2xpcCArIHF1YWRfdmVydGV4OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaE/MjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgppbiB2ZWM0IGZyYWdfY29sb3I7CmluIHZlYzIgZnJhZ191djsKCiNkZWZpbmUgQ0lSQ0xFICAgICAgICAgICAgMAojZGVmaW5lIFJFQ1RBTkdMRSAgICAgICAgIDEKI2RlZmluZSBST1VOREVEX1JFQ1RBTkdMRSAyCiNkZWZpbmUgRElTVEFOQ0VGSUVMRCAgICAgMwojZGVmaW5lIFRSSUFOR0xFICAgICAgICAgIDQKCiNkZWZpbmUgTV9TUVJUXzIgICAgICAgICAgMS40MTQyMTM1CgoKLy8gSGFsZiB3aWR0aCBvZiBhbnRpYWxpYXNpbmcgc21vb3Roc3RlcAojZGVmaW5lIEFOVElBTElBU19SQURJVVMgMC44Ci8vIFRoZXNlIHZlcnNpb25zIG9mIGFhc3RlcCBhc3N1bWUgdGhhdCBgZGlzdGAgaXMgYSBzaWduZWQgZGlzdGFuY2UgZnVuY3Rpb24KLy8gd2hpY2ggaGFzIGJlZW4gc2NhbGVkIHRvIGJlIGluIHVuaXRzIG9mIHBpeGVscy4KZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMSArIEFOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgdGhyZXNob2xkMiwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxK0FOVElBTElBU19SQURJVVMsIGRpc3QpIC0KICAgICAgICAgICBzbW9vdGhzdGVwKHRocmVzaG9sZDItQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMitBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKLy8gUHJvY2VkdXJhbCBzaWduZWQgZGlzdGFuY2UgZnVuY3Rpb25zIG9uIHRoZSB1diBjb29yZGluYXRlIHBhdGNoIFswLDFdeFswLDFdCi8vIE5vdGUgdGhhdCBmb3IgYW50aWFsaWFzaW5nIHRvIHdvcmsgcHJvcGVybHkgdGhlc2Ugc2hvdWxkIGJlICpzY2FsZSBwcmVzZXJ2aW5nKgovLyAoSWYgeW91IG11c3QgcmVzY2FsZSB1diwgbWFrZSBzdXJlIHRvIHB1dCB0aGUgc2NhbGUgZmFjdG9yIGJhY2sgaW4gbGF0ZXIuKQpmbG9hdCB0cmlhbmdsZSh2ZWMyIFApewogICAgUCAtPSB2ZWMyKDAuNSk7CiAgICBmbG9hdCB4ID0gTV9TUVJUXzIgKiAoUC54IC0gUC55KTsKICAgIGZsb2F0IHkgPSBNX1NRUlRfMiAqIChQLnggKyBQLnkpOwogICAgZmxvYXQgcjEgPSBtYXgoYWJzKHgpLCBhYnMoeSkpIC0gMS4wLygyLjAqTV9TUVJUXzIpOwogICAgZmxvYXQgcjIgPSBQLnk7CiAgICByZXR1cm4gLW1heChyMSxyMik7Cn0KCmZsb2F0IGNpcmNsZSh2ZWMyIHV2KXsKICAgIHJldHVybiAwLjUtbGVuZ3RoKHV2LXZlYzIoMC41KSk7Cn0KCmZsb2F0IHJlY3RhbmdsZSh2ZWMyIHV2KXsKICAgIHZlYzIgZCA9IG1heCgtdXYsIHV2LXZlYzIoMSkpOwogICAgcmV0dXJuIC0oKGxlbmd0aChtYXgodmVjMigwLjApLCBkKSkgKyBtaW4oMC4wLCBtYXgoZC54LCBkLnkpKSkpOwp9CgpmbG9hdCByb3VuZGVkX3JlY3RhbmdsZSh2ZWMyIHV2LCB2ZWMyIHRsLCB2ZWMyIGJyKXsKICAgIHZlYzIgZCA9IG1heCh0bC11diwgdXYtYnIpOwogICAgcmV0dXJuIC0oKGxlbmd0aChtYXgodmVjMigwLjApLCBkKSkgKyBtaW4oMC4wLCBtYXgoZC54LCBkLnkpKSktdGwueCk7Cn0KCnZvaWQgZmlsbChib29sIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIGNvbG9yID0gbWl4KGNvbG9yLCBmaWxsY29sb3IsIGluZmlsbCk7Cn0KCnZvaWQgZmlsbChzYW1wbGVyMkQgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgdmVjNCBpbV9jb2xvciA9IHRleHR1cmUoaW1hZ2UsIHV2Lnl4KTsKICAgIGNvbG9yID0gbWl4KGNvbG9yLCBpbV9jb2xvciwgaW5maWxsKTsKfQoKaW4gZmxvYXQgZnJhZ191dnNjYWxlOwppbiBmbG9hdCBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGU7CmluIHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZCwgdmVjMiB1dil7CiAgICAvLyBHbHlwaCBkaXN0YW5jZSBmaWVsZCB1bml0cyBhcmUgaW4gcGl4ZWxzLiBDb252ZXJ0IHRvIHNhbWUgZGlzdGFuY2UKICAgIC8vIHNjYWxpbmcgYXMgZl91di54IGZvciBjb25zaXN0ZW5jeSB3aXRoIHRoZSBwcm9jZWR1cmFsIHNpZ25lZF9kaXN0YW5jZQogICAgLy8gY2FsY3VsYXRpb25zLgogICAgcmV0dXJuIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSAqIHRleHR1cmUoZGlzdGFuY2VmaWVsZCwgdXYpLnI7Cn0KCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKGJvb2wgZGlzdGFuY2VmaWVsZCwgdmVjMiB1dil7CiAgICByZXR1cm4gMC4wOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewoKICAgIGludCBzaGFwZSA9IGdldF9zaGFwZV90eXBlKCk7CiAgICBmbG9hdCBzaWduZWRfZGlzdGFuY2UgPSAwLjA7CiAgICB2ZWM0IHV2X29mZiA9IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwogICAgdmVjMiB0ZXhfdXYgPSBtaXgodXZfb2ZmLnh5LCB1dl9vZmYuencsIGNsYW1wKGZyYWdfdXYsIDAuMCwgMS4wKSk7CiAgICBpZihzaGFwZSA9PSBDSVJDTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gY2lyY2xlKGZyYWdfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBESVNUQU5DRUZJRUxEKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHNjYWxlZF9kaXN0YW5jZWZpZWxkKGRpc3RhbmNlZmllbGQsIHRleF91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFJPVU5ERURfUkVDVEFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHJvdW5kZWRfcmVjdGFuZ2xlKGZyYWdfdXYsIHZlYzIoMC4yKSwgdmVjMigwLjgpKTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUkVDVEFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IDEuMDsgLy8gcmVjdGFuZ2xlKGZfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBUUklBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSB0cmlhbmdsZShmcmFnX3V2KTsKCiAgICBzaWduZWRfZGlzdGFuY2UgKj0gZnJhZ191dnNjYWxlOwogICAgZmxvYXQgaW5zaWRlID0gYWFzdGVwKDAuMCwgc2lnbmVkX2Rpc3RhbmNlKTsKICAgIHZlYzQgZmluYWxfY29sb3IgPSB2ZWM0KGZyYWdfY29sb3IueHl6LCAwKTsKICAgIGZpbGwoaW1hZ2UsIGZyYWdfY29sb3IsIGZyYWdfdXYsIGluc2lkZSwgZmluYWxfY29sb3IpOwogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZmluYWxfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KICAgIGlmIChmaW5hbF9jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZmluYWxfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGq3F1YWRfb2Zmc2V0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF6ptYXJrZXJzaXplgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61tYXJrZXJfb2Zmc2V0gqt0eXBlX2xlbmd0aAOkZmxhdMcAF691dl9vZmZzZXRfd2lkdGiCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXo3Bvc4KrdHlwZV9sZW5ndGgDpGZsYXTHABepcm90YXRpb25zgqt0eXBlX2xlbmd0aASkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxVotDExNTM4MzQ0MzM1OTc5MzQ0MTk0pXNwYWNlxxRoszcwMjI3MDI5MDQ1Mzk4NTUxNjmsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtMTc5MTQ2MzY2NDMyMDAxNTI4OKljYW1fc3BhY2WlcGl4ZWyodW5pZm9ybXOHp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+pb2JqZWN0X2lkAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/p3Zpc2libGXHFWi0MTE2NDc1MTkyMzUwMDg2MzAzNjaxYXR0cmlidXRlX3VwZGF0ZXLHFGizNTAxNzI2MTg1MDIzNDE3NzYxMqhvdmVyZHJhd8cVaLQxMDU4Mjc1NDk0ODcyMzQwMDMyNq91bmlmb3JtX3VwZGF0ZXLHFGizMjUxMjYyNjE1NjE1MjI1MDkxMaVmYWNlc8cVaLQxMTc0MTMzMjEwMDAwOTU0MDA4N6R1dWlkszE3OTE0NjM2NjQzMjAwMTUyODitdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizNTI1MDI0MzE4NTY4NDU2ODU2N6VzcGFjZccVaLQxNjQ3OTgwNTM0NTkxNDY1OTMyNKx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy00MjQ5NjM1OTkxMDA5MzA5MzMzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHE2iyNTgxMDAzODA5NDg5NzczOTkzsWF0dHJpYnV0ZV91cGRhdGVyxxNosjQ5NjA3MzY4NTQzNjE0MTk2NKhvdmVyZHJhd8cVaLQxMzc0MTQ5NzcyNTQ0MjI1MDU3N691bmlmb3JtX3VwZGF0ZXLHE2iyNTA3Njk3NDc3NTU3MjI5NTg2pWZhY2VzxxVotDEwMjUxMDQ5OTA1MTIxOTQwNzA2pHV1aWSzNDI0OTYzNTk5MTAwOTMwOTMzM612ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF01xcAIEREAAAsQq1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdNcXAMDUQwAALELeABCsdHJhbnNwYXJlbmN5xxVotDE3ODQ2MDk5MTkwMDQ3MjAwODYypXNwYWNlxxRoszU5MTAwNjIxNzU0MTEyMTU1OTmsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luHRleHQtNDgwNDEwMzQ4MjQzMDk1NjE0MqljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc94AFKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+qY29sb3JyYW5nZcKpYmlsbGJvYXJkwqhoaWdoY2xpcNgXAAAAAAAAAAAAAAAAAAAAAK1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAK1kaXN0YW5jZWZpZWxkiqltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKQYAAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTrlJlcGVhdFdyYXBwaW5npGRhdGGtdGV4dHVyZV9hdGxhc6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemWSzQQAzQQApXdyYXBUrlJlcGVhdFdyYXBwaW5npHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZadsb3djbGlw2BcAAAAAAAAAAAAAAAAAAAAAsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6hjb2xvcm1hcMKndmlzaWJsZccUaLM5MzA5OTM5ODE0NDQyMDI0NjUyq21hcmtlcnNwYWNlxxVotDEwNzM0NjQ1NDc1MDc4MDAwMTA4sWF0dHJpYnV0ZV91cGRhdGVyxxRoszIxMzM2Nzg1NjUwODM1OTA4ODCob3ZlcmRyYXfHFGizNTI0MTM0MDQwNTY3NzI5OTgyN691bmlmb3JtX3VwZGF0ZXLHFGizNDI5MjA0NDY0NzYwNDQzNjQwNKVmYWNlc8cVaLQxMjU2MzU5NzMyNzE1NTUzMDIzOaR1dWlkszQ4MDQxMDM0ODI0MzA5NTYxNDKtdmVydGV4X3NvdXJjZdobiSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoT8yN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBib29sIGNvbG9ybWFwOwpib29sIGdldF9jb2xvcm1hcCgpe3JldHVybiBjb2xvcm1hcDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4arcXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0xzAXjZeuwAAAwMD8qbHAAADAwOf7qcAUrsfAVg6twBSux8CoxovAAADAwOf7qcAUrsfAqm1hcmtlcnNpemWCq3R5cGVfbGVuZ3RoAqRmbGF0xzAXVg6dQYPAukHb+Z5Bg8C6QfYonEEIrLxBku2cQQisvEFSuH5Bg8C6QVpkm0EIrLxBrW1hcmtlcl9vZmZzZXSCq3R5cGVfbGVuZ3RoA6RmbGF0x0gXBFaOwJhucsEAAAAABFaOwJhucsEAAAAABFaOwJhucsEAAAAABFaOwJhucsEAAAAABFYOwZhucsEAAAAAAAAAAJhucsEAAAAAr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHYBcAwJQ+AMDvPgBAqD4AYAM/AMCUPgCgDz8AQKg+ACAbPwDAlD4AICc/AECoPgDgMj8AwJQ+AOA+PwBAqD4AoEo/AIAwPgAgDz8AgE8+AKAaPwDAlD4AwNc+AECoPgBA7z6jcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMdIF5rZ70MAAAhCAAAAADPTCUQAAAhCAAAAAJq5G0QAAAhCAAAAAACgLUQAAAhCAAAAAGaGP0QAAAhCAAAAAGaGP0QAAAhCAAAAAKlyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0x2AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/j6x0cmFuc3BhcmVuY3nHFGizNzAxNDgyMjEyNzAzMzA3OTM2NKVzcGFjZccUaLMyMjA5NjAwOTgyMzI3NTI0MDU3rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTE2ODc3OTgxNjEzNDgyMTQ2NzMwqWNhbV9zcGFjZaVwaXhlbKh1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6lvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccUaLMyNTIyNTY3OTI4NTYxMDA3MzY0sWF0dHJpYnV0ZV91cGRhdGVyxxVotDE1NTYwNzg5MTYzMTM0MDA0NDA3qG92ZXJkcmF3xxRoszYxNzU4MjQxOTkwNzQwMzM3NTevdW5pZm9ybV91cGRhdGVyxxNosjUzNzgwMjQ3NTMxMzM2NzE5NKVmYWNlc8cVaLQxMjU3MTk2NTk4NzE4Mzk3OTQyMKR1dWlktDE2ODc3OTgxNjEzNDgyMTQ2NzMwrXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxRoszM1ODEzOTg5OTAyMzkzMzY1NTGlc3BhY2XHFWi0MTUyMjk4NjEzMzkwOTkyOTc3OTesdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtODM4NTYzMTI5NTUzNDc4NjA4M6ljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxJosTQ3NDIxNTU1MTA4ODM0MzAysWF0dHJpYnV0ZV91cGRhdGVyxxVotDE2MTg0OTc2MDk5MTI3MzYxNDIzqG92ZXJkcmF3xxVotDEzMTM3NDU3NTI3NTQ5ODg3ODg1r3VuaWZvcm1fdXBkYXRlcscUaLMzMzM4NTc3NTkwNTIxNTE5NTkxpWZhY2VzxxRoszIwMzkxNTE5MzMzNDQ0NjQ1MTGkdXVpZLM4Mzg1NjMxMjk1NTM0Nzg2MDgzrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAwNFDzUz4QgDA0UOZWWhDAMDRQ2dGqkMAwNFDAGDgQwDA0UPNPAtErXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAMDUQ81M+EIAwNRDmVloQwDA1ENnRqpDAMDUQwBg4EMAwNRDzTwLRI+sdHJhbnNwYXJlbmN5xxRoszg4MDM2NzMwMDIzMDYzMzk3MjWlc3BhY2XHFWi0MTMwMjkwMDI2OTI2NzQwOTAzMzWsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTQ1ODYyMDg1NjU3ODEzMDU1MjKpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccUaLM1NjUyMTEyODczMzUxMzQ1OTU1sWF0dHJpYnV0ZV91cGRhdGVyxxVotDEzOTA2ODE2MjA2MDY5ODc1MDQ3qG92ZXJkcmF3xxRoszQ2MTE1MTE2OTA4MTg3MTEwMDWvdW5pZm9ybV91cGRhdGVyxxVotDE2OTE1MzgwNjA2NDk5Njc4NTE4pWZhY2VzxxRoszI3MjM3MDE4ODE2MzcxNzEwNTekdXVpZLQxNDU4NjIwODU2NTc4MTMwNTUyMq12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAMDSQ5oZjEIAwNJDAEAyQwDA0kOaOY9DAMDSQzNTxUMAwNJDzWz7Q61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFwDA1EOaGYxCAMDUQwBAMkMAwNRDmjmPQwDA1EMzU8VDAMDUQ81s+0PeABCsdHJhbnNwYXJlbmN5xxVotDExMzY4NzE2ODgzMTU0MDQ4MzEypXNwYWNlxxRoszQ3NzIwODQ3NzkxODQwNDY4ODisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luHRleHQtMTk4MzU3NTgyNzIxNzI4Mjk4NKljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc94AFKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+qY29sb3JyYW5nZcKpYmlsbGJvYXJkwqhoaWdoY2xpcNgXAAAAAAAAAAAAAAAAAAAAAK1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAK1kaXN0YW5jZWZpZWxkiqltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKQYAAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTrlJlcGVhdFdyYXBwaW5npGRhdGGtdGV4dHVyZV9hdGxhc6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemWSzQQAzQQApXdyYXBUrlJlcGVhdFdyYXBwaW5npHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZadsb3djbGlw2BcAAAAAAAAAAAAAAAAAAAAAsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6hjb2xvcm1hcMKndmlzaWJsZccVaLQxMDMwMDA0NDcxNzgwNzAyMzUwMKttYXJrZXJzcGFjZccUaLM0NTk1NzY4MDAwNzA5MTY3NTMwsWF0dHJpYnV0ZV91cGRhdGVyxxNosjgzMzUyNjM3NTUzNDQxMTk3MKhvdmVyZHJhd8cUaLM5NDU2MTczNDE5MjkwNDc3NTczr3VuaWZvcm1fdXBkYXRlcscVaLQxODI5Nzg1MTg2ODAwODc2MDQxN6VmYWNlc8cVaLQxMTg4MjQ4NDk4NDc4OTk0NjQyMaR1dWlkszE5ODM1NzU4MjcyMTcyODI5ODStdmVydGV4X3NvdXJjZdobiSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoT8yN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBib29sIGNvbG9ybWFwOwpib29sIGdldF9jb2xvcm1hcCgpe3JldHVybiBjb2xvcm1hcDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4arcXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXqm1hcmtlcnNpemWCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrW1hcmtlcl9vZmZzZXSCq3R5cGVfbGVuZ3RoA6RmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizMjQ3ODY2MjAxMzMxMTk5NDYxOaVzcGFjZccUaLMzOTQyODkzMDMyNTEzODc4NDgwrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEwMTA5MTkzNDA0MjI1MzIyMDIwqWNhbV9zcGFjZaVwaXhlbKh1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6lvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccUaLMxNTI2MTM0ODE3NDgwNDUyOTA3sWF0dHJpYnV0ZV91cGRhdGVyxxVotDE0MzA0Mzg0NjQ5MzQxMzE4MjI0qG92ZXJkcmF3xxRoszE1MTc0MTYzMjU5MjMyODcyNTWvdW5pZm9ybV91cGRhdGVyxxRoszIzMDYyOTQwNTQ1NTc5NzgxNjOlZmFjZXPHFWi0MTE4NjcxOTg3Mzg3NjIzNjY1MDCkdXVpZLQxMDEwOTE5MzQwNDIyNTMyMjAyMK12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABePrHRyYW5zcGFyZW5jeccUaLMxMjUxOTM5MjAwMzIzMzE5NTExpXNwYWNlxxRoszUxNzQyNjYyMTQ5MDE0OTg1NTesdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTgyNTAxMDA2ODEwNDk5ODU2NDmpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAKBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccUaLM4MzA2ODcwMTU5OTY3OTA0OTA2sWF0dHJpYnV0ZV91cGRhdGVyxxRoszIzMzU3NDU4NDE0Njg3NzI1NTaob3ZlcmRyYXfHFWi0MTUyOTA1MzA2NTU1ODQwMzQ4NzevdW5pZm9ybV91cGRhdGVyxxRoszU3NDc5NDk0MjM4NzYxNjEzNzalZmFjZXPHFWi0MTI0NDQxMDE1OTM3OTMwMTg4MTikdXVpZLQxODI1MDEwMDY4MTA0OTk4NTY0Oa12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF01xcAANVDACASRK1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdNcXAADVQwAAKkLeABCsdHJhbnNwYXJlbmN5xxRoszY5NzI1MjA2MjkwMjU5OTY2OTClc3BhY2XHE2iyNDgzNTY4NDU3NjM3NjAxMzg2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbh0ZXh0LTMxNjMxNDAzODk5Mjc5NDgwMTGpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXPeABSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/qmNvbG9ycmFuZ2XCqWJpbGxib2FyZMKoaGlnaGNsaXDYFwAAAAAAAAAAAAAAAAAAAACtcHJlcHJvamVjdGlvbsdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP6luYW5fY29sb3LYFwAAAAAAAAAAAAAAAAAAAACtZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWnbG93Y2xpcNgXAAAAAAAAAAAAAAAAAAAAALJhdGxhc190ZXh0dXJlX3NpemXKRIAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVpbWFnZcKpb2JqZWN0X2lkAKpzaGFwZV90eXBlA7B0cmFuc2Zvcm1fbWFya2Vyw6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+oY29sb3JtYXDCp3Zpc2libGXHFWi0MTEwNjA0NTczMTM0MzQwMzA3MjSrbWFya2Vyc3BhY2XHFGizOTU4OTIxNzUzODk0OTc3NDk0ObFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxNzE3NDY3NTI5NDE3ODc1MTcxNqhvdmVyZHJhd8cVaLQxNzc4NTM0MjU1OTAwNzc0NzY1Oa91bmlmb3JtX3VwZGF0ZXLHFGizODE2NDUwMjIyNTY1NzU0Nzk4NKVmYWNlc8cUaLM4NzYxMTY1NTkxNzE3MjE3NjAzpHV1aWSzMzE2MzE0MDM4OTkyNzk0ODAxMa12ZXJ0ZXhfc291cmNl2huJI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgbWFya2Vyc2l6ZTsKdmVjMiBnZXRfbWFya2Vyc2l6ZSgpe3JldHVybiBtYXJrZXJzaXplO30KaW4gdmVjNCByb3RhdGlvbnM7CnZlYzQgZ2V0X3JvdGF0aW9ucygpe3JldHVybiByb3RhdGlvbnM7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hPzI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqtxdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHMBeNl67AAADAwPypscAAAMDA5/upwBSux8BWDq3AFK7HwKjGi8AAAMDA5/upwBSux8CqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHMBdWDp1Bg8C6Qdv5nkGDwLpB9iicQQisvEGS7ZxBCKy8QVK4fkGDwLpBWmSbQQisvEGtbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHSBcEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVo7Bv5+6wAAAAAAEVg7Bv5+6wAAAAACvdXZfb2Zmc2V0X3dpZHRogqt0eXBlX2xlbmd0aASkZmxhdMdgFwDAlD4AwO8+AECoPgBgAz8AwJQ+AKAPPwBAqD4AIBs/AMCUPgAgJz8AQKg+AOAyPwDAlD4A4D4/AECoPgCgSj8AgDA+ACAPPwCATz4AoBo/AMCUPgDA1z4AQKg+AEDvPqNwb3OCq3R5cGVfbGVuZ3RoA6RmbGF0x0gXAIDPQ81M+EIAAAAAAIDPQ5lZaEMAAAAAAIDPQ2dGqkMAAAAAAIDPQwBg4EMAAAAAAIDPQ808C0QAAAAAAIDPQ808C0QAAAAAqXJvdGF0aW9uc4KrdHlwZV9sZW5ndGgEpGZsYXTHYBcAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+PrHRyYW5zcGFyZW5jeccVaLQxMDc4MTU0Njk0OTYwNDEyOTc5M6VzcGFjZccUaLMzNDc2MjA4MzQ1NTQ3MTY4NzkyrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTkxMDAyOTk3NTg0NDI4OTI2MDSpY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDExMTc3MjUyMDUzNTI0NTEzNDA1sWF0dHJpYnV0ZV91cGRhdGVyxxRoszYxMDAyNTQ1MTg5MDY3NTMwNzaob3ZlcmRyYXfHFWi0MTM4NDAwNzE5NzMwMTIzNjU1NTKvdW5pZm9ybV91cGRhdGVyxxRoszI2NTQ5MTQ1MzU3OTgzNDQ3MzOlZmFjZXPHFWi0MTMyMjcwODE5MTg5OTU0ODAwNDCkdXVpZLM5MTAwMjk5NzU4NDQyODkyNjA0rXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxVotDEzOTM0ODI1MjMyOTk1NzU1NzkzpXNwYWNlxxVotDEwMzMyNjY0MjA2Mjk5NjA5ODczrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEyNDQ0NjcwMDYzODcxMzE2MzUwqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizNDI4NTEyNDQ1Nzg0MjUxNjU5OLFhdHRyaWJ1dGVfdXBkYXRlcscTaLI3NDkyMzU0NTYxNzQxMjI2MTKob3ZlcmRyYXfHFGizNjM0ODg3MzA5Nzk4Mjk4NjAzMK91bmlmb3JtX3VwZGF0ZXLHFGizODYyNjA5MjQzMjg3MTg3Mjk3OKVmYWNlc8cUaLM5Mjk4OTYxNzAwMDU0MTI1ODI3pHV1aWS0MTI0NDQ2NzAwNjM4NzEzMTYzNTCtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoF5rZ70MAgBNEM9MJRACAE0SauRtEAIATRACgLUQAgBNEZoY/RACAE0Stc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBea2e9DAAASRDPTCUQAABJEmrkbRAAAEkQAoC1EAAASRGaGP0QAABJEj6x0cmFuc3BhcmVuY3nHFGizMjI1NDU1MDkzNzUzMjYyMDg5NaVzcGFjZccUaLMxMTg0NDk4Njc2NzcyNjkwNDM4rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTM1NDk5MDc5NTA1NjgyOTQ0MzKpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccTaLIxNjk5MzM2MjY4MTY1OTA0MDOxYXR0cmlidXRlX3VwZGF0ZXLHFGizMzk3Njc0MzU4ODUxMDI5NzI5NahvdmVyZHJhd8cVaLQxNDY5ODQyMTc1MDE1Nzk5MzEzMK91bmlmb3JtX3VwZGF0ZXLHFWi0MTYwNTI0NzI4NjQwMzA1MzQxMTKlZmFjZXPHFWi0MTA1ODY4MDgyMDQ4NTIxMjMwMDCkdXVpZLMzNTQ5OTA3OTUwNTY4Mjk0NDMyrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAgEVEzUz4QgCARUSZWWhDAIBFRGdGqkMAgEVEAGDgQwCARUTNPAtErXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAABERM1M+EIAAEREmVloQwAARERnRqpDAABERABg4EMAAEREzTwLRI+sdHJhbnNwYXJlbmN5xxRoszQ5MDk2NjI3NzE1NTI2MjkzNjmlc3BhY2XHFGizOTE0MzQyNjQyMjYzMTM3OTQyNKx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy03MDQ1MDU0ODM1NjY3NDQ4MTMyqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTU5OTAzNzg3ODc3Njg4MTI5NDexYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTQxMDk4NzUxMDIzNTgxNjY4ODaob3ZlcmRyYXfHFGizMjI1ODIyMzAwNTcyMzQ2NjI5Na91bmlmb3JtX3VwZGF0ZXLHFGizNDY3MDgxMjI4NTk5Mzk2ODYwNqVmYWNlc8cVaLQxMTk3ODA3MTU4NDM5NDIwODg3NqR1dWlkszcwNDUwNTQ4MzU2Njc0NDgxMzKtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFzPz3UMAABNEAOAARAAAE0RmxhJEAAATRM2sJEQAABNENJM2RAAAE0Stc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcz891DAAASRADgAEQAABJEZsYSRAAAEkTNrCREAAASRDSTNkQAABJEj6x0cmFuc3BhcmVuY3nHFWi0MTMxNTc0NjcyMjYxNDU5NzI3MzGlc3BhY2XHFGizMTg1Mjg1MTMwNjk1MjI3NjA3Mqx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWW/bGluZXNlZ21lbnRzLTIxMDM4MTk0MDQ5MzM5NjQ0OKljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxRoszUwODkwMzA2MTEwNDM0MDUzODSxYXR0cmlidXRlX3VwZGF0ZXLHFGizODcxNzQwMDMyNTkyMjk4NDc3M6hvdmVyZHJhd8cVaLQxMzE4MjY4Mzk0MzM3MjY5MDI5Nq91bmlmb3JtX3VwZGF0ZXLHFWi0MTM3ODE0MDU2MzA1NzYyOTM5NDmlZmFjZXPHFGizMjc4MDUyMTQxMDYyNjAzMjYwNKR1dWlksjIxMDM4MTk0MDQ5MzM5NjQ0OK12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAABFRJoZjEIAAEVEAEAyQwAARUSaOY9DAABFRDNTxUMAAEVEzWz7Q61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAARESaGYxCAABERABAMkMAAEREmjmPQwAAREQzU8VDAABERM1s+0OPrHRyYW5zcGFyZW5jeccUaLM2OTQyNzM1NDA0NDY5OTY1NDkypXNwYWNlxxVotDEyNzQ3NTk3ODQxOTAxNTIzOTI2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTg2MDA1NDcyNjkwODM3MDAxNjmpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAKBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccVaLQxMzA3MjI1MDM0ODM0MjIxNDIxMLFhdHRyaWJ1dGVfdXBkYXRlcscTaLI0MjY3NzAwNTQ0NTM4OTMzMTCob3ZlcmRyYXfHFGizNDQzMTYwNDc1Nzc2MDc3MzM5Oa91bmlmb3JtX3VwZGF0ZXLHFWi0MTYzNjQ2MDcxMjM0NjMzODE0MTOlZmFjZXPHFGizODM2MjQxNDQ4ODM4NDgxNjI3OaR1dWlkszg2MDA1NDcyNjkwODM3MDAxNjmtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdNcXACBERAAAEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTXFwDA1EMAABJEj6x0cmFuc3BhcmVuY3nHFGizMTQ3MTAyMzA5MjA0NzA0MjEyMqVzcGFjZccUaLMzNzMzMzY1NjA2MjQwOTU3Mzk3rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEyNjg1MzQ2MDM5Mzc0NzMyOTI0qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTYxMjk5NTg3MTgwNzY1MTAwMDmxYXR0cmlidXRlX3VwZGF0ZXLHFGizNzUzNzY4MTA2Mzc5Nzk2MTQ5OahvdmVyZHJhd8cUaLM3OTAxOTk4NDg1NTc0NzE2NjYxr3VuaWZvcm1fdXBkYXRlcscUaLM3ODIxNzkwMjYwMDQ3ODE0MDc3pWZhY2VzxxVotDExNzM3NTA4NzQzNzM2Mjg3MjE0pHV1aWS0MTI2ODUzNDYwMzkzNzQ3MzI5MjStdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdNcXAABERAAgEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTXFwAAREQAACpC3gAQrHRyYW5zcGFyZW5jeccUaLM1Mzc4MjI3NTEzODg0MzcxMTY2pXNwYWNlxxVotDE1MTY2NjAyODQyMzg4NDMxNzc2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbh0ZXh0LTE1NTgzMTE1MTkwNDEyNTQwNzOpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXPeABSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/qmNvbG9ycmFuZ2XCqWJpbGxib2FyZMKoaGlnaGNsaXDYFwAAAAAAAAAAAAAAAAAAAACtcHJlcHJvamVjdGlvbsdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP6luYW5fY29sb3LYFwAAAAAAAAAAAAAAAAAAAACtZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWnbG93Y2xpcNgXAAAAAAAAAAAAAAAAAAAAALJhdGxhc190ZXh0dXJlX3NpemXKRIAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVpbWFnZcKpb2JqZWN0X2lkAKpzaGFwZV90eXBlA7B0cmFuc2Zvcm1fbWFya2Vyw6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+oY29sb3JtYXDCp3Zpc2libGXHE2iyMjEzMjA0ODQwMzc1MDQxNDM2q21hcmtlcnNwYWNlxxRoszU5NjY1NjkyMjQwMzkyMjM4NjCxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTc3Mzc2ODM2MTg2MDEwMzYzMDmob3ZlcmRyYXfHFGizODY5OTAwNDA2MDg0NzIzMzAxMa91bmlmb3JtX3VwZGF0ZXLHFGizNjIwMjcwMjk0OTM3NTkzNTM2OKVmYWNlc8cVaLQxNzIyOTI2ODEwMTY1MDg2MTIwMaR1dWlkszE1NTgzMTE1MTkwNDEyNTQwNzOtdmVydGV4X3NvdXJjZdobiSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoT8yN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBib29sIGNvbG9ybWFwOwpib29sIGdldF9jb2xvcm1hcCgpe3JldHVybiBjb2xvcm1hcDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4arcXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXqm1hcmtlcnNpemWCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrW1hcmtlcl9vZmZzZXSCq3R5cGVfbGVuZ3RoA6RmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFWi0MTQ1NzQ5MDIyNzY2NjU4NTk3MjGlc3BhY2XHFWi0MTc5MjkyNTUyMTU4MTE3MzE0OTasdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtNjE2NjYxMjc3MDI4NDYwMDg5NaljYW1fc3BhY2WlcGl4ZWyodW5pZm9ybXOHp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+pb2JqZWN0X2lkAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/p3Zpc2libGXHFGizNDc3NjUwMzQzNTA4NjEwNjExN7FhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMjgyNzY2NTYyNDAxMTU1NjY1OKhvdmVyZHJhd8cUaLM3ODg0Mjc1NTMyNzg1NzUyMzY0r3VuaWZvcm1fdXBkYXRlcscUaLM5MzEyOTYxNTc1NDQzMDYxNzMxpWZhY2VzxxVotDE1NDA1MjQyMDczNDA1NTYxNjY5pHV1aWSzNjE2NjYxMjc3MDI4NDYwMDg5Na12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABfeABCsdHJhbnNwYXJlbmN5xxRoszMyMTc3MDEyNTgyMTkwMzM0MTOlc3BhY2XHFWi0MTgzODYwNzY1NzA1MTE3NDA1MzKsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luXRleHQtMTYyMTQ3MTk1MDY3NzYwNTI4MzCpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXPeABSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/qmNvbG9ycmFuZ2XCqWJpbGxib2FyZMKoaGlnaGNsaXDYFwAAAAAAAAAAAAAAAAAAAACtcHJlcHJvamVjdGlvbsdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP6luYW5fY29sb3LYFwAAAAAAAAAAAAAAAAAAAACtZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWnbG93Y2xpcNgXAAAAAAAAAAAAAAAAAAAAALJhdGxhc190ZXh0dXJlX3NpemXKRIAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVpbWFnZcKpb2JqZWN0X2lkAKpzaGFwZV90eXBlA7B0cmFuc2Zvcm1fbWFya2Vyw6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+oY29sb3JtYXDCp3Zpc2libGXHFWi0MTcyMTMwOTkyMTUyMDYyNjg5MjOrbWFya2Vyc3BhY2XHFGizMzM5NTAxNTg2MjgyMzIzODYyOLFhdHRyaWJ1dGVfdXBkYXRlcscUaLMxNjUzNTYyNjY3MTAwMTA4MjQxqG92ZXJkcmF3xxNosjQwMTU2MzMwOTEyNjM5OTY3Ma91bmlmb3JtX3VwZGF0ZXLHFWi0MTIyOTMxMTc5OTQ4NjEwNzE1MDWlZmFjZXPHFWi0MTYwNzIwMDMzODU5ODU1MTU1MTKkdXVpZLQxNjIxNDcxOTUwNjc3NjA1MjgzMK12ZXJ0ZXhfc291cmNl2huJI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgbWFya2Vyc2l6ZTsKdmVjMiBnZXRfbWFya2Vyc2l6ZSgpe3JldHVybiBtYXJrZXJzaXplO30KaW4gdmVjNCByb3RhdGlvbnM7CnZlYzQgZ2V0X3JvdGF0aW9ucygpe3JldHVybiByb3RhdGlvbnM7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hPzI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqtxdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABevdXZfb2Zmc2V0X3dpZHRogqt0eXBlX2xlbmd0aASkZmxhdMcAF6Nwb3OCq3R5cGVfbGVuZ3RoA6RmbGF0xwAXqXJvdGF0aW9uc4KrdHlwZV9sZW5ndGgEpGZsYXTHABePrHRyYW5zcGFyZW5jeccUaLM4NDUzMDU5MTQ1MTI5MTM1ODA5pXNwYWNlxxRoszg3MjcxMTA3NTg0NzUwNjUyMzKsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTAzMjE0MDg5OTk1MTc2NjE3NzGpY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDE0OTQ3NDEyMTAwNDU1ODA2MjQxsWF0dHJpYnV0ZV91cGRhdGVyxxRoszI0MjUwODA5MDc4NDYzMjM2ODKob3ZlcmRyYXfHFGizMTUwMjczMzk2MzAyMjYzMjE3Oa91bmlmb3JtX3VwZGF0ZXLHFWi0MTEzODI2MDQ4MDkwODg2NzkxMjOlZmFjZXPHFGizMTQxNjUwNDYyNzE0NjYwNzMzM6R1dWlktDEwMzIxNDA4OTk5NTE3NjYxNzcxrXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF46sdHJhbnNwYXJlbmN5xxNosjU5MjgwNzExMzMwMTU4NTE2M6VzcGFjZccUaLM4NjU3NzY4OTM4Nzk4NzgyNzU5rHZlcnRleGFycmF5c4Knbm9ybWFsc4KrdHlwZV9sZW5ndGgDpGZsYXTHYBcAAMD/AADA/wAAwP8AAAAAAAAAAAAAgD8AAAAAAAAAAP//fz8AAAAAAAAAAP//fz8AAMD/AADA/wAAwP8AAAAAAAAAAP//fz8AAAAAAAAAAP//fz8AAAAAAAAAAAAAgD+ocG9zaXRpb26Cq3R5cGVfbGVuZ3RoA6RmbGF0x2AXAIDVQwAAMEIAAAAAAABERAAAMEIAAAAAAABERAAAEkQAAAAAAIDVQwAAEkQAAAAAAIDVQwAAMEIAAAAAzWzeQwAAMEIAAAAAzWzeQ///jUIAAAAAAIDVQ///jUIAAAAApG5hbWW4bWVzaC0yNDYxNzkyNzU0NDcyODczNjA0qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gAWvmludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcsOpYmFja2xpZ2h0ygAAAAClbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAyEIAAIA/p2RpZmZ1c2XHDBfNzMw+zczMPs3MzD6qY29sb3JyYW5nZcKnbG93Y2xpcNgXAAAAAAAAAAAAAAAAAAAAAKhoaWdoY2xpcNgXAAAAAAAAAAAAAAAAAAAAAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAKdwYXR0ZXJuwqxub3JtYWxtYXRyaXjHJBcAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+idXbXFwAAAAAAAAAAp3NoYWRpbmfCqHNwZWN1bGFyxwwXzcxMPs3MTD7NzEw+p3BpY2tpbmfCqW9iamVjdF9pZACtdW5pZm9ybV9jb2xvctgXAAAAAAAAAAAAAAAAzcxMPqtkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LCqXNoaW5pbmVzc8pCAAAAqGNvbG9ybWFwwqd2aXNpYmxlxxRoszg2ODYxNDk5NjAyOTc0MTg5MzCxYXR0cmlidXRlX3VwZGF0ZXLHFGizNzk5NzkzODQ3ODIzMTkwMjk0M6hvdmVyZHJhd8cUaLMyMzk3Mjc5OTM3ODUwNDk2Mzgxr3VuaWZvcm1fdXBkYXRlcscVaLQxNjYyODY3NTYwNTAxMjgwMzkzMKVmYWNlc8cUaLM0NzY4Njc4OTExOTE4NzA4NTQ5pHV1aWSzMjQ2MTc5Mjc1NDQ3Mjg3MzYwNK12ZXJ0ZXhfc291cmNl2hQkI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMzIHBvc2l0aW9uOwp2ZWMzIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzMgbm9ybWFsczsKdmVjMyBnZXRfbm9ybWFscygpe3JldHVybiBub3JtYWxzO30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBib29sIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjsKYm9vbCBnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCl7cmV0dXJuIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjt9CnVuaWZvcm0gZmxvYXQgYmFja2xpZ2h0OwpmbG9hdCBnZXRfYmFja2xpZ2h0KCl7cmV0dXJuIGJhY2tsaWdodDt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIG1hdDMgbm9ybWFsbWF0cml4OwptYXQzIGdldF9ub3JtYWxtYXRyaXgoKXtyZXR1cm4gbm9ybWFsbWF0cml4O30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSB2ZWM0IHVuaWZvcm1fY29sb3I7CnZlYzQgZ2V0X3VuaWZvcm1fY29sb3IoKXtyZXR1cm4gdW5pZm9ybV9jb2xvcjt9CnVuaWZvcm0gYm9vbCBzaGFkaW5nOwpib29sIGdldF9zaGFkaW5nKCl7cmV0dXJuIHNoYWRpbmc7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CgoKCm91dCB2ZWMyIGZyYWdfdXY7Cm91dCB2ZWMzIG9fbm9ybWFsOwpvdXQgdmVjMyBvX2NhbWRpcjsKb3V0IHZlYzMgb19saWdodGRpcjsKCm91dCB2ZWM0IGZyYWdfY29sb3I7Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KGZsb2F0IHYpe3JldHVybiB2ZWM0KHYsIDAuMCwgMC4wLCAwLjApO30KdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pe3JldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7fQoKdmVjNCBnZXRfY29sb3JfZnJvbV9jbWFwKGZsb2F0IHZhbHVlLCBzYW1wbGVyMkQgY29sb3JfbWFwLCB2ZWMyIGNvbG9ycmFuZ2UpIHsKICAgIGZsb2F0IGNtaW4gPSBjb2xvcnJhbmdlLng7CiAgICBmbG9hdCBjbWF4ID0gY29sb3JyYW5nZS55OwogICAgaWYgKHZhbHVlIDw9IGNtYXggJiYgdmFsdWUgPj0gY21pbikgewogICAgICAgIC8vIGluIHZhbHVlIHJhbmdlLCBjb250aW51ZSEKICAgIH0gZWxzZSBpZiAodmFsdWUgPCBjbWluKSB7CiAgICAgICAgcmV0dXJuIGdldF9sb3djbGlwKCk7CiAgICB9IGVsc2UgaWYgKHZhbHVlID4gY21heCkgewogICAgICAgIHJldHVybiBnZXRfaGlnaGNsaXAoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaXNuYW4gaXMgYnJva2VuIChvZiBjb3Vyc2UpIC0uLQogICAgICAgIC8vIHNvIGlmIG91dHNpZGUgdmFsdWUgcmFuZ2UgYW5kIG5vdCBzbWFsbGVyL2JpZ2dlciBtaW4vbWF4IHdlIGFzc3VtZSBOYU4KICAgICAgICByZXR1cm4gZ2V0X25hbl9jb2xvcigpOwogICAgfQogICAgZmxvYXQgaTAxID0gY2xhbXAoKHZhbHVlIC0gY21pbikgLyAoY21heCAtIGNtaW4pLCAwLjAsIDEuMCk7CiAgICAvLyAxLzAgY29ycmVzcG9uZHMgdG8gdGhlIGNvcm5lciBvZiB0aGUgY29sb3JtYXAsIHNvIHRvIHByb3Blcmx5IGludGVycG9sYXRlCiAgICAvLyBiZXR3ZWVuIHRoZSBjb2xvcnMsIHdlIG5lZWQgdG8gc2NhbGUgaXQsIHNvIHRoYXQgdGhlIGVuZHMgYXJlIGF0IDEgLSAoc3RlcHNpemUvMikgYW5kIDArKHN0ZXBzaXplLzIpLgogICAgZmxvYXQgc3RlcHNpemUgPSAxLjAgLyBmbG9hdCh0ZXh0dXJlU2l6ZShjb2xvcl9tYXAsIDApKTsKICAgIGkwMSA9ICgxLjAgLSBzdGVwc2l6ZSkgKiBpMDEgKyAwLjUgKiBzdGVwc2l6ZTsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yX21hcCwgdmVjMihpMDEsIDAuMCkpOwp9Cgp2ZWM0IHZlcnRleF9jb2xvcih2ZWMzIGNvbG9yLCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIHZlYzQoY29sb3IsIDEuMCk7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IodmVjNCBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBjb2xvcjsKfQp2ZWM0IHZlcnRleF9jb2xvcihib29sIGNvbG9yLCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgLy8gY29sb3Igc2FtcGxpbmcgaGFwcGVucyBpbiBmcmFnbWVudCBzaGFkZXIKICAgIHJldHVybiB2ZWM0KDAuMCwgMC4wLCAwLjAsIDAuMCk7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IoYm9vbCB2YWx1ZSwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgLy8gY29sb3Igc2FtcGxpbmcgaGFwcGVucyBpbiBmcmFnbWVudCBzaGFkZXIKICAgIHJldHVybiB2ZWM0KDAuMCwgMC4wLCAwLjAsIDAuMCk7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IoZmxvYXQgdmFsdWUsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCkpIHsKICAgICAgICByZXR1cm4gdmVjNCh2YWx1ZSwgMC4wLCAwLjAsIDAuMCk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKHZhbHVlLCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICB9Cn0KCnZvaWQgcmVuZGVyKHZlYzQgcG9zaXRpb25fd29ybGQsIHZlYzMgbm9ybWFsLCBtYXQ0IHZpZXcsIG1hdDQgcHJvamVjdGlvbiwgdmVjMyBsaWdodHBvc2l0aW9uKQp7CiAgICAvLyBub3JtYWwgaW4gd29ybGQgc3BhY2UKICAgIG9fbm9ybWFsID0gZ2V0X25vcm1hbG1hdHJpeCgpICogbm9ybWFsOwogICAgLy8gcG9zaXRpb24gaW4gdmlldyBzcGFjZSAoYXMgc2VlbiBmcm9tIGNhbWVyYSkKICAgIHZlYzQgdmlld19wb3MgPSB2aWV3ICogcG9zaXRpb25fd29ybGQ7CiAgICAvLyBwb3NpdGlvbiBpbiBjbGlwIHNwYWNlICh3LyBkZXB0aCkKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbiAqIHZpZXdfcG9zOwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CiAgICAvLyBkaXJlY3Rpb24gdG8gbGlnaHQKICAgIG9fbGlnaHRkaXIgPSBub3JtYWxpemUodmlldyp2ZWM0KGxpZ2h0cG9zaXRpb24sIDEuMCkgLSB2aWV3X3BvcykueHl6OwogICAgLy8gZGlyZWN0aW9uIHRvIGNhbWVyYQogICAgLy8gVGhpcyBpcyBlcXVpdmFsZW50IHRvCiAgICAvLyBub3JtYWxpemUodmlldyp2ZWM0KGV5ZXBvc2l0aW9uLCAxLjApIC0gdmlld19wb3MpLnh5egogICAgLy8gKGJ5IGRlZmluaXRpb24gYHZpZXcgKiBleWVwb3NpdGlvbiA9IDBgKQogICAgb19jYW1kaXIgPSBub3JtYWxpemUoLXZpZXdfcG9zKS54eXo7Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgLy8gZ2V0XyogZ2V0cyB0aGUgZ2xvYmFsIGlucHV0cyAodW5pZm9ybSwgc2FtcGxlciwgcG9zaXRpb24gYXJyYXkpCiAgICAvLyB0aG9zZSBmdW5jdGlvbnMgd2lsbCBnZXQgaW5zZXJ0ZWQgYnkgdGhlIHNoYWRlciBjcmVhdGlvbiBwaXBlbGluZQogICAgdmVjMyB2ZXJ0ZXhfcG9zaXRpb24gPSB0b3ZlYzMoZ2V0X3Bvc2l0aW9uKCkpOwogICAgaWYgKGlzbmFuKHZlcnRleF9wb3NpdGlvbi56KSkgewogICAgICAgIHZlcnRleF9wb3NpdGlvbi56ID0gMC4wOwogICAgfQogICAgdmVjNCBwb3NpdGlvbl93b3JsZCA9IG1vZGVsICogdmVjNCh2ZXJ0ZXhfcG9zaXRpb24sIDEpOwoKICAgIHJlbmRlcihwb3NpdGlvbl93b3JsZCwgZ2V0X25vcm1hbHMoKSwgdmlldywgcHJvamVjdGlvbiwgZ2V0X2xpZ2h0cG9zaXRpb24oKSk7CiAgICBmcmFnX3V2ID0gZ2V0X3V2KCk7CiAgICBmcmFnX3V2ID0gdmVjMigxLjAgLSBmcmFnX3V2LnksIGZyYWdfdXYueCk7CiAgICBmcmFnX2NvbG9yID0gdmVydGV4X2NvbG9yKGdldF9jb2xvcigpLCBnZXRfY29sb3JyYW5nZSgpLCBjb2xvcm1hcCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfVmVydGV4SUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hUaI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSBib29sIGNvbG9ybWFwOwpib29sIGdldF9jb2xvcm1hcCgpe3JldHVybiBjb2xvcm1hcDt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIGNvbG9yOwpib29sIGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gdmVjNCB1bmlmb3JtX2NvbG9yOwp2ZWM0IGdldF91bmlmb3JtX2NvbG9yKCl7cmV0dXJuIHVuaWZvcm1fY29sb3I7fQp1bmlmb3JtIGJvb2wgc2hhZGluZzsKYm9vbCBnZXRfc2hhZGluZygpe3JldHVybiBzaGFkaW5nO30KdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKaW4gdmVjMiBmcmFnX3V2OwppbiB2ZWM0IGZyYWdfY29sb3I7CmZsYXQgaW4gaW50IHNhbXBsZV9mcmFnX2NvbG9yOwoKaW4gdmVjMyBvX25vcm1hbDsKaW4gdmVjMyBvX2NhbWRpcjsKaW4gdmVjMyBvX2xpZ2h0ZGlyOwoKdmVjMyBibGlubnBob25nKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIHZlYzMgY29sb3IpewogICAgZmxvYXQgZGlmZl9jb2VmZiA9IG1heChkb3QoTCwgTiksIDAuMCk7CgogICAgLy8gc3BlY3VsYXIgY29lZmZpY2llbnQKICAgIHZlYzMgSCA9IG5vcm1hbGl6ZShMICsgVik7CgogICAgZmxvYXQgc3BlY19jb2VmZiA9IHBvdyhtYXgoZG90KEgsIE4pLCAwLjApLCBnZXRfc2hpbmluZXNzKCkpOwogICAgaWYgKGRpZmZfY29lZmYgPD0gMC4wKQogICAgICAgIHNwZWNfY29lZmYgPSAwLjA7CiAgICAvLyBmaW5hbCBsaWdodGluZyBtb2RlbAogICAgcmV0dXJuIHZlYzMoCiAgICAgICAgZ2V0X2RpZmZ1c2UoKSAqIGRpZmZfY29lZmYgKiBjb2xvciArCiAgICAgICAgZ2V0X3NwZWN1bGFyKCkgKiBzcGVjX2NvZWZmCiAgICApOwp9Cgp2ZWM0IGdldF9jb2xvcih2ZWMzIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIHZlYzQoY29sb3IsIDEuMCk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gZnJhZ19jb2xvcjsgIC8vIGNvbG9yIG5vdCBpbiB1bmlmb3JtCn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfcGF0dGVybigpKSB7CiAgICAgICAgdmVjMiBzaXplID0gdmVjMih0ZXh0dXJlU2l6ZShjb2xvciwgMCkpOwogICAgICAgIHZlYzIgcG9zID0gZ2xfRnJhZ0Nvb3JkLnh5OwogICAgICAgIHJldHVybiB0ZXhlbEZldGNoKGNvbG9yLCBpdmVjMihtb2QocG9zLngsIHNpemUueCksIG1vZChwb3MueSwgc2l6ZS55KSksIDApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwogICAgfQp9CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pe3JldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7fQoKdmVjNCBnZXRfY29sb3JfZnJvbV9jbWFwKGZsb2F0IHZhbHVlLCBzYW1wbGVyMkQgY29sb3JfbWFwLCB2ZWMyIGNvbG9ycmFuZ2UpIHsKICAgIGZsb2F0IGNtaW4gPSBjb2xvcnJhbmdlLng7CiAgICBmbG9hdCBjbWF4ID0gY29sb3JyYW5nZS55OwogICAgaWYgKHZhbHVlIDw9IGNtYXggJiYgdmFsdWUgPj0gY21pbikgewogICAgICAgIC8vIGluIHZhbHVlIHJhbmdlLCBjb250aW51ZSEKICAgIH0gZWxzZSBpZiAodmFsdWUgPCBjbWluKSB7CiAgICAgICAgcmV0dXJuIGdldF9sb3djbGlwKCk7CiAgICB9IGVsc2UgaWYgKHZhbHVlID4gY21heCkgewogICAgICAgIHJldHVybiBnZXRfaGlnaGNsaXAoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaXNuYW4gaXMgYnJva2VuIChvZiBjb3Vyc2UpIC0uLQogICAgICAgIC8vIHNvIGlmIG91dHNpZGUgdmFsdWUgcmFuZ2UgYW5kIG5vdCBzbWFsbGVyL2JpZ2dlciBtaW4vbWF4IHdlIGFzc3VtZSBOYU4KICAgICAgICByZXR1cm4gZ2V0X25hbl9jb2xvcigpOwogICAgfQogICAgZmxvYXQgaTAxID0gY2xhbXAoKHZhbHVlIC0gY21pbikgLyAoY21heCAtIGNtaW4pLCAwLjAsIDEuMCk7CiAgICAvLyAxLzAgY29ycmVzcG9uZHMgdG8gdGhlIGNvcm5lciBvZiB0aGUgY29sb3JtYXAsIHNvIHRvIHByb3Blcmx5IGludGVycG9sYXRlCiAgICAvLyBiZXR3ZWVuIHRoZSBjb2xvcnMsIHdlIG5lZWQgdG8gc2NhbGUgaXQsIHNvIHRoYXQgdGhlIGVuZHMgYXJlIGF0IDEgLSAoc3RlcHNpemUvMikgYW5kIDArKHN0ZXBzaXplLzIpLgogICAgZmxvYXQgc3RlcHNpemUgPSAxLjAgLyBmbG9hdCh0ZXh0dXJlU2l6ZShjb2xvcl9tYXAsIDApKTsKICAgIGkwMSA9ICgxLjAgLSBzdGVwc2l6ZSkgKiBpMDEgKyAwLjUgKiBzdGVwc2l6ZTsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yX21hcCwgdmVjMihpMDEsIDAuMCkpOwp9Cgp2ZWM0IGdldF9jb2xvcihib29sIGNvbG9yLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAoZnJhZ19jb2xvci54LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmcmFnX2NvbG9yOwogICAgfQp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgdmFsdWVzLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBmbG9hdCB2YWx1ZSA9IHRleHR1cmUodmFsdWVzLCB1dikueDsKICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKHZhbHVlLCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgcmV0dXJuIHRleHR1cmUoY29sb3IsIHV2KTsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIHZlYzQgcmVhbF9jb2xvciA9IGdldF9jb2xvcih1bmlmb3JtX2NvbG9yLCBmcmFnX3V2LCBnZXRfY29sb3JyYW5nZSgpLCBjb2xvcm1hcCk7CiAgICB2ZWMzIHNoYWRlZF9jb2xvciA9IHJlYWxfY29sb3IucmdiOwoKICAgIGlmKGdldF9zaGFkaW5nKCkpewogICAgICAgIHZlYzMgTCA9IG5vcm1hbGl6ZShvX2xpZ2h0ZGlyKTsKICAgICAgICB2ZWMzIE4gPSBub3JtYWxpemUob19ub3JtYWwpOwogICAgICAgIHZlYzMgbGlnaHQxID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHZlYzMgbGlnaHQyID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgLUwsIHJlYWxfY29sb3IucmdiKTsKICAgICAgICBzaGFkZWRfY29sb3IgPSBnZXRfYW1iaWVudCgpICogcmVhbF9jb2xvci5yZ2IgKyBsaWdodDEgKyBnZXRfYmFja2xpZ2h0KCkgKiBsaWdodDI7CiAgICB9CgogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAocmVhbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChyZWFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSB2ZWM0KHNoYWRlZF9jb2xvciwgcmVhbF9jb2xvci5hKTsKfQqvYmFja2dyb3VuZGNvbG9yxxVotDEwMTk2NTA2MDczMTQ3OTYxNDM1qXBpeGVsYXJlYccVaLQxMDk0NDg0Nzg2NTg4MjU3MjE4NKZjYW1lcmHHFWi0MTI5MTA4MDgzMDk2NDMwMzQ1NjSkdXVpZLQxNTUzNTAwMTIxOTgwMjEzMjkyOatjYW0zZF9zdGF0ZcCqY2xlYXJzY2VuZccUaLM3NjQwMTMzMzE0Nzk4MTQ4OTg3qGNoaWxkcmVukYmndmlzaWJsZccVaLQxMzIwMDQwODA3ODQwNTIxMzg3NKVwbG90c5GOrHRyYW5zcGFyZW5jeccVaLQxNjE1NTQ0MDA1NjgwNDgwMTcwNqVzcGFjZccUaLM1NDU0ODEzOTc5MTQ4MjA5MjU0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0yAPIFwAAAAAAAIA/zczMPQAAgD/NzEw+AACAP5qZmT4AAIA/zczMPgAAgD8AAAA/AACAP5qZGT8AAIA/MzMzPwAAgD/NzEw/AACAP2ZmZj8AAIA/AACAPwAAgD8AAAAAZmZmP83MzD1mZmY/zcxMPmZmZj+amZk+ZmZmP83MzD5mZmY/AAAAP2ZmZj+amRk/ZmZmPzMzMz9mZmY/zcxMP2ZmZj9mZmY/ZmZmPwAAgD9mZmY/AAAAAM3MTD/NzMw9zcxMP83MTD7NzEw/mpmZPs3MTD/NzMw+zcxMPwAAAD/NzEw/mpkZP83MTD8zMzM/zcxMP83MTD/NzEw/ZmZmP83MTD8AAIA/zcxMPwAAAAAzMzM/zczMPTMzMz/NzEw+MzMzP5qZmT4zMzM/zczMPjMzMz8AAAA/MzMzP5qZGT8zMzM/MzMzPzMzMz/NzEw/MzMzP2ZmZj8zMzM/AACAPzMzMz8AAAAAmpkZP83MzD2amRk/zcxMPpqZGT+amZk+mpkZP83MzD6amRk/AAAAP5qZGT+amRk/mpkZPzMzMz+amRk/zcxMP5qZGT9mZmY/mpkZPwAAgD+amRk/AAAAAAAAAD/NzMw9AAAAP83MTD4AAAA/mpmZPgAAAD/NzMw+AAAAPwAAAD8AAAA/mpkZPwAAAD8zMzM/AAAAP83MTD8AAAA/ZmZmPwAAAD8AAIA/AAAAPwAAAADNzMw+zczMPc3MzD7NzEw+zczMPpqZmT7NzMw+zczMPs3MzD4AAAA/zczMPpqZGT/NzMw+MzMzP83MzD7NzEw/zczMPmZmZj/NzMw+AACAP83MzD4AAAAAmpmZPs3MzD2amZk+zcxMPpqZmT6amZk+mpmZPs3MzD6amZk+AAAAP5qZmT6amRk/mpmZPjMzMz+amZk+zcxMP5qZmT5mZmY/mpmZPgAAgD+amZk+AAAAAM3MTD7NzMw9zcxMPs3MTD7NzEw+mpmZPs3MTD7NzMw+zcxMPgAAAD/NzEw+mpkZP83MTD4zMzM/zcxMPs3MTD/NzEw+ZmZmP83MTD4AAIA/zcxMPgAAAADNzMw9zczMPc3MzD3NzEw+zczMPZqZmT7NzMw9zczMPs3MzD0AAAA/zczMPZqZGT/NzMw9MzMzP83MzD3NzEw/zczMPWZmZj/NzMw9AACAP83MzD0AAAAAAAAAAM3MzD0AAAAAzcxMPgAAAACamZk+AAAAAM3MzD4AAAAAAAAAPwAAAACamRk/AAAAADMzMz8AAAAAzcxMPwAAAABmZmY/AAAAAAAAgD8AAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAOkZmxhdMgFrBcAAAA/AAAAPwAAAAAAAMA/AAAAPwAAAAAAACBAAAAAPwAAAAAAAGBAAAAAPwAAAAAAAJBAAAAAPwAAAAAAALBAAAAAPwAAAAAAANBAAAAAPwAAAAAAAPBAAAAAPwAAAAAAAAhBAAAAPwAAAAAAABhBAAAAPwAAAAAAAChBAAAAPwAAAAAAAAA/AADAPwAAAAAAAMA/AADAPwAAAAAAACBAAADAPwAAAAAAAGBAAADAPwAAAAAAAJBAAADAPwAAAAAAALBAAADAPwAAAAAAANBAAADAPwAAAAAAAPBAAADAPwAAAAAAAAhBAADAPwAAAAAAABhBAADAPwAAAAAAAChBAADAPwAAAAAAAAA/AAAgQAAAAAAAAMA/AAAgQAAAAAAAACBAAAAgQAAAAAAAAGBAAAAgQAAAAAAAAJBAAAAgQAAAAAAAALBAAAAgQAAAAAAAANBAAAAgQAAAAAAAAPBAAAAgQAAAAAAAAAhBAAAgQAAAAAAAABhBAAAgQAAAAAAAAChBAAAgQAAAAAAAAAA/AABgQAAAAAAAAMA/AABgQAAAAAAAACBAAABgQAAAAAAAAGBAAABgQAAAAAAAAJBAAABgQAAAAAAAALBAAABgQAAAAAAAANBAAABgQAAAAAAAAPBAAABgQAAAAAAAAAhBAABgQAAAAAAAABhBAABgQAAAAAAAAChBAABgQAAAAAAAAAA/AACQQAAAAAAAAMA/AACQQAAAAAAAACBAAACQQAAAAAAAAGBAAACQQAAAAAAAAJBAAACQQAAAAAAAALBAAACQQAAAAAAAANBAAACQQAAAAAAAAPBAAACQQAAAAAAAAAhBAACQQAAAAAAAABhBAACQQAAAAAAAAChBAACQQAAAAAAAAAA/AACwQAAAAAAAAMA/AACwQAAAAAAAACBAAACwQAAAAAAAAGBAAACwQAAAAAAAAJBAAACwQAAAAAAAALBAAACwQAAAAAAAANBAAACwQAAAAAAAAPBAAACwQAAAAAAAAAhBAACwQAAAAAAAABhBAACwQAAAAAAAAChBAACwQAAAAAAAAAA/AADQQAAAAAAAAMA/AADQQAAAAAAAACBAAADQQAAAAAAAAGBAAADQQAAAAAAAAJBAAADQQAAAAAAAALBAAADQQAAAAAAAANBAAADQQAAAAAAAAPBAAADQQAAAAAAAAAhBAADQQAAAAAAAABhBAADQQAAAAAAAAChBAADQQAAAAAAAAAA/AADwQAAAAAAAAMA/AADwQAAAAAAAACBAAADwQAAAAAAAAGBAAADwQAAAAAAAAJBAAADwQAAAAAAAALBAAADwQAAAAAAAANBAAADwQAAAAAAAAPBAAADwQAAAAAAAAAhBAADwQAAAAAAAABhBAADwQAAAAAAAAChBAADwQAAAAAAAAAA/AAAIQQAAAAAAAMA/AAAIQQAAAAAAACBAAAAIQQAAAAAAAGBAAAAIQQAAAAAAAJBAAAAIQQAAAAAAALBAAAAIQQAAAAAAANBAAAAIQQAAAAAAAPBAAAAIQQAAAAAAAAhBAAAIQQAAAAAAABhBAAAIQQAAAAAAAChBAAAIQQAAAAAAAAA/AAAYQQAAAAAAAMA/AAAYQQAAAAAAACBAAAAYQQAAAAAAAGBAAAAYQQAAAAAAAJBAAAAYQQAAAAAAALBAAAAYQQAAAAAAANBAAAAYQQAAAAAAAPBAAAAYQQAAAAAAAAhBAAAYQQAAAAAAABhBAAAYQQAAAAAAAChBAAAYQQAAAAAAAAA/AAAoQQAAAAAAAMA/AAAoQQAAAAAAACBAAAAoQQAAAAAAAGBAAAAoQQAAAAAAAJBAAAAoQQAAAAAAALBAAAAoQQAAAAAAANBAAAAoQQAAAAAAAPBAAAAoQQAAAAAAAAhBAAAoQQAAAAAAABhBAAAoQQAAAAAAAChBAAAoQQAAAACkbmFtZbtoZWF0bWFwLTQyNTQ1NTI2NTQzMDI1NDYwMDCpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXPeABa+aW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyw6liYWNrbGlnaHTKAAAAAKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nZGlmZnVzZccMFwAAAAAAAAAAAAAAAKpjb2xvcnJhbmdl1xcHiws7dHF5P6dsb3djbGlw2BfAtIg+E7afOxWpqD4AAIA/qGhpZ2hjbGlw2BeARX4/6PlnP/VjEz4AAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+pbmFuX2NvbG9y2BcAAAAAAAAAAAAAAAAAAAAAp3BhdHRlcm7CrG5vcm1hbG1hdHJpeMckFwAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAP6dzaGFkaW5nwqhzcGVjdWxhcscMFwAAAAAAAAAAAAAAAKdub3JtYWxzxwwXAAAAAAAAAAAAAAAAp3BpY2tpbmfCqW9iamVjdF9pZACtdW5pZm9ybV9jb2xvcoqpbWluRmlsdGVyrU5lYXJlc3RGaWx0ZXKqYW5pc290cm9weco/gAAAqW1hZ0ZpbHRlcq1OZWFyZXN0RmlsdGVypXdyYXBTs0NsYW1wVG9FZGdlV3JhcHBpbmekZGF0YcgBkBfl5k0/pi/XPnlJoz5drS8/33lpPwLOZz1Bx1Y/VBVZP5h5tD39sV0+CeroPpeA+z5HVKc+dHF5P+gsbD9a5Dg/kTYlPwhrPT6tXuQ9fmS2PrmSIj/wAE0/Fi0fP/eqdT5QA8U+oCIKP4EBlD66c44+HkyiPmAtED4YJWc/alplP2hzqD4OwHM/L+H5Pk9uQj/G2R4/F30dP2LQIj9Er3M/HApRPV2UCz8KZ1E/LBAfP1YmZT9IOns+OrQlP5GUqj4Z5nQ/H7K8Pv3+XD9hDSI9kyEzPweLCzuZmDw/zDELP/OeDz3RPI4+I0VrP2Mu+z4lU34+IQpXP8v4YT9JQ6k+ca9uPY2IQT8AyD88U2VpP5jdXT+Plo8+XQZTP5OKKD8xqSU99OmhPmrQmT6r70k/WftcPQ8YDj+qnk8/0O6WPtJxcj+8p7s+f7pKP4f8Pj/L/GQ/Ak+xPqr0Aj8xKaA+E2NhP69b7Ts6zSk9e+JhP+X0rz6P9Qg/5uAbPjw8Hz8Jchs+K+l6Pc4RNT9A4I4+rHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZdcVCgAAAAoAAACld3JhcFSzQ2xhbXBUb0VkZ2VXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9ywqlzaGluaW5lc3PKAAAAAKhjb2xvcm1hcImpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5yj+AAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU7NDbGFtcFRvRWRnZVdyYXBwaW5npGRhdGHIEAAXwLSIPhO2nzsVqag+AACAPyV6iT5KXh08Fr2rPgAAgD8aNoo+sp1vPDrJrj4AAIA/feiKPmhdozw+zbE+AACAP3GRiz5/adE8m8i0PgAAgD+xMIw+AAMBPZW7tz4AAIA/gsaMPtehGj1hpbo+AACAP8FSjT516DQ9I4a9PgAAgD9O1Y0+gzVOPbddwD4AAIA/SE6OPv+zZj13K8M+AACAP7K9jj7Bi349Y+/FPgAAgD9GI48+mu2KPVipyD4AAIA/KH+PPqdblj3zWMs+AACAP1fRjz7+maE9Ef7NPgAAgD+xGZA+96+sPZGY0D4AAIA/WFiQPs+itz0PKNM+AACAPyqNkD7Ed8I9aazVPgAAgD9KuJA+jzPNPVsl2D4AAIA/lNmQPknY1z3mkto+AACAP07xkD6caeI9pfTcPgAAgD8y/5A+o+nsPXdK3z4AAIA/ZAORPu9Z9z06lOE+AACAP+P9kD5M3gA+zNHjPgAAgD/Q7pA+VwkGPusC5j4AAIA/LNaQPp0uCz6VJ+g+AACAP/azkD7oThA+qz/qPgAAgD9RiJA+9WkVPgpL7D4AAIA/flOQPo2AGj6QSe4+AACAPzwVkD7zkh8+HTvwPgAAgD/uzY8+J6EkPtEf8j4AAIA/lX2PPm2rKT6M9/M+AACAP1Mkjz6BsS4+K8L1PgAAgD9Iwo4+p7MzPtB/9z4AAIA/l1eOPiCyOD5ZMPk+AACAP4LkjT5prD0+6dP6PgAAgD9NaY0+wqJCPqFq/D4AAIA/1uWMPi2VRz5e9P0+AACAP4FajD6pg0w+Q3H/PgAAgD9xx4s+sW1RPspwAD8AAIA/Ci2LPodTVj6WIgE/AACAP26Lij7nNFs+Kc4BPwAAgD+94ok+0xFgPqNzAj8AAIA/GjOJPgfqZD71EgM/AACAPyx9iD6EvWk+YKwDPwAAgD8WwYc+BYxuPtU/BD8AAIA/1v6GPopVcz6WzQQ/AACAP/Q2hj7SGXg+k1UFPwAAgD+QaYU+H9l8Pg7YBT8AAIA/D5eEPnXJgD4ZVQY/AACAP7a/gz55I4M+1cwGPwAAgD/n44I+3XqFPnU/Bz8AAIA/xQOCPl/Phz73rAc/AACAP5IfgT7/IIo+kBUIPwAAgD+1N4A+vW+MPnB5CD8AAIA/mph+Ppm7jj6p2Ag/AACAPwa8fD5xBJE+bjMJPwAAgD/x2Xo+I0qTPt+JCT8AAIA/nfJ4PhWNlT4v3Ak/AACAP9UGdz7izJc+XioKPwAAgD8eF3U+qwmaPsF0Cj8AAIA/vCNzPnBDnD5Wuwo/AACAP7otcT5Tep4+Yf4KPwAAgD+gNW8+EK6gPvM9Cz8AAIA/8zttPsreoj4+egs/AACAP7NAaz6ADKU+Y7MLPwAAgD/tRGk+VDenPoXpCz8AAIA/oUhnPkZfqT7FHAw/AACAP5hMZT5VhKs+NE0MPwAAgD8WUWM+g6atPgN7DD8AAIA/n1ZhPu/Frz5Vpgw/AACAP3ldXz6b4rE+Ss8MPwAAgD8nZl0+ZfyzPuT1DD8AAIA/73BbPrITtj5lGg0/AACAPxN+WT5fKLg+3jwNPwAAgD8Zjlc+bTq6Pl9dDT8AAIA/RaFVPv1JvD4cfA0/AACAP9i3Uz4RV74+E5kNPwAAgD8Y0lE+yGHAPle0DT8AAIA/v+9PPiNqwj4Hzg0/AACAP5kRTj5lcMQ+NuYNPwAAgD9hN0w+bXTGPgX9DT8AAIA/F2FKPlx2yD5zEg4/AACAP4aPSD4ydso+kSYOPwAAgD8nwkY+EHTMPoI5Dj8AAIA/PPlEPhlwzj5FSw4/AACAP8Y0Qz5NatA+2VsOPwAAgD8IdUE+zGLSPmFrDj8AAIA/fLk/PpZZ1D7deQ4/AACAP2QCPj7PTtY+XYcOPwAAgD/CTzw+lkLYPuKTDj8AAIA/UaE6Pso02j5rnw4/AACAP8/2OD6vJdw+CKoOPwAAgD/CUDc+RBXePryzDj8AAIA/YK41PooD4D6UvA4/AACAP6oPND7D8OE+csQOPwAAgD/idDI+z9zjPnXLDj8AAIA/QN0wPu/H5T6N0Q4/AACAP8NILz4Dsuc+y9YOPwAAgD+uty0+LJvpPg7bDj8AAIA/OSksPoyD6z523g4/AACAP6adKj4ja+0+4+AOPwAAgD9uFCk+EVLvPlTiDj8AAIA/UI0nPlg48T7K4g4/AACAP40IJj73HfM+Q+IOPwAAgD9ehSQ+MgP1PqDgDj8AAIA/wAMjPsXn9j7f3Q4/AACAP7aDIT4UzPg+8dkOPwAAgD8+BSA+/6/6PuXUDj8AAIA/04cePoaT/D6azg4/AACAP3QLHT7Jdv4+AMcOPwAAgD9kkBs+5CwAPwa+Dj8AAIA/YRYaPlQeAT+8sw4/AACAP66dGD6hDwI/8KcOPwAAgD9KJhc+7wADP8OaDj8AAIA/NrAVPhvyAz/0iw4/AACAP7Q7FD5H4wQ/gXsOPwAAgD+CyBI+dNQFP1lpDj8AAIA/aVcRPqDFBj9tVQ4/AACAP6voDz67tgc/qz8OPwAAgD+NfA4+56cIPwIoDj8AAIA/lBMNPhOZCT9SDg4/AACAP4quCz5Qigo/mfINPwAAgD++Tgo+fHsLP9jUDT8AAIA/7fMIPspsDD/dtA0/AACAP2afBz4HXg0/lpINPwAAgD/0UQY+Zk8OP/RtDT8AAIA/KA0FPsRADz/2Rg0/AACAP4nRAz4jMhA/WB0NPwAAgD8woQI+kiMRPz3xDD8AAIA/5XwBPgEVEj9hwgw/AACAP0lnAD6BBhM/5pAMPwAAgD/Owv498PcTP4lcDD8AAIA/K9r8PXDpFD9bJQw/AACAP9sY+z3g2hU/KesLPwAAgD+Igvk9T8wWP/OtCz8AAIA/cRz4Pb69Fz+YbQs/AACAP8jq9j0drxg/FyoLPwAAgD/L8vU9aqAZPz/jCj8AAIA/Mjn1PaeRGj8xmQo/AACAP7XC9D3Dghs/uksKPwAAgD8MlPQ9vXMcP7n6CT8AAIA/gbP0PaZkHT8vpgk/AACAP8Ak9T1cVR4/CU4JPwAAgD8H7fU98UUfPznyCD8AAIA/DhH3PUQ2ID+rkgg/AACAPxSW+D1jJiE/Yi8IPwAAgD+3fvo9URYiPyrIBz8AAIA/NdD8PeoFIz8DXQc/AACAP6iM/z1B9SM/7u0GPwAAgD+aWwE+MuQkP8h6Bj8AAIA/PSkDPuHSJT+CAwY/AACAP0kwBT4awSY/GogFPwAAgD9DcQc+/64nP4EIBT8AAIA/s+wJPl6cKD+lhAQ/AACAP5iiDD5ZiSk/dvwDPwAAgD82kw8+vHUqP/RvAz8AAIA/Br4SPqphKz/83gI/AACAP4EiFj4BTSw/oUkCPwAAgD9mwBk+sDctP9GvAT8AAIA/ZJYdPskhLj9rEQE/AACAP7GjIT45Cy8/fm4APwAAgD+G5yU+8fMvP9aN/z4AAIA/TmAqPvDbMD+DNf4+AACAP/4MLz4mwzE/v9P8PgAAgD+J7DM+k6kyP61o+z4AAIA/Gv04PhWPMz/p8/k+AACAP+Y9Pj69czQ/tHX4PgAAgD8ZrUM+eVc1P+7t9j4AAIA/6UlJPks6Nj90XPU+AACAP38STz4RHDc/SMHzPgAAgD/RBVU+yvw3P2kc8j4AAIA/0SJbPnfcOD/XbfA+AACAPzBoYT71ujk/LbXuPgAAgD+d1Gc+Z5g6P67y7D4AAIA/DmduPop0Oz9bJus+AACAP3UedT5/Tzw/8E/pPgAAgD/G+Xs+NSk9P7Fv5z4AAIA/+nuBPooBPj97heU+AACAP/oLhT6Q2D4/LpHjPgAAgD9+rIg+Ja4/P8mS4T4AAIA/Ql2MPkmCQD8rit8+AACAP8EdkD78VEE/dXfdPgAAgD907ZM+HCZCP6da2z4AAIA/GMyXPqn1Qj/CM9k+AACAP0m5mz6kw0M/xQLXPgAAgD+itJ8+/I9EP7DH1D4AAIA/Ab6jPp9aRT+EgtI+AACAP+HUpz6OI0Y/HjPQPgAAgD8e+as+p+pGP17ZzT4AAIA/eCqwPvuvRz+Gdcs+AACAP4hotD5pc0g/lgfJPgAAgD8Ls7g+8DRJP46Pxj4AAIA/ngm9PpD0ST9ODcQ+AACAP0BswT4psko/OIHBPgAAgD+M2sU+ym1LP+rqvj4AAIA/P1TKPlInTD+lSrw+AACAPzjZzj7T3kw/aqC5PgAAgD9VadM+GJRNP/brtj4AAIA/UwTYPjRHTj+MLbQ+AACAP86p3D4W+E4/TWWxPgAAgD+jWeE+vaZPPzqTrj4AAIA/kBPmPhpTUD90t6s+AACAP1LX6j4q/VA/+tGoPgAAgD+lpO8+z6RRPxHjpT4AAIA/Z3v0PidKUj906qI+AACAP3lb+T4D7VI/iuifPgAAgD9SRP4+YY1TP3LdnD4AAIA/+poBP1IrVD8MyZk+AACAPw0YBD/FxlQ/vauWPgAAgD9CmQY/q19VP2KFkz4AAIA/dR4JPwH2VT8/VpA+AACAP3anCz+5iVY/2h6NPgAAgD8zNA4/4xpXPzPfiT4AAIA/esQQP36pVz/Ql4Y+AACAPxlYEz96NVg/1EiDPgAAgD/+7hU/xr5YPwDlfz4AAIA/6IgYP4RFWT89K3k+AACAP8QlGz+jyVk/oWRyPgAAgD9hxR0/I0taP8CSaz4AAIA/e2cgPwTKWj+mtmQ+AACAPwIMIz9WRls/otFdPgAAgD+isiU/GsBbP83lVj4AAIA/OlsoP1A3XD+69E8+AACAP5YFKz/3q1w/CAFJPgAAgD91sS0/Mh5dPxMNQj4AAIA/ol4wPwCOXT9DHDs+AACAP90MMz9h+10/vjE0PgAAgD/guzU/d2ZeP7VRLT4AAIA/i2s4P0LPXj9ngSY+AACAP4sbOz/jNV8/EcYfPgAAgD+byz0/W5pfP4UmGT4AAIA/eHtAP8r8Xz9cqhI+AACAP+AqQz9TXWA/gVoMPgAAgD+h2UU/9btgP3BBBj4AAIA/VYdIP9IYYT8ragA+AACAP9szSz8ddGE/LsX1PQAAgD/f3k0/xM1hP8Vy6z0AAIA/DohQPwsmYj+c/eE9AACAP0UvUz8DfWI/TIjZPQAAgD9B1FU/zNJiPxE40j0AAIA/sHZYP4knYz+QMMw9AACAP10WWz9be2M/6pTHPQAAgD8Hs10/ZM5jPwKDxD0AAIA/jExgP8UgZD9vEsM9AACAP6jiYj+fcmQ/clPDPQAAgD86dWU/BcRkP0lLxT0AAIA//wNoPzgVZT/D9cg9AACAP9aOaj84ZmU/t0TOPQAAgD9IFW0/a7dlPy0j1T0AAIA/aJdvP68IZj/Jc909AACAPzMVcj9HWmY/nBfnPQAAgD+KjnQ/MqxmPxjt8T0AAIA/SwN3P6T+Zj/H1P09AACAP2RzeT+tUWc/FVcFPgAAgD/G3ns/XaVnP7ouDD4AAIA/gEV+P+j5Zz/1YxM+AACAP6x0aHJlZV9mb3JtYXSqUkdCQUZvcm1hdKRzaXpl1hUAAQAApHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZad2aXNpYmxlxxVotDE4MTAzMDIyODAwMTg4MzQzMTIxsWF0dHJpYnV0ZV91cGRhdGVyxxVotDE3MzQyMjE1MjkxOTQwMDA1ODgzqG92ZXJkcmF3xxVotDE0ODU3Mzk5MzA1MzkwNTQ0NjMxr3VuaWZvcm1fdXBkYXRlcscVaLQxNDQ4OTA4NjczNTEyOTg3ODM1MaVmYWNlc8cUaLM0MDE3OTg4NjU1NTMzMjUyODM4pHV1aWSzNDI1NDU1MjY1NDMwMjU0NjAwMK12ZXJ0ZXhfc291cmNl2hPYI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMzIHBvc2l0aW9uOwp2ZWMzIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB2ZWMyIGNvbG9ycmFuZ2U7CnZlYzIgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KCgoKb3V0IHZlYzIgZnJhZ191djsKb3V0IHZlYzMgb19ub3JtYWw7Cm91dCB2ZWMzIG9fY2FtZGlyOwpvdXQgdmVjMyBvX2xpZ2h0ZGlyOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQoZmxvYXQgdil7cmV0dXJuIHZlYzQodiwgMC4wLCAwLjAsIDAuMCk7fQp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgdmVydGV4X2NvbG9yKHZlYzMgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcih2ZWM0IGNvbG9yLCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGNvbG9yOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihib29sIHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihmbG9hdCB2YWx1ZSwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgaWYgKGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKSkgewogICAgICAgIHJldHVybiB2ZWM0KHZhbHVlLCAwLjAsIDAuMCwgMC4wKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0KfQoKdm9pZCByZW5kZXIodmVjNCBwb3NpdGlvbl93b3JsZCwgdmVjMyBub3JtYWwsIG1hdDQgdmlldywgbWF0NCBwcm9qZWN0aW9uLCB2ZWMzIGxpZ2h0cG9zaXRpb24pCnsKICAgIC8vIG5vcm1hbCBpbiB3b3JsZCBzcGFjZQogICAgb19ub3JtYWwgPSBnZXRfbm9ybWFsbWF0cml4KCkgKiBub3JtYWw7CiAgICAvLyBwb3NpdGlvbiBpbiB2aWV3IHNwYWNlIChhcyBzZWVuIGZyb20gY2FtZXJhKQogICAgdmVjNCB2aWV3X3BvcyA9IHZpZXcgKiBwb3NpdGlvbl93b3JsZDsKICAgIC8vIHBvc2l0aW9uIGluIGNsaXAgc3BhY2UgKHcvIGRlcHRoKQogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uICogdmlld19wb3M7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKICAgIC8vIGRpcmVjdGlvbiB0byBsaWdodAogICAgb19saWdodGRpciA9IG5vcm1hbGl6ZSh2aWV3KnZlYzQobGlnaHRwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXo7CiAgICAvLyBkaXJlY3Rpb24gdG8gY2FtZXJhCiAgICAvLyBUaGlzIGlzIGVxdWl2YWxlbnQgdG8KICAgIC8vIG5vcm1hbGl6ZSh2aWV3KnZlYzQoZXllcG9zaXRpb24sIDEuMCkgLSB2aWV3X3BvcykueHl6CiAgICAvLyAoYnkgZGVmaW5pdGlvbiBgdmlldyAqIGV5ZXBvc2l0aW9uID0gMGApCiAgICBvX2NhbWRpciA9IG5vcm1hbGl6ZSgtdmlld19wb3MpLnh5ejsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICAvLyBnZXRfKiBnZXRzIHRoZSBnbG9iYWwgaW5wdXRzICh1bmlmb3JtLCBzYW1wbGVyLCBwb3NpdGlvbiBhcnJheSkKICAgIC8vIHRob3NlIGZ1bmN0aW9ucyB3aWxsIGdldCBpbnNlcnRlZCBieSB0aGUgc2hhZGVyIGNyZWF0aW9uIHBpcGVsaW5lCiAgICB2ZWMzIHZlcnRleF9wb3NpdGlvbiA9IHRvdmVjMyhnZXRfcG9zaXRpb24oKSk7CiAgICBpZiAoaXNuYW4odmVydGV4X3Bvc2l0aW9uLnopKSB7CiAgICAgICAgdmVydGV4X3Bvc2l0aW9uLnogPSAwLjA7CiAgICB9CiAgICB2ZWM0IHBvc2l0aW9uX3dvcmxkID0gbW9kZWwgKiB2ZWM0KHZlcnRleF9wb3NpdGlvbiwgMSk7CgogICAgcmVuZGVyKHBvc2l0aW9uX3dvcmxkLCBnZXRfbm9ybWFscygpLCB2aWV3LCBwcm9qZWN0aW9uLCBnZXRfbGlnaHRwb3NpdGlvbigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXYgPSB2ZWMyKDEuMCAtIGZyYWdfdXYueSwgZnJhZ191di54KTsKICAgIGZyYWdfY29sb3IgPSB2ZXJ0ZXhfY29sb3IoZ2V0X2NvbG9yKCksIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9WZXJ0ZXhJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaFN0jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB2ZWMyIGNvbG9ycmFuZ2U7CnZlYzIgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KCmluIHZlYzIgZnJhZ191djsKaW4gdmVjNCBmcmFnX2NvbG9yOwpmbGF0IGluIGludCBzYW1wbGVfZnJhZ19jb2xvcjsKCmluIHZlYzMgb19ub3JtYWw7CmluIHZlYzMgb19jYW1kaXI7CmluIHZlYzMgb19saWdodGRpcjsKCnZlYzMgYmxpbm5waG9uZyh2ZWMzIE4sIHZlYzMgViwgdmVjMyBMLCB2ZWMzIGNvbG9yKXsKICAgIGZsb2F0IGRpZmZfY29lZmYgPSBtYXgoZG90KEwsIE4pLCAwLjApOwoKICAgIC8vIHNwZWN1bGFyIGNvZWZmaWNpZW50CiAgICB2ZWMzIEggPSBub3JtYWxpemUoTCArIFYpOwoKICAgIGZsb2F0IHNwZWNfY29lZmYgPSBwb3cobWF4KGRvdChILCBOKSwgMC4wKSwgZ2V0X3NoaW5pbmVzcygpKTsKICAgIGlmIChkaWZmX2NvZWZmIDw9IDAuMCkKICAgICAgICBzcGVjX2NvZWZmID0gMC4wOwogICAgLy8gZmluYWwgbGlnaHRpbmcgbW9kZWwKICAgIHJldHVybiB2ZWMzKAogICAgICAgIGdldF9kaWZmdXNlKCkgKiBkaWZmX2NvZWZmICogY29sb3IgKwogICAgICAgIGdldF9zcGVjdWxhcigpICogc3BlY19jb2VmZgogICAgKTsKfQoKdmVjNCBnZXRfY29sb3IodmVjMyBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiB2ZWM0KGNvbG9yLCAxLjApOwp9Cgp2ZWM0IGdldF9jb2xvcih2ZWM0IGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGNvbG9yOwp9Cgp2ZWM0IGdldF9jb2xvcihib29sIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGZyYWdfY29sb3I7ICAvLyBjb2xvciBub3QgaW4gdW5pZm9ybQp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X3BhdHRlcm4oKSkgewogICAgICAgIHZlYzIgc2l6ZSA9IHZlYzIodGV4dHVyZVNpemUoY29sb3IsIDApKTsKICAgICAgICB2ZWMyIHBvcyA9IGdsX0ZyYWdDb29yZC54eTsKICAgICAgICByZXR1cm4gdGV4ZWxGZXRjaChjb2xvciwgaXZlYzIobW9kKHBvcy54LCBzaXplLngpLCBtb2QocG9zLnksIHNpemUueSkpLCAwKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRleHR1cmUoY29sb3IsIHV2KTsKICAgIH0KfQoKZmxvYXQgX25vcm1hbGl6ZShmbG9hdCB2YWwsIGZsb2F0IGZyb20sIGZsb2F0IHRvKXtyZXR1cm4gKHZhbC1mcm9tKSAvICh0byAtIGZyb20pO30KCnZlYzQgZ2V0X2NvbG9yX2Zyb21fY21hcChmbG9hdCB2YWx1ZSwgc2FtcGxlcjJEIGNvbG9yX21hcCwgdmVjMiBjb2xvcnJhbmdlKSB7CiAgICBmbG9hdCBjbWluID0gY29sb3JyYW5nZS54OwogICAgZmxvYXQgY21heCA9IGNvbG9ycmFuZ2UueTsKICAgIGlmICh2YWx1ZSA8PSBjbWF4ICYmIHZhbHVlID49IGNtaW4pIHsKICAgICAgICAvLyBpbiB2YWx1ZSByYW5nZSwgY29udGludWUhCiAgICB9IGVsc2UgaWYgKHZhbHVlIDwgY21pbikgewogICAgICAgIHJldHVybiBnZXRfbG93Y2xpcCgpOwogICAgfSBlbHNlIGlmICh2YWx1ZSA+IGNtYXgpIHsKICAgICAgICByZXR1cm4gZ2V0X2hpZ2hjbGlwKCk7CiAgICB9IGVsc2UgewogICAgICAgIC8vIGlzbmFuIGlzIGJyb2tlbiAob2YgY291cnNlKSAtLi0KICAgICAgICAvLyBzbyBpZiBvdXRzaWRlIHZhbHVlIHJhbmdlIGFuZCBub3Qgc21hbGxlci9iaWdnZXIgbWluL21heCB3ZSBhc3N1bWUgTmFOCiAgICAgICAgcmV0dXJuIGdldF9uYW5fY29sb3IoKTsKICAgIH0KICAgIGZsb2F0IGkwMSA9IGNsYW1wKCh2YWx1ZSAtIGNtaW4pIC8gKGNtYXggLSBjbWluKSwgMC4wLCAxLjApOwogICAgLy8gMS8wIGNvcnJlc3BvbmRzIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGNvbG9ybWFwLCBzbyB0byBwcm9wZXJseSBpbnRlcnBvbGF0ZQogICAgLy8gYmV0d2VlbiB0aGUgY29sb3JzLCB3ZSBuZWVkIHRvIHNjYWxlIGl0LCBzbyB0aGF0IHRoZSBlbmRzIGFyZSBhdCAxIC0gKHN0ZXBzaXplLzIpIGFuZCAwKyhzdGVwc2l6ZS8yKS4KICAgIGZsb2F0IHN0ZXBzaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoY29sb3JfbWFwLCAwKSk7CiAgICBpMDEgPSAoMS4wIC0gc3RlcHNpemUpICogaTAxICsgMC41ICogc3RlcHNpemU7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvcl9tYXAsIHZlYzIoaTAxLCAwLjApKTsKfQoKdmVjNCBnZXRfY29sb3IoYm9vbCBjb2xvciwgdmVjMiB1diwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgaWYgKGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKSkgewogICAgICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKGZyYWdfY29sb3IueCwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZnJhZ19jb2xvcjsKICAgIH0KfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIHZhbHVlcywgdmVjMiB1diwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgZmxvYXQgdmFsdWUgPSB0ZXh0dXJlKHZhbHVlcywgdXYpLng7CiAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcCh2YWx1ZSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yLCB1dik7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICB2ZWM0IHJlYWxfY29sb3IgPSBnZXRfY29sb3IodW5pZm9ybV9jb2xvciwgZnJhZ191diwgZ2V0X2NvbG9ycmFuZ2UoKSwgY29sb3JtYXApOwogICAgdmVjMyBzaGFkZWRfY29sb3IgPSByZWFsX2NvbG9yLnJnYjsKCiAgICBpZihnZXRfc2hhZGluZygpKXsKICAgICAgICB2ZWMzIEwgPSBub3JtYWxpemUob19saWdodGRpcik7CiAgICAgICAgdmVjMyBOID0gbm9ybWFsaXplKG9fbm9ybWFsKTsKICAgICAgICB2ZWMzIGxpZ2h0MSA9IGJsaW5ucGhvbmcoTiwgb19jYW1kaXIsIEwsIHJlYWxfY29sb3IucmdiKTsKICAgICAgICB2ZWMzIGxpZ2h0MiA9IGJsaW5ucGhvbmcoTiwgb19jYW1kaXIsIC1MLCByZWFsX2NvbG9yLnJnYik7CiAgICAgICAgc2hhZGVkX2NvbG9yID0gZ2V0X2FtYmllbnQoKSAqIHJlYWxfY29sb3IucmdiICsgbGlnaHQxICsgZ2V0X2JhY2tsaWdodCgpICogbGlnaHQyOwogICAgfQoKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKHJlYWxfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAocmVhbF9jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gdmVjNChzaGFkZWRfY29sb3IsIHJlYWxfY29sb3IuYSk7Cn0Kr2JhY2tncm91bmRjb2xvcscUaLMyMDcwNTQwNDM1NjU1MjE0MzE2qXBpeGVsYXJlYccUaLMzMTU4NDQxMTQzODM5MDc4MTQ0pmNhbWVyYccUaLM0OTEwMDM5NTE3MTg4MDM4MDQ1pHV1aWS0MTEyNDEyNzEwMDk4MjI5MjEwNjGrY2FtM2Rfc3RhdGXAqmNsZWFyc2NlbmXHFWi0MTI4NTc1MTY1NDQ1MjMzNTc5NDmoY2hpbGRyZW6QszI2MDIyMzMyMzQzMDY4NTcyNzHHFGizOTU1Nzc3NTgyMzgyMjI3MjkyNdsAEau1KCgpID0+IHsKICAgICAgICAgICAgaWYgKCF3aW5kb3cuSlNTRVJWRV9JTVBPUlRTKSB7CiAgICAgICAgICAgICAgICB3aW5kb3cuSlNTRVJWRV9JTVBPUlRTID0ge307CiAgICAgICAgICAgIH0KICAgICAgICAgICAgSlNTRVJWRV9JTVBPUlRTWydjYzRjNmFhNmExZjA2YTFiNTAxM2JjYTAxNzAyZjM2YTE4NGMwNDM5LXdnbG1ha2llLmpzJ10gPSBgZGF0YTphcHBsaWNhdGlvbi9qYXZhc2NyaXB0O2Jhc2U2NCxMeThnWkdWdWJ5MW1iWFF0YVdkdWIzSmxMV1pwYkdVS0x5OGdaR1Z1Ynkxc2FXNTBMV2xuYm05eVpTMW1hV3hsQ2k4dklGUm9hWE1nWTI5a1pTQjNZWE1nWW5WdVpHeGxaQ0IxYzJsdVp5QmdaR1Z1YnlCaWRXNWtiR1ZnSUdGdVpDQnBkQ2R6SUc1dmRDQnlaV052YlcxbGJtUmxaQ0IwYnlCbFpHbDBJR2wwSUcxaGJuVmhiR3g1Q2dwMllYSWdZMkVnUFNBaU1UTTJJaXdnUjNrZ1BTQjdDaUFnSUNCTVJVWlVPaUF3TEFvZ0lDQWdUVWxFUkV4Rk9pQXhMQW9nSUNBZ1VrbEhTRlE2SURJc0NpQWdJQ0JTVDFSQlZFVTZJREFzQ2lBZ0lDQkVUMHhNV1RvZ01Td0tJQ0FnSUZCQlRqb2dNZ3A5TENCV2VTQTlJSHNLSUNBZ0lGSlBWRUZVUlRvZ01Dd0tJQ0FnSUZCQlRqb2dNU3dLSUNBZ0lFUlBURXhaWDFCQlRqb2dNaXdLSUNBZ0lFUlBURXhaWDFKUFZFRlVSVG9nTXdwOUxDQjFkU0E5SURBc0lIUnNJRDBnTVN3Z1pIVWdQU0F5TENCWGVTQTlJRE1zSUhGNUlEMGdNQ3dnU0dNZ1BTQXhMQ0JtZFNBOUlESXNJR2x5SUQwZ015d2dRV2tnUFNBd0xDQnBkQ0E5SURFc0lFTnBJRDBnTWl3Z2EyTWdQU0F4TENCWWVTQTlJRElzSUhadUlEMGdNQ3dnYzNJZ1BTQXhMQ0J1YkNBOUlESXNJR2xzSUQwZ015d2djbXdnUFNBMExDQndkU0E5SURVc0lGOXBJRDBnTVRBd0xDQnRkU0E5SURFd01Td2daM1VnUFNBeE1ESXNJSE5zSUQwZ01UQXpMQ0J2YkNBOUlERXdOQ3dnZUhVZ1BTQXlNREFzSUhsMUlEMGdNakF4TENCMmRTQTlJREl3TWl3Z1gzVWdQU0F5TURNc0lFZGpJRDBnTWpBMExDQldZeUE5SURJd05Td2dUWFVnUFNBeU1EWXNJR0oxSUQwZ01qQTNMQ0IzZFNBOUlESXdPQ3dnVTNVZ1BTQXlNRGtzSUZSMUlEMGdNakV3TENCRmRTQTlJREFzSUVGMUlEMGdNU3dnUTNVZ1BTQXlMQ0JsWVNBOUlETXNJRXgxSUQwZ05Dd2dVblVnUFNBMUxDQlFkU0E5SURZc0lFbDFJRDBnTnl3Z1ZuTWdQU0F3TENCRWRTQTlJREVzSUVaMUlEMGdNaXdnWDI0Z1BTQXdMQ0JPZFNBOUlERXNJRUoxSUQwZ01pd2dlblVnUFNBekxDQlZkU0E5SURRc0lFOTFJRDBnTlN3Z2FHRWdQU0F6TURBc0lFSnBJRDBnTXpBeExDQjZhU0E5SURNd01pd2dSSE1nUFNBek1ETXNJRVp6SUQwZ016QTBMQ0JRY2lBOUlETXdOaXdnVjNNZ1BTQXpNRGNzSUU1eklEMGdNV1V6TENCMmRDQTlJREV3TURFc0lFSnpJRDBnTVRBd01pd2djblFnUFNBeE1EQXpMQ0IwWVNBOUlERXdNRFFzSUVwNUlEMGdNVEF3TkN3Z2JtRWdQU0F4TURBMUxDQlplU0E5SURFd01EVXNJSFIwSUQwZ01UQXdOaXdnVjJNZ1BTQXhNREEzTENCYWVTQTlJREV3TURjc0lGVnBJRDBnTVRBd09Dd2dKSGtnUFNBeE1EQTRMQ0J5YmlBOUlERXdNRGtzSUVoMUlEMGdNVEF4TUN3Z2EzVWdQU0F4TURFeExDQmpjaUE5SURFd01USXNJRWQxSUQwZ01UQXhNeXdnVUhNZ1BTQXhNREUwTENCdWJpQTlJREV3TVRVc0lHdHVJRDBnTVRBeE5pd2dWblVnUFNBeE1ERTNMQ0JYZFNBOUlERXdNVGdzSUhGMUlEMGdNVEF4T1N3Z1ZHa2dQU0F4TURJd0xDQllkU0E5SURFd01qRXNJRWR1SUQwZ01UQXlNaXdnWTNRZ1BTQXhNREl6TENCS2RTQTlJREV3TWpRc0lGbDFJRDBnTVRBeU5Td2dWbTRnUFNBeE1ESTJMQ0JNYVNBOUlERXdNamNzSUZwMUlEMGdNVEF5T0N3Z0pIVWdQU0F4TURJNUxDQnFkU0E5SURFd016QXNJRkYxSUQwZ01UQXpNU3dnUzNVZ1BTQXhNRE15TENCbFpDQTlJREV3TXpNc0lHRnNJRDBnTXpNM056WXNJR3hzSUQwZ016TTNOemNzSUdOc0lEMGdNek0zTnpnc0lHaHNJRDBnTXpNM056a3NJSFZzSUQwZ016VTROREFzSUdSc0lEMGdNelU0TkRFc0lHWnNJRDBnTXpVNE5ESXNJSEJzSUQwZ016VTRORE1zSUhSa0lEMGdNell4T1RZc0lHMXNJRDBnTXpjME9USXNJR2RzSUQwZ016YzBPVFlzSUc1a0lEMGdNemM0TURnc0lHbGtJRDBnTXpjNE1Ea3NJSEprSUQwZ016YzRNVEFzSUhOa0lEMGdNemM0TVRFc0lHOWtJRDBnTXpjNE1USXNJR0ZrSUQwZ016YzRNVE1zSUd4a0lEMGdNemM0TVRRc0lHTmtJRDBnTXpjNE1UVXNJR2hrSUQwZ016YzRNVFlzSUhWa0lEMGdNemM0TVRjc0lHUmtJRDBnTXpjNE1UZ3NJR1prSUQwZ016YzRNVGtzSUhCa0lEMGdNemM0TWpBc0lHMWtJRDBnTXpjNE1qRXNJR2RrSUQwZ016WTBPVElzSUhoa0lEMGdNemM0TkRBc0lIbGtJRDBnTXpjNE5ERXNJSFprSUQwZ016YzRORElzSUY5a0lEMGdNemM0TkRNc0lFMWtJRDBnTXpjNE5EUXNJR0prSUQwZ016YzRORFVzSUhka0lEMGdNemM0TkRZc0lGTmtJRDBnTXpjNE5EY3NJRlJrSUQwZ016YzRORGdzSUVWa0lEMGdNemM0TkRrc0lFRmtJRDBnTXpjNE5UQXNJRU5rSUQwZ016YzROVEVzSUV4a0lEMGdNemM0TlRJc0lGSmtJRDBnTXpjNE5UTXNJRkJrSUQwZ01qSXdNQ3dnU1dRZ1BTQXlNakF4TENCRVpDQTlJREl5TURJc0lIcHpJRDBnTWpNd01Dd2dWWE1nUFNBeU16QXhMQ0I1YnlBOUlESXpNRElzSUUxcElEMGdNalF3TUN3Z1lta2dQU0F5TkRBeExDQlBjeUE5SURJME1ESXNJSFZoSUQwZ01qVXdNQ3dnY1dNZ1BTQXlOVEF4TENCR1pDQTlJREFzSUdwNUlEMGdNU3dnVVhrZ1BTQXlMQ0JPZENBOUlETmxNeXdnVDJrZ1BTQXpNREF4TENCT1pDQTlJRE15TURBc0lFSmtJRDBnTXpJd01Td2dTR2tnUFNBd0xDQjZaQ0E5SURFc0lFdDVJRDBnTUN3Z2RtOGdQU0EzTmpnd0xDQmxNQ0E5SURjMk9ERXNJSFF3SUQwZ056WTRNaXdnYmpBZ1BTQTNOamd6TENCcE1DQTlJRE0wTURVMUxDQnlNQ0E5SURNME1EVTJMQ0J6TUNBOUlEVXpPRFlzSUc4d0lEMGdOVEV5TENCaE1DQTlJRFV4TXl3Z2JEQWdQU0ExTVRRc0lHTXdJRDBnTlRFMUxDQm9NQ0E5SURVeE5pd2dkVEFnUFNBMU1UY3NJR1F3SUQwZ05URTRMQ0JWWkNBOUlEVXhPU3dnYUhJZ1BTQXpOVEEwTkN3Z2RYSWdQU0F6TlRBME9Dd2daakFnUFNBek5UQTBNQ3dnY0RBZ1BTQXpOVEEwTlN3Z2JUQWdQU0F6TlRBME9Td2daekFnUFNBek5UQTBNU3dnZURBZ1BTQXpOVEEwTml3Z2VUQWdQU0F6TlRBMU1Dd2dkakFnUFNBek5UQTBNaXdnWHpBZ1BTQWlNVEF3SWl3Z2VHd2dQU0FpTXpBd0lHVnpJaXdnUlc0Z1BTQmpiR0Z6Y3lCN0NpQWdJQ0JoWkdSRmRtVnVkRXhwYzNSbGJtVnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5c2FYTjBaVzVsY25NZ1BUMDlJSFp2YVdRZ01DQW1KaUFvZEdocGN5NWZiR2x6ZEdWdVpYSnpJRDBnZTMwcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVmYkdsemRHVnVaWEp6T3dvZ0lDQWdJQ0FnSUc1YlpWMGdQVDA5SUhadmFXUWdNQ0FtSmlBb2JsdGxYU0E5SUZ0ZEtTd2dibHRsWFM1cGJtUmxlRTltS0hRcElEMDlQU0F0TVNBbUppQnVXMlZkTG5CMWMyZ29kQ2s3Q2lBZ0lDQjlDaUFnSUNCb1lYTkZkbVZ1ZEV4cGMzUmxibVZ5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmYkdsemRHVnVaWEp6SUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDJ4cGMzUmxibVZ5Y3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmx0bFhTQWhQVDBnZG05cFpDQXdJQ1ltSUc1YlpWMHVhVzVrWlhoUFppaDBLU0FoUFQwZ0xURTdDaUFnSUNCOUNpQWdJQ0J5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmYkdsemRHVnVaWEp6SUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMnhwYzNSbGJtVnljMXRsWFRzS0lDQWdJQ0FnSUNCcFppQW9hU0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdhUzVwYm1SbGVFOW1LSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlJQ0U5UFNBdE1TQW1KaUJwTG5Od2JHbGpaU2h5TENBeEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JrYVhOd1lYUmphRVYyWlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmYkdsemRHVnVaWEp6SUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYMnhwYzNSbGJtVnljMXRsTG5SNWNHVmRPd29nSUNBZ0lDQWdJR2xtSUNodUlDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNTBZWEpuWlhRZ1BTQjBhR2x6T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHNHVjMnhwWTJVb01DazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCcExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bHBXM0pkTG1OaGJHd29kR2hwY3l3Z1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUdVdWRHRnlaMlYwSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBzSUhCMElEMGdXMTA3Q21admNpaHNaWFFnY3lBOUlEQTdJSE1nUENBeU5UWTdJSE1yS3lsd2RGdHpYU0E5SUNoeklEd2dNVFlnUHlBaU1DSWdPaUFpSWlrZ0t5QnpMblJ2VTNSeWFXNW5LREUyS1RzS2RtRnlJRlp5SUQwZ01USXpORFUyTnl3Z1YyNGdQU0JOWVhSb0xsQkpJQzhnTVRnd0xDQmtjaUE5SURFNE1DQXZJRTFoZEdndVVFazdDbVoxYm1OMGFXOXVJRVYwS0NrZ2V3b2dJQ0FnYkdWMElITWdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dOREk1TkRrMk56STVOU0I4SURBc0lHVWdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dOREk1TkRrMk56STVOU0I4SURBc0lIUWdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dOREk1TkRrMk56STVOU0I4SURBc0lHNGdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dOREk1TkRrMk56STVOU0I4SURBN0NpQWdJQ0J5WlhSMWNtNGdLSEIwVzNNZ0ppQXlOVFZkSUNzZ2NIUmJjeUErUGlBNElDWWdNalUxWFNBcklIQjBXM01nUGo0Z01UWWdKaUF5TlRWZElDc2djSFJiY3lBK1BpQXlOQ0FtSURJMU5WMGdLeUFpTFNJZ0t5QndkRnRsSUNZZ01qVTFYU0FySUhCMFcyVWdQajRnT0NBbUlESTFOVjBnS3lBaUxTSWdLeUJ3ZEZ0bElENCtJREUySUNZZ01UVWdmQ0EyTkYwZ0t5QndkRnRsSUQ0K0lESTBJQ1lnTWpVMVhTQXJJQ0l0SWlBcklIQjBXM1FnSmlBMk15QjhJREV5T0YwZ0t5QndkRnQwSUQ0K0lEZ2dKaUF5TlRWZElDc2dJaTBpSUNzZ2NIUmJkQ0ErUGlBeE5pQW1JREkxTlYwZ0t5QndkRnQwSUQ0K0lESTBJQ1lnTWpVMVhTQXJJSEIwVzI0Z0ppQXlOVFZkSUNzZ2NIUmJiaUErUGlBNElDWWdNalUxWFNBcklIQjBXMjRnUGo0Z01UWWdKaUF5TlRWZElDc2djSFJiYmlBK1BpQXlOQ0FtSURJMU5WMHBMblJ2VlhCd1pYSkRZWE5sS0NrN0NuMEtablZ1WTNScGIyNGdiWFFvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhNcEtUc0tmUXBtZFc1amRHbHZiaUJrWVNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z0tITWdKU0JsSUNzZ1pTa2dKU0JsT3dwOUNtWjFibU4wYVc5dUlFOWtLSE1zSUdVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUhKbGRIVnliaUJ1SUNzZ0tITWdMU0JsS1NBcUlDaHBJQzBnYmlrZ0x5QW9kQ0F0SUdVcE93cDlDbVoxYm1OMGFXOXVJRWhrS0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ0U5UFNCbElEOGdLSFFnTFNCektTQXZJQ2hsSUMwZ2N5a2dPaUF3T3dwOUNtWjFibU4wYVc5dUlHOXlLSE1zSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlBb01TQXRJSFFwSUNvZ2N5QXJJSFFnS2lCbE93cDlDbVoxYm1OMGFXOXVJR3RrS0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUhKbGRIVnliaUJ2Y2loekxDQmxMQ0F4SUMwZ1RXRjBhQzVsZUhBb0xYUWdLaUJ1S1NrN0NuMEtablZ1WTNScGIyNGdSMlFvY3l3Z1pTQTlJREVwSUhzS0lDQWdJSEpsZEhWeWJpQmxJQzBnVFdGMGFDNWhZbk1vWkdFb2N5d2daU0FxSURJcElDMGdaU2s3Q24wS1puVnVZM1JwYjI0Z1ZtUW9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUhNZ1BEMGdaU0EvSURBZ09pQnpJRDQ5SUhRZ1B5QXhJRG9nS0hNZ1BTQW9jeUF0SUdVcElDOGdLSFFnTFNCbEtTd2djeUFxSUhNZ0tpQW9NeUF0SURJZ0tpQnpLU2s3Q24wS1puVnVZM1JwYjI0Z1YyUW9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUhNZ1BEMGdaU0EvSURBZ09pQnpJRDQ5SUhRZ1B5QXhJRG9nS0hNZ1BTQW9jeUF0SUdVcElDOGdLSFFnTFNCbEtTd2djeUFxSUhNZ0tpQnpJQ29nS0hNZ0tpQW9jeUFxSURZZ0xTQXhOU2tnS3lBeE1Da3BPd3A5Q21aMWJtTjBhVzl1SUhGa0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ3NnVFdGMGFDNW1iRzl2Y2loTllYUm9MbkpoYm1SdmJTZ3BJQ29nS0dVZ0xTQnpJQ3NnTVNrcE93cDlDbVoxYm1OMGFXOXVJRmhrS0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCeklDc2dUV0YwYUM1eVlXNWtiMjBvS1NBcUlDaGxJQzBnY3lrN0NuMEtablZ1WTNScGIyNGdTbVFvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nS2lBb0xqVWdMU0JOWVhSb0xuSmhibVJ2YlNncEtUc0tmUXBtZFc1amRHbHZiaUJaWkNoektTQjdDaUFnSUNCeVpYUjFjbTRnY3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hXY2lBOUlITWdKU0F5TVRRM05EZ3pOalEzS1N3Z1ZuSWdQU0JXY2lBcUlERTJPREEzSUNVZ01qRTBOelE0TXpZME55d2dLRlp5SUMwZ01Ta2dMeUF5TVRRM05EZ3pOalEyT3dwOUNtWjFibU4wYVc5dUlGcGtLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ29nVjI0N0NuMEtablZ1WTNScGIyNGdKR1FvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nS2lCa2Nqc0tmUXBtZFc1amRHbHZiaUJwWVNoektTQjdDaUFnSUNCeVpYUjFjbTRnS0hNZ0ppQnpJQzBnTVNrZ1BUMDlJREFnSmlZZ2N5QWhQVDBnTURzS2ZRcG1kVzVqZEdsdmJpQllZeWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdUV0YwYUM1d2IzY29NaXdnVFdGMGFDNWpaV2xzS0UxaGRHZ3ViRzluS0hNcElDOGdUV0YwYUM1TVRqSXBLVHNLZlFwbWRXNWpkR2x2YmlCS1l5aHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1RXRjBhQzV3YjNjb01pd2dUV0YwYUM1bWJHOXZjaWhOWVhSb0xteHZaeWh6S1NBdklFMWhkR2d1VEU0eUtTazdDbjBLWm5WdVkzUnBiMjRnYW1Rb2N5d2daU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdiR1YwSUhJZ1BTQk5ZWFJvTG1OdmN5d2dieUE5SUUxaGRHZ3VjMmx1TENCaElEMGdjaWgwSUM4Z01pa3NJR3dnUFNCdktIUWdMeUF5S1N3Z1l5QTlJSElvS0dVZ0t5QnVLU0F2SURJcExDQm9JRDBnYnlnb1pTQXJJRzRwSUM4Z01pa3NJSFVnUFNCeUtDaGxJQzBnYmlrZ0x5QXlLU3dnWkNBOUlHOG9LR1VnTFNCdUtTQXZJRElwTENCbUlEMGdjaWdvYmlBdElHVXBJQzhnTWlrc0lHMGdQU0J2S0NodUlDMGdaU2tnTHlBeUtUc0tJQ0FnSUhOM2FYUmphQ2hwS1hzS0lDQWdJQ0FnSUNCallYTmxJQ0pZV1ZnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0J6TG5ObGRDaGhJQ29nYUN3Z2JDQXFJSFVzSUd3Z0tpQmtMQ0JoSUNvZ1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ0lsbGFXU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVjMlYwS0d3Z0tpQmtMQ0JoSUNvZ2FDd2diQ0FxSUhVc0lHRWdLaUJqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0FpV2xoYUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1elpYUW9iQ0FxSUhVc0lHd2dLaUJrTENCaElDb2dhQ3dnWVNBcUlHTXBPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElDSllXbGdpT2dvZ0lDQWdJQ0FnSUNBZ0lDQnpMbk5sZENoaElDb2dhQ3dnYkNBcUlHMHNJR3dnS2lCbUxDQmhJQ29nWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnSWxsWVdTSTZDaUFnSUNBZ0lDQWdJQ0FnSUhNdWMyVjBLR3dnS2lCbUxDQmhJQ29nYUN3Z2JDQXFJRzBzSUdFZ0tpQmpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWTJGelpTQWlXbGxhSWpvS0lDQWdJQ0FnSUNBZ0lDQWdjeTV6WlhRb2JDQXFJRzBzSUd3Z0tpQm1MQ0JoSUNvZ2FDd2dZU0FxSUdNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRHaFZkR2xzY3pvZ0xuTmxkRkYxWVhSbGNtNXBiMjVHY205dFVISnZjR1Z5UlhWc1pYSW9LU0JsYm1OdmRXNTBaWEpsWkNCaGJpQjFibXR1YjNkdUlHOXlaR1Z5T2lBaUlDc2dhU2s3Q2lBZ0lDQjlDbjBLZG1GeUlFMHdJRDBnVDJKcVpXTjBMbVp5WldWNlpTaDdDaUFnSUNCZlgzQnliM1J2WDE4NklHNTFiR3dzQ2lBZ0lDQkVSVWN5VWtGRU9pQlhiaXdLSUNBZ0lGSkJSREpFUlVjNklHUnlMQW9nSUNBZ1oyVnVaWEpoZEdWVlZVbEVPaUJGZEN3S0lDQWdJR05zWVcxd09pQnRkQ3dLSUNBZ0lHVjFZMnhwWkdWaGJrMXZaSFZzYnpvZ1pHRXNDaUFnSUNCdFlYQk1hVzVsWVhJNklFOWtMQW9nSUNBZ2FXNTJaWEp6WlV4bGNuQTZJRWhrTEFvZ0lDQWdiR1Z5Y0RvZ2IzSXNDaUFnSUNCa1lXMXdPaUJyWkN3S0lDQWdJSEJwYm1kd2IyNW5PaUJIWkN3S0lDQWdJSE50YjI5MGFITjBaWEE2SUZaa0xBb2dJQ0FnYzIxdmIzUm9aWEp6ZEdWd09pQlhaQ3dLSUNBZ0lISmhibVJKYm5RNklIRmtMQW9nSUNBZ2NtRnVaRVpzYjJGME9pQllaQ3dLSUNBZ0lISmhibVJHYkc5aGRGTndjbVZoWkRvZ1NtUXNDaUFnSUNCelpXVmtaV1JTWVc1a2IyMDZJRmxrTEFvZ0lDQWdaR1ZuVkc5U1lXUTZJRnBrTEFvZ0lDQWdjbUZrVkc5RVpXYzZJQ1JrTEFvZ0lDQWdhWE5RYjNkbGNrOW1WSGR2T2lCcFlTd0tJQ0FnSUdObGFXeFFiM2RsY2s5bVZIZHZPaUJZWXl3S0lDQWdJR1pzYjI5eVVHOTNaWEpQWmxSM2J6b2dTbU1zQ2lBZ0lDQnpaWFJSZFdGMFpYSnVhVzl1Um5KdmJWQnliM0JsY2tWMWJHVnlPaUJxWkFwOUtTd2dXQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBd0xDQjBJRDBnTUNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3k1NUlEMGdkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQjNhV1IwYUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSGRwWkhSb0tHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuZ2dQU0JsT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJR2hsYVdkb2RDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NU93b2dJQ0FnZlFvZ0lDQWdjMlYwSUdobGFXZG9kQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTU1SUQwZ1pUc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1VzSUhSb2FYTXVlU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsekxua2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NUlEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVOdmJYQnZibVZ1ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURBNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmdnUFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVlU0E5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpYVc1a1pYZ2dhWE1nYjNWMElHOW1JSEpoYm1kbE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyOXRjRzl1Wlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZzdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5rN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ltbHVaR1Y0SUdseklHOTFkQ0J2WmlCeVlXNW5aVG9nSWlBcklHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2loMGFHbHpMbmdzSUhSb2FYTXVlU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NExDQjBhR2x6TG5rZ1BTQmxMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUNFOVBTQjJiMmxrSURBZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXlPaUF1WVdSa0tDa2dibTkzSUc5dWJIa2dZV05qWlhCMGN5QnZibVVnWVhKbmRXMWxiblF1SUZWelpTQXVZV1JrVm1WamRHOXljeWdnWVN3Z1lpQXBJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVZV1JrVm1WamRHOXljeWhsTENCMEtTa2dPaUFvZEdocGN5NTRJQ3M5SUdVdWVDd2dkR2hwY3k1NUlDczlJR1V1ZVN3Z2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCaFpHUlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0t6MGdaU3dnZEdocGN5NTVJQ3M5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDc2dkQzU0TENCMGFHbHpMbmtnUFNCbExua2dLeUIwTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUlRZMkZzWldSV1pXTjBiM0lvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0t6MGdaUzU0SUNvZ2RDd2dkR2hwY3k1NUlDczlJR1V1ZVNBcUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0lvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ0U5UFNCMmIybGtJREFnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJeU9pQXVjM1ZpS0NrZ2JtOTNJRzl1YkhrZ1lXTmpaWEIwY3lCdmJtVWdZWEpuZFcxbGJuUXVJRlZ6WlNBdWMzVmlWbVZqZEc5eWN5Z2dZU3dnWWlBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWMzVmlWbVZqZEc5eWN5aGxMQ0IwS1NrZ09pQW9kR2hwY3k1NElDMDlJR1V1ZUN3Z2RHaHBjeTU1SUMwOUlHVXVlU3dnZEdocGN5azdDaUFnSUNCOUNpQWdJQ0J6ZFdKVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnTFQwZ1pTd2dkR2hwY3k1NUlDMDlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZFdKV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUMwZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0xTQjBMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FxUFNCbExuZ3NJSFJvYVhNdWVTQXFQU0JsTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FxUFNCbExDQjBhR2x6TG5rZ0tqMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwZG1sa1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXZQU0JsTG5nc0lIUm9hWE11ZVNBdlBTQmxMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYVhacFpHVlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VTJOaGJHRnlLREVnTHlCbEtUc0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TXlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCcFd6QmRJQ29nZENBcklHbGJNMTBnS2lCdUlDc2dhVnMyWFN3Z2RHaHBjeTU1SUQwZ2FWc3hYU0FxSUhRZ0t5QnBXelJkSUNvZ2JpQXJJR2xiTjEwc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGFXNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMXBiaWgwYUdsekxuZ3NJR1V1ZUNrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldsdUtIUm9hWE11ZVN3Z1pTNTVLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldGNEtIUm9hWE11ZUN3Z1pTNTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTVMQ0JsTG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xaGVDaGxMbmdzSUUxaGRHZ3ViV2x1S0hRdWVDd2dkR2hwY3k1NEtTa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXRjRLR1V1ZVN3Z1RXRjBhQzV0YVc0b2RDNTVMQ0IwYUdsekxua3BLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zWVcxd1UyTmhiR0Z5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1dFlYZ29aU3dnVFdGMGFDNXRhVzRvZEN3Z2RHaHBjeTU0S1Nrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhSb2FYTXVlU2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQk1aVzVuZEdnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhacFpHVlRZMkZzWVhJb2JpQjhmQ0F4S1M1dGRXeDBhWEJzZVZOallXeGhjaWhOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQnVLU2twT3dvZ0lDQWdmUW9nSUNBZ1pteHZiM0lvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyVnBiQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNWpaV2xzS0hSb2FYTXVlQ2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MWJtUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWNtOTFibVFvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXliM1Z1WkNoMGFHbHpMbmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MWJtUlViMXBsY204b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlIUm9hWE11ZUNBOElEQWdQeUJOWVhSb0xtTmxhV3dvZEdocGN5NTRLU0E2SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ2RHaHBjeTU1SUR3Z01DQS9JRTFoZEdndVkyVnBiQ2gwYUdsekxua3BJRG9nVFdGMGFDNW1iRzl2Y2loMGFHbHpMbmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYm1WbllYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0F0ZEdocGN5NTRMQ0IwYUdsekxua2dQU0F0ZEdocGN5NTVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaRzkwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNvZ1pTNTRJQ3NnZEdocGN5NTVJQ29nWlM1NU93b2dJQ0FnZlFvZ0lDQWdZM0p2YzNNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tpQmxMbmtnTFNCMGFHbHpMbmtnS2lCbExuZzdDaUFnSUNCOUNpQWdJQ0JzWlc1bmRHaFRjU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ29nZEdocGN5NTRJQ3NnZEdocGN5NTVJQ29nZEdocGN5NTVPd29nSUNBZ2ZRb2dJQ0FnYkdWdVozUm9LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xuTnhjblFvZEdocGN5NTRJQ29nZEdocGN5NTRJQ3NnZEdocGN5NTVJQ29nZEdocGN5NTVLVHNLSUNBZ0lIMEtJQ0FnSUcxaGJtaGhkSFJoYmt4bGJtZDBhQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhZbk1vZEdocGN5NTRLU0FySUUxaGRHZ3VZV0p6S0hSb2FYTXVlU2s3Q2lBZ0lDQjlDaUFnSUNCdWIzSnRZV3hwZW1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdsMmFXUmxVMk5oYkdGeUtIUm9hWE11YkdWdVozUm9LQ2tnZkh3Z01TazdDaUFnSUNCOUNpQWdJQ0JoYm1kc1pTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aGRHRnVNaWd0ZEdocGN5NTVMQ0F0ZEdocGN5NTRLU0FySUUxaGRHZ3VVRWs3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1emNYSjBLSFJvYVhNdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTU0SUMwZ1pTNTRMQ0J1SUQwZ2RHaHBjeTU1SUMwZ1pTNTVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ29nZENBcklHNGdLaUJ1T3dvZ0lDQWdmUW9nSUNBZ2JXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndVlXSnpLSFJvYVhNdWVDQXRJR1V1ZUNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5rZ0xTQmxMbmtwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBUR1Z1WjNSb0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3hwZW1Vb0tTNXRkV3gwYVhCc2VWTmpZV3hoY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3hsY25Bb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLejBnS0dVdWVDQXRJSFJvYVhNdWVDa2dLaUIwTENCMGFHbHpMbmtnS3owZ0tHVXVlU0F0SUhSb2FYTXVlU2tnS2lCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JHVnljRlpsWTNSdmNuTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMbmdnS3lBb2RDNTRJQzBnWlM1NEtTQXFJRzRzSUhSb2FYTXVlU0E5SUdVdWVTQXJJQ2gwTG5rZ0xTQmxMbmtwSUNvZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVlQ0E5UFQwZ2RHaHBjeTU0SUNZbUlHVXVlU0E5UFQwZ2RHaHBjeTU1T3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUZ5Y21GNUtHVXNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVmJkRjBzSUhSb2FYTXVlU0E5SUdWYmRDQXJJREZkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5QmNuSmhlU2hsSUQwZ1cxMHNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJkRjBnUFNCMGFHbHpMbmdzSUdWYmRDQXJJREZkSUQwZ2RHaHBjeTU1TENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzRnSVQwOUlIWnZhV1FnTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqSTZJRzltWm5ObGRDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0lHWnliMjBnTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb0tTNGlLU3dnZEdocGN5NTRJRDBnWlM1blpYUllLSFFwTENCMGFHbHpMbmtnUFNCbExtZGxkRmtvZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeWIzUmhkR1ZCY205MWJtUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1RXRjBhQzVqYjNNb2RDa3NJR2tnUFNCTllYUm9Mbk5wYmloMEtTd2djaUE5SUhSb2FYTXVlQ0F0SUdVdWVDd2dieUE5SUhSb2FYTXVlU0F0SUdVdWVUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ2NpQXFJRzRnTFNCdklDb2dhU0FySUdVdWVDd2dkR2hwY3k1NUlEMGdjaUFxSUdrZ0t5QnZJQ29nYmlBcklHVXVlU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEpoYm1SdmJTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1eVlXNWtiMjBvS1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV5WVc1a2IyMG9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJQ3BiVTNsdFltOXNMbWwwWlhKaGRHOXlYU2dwSUhzS0lDQWdJQ0FnSUNCNWFXVnNaQ0IwYUdsekxuZ3NJSGxwWld4a0lIUm9hWE11ZVRzS0lDQWdJSDBLZlRzS1dDNXdjbTkwYjNSNWNHVXVhWE5XWldOMGIzSXlJRDBnSVRBN0NuWmhjaUJzZENBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBjeUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVFvZ0lDQWdJQ0FnSUYwc0lHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ1BpQXdJQ1ltSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrMWhkSEpwZURNNklIUm9aU0JqYjI1emRISjFZM1J2Y2lCdWJ5QnNiMjVuWlhJZ2NtVmhaSE1nWVhKbmRXMWxiblJ6TGlCMWMyVWdMbk5sZENncElHbHVjM1JsWVdRdUlpazdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2RHaHBjeTVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhRnN3WFNBOUlHVXNJR2hiTVYwZ1BTQnBMQ0JvV3pKZElEMGdZU3dnYUZzelhTQTlJSFFzSUdoYk5GMGdQU0J5TENCb1d6VmRJRDBnYkN3Z2FGczJYU0E5SUc0c0lHaGJOMTBnUFNCdkxDQm9XemhkSUQwZ1l5d2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHbGtaVzUwYVhSNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDZ3hMQ0F3TENBd0xDQXdMQ0F4TENBd0xDQXdMQ0F3TENBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYmlBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUmJNRjBnUFNCdVd6QmRMQ0IwV3pGZElEMGdibHN4WFN3Z2RGc3lYU0E5SUc1Yk1sMHNJSFJiTTEwZ1BTQnVXek5kTENCMFd6UmRJRDBnYmxzMFhTd2dkRnMxWFNBOUlHNWJOVjBzSUhSYk5sMGdQU0J1V3paZExDQjBXemRkSUQwZ2JsczNYU3dnZEZzNFhTQTlJRzViT0Ywc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGVIUnlZV04wUW1GemFYTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbk5sZEVaeWIyMU5ZWFJ5YVhnelEyOXNkVzF1S0hSb2FYTXNJREFwTENCMExuTmxkRVp5YjIxTllYUnlhWGd6UTI5c2RXMXVLSFJvYVhNc0lERXBMQ0J1TG5ObGRFWnliMjFOWVhSeWFYZ3pRMjlzZFcxdUtIUm9hWE1zSURJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlUxaGRISnBlRFFvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb2RGc3dYU3dnZEZzMFhTd2dkRnM0WFN3Z2RGc3hYU3dnZEZzMVhTd2dkRnM1WFN3Z2RGc3lYU3dnZEZzMlhTd2dkRnN4TUYwcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3Ykhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vZEdocGN5d2daU2s3Q2lBZ0lDQjlDaUFnSUNCd2NtVnRkV3gwYVhCc2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJYVnNkR2x3YkhsTllYUnlhV05sY3lobExDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NVRXRjBjbWxqWlhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1bGJHVnRaVzUwY3l3Z2FTQTlJSFF1Wld4bGJXVnVkSE1zSUhJZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCdklEMGdibHN3WFN3Z1lTQTlJRzViTTEwc0lHd2dQU0J1V3paZExDQmpJRDBnYmxzeFhTd2dhQ0E5SUc1Yk5GMHNJSFVnUFNCdVd6ZGRMQ0JrSUQwZ2Jsc3lYU3dnWmlBOUlHNWJOVjBzSUcwZ1BTQnVXemhkTENCNElEMGdhVnN3WFN3Z2RpQTlJR2xiTTEwc0lHY2dQU0JwV3paZExDQndJRDBnYVZzeFhTd2dYeUE5SUdsYk5GMHNJSGtnUFNCcFd6ZGRMQ0JpSUQwZ2FWc3lYU3dnUVNBOUlHbGJOVjBzSUV3Z1BTQnBXemhkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5V3pCZElEMGdieUFxSUhnZ0t5QmhJQ29nY0NBcklHd2dLaUJpTENCeVd6TmRJRDBnYnlBcUlIWWdLeUJoSUNvZ1h5QXJJR3dnS2lCQkxDQnlXelpkSUQwZ2J5QXFJR2NnS3lCaElDb2dlU0FySUd3Z0tpQk1MQ0J5V3pGZElEMGdZeUFxSUhnZ0t5Qm9JQ29nY0NBcklIVWdLaUJpTENCeVd6UmRJRDBnWXlBcUlIWWdLeUJvSUNvZ1h5QXJJSFVnS2lCQkxDQnlXemRkSUQwZ1l5QXFJR2NnS3lCb0lDb2dlU0FySUhVZ0tpQk1MQ0J5V3pKZElEMGdaQ0FxSUhnZ0t5Qm1JQ29nY0NBcklHMGdLaUJpTENCeVd6VmRJRDBnWkNBcUlIWWdLeUJtSUNvZ1h5QXJJRzBnS2lCQkxDQnlXemhkSUQwZ1pDQXFJR2NnS3lCbUlDb2dlU0FySUcwZ0tpQk1MQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZzd1hTQXFQU0JsTENCMFd6TmRJQ285SUdVc0lIUmJObDBnS2owZ1pTd2dkRnN4WFNBcVBTQmxMQ0IwV3pSZElDbzlJR1VzSUhSYk4xMGdLajBnWlN3Z2RGc3lYU0FxUFNCbExDQjBXelZkSUNvOUlHVXNJSFJiT0YwZ0tqMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JsZEdWeWJXbHVZVzUwS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnZENBOUlHVmJNRjBzSUc0Z1BTQmxXekZkTENCcElEMGdaVnN5WFN3Z2NpQTlJR1ZiTTEwc0lHOGdQU0JsV3pSZExDQmhJRDBnWlZzMVhTd2diQ0E5SUdWYk5sMHNJR01nUFNCbFd6ZGRMQ0JvSUQwZ1pWczRYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FxSUc4Z0tpQm9JQzBnZENBcUlHRWdLaUJqSUMwZ2JpQXFJSElnS2lCb0lDc2diaUFxSUdFZ0tpQnNJQ3NnYVNBcUlISWdLaUJqSUMwZ2FTQXFJRzhnS2lCc093b2dJQ0FnZlFvZ0lDQWdhVzUyWlhKMEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2RDQTlJR1ZiTUYwc0lHNGdQU0JsV3pGZExDQnBJRDBnWlZzeVhTd2djaUE5SUdWYk0xMHNJRzhnUFNCbFd6UmRMQ0JoSUQwZ1pWczFYU3dnYkNBOUlHVmJObDBzSUdNZ1BTQmxXemRkTENCb0lEMGdaVnM0WFN3Z2RTQTlJR2dnS2lCdklDMGdZU0FxSUdNc0lHUWdQU0JoSUNvZ2JDQXRJR2dnS2lCeUxDQm1JRDBnWXlBcUlISWdMU0J2SUNvZ2JDd2diU0E5SUhRZ0tpQjFJQ3NnYmlBcUlHUWdLeUJwSUNvZ1pqc0tJQ0FnSUNBZ0lDQnBaaUFvYlNBOVBUMGdNQ2tnY21WMGRYSnVJSFJvYVhNdWMyVjBLREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJR3hsZENCNElEMGdNU0F2SUcwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWYk1GMGdQU0IxSUNvZ2VDd2daVnN4WFNBOUlDaHBJQ29nWXlBdElHZ2dLaUJ1S1NBcUlIZ3NJR1ZiTWwwZ1BTQW9ZU0FxSUc0Z0xTQnBJQ29nYnlrZ0tpQjRMQ0JsV3pOZElEMGdaQ0FxSUhnc0lHVmJORjBnUFNBb2FDQXFJSFFnTFNCcElDb2diQ2tnS2lCNExDQmxXelZkSUQwZ0tHa2dLaUJ5SUMwZ1lTQXFJSFFwSUNvZ2VDd2daVnMyWFNBOUlHWWdLaUI0TENCbFd6ZGRJRDBnS0c0Z0tpQnNJQzBnWXlBcUlIUXBJQ29nZUN3Z1pWczRYU0E5SUNodklDb2dkQ0F0SUc0Z0tpQnlLU0FxSUhnc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGNtRnVjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVc0lIUWdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElEMGdkRnN4WFN3Z2RGc3hYU0E5SUhSYk0xMHNJSFJiTTEwZ1BTQmxMQ0JsSUQwZ2RGc3lYU3dnZEZzeVhTQTlJSFJiTmwwc0lIUmJObDBnUFNCbExDQmxJRDBnZEZzMVhTd2dkRnMxWFNBOUlIUmJOMTBzSUhSYk4xMGdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFRtOXliV0ZzVFdGMGNtbDRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFJHY205dFRXRjBjbWw0TkNobEtTNXBiblpsY25Rb0tTNTBjbUZ1YzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpjRzl6WlVsdWRHOUJjbkpoZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsV3pCZElEMGdkRnN3WFN3Z1pWc3hYU0E5SUhSYk0xMHNJR1ZiTWwwZ1BTQjBXelpkTENCbFd6TmRJRDBnZEZzeFhTd2daVnMwWFNBOUlIUmJORjBzSUdWYk5WMGdQU0IwV3pkZExDQmxXelpkSUQwZ2RGc3lYU3dnWlZzM1hTQTlJSFJiTlYwc0lHVmJPRjBnUFNCMFd6aGRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVlhaVWNtRnVjMlp2Y20wb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTa2dld29nSUNBZ0lDQWdJR3hsZENCc0lEMGdUV0YwYUM1amIzTW9jaWtzSUdNZ1BTQk5ZWFJvTG5OcGJpaHlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9iaUFxSUd3c0lHNGdLaUJqTENBdGJpQXFJQ2hzSUNvZ2J5QXJJR01nS2lCaEtTQXJJRzhnS3lCbExDQXRhU0FxSUdNc0lHa2dLaUJzTENBdGFTQXFJQ2d0WXlBcUlHOGdLeUJzSUNvZ1lTa2dLeUJoSUNzZ2RDd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpZMkZzWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVd6QmRJQ285SUdVc0lHNWJNMTBnS2owZ1pTd2dibHMyWFNBcVBTQmxMQ0J1V3pGZElDbzlJSFFzSUc1Yk5GMGdLajBnZEN3Z2JsczNYU0FxUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlFMWhkR2d1WTI5ektHVXBMQ0J1SUQwZ1RXRjBhQzV6YVc0b1pTa3NJR2tnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0J5SUQwZ2FWc3dYU3dnYnlBOUlHbGJNMTBzSUdFZ1BTQnBXelpkTENCc0lEMGdhVnN4WFN3Z1l5QTlJR2xiTkYwc0lHZ2dQU0JwV3pkZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcFd6QmRJRDBnZENBcUlISWdLeUJ1SUNvZ2JDd2dhVnN6WFNBOUlIUWdLaUJ2SUNzZ2JpQXFJR01zSUdsYk5sMGdQU0IwSUNvZ1lTQXJJRzRnS2lCb0xDQnBXekZkSUQwZ0xXNGdLaUJ5SUNzZ2RDQXFJR3dzSUdsYk5GMGdQU0F0YmlBcUlHOGdLeUIwSUNvZ1l5d2dhVnMzWFNBOUlDMXVJQ29nWVNBcklIUWdLaUJvTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTnNZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1Yk1GMGdLejBnWlNBcUlHNWJNbDBzSUc1Yk0xMGdLejBnWlNBcUlHNWJOVjBzSUc1Yk5sMGdLejBnWlNBcUlHNWJPRjBzSUc1Yk1WMGdLejBnZENBcUlHNWJNbDBzSUc1Yk5GMGdLejBnZENBcUlHNWJOVjBzSUc1Yk4xMGdLejBnZENBcUlHNWJPRjBzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsY1hWaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2diaUE5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNRHNnYVNBOElEazdJR2tyS3lscFppQW9kRnRwWFNBaFBUMGdibHRwWFNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaE1Ec0tJQ0FnSUgwS0lDQWdJR1p5YjIxQmNuSmhlU2hsTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENBNU95QnVLeXNwZEdocGN5NWxiR1Z0Wlc1MGMxdHVYU0E5SUdWYmJpQXJJSFJkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlCY25KaGVTaGxJRDBnVzEwc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXM1JkSUQwZ2Jsc3dYU3dnWlZ0MElDc2dNVjBnUFNCdVd6RmRMQ0JsVzNRZ0t5QXlYU0E5SUc1Yk1sMHNJR1ZiZENBcklETmRJRDBnYmxzelhTd2daVnQwSUNzZ05GMGdQU0J1V3pSZExDQmxXM1FnS3lBMVhTQTlJRzViTlYwc0lHVmJkQ0FySURaZElEMGdibHMyWFN3Z1pWdDBJQ3NnTjEwZ1BTQnVXemRkTENCbFczUWdLeUE0WFNBOUlHNWJPRjBzSUdVN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVtY205dFFYSnlZWGtvZEdocGN5NWxiR1Z0Wlc1MGN5azdDaUFnSUNCOUNuMDdDbXgwTG5CeWIzUnZkSGx3WlM1cGMwMWhkSEpwZURNZ1BTQWhNRHNLWm5WdVkzUnBiMjRnV1dNb2N5a2dld29nSUNBZ2FXWWdLSE11YkdWdVozUm9JRDA5UFNBd0tTQnlaWFIxY200Z0xURWdMeUF3T3dvZ0lDQWdiR1YwSUdVZ1BTQnpXekJkT3dvZ0lDQWdabTl5S0d4bGRDQjBJRDBnTVN3Z2JpQTlJSE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dLeXQwS1hOYmRGMGdQaUJsSUNZbUlDaGxJRDBnYzF0MFhTazdDaUFnSUNCeVpYUjFjbTRnWlRzS2ZRcDJZWElnVVdRZ1BTQjdDaUFnSUNCSmJuUTRRWEp5WVhrc0NpQWdJQ0JWYVc1ME9FRnljbUY1TEFvZ0lDQWdWV2x1ZERoRGJHRnRjR1ZrUVhKeVlYa3NDaUFnSUNCSmJuUXhOa0Z5Y21GNUxBb2dJQ0FnVldsdWRERTJRWEp5WVhrc0NpQWdJQ0JKYm5Rek1rRnljbUY1TEFvZ0lDQWdWV2x1ZERNeVFYSnlZWGtzQ2lBZ0lDQkdiRzloZERNeVFYSnlZWGtzQ2lBZ0lDQkdiRzloZERZMFFYSnlZWGtLZlRzS1puVnVZM1JwYjI0Z2Qya29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJRzVsZHlCUlpGdHpYU2hsS1RzS2ZRcG1kVzVqZEdsdmJpQnhjeWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtDSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1TDNob2RHMXNJaXdnY3lrN0NuMEtkbUZ5SUhScExDQlpiaUE5SUdOc1lYTnpJSHNLSUNBZ0lITjBZWFJwWXlCblpYUkVZWFJoVlZKTUtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb0wxNWtZWFJoT2k5cExuUmxjM1FvWlM1emNtTXBJSHg4SUhSNWNHVnZaaUJJVkUxTVEyRnVkbUZ6Uld4bGJXVnVkQ0ErSUNKMUlpa2djbVYwZFhKdUlHVXVjM0pqT3dvZ0lDQWdJQ0FnSUd4bGRDQjBPd29nSUNBZ0lDQWdJR2xtSUNobElHbHVjM1JoYm1ObGIyWWdTRlJOVEVOaGJuWmhjMFZzWlcxbGJuUXBJSFFnUFNCbE93b2dJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBhU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaDBhU0E5SUhGektDSmpZVzUyWVhNaUtTa3NJSFJwTG5kcFpIUm9JRDBnWlM1M2FXUjBhQ3dnZEdrdWFHVnBaMmgwSUQwZ1pTNW9aV2xuYUhRN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2t1WjJWMFEyOXVkR1Y0ZENnaU1tUWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTQnBibk4wWVc1alpXOW1JRWx0WVdkbFJHRjBZU0EvSUc0dWNIVjBTVzFoWjJWRVlYUmhLR1VzSURBc0lEQXBJRG9nYmk1a2NtRjNTVzFoWjJVb1pTd2dNQ3dnTUN3Z1pTNTNhV1IwYUN3Z1pTNW9aV2xuYUhRcExDQjBJRDBnZEdrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExuZHBaSFJvSUQ0Z01qQTBPQ0I4ZkNCMExtaGxhV2RvZENBK0lESXdORGdnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUpiV0ZuWlZWMGFXeHpMbWRsZEVSaGRHRlZVa3c2SUVsdFlXZGxJR052Ym5abGNuUmxaQ0IwYnlCcWNHY2dabTl5SUhCbGNtWnZjbTFoYm1ObElISmxZWE52Ym5NaUxDQmxLU3dnZEM1MGIwUmhkR0ZWVWt3b0ltbHRZV2RsTDJwd1pXY2lMQ0F1TmlrcElEb2dkQzUwYjBSaGRHRlZVa3dvSW1sdFlXZGxMM0J1WnlJcE93b2dJQ0FnZlFwOUxDQkxaQ0E5SURBc0lHOTBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2IzUXVSRVZHUVZWTVZGOUpUVUZIUlN3Z2RDQTlJRzkwTGtSRlJrRlZURlJmVFVGUVVFbE9SeXdnYmlBOUlIWjBMQ0JwSUQwZ2RuUXNJSElnUFNCMGRDd2dieUE5SUZWcExDQmhJRDBnWTNRc0lHd2dQU0J5Yml3Z1l5QTlJREVzSUdnZ1BTQk9kQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2RHaHBjeXdnSW1sa0lpd2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nUzJRckt3b2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxuVjFhV1FnUFNCRmRDZ3BMQ0IwYUdsekxtNWhiV1VnUFNBaUlpd2dkR2hwY3k1cGJXRm5aU0E5SUdVc0lIUm9hWE11Yldsd2JXRndjeUE5SUZ0ZExDQjBhR2x6TG0xaGNIQnBibWNnUFNCMExDQjBhR2x6TG5keVlYQlRJRDBnYml3Z2RHaHBjeTUzY21Gd1ZDQTlJR2tzSUhSb2FYTXViV0ZuUm1sc2RHVnlJRDBnY2l3Z2RHaHBjeTV0YVc1R2FXeDBaWElnUFNCdkxDQjBhR2x6TG1GdWFYTnZkSEp2Y0hrZ1BTQmpMQ0IwYUdsekxtWnZjbTFoZENBOUlHRXNJSFJvYVhNdWFXNTBaWEp1WVd4R2IzSnRZWFFnUFNCdWRXeHNMQ0IwYUdsekxuUjVjR1VnUFNCc0xDQjBhR2x6TG05bVpuTmxkQ0E5SUc1bGR5QllLREFzSURBcExDQjBhR2x6TG5KbGNHVmhkQ0E5SUc1bGR5QllLREVzSURFcExDQjBhR2x6TG1ObGJuUmxjaUE5SUc1bGR5QllLREFzSURBcExDQjBhR2x6TG5KdmRHRjBhVzl1SUQwZ01Dd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lUQXNJSFJvYVhNdWJXRjBjbWw0SUQwZ2JtVjNJR3gwTENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJQ0V3TENCMGFHbHpMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRWdQU0FoTVN3Z2RHaHBjeTVtYkdsd1dTQTlJQ0V3TENCMGFHbHpMblZ1Y0dGamEwRnNhV2R1YldWdWRDQTlJRFFzSUhSb2FYTXVaVzVqYjJScGJtY2dQU0JvTENCMGFHbHpMblZ6WlhKRVlYUmhJRDBnZTMwc0lIUm9hWE11ZG1WeWMybHZiaUE5SURBc0lIUm9hWE11YjI1VmNHUmhkR1VnUFNCdWRXeHNMQ0IwYUdsekxtbHpVbVZ1WkdWeVZHRnlaMlYwVkdWNGRIVnlaU0E5SUNFeE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRMbk5sZEZWMlZISmhibk5tYjNKdEtIUm9hWE11YjJabWMyVjBMbmdzSUhSb2FYTXViMlptYzJWMExua3NJSFJvYVhNdWNtVndaV0YwTG5nc0lIUm9hWE11Y21Wd1pXRjBMbmtzSUhSb2FYTXVjbTkwWVhScGIyNHNJSFJvYVhNdVkyVnVkR1Z5TG5nc0lIUm9hWE11WTJWdWRHVnlMbmtwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNWhiV1VnUFNCbExtNWhiV1VzSUhSb2FYTXVhVzFoWjJVZ1BTQmxMbWx0WVdkbExDQjBhR2x6TG0xcGNHMWhjSE1nUFNCbExtMXBjRzFoY0hNdWMyeHBZMlVvTUNrc0lIUm9hWE11YldGd2NHbHVaeUE5SUdVdWJXRndjR2x1Wnl3Z2RHaHBjeTUzY21Gd1V5QTlJR1V1ZDNKaGNGTXNJSFJvYVhNdWQzSmhjRlFnUFNCbExuZHlZWEJVTENCMGFHbHpMbTFoWjBacGJIUmxjaUE5SUdVdWJXRm5SbWxzZEdWeUxDQjBhR2x6TG0xcGJrWnBiSFJsY2lBOUlHVXViV2x1Um1sc2RHVnlMQ0IwYUdsekxtRnVhWE52ZEhKdmNIa2dQU0JsTG1GdWFYTnZkSEp2Y0hrc0lIUm9hWE11Wm05eWJXRjBJRDBnWlM1bWIzSnRZWFFzSUhSb2FYTXVhVzUwWlhKdVlXeEdiM0p0WVhRZ1BTQmxMbWx1ZEdWeWJtRnNSbTl5YldGMExDQjBhR2x6TG5SNWNHVWdQU0JsTG5SNWNHVXNJSFJvYVhNdWIyWm1jMlYwTG1OdmNIa29aUzV2Wm1aelpYUXBMQ0IwYUdsekxuSmxjR1ZoZEM1amIzQjVLR1V1Y21Wd1pXRjBLU3dnZEdocGN5NWpaVzUwWlhJdVkyOXdlU2hsTG1ObGJuUmxjaWtzSUhSb2FYTXVjbTkwWVhScGIyNGdQU0JsTG5KdmRHRjBhVzl1TENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0JsTG0xaGRISnBlRUYxZEc5VmNHUmhkR1VzSUhSb2FYTXViV0YwY21sNExtTnZjSGtvWlM1dFlYUnlhWGdwTENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJR1V1WjJWdVpYSmhkR1ZOYVhCdFlYQnpMQ0IwYUdsekxuQnlaVzExYkhScGNHeDVRV3h3YUdFZ1BTQmxMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRXNJSFJvYVhNdVpteHBjRmtnUFNCbExtWnNhWEJaTENCMGFHbHpMblZ1Y0dGamEwRnNhV2R1YldWdWRDQTlJR1V1ZFc1d1lXTnJRV3hwWjI1dFpXNTBMQ0IwYUdsekxtVnVZMjlrYVc1bklEMGdaUzVsYm1OdlpHbHVaeXdnZEdocGN5NTFjMlZ5UkdGMFlTQTlJRXBUVDA0dWNHRnljMlVvU2xOUFRpNXpkSEpwYm1kcFpua29aUzUxYzJWeVJHRjBZU2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVZ1BUMDlJSFp2YVdRZ01DQjhmQ0IwZVhCbGIyWWdaU0E5UFNBaWMzUnlhVzVuSWpzS0lDQWdJQ0FnSUNCcFppQW9JWFFnSmlZZ1pTNTBaWGgwZFhKbGMxdDBhR2x6TG5WMWFXUmRJQ0U5UFNCMmIybGtJREFwSUhKbGRIVnliaUJsTG5SbGVIUjFjbVZ6VzNSb2FYTXVkWFZwWkYwN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGa1lYUmhPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUEwTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpVkdWNGRIVnlaU0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlc1bGNtRjBiM0k2SUNKVVpYaDBkWEpsTG5SdlNsTlBUaUlLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZFhWcFpEb2dkR2hwY3k1MWRXbGtMQW9nSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUIwYUdsekxtNWhiV1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhjSEJwYm1jNklIUm9hWE11YldGd2NHbHVaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2NtVndaV0YwT2lCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkpsY0dWaGRDNTRMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1eVpYQmxZWFF1ZVFvZ0lDQWdJQ0FnSUNBZ0lDQmRMQW9nSUNBZ0lDQWdJQ0FnSUNCdlptWnpaWFE2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViMlptYzJWMExuZ3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG05bVpuTmxkQzU1Q2lBZ0lDQWdJQ0FnSUNBZ0lGMHNDaUFnSUNBZ0lDQWdJQ0FnSUdObGJuUmxjam9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpaVzUwWlhJdWVDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTJWdWRHVnlMbmtLSUNBZ0lDQWdJQ0FnSUNBZ1hTd0tJQ0FnSUNBZ0lDQWdJQ0FnY205MFlYUnBiMjQ2SUhSb2FYTXVjbTkwWVhScGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUhkeVlYQTZJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWQzSmhjRk1zQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuZHlZWEJVQ2lBZ0lDQWdJQ0FnSUNBZ0lGMHNDaUFnSUNBZ0lDQWdJQ0FnSUdadmNtMWhkRG9nZEdocGN5NW1iM0p0WVhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklIUm9hWE11ZEhsd1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1amIyUnBibWM2SUhSb2FYTXVaVzVqYjJScGJtY3NDaUFnSUNBZ0lDQWdJQ0FnSUcxcGJrWnBiSFJsY2pvZ2RHaHBjeTV0YVc1R2FXeDBaWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhaMFpwYkhSbGNqb2dkR2hwY3k1dFlXZEdhV3gwWlhJc0NpQWdJQ0FnSUNBZ0lDQWdJR0Z1YVhOdmRISnZjSGs2SUhSb2FYTXVZVzVwYzI5MGNtOXdlU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pteHBjRms2SUhSb2FYTXVabXhwY0Zrc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5WlcxMWJIUnBjR3g1UVd4d2FHRTZJSFJvYVhNdWNISmxiWFZzZEdsd2JIbEJiSEJvWVN3S0lDQWdJQ0FnSUNBZ0lDQWdkVzV3WVdOclFXeHBaMjV0Wlc1ME9pQjBhR2x6TG5WdWNHRmphMEZzYVdkdWJXVnVkQW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YVcxaFoyVWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11YVcxaFoyVTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBMblYxYVdRZ1BUMDlJSFp2YVdRZ01DQW1KaUFvYVM1MWRXbGtJRDBnUlhRb0tTa3NJQ0YwSUNZbUlHVXVhVzFoWjJWelcya3VkWFZwWkYwZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNocEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhJZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdMQ0JoSUQwZ2FTNXNaVzVuZEdnN0lHOGdQQ0JoT3lCdkt5c3BhVnR2WFM1cGMwUmhkR0ZVWlhoMGRYSmxJRDhnY2k1d2RYTm9LRjl2S0dsYmIxMHVhVzFoWjJVcEtTQTZJSEl1Y0hWemFDaGZieWhwVzI5ZEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NpQTlJRjl2S0drcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTNXBiV0ZuWlhOYmFTNTFkV2xrWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxZFdsa09pQnBMblYxYVdRc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWEpzT2lCeUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVhVzFoWjJVZ1BTQnBMblYxYVdRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCS1UwOU9Mbk4wY21sdVoybG1lU2gwYUdsekxuVnpaWEpFWVhSaEtTQWhQVDBnSW50OUlpQW1KaUFvYmk1MWMyVnlSR0YwWVNBOUlIUm9hWE11ZFhObGNrUmhkR0VwTENCMElIeDhJQ2hsTG5SbGVIUjFjbVZ6VzNSb2FYTXVkWFZwWkYwZ1BTQnVLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1ScGMzQnZjMlVpQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q2lBZ0lDQjBjbUZ1YzJadmNtMVZkaWhsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWJXRndjR2x1WnlBaFBUMGdhR0VwSUhKbGRIVnliaUJsT3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbUZ3Y0d4NVRXRjBjbWw0TXloMGFHbHpMbTFoZEhKcGVDa3NJR1V1ZUNBOElEQWdmSHdnWlM1NElENGdNU2tnYzNkcGRHTm9LSFJvYVhNdWQzSmhjRk1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUU1ek9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTNTRJRDBnWlM1NElDMGdUV0YwYUM1bWJHOXZjaWhsTG5ncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZG5RNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbExuZ2dQU0JsTG5nZ1BDQXdJRDhnTUNBNklERTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCQ2N6b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFMWhkR2d1WVdKektFMWhkR2d1Wm14dmIzSW9aUzU0S1NBbElESXBJRDA5UFNBeElEOGdaUzU0SUQwZ1RXRjBhQzVqWldsc0tHVXVlQ2tnTFNCbExuZ2dPaUJsTG5nZ1BTQmxMbmdnTFNCTllYUm9MbVpzYjI5eUtHVXVlQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0dVdWVTQThJREFnZkh3Z1pTNTVJRDRnTVNrZ2MzZHBkR05vS0hSb2FYTXVkM0poY0ZRcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFNXpPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzU1SUQwZ1pTNTVJQzBnVFdGMGFDNW1iRzl2Y2lobExua3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2RuUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxMbmtnUFNCbExua2dQQ0F3SUQ4Z01DQTZJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQkNjem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRTFoZEdndVlXSnpLRTFoZEdndVpteHZiM0lvWlM1NUtTQWxJRElwSUQwOVBTQXhJRDhnWlM1NUlEMGdUV0YwYUM1alpXbHNLR1V1ZVNrZ0xTQmxMbmtnT2lCbExua2dQU0JsTG5rZ0xTQk5ZWFJvTG1ac2IyOXlLR1V1ZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpteHBjRmtnSmlZZ0tHVXVlU0E5SURFZ0xTQmxMbmtwTENCbE93b2dJQ0FnZlFvZ0lDQWdjMlYwSUc1bFpXUnpWWEJrWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JsSUQwOVBTQWhNQ0FtSmlCMGFHbHpMblpsY25OcGIyNHJLenNLSUNBZ0lIMEtmVHNLYjNRdVJFVkdRVlZNVkY5SlRVRkhSU0E5SUhadmFXUWdNRHNLYjNRdVJFVkdRVlZNVkY5TlFWQlFTVTVISUQwZ2FHRTdDbTkwTG5CeWIzUnZkSGx3WlM1cGMxUmxlSFIxY21VZ1BTQWhNRHNLWm5WdVkzUnBiMjRnWDI4b2N5a2dld29nSUNBZ2NtVjBkWEp1SUhSNWNHVnZaaUJJVkUxTVNXMWhaMlZGYkdWdFpXNTBJRHdnSW5VaUlDWW1JSE1nYVc1emRHRnVZMlZ2WmlCSVZFMU1TVzFoWjJWRmJHVnRaVzUwSUh4OElIUjVjR1Z2WmlCSVZFMU1RMkZ1ZG1GelJXeGxiV1Z1ZENBOElDSjFJaUFtSmlCeklHbHVjM1JoYm1ObGIyWWdTRlJOVEVOaGJuWmhjMFZzWlcxbGJuUWdmSHdnZEhsd1pXOW1JRWx0WVdkbFFtbDBiV0Z3SUR3Z0luVWlJQ1ltSUhNZ2FXNXpkR0Z1WTJWdlppQkpiV0ZuWlVKcGRHMWhjQ0EvSUZsdUxtZGxkRVJoZEdGVlVrd29jeWtnT2lCekxtUmhkR0VnUHlCN0NpQWdJQ0FnSUNBZ1pHRjBZVG9nUVhKeVlYa3VjSEp2ZEc5MGVYQmxMbk5zYVdObExtTmhiR3dvY3k1a1lYUmhLU3dLSUNBZ0lDQWdJQ0IzYVdSMGFEb2djeTUzYVdSMGFDd0tJQ0FnSUNBZ0lDQm9aV2xuYUhRNklITXVhR1ZwWjJoMExBb2dJQ0FnSUNBZ0lIUjVjR1U2SUhNdVpHRjBZUzVqYjI1emRISjFZM1J2Y2k1dVlXMWxDaUFnSUNCOUlEb2dLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VkdWNGRIVnlaVG9nVlc1aFlteGxJSFJ2SUhObGNtbGhiR2w2WlNCVVpYaDBkWEpsTGlJcExDQjdmU2s3Q24wS2RtRnlJRlpsSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlEQXNJSFFnUFNBd0xDQnVJRDBnTUN3Z2FTQTlJREVwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE11ZVNBOUlIUXNJSFJvYVhNdWVpQTlJRzRzSUhSb2FYTXVkeUE5SUdrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnZDJsa2RHZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVqc0tJQ0FnSUgwS0lDQWdJSE5sZENCM2FXUjBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTU2SUQwZ1pUc0tJQ0FnSUgwS0lDQWdJR2RsZENCb1pXbG5hSFFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkenNLSUNBZ0lIMEtJQ0FnSUhObGRDQm9aV2xuYUhRb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWR5QTlJR1U3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTENCMGFHbHpMbmtnUFNCMExDQjBhR2x6TG5vZ1BTQnVMQ0IwYUdsekxuY2dQU0JwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3k1NUlEMGdaU3dnZEdocGN5NTZJRDBnWlN3Z2RHaHBjeTUzSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUmFLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTZJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGY29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuY2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFEyOXRjRzl1Wlc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZUNBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTU1SUQwZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbm9nUFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkeUE5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpYVc1a1pYZ2dhWE1nYjNWMElHOW1JSEpoYm1kbE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyOXRjRzl1Wlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZzdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5rN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01qb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbm83Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuYzdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbWx1WkdWNElHbHpJRzkxZENCdlppQnlZVzVuWlRvZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG5nc0lIUm9hWE11ZVN3Z2RHaHBjeTU2TENCMGFHbHpMbmNwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVdWVDd2dkR2hwY3k1NUlEMGdaUzU1TENCMGFHbHpMbm9nUFNCbExub3NJSFJvYVhNdWR5QTlJR1V1ZHlBaFBUMGdkbTlwWkNBd0lEOGdaUzUzSURvZ01Td2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUhadmFXUWdNQ0EvSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pRNklDNWhaR1FvS1NCdWIzY2diMjVzZVNCaFkyTmxjSFJ6SUc5dVpTQmhjbWQxYldWdWRDNGdWWE5sSUM1aFpHUldaV04wYjNKektDQmhMQ0JpSUNrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1aFpHUldaV04wYjNKektHVXNJSFFwS1NBNklDaDBhR2x6TG5nZ0t6MGdaUzU0TENCMGFHbHpMbmtnS3owZ1pTNTVMQ0IwYUdsekxub2dLejBnWlM1NkxDQjBhR2x6TG5jZ0t6MGdaUzUzTENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdGa1pGTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBclBTQmxMQ0IwYUdsekxua2dLejBnWlN3Z2RHaHBjeTU2SUNzOUlHVXNJSFJvYVhNdWR5QXJQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVdSa1ZtVmpkRzl5Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1V1ZUNBcklIUXVlQ3dnZEdocGN5NTVJRDBnWlM1NUlDc2dkQzU1TENCMGFHbHpMbm9nUFNCbExub2dLeUIwTG5vc0lIUm9hWE11ZHlBOUlHVXVkeUFySUhRdWR5d2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaRk5qWVd4bFpGWmxZM1J2Y2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXJQU0JsTG5nZ0tpQjBMQ0IwYUdsekxua2dLejBnWlM1NUlDb2dkQ3dnZEdocGN5NTZJQ3M5SUdVdWVpQXFJSFFzSUhSb2FYTXVkeUFyUFNCbExuY2dLaUIwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNWaUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdkbTlwWkNBd0lEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlORG9nTG5OMVlpZ3BJRzV2ZHlCdmJteDVJR0ZqWTJWd2RITWdiMjVsSUdGeVozVnRaVzUwTGlCVmMyVWdMbk4xWWxabFkzUnZjbk1vSUdFc0lHSWdLU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbk4xWWxabFkzUnZjbk1vWlN3Z2RDa3BJRG9nS0hSb2FYTXVlQ0F0UFNCbExuZ3NJSFJvYVhNdWVTQXRQU0JsTG5rc0lIUm9hWE11ZWlBdFBTQmxMbm9zSUhSb2FYTXVkeUF0UFNCbExuY3NJSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdjM1ZpVTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQzA5SUdVc0lIUm9hWE11ZVNBdFBTQmxMQ0IwYUdsekxub2dMVDBnWlN3Z2RHaHBjeTUzSUMwOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0pXWldOMGIzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQzBnZEM1NExDQjBhR2x6TG5rZ1BTQmxMbmtnTFNCMExua3NJSFJvYVhNdWVpQTlJR1V1ZWlBdElIUXVlaXdnZEdocGN5NTNJRDBnWlM1M0lDMGdkQzUzTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS2owZ1pTNTRMQ0IwYUdsekxua2dLajBnWlM1NUxDQjBhR2x6TG5vZ0tqMGdaUzU2TENCMGFHbHpMbmNnS2owZ1pTNTNMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tqMGdaU3dnZEdocGN5NTVJQ285SUdVc0lIUm9hWE11ZWlBcVBTQmxMQ0IwYUdsekxuY2dLajBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE5DaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuZ3NJRzRnUFNCMGFHbHpMbmtzSUdrZ1BTQjBhR2x6TG5vc0lISWdQU0IwYUdsekxuY3NJRzhnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCdld6QmRJQ29nZENBcklHOWJORjBnS2lCdUlDc2diMXM0WFNBcUlHa2dLeUJ2V3pFeVhTQXFJSElzSUhSb2FYTXVlU0E5SUc5Yk1WMGdLaUIwSUNzZ2IxczFYU0FxSUc0Z0t5QnZXemxkSUNvZ2FTQXJJRzliTVROZElDb2djaXdnZEdocGN5NTZJRDBnYjFzeVhTQXFJSFFnS3lCdld6WmRJQ29nYmlBcklHOWJNVEJkSUNvZ2FTQXJJRzliTVRSZElDb2djaXdnZEdocGN5NTNJRDBnYjFzelhTQXFJSFFnS3lCdld6ZGRJQ29nYmlBcklHOWJNVEZkSUNvZ2FTQXJJRzliTVRWZElDb2djaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwZG1sa1pWTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YlhWc2RHbHdiSGxUWTJGc1lYSW9NU0F2SUdVcE93b2dJQ0FnZlFvZ0lDQWdjMlYwUVhocGMwRnVaMnhsUm5KdmJWRjFZWFJsY201cGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkeUE5SURJZ0tpQk5ZWFJvTG1GamIzTW9aUzUzS1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUUxaGRHZ3VjM0Z5ZENneElDMGdaUzUzSUNvZ1pTNTNLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0E4SURGbExUUWdQeUFvZEdocGN5NTRJRDBnTVN3Z2RHaHBjeTU1SUQwZ01Dd2dkR2hwY3k1NklEMGdNQ2tnT2lBb2RHaHBjeTU0SUQwZ1pTNTRJQzhnZEN3Z2RHaHBjeTU1SUQwZ1pTNTVJQzhnZEN3Z2RHaHBjeTU2SUQwZ1pTNTZJQzhnZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkJlR2x6UVc1bmJHVkdjbTl0VW05MFlYUnBiMjVOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBMQ0J1TENCcExDQnlMQ0JzSUQwZ1pTNWxiR1Z0Wlc1MGN5d2dZeUE5SUd4Yk1GMHNJR2dnUFNCc1d6UmRMQ0IxSUQwZ2JGczRYU3dnWkNBOUlHeGJNVjBzSUdZZ1BTQnNXelZkTENCdElEMGdiRnM1WFN3Z2VDQTlJR3hiTWwwc0lIWWdQU0JzV3paZExDQm5JRDBnYkZzeE1GMDdDaUFnSUNBZ0lDQWdhV1lnS0UxaGRHZ3VZV0p6S0dnZ0xTQmtLU0E4SUM0d01TQW1KaUJOWVhSb0xtRmljeWgxSUMwZ2VDa2dQQ0F1TURFZ0ppWWdUV0YwYUM1aFluTW9iU0F0SUhZcElEd2dMakF4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoTllYUm9MbUZpY3lob0lDc2daQ2tnUENBdU1TQW1KaUJOWVhSb0xtRmljeWgxSUNzZ2VDa2dQQ0F1TVNBbUppQk5ZWFJvTG1GaWN5aHRJQ3NnZGlrZ1BDQXVNU0FtSmlCTllYUm9MbUZpY3loaklDc2daaUFySUdjZ0xTQXpLU0E4SUM0eEtTQnlaWFIxY200Z2RHaHBjeTV6WlhRb01Td2dNQ3dnTUN3Z01Da3NJSFJvYVhNN0NpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCTllYUm9MbEJKT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlDaGpJQ3NnTVNrZ0x5QXlMQ0I1SUQwZ0tHWWdLeUF4S1NBdklESXNJR0lnUFNBb1p5QXJJREVwSUM4Z01pd2dRU0E5SUNob0lDc2daQ2tnTHlBMExDQk1JRDBnS0hVZ0t5QjRLU0F2SURRc0lFa2dQU0FvYlNBcklIWXBJQzhnTkRzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGOGdQaUI1SUNZbUlGOGdQaUJpSUQ4Z1h5QThJQzR3TVNBL0lDaHVJRDBnTUN3Z2FTQTlJQzQzTURjeE1EWTNPREVzSUhJZ1BTQXVOekEzTVRBMk56Z3hLU0E2SUNodUlEMGdUV0YwYUM1emNYSjBLRjhwTENCcElEMGdRU0F2SUc0c0lISWdQU0JNSUM4Z2Jpa2dPaUI1SUQ0Z1lpQS9JSGtnUENBdU1ERWdQeUFvYmlBOUlDNDNNRGN4TURZM09ERXNJR2tnUFNBd0xDQnlJRDBnTGpjd056RXdOamM0TVNrZ09pQW9hU0E5SUUxaGRHZ3VjM0Z5ZENoNUtTd2diaUE5SUVFZ0x5QnBMQ0J5SUQwZ1NTQXZJR2twSURvZ1lpQThJQzR3TVNBL0lDaHVJRDBnTGpjd056RXdOamM0TVN3Z2FTQTlJQzQzTURjeE1EWTNPREVzSUhJZ1BTQXdLU0E2SUNoeUlEMGdUV0YwYUM1emNYSjBLR0lwTENCdUlEMGdUQ0F2SUhJc0lHa2dQU0JKSUM4Z2Npa3NJSFJvYVhNdWMyVjBLRzRzSUdrc0lISXNJSFFwTENCMGFHbHpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJRTFoZEdndWMzRnlkQ2dvZGlBdElHMHBJQ29nS0hZZ0xTQnRLU0FySUNoMUlDMGdlQ2tnS2lBb2RTQXRJSGdwSUNzZ0tHUWdMU0JvS1NBcUlDaGtJQzBnYUNrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9MbUZpY3lod0tTQThJQzR3TURFZ0ppWWdLSEFnUFNBeEtTd2dkR2hwY3k1NElEMGdLSFlnTFNCdEtTQXZJSEFzSUhSb2FYTXVlU0E5SUNoMUlDMGdlQ2tnTHlCd0xDQjBhR2x6TG5vZ1BTQW9aQ0F0SUdncElDOGdjQ3dnZEdocGN5NTNJRDBnVFdGMGFDNWhZMjl6S0NoaklDc2daaUFySUdjZ0xTQXhLU0F2SURJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXbHVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXRhVzRvZEdocGN5NTRMQ0JsTG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xcGJpaDBhR2x6TG5rc0lHVXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3ViV2x1S0hSb2FYTXVlaXdnWlM1NktTd2dkR2hwY3k1M0lEMGdUV0YwYUM1dGFXNG9kR2hwY3k1M0xDQmxMbmNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGNEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1dFlYZ29kR2hwY3k1NExDQmxMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MbTFoZUNoMGFHbHpMbmtzSUdVdWVTa3NJSFJvYVhNdWVpQTlJRTFoZEdndWJXRjRLSFJvYVhNdWVpd2daUzU2S1N3Z2RHaHBjeTUzSUQwZ1RXRjBhQzV0WVhnb2RHaHBjeTUzTENCbExuY3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhBb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMWhlQ2hsTG5nc0lFMWhkR2d1YldsdUtIUXVlQ3dnZEdocGN5NTRLU2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV0Y0S0dVdWVTd2dUV0YwYUM1dGFXNG9kQzU1TENCMGFHbHpMbmtwS1N3Z2RHaHBjeTU2SUQwZ1RXRjBhQzV0WVhnb1pTNTZMQ0JOWVhSb0xtMXBiaWgwTG5vc0lIUm9hWE11ZWlrcExDQjBhR2x6TG5jZ1BTQk5ZWFJvTG0xaGVDaGxMbmNzSUUxaGRHZ3ViV2x1S0hRdWR5d2dkR2hwY3k1M0tTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0ZOallXeGhjaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhSb2FYTXVlQ2twTENCMGFHbHpMbmtnUFNCTllYUm9MbTFoZUNobExDQk5ZWFJvTG0xcGJpaDBMQ0IwYUdsekxua3BLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRZWGdvWlN3Z1RXRjBhQzV0YVc0b2RDd2dkR2hwY3k1NktTa3NJSFJvYVhNdWR5QTlJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lIUm9hWE11ZHlrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEJNWlc1bmRHZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVzWlc1bmRHZ29LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYWnBaR1ZUWTJGc1lYSW9iaUI4ZkNBeEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loTllYUm9MbTFoZUNobExDQk5ZWFJvTG0xcGJpaDBMQ0J1S1NrcE93b2dJQ0FnZlFvZ0lDQWdabXh2YjNJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1bWJHOXZjaWgwYUdsekxua3BMQ0IwYUdsekxub2dQU0JOWVhSb0xtWnNiMjl5S0hSb2FYTXVlaWtzSUhSb2FYTXVkeUE5SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTUzS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdObGFXd29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndVkyVnBiQ2gwYUdsekxuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtTmxhV3dvZEdocGN5NTVLU3dnZEdocGN5NTZJRDBnVFdGMGFDNWpaV2xzS0hSb2FYTXVlaWtzSUhSb2FYTXVkeUE5SUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MWJtUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWNtOTFibVFvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXliM1Z1WkNoMGFHbHpMbmtwTENCMGFHbHpMbm9nUFNCTllYUm9Mbkp2ZFc1a0tIUm9hWE11ZWlrc0lIUm9hWE11ZHlBOUlFMWhkR2d1Y205MWJtUW9kR2hwY3k1M0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISnZkVzVrVkc5YVpYSnZLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0IwYUdsekxuZ2dQQ0F3SUQ4Z1RXRjBhQzVqWldsc0tIUm9hWE11ZUNrZ09pQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVDa3NJSFJvYVhNdWVTQTlJSFJvYVhNdWVTQThJREFnUHlCTllYUm9MbU5sYVd3b2RHaHBjeTU1S1NBNklFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NUtTd2dkR2hwY3k1NklEMGdkR2hwY3k1NklEd2dNQ0EvSUUxaGRHZ3VZMlZwYkNoMGFHbHpMbm9wSURvZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5vcExDQjBhR2x6TG5jZ1BTQjBhR2x6TG5jZ1BDQXdJRDhnVFdGMGFDNWpaV2xzS0hSb2FYTXVkeWtnT2lCTllYUm9MbVpzYjI5eUtIUm9hWE11ZHlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdVpXZGhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUMxMGFHbHpMbmdzSUhSb2FYTXVlU0E5SUMxMGFHbHpMbmtzSUhSb2FYTXVlaUE5SUMxMGFHbHpMbm9zSUhSb2FYTXVkeUE5SUMxMGFHbHpMbmNzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYjNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tpQmxMbmdnS3lCMGFHbHpMbmtnS2lCbExua2dLeUIwYUdsekxub2dLaUJsTG5vZ0t5QjBhR2x6TG5jZ0tpQmxMbmM3Q2lBZ0lDQjlDaUFnSUNCc1pXNW5kR2hUY1NncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNvZ2RHaHBjeTU0SUNzZ2RHaHBjeTU1SUNvZ2RHaHBjeTU1SUNzZ2RHaHBjeTU2SUNvZ2RHaHBjeTU2SUNzZ2RHaHBjeTUzSUNvZ2RHaHBjeTUzT3dvZ0lDQWdmUW9nSUNBZ2JHVnVaM1JvS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbk54Y25Rb2RHaHBjeTU0SUNvZ2RHaHBjeTU0SUNzZ2RHaHBjeTU1SUNvZ2RHaHBjeTU1SUNzZ2RHaHBjeTU2SUNvZ2RHaHBjeTU2SUNzZ2RHaHBjeTUzSUNvZ2RHaHBjeTUzS1RzS0lDQWdJSDBLSUNBZ0lHMWhibWhoZEhSaGJreGxibWQwYUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb2RHaHBjeTU0S1NBcklFMWhkR2d1WVdKektIUm9hWE11ZVNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5vcElDc2dUV0YwYUM1aFluTW9kR2hwY3k1M0tUc0tJQ0FnSUgwS0lDQWdJRzV2Y20xaGJHbDZaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWthWFpwWkdWVFkyRnNZWElvZEdocGN5NXNaVzVuZEdnb0tTQjhmQ0F4S1RzS0lDQWdJSDBLSUNBZ0lITmxkRXhsYm1kMGFDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzYVhwbEtDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzWlhKd0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ3M5SUNobExuZ2dMU0IwYUdsekxuZ3BJQ29nZEN3Z2RHaHBjeTU1SUNzOUlDaGxMbmtnTFNCMGFHbHpMbmtwSUNvZ2RDd2dkR2hwY3k1NklDczlJQ2hsTG5vZ0xTQjBhR2x6TG5vcElDb2dkQ3dnZEdocGN5NTNJQ3M5SUNobExuY2dMU0IwYUdsekxuY3BJQ29nZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4bGNuQldaV04wYjNKektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQ3NnS0hRdWVDQXRJR1V1ZUNrZ0tpQnVMQ0IwYUdsekxua2dQU0JsTG5rZ0t5QW9kQzU1SUMwZ1pTNTVLU0FxSUc0c0lIUm9hWE11ZWlBOUlHVXVlaUFySUNoMExub2dMU0JsTG5vcElDb2diaXdnZEdocGN5NTNJRDBnWlM1M0lDc2dLSFF1ZHlBdElHVXVkeWtnS2lCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNTRJRDA5UFNCMGFHbHpMbmdnSmlZZ1pTNTVJRDA5UFNCMGFHbHpMbmtnSmlZZ1pTNTZJRDA5UFNCMGFHbHpMbm9nSmlZZ1pTNTNJRDA5UFNCMGFHbHpMbmM3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRWEp5WVhrb1pTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pWdDBYU3dnZEdocGN5NTVJRDBnWlZ0MElDc2dNVjBzSUhSb2FYTXVlaUE5SUdWYmRDQXJJREpkTENCMGFHbHpMbmNnUFNCbFczUWdLeUF6WFN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlFYSnlZWGtvWlNBOUlGdGRMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXM1JkSUQwZ2RHaHBjeTU0TENCbFczUWdLeUF4WFNBOUlIUm9hWE11ZVN3Z1pWdDBJQ3NnTWwwZ1BTQjBhR2x6TG5vc0lHVmJkQ0FySUROZElEMGdkR2hwY3k1M0xDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z0lUMDlJSFp2YVdRZ01DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjalE2SUc5bVpuTmxkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtJR1p5YjIwZ0xtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9LUzRpS1N3Z2RHaHBjeTU0SUQwZ1pTNW5aWFJZS0hRcExDQjBhR2x6TG5rZ1BTQmxMbWRsZEZrb2RDa3NJSFJvYVhNdWVpQTlJR1V1WjJWMFdpaDBLU3dnZEdocGN5NTNJRDBnWlM1blpYUlhLSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY21GdVpHOXRLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpMbm9nUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsekxuY2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ0tsdFRlVzFpYjJ3dWFYUmxjbUYwYjNKZEtDa2dld29nSUNBZ0lDQWdJSGxwWld4a0lIUm9hWE11ZUN3Z2VXbGxiR1FnZEdocGN5NTVMQ0I1YVdWc1pDQjBhR2x6TG5vc0lIbHBaV3hrSUhSb2FYTXVkenNLSUNBZ0lIMEtmVHNLVm1VdWNISnZkRzkwZVhCbExtbHpWbVZqZEc5eU5DQTlJQ0V3T3dwMllYSWdRWFFnUFNCamJHRnpjeUJsZUhSbGJtUnpJRVZ1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRnUFNCN2ZTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5kcFpIUm9JRDBnWlN3Z2RHaHBjeTVvWldsbmFIUWdQU0IwTENCMGFHbHpMbVJsY0hSb0lEMGdNU3dnZEdocGN5NXpZMmx6YzI5eUlEMGdibVYzSUZabEtEQXNJREFzSUdVc0lIUXBMQ0IwYUdsekxuTmphWE56YjNKVVpYTjBJRDBnSVRFc0lIUm9hWE11ZG1sbGQzQnZjblFnUFNCdVpYY2dWbVVvTUN3Z01Dd2daU3dnZENrc0lIUm9hWE11ZEdWNGRIVnlaU0E5SUc1bGR5QnZkQ2gyYjJsa0lEQXNJRzR1YldGd2NHbHVaeXdnYmk1M2NtRndVeXdnYmk1M2NtRndWQ3dnYmk1dFlXZEdhV3gwWlhJc0lHNHViV2x1Um1sc2RHVnlMQ0J1TG1admNtMWhkQ3dnYmk1MGVYQmxMQ0J1TG1GdWFYTnZkSEp2Y0hrc0lHNHVaVzVqYjJScGJtY3BMQ0IwYUdsekxuUmxlSFIxY21VdWFYTlNaVzVrWlhKVVlYSm5aWFJVWlhoMGRYSmxJRDBnSVRBc0lIUm9hWE11ZEdWNGRIVnlaUzVwYldGblpTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2c2SURFS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5SbGVIUjFjbVV1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnYmk1blpXNWxjbUYwWlUxcGNHMWhjSE1nSVQwOUlIWnZhV1FnTUNBL0lHNHVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEb2dJVEVzSUhSb2FYTXVkR1Y0ZEhWeVpTNXBiblJsY201aGJFWnZjbTFoZENBOUlHNHVhVzUwWlhKdVlXeEdiM0p0WVhRZ0lUMDlJSFp2YVdRZ01DQS9JRzR1YVc1MFpYSnVZV3hHYjNKdFlYUWdPaUJ1ZFd4c0xDQjBhR2x6TG5SbGVIUjFjbVV1YldsdVJtbHNkR1Z5SUQwZ2JpNXRhVzVHYVd4MFpYSWdJVDA5SUhadmFXUWdNQ0EvSUc0dWJXbHVSbWxzZEdWeUlEb2dkSFFzSUhSb2FYTXVaR1Z3ZEdoQ2RXWm1aWElnUFNCdUxtUmxjSFJvUW5WbVptVnlJQ0U5UFNCMmIybGtJREFnUHlCdUxtUmxjSFJvUW5WbVptVnlJRG9nSVRBc0lIUm9hWE11YzNSbGJtTnBiRUoxWm1abGNpQTlJRzR1YzNSbGJtTnBiRUoxWm1abGNpQWhQVDBnZG05cFpDQXdJRDhnYmk1emRHVnVZMmxzUW5WbVptVnlJRG9nSVRFc0lIUm9hWE11WkdWd2RHaFVaWGgwZFhKbElEMGdiaTVrWlhCMGFGUmxlSFIxY21VZ0lUMDlJSFp2YVdRZ01DQS9JRzR1WkdWd2RHaFVaWGgwZFhKbElEb2diblZzYkRzS0lDQWdJSDBLSUNBZ0lITmxkRlJsZUhSMWNtVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQjBhR2x6TG5kcFpIUm9MQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUhSb2FYTXVhR1ZwWjJoMExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFEb2dkR2hwY3k1a1pYQjBhQW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXVkR1Y0ZEhWeVpTQTlJR1U3Q2lBZ0lDQjlDaUFnSUNCelpYUlRhWHBsS0dVc0lIUXNJRzRnUFNBeEtTQjdDaUFnSUNBZ0lDQWdLSFJvYVhNdWQybGtkR2dnSVQwOUlHVWdmSHdnZEdocGN5NW9aV2xuYUhRZ0lUMDlJSFFnZkh3Z2RHaHBjeTVrWlhCMGFDQWhQVDBnYmlrZ0ppWWdLSFJvYVhNdWQybGtkR2dnUFNCbExDQjBhR2x6TG1obGFXZG9kQ0E5SUhRc0lIUm9hWE11WkdWd2RHZ2dQU0J1TENCMGFHbHpMblJsZUhSMWNtVXVhVzFoWjJVdWQybGtkR2dnUFNCbExDQjBhR2x6TG5SbGVIUjFjbVV1YVcxaFoyVXVhR1ZwWjJoMElEMGdkQ3dnZEdocGN5NTBaWGgwZFhKbExtbHRZV2RsTG1SbGNIUm9JRDBnYml3Z2RHaHBjeTVrYVhOd2IzTmxLQ2twTENCMGFHbHpMblpwWlhkd2IzSjBMbk5sZENnd0xDQXdMQ0JsTENCMEtTd2dkR2hwY3k1elkybHpjMjl5TG5ObGRDZ3dMQ0F3TENCbExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1M2FXUjBhQ0E5SUdVdWQybGtkR2dzSUhSb2FYTXVhR1ZwWjJoMElEMGdaUzVvWldsbmFIUXNJSFJvYVhNdVpHVndkR2dnUFNCbExtUmxjSFJvTENCMGFHbHpMblpwWlhkd2IzSjBMbU52Y0hrb1pTNTJhV1YzY0c5eWRDa3NJSFJvYVhNdWRHVjRkSFZ5WlNBOUlHVXVkR1Y0ZEhWeVpTNWpiRzl1WlNncExDQjBhR2x6TG5SbGVIUjFjbVV1YVcxaFoyVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDNHVMblJvYVhNdWRHVjRkSFZ5WlM1cGJXRm5aUW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaR1Z3ZEdoQ2RXWm1aWElnUFNCbExtUmxjSFJvUW5WbVptVnlMQ0IwYUdsekxuTjBaVzVqYVd4Q2RXWm1aWElnUFNCbExuTjBaVzVqYVd4Q2RXWm1aWElzSUhSb2FYTXVaR1Z3ZEdoVVpYaDBkWEpsSUQwZ1pTNWtaWEIwYUZSbGVIUjFjbVVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSmthWE53YjNObElnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRcDlPd3BCZEM1d2NtOTBiM1I1Y0dVdWFYTlhaV0pIVEZKbGJtUmxjbFJoY21kbGRDQTlJQ0V3T3dwMllYSWdXbU1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRUYwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRcE93b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTUwWlhoMGRYSmxPd29nSUNBZ0lDQWdJSFJvYVhNdWRHVjRkSFZ5WlNBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdQQ0J1T3lCeUt5c3BkR2hwY3k1MFpYaDBkWEpsVzNKZElEMGdhUzVqYkc5dVpTZ3BPd29nSUNBZ2ZRb2dJQ0FnYzJWMFUybDZaU2hsTENCMExDQnVJRDBnTVNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxuZHBaSFJvSUNFOVBTQmxJSHg4SUhSb2FYTXVhR1ZwWjJoMElDRTlQU0IwSUh4OElIUm9hWE11WkdWd2RHZ2dJVDA5SUc0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTNhV1IwYUNBOUlHVXNJSFJvYVhNdWFHVnBaMmgwSUQwZ2RDd2dkR2hwY3k1a1pYQjBhQ0E5SUc0N0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0IwYUdsekxuUmxlSFIxY21VdWJHVnVaM1JvT3lCcElEd2djanNnYVNzcktYUm9hWE11ZEdWNGRIVnlaVnRwWFM1cGJXRm5aUzUzYVdSMGFDQTlJR1VzSUhSb2FYTXVkR1Y0ZEhWeVpWdHBYUzVwYldGblpTNW9aV2xuYUhRZ1BTQjBMQ0IwYUdsekxuUmxlSFIxY21WYmFWMHVhVzFoWjJVdVpHVndkR2dnUFNCdU93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtUnBjM0J2YzJVb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZG1sbGQzQnZjblF1YzJWMEtEQXNJREFzSUdVc0lIUXBMQ0IwYUdsekxuTmphWE56YjNJdWMyVjBLREFzSURBc0lHVXNJSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWthWE53YjNObEtDa3NJSFJvYVhNdWQybGtkR2dnUFNCbExuZHBaSFJvTENCMGFHbHpMbWhsYVdkb2RDQTlJR1V1YUdWcFoyaDBMQ0IwYUdsekxtUmxjSFJvSUQwZ1pTNWtaWEIwYUN3Z2RHaHBjeTUyYVdWM2NHOXlkQzV6WlhRb01Dd2dNQ3dnZEdocGN5NTNhV1IwYUN3Z2RHaHBjeTVvWldsbmFIUXBMQ0IwYUdsekxuTmphWE56YjNJdWMyVjBLREFzSURBc0lIUm9hWE11ZDJsa2RHZ3NJSFJvYVhNdWFHVnBaMmgwS1N3Z2RHaHBjeTVrWlhCMGFFSjFabVpsY2lBOUlHVXVaR1Z3ZEdoQ2RXWm1aWElzSUhSb2FYTXVjM1JsYm1OcGJFSjFabVpsY2lBOUlHVXVjM1JsYm1OcGJFSjFabVpsY2l3Z2RHaHBjeTVrWlhCMGFGUmxlSFIxY21VZ1BTQmxMbVJsY0hSb1ZHVjRkSFZ5WlN3Z2RHaHBjeTUwWlhoMGRYSmxMbXhsYm1kMGFDQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWRHVjRkSFZ5WlM1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGRHaHBjeTUwWlhoMGRYSmxXM1JkSUQwZ1pTNTBaWGgwZFhKbFczUmRMbU5zYjI1bEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDbjA3Q2xwakxuQnliM1J2ZEhsd1pTNXBjMWRsWWtkTVRYVnNkR2x3YkdWU1pXNWtaWEpVWVhKblpYUnpJRDBnSVRBN0NuWmhjaUJZY3lBOUlHTnNZWE56SUdWNGRHVnVaSE1nUVhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlBOUlIdDlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5OaGJYQnNaWE1nUFNBMExDQjBhR2x6TG1sbmJtOXlaVVJsY0hSb1JtOXlUWFZzZEdsellXMXdiR1ZEYjNCNUlEMGdiaTVwWjI1dmNtVkVaWEIwYUNBaFBUMGdkbTlwWkNBd0lEOGdiaTVwWjI1dmNtVkVaWEIwYUNBNklDRXdMQ0IwYUdsekxuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTQTlJRzR1ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUNFOVBTQjJiMmxrSURBZ1B5QnVMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0E2SUNFeExDQjBhR2x6TG5WelpWSmxibVJsY21KMVptWmxjaUE5SUhSb2FYTXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJRDA5UFNBaE1Uc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVMbU5oYkd3b2RHaHBjeXdnWlNrc0lIUm9hWE11YzJGdGNHeGxjeUE5SUdVdWMyRnRjR3hsY3l3Z2RHaHBjeTUxYzJWU1pXNWtaWEpVYjFSbGVIUjFjbVVnUFNCbExuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTd2dkR2hwY3k1MWMyVlNaVzVrWlhKaWRXWm1aWElnUFNCbExuVnpaVkpsYm1SbGNtSjFabVpsY2l3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLV0hNdWNISnZkRzkwZVhCbExtbHpWMlZpUjB4TmRXeDBhWE5oYlhCc1pWSmxibVJsY2xSaGNtZGxkQ0E5SUNFd093cDJZWElnWjNRZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNQ3dnZENBOUlEQXNJRzRnUFNBd0xDQnBJRDBnTVNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHVXNJSFJvYVhNdVgza2dQU0IwTENCMGFHbHpMbDk2SUQwZ2Jpd2dkR2hwY3k1ZmR5QTlJR2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nYzJ4bGNuQW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxGMVlYUmxjbTVwYjI0NklGTjBZWFJwWXlBdWMyeGxjbkFvS1NCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQlZjMlVnY1cwdWMyeGxjbkJSZFdGMFpYSnVhVzl1Y3lnZ2NXRXNJSEZpTENCMElDa2dhVzV6ZEdWaFpDNGlLU3dnYmk1emJHVnljRkYxWVhSbGNtNXBiMjV6S0dVc0lIUXNJR2twT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUhOc1pYSndSbXhoZENobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQnVXMmtnS3lBd1hTd2dZeUE5SUc1YmFTQXJJREZkTENCb0lEMGdibHRwSUNzZ01sMHNJSFVnUFNCdVcya2dLeUF6WFN3Z1pDQTlJSEpiYnlBcklEQmRMQ0JtSUQwZ2NsdHZJQ3NnTVYwc0lHMGdQU0J5VzI4Z0t5QXlYU3dnZUNBOUlISmJieUFySUROZE93b2dJQ0FnSUNBZ0lHbG1JQ2hoSUQwOVBTQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVmJkQ0FySURCZElEMGdiQ3dnWlZ0MElDc2dNVjBnUFNCakxDQmxXM1FnS3lBeVhTQTlJR2dzSUdWYmRDQXJJRE5kSUQwZ2RUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1lTQTlQVDBnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsVzNRZ0t5QXdYU0E5SUdRc0lHVmJkQ0FySURGZElEMGdaaXdnWlZ0MElDc2dNbDBnUFNCdExDQmxXM1FnS3lBelhTQTlJSGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFVnSVQwOUlIZ2dmSHdnYkNBaFBUMGdaQ0I4ZkNCaklDRTlQU0JtSUh4OElHZ2dJVDA5SUcwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0F4SUMwZ1lTd2daeUE5SUd3Z0tpQmtJQ3NnWXlBcUlHWWdLeUJvSUNvZ2JTQXJJSFVnS2lCNExDQndJRDBnWnlBK1BTQXdJRDhnTVNBNklDMHhMQ0JmSUQwZ01TQXRJR2NnS2lCbk93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1h5QStJRTUxYldKbGNpNUZVRk5KVEU5T0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWWlBOUlFMWhkR2d1YzNGeWRDaGZLU3dnUVNBOUlFMWhkR2d1WVhSaGJqSW9ZaXdnWnlBcUlIQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkaUE5SUUxaGRHZ3VjMmx1S0hZZ0tpQkJLU0F2SUdJc0lHRWdQU0JOWVhSb0xuTnBiaWhoSUNvZ1FTa2dMeUJpT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnWVNBcUlIQTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHNJRDBnYkNBcUlIWWdLeUJrSUNvZ2VTd2dZeUE5SUdNZ0tpQjJJQ3NnWmlBcUlIa3NJR2dnUFNCb0lDb2dkaUFySUcwZ0tpQjVMQ0IxSUQwZ2RTQXFJSFlnS3lCNElDb2dlU3dnZGlBOVBUMGdNU0F0SUdFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpSUQwZ01TQXZJRTFoZEdndWMzRnlkQ2hzSUNvZ2JDQXJJR01nS2lCaklDc2dhQ0FxSUdnZ0t5QjFJQ29nZFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc0lDbzlJR0lzSUdNZ0tqMGdZaXdnYUNBcVBTQmlMQ0IxSUNvOUlHSTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1pWdDBYU0E5SUd3c0lHVmJkQ0FySURGZElEMGdZeXdnWlZ0MElDc2dNbDBnUFNCb0xDQmxXM1FnS3lBelhTQTlJSFU3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nYlhWc2RHbHdiSGxSZFdGMFpYSnVhVzl1YzBac1lYUW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ0lDQWdJR3hsZENCaElEMGdibHRwWFN3Z2JDQTlJRzViYVNBcklERmRMQ0JqSUQwZ2JsdHBJQ3NnTWwwc0lHZ2dQU0J1VzJrZ0t5QXpYU3dnZFNBOUlISmJiMTBzSUdRZ1BTQnlXMjhnS3lBeFhTd2daaUE5SUhKYmJ5QXJJREpkTENCdElEMGdjbHR2SUNzZ00xMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJkRjBnUFNCaElDb2diU0FySUdnZ0tpQjFJQ3NnYkNBcUlHWWdMU0JqSUNvZ1pDd2daVnQwSUNzZ01WMGdQU0JzSUNvZ2JTQXJJR2dnS2lCa0lDc2dZeUFxSUhVZ0xTQmhJQ29nWml3Z1pWdDBJQ3NnTWwwZ1BTQmpJQ29nYlNBcklHZ2dLaUJtSUNzZ1lTQXFJR1FnTFNCc0lDb2dkU3dnWlZ0MElDc2dNMTBnUFNCb0lDb2diU0F0SUdFZ0tpQjFJQzBnYkNBcUlHUWdMU0JqSUNvZ1ppd2daVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQjRLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTRPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIZ29aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYM2dnUFNCbExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnZVNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZVRzS0lDQWdJSDBLSUNBZ0lITmxkQ0I1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5NUlEMGdaU3dnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMElIb29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzbzdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2VpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZlaUE5SUdVc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1RzS0lDQWdJSDBLSUNBZ0lHZGxkQ0IzS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkzT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSGNvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDNjZ1BTQmxMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDazdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NElEMGdaU3dnZEdocGN5NWZlU0E5SUhRc0lIUm9hWE11WDNvZ1BTQnVMQ0IwYUdsekxsOTNJRDBnYVN3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0hSb2FYTXVYM2dzSUhSb2FYTXVYM2tzSUhSb2FYTXVYM29zSUhSb2FYTXVYM2NwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnUFNCbExuZ3NJSFJvYVhNdVgza2dQU0JsTG5rc0lIUm9hWE11WDNvZ1BTQmxMbm9zSUhSb2FYTXVYM2NnUFNCbExuY3NJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxRmRXeGxjaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0NFb1pTQW1KaUJsTG1selJYVnNaWElwS1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSWxSSVVrVkZMbEYxWVhSbGNtNXBiMjQ2SUM1elpYUkdjbTl0UlhWc1pYSW9LU0J1YjNjZ1pYaHdaV04wY3lCaGJpQkZkV3hsY2lCeWIzUmhkR2x2YmlCeVlYUm9aWElnZEdoaGJpQmhJRlpsWTNSdmNqTWdZVzVrSUc5eVpHVnlMaUlwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1ZmVDd2dhU0E5SUdVdVgza3NJSElnUFNCbExsOTZMQ0J2SUQwZ1pTNWZiM0prWlhJc0lHRWdQU0JOWVhSb0xtTnZjeXdnYkNBOUlFMWhkR2d1YzJsdUxDQmpJRDBnWVNodUlDOGdNaWtzSUdnZ1BTQmhLR2tnTHlBeUtTd2dkU0E5SUdFb2NpQXZJRElwTENCa0lEMGdiQ2h1SUM4Z01pa3NJR1lnUFNCc0tHa2dMeUF5S1N3Z2JTQTlJR3dvY2lBdklESXBPd29nSUNBZ0lDQWdJSE4zYVhSamFDaHZLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpV0ZsYUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNnZ1BTQmtJQ29nYUNBcUlIVWdLeUJqSUNvZ1ppQXFJRzBzSUhSb2FYTXVYM2tnUFNCaklDb2daaUFxSUhVZ0xTQmtJQ29nYUNBcUlHMHNJSFJvYVhNdVgzb2dQU0JqSUNvZ2FDQXFJRzBnS3lCa0lDb2daaUFxSUhVc0lIUm9hWE11WDNjZ1BTQmpJQ29nYUNBcUlIVWdMU0JrSUNvZ1ppQXFJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXVmhhSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2dnUFNCa0lDb2dhQ0FxSUhVZ0t5QmpJQ29nWmlBcUlHMHNJSFJvYVhNdVgza2dQU0JqSUNvZ1ppQXFJSFVnTFNCa0lDb2dhQ0FxSUcwc0lIUm9hWE11WDNvZ1BTQmpJQ29nYUNBcUlHMGdMU0JrSUNvZ1ppQXFJSFVzSUhSb2FYTXVYM2NnUFNCaklDb2dhQ0FxSUhVZ0t5QmtJQ29nWmlBcUlHMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVdsaFpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzZ2dQU0JrSUNvZ2FDQXFJSFVnTFNCaklDb2daaUFxSUcwc0lIUm9hWE11WDNrZ1BTQmpJQ29nWmlBcUlIVWdLeUJrSUNvZ2FDQXFJRzBzSUhSb2FYTXVYM29nUFNCaklDb2dhQ0FxSUcwZ0t5QmtJQ29nWmlBcUlIVXNJSFJvYVhNdVgzY2dQU0JqSUNvZ2FDQXFJSFVnTFNCa0lDb2daaUFxSUcwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpV2xsWUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNnZ1BTQmtJQ29nYUNBcUlIVWdMU0JqSUNvZ1ppQXFJRzBzSUhSb2FYTXVYM2tnUFNCaklDb2daaUFxSUhVZ0t5QmtJQ29nYUNBcUlHMHNJSFJvYVhNdVgzb2dQU0JqSUNvZ2FDQXFJRzBnTFNCa0lDb2daaUFxSUhVc0lIUm9hWE11WDNjZ1BTQmpJQ29nYUNBcUlIVWdLeUJrSUNvZ1ppQXFJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXVnBZSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2dnUFNCa0lDb2dhQ0FxSUhVZ0t5QmpJQ29nWmlBcUlHMHNJSFJvYVhNdVgza2dQU0JqSUNvZ1ppQXFJSFVnS3lCa0lDb2dhQ0FxSUcwc0lIUm9hWE11WDNvZ1BTQmpJQ29nYUNBcUlHMGdMU0JrSUNvZ1ppQXFJSFVzSUhSb2FYTXVYM2NnUFNCaklDb2dhQ0FxSUhVZ0xTQmtJQ29nWmlBcUlHMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVdGcFpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzZ2dQU0JrSUNvZ2FDQXFJSFVnTFNCaklDb2daaUFxSUcwc0lIUm9hWE11WDNrZ1BTQmpJQ29nWmlBcUlIVWdMU0JrSUNvZ2FDQXFJRzBzSUhSb2FYTXVYM29nUFNCaklDb2dhQ0FxSUcwZ0t5QmtJQ29nWmlBcUlIVXNJSFJvYVhNdVgzY2dQU0JqSUNvZ2FDQXFJSFVnS3lCa0lDb2daaUFxSUcwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVYVmhkR1Z5Ym1sdmJqb2dMbk5sZEVaeWIyMUZkV3hsY2lncElHVnVZMjkxYm5SbGNtVmtJR0Z1SUhWdWEyNXZkMjRnYjNKa1pYSTZJQ0lnS3lCdktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUNFeElDWW1JSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxQmVHbHpRVzVuYkdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZENBdklESXNJR2tnUFNCTllYUm9Mbk5wYmlodUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBOUlHVXVlQ0FxSUdrc0lIUm9hWE11WDNrZ1BTQmxMbmtnS2lCcExDQjBhR2x6TGw5NklEMGdaUzU2SUNvZ2FTd2dkR2hwY3k1ZmR5QTlJRTFoZEdndVkyOXpLRzRwTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVbTkwWVhScGIyNU5ZWFJ5YVhnb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVsYkdWdFpXNTBjeXdnYmlBOUlIUmJNRjBzSUdrZ1BTQjBXelJkTENCeUlEMGdkRnM0WFN3Z2J5QTlJSFJiTVYwc0lHRWdQU0IwV3pWZExDQnNJRDBnZEZzNVhTd2dZeUE5SUhSYk1sMHNJR2dnUFNCMFd6WmRMQ0IxSUQwZ2RGc3hNRjBzSUdRZ1BTQnVJQ3NnWVNBcklIVTdDaUFnSUNBZ0lDQWdhV1lnS0dRZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ0xqVWdMeUJOWVhSb0xuTnhjblFvWkNBcklERXBPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDkzSUQwZ0xqSTFJQzhnWml3Z2RHaHBjeTVmZUNBOUlDaG9JQzBnYkNrZ0tpQm1MQ0IwYUdsekxsOTVJRDBnS0hJZ0xTQmpLU0FxSUdZc0lIUm9hWE11WDNvZ1BTQW9ieUF0SUdrcElDb2daanNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0c0Z1BpQmhJQ1ltSUc0Z1BpQjFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ01pQXFJRTFoZEdndWMzRnlkQ2d4SUNzZ2JpQXRJR0VnTFNCMUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZkeUE5SUNob0lDMGdiQ2tnTHlCbUxDQjBhR2x6TGw5NElEMGdMakkxSUNvZ1ppd2dkR2hwY3k1ZmVTQTlJQ2hwSUNzZ2J5a2dMeUJtTENCMGFHbHpMbDk2SUQwZ0tISWdLeUJqS1NBdklHWTdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hoSUQ0Z2RTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SURJZ0tpQk5ZWFJvTG5OeGNuUW9NU0FySUdFZ0xTQnVJQzBnZFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzY2dQU0FvY2lBdElHTXBJQzhnWml3Z2RHaHBjeTVmZUNBOUlDaHBJQ3NnYnlrZ0x5Qm1MQ0IwYUdsekxsOTVJRDBnTGpJMUlDb2daaXdnZEdocGN5NWZlaUE5SUNoc0lDc2dhQ2tnTHlCbU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdNaUFxSUUxaGRHZ3VjM0Z5ZENneElDc2dkU0F0SUc0Z0xTQmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZHlBOUlDaHZJQzBnYVNrZ0x5Qm1MQ0IwYUdsekxsOTRJRDBnS0hJZ0t5QmpLU0F2SUdZc0lIUm9hWE11WDNrZ1BTQW9iQ0FySUdncElDOGdaaXdnZEdocGN5NWZlaUE5SUM0eU5TQXFJR1k3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFZXNXBkRlpsWTNSdmNuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWtiM1FvZENrZ0t5QXhPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVJRHdnVG5WdFltVnlMa1ZRVTBsTVQwNGdQeUFvYmlBOUlEQXNJRTFoZEdndVlXSnpLR1V1ZUNrZ1BpQk5ZWFJvTG1GaWN5aGxMbm9wSUQ4Z0tIUm9hWE11WDNnZ1BTQXRaUzU1TENCMGFHbHpMbDk1SUQwZ1pTNTRMQ0IwYUdsekxsOTZJRDBnTUN3Z2RHaHBjeTVmZHlBOUlHNHBJRG9nS0hSb2FYTXVYM2dnUFNBd0xDQjBhR2x6TGw5NUlEMGdMV1V1ZWl3Z2RHaHBjeTVmZWlBOUlHVXVlU3dnZEdocGN5NWZkeUE5SUc0cEtTQTZJQ2gwYUdsekxsOTRJRDBnWlM1NUlDb2dkQzU2SUMwZ1pTNTZJQ29nZEM1NUxDQjBhR2x6TGw5NUlEMGdaUzU2SUNvZ2RDNTRJQzBnWlM1NElDb2dkQzU2TENCMGFHbHpMbDk2SUQwZ1pTNTRJQ29nZEM1NUlDMGdaUzU1SUNvZ2RDNTRMQ0IwYUdsekxsOTNJRDBnYmlrc0lIUm9hWE11Ym05eWJXRnNhWHBsS0NrN0NpQWdJQ0I5Q2lBZ0lDQmhibWRzWlZSdktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdNaUFxSUUxaGRHZ3VZV052Y3loTllYUm9MbUZpY3lodGRDaDBhR2x6TG1SdmRDaGxLU3dnTFRFc0lERXBLU2s3Q2lBZ0lDQjlDaUFnSUNCeWIzUmhkR1ZVYjNkaGNtUnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WVc1bmJHVlVieWhsS1RzS0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ01Da2djbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0JOWVhSb0xtMXBiaWd4TENCMElDOGdiaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyeGxjbkFvWlN3Z2FTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnBaR1Z1ZEdsMGVTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9NQ3dnTUN3Z01Dd2dNU2s3Q2lBZ0lDQjlDaUFnSUNCcGJuWmxjblFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl1YW5WbllYUmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIyNXFkV2RoZEdVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnZ0tqMGdMVEVzSUhSb2FYTXVYM2tnS2owZ0xURXNJSFJvYVhNdVgzb2dLajBnTFRFc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdSdmRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dLaUJsTGw5NElDc2dkR2hwY3k1ZmVTQXFJR1V1WDNrZ0t5QjBhR2x6TGw5NklDb2daUzVmZWlBcklIUm9hWE11WDNjZ0tpQmxMbDkzT3dvZ0lDQWdmUW9nSUNBZ2JHVnVaM1JvVTNFb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnZ0tpQjBhR2x6TGw5NElDc2dkR2hwY3k1ZmVTQXFJSFJvYVhNdVgza2dLeUIwYUdsekxsOTZJQ29nZEdocGN5NWZlaUFySUhSb2FYTXVYM2NnS2lCMGFHbHpMbDkzT3dvZ0lDQWdmUW9nSUNBZ2JHVnVaM1JvS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbk54Y25Rb2RHaHBjeTVmZUNBcUlIUm9hWE11WDNnZ0t5QjBhR2x6TGw5NUlDb2dkR2hwY3k1ZmVTQXJJSFJvYVhNdVgzb2dLaUIwYUdsekxsOTZJQ3NnZEdocGN5NWZkeUFxSUhSb2FYTXVYM2NwT3dvZ0lDQWdmUW9nSUNBZ2JtOXliV0ZzYVhwbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1c1pXNW5kR2dvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBOVBUMGdNQ0EvSUNoMGFHbHpMbDk0SUQwZ01Dd2dkR2hwY3k1ZmVTQTlJREFzSUhSb2FYTXVYM29nUFNBd0xDQjBhR2x6TGw5M0lEMGdNU2tnT2lBb1pTQTlJREVnTHlCbExDQjBhR2x6TGw5NElEMGdkR2hwY3k1ZmVDQXFJR1VzSUhSb2FYTXVYM2tnUFNCMGFHbHpMbDk1SUNvZ1pTd2dkR2hwY3k1ZmVpQTlJSFJvYVhNdVgzb2dLaUJsTENCMGFHbHpMbDkzSUQwZ2RHaHBjeTVmZHlBcUlHVXBMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRkV3gwYVhCc2VTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ0lUMDlJSFp2YVdRZ01DQS9JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxGMVlYUmxjbTVwYjI0NklDNXRkV3gwYVhCc2VTZ3BJRzV2ZHlCdmJteDVJR0ZqWTJWd2RITWdiMjVsSUdGeVozVnRaVzUwTGlCVmMyVWdMbTExYkhScGNHeDVVWFZoZEdWeWJtbHZibk1vSUdFc0lHSWdLU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbTExYkhScGNHeDVVWFZoZEdWeWJtbHZibk1vWlN3Z2RDa3BJRG9nZEdocGN5NXRkV3gwYVhCc2VWRjFZWFJsY201cGIyNXpLSFJvYVhNc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnY0hKbGJYVnNkR2x3Ykhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VVhWaGRHVnlibWx2Ym5Nb1pTd2dkR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnRkV3gwYVhCc2VWRjFZWFJsY201cGIyNXpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVYM2dzSUdrZ1BTQmxMbDk1TENCeUlEMGdaUzVmZWl3Z2J5QTlJR1V1WDNjc0lHRWdQU0IwTGw5NExDQnNJRDBnZEM1ZmVTd2dZeUE5SUhRdVgzb3NJR2dnUFNCMExsOTNPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NElEMGdiaUFxSUdnZ0t5QnZJQ29nWVNBcklHa2dLaUJqSUMwZ2NpQXFJR3dzSUhSb2FYTXVYM2tnUFNCcElDb2dhQ0FySUc4Z0tpQnNJQ3NnY2lBcUlHRWdMU0J1SUNvZ1l5d2dkR2hwY3k1ZmVpQTlJSElnS2lCb0lDc2dieUFxSUdNZ0t5QnVJQ29nYkNBdElHa2dLaUJoTENCMGFHbHpMbDkzSUQwZ2J5QXFJR2dnTFNCdUlDb2dZU0F0SUdrZ0tpQnNJQzBnY2lBcUlHTXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITnNaWEp3S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnTUNrZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNBZ0lDQWdhV1lnS0hRZ1BUMDlJREVwSUhKbGRIVnliaUIwYUdsekxtTnZjSGtvWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbDk0TENCcElEMGdkR2hwY3k1ZmVTd2djaUE5SUhSb2FYTXVYM29zSUc4Z1BTQjBhR2x6TGw5M0xDQmhJRDBnYnlBcUlHVXVYM2NnS3lCdUlDb2daUzVmZUNBcklHa2dLaUJsTGw5NUlDc2djaUFxSUdVdVgzbzdDaUFnSUNBZ0lDQWdhV1lnS0dFZ1BDQXdJRDhnS0hSb2FYTXVYM2NnUFNBdFpTNWZkeXdnZEdocGN5NWZlQ0E5SUMxbExsOTRMQ0IwYUdsekxsOTVJRDBnTFdVdVgza3NJSFJvYVhNdVgzb2dQU0F0WlM1ZmVpd2dZU0E5SUMxaEtTQTZJSFJvYVhNdVkyOXdlU2hsS1N3Z1lTQStQU0F4S1NCeVpYUjFjbTRnZEdocGN5NWZkeUE5SUc4c0lIUm9hWE11WDNnZ1BTQnVMQ0IwYUdsekxsOTVJRDBnYVN3Z2RHaHBjeTVmZWlBOUlISXNJSFJvYVhNN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNBeElDMGdZU0FxSUdFN0NpQWdJQ0FnSUNBZ2FXWWdLR3dnUEQwZ1RuVnRZbVZ5TGtWUVUwbE1UMDRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQXhJQzBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNjZ1BTQm1JQ29nYnlBcklIUWdLaUIwYUdsekxsOTNMQ0IwYUdsekxsOTRJRDBnWmlBcUlHNGdLeUIwSUNvZ2RHaHBjeTVmZUN3Z2RHaHBjeTVmZVNBOUlHWWdLaUJwSUNzZ2RDQXFJSFJvYVhNdVgza3NJSFJvYVhNdVgzb2dQU0JtSUNvZ2NpQXJJSFFnS2lCMGFHbHpMbDk2TENCMGFHbHpMbTV2Y20xaGJHbDZaU2dwTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCaklEMGdUV0YwYUM1emNYSjBLR3dwTENCb0lEMGdUV0YwYUM1aGRHRnVNaWhqTENCaEtTd2dkU0E5SUUxaGRHZ3VjMmx1S0NneElDMGdkQ2tnS2lCb0tTQXZJR01zSUdRZ1BTQk5ZWFJvTG5OcGJpaDBJQ29nYUNrZ0x5QmpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5M0lEMGdieUFxSUhVZ0t5QjBhR2x6TGw5M0lDb2daQ3dnZEdocGN5NWZlQ0E5SUc0Z0tpQjFJQ3NnZEdocGN5NWZlQ0FxSUdRc0lIUm9hWE11WDNrZ1BTQnBJQ29nZFNBcklIUm9hWE11WDNrZ0tpQmtMQ0IwYUdsekxsOTZJRDBnY2lBcUlIVWdLeUIwYUdsekxsOTZJQ29nWkN3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJ4bGNuQlJkV0YwWlhKdWFXOXVjeWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpiM0I1S0dVcExuTnNaWEp3S0hRc0lHNHBPd29nSUNBZ2ZRb2dJQ0FnY21GdVpHOXRLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnVFdGMGFDNXlZVzVrYjIwb0tTd2dkQ0E5SUUxaGRHZ3VjM0Z5ZENneElDMGdaU2tzSUc0Z1BTQk5ZWFJvTG5OeGNuUW9aU2tzSUdrZ1BTQXlJQ29nVFdGMGFDNVFTU0FxSUUxaGRHZ3VjbUZ1Wkc5dEtDa3NJSElnUFNBeUlDb2dUV0YwYUM1UVNTQXFJRTFoZEdndWNtRnVaRzl0S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0hRZ0tpQk5ZWFJvTG1OdmN5aHBLU3dnYmlBcUlFMWhkR2d1YzJsdUtISXBMQ0J1SUNvZ1RXRjBhQzVqYjNNb2Npa3NJSFFnS2lCTllYUm9Mbk5wYmlocEtTazdDaUFnSUNCOUNpQWdJQ0JsY1hWaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTGw5NElEMDlQU0IwYUdsekxsOTRJQ1ltSUdVdVgza2dQVDA5SUhSb2FYTXVYM2tnSmlZZ1pTNWZlaUE5UFQwZ2RHaHBjeTVmZWlBbUppQmxMbDkzSUQwOVBTQjBhR2x6TGw5M093b2dJQ0FnZlFvZ0lDQWdabkp2YlVGeWNtRjVLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dQU0JsVzNSZExDQjBhR2x6TGw5NUlEMGdaVnQwSUNzZ01WMHNJSFJvYVhNdVgzb2dQU0JsVzNRZ0t5QXlYU3dnZEdocGN5NWZkeUE5SUdWYmRDQXJJRE5kTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBGeWNtRjVLR1VnUFNCYlhTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pWdDBYU0E5SUhSb2FYTXVYM2dzSUdWYmRDQXJJREZkSUQwZ2RHaHBjeTVmZVN3Z1pWdDBJQ3NnTWwwZ1BTQjBhR2x6TGw5NkxDQmxXM1FnS3lBelhTQTlJSFJvYVhNdVgzY3NJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0E5SUdVdVoyVjBXQ2gwS1N3Z2RHaHBjeTVmZVNBOUlHVXVaMlYwV1NoMEtTd2dkR2hwY3k1ZmVpQTlJR1V1WjJWMFdpaDBLU3dnZEdocGN5NWZkeUE5SUdVdVoyVjBWeWgwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUY5dmJrTm9ZVzVuWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1gyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTQjdmUXA5T3dwbmRDNXdjbTkwYjNSNWNHVXVhWE5SZFdGMFpYSnVhVzl1SUQwZ0lUQTdDblpoY2lCTklEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREFzSUhRZ1BTQXdMQ0J1SUQwZ01DbDdDaUFnSUNBZ0lDQWdkR2hwY3k1NElEMGdaU3dnZEdocGN5NTVJRDBnZEN3Z2RHaHBjeTU2SUQwZ2Jqc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z1BUMDlJSFp2YVdRZ01DQW1KaUFvYmlBOUlIUm9hWE11ZWlrc0lIUm9hWE11ZUNBOUlHVXNJSFJvYVhNdWVTQTlJSFFzSUhSb2FYTXVlaUE5SUc0c0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsekxua2dQU0JsTENCMGFHbHpMbm9nUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTVJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGb29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxub2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFEyOXRjRzl1Wlc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZUNBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTU1SUQwZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbm9nUFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW1sdVpHVjRJR2x6SUc5MWRDQnZaaUJ5WVc1blpUb2dJaUFySUdVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFTnZiWEJ2Ym1WdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURBNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJREU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NU93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElESTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU2T3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKcGJtUmxlQ0JwY3lCdmRYUWdiMllnY21GdVoyVTZJQ0lnS3lCbEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvZEdocGN5NTRMQ0IwYUdsekxua3NJSFJvYVhNdWVpazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0TENCMGFHbHpMbmtnUFNCbExua3NJSFJvYVhNdWVpQTlJR1V1ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGa1pDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ0lUMDlJSFp2YVdRZ01DQS9JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjak02SUM1aFpHUW9LU0J1YjNjZ2IyNXNlU0JoWTJObGNIUnpJRzl1WlNCaGNtZDFiV1Z1ZEM0Z1ZYTmxJQzVoWkdSV1pXTjBiM0p6S0NCaExDQmlJQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTVoWkdSV1pXTjBiM0p6S0dVc0lIUXBLU0E2SUNoMGFHbHpMbmdnS3owZ1pTNTRMQ0IwYUdsekxua2dLejBnWlM1NUxDQjBhR2x6TG5vZ0t6MGdaUzU2TENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdGa1pGTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBclBTQmxMQ0IwYUdsekxua2dLejBnWlN3Z2RHaHBjeTU2SUNzOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JXWldOMGIzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQ3NnZEM1NExDQjBhR2x6TG5rZ1BTQmxMbmtnS3lCMExua3NJSFJvYVhNdWVpQTlJR1V1ZWlBcklIUXVlaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkZOallXeGxaRlpsWTNSdmNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FyUFNCbExuZ2dLaUIwTENCMGFHbHpMbmtnS3owZ1pTNTVJQ29nZEN3Z2RHaHBjeTU2SUNzOUlHVXVlaUFxSUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRXSW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDRTlQU0IyYjJsa0lEQWdQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l6T2lBdWMzVmlLQ2tnYm05M0lHOXViSGtnWVdOalpYQjBjeUJ2Ym1VZ1lYSm5kVzFsYm5RdUlGVnpaU0F1YzNWaVZtVmpkRzl5Y3lnZ1lTd2dZaUFwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11YzNWaVZtVmpkRzl5Y3lobExDQjBLU2tnT2lBb2RHaHBjeTU0SUMwOUlHVXVlQ3dnZEdocGN5NTVJQzA5SUdVdWVTd2dkR2hwY3k1NklDMDlJR1V1ZWl3Z2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCemRXSlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0xUMGdaU3dnZEdocGN5NTVJQzA5SUdVc0lIUm9hWE11ZWlBdFBTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM1ZpVm1WamRHOXljeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXVlQ0F0SUhRdWVDd2dkR2hwY3k1NUlEMGdaUzU1SUMwZ2RDNTVMQ0IwYUdsekxub2dQU0JsTG5vZ0xTQjBMbm9zSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUhadmFXUWdNQ0EvSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pNNklDNXRkV3gwYVhCc2VTZ3BJRzV2ZHlCdmJteDVJR0ZqWTJWd2RITWdiMjVsSUdGeVozVnRaVzUwTGlCVmMyVWdMbTExYkhScGNHeDVWbVZqZEc5eWN5Z2dZU3dnWWlBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWJYVnNkR2x3YkhsV1pXTjBiM0p6S0dVc0lIUXBLU0E2SUNoMGFHbHpMbmdnS2owZ1pTNTRMQ0IwYUdsekxua2dLajBnWlM1NUxDQjBhR2x6TG5vZ0tqMGdaUzU2TENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1VTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ285SUdVc0lIUm9hWE11ZVNBcVBTQmxMQ0IwYUdsekxub2dLajBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1Vm1WamRHOXljeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXVlQ0FxSUhRdWVDd2dkR2hwY3k1NUlEMGdaUzU1SUNvZ2RDNTVMQ0IwYUdsekxub2dQU0JsTG5vZ0tpQjBMbm9zSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVVjFiR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQW1KaUJsTG1selJYVnNaWElnZkh3Z1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbUZ3Y0d4NVJYVnNaWElvS1NCdWIzY2daWGh3WldOMGN5QmhiaUJGZFd4bGNpQnliM1JoZEdsdmJpQnlZWFJvWlhJZ2RHaGhiaUJoSUZabFkzUnZjak1nWVc1a0lHOXlaR1Z5TGlJcExDQjBhR2x6TG1Gd2NHeDVVWFZoZEdWeWJtbHZiaWg1YkM1elpYUkdjbTl0UlhWc1pYSW9aU2twT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxCZUdselFXNW5iR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Gd2NHeDVVWFZoZEdWeWJtbHZiaWg1YkM1elpYUkdjbTl0UVhocGMwRnVaMnhsS0dVc0lIUXBLVHNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE15aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuZ3NJRzRnUFNCMGFHbHpMbmtzSUdrZ1BTQjBhR2x6TG5vc0lISWdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0J5V3pCZElDb2dkQ0FySUhKYk0xMGdLaUJ1SUNzZ2NsczJYU0FxSUdrc0lIUm9hWE11ZVNBOUlISmJNVjBnS2lCMElDc2djbHMwWFNBcUlHNGdLeUJ5V3pkZElDb2dhU3dnZEdocGN5NTZJRDBnY2xzeVhTQXFJSFFnS3lCeVd6VmRJQ29nYmlBcklISmJPRjBnS2lCcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxPYjNKdFlXeE5ZWFJ5YVhnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Gd2NHeDVUV0YwY21sNE15aGxLUzV1YjNKdFlXeHBlbVVvS1RzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDROQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbmdzSUc0Z1BTQjBhR2x6TG5rc0lHa2dQU0IwYUdsekxub3NJSElnUFNCbExtVnNaVzFsYm5SekxDQnZJRDBnTVNBdklDaHlXek5kSUNvZ2RDQXJJSEpiTjEwZ0tpQnVJQ3NnY2xzeE1WMGdLaUJwSUNzZ2Nsc3hOVjBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0FvY2xzd1hTQXFJSFFnS3lCeVd6UmRJQ29nYmlBcklISmJPRjBnS2lCcElDc2djbHN4TWwwcElDb2dieXdnZEdocGN5NTVJRDBnS0hKYk1WMGdLaUIwSUNzZ2NsczFYU0FxSUc0Z0t5QnlXemxkSUNvZ2FTQXJJSEpiTVROZEtTQXFJRzhzSUhSb2FYTXVlaUE5SUNoeVd6SmRJQ29nZENBcklISmJObDBnS2lCdUlDc2djbHN4TUYwZ0tpQnBJQ3NnY2xzeE5GMHBJQ29nYnl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVVWFZoZEdWeWJtbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbmdzSUc0Z1BTQjBhR2x6TG5rc0lHa2dQU0IwYUdsekxub3NJSElnUFNCbExuZ3NJRzhnUFNCbExua3NJR0VnUFNCbExub3NJR3dnUFNCbExuY3NJR01nUFNCc0lDb2dkQ0FySUc4Z0tpQnBJQzBnWVNBcUlHNHNJR2dnUFNCc0lDb2diaUFySUdFZ0tpQjBJQzBnY2lBcUlHa3NJSFVnUFNCc0lDb2dhU0FySUhJZ0tpQnVJQzBnYnlBcUlIUXNJR1FnUFNBdGNpQXFJSFFnTFNCdklDb2diaUF0SUdFZ0tpQnBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmpJQ29nYkNBcklHUWdLaUF0Y2lBcklHZ2dLaUF0WVNBdElIVWdLaUF0Ynl3Z2RHaHBjeTU1SUQwZ2FDQXFJR3dnS3lCa0lDb2dMVzhnS3lCMUlDb2dMWElnTFNCaklDb2dMV0VzSUhSb2FYTXVlaUE5SUhVZ0tpQnNJQ3NnWkNBcUlDMWhJQ3NnWXlBcUlDMXZJQzBnYUNBcUlDMXlMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjSEp2YW1WamRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLR1V1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sS1M1aGNIQnNlVTFoZEhKcGVEUW9aUzV3Y205cVpXTjBhVzl1VFdGMGNtbDRLVHNLSUNBZ0lIMEtJQ0FnSUhWdWNISnZhbVZqZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtHVXVjSEp2YW1WamRHbHZiazFoZEhKcGVFbHVkbVZ5YzJVcExtRndjR3g1VFdGMGNtbDROQ2hsTG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUgwS0lDQWdJSFJ5WVc1elptOXliVVJwY21WamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbmdzSUc0Z1BTQjBhR2x6TG5rc0lHa2dQU0IwYUdsekxub3NJSElnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCeVd6QmRJQ29nZENBcklISmJORjBnS2lCdUlDc2djbHM0WFNBcUlHa3NJSFJvYVhNdWVTQTlJSEpiTVYwZ0tpQjBJQ3NnY2xzMVhTQXFJRzRnS3lCeVd6bGRJQ29nYVN3Z2RHaHBjeTU2SUQwZ2Nsc3lYU0FxSUhRZ0t5QnlXelpkSUNvZ2JpQXJJSEpiTVRCZElDb2dhU3dnZEdocGN5NXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lIMEtJQ0FnSUdScGRtbGtaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0F2UFNCbExuZ3NJSFJvYVhNdWVTQXZQU0JsTG5rc0lIUm9hWE11ZWlBdlBTQmxMbm9zSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYVhacFpHVlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VTJOaGJHRnlLREVnTHlCbEtUc0tJQ0FnSUgwS0lDQWdJRzFwYmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldsdUtIUm9hWE11ZUN3Z1pTNTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXRhVzRvZEdocGN5NTVMQ0JsTG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG0xcGJpaDBhR2x6TG5vc0lHVXVlaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVhnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xaGVDaDBhR2x6TG5nc0lHVXVlQ2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV0Y0S0hSb2FYTXVlU3dnWlM1NUtTd2dkR2hwY3k1NklEMGdUV0YwYUM1dFlYZ29kR2hwY3k1NkxDQmxMbm9wTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbTFoZUNobExuZ3NJRTFoZEdndWJXbHVLSFF1ZUN3Z2RHaHBjeTU0S1Nrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldGNEtHVXVlU3dnVFdGMGFDNXRhVzRvZEM1NUxDQjBhR2x6TG5rcEtTd2dkR2hwY3k1NklEMGdUV0YwYUM1dFlYZ29aUzU2TENCTllYUm9MbTFwYmloMExub3NJSFJvYVhNdWVpa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhCVFkyRnNZWElvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xaGVDaGxMQ0JOWVhSb0xtMXBiaWgwTENCMGFHbHpMbmdwS1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV0WVhnb1pTd2dUV0YwYUM1dGFXNG9kQ3dnZEdocGN5NTVLU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJSFJvYVhNdWVpa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhCTVpXNW5kR2dvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1c1pXNW5kR2dvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWthWFpwWkdWVFkyRnNZWElvYmlCOGZDQXhLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaE5ZWFJvTG0xaGVDaGxMQ0JOWVhSb0xtMXBiaWgwTENCdUtTa3BPd29nSUNBZ2ZRb2dJQ0FnWm14dmIzSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndVpteHZiM0lvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNW1iRzl2Y2loMGFHbHpMbmtwTENCMGFHbHpMbm9nUFNCTllYUm9MbVpzYjI5eUtIUm9hWE11ZWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCalpXbHNLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtTmxhV3dvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNWpaV2xzS0hSb2FYTXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3VZMlZwYkNoMGFHbHpMbm9wTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MWJtUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWNtOTFibVFvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXliM1Z1WkNoMGFHbHpMbmtwTENCMGFHbHpMbm9nUFNCTllYUm9Mbkp2ZFc1a0tIUm9hWE11ZWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeWIzVnVaRlJ2V21WeWJ5Z3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdkR2hwY3k1NElEd2dNQ0EvSUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmdwSURvZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5ncExDQjBhR2x6TG5rZ1BTQjBhR2x6TG5rZ1BDQXdJRDhnVFdGMGFDNWpaV2xzS0hSb2FYTXVlU2tnT2lCTllYUm9MbVpzYjI5eUtIUm9hWE11ZVNrc0lIUm9hWE11ZWlBOUlIUm9hWE11ZWlBOElEQWdQeUJOWVhSb0xtTmxhV3dvZEdocGN5NTZLU0E2SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU2S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUc1bFoyRjBaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnTFhSb2FYTXVlQ3dnZEdocGN5NTVJRDBnTFhSb2FYTXVlU3dnZEdocGN5NTZJRDBnTFhSb2FYTXVlaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1J2ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBcUlHVXVlQ0FySUhSb2FYTXVlU0FxSUdVdWVTQXJJSFJvYVhNdWVpQXFJR1V1ZWpzS0lDQWdJSDBLSUNBZ0lHeGxibWQwYUZOeEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tpQjBhR2x6TG5nZ0t5QjBhR2x6TG5rZ0tpQjBhR2x6TG5rZ0t5QjBhR2x6TG5vZ0tpQjBhR2x6TG5vN0NpQWdJQ0I5Q2lBZ0lDQnNaVzVuZEdnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YzNGeWRDaDBhR2x6TG5nZ0tpQjBhR2x6TG5nZ0t5QjBhR2x6TG5rZ0tpQjBhR2x6TG5rZ0t5QjBhR2x6TG5vZ0tpQjBhR2x6TG5vcE93b2dJQ0FnZlFvZ0lDQWdiV0Z1YUdGMGRHRnVUR1Z1WjNSb0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GaWN5aDBhR2x6TG5ncElDc2dUV0YwYUM1aFluTW9kR2hwY3k1NUtTQXJJRTFoZEdndVlXSnpLSFJvYVhNdWVpazdDaUFnSUNCOUNpQWdJQ0J1YjNKdFlXeHBlbVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR2wyYVdSbFUyTmhiR0Z5S0hSb2FYTXViR1Z1WjNSb0tDa2dmSHdnTVNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJNWlc1bmRHZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNXZjbTFoYkdsNlpTZ3BMbTExYkhScGNHeDVVMk5oYkdGeUtHVXBPd29nSUNBZ2ZRb2dJQ0FnYkdWeWNDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FyUFNBb1pTNTRJQzBnZEdocGN5NTRLU0FxSUhRc0lIUm9hWE11ZVNBclBTQW9aUzU1SUMwZ2RHaHBjeTU1S1NBcUlIUXNJSFJvYVhNdWVpQXJQU0FvWlM1NklDMGdkR2hwY3k1NktTQXFJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JzWlhKd1ZtVmpkRzl5Y3lobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVdWVDQXJJQ2gwTG5nZ0xTQmxMbmdwSUNvZ2Jpd2dkR2hwY3k1NUlEMGdaUzU1SUNzZ0tIUXVlU0F0SUdVdWVTa2dLaUJ1TENCMGFHbHpMbm9nUFNCbExub2dLeUFvZEM1NklDMGdaUzU2S1NBcUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpjbTl6Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlIWnZhV1FnTUNBL0lDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqTTZJQzVqY205emN5Z3BJRzV2ZHlCdmJteDVJR0ZqWTJWd2RITWdiMjVsSUdGeVozVnRaVzUwTGlCVmMyVWdMbU55YjNOelZtVmpkRzl5Y3lnZ1lTd2dZaUFwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11WTNKdmMzTldaV04wYjNKektHVXNJSFFwS1NBNklIUm9hWE11WTNKdmMzTldaV04wYjNKektIUm9hWE1zSUdVcE93b2dJQ0FnZlFvZ0lDQWdZM0p2YzNOV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1ZUN3Z2FTQTlJR1V1ZVN3Z2NpQTlJR1V1ZWl3Z2J5QTlJSFF1ZUN3Z1lTQTlJSFF1ZVN3Z2JDQTlJSFF1ZWpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnYVNBcUlHd2dMU0J5SUNvZ1lTd2dkR2hwY3k1NUlEMGdjaUFxSUc4Z0xTQnVJQ29nYkN3Z2RHaHBjeTU2SUQwZ2JpQXFJR0VnTFNCcElDb2dieXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEJ5YjJwbFkzUlBibFpsWTNSdmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG14bGJtZDBhRk54S0NrN0NpQWdJQ0FnSUNBZ2FXWWdLSFFnUFQwOUlEQXBJSEpsZEhWeWJpQjBhR2x6TG5ObGRDZ3dMQ0F3TENBd0tUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVaRzkwS0hSb2FYTXBJQzhnZERzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiM0I1S0dVcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0c0cE93b2dJQ0FnZlFvZ0lDQWdjSEp2YW1WamRFOXVVR3hoYm1Vb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ieTVqYjNCNUtIUm9hWE1wTG5CeWIycGxZM1JQYmxabFkzUnZjaWhsS1N3Z2RHaHBjeTV6ZFdJb1RXOHBPd29nSUNBZ2ZRb2dJQ0FnY21WbWJHVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjM1ZpS0UxdkxtTnZjSGtvWlNrdWJYVnNkR2x3YkhsVFkyRnNZWElvTWlBcUlIUm9hWE11Wkc5MEtHVXBLU2s3Q2lBZ0lDQjlDaUFnSUNCaGJtZHNaVlJ2S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlFMWhkR2d1YzNGeWRDaDBhR2x6TG14bGJtZDBhRk54S0NrZ0tpQmxMbXhsYm1kMGFGTnhLQ2twT3dvZ0lDQWdJQ0FnSUdsbUlDaDBJRDA5UFNBd0tTQnlaWFIxY200Z1RXRjBhQzVRU1NBdklESTdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1SdmRDaGxLU0F2SUhRN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VZV052Y3lodGRDaHVMQ0F0TVN3Z01Ta3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlZVYnlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YzNGeWRDaDBhR2x6TG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0dVcEtUc0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxWRzlUY1hWaGNtVmtLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVlQ0F0SUdVdWVDd2diaUE5SUhSb2FYTXVlU0F0SUdVdWVTd2dhU0E5SUhSb2FYTXVlaUF0SUdVdWVqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQXFJSFFnS3lCdUlDb2diaUFySUdrZ0tpQnBPd29nSUNBZ2ZRb2dJQ0FnYldGdWFHRjBkR0Z1UkdsemRHRnVZMlZVYnlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1WVdKektIUm9hWE11ZUNBdElHVXVlQ2tnS3lCTllYUm9MbUZpY3loMGFHbHpMbmtnTFNCbExua3BJQ3NnVFdGMGFDNWhZbk1vZEdocGN5NTZJQzBnWlM1NktUc0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVRjR2hsY21sallXd29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkRVp5YjIxVGNHaGxjbWxqWVd4RGIyOXlaSE1vWlM1eVlXUnBkWE1zSUdVdWNHaHBMQ0JsTG5Sb1pYUmhLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFUY0dobGNtbGpZV3hEYjI5eVpITW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdUV0YwYUM1emFXNG9kQ2tnS2lCbE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCcElDb2dUV0YwYUM1emFXNG9iaWtzSUhSb2FYTXVlU0E5SUUxaGRHZ3VZMjl6S0hRcElDb2daU3dnZEdocGN5NTZJRDBnYVNBcUlFMWhkR2d1WTI5ektHNHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVTjViR2x1WkhKcFkyRnNLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFJHY205dFEzbHNhVzVrY21sallXeERiMjl5WkhNb1pTNXlZV1JwZFhNc0lHVXVkR2hsZEdFc0lHVXVlU2s3Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UTNsc2FXNWtjbWxqWVd4RGIyOXlaSE1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsSUNvZ1RXRjBhQzV6YVc0b2RDa3NJSFJvYVhNdWVTQTlJRzRzSUhSb2FYTXVlaUE5SUdVZ0tpQk5ZWFJvTG1OdmN5aDBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQjBXekV5WFN3Z2RHaHBjeTU1SUQwZ2RGc3hNMTBzSUhSb2FYTXVlaUE5SUhSYk1UUmRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVMWhkSEpwZUZOallXeGxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWhsTENBd0tTNXNaVzVuZEdnb0tTd2diaUE5SUhSb2FYTXVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWhsTENBeEtTNXNaVzVuZEdnb0tTd2dhU0E5SUhSb2FYTXVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWhsTENBeUtTNXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ2RDd2dkR2hwY3k1NUlEMGdiaXdnZEdocGN5NTZJRDBnYVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFOWVhSeWFYaERiMngxYlc0b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWnliMjFCY25KaGVTaGxMbVZzWlcxbGJuUnpMQ0IwSUNvZ05DazdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRUV0YwY21sNE0wTnZiSFZ0YmlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpuSnZiVUZ5Y21GNUtHVXVaV3hsYldWdWRITXNJSFFnS2lBektUc0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1ZUNBOVBUMGdkR2hwY3k1NElDWW1JR1V1ZVNBOVBUMGdkR2hwY3k1NUlDWW1JR1V1ZWlBOVBUMGdkR2hwY3k1Nk93b2dJQ0FnZlFvZ0lDQWdabkp2YlVGeWNtRjVLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1ZiZEYwc0lIUm9hWE11ZVNBOUlHVmJkQ0FySURGZExDQjBhR2x6TG5vZ1BTQmxXM1FnS3lBeVhTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZRWEp5WVhrb1pTQTlJRnRkTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzNSZElEMGdkR2hwY3k1NExDQmxXM1FnS3lBeFhTQTlJSFJvYVhNdWVTd2daVnQwSUNzZ01sMGdQU0IwYUdsekxub3NJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQWhQVDBnZG05cFpDQXdJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ2IyWm1jMlYwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1FnWm5KdmJTQXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2dwTGlJcExDQjBhR2x6TG5nZ1BTQmxMbWRsZEZnb2RDa3NJSFJvYVhNdWVTQTlJR1V1WjJWMFdTaDBLU3dnZEdocGN5NTZJRDBnWlM1blpYUmFLSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY21GdVpHOXRLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpMbm9nUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbUZ1Wkc5dFJHbHlaV04wYVc5dUtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdLRTFoZEdndWNtRnVaRzl0S0NrZ0xTQXVOU2tnS2lBeUxDQjBJRDBnVFdGMGFDNXlZVzVrYjIwb0tTQXFJRTFoZEdndVVFa2dLaUF5TENCdUlEMGdUV0YwYUM1emNYSjBLREVnTFNCbElDb3FJRElwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0J1SUNvZ1RXRjBhQzVqYjNNb2RDa3NJSFJvYVhNdWVTQTlJRzRnS2lCTllYUm9Mbk5wYmloMEtTd2dkR2hwY3k1NklEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJQ3BiVTNsdFltOXNMbWwwWlhKaGRHOXlYU2dwSUhzS0lDQWdJQ0FnSUNCNWFXVnNaQ0IwYUdsekxuZ3NJSGxwWld4a0lIUm9hWE11ZVN3Z2VXbGxiR1FnZEdocGN5NTZPd29nSUNBZ2ZRcDlPd3BOTG5CeWIzUnZkSGx3WlM1cGMxWmxZM1J2Y2pNZ1BTQWhNRHNLZG1GeUlFMXZJRDBnYm1WM0lFMHNJSGxzSUQwZ2JtVjNJR2QwTENCTWRDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1RTZ3hJQzhnTUN3Z01TQXZJREFzSURFZ0x5QXdLU3dnZENBOUlHNWxkeUJOS0MweElDOGdNQ3dnTFRFZ0x5QXdMQ0F0TVNBdklEQXBLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtMXBiaUE5SUdVc0lIUm9hWE11YldGNElEMGdkRHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1OdmNIa29aU2tzSUhSb2FYTXViV0Y0TG1OdmNIa29kQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRWEp5WVhrb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdNU0F2SURBc0lHNGdQU0F4SUM4Z01Dd2dhU0E5SURFZ0x5QXdMQ0J5SUQwZ0xURWdMeUF3TENCdklEMGdMVEVnTHlBd0xDQmhJRDBnTFRFZ0x5QXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiQ0E5SURBc0lHTWdQU0JsTG14bGJtZDBhRHNnYkNBOElHTTdJR3dnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnWlZ0c1hTd2dkU0E5SUdWYmJDQXJJREZkTENCa0lEMGdaVnRzSUNzZ01sMDdDaUFnSUNBZ0lDQWdJQ0FnSUdnZ1BDQjBJQ1ltSUNoMElEMGdhQ2tzSUhVZ1BDQnVJQ1ltSUNodUlEMGdkU2tzSUdRZ1BDQnBJQ1ltSUNocElEMGdaQ2tzSUdnZ1BpQnlJQ1ltSUNoeUlEMGdhQ2tzSUhVZ1BpQnZJQ1ltSUNodklEMGdkU2tzSUdRZ1BpQmhJQ1ltSUNoaElEMGdaQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTV6WlhRb2RDd2diaXdnYVNrc0lIUm9hWE11YldGNExuTmxkQ2h5TENCdkxDQmhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdNU0F2SURBc0lHNGdQU0F4SUM4Z01Dd2dhU0E5SURFZ0x5QXdMQ0J5SUQwZ0xURWdMeUF3TENCdklEMGdMVEVnTHlBd0xDQmhJRDBnTFRFZ0x5QXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiQ0E5SURBc0lHTWdQU0JsTG1OdmRXNTBPeUJzSUR3Z1l6c2diQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQmxMbWRsZEZnb2JDa3NJSFVnUFNCbExtZGxkRmtvYkNrc0lHUWdQU0JsTG1kbGRGb29iQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZ2dQQ0IwSUNZbUlDaDBJRDBnYUNrc0lIVWdQQ0J1SUNZbUlDaHVJRDBnZFNrc0lHUWdQQ0JwSUNZbUlDaHBJRDBnWkNrc0lHZ2dQaUJ5SUNZbUlDaHlJRDBnYUNrc0lIVWdQaUJ2SUNZbUlDaHZJRDBnZFNrc0lHUWdQaUJoSUNZbUlDaGhJRDBnWkNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1elpYUW9kQ3dnYml3Z2FTa3NJSFJvYVhNdWJXRjRMbk5sZENoeUxDQnZMQ0JoS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFRYjJsdWRITW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0ZyWlVWdGNIUjVLQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYUm9hWE11Wlhod1lXNWtRbmxRYjJsdWRDaGxXM1JkS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMURaVzUwWlhKQmJtUlRhWHBsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRXBwTG1OdmNIa29kQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9MalVwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTVqYjNCNUtHVXBMbk4xWWlodUtTd2dkR2hwY3k1dFlYZ3VZMjl3ZVNobEtTNWhaR1FvYmlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VDJKcVpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRZV3RsUlcxd2RIa29LU3dnZEdocGN5NWxlSEJoYm1SQ2VVOWlhbVZqZENobEtUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dVkyOXdlU2hsTG0xcGJpa3NJSFJvYVhNdWJXRjRMbU52Y0hrb1pTNXRZWGdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpVVnRjSFI1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1NElEMGdkR2hwY3k1dGFXNHVlU0E5SUhSb2FYTXViV2x1TG5vZ1BTQXhJQzhnTUN3Z2RHaHBjeTV0WVhndWVDQTlJSFJvYVhNdWJXRjRMbmtnUFNCMGFHbHpMbTFoZUM1NklEMGdMVEVnTHlBd0xDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2FYTkZiWEIwZVNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0WVhndWVDQThJSFJvYVhNdWJXbHVMbmdnZkh3Z2RHaHBjeTV0WVhndWVTQThJSFJvYVhNdWJXbHVMbmtnZkh3Z2RHaHBjeTV0WVhndWVpQThJSFJvYVhNdWJXbHVMbm83Q2lBZ0lDQjlDaUFnSUNCblpYUkRaVzUwWlhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1selJXMXdkSGtvS1NBL0lHVXVjMlYwS0RBc0lEQXNJREFwSURvZ1pTNWhaR1JXWldOMGIzSnpLSFJvYVhNdWJXbHVMQ0IwYUdsekxtMWhlQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9MalVwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVMmw2WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVhORmJYQjBlU2dwSUQ4Z1pTNXpaWFFvTUN3Z01Dd2dNQ2tnT2lCbExuTjFZbFpsWTNSdmNuTW9kR2hwY3k1dFlYZ3NJSFJvYVhNdWJXbHVLVHNLSUNBZ0lIMEtJQ0FnSUdWNGNHRnVaRUo1VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTV0YVc0b1pTa3NJSFJvYVhNdWJXRjRMbTFoZUNobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVjRjR0Z1WkVKNVZtVmpkRzl5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWMzVmlLR1VwTENCMGFHbHpMbTFoZUM1aFpHUW9aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsZUhCaGJtUkNlVk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbUZrWkZOallXeGhjaWd0WlNrc0lIUm9hWE11YldGNExtRmtaRk5qWVd4aGNpaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Y0Y0dGdVpFSjVUMkpxWldOMEtHVXBJSHNLSUNBZ0lDQWdJQ0JsTG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0NFeExDQWhNU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG1kbGIyMWxkSEo1T3dvZ0lDQWdJQ0FnSUhRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvZEM1aWIzVnVaR2x1WjBKdmVDQTlQVDBnYm5Wc2JDQW1KaUIwTG1OdmJYQjFkR1ZDYjNWdVpHbHVaMEp2ZUNncExDQmlieTVqYjNCNUtIUXVZbTkxYm1ScGJtZENiM2dwTENCaWJ5NWhjSEJzZVUxaGRISnBlRFFvWlM1dFlYUnlhWGhYYjNKc1pDa3NJSFJvYVhNdWRXNXBiMjRvWW04cEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVZMmhwYkdSeVpXNDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJRzR1YkdWdVozUm9PeUJwSUR3Z2Nqc2dhU3NyS1hSb2FYTXVaWGh3WVc1a1FubFBZbXBsWTNRb2JsdHBYU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiMjUwWVdsdWMxQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0lTaGxMbmdnUENCMGFHbHpMbTFwYmk1NElIeDhJR1V1ZUNBK0lIUm9hWE11YldGNExuZ2dmSHdnWlM1NUlEd2dkR2hwY3k1dGFXNHVlU0I4ZkNCbExua2dQaUIwYUdsekxtMWhlQzU1SUh4OElHVXVlaUE4SUhSb2FYTXViV2x1TG5vZ2ZId2daUzU2SUQ0Z2RHaHBjeTV0WVhndWVpazdDaUFnSUNCOUNpQWdJQ0JqYjI1MFlXbHVjMEp2ZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxuZ2dQRDBnWlM1dGFXNHVlQ0FtSmlCbExtMWhlQzU0SUR3OUlIUm9hWE11YldGNExuZ2dKaVlnZEdocGN5NXRhVzR1ZVNBOFBTQmxMbTFwYmk1NUlDWW1JR1V1YldGNExua2dQRDBnZEdocGN5NXRZWGd1ZVNBbUppQjBhR2x6TG0xcGJpNTZJRHc5SUdVdWJXbHVMbm9nSmlZZ1pTNXRZWGd1ZWlBOFBTQjBhR2x6TG0xaGVDNTZPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHRnlZVzFsZEdWeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1elpYUW9LR1V1ZUNBdElIUm9hWE11YldsdUxuZ3BJQzhnS0hSb2FYTXViV0Y0TG5nZ0xTQjBhR2x6TG0xcGJpNTRLU3dnS0dVdWVTQXRJSFJvYVhNdWJXbHVMbmtwSUM4Z0tIUm9hWE11YldGNExua2dMU0IwYUdsekxtMXBiaTU1S1N3Z0tHVXVlaUF0SUhSb2FYTXViV2x1TG5vcElDOGdLSFJvYVhNdWJXRjRMbm9nTFNCMGFHbHpMbTFwYmk1NktTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJU2hsTG0xaGVDNTRJRHdnZEdocGN5NXRhVzR1ZUNCOGZDQmxMbTFwYmk1NElENGdkR2hwY3k1dFlYZ3VlQ0I4ZkNCbExtMWhlQzU1SUR3Z2RHaHBjeTV0YVc0dWVTQjhmQ0JsTG0xcGJpNTVJRDRnZEdocGN5NXRZWGd1ZVNCOGZDQmxMbTFoZUM1NklEd2dkR2hwY3k1dGFXNHVlaUI4ZkNCbExtMXBiaTU2SUQ0Z2RHaHBjeTV0WVhndWVpazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VTNCb1pYSmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiR0Z0Y0ZCdmFXNTBLR1V1WTJWdWRHVnlMQ0JLYVNrc0lFcHBMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLR1V1WTJWdWRHVnlLU0E4UFNCbExuSmhaR2wxY3lBcUlHVXVjbUZrYVhWek93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMUJzWVc1bEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDd2dianNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV1YjNKdFlXd3VlQ0ErSURBZ1B5QW9kQ0E5SUdVdWJtOXliV0ZzTG5nZ0tpQjBhR2x6TG0xcGJpNTRMQ0J1SUQwZ1pTNXViM0p0WVd3dWVDQXFJSFJvYVhNdWJXRjRMbmdwSURvZ0tIUWdQU0JsTG01dmNtMWhiQzU0SUNvZ2RHaHBjeTV0WVhndWVDd2diaUE5SUdVdWJtOXliV0ZzTG5nZ0tpQjBhR2x6TG0xcGJpNTRLU3dnWlM1dWIzSnRZV3d1ZVNBK0lEQWdQeUFvZENBclBTQmxMbTV2Y20xaGJDNTVJQ29nZEdocGN5NXRhVzR1ZVN3Z2JpQXJQU0JsTG01dmNtMWhiQzU1SUNvZ2RHaHBjeTV0WVhndWVTa2dPaUFvZENBclBTQmxMbTV2Y20xaGJDNTVJQ29nZEdocGN5NXRZWGd1ZVN3Z2JpQXJQU0JsTG01dmNtMWhiQzU1SUNvZ2RHaHBjeTV0YVc0dWVTa3NJR1V1Ym05eWJXRnNMbm9nUGlBd0lEOGdLSFFnS3owZ1pTNXViM0p0WVd3dWVpQXFJSFJvYVhNdWJXbHVMbm9zSUc0Z0t6MGdaUzV1YjNKdFlXd3VlaUFxSUhSb2FYTXViV0Y0TG5vcElEb2dLSFFnS3owZ1pTNXViM0p0WVd3dWVpQXFJSFJvYVhNdWJXRjRMbm9zSUc0Z0t6MGdaUzV1YjNKdFlXd3VlaUFxSUhSb2FYTXViV2x1TG5vcExDQjBJRHc5SUMxbExtTnZibk4wWVc1MElDWW1JRzRnUGowZ0xXVXVZMjl1YzNSaGJuUTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VkhKcFlXNW5iR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtbHpSVzF3ZEhrb0tTa2djbVYwZFhKdUlDRXhPd29nSUNBZ0lDQWdJSFJvYVhNdVoyVjBRMlZ1ZEdWeUtGbHBLU3dnVjNJdWMzVmlWbVZqZEc5eWN5aDBhR2x6TG0xaGVDd2dXV2twTENCdWFTNXpkV0pXWldOMGIzSnpLR1V1WVN3Z1dXa3BMQ0JwYVM1emRXSldaV04wYjNKektHVXVZaXdnV1drcExDQnlhUzV6ZFdKV1pXTjBiM0p6S0dVdVl5d2dXV2twTENCMWJpNXpkV0pXWldOMGIzSnpLR2xwTENCdWFTa3NJR1J1TG5OMVlsWmxZM1J2Y25Nb2Nta3NJR2xwS1N3Z1VHNHVjM1ZpVm1WamRHOXljeWh1YVN3Z2Nta3BPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0ZFc0dWVpd0tJQ0FnSUNBZ0lDQWdJQ0FnZFc0dWVTd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMV1J1TG5vc0NpQWdJQ0FnSUNBZ0lDQWdJR1J1TG5rc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMVFiaTU2TEFvZ0lDQWdJQ0FnSUNBZ0lDQlFiaTU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQjFiaTU2TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdGRXNHVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHNHVlaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFdSdUxuZ3NDaUFnSUNBZ0lDQWdJQ0FnSUZCdUxub3NDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzFRYmk1NExBb2dJQ0FnSUNBZ0lDQWdJQ0F0ZFc0dWVTd0tJQ0FnSUNBZ0lDQWdJQ0FnZFc0dWVDd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMV1J1TG5rc0NpQWdJQ0FnSUNBZ0lDQWdJR1J1TG5nc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMVFiaTU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQlFiaTU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJWGR2S0hRc0lHNXBMQ0JwYVN3Z2Nta3NJRmR5S1NCOGZDQW9kQ0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVFvZ0lDQWdJQ0FnSUYwc0lDRjNieWgwTENCdWFTd2dhV2tzSUhKcExDQlhjaWtwSUQ4Z0lURWdPaUFvY1hJdVkzSnZjM05XWldOMGIzSnpLSFZ1TENCa2Jpa3NJSFFnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJSEZ5TG5nc0NpQWdJQ0FnSUNBZ0lDQWdJSEZ5TG5rc0NpQWdJQ0FnSUNBZ0lDQWdJSEZ5TG5vS0lDQWdJQ0FnSUNCZExDQjNieWgwTENCdWFTd2dhV2tzSUhKcExDQlhjaWtwT3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEJRYjJsdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVkyOXdlU2hsS1M1amJHRnRjQ2gwYUdsekxtMXBiaXdnZEdocGN5NXRZWGdwT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVWIxQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1Nta3VZMjl3ZVNobEtTNWpiR0Z0Y0NoMGFHbHpMbTFwYml3Z2RHaHBjeTV0WVhncExuTjFZaWhsS1M1c1pXNW5kR2dvS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRUp2ZFc1a2FXNW5VM0JvWlhKbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUkRaVzUwWlhJb1pTNWpaVzUwWlhJcExDQmxMbkpoWkdsMWN5QTlJSFJvYVhNdVoyVjBVMmw2WlNoS2FTa3ViR1Z1WjNSb0tDa2dLaUF1TlN3Z1pUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG0xaGVDaGxMbTFwYmlrc0lIUm9hWE11YldGNExtMXBiaWhsTG0xaGVDa3NJSFJvYVhNdWFYTkZiWEIwZVNncElDWW1JSFJvYVhNdWJXRnJaVVZ0Y0hSNUtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjFibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtMXBiaWhsTG0xcGJpa3NJSFJvYVhNdWJXRjRMbTFoZUNobExtMWhlQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVMWhkSEpwZURRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1selJXMXdkSGtvS1NBL0lIUm9hWE1nT2lBb0pIUmJNRjB1YzJWMEtIUm9hWE11YldsdUxuZ3NJSFJvYVhNdWJXbHVMbmtzSUhSb2FYTXViV2x1TG5vcExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z0pIUmJNVjB1YzJWMEtIUm9hWE11YldsdUxuZ3NJSFJvYVhNdWJXbHVMbmtzSUhSb2FYTXViV0Y0TG5vcExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z0pIUmJNbDB1YzJWMEtIUm9hWE11YldsdUxuZ3NJSFJvYVhNdWJXRjRMbmtzSUhSb2FYTXViV2x1TG5vcExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z0pIUmJNMTB1YzJWMEtIUm9hWE11YldsdUxuZ3NJSFJvYVhNdWJXRjRMbmtzSUhSb2FYTXViV0Y0TG5vcExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z0pIUmJORjB1YzJWMEtIUm9hWE11YldGNExuZ3NJSFJvYVhNdWJXbHVMbmtzSUhSb2FYTXViV2x1TG5vcExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z0pIUmJOVjB1YzJWMEtIUm9hWE11YldGNExuZ3NJSFJvYVhNdWJXbHVMbmtzSUhSb2FYTXViV0Y0TG5vcExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z0pIUmJObDB1YzJWMEtIUm9hWE11YldGNExuZ3NJSFJvYVhNdWJXRjRMbmtzSUhSb2FYTXViV2x1TG5vcExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z0pIUmJOMTB1YzJWMEtIUm9hWE11YldGNExuZ3NJSFJvYVhNdWJXRjRMbmtzSUhSb2FYTXViV0Y0TG5vcExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z2RHaHBjeTV6WlhSR2NtOXRVRzlwYm5SektDUjBLU3dnZEdocGN5azdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyeGhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1aFpHUW9aU2tzSUhSb2FYTXViV0Y0TG1Ga1pDaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YldsdUxtVnhkV0ZzY3loMGFHbHpMbTFwYmlrZ0ppWWdaUzV0WVhndVpYRjFZV3h6S0hSb2FYTXViV0Y0S1RzS0lDQWdJSDBLZlRzS1RIUXVjSEp2ZEc5MGVYQmxMbWx6UW05NE15QTlJQ0V3T3dwMllYSWdKSFFnUFNCYkNpQWdJQ0J1WlhjZ1RTd0tJQ0FnSUc1bGR5Qk5MQW9nSUNBZ2JtVjNJRTBzQ2lBZ0lDQnVaWGNnVFN3S0lDQWdJRzVsZHlCTkxBb2dJQ0FnYm1WM0lFMHNDaUFnSUNCdVpYY2dUU3dLSUNBZ0lHNWxkeUJOQ2wwc0lFcHBJRDBnYm1WM0lFMHNJR0p2SUQwZ2JtVjNJRXgwTENCdWFTQTlJRzVsZHlCTkxDQnBhU0E5SUc1bGR5Qk5MQ0J5YVNBOUlHNWxkeUJOTENCMWJpQTlJRzVsZHlCTkxDQmtiaUE5SUc1bGR5Qk5MQ0JRYmlBOUlHNWxkeUJOTENCWmFTQTlJRzVsZHlCTkxDQlhjaUE5SUc1bGR5Qk5MQ0J4Y2lBOUlHNWxkeUJOTENCSmJpQTlJRzVsZHlCTk93cG1kVzVqZEdsdmJpQjNieWh6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0J2SUQwZ2N5NXNaVzVuZEdnZ0xTQXpPeUJ5SUR3OUlHODdJSElnS3owZ015bDdDaUFnSUNBZ0lDQWdTVzR1Wm5KdmJVRnljbUY1S0hNc0lISXBPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdhUzU0SUNvZ1RXRjBhQzVoWW5Nb1NXNHVlQ2tnS3lCcExua2dLaUJOWVhSb0xtRmljeWhKYmk1NUtTQXJJR2t1ZWlBcUlFMWhkR2d1WVdKektFbHVMbm9wTENCc0lEMGdaUzVrYjNRb1NXNHBMQ0JqSUQwZ2RDNWtiM1FvU1c0cExDQm9JRDBnYmk1a2IzUW9TVzRwT3dvZ0lDQWdJQ0FnSUdsbUlDaE5ZWFJvTG0xaGVDZ3RUV0YwYUM1dFlYZ29iQ3dnWXl3Z2FDa3NJRTFoZEdndWJXbHVLR3dzSUdNc0lHZ3BLU0ErSUdFcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQWhNRHNLZlFwMllYSWdaV1lnUFNCdVpYY2dUSFFzSUhac0lEMGdibVYzSUUwc0lGaHlJRDBnYm1WM0lFMHNJRk52SUQwZ2JtVjNJRTBzSUVGdUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCTkxDQjBJRDBnTFRFcGV3b2dJQ0FnSUNBZ0lIUm9hWE11WTJWdWRHVnlJRDBnWlN3Z2RHaHBjeTV5WVdScGRYTWdQU0IwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWlc1MFpYSXVZMjl3ZVNobEtTd2dkR2hwY3k1eVlXUnBkWE1nUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZCdmFXNTBjeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1ObGJuUmxjanNLSUNBZ0lDQWdJQ0IwSUNFOVBTQjJiMmxrSURBZ1B5QnVMbU52Y0hrb2RDa2dPaUJsWmk1elpYUkdjbTl0VUc5cGJuUnpLR1VwTG1kbGRFTmxiblJsY2lodUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR1V1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1drZ1BTQk5ZWFJvTG0xaGVDaHBMQ0J1TG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0dWYmNsMHBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVlXUnBkWE1nUFNCTllYUm9Mbk54Y25Rb2FTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWlc1MFpYSXVZMjl3ZVNobExtTmxiblJsY2lrc0lIUm9hWE11Y21Ga2FYVnpJRDBnWlM1eVlXUnBkWE1zSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JwYzBWdGNIUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOElEQTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFJXMXdkSGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMlZ1ZEdWeUxuTmxkQ2d3TENBd0xDQXdLU3dnZEdocGN5NXlZV1JwZFhNZ1BTQXRNU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Ym5SaGFXNXpVRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLSFJvYVhNdVkyVnVkR1Z5S1NBOFBTQjBhR2x6TG5KaFpHbDFjeUFxSUhSb2FYTXVjbUZrYVhWek93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVrYVhOMFlXNWpaVlJ2S0hSb2FYTXVZMlZ1ZEdWeUtTQXRJSFJvYVhNdWNtRmthWFZ6T3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMGMxTndhR1Z5WlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5KaFpHbDFjeUFySUdVdWNtRmthWFZ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1ObGJuUmxjaTVrYVhOMFlXNWpaVlJ2VTNGMVlYSmxaQ2gwYUdsekxtTmxiblJsY2lrZ1BEMGdkQ0FxSUhRN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpRbTk0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXBiblJsY25ObFkzUnpVM0JvWlhKbEtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMGMxQnNZVzVsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb1pTNWthWE4wWVc1alpWUnZVRzlwYm5Rb2RHaHBjeTVqWlc1MFpYSXBLU0E4UFNCMGFHbHpMbkpoWkdsMWN6c0tJQ0FnSUgwS0lDQWdJR05zWVcxd1VHOXBiblFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1alpXNTBaWEl1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVkyOXdlU2hsS1N3Z2JpQStJSFJvYVhNdWNtRmthWFZ6SUNvZ2RHaHBjeTV5WVdScGRYTWdKaVlnS0hRdWMzVmlLSFJvYVhNdVkyVnVkR1Z5S1M1dWIzSnRZV3hwZW1Vb0tTd2dkQzV0ZFd4MGFYQnNlVk5qWVd4aGNpaDBhR2x6TG5KaFpHbDFjeWt1WVdSa0tIUm9hWE11WTJWdWRHVnlLU2tzSUhRN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJDYjNWdVpHbHVaMEp2ZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVhORmJYQjBlU2dwSUQ4Z0tHVXViV0ZyWlVWdGNIUjVLQ2tzSUdVcElEb2dLR1V1YzJWMEtIUm9hWE11WTJWdWRHVnlMQ0IwYUdsekxtTmxiblJsY2lrc0lHVXVaWGh3WVc1a1FubFRZMkZzWVhJb2RHaHBjeTV5WVdScGRYTXBMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDROQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMlZ1ZEdWeUxtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z2RHaHBjeTV5WVdScGRYTWdQU0IwYUdsekxuSmhaR2wxY3lBcUlHVXVaMlYwVFdGNFUyTmhiR1ZQYmtGNGFYTW9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMlZ1ZEdWeUxtRmtaQ2hsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdWNGNHRnVaRUo1VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUZOdkxuTjFZbFpsWTNSdmNuTW9aU3dnZEdocGN5NWpaVzUwWlhJcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1UyOHViR1Z1WjNSb1UzRW9LVHNLSUNBZ0lDQWdJQ0JwWmlBb2RDQStJSFJvYVhNdWNtRmthWFZ6SUNvZ2RHaHBjeTV5WVdScGRYTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCTllYUm9Mbk54Y25Rb2RDa3NJR2tnUFNBb2JpQXRJSFJvYVhNdWNtRmthWFZ6S1NBcUlDNDFPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU5sYm5SbGNpNWhaR1FvVTI4dWJYVnNkR2x3YkhsVFkyRnNZWElvYVNBdklHNHBLU3dnZEdocGN5NXlZV1JwZFhNZ0t6MGdhVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjFibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJWdWRHVnlMbVZ4ZFdGc2N5aGxMbU5sYm5SbGNpa2dQVDA5SUNFd0lEOGdXSEl1YzJWMEtEQXNJREFzSURFcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0dVdWNtRmthWFZ6S1NBNklGaHlMbk4xWWxabFkzUnZjbk1vWlM1alpXNTBaWElzSUhSb2FYTXVZMlZ1ZEdWeUtTNXViM0p0WVd4cGVtVW9LUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaGxMbkpoWkdsMWN5a3NJSFJvYVhNdVpYaHdZVzVrUW5sUWIybHVkQ2gyYkM1amIzQjVLR1V1WTJWdWRHVnlLUzVoWkdRb1dISXBLU3dnZEdocGN5NWxlSEJoYm1SQ2VWQnZhVzUwS0hac0xtTnZjSGtvWlM1alpXNTBaWElwTG5OMVlpaFljaWtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1alpXNTBaWEl1WlhGMVlXeHpLSFJvYVhNdVkyVnVkR1Z5S1NBbUppQmxMbkpoWkdsMWN5QTlQVDBnZEdocGN5NXlZV1JwZFhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUXA5TENCcWRDQTlJRzVsZHlCTkxDQlVieUE5SUc1bGR5Qk5MQ0JLY2lBOUlHNWxkeUJOTENCbWJpQTlJRzVsZHlCTkxDQkZieUE5SUc1bGR5Qk5MQ0JaY2lBOUlHNWxkeUJOTENCQmJ5QTlJRzVsZHlCTkxDQkRiaUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dUU3dnZENBOUlHNWxkeUJOS0RBc0lEQXNJQzB4S1NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTV2Y21sbmFXNGdQU0JsTENCMGFHbHpMbVJwY21WamRHbHZiaUE5SUhRN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG05eWFXZHBiaTVqYjNCNUtHVXBMQ0IwYUdsekxtUnBjbVZqZEdsdmJpNWpiM0I1S0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViM0pwWjJsdUxtTnZjSGtvWlM1dmNtbG5hVzRwTENCMGFHbHpMbVJwY21WamRHbHZiaTVqYjNCNUtHVXVaR2x5WldOMGFXOXVLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0YwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVqYjNCNUtIUm9hWE11WkdseVpXTjBhVzl1S1M1dGRXeDBhWEJzZVZOallXeGhjaWhsS1M1aFpHUW9kR2hwY3k1dmNtbG5hVzRwT3dvZ0lDQWdmUW9nSUNBZ2JHOXZhMEYwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhKbFkzUnBiMjR1WTI5d2VTaGxLUzV6ZFdJb2RHaHBjeTV2Y21sbmFXNHBMbTV2Y20xaGJHbDZaU2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY21WallYTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZjbWxuYVc0dVkyOXdlU2gwYUdsekxtRjBLR1VzSUdwMEtTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl6WlhOMFVHOXBiblJVYjFCdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBMbk4xWWxabFkzUnZjbk1vWlN3Z2RHaHBjeTV2Y21sbmFXNHBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQzVrYjNRb2RHaHBjeTVrYVhKbFkzUnBiMjRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1SUR3Z01DQS9JSFF1WTI5d2VTaDBhR2x6TG05eWFXZHBiaWtnT2lCMExtTnZjSGtvZEdocGN5NWthWEpsWTNScGIyNHBMbTExYkhScGNHeDVVMk5oYkdGeUtHNHBMbUZrWkNoMGFHbHpMbTl5YVdkcGJpazdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xuTnhjblFvZEdocGN5NWthWE4wWVc1alpWTnhWRzlRYjJsdWRDaGxLU2s3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZOeFZHOVFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnFkQzV6ZFdKV1pXTjBiM0p6S0dVc0lIUm9hWE11YjNKcFoybHVLUzVrYjNRb2RHaHBjeTVrYVhKbFkzUnBiMjRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUR3Z01DQS9JSFJvYVhNdWIzSnBaMmx1TG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0dVcElEb2dLR3AwTG1OdmNIa29kR2hwY3k1a2FYSmxZM1JwYjI0cExtMTFiSFJwY0d4NVUyTmhiR0Z5S0hRcExtRmtaQ2gwYUdsekxtOXlhV2RwYmlrc0lHcDBMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLR1VwS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM1JoYm1ObFUzRlViMU5sWjIxbGJuUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUZSdkxtTnZjSGtvWlNrdVlXUmtLSFFwTG0xMWJIUnBjR3g1VTJOaGJHRnlLQzQxS1N3Z1NuSXVZMjl3ZVNoMEtTNXpkV0lvWlNrdWJtOXliV0ZzYVhwbEtDa3NJR1p1TG1OdmNIa29kR2hwY3k1dmNtbG5hVzRwTG5OMVlpaFVieWs3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JsTG1ScGMzUmhibU5sVkc4b2RDa2dLaUF1TlN3Z2J5QTlJQzEwYUdsekxtUnBjbVZqZEdsdmJpNWtiM1FvU25JcExDQmhJRDBnWm00dVpHOTBLSFJvYVhNdVpHbHlaV04wYVc5dUtTd2diQ0E5SUMxbWJpNWtiM1FvU25JcExDQmpJRDBnWm00dWJHVnVaM1JvVTNFb0tTd2dhQ0E5SUUxaGRHZ3VZV0p6S0RFZ0xTQnZJQ29nYnlrc0lIVXNJR1FzSUdZc0lHMDdDaUFnSUNBZ0lDQWdhV1lnS0dnZ1BpQXdLU0JwWmlBb2RTQTlJRzhnS2lCc0lDMGdZU3dnWkNBOUlHOGdLaUJoSUMwZ2JDd2diU0E5SUhJZ0tpQm9MQ0IxSUQ0OUlEQXBJR2xtSUNoa0lENDlJQzF0S1NCcFppQW9aQ0E4UFNCdEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnTVNBdklHZzdDaUFnSUNBZ0lDQWdJQ0FnSUhVZ0tqMGdlQ3dnWkNBcVBTQjRMQ0JtSUQwZ2RTQXFJQ2gxSUNzZ2J5QXFJR1FnS3lBeUlDb2dZU2tnS3lCa0lDb2dLRzhnS2lCMUlDc2daQ0FySURJZ0tpQnNLU0FySUdNN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdRZ1BTQnlMQ0IxSUQwZ1RXRjBhQzV0WVhnb01Dd2dMU2h2SUNvZ1pDQXJJR0VwS1N3Z1ppQTlJQzExSUNvZ2RTQXJJR1FnS2lBb1pDQXJJRElnS2lCc0tTQXJJR003Q2lBZ0lDQWdJQ0FnWld4elpTQmtJRDBnTFhJc0lIVWdQU0JOWVhSb0xtMWhlQ2d3TENBdEtHOGdLaUJrSUNzZ1lTa3BMQ0JtSUQwZ0xYVWdLaUIxSUNzZ1pDQXFJQ2hrSUNzZ01pQXFJR3dwSUNzZ1l6c0tJQ0FnSUNBZ0lDQmxiSE5sSUdRZ1BEMGdMVzBnUHlBb2RTQTlJRTFoZEdndWJXRjRLREFzSUMwb0xXOGdLaUJ5SUNzZ1lTa3BMQ0JrSUQwZ2RTQStJREFnUHlBdGNpQTZJRTFoZEdndWJXbHVLRTFoZEdndWJXRjRLQzF5TENBdGJDa3NJSElwTENCbUlEMGdMWFVnS2lCMUlDc2daQ0FxSUNoa0lDc2dNaUFxSUd3cElDc2dZeWtnT2lCa0lEdzlJRzBnUHlBb2RTQTlJREFzSUdRZ1BTQk5ZWFJvTG0xcGJpaE5ZWFJvTG0xaGVDZ3RjaXdnTFd3cExDQnlLU3dnWmlBOUlHUWdLaUFvWkNBcklESWdLaUJzS1NBcklHTXBJRG9nS0hVZ1BTQk5ZWFJvTG0xaGVDZ3dMQ0F0S0c4Z0tpQnlJQ3NnWVNrcExDQmtJRDBnZFNBK0lEQWdQeUJ5SURvZ1RXRjBhQzV0YVc0b1RXRjBhQzV0WVhnb0xYSXNJQzFzS1N3Z2Npa3NJR1lnUFNBdGRTQXFJSFVnS3lCa0lDb2dLR1FnS3lBeUlDb2diQ2tnS3lCaktUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdRZ1BTQnZJRDRnTUNBL0lDMXlJRG9nY2l3Z2RTQTlJRTFoZEdndWJXRjRLREFzSUMwb2J5QXFJR1FnS3lCaEtTa3NJR1lnUFNBdGRTQXFJSFVnS3lCa0lDb2dLR1FnS3lBeUlDb2diQ2tnS3lCak93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUlDWW1JRzR1WTI5d2VTaDBhR2x6TG1ScGNtVmpkR2x2YmlrdWJYVnNkR2x3YkhsVFkyRnNZWElvZFNrdVlXUmtLSFJvYVhNdWIzSnBaMmx1S1N3Z2FTQW1KaUJwTG1OdmNIa29TbklwTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1FwTG1Ga1pDaFVieWtzSUdZN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUlRjR2hsY21Vb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUdwMExuTjFZbFpsWTNSdmNuTW9aUzVqWlc1MFpYSXNJSFJvYVhNdWIzSnBaMmx1S1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdwMExtUnZkQ2gwYUdsekxtUnBjbVZqZEdsdmJpa3NJR2tnUFNCcWRDNWtiM1FvYW5RcElDMGdiaUFxSUc0c0lISWdQU0JsTG5KaFpHbDFjeUFxSUdVdWNtRmthWFZ6T3dvZ0lDQWdJQ0FnSUdsbUlDaHBJRDRnY2lrZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQk5ZWFJvTG5OeGNuUW9jaUF0SUdrcExDQmhJRDBnYmlBdElHOHNJR3dnUFNCdUlDc2dienNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZU0E4SURBZ0ppWWdiQ0E4SURBZ1B5QnVkV3hzSURvZ1lTQThJREFnUHlCMGFHbHpMbUYwS0d3c0lIUXBJRG9nZEdocGN5NWhkQ2hoTENCMEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5UY0dobGNtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUnBjM1JoYm1ObFUzRlViMUJ2YVc1MEtHVXVZMlZ1ZEdWeUtTQThQU0JsTG5KaFpHbDFjeUFxSUdVdWNtRmthWFZ6T3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVWIxQnNZVzVsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVibTl5YldGc0xtUnZkQ2gwYUdsekxtUnBjbVZqZEdsdmJpazdDaUFnSUNBZ0lDQWdhV1lnS0hRZ1BUMDlJREFwSUhKbGRIVnliaUJsTG1ScGMzUmhibU5sVkc5UWIybHVkQ2gwYUdsekxtOXlhV2RwYmlrZ1BUMDlJREFnUHlBd0lEb2diblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUMwb2RHaHBjeTV2Y21sbmFXNHVaRzkwS0dVdWJtOXliV0ZzS1NBcklHVXVZMjl1YzNSaGJuUXBJQzhnZERzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmlBK1BTQXdJRDhnYmlBNklHNTFiR3c3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSUWJHRnVaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1ScGMzUmhibU5sVkc5UWJHRnVaU2hsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmlBOVBUMGdiblZzYkNBL0lHNTFiR3dnT2lCMGFHbHpMbUYwS0c0c0lIUXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzFCc1lXNWxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVpHbHpkR0Z1WTJWVWIxQnZhVzUwS0hSb2FYTXViM0pwWjJsdUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQTlQVDBnTUNCOGZDQmxMbTV2Y20xaGJDNWtiM1FvZEdocGN5NWthWEpsWTNScGIyNHBJQ29nZENBOElEQTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1JDYjNnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVMQ0JwTENCeUxDQnZMQ0JoTENCc0xDQmpJRDBnTVNBdklIUm9hWE11WkdseVpXTjBhVzl1TG5nc0lHZ2dQU0F4SUM4Z2RHaHBjeTVrYVhKbFkzUnBiMjR1ZVN3Z2RTQTlJREVnTHlCMGFHbHpMbVJwY21WamRHbHZiaTU2TENCa0lEMGdkR2hwY3k1dmNtbG5hVzQ3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR01nUGowZ01DQS9JQ2h1SUQwZ0tHVXViV2x1TG5nZ0xTQmtMbmdwSUNvZ1l5d2dhU0E5SUNobExtMWhlQzU0SUMwZ1pDNTRLU0FxSUdNcElEb2dLRzRnUFNBb1pTNXRZWGd1ZUNBdElHUXVlQ2tnS2lCakxDQnBJRDBnS0dVdWJXbHVMbmdnTFNCa0xuZ3BJQ29nWXlrc0lHZ2dQajBnTUNBL0lDaHlJRDBnS0dVdWJXbHVMbmtnTFNCa0xua3BJQ29nYUN3Z2J5QTlJQ2hsTG0xaGVDNTVJQzBnWkM1NUtTQXFJR2dwSURvZ0tISWdQU0FvWlM1dFlYZ3VlU0F0SUdRdWVTa2dLaUJvTENCdklEMGdLR1V1YldsdUxua2dMU0JrTG5rcElDb2dhQ2tzSUc0Z1BpQnZJSHg4SUhJZ1BpQnBJSHg4SUNnb2NpQStJRzRnZkh3Z2JpQWhQVDBnYmlrZ0ppWWdLRzRnUFNCeUtTd2dLRzhnUENCcElIeDhJR2tnSVQwOUlHa3BJQ1ltSUNocElEMGdieWtzSUhVZ1BqMGdNQ0EvSUNoaElEMGdLR1V1YldsdUxub2dMU0JrTG5vcElDb2dkU3dnYkNBOUlDaGxMbTFoZUM1NklDMGdaQzU2S1NBcUlIVXBJRG9nS0dFZ1BTQW9aUzV0WVhndWVpQXRJR1F1ZWlrZ0tpQjFMQ0JzSUQwZ0tHVXViV2x1TG5vZ0xTQmtMbm9wSUNvZ2RTa3NJRzRnUGlCc0lIeDhJR0VnUGlCcEtTQjhmQ0FvS0dFZ1BpQnVJSHg4SUc0Z0lUMDlJRzRwSUNZbUlDaHVJRDBnWVNrc0lDaHNJRHdnYVNCOGZDQnBJQ0U5UFNCcEtTQW1KaUFvYVNBOUlHd3BMQ0JwSUR3Z01Da2dQeUJ1ZFd4c0lEb2dkR2hwY3k1aGRDaHVJRDQ5SURBZ1B5QnVJRG9nYVN3Z2RDazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJuUmxjbk5sWTNSQ2IzZ29aU3dnYW5RcElDRTlQU0J1ZFd4c093b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBWSEpwWVc1bmJHVW9aU3dnZEN3Z2Jpd2dhU3dnY2lrZ2V3b2dJQ0FnSUNBZ0lFVnZMbk4xWWxabFkzUnZjbk1vZEN3Z1pTa3NJRmx5TG5OMVlsWmxZM1J2Y25Nb2Jpd2daU2tzSUVGdkxtTnliM056Vm1WamRHOXljeWhGYnl3Z1dYSXBPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdkR2hwY3k1a2FYSmxZM1JwYjI0dVpHOTBLRUZ2S1N3Z1lUc0tJQ0FnSUNBZ0lDQnBaaUFvYnlBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2twSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0JoSUQwZ01Uc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRzhnUENBd0tTQmhJRDBnTFRFc0lHOGdQU0F0YnpzS0lDQWdJQ0FnSUNCbGJITmxJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUdadUxuTjFZbFpsWTNSdmNuTW9kR2hwY3k1dmNtbG5hVzRzSUdVcE93b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1lTQXFJSFJvYVhNdVpHbHlaV04wYVc5dUxtUnZkQ2haY2k1amNtOXpjMVpsWTNSdmNuTW9abTRzSUZseUtTazdDaUFnSUNBZ0lDQWdhV1lnS0d3Z1BDQXdLU0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUdFZ0tpQjBhR2x6TG1ScGNtVmpkR2x2Ymk1a2IzUW9SVzh1WTNKdmMzTW9abTRwS1RzS0lDQWdJQ0FnSUNCcFppQW9ZeUE4SURBZ2ZId2diQ0FySUdNZ1BpQnZLU0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUMxaElDb2dabTR1Wkc5MEtFRnZLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhQ0E4SURBZ1B5QnVkV3hzSURvZ2RHaHBjeTVoZENob0lDOGdieXdnY2lrN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVUxaGRISnBlRFFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTl5YVdkcGJpNWhjSEJzZVUxaGRISnBlRFFvWlNrc0lIUm9hWE11WkdseVpXTjBhVzl1TG5SeVlXNXpabTl5YlVScGNtVmpkR2x2YmlobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXViM0pwWjJsdUxtVnhkV0ZzY3loMGFHbHpMbTl5YVdkcGJpa2dKaVlnWlM1a2FYSmxZM1JwYjI0dVpYRjFZV3h6S0hSb2FYTXVaR2x5WldOMGFXOXVLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNuMHNJSEJsSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUnpJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhDaUFnSUNBZ0lDQWdYU3dnWVhKbmRXMWxiblJ6TG14bGJtZDBhQ0ErSURBZ0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDRORG9nZEdobElHTnZibk4wY25WamRHOXlJRzV2SUd4dmJtZGxjaUJ5WldGa2N5QmhjbWQxYldWdWRITXVJSFZ6WlNBdWMyVjBLQ2tnYVc1emRHVmhaQzRpS1RzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoTENCc0xDQmpMQ0JvTENCMUxDQmtMQ0JtTENCdExDQjRMQ0IyS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQm5XekJkSUQwZ1pTd2daMXMwWFNBOUlIUXNJR2RiT0YwZ1BTQnVMQ0JuV3pFeVhTQTlJR2tzSUdkYk1WMGdQU0J5TENCbld6VmRJRDBnYnl3Z1oxczVYU0E5SUdFc0lHZGJNVE5kSUQwZ2JDd2daMXN5WFNBOUlHTXNJR2RiTmwwZ1BTQm9MQ0JuV3pFd1hTQTlJSFVzSUdkYk1UUmRJRDBnWkN3Z1oxc3pYU0E5SUdZc0lHZGJOMTBnUFNCdExDQm5XekV4WFNBOUlIZ3NJR2RiTVRWZElEMGdkaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2xrWlc1MGFYUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d4TENBd0xDQXdMQ0F3TENBd0xDQXhMQ0F3TENBd0xDQXdMQ0F3TENBeExDQXdMQ0F3TENBd0xDQXdMQ0F4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2NHVW9LUzVtY205dFFYSnlZWGtvZEdocGN5NWxiR1Z0Wlc1MGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lHNGdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwV3pCZElEMGdibHN3WFN3Z2RGc3hYU0E5SUc1Yk1WMHNJSFJiTWwwZ1BTQnVXekpkTENCMFd6TmRJRDBnYmxzelhTd2dkRnMwWFNBOUlHNWJORjBzSUhSYk5WMGdQU0J1V3pWZExDQjBXelpkSUQwZ2JsczJYU3dnZEZzM1hTQTlJRzViTjEwc0lIUmJPRjBnUFNCdVd6aGRMQ0IwV3psZElEMGdibHM1WFN3Z2RGc3hNRjBnUFNCdVd6RXdYU3dnZEZzeE1WMGdQU0J1V3pFeFhTd2dkRnN4TWwwZ1BTQnVXekV5WFN3Z2RGc3hNMTBnUFNCdVd6RXpYU3dnZEZzeE5GMGdQU0J1V3pFMFhTd2dkRnN4TlYwZ1BTQnVXekUxWFN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIbFFiM05wZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQnVJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZzeE1sMGdQU0J1V3pFeVhTd2dkRnN4TTEwZ1BTQnVXekV6WFN3Z2RGc3hORjBnUFNCdVd6RTBYU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMU5ZWFJ5YVhnektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLSFJiTUYwc0lIUmJNMTBzSUhSYk5sMHNJREFzSUhSYk1WMHNJSFJiTkYwc0lIUmJOMTBzSURBc0lIUmJNbDBzSUhSYk5WMHNJSFJiT0Ywc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhoMGNtRmpkRUpoYzJsektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLSFJvYVhNc0lEQXBMQ0IwTG5ObGRFWnliMjFOWVhSeWFYaERiMngxYlc0b2RHaHBjeXdnTVNrc0lHNHVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWgwYUdsekxDQXlLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWQ1lYTnBjeWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLR1V1ZUN3Z2RDNTRMQ0J1TG5nc0lEQXNJR1V1ZVN3Z2RDNTVMQ0J1TG5rc0lEQXNJR1V1ZWl3Z2RDNTZMQ0J1TG5vc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhoMGNtRmpkRkp2ZEdGMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaV3hsYldWdWRITXNJRzRnUFNCbExtVnNaVzFsYm5SekxDQnBJRDBnTVNBdklITnBMbk5sZEVaeWIyMU5ZWFJ5YVhoRGIyeDFiVzRvWlN3Z01Da3ViR1Z1WjNSb0tDa3NJSElnUFNBeElDOGdjMmt1YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXhLUzVzWlc1bmRHZ29LU3dnYnlBOUlERWdMeUJ6YVM1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtHVXNJRElwTG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwV3pCZElEMGdibHN3WFNBcUlHa3NJSFJiTVYwZ1BTQnVXekZkSUNvZ2FTd2dkRnN5WFNBOUlHNWJNbDBnS2lCcExDQjBXek5kSUQwZ01Dd2dkRnMwWFNBOUlHNWJORjBnS2lCeUxDQjBXelZkSUQwZ2JsczFYU0FxSUhJc0lIUmJObDBnUFNCdVd6WmRJQ29nY2l3Z2RGczNYU0E5SURBc0lIUmJPRjBnUFNCdVd6aGRJQ29nYnl3Z2RGczVYU0E5SUc1Yk9WMGdLaUJ2TENCMFd6RXdYU0E5SUc1Yk1UQmRJQ29nYnl3Z2RGc3hNVjBnUFNBd0xDQjBXekV5WFNBOUlEQXNJSFJiTVROZElEMGdNQ3dnZEZzeE5GMGdQU0F3TENCMFd6RTFYU0E5SURFc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxVbTkwWVhScGIyNUdjbTl0UlhWc1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUdVZ0ppWWdaUzVwYzBWMWJHVnlJSHg4SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrMWhkSEpwZURRNklDNXRZV3RsVW05MFlYUnBiMjVHY205dFJYVnNaWElvS1NCdWIzY2daWGh3WldOMGN5QmhJRVYxYkdWeUlISnZkR0YwYVc5dUlISmhkR2hsY2lCMGFHRnVJR0VnVm1WamRHOXlNeUJoYm1RZ2IzSmtaWEl1SWlrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0J1SUQwZ1pTNTRMQ0JwSUQwZ1pTNTVMQ0J5SUQwZ1pTNTZMQ0J2SUQwZ1RXRjBhQzVqYjNNb2Jpa3NJR0VnUFNCTllYUm9Mbk5wYmlodUtTd2diQ0E5SUUxaGRHZ3VZMjl6S0drcExDQmpJRDBnVFdGMGFDNXphVzRvYVNrc0lHZ2dQU0JOWVhSb0xtTnZjeWh5S1N3Z2RTQTlJRTFoZEdndWMybHVLSElwT3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbTl5WkdWeUlEMDlQU0FpV0ZsYUlpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUc4Z0tpQm9MQ0JtSUQwZ2J5QXFJSFVzSUcwZ1BTQmhJQ29nYUN3Z2VDQTlJR0VnS2lCMU93b2dJQ0FnSUNBZ0lDQWdJQ0IwV3pCZElEMGdiQ0FxSUdnc0lIUmJORjBnUFNBdGJDQXFJSFVzSUhSYk9GMGdQU0JqTENCMFd6RmRJRDBnWmlBcklHMGdLaUJqTENCMFd6VmRJRDBnWkNBdElIZ2dLaUJqTENCMFd6bGRJRDBnTFdFZ0tpQnNMQ0IwV3pKZElEMGdlQ0F0SUdRZ0tpQmpMQ0IwV3paZElEMGdiU0FySUdZZ0tpQmpMQ0IwV3pFd1hTQTlJRzhnS2lCc093b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aUzV2Y21SbGNpQTlQVDBnSWxsWVdpSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCc0lDb2dhQ3dnWmlBOUlHd2dLaUIxTENCdElEMGdZeUFxSUdnc0lIZ2dQU0JqSUNvZ2RUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEZzd1hTQTlJR1FnS3lCNElDb2dZU3dnZEZzMFhTQTlJRzBnS2lCaElDMGdaaXdnZEZzNFhTQTlJRzhnS2lCakxDQjBXekZkSUQwZ2J5QXFJSFVzSUhSYk5WMGdQU0J2SUNvZ2FDd2dkRnM1WFNBOUlDMWhMQ0IwV3pKZElEMGdaaUFxSUdFZ0xTQnRMQ0IwV3paZElEMGdlQ0FySUdRZ0tpQmhMQ0IwV3pFd1hTQTlJRzhnS2lCc093b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aUzV2Y21SbGNpQTlQVDBnSWxwWVdTSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCc0lDb2dhQ3dnWmlBOUlHd2dLaUIxTENCdElEMGdZeUFxSUdnc0lIZ2dQU0JqSUNvZ2RUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEZzd1hTQTlJR1FnTFNCNElDb2dZU3dnZEZzMFhTQTlJQzF2SUNvZ2RTd2dkRnM0WFNBOUlHMGdLeUJtSUNvZ1lTd2dkRnN4WFNBOUlHWWdLeUJ0SUNvZ1lTd2dkRnMxWFNBOUlHOGdLaUJvTENCMFd6bGRJRDBnZUNBdElHUWdLaUJoTENCMFd6SmRJRDBnTFc4Z0tpQmpMQ0IwV3paZElEMGdZU3dnZEZzeE1GMGdQU0J2SUNvZ2JEc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR1V1YjNKa1pYSWdQVDA5SUNKYVdWZ2lLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2J5QXFJR2dzSUdZZ1BTQnZJQ29nZFN3Z2JTQTlJR0VnS2lCb0xDQjRJRDBnWVNBcUlIVTdDaUFnSUNBZ0lDQWdJQ0FnSUhSYk1GMGdQU0JzSUNvZ2FDd2dkRnMwWFNBOUlHMGdLaUJqSUMwZ1ppd2dkRnM0WFNBOUlHUWdLaUJqSUNzZ2VDd2dkRnN4WFNBOUlHd2dLaUIxTENCMFd6VmRJRDBnZUNBcUlHTWdLeUJrTENCMFd6bGRJRDBnWmlBcUlHTWdMU0J0TENCMFd6SmRJRDBnTFdNc0lIUmJObDBnUFNCaElDb2diQ3dnZEZzeE1GMGdQU0J2SUNvZ2JEc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR1V1YjNKa1pYSWdQVDA5SUNKWldsZ2lLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2J5QXFJR3dzSUdZZ1BTQnZJQ29nWXl3Z2JTQTlJR0VnS2lCc0xDQjRJRDBnWVNBcUlHTTdDaUFnSUNBZ0lDQWdJQ0FnSUhSYk1GMGdQU0JzSUNvZ2FDd2dkRnMwWFNBOUlIZ2dMU0JrSUNvZ2RTd2dkRnM0WFNBOUlHMGdLaUIxSUNzZ1ppd2dkRnN4WFNBOUlIVXNJSFJiTlYwZ1BTQnZJQ29nYUN3Z2RGczVYU0E5SUMxaElDb2dhQ3dnZEZzeVhTQTlJQzFqSUNvZ2FDd2dkRnMyWFNBOUlHWWdLaUIxSUNzZ2JTd2dkRnN4TUYwZ1BTQmtJQzBnZUNBcUlIVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hsTG05eVpHVnlJRDA5UFNBaVdGcFpJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlHOGdLaUJzTENCbUlEMGdieUFxSUdNc0lHMGdQU0JoSUNvZ2JDd2dlQ0E5SUdFZ0tpQmpPd29nSUNBZ0lDQWdJQ0FnSUNCMFd6QmRJRDBnYkNBcUlHZ3NJSFJiTkYwZ1BTQXRkU3dnZEZzNFhTQTlJR01nS2lCb0xDQjBXekZkSUQwZ1pDQXFJSFVnS3lCNExDQjBXelZkSUQwZ2J5QXFJR2dzSUhSYk9WMGdQU0JtSUNvZ2RTQXRJRzBzSUhSYk1sMGdQU0J0SUNvZ2RTQXRJR1lzSUhSYk5sMGdQU0JoSUNvZ2FDd2dkRnN4TUYwZ1BTQjRJQ29nZFNBcklHUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBXek5kSUQwZ01Dd2dkRnMzWFNBOUlEQXNJSFJiTVRGZElEMGdNQ3dnZEZzeE1sMGdQU0F3TENCMFd6RXpYU0E5SURBc0lIUmJNVFJkSUQwZ01Dd2dkRnN4TlYwZ1BTQXhMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV0ZyWlZKdmRHRjBhVzl1Um5KdmJWRjFZWFJsY201cGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZiWEJ2YzJVb2RHWXNJR1VzSUc1bUtUc0tJQ0FnSUgwS0lDQWdJR3h2YjJ0QmRDaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUZEM1emRXSldaV04wYjNKektHVXNJSFFwTENCVGRDNXNaVzVuZEdoVGNTZ3BJRDA5UFNBd0lDWW1JQ2hUZEM1NklEMGdNU2tzSUZOMExtNXZjbTFoYkdsNlpTZ3BMQ0J3Ymk1amNtOXpjMVpsWTNSdmNuTW9iaXdnVTNRcExDQndiaTVzWlc1bmRHaFRjU2dwSUQwOVBTQXdJQ1ltSUNoTllYUm9MbUZpY3lodUxub3BJRDA5UFNBeElEOGdVM1F1ZUNBclBTQXhaUzAwSURvZ1UzUXVlaUFyUFNBeFpTMDBMQ0JUZEM1dWIzSnRZV3hwZW1Vb0tTd2djRzR1WTNKdmMzTldaV04wYjNKektHNHNJRk4wS1Nrc0lIQnVMbTV2Y20xaGJHbDZaU2dwTENCYWNpNWpjbTl6YzFabFkzUnZjbk1vVTNRc0lIQnVLU3dnYVZzd1hTQTlJSEJ1TG5nc0lHbGJORjBnUFNCYWNpNTRMQ0JwV3poZElEMGdVM1F1ZUN3Z2FWc3hYU0E5SUhCdUxua3NJR2xiTlYwZ1BTQmFjaTU1TENCcFd6bGRJRDBnVTNRdWVTd2dhVnN5WFNBOUlIQnVMbm9zSUdsYk5sMGdQU0JhY2k1NkxDQnBXekV3WFNBOUlGTjBMbm9zSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUhadmFXUWdNQ0EvSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNXRkV3gwYVhCc2VTZ3BJRzV2ZHlCdmJteDVJR0ZqWTJWd2RITWdiMjVsSUdGeVozVnRaVzUwTGlCVmMyVWdMbTExYkhScGNHeDVUV0YwY21salpYTW9JR0VzSUdJZ0tTQnBibk4wWldGa0xpSXBMQ0IwYUdsekxtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb1pTd2dkQ2twSURvZ2RHaHBjeTV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLSFJvYVhNc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnY0hKbGJYVnNkR2x3Ykhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vWlN3Z2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVUxaGRISnBZMlZ6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1Wld4bGJXVnVkSE1zSUdrZ1BTQjBMbVZzWlcxbGJuUnpMQ0J5SUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYnlBOUlHNWJNRjBzSUdFZ1BTQnVXelJkTENCc0lEMGdibHM0WFN3Z1l5QTlJRzViTVRKZExDQm9JRDBnYmxzeFhTd2dkU0E5SUc1Yk5WMHNJR1FnUFNCdVd6bGRMQ0JtSUQwZ2Jsc3hNMTBzSUcwZ1BTQnVXekpkTENCNElEMGdibHMyWFN3Z2RpQTlJRzViTVRCZExDQm5JRDBnYmxzeE5GMHNJSEFnUFNCdVd6TmRMQ0JmSUQwZ2JsczNYU3dnZVNBOUlHNWJNVEZkTENCaUlEMGdibHN4TlYwc0lFRWdQU0JwV3pCZExDQk1JRDBnYVZzMFhTd2dTU0E5SUdsYk9GMHNJR3NnUFNCcFd6RXlYU3dnUWlBOUlHbGJNVjBzSUZBZ1BTQnBXelZkTENCM0lEMGdhVnM1WFN3Z1JTQTlJR2xiTVROZExDQkVJRDBnYVZzeVhTd2dWU0E5SUdsYk5sMHNJRVlnUFNCcFd6RXdYU3dnVHlBOUlHbGJNVFJkTENCdVpTQTlJR2xiTTEwc0lHTmxJRDBnYVZzM1hTd2dWaUE5SUdsYk1URmRMQ0JYSUQwZ2FWc3hOVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEpiTUYwZ1BTQnZJQ29nUVNBcklHRWdLaUJDSUNzZ2JDQXFJRVFnS3lCaklDb2dibVVzSUhKYk5GMGdQU0J2SUNvZ1RDQXJJR0VnS2lCUUlDc2diQ0FxSUZVZ0t5QmpJQ29nWTJVc0lISmJPRjBnUFNCdklDb2dTU0FySUdFZ0tpQjNJQ3NnYkNBcUlFWWdLeUJqSUNvZ1Zpd2djbHN4TWwwZ1BTQnZJQ29nYXlBcklHRWdLaUJGSUNzZ2JDQXFJRThnS3lCaklDb2dWeXdnY2xzeFhTQTlJR2dnS2lCQklDc2dkU0FxSUVJZ0t5QmtJQ29nUkNBcklHWWdLaUJ1WlN3Z2NsczFYU0E5SUdnZ0tpQk1JQ3NnZFNBcUlGQWdLeUJrSUNvZ1ZTQXJJR1lnS2lCalpTd2djbHM1WFNBOUlHZ2dLaUJKSUNzZ2RTQXFJSGNnS3lCa0lDb2dSaUFySUdZZ0tpQldMQ0J5V3pFelhTQTlJR2dnS2lCcklDc2dkU0FxSUVVZ0t5QmtJQ29nVHlBcklHWWdLaUJYTENCeVd6SmRJRDBnYlNBcUlFRWdLeUI0SUNvZ1FpQXJJSFlnS2lCRUlDc2daeUFxSUc1bExDQnlXelpkSUQwZ2JTQXFJRXdnS3lCNElDb2dVQ0FySUhZZ0tpQlZJQ3NnWnlBcUlHTmxMQ0J5V3pFd1hTQTlJRzBnS2lCSklDc2dlQ0FxSUhjZ0t5QjJJQ29nUmlBcklHY2dLaUJXTENCeVd6RTBYU0E5SUcwZ0tpQnJJQ3NnZUNBcUlFVWdLeUIySUNvZ1R5QXJJR2NnS2lCWExDQnlXek5kSUQwZ2NDQXFJRUVnS3lCZklDb2dRaUFySUhrZ0tpQkVJQ3NnWWlBcUlHNWxMQ0J5V3pkZElEMGdjQ0FxSUV3Z0t5QmZJQ29nVUNBcklIa2dLaUJWSUNzZ1lpQXFJR05sTENCeVd6RXhYU0E5SUhBZ0tpQkpJQ3NnWHlBcUlIY2dLeUI1SUNvZ1JpQXJJR0lnS2lCV0xDQnlXekUxWFNBOUlIQWdLaUJySUNzZ1h5QXFJRVVnS3lCNUlDb2dUeUFySUdJZ0tpQlhMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZzd1hTQXFQU0JsTENCMFd6UmRJQ285SUdVc0lIUmJPRjBnS2owZ1pTd2dkRnN4TWwwZ0tqMGdaU3dnZEZzeFhTQXFQU0JsTENCMFd6VmRJQ285SUdVc0lIUmJPVjBnS2owZ1pTd2dkRnN4TTEwZ0tqMGdaU3dnZEZzeVhTQXFQU0JsTENCMFd6WmRJQ285SUdVc0lIUmJNVEJkSUNvOUlHVXNJSFJiTVRSZElDbzlJR1VzSUhSYk0xMGdLajBnWlN3Z2RGczNYU0FxUFNCbExDQjBXekV4WFNBcVBTQmxMQ0IwV3pFMVhTQXFQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdWMFpYSnRhVzVoYm5Rb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCMElEMGdaVnN3WFN3Z2JpQTlJR1ZiTkYwc0lHa2dQU0JsV3poZExDQnlJRDBnWlZzeE1sMHNJRzhnUFNCbFd6RmRMQ0JoSUQwZ1pWczFYU3dnYkNBOUlHVmJPVjBzSUdNZ1BTQmxXekV6WFN3Z2FDQTlJR1ZiTWwwc0lIVWdQU0JsV3paZExDQmtJRDBnWlZzeE1GMHNJR1lnUFNCbFd6RTBYU3dnYlNBOUlHVmJNMTBzSUhnZ1BTQmxXemRkTENCMklEMGdaVnN4TVYwc0lHY2dQU0JsV3pFMVhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JTQXFJQ2dyY2lBcUlHd2dLaUIxSUMwZ2FTQXFJR01nS2lCMUlDMGdjaUFxSUdFZ0tpQmtJQ3NnYmlBcUlHTWdLaUJrSUNzZ2FTQXFJR0VnS2lCbUlDMGdiaUFxSUd3Z0tpQm1LU0FySUhnZ0tpQW9LM1FnS2lCc0lDb2daaUF0SUhRZ0tpQmpJQ29nWkNBcklISWdLaUJ2SUNvZ1pDQXRJR2tnS2lCdklDb2daaUFySUdrZ0tpQmpJQ29nYUNBdElISWdLaUJzSUNvZ2FDa2dLeUIySUNvZ0tDdDBJQ29nWXlBcUlIVWdMU0IwSUNvZ1lTQXFJR1lnTFNCeUlDb2dieUFxSUhVZ0t5QnVJQ29nYnlBcUlHWWdLeUJ5SUNvZ1lTQXFJR2dnTFNCdUlDb2dZeUFxSUdncElDc2daeUFxSUNndGFTQXFJR0VnS2lCb0lDMGdkQ0FxSUd3Z0tpQjFJQ3NnZENBcUlHRWdLaUJrSUNzZ2FTQXFJRzhnS2lCMUlDMGdiaUFxSUc4Z0tpQmtJQ3NnYmlBcUlHd2dLaUJvS1RzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lIUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdQU0JsV3pGZExDQmxXekZkSUQwZ1pWczBYU3dnWlZzMFhTQTlJSFFzSUhRZ1BTQmxXekpkTENCbFd6SmRJRDBnWlZzNFhTd2daVnM0WFNBOUlIUXNJSFFnUFNCbFd6WmRMQ0JsV3paZElEMGdaVnM1WFN3Z1pWczVYU0E5SUhRc0lIUWdQU0JsV3pOZExDQmxXek5kSUQwZ1pWc3hNbDBzSUdWYk1USmRJRDBnZEN3Z2RDQTlJR1ZiTjEwc0lHVmJOMTBnUFNCbFd6RXpYU3dnWlZzeE0xMGdQU0IwTENCMElEMGdaVnN4TVYwc0lHVmJNVEZkSUQwZ1pWc3hORjBzSUdWYk1UUmRJRDBnZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGQnZjMmwwYVc5dUtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YVhOV1pXTjBiM0l6SUQ4Z0tHbGJNVEpkSUQwZ1pTNTRMQ0JwV3pFelhTQTlJR1V1ZVN3Z2FWc3hORjBnUFNCbExub3BJRG9nS0dsYk1USmRJRDBnWlN3Z2FWc3hNMTBnUFNCMExDQnBXekUwWFNBOUlHNHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdhVzUyWlhKMEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2RDQTlJR1ZiTUYwc0lHNGdQU0JsV3pGZExDQnBJRDBnWlZzeVhTd2djaUE5SUdWYk0xMHNJRzhnUFNCbFd6UmRMQ0JoSUQwZ1pWczFYU3dnYkNBOUlHVmJObDBzSUdNZ1BTQmxXemRkTENCb0lEMGdaVnM0WFN3Z2RTQTlJR1ZiT1Ywc0lHUWdQU0JsV3pFd1hTd2daaUE5SUdWYk1URmRMQ0J0SUQwZ1pWc3hNbDBzSUhnZ1BTQmxXekV6WFN3Z2RpQTlJR1ZiTVRSZExDQm5JRDBnWlZzeE5WMHNJSEFnUFNCMUlDb2dkaUFxSUdNZ0xTQjRJQ29nWkNBcUlHTWdLeUI0SUNvZ2JDQXFJR1lnTFNCaElDb2dkaUFxSUdZZ0xTQjFJQ29nYkNBcUlHY2dLeUJoSUNvZ1pDQXFJR2NzSUY4Z1BTQnRJQ29nWkNBcUlHTWdMU0JvSUNvZ2RpQXFJR01nTFNCdElDb2diQ0FxSUdZZ0t5QnZJQ29nZGlBcUlHWWdLeUJvSUNvZ2JDQXFJR2NnTFNCdklDb2daQ0FxSUdjc0lIa2dQU0JvSUNvZ2VDQXFJR01nTFNCdElDb2dkU0FxSUdNZ0t5QnRJQ29nWVNBcUlHWWdMU0J2SUNvZ2VDQXFJR1lnTFNCb0lDb2dZU0FxSUdjZ0t5QnZJQ29nZFNBcUlHY3NJR0lnUFNCdElDb2dkU0FxSUd3Z0xTQm9JQ29nZUNBcUlHd2dMU0J0SUNvZ1lTQXFJR1FnS3lCdklDb2dlQ0FxSUdRZ0t5Qm9JQ29nWVNBcUlIWWdMU0J2SUNvZ2RTQXFJSFlzSUVFZ1BTQjBJQ29nY0NBcklHNGdLaUJmSUNzZ2FTQXFJSGtnS3lCeUlDb2dZanNLSUNBZ0lDQWdJQ0JwWmlBb1FTQTlQVDBnTUNrZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0RBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lHeGxkQ0JNSUQwZ01TQXZJRUU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiTUYwZ1BTQndJQ29nVEN3Z1pWc3hYU0E5SUNoNElDb2daQ0FxSUhJZ0xTQjFJQ29nZGlBcUlISWdMU0I0SUNvZ2FTQXFJR1lnS3lCdUlDb2dkaUFxSUdZZ0t5QjFJQ29nYVNBcUlHY2dMU0J1SUNvZ1pDQXFJR2NwSUNvZ1RDd2daVnN5WFNBOUlDaGhJQ29nZGlBcUlISWdMU0I0SUNvZ2JDQXFJSElnS3lCNElDb2dhU0FxSUdNZ0xTQnVJQ29nZGlBcUlHTWdMU0JoSUNvZ2FTQXFJR2NnS3lCdUlDb2diQ0FxSUdjcElDb2dUQ3dnWlZzelhTQTlJQ2gxSUNvZ2JDQXFJSElnTFNCaElDb2daQ0FxSUhJZ0xTQjFJQ29nYVNBcUlHTWdLeUJ1SUNvZ1pDQXFJR01nS3lCaElDb2dhU0FxSUdZZ0xTQnVJQ29nYkNBcUlHWXBJQ29nVEN3Z1pWczBYU0E5SUY4Z0tpQk1MQ0JsV3pWZElEMGdLR2dnS2lCMklDb2djaUF0SUcwZ0tpQmtJQ29nY2lBcklHMGdLaUJwSUNvZ1ppQXRJSFFnS2lCMklDb2daaUF0SUdnZ0tpQnBJQ29nWnlBcklIUWdLaUJrSUNvZ1p5a2dLaUJNTENCbFd6WmRJRDBnS0cwZ0tpQnNJQ29nY2lBdElHOGdLaUIySUNvZ2NpQXRJRzBnS2lCcElDb2dZeUFySUhRZ0tpQjJJQ29nWXlBcklHOGdLaUJwSUNvZ1p5QXRJSFFnS2lCc0lDb2daeWtnS2lCTUxDQmxXemRkSUQwZ0tHOGdLaUJrSUNvZ2NpQXRJR2dnS2lCc0lDb2djaUFySUdnZ0tpQnBJQ29nWXlBdElIUWdLaUJrSUNvZ1l5QXRJRzhnS2lCcElDb2daaUFySUhRZ0tpQnNJQ29nWmlrZ0tpQk1MQ0JsV3poZElEMGdlU0FxSUV3c0lHVmJPVjBnUFNBb2JTQXFJSFVnS2lCeUlDMGdhQ0FxSUhnZ0tpQnlJQzBnYlNBcUlHNGdLaUJtSUNzZ2RDQXFJSGdnS2lCbUlDc2dhQ0FxSUc0Z0tpQm5JQzBnZENBcUlIVWdLaUJuS1NBcUlFd3NJR1ZiTVRCZElEMGdLRzhnS2lCNElDb2djaUF0SUcwZ0tpQmhJQ29nY2lBcklHMGdLaUJ1SUNvZ1l5QXRJSFFnS2lCNElDb2dZeUF0SUc4Z0tpQnVJQ29nWnlBcklIUWdLaUJoSUNvZ1p5a2dLaUJNTENCbFd6RXhYU0E5SUNob0lDb2dZU0FxSUhJZ0xTQnZJQ29nZFNBcUlISWdMU0JvSUNvZ2JpQXFJR01nS3lCMElDb2dkU0FxSUdNZ0t5QnZJQ29nYmlBcUlHWWdMU0IwSUNvZ1lTQXFJR1lwSUNvZ1RDd2daVnN4TWwwZ1BTQmlJQ29nVEN3Z1pWc3hNMTBnUFNBb2FDQXFJSGdnS2lCcElDMGdiU0FxSUhVZ0tpQnBJQ3NnYlNBcUlHNGdLaUJrSUMwZ2RDQXFJSGdnS2lCa0lDMGdhQ0FxSUc0Z0tpQjJJQ3NnZENBcUlIVWdLaUIyS1NBcUlFd3NJR1ZiTVRSZElEMGdLRzBnS2lCaElDb2dhU0F0SUc4Z0tpQjRJQ29nYVNBdElHMGdLaUJ1SUNvZ2JDQXJJSFFnS2lCNElDb2diQ0FySUc4Z0tpQnVJQ29nZGlBdElIUWdLaUJoSUNvZ2Rpa2dLaUJNTENCbFd6RTFYU0E5SUNodklDb2dkU0FxSUdrZ0xTQm9JQ29nWVNBcUlHa2dLeUJvSUNvZ2JpQXFJR3dnTFNCMElDb2dkU0FxSUd3Z0xTQnZJQ29nYmlBcUlHUWdLeUIwSUNvZ1lTQXFJR1FwSUNvZ1RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmpZV3hsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUc0Z1BTQmxMbmdzSUdrZ1BTQmxMbmtzSUhJZ1BTQmxMbm83Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTUYwZ0tqMGdiaXdnZEZzMFhTQXFQU0JwTENCMFd6aGRJQ285SUhJc0lIUmJNVjBnS2owZ2Jpd2dkRnMxWFNBcVBTQnBMQ0IwV3psZElDbzlJSElzSUhSYk1sMGdLajBnYml3Z2RGczJYU0FxUFNCcExDQjBXekV3WFNBcVBTQnlMQ0IwV3pOZElDbzlJRzRzSUhSYk4xMGdLajBnYVN3Z2RGc3hNVjBnS2owZ2Npd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoZUZOallXeGxUMjVCZUdsektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2RDQTlJR1ZiTUYwZ0tpQmxXekJkSUNzZ1pWc3hYU0FxSUdWYk1WMGdLeUJsV3pKZElDb2daVnN5WFN3Z2JpQTlJR1ZiTkYwZ0tpQmxXelJkSUNzZ1pWczFYU0FxSUdWYk5WMGdLeUJsV3paZElDb2daVnMyWFN3Z2FTQTlJR1ZiT0YwZ0tpQmxXemhkSUNzZ1pWczVYU0FxSUdWYk9WMGdLeUJsV3pFd1hTQXFJR1ZiTVRCZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbk54Y25Rb1RXRjBhQzV0WVhnb2RDd2diaXdnYVNrcE93b2dJQ0FnZlFvZ0lDQWdiV0ZyWlZSeVlXNXpiR0YwYVc5dUtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb01Td2dNQ3dnTUN3Z1pTd2dNQ3dnTVN3Z01Dd2dkQ3dnTUN3Z01Dd2dNU3dnYml3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVW05MFlYUnBiMjVZS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlFMWhkR2d1WTI5ektHVXBMQ0J1SUQwZ1RXRjBhQzV6YVc0b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtERXNJREFzSURBc0lEQXNJREFzSUhRc0lDMXVMQ0F3TENBd0xDQnVMQ0IwTENBd0xDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWU2IzUmhkR2x2Ymxrb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdUV0YwYUM1amIzTW9aU2tzSUc0Z1BTQk5ZWFJvTG5OcGJpaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9kQ3dnTUN3Z2Jpd2dNQ3dnTUN3Z01Td2dNQ3dnTUN3Z0xXNHNJREFzSUhRc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpWSnZkR0YwYVc5dVdpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JOWVhSb0xtTnZjeWhsS1N3Z2JpQTlJRTFoZEdndWMybHVLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2gwTENBdGJpd2dNQ3dnTUN3Z2Jpd2dkQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Td2dNQ3dnTUN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxVbTkwWVhScGIyNUJlR2x6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRTFoZEdndVkyOXpLSFFwTENCcElEMGdUV0YwYUM1emFXNG9kQ2tzSUhJZ1BTQXhJQzBnYml3Z2J5QTlJR1V1ZUN3Z1lTQTlJR1V1ZVN3Z2JDQTlJR1V1ZWl3Z1l5QTlJSElnS2lCdkxDQm9JRDBnY2lBcUlHRTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtHTWdLaUJ2SUNzZ2Jpd2dZeUFxSUdFZ0xTQnBJQ29nYkN3Z1l5QXFJR3dnS3lCcElDb2dZU3dnTUN3Z1l5QXFJR0VnS3lCcElDb2diQ3dnYUNBcUlHRWdLeUJ1TENCb0lDb2diQ0F0SUdrZ0tpQnZMQ0F3TENCaklDb2diQ0F0SUdrZ0tpQmhMQ0JvSUNvZ2JDQXJJR2tnS2lCdkxDQnlJQ29nYkNBcUlHd2dLeUJ1TENBd0xDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWVFkyRnNaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLR1VzSURBc0lEQXNJREFzSURBc0lIUXNJREFzSURBc0lEQXNJREFzSUc0c0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpWTm9aV0Z5S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvTVN3Z2Jpd2djaXdnTUN3Z1pTd2dNU3dnYnl3Z01Dd2dkQ3dnYVN3Z01Td2dNQ3dnTUN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIyMXdiM05sS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVaV3hsYldWdWRITXNJSElnUFNCMExsOTRMQ0J2SUQwZ2RDNWZlU3dnWVNBOUlIUXVYM29zSUd3Z1BTQjBMbDkzTENCaklEMGdjaUFySUhJc0lHZ2dQU0J2SUNzZ2J5d2dkU0E5SUdFZ0t5QmhMQ0JrSUQwZ2NpQXFJR01zSUdZZ1BTQnlJQ29nYUN3Z2JTQTlJSElnS2lCMUxDQjRJRDBnYnlBcUlHZ3NJSFlnUFNCdklDb2dkU3dnWnlBOUlHRWdLaUIxTENCd0lEMGdiQ0FxSUdNc0lGOGdQU0JzSUNvZ2FDd2dlU0E5SUd3Z0tpQjFMQ0JpSUQwZ2JpNTRMQ0JCSUQwZ2JpNTVMQ0JNSUQwZ2JpNTZPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBXekJkSUQwZ0tERWdMU0FvZUNBcklHY3BLU0FxSUdJc0lHbGJNVjBnUFNBb1ppQXJJSGtwSUNvZ1lpd2dhVnN5WFNBOUlDaHRJQzBnWHlrZ0tpQmlMQ0JwV3pOZElEMGdNQ3dnYVZzMFhTQTlJQ2htSUMwZ2VTa2dLaUJCTENCcFd6VmRJRDBnS0RFZ0xTQW9aQ0FySUdjcEtTQXFJRUVzSUdsYk5sMGdQU0FvZGlBcklIQXBJQ29nUVN3Z2FWczNYU0E5SURBc0lHbGJPRjBnUFNBb2JTQXJJRjhwSUNvZ1RDd2dhVnM1WFNBOUlDaDJJQzBnY0NrZ0tpQk1MQ0JwV3pFd1hTQTlJQ2d4SUMwZ0tHUWdLeUI0S1NrZ0tpQk1MQ0JwV3pFeFhTQTlJREFzSUdsYk1USmRJRDBnWlM1NExDQnBXekV6WFNBOUlHVXVlU3dnYVZzeE5GMGdQU0JsTG5vc0lHbGJNVFZkSUQwZ01Td2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUmxZMjl0Y0c5elpTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCeUlEMGdjMmt1YzJWMEtHbGJNRjBzSUdsYk1WMHNJR2xiTWwwcExteGxibWQwYUNncExDQnZJRDBnYzJrdWMyVjBLR2xiTkYwc0lHbGJOVjBzSUdsYk5sMHBMbXhsYm1kMGFDZ3BMQ0JoSUQwZ2Mya3VjMlYwS0dsYk9GMHNJR2xiT1Ywc0lHbGJNVEJkS1M1c1pXNW5kR2dvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbVJsZEdWeWJXbHVZVzUwS0NrZ1BDQXdJQ1ltSUNoeUlEMGdMWElwTENCbExuZ2dQU0JwV3pFeVhTd2daUzU1SUQwZ2FWc3hNMTBzSUdVdWVpQTlJR2xiTVRSZExDQkpkQzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnTVNBdklISXNJR2dnUFNBeElDOGdieXdnZFNBOUlERWdMeUJoT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJKZEM1bGJHVnRaVzUwYzFzd1hTQXFQU0JqTENCSmRDNWxiR1Z0Wlc1MGMxc3hYU0FxUFNCakxDQkpkQzVsYkdWdFpXNTBjMXN5WFNBcVBTQmpMQ0JKZEM1bGJHVnRaVzUwYzFzMFhTQXFQU0JvTENCSmRDNWxiR1Z0Wlc1MGMxczFYU0FxUFNCb0xDQkpkQzVsYkdWdFpXNTBjMXMyWFNBcVBTQm9MQ0JKZEM1bGJHVnRaVzUwYzFzNFhTQXFQU0IxTENCSmRDNWxiR1Z0Wlc1MGMxczVYU0FxUFNCMUxDQkpkQzVsYkdWdFpXNTBjMXN4TUYwZ0tqMGdkU3dnZEM1elpYUkdjbTl0VW05MFlYUnBiMjVOWVhSeWFYZ29TWFFwTENCdUxuZ2dQU0J5TENCdUxua2dQU0J2TENCdUxub2dQU0JoTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpWQmxjbk53WldOMGFYWmxLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBJSHNLSUNBZ0lDQWdJQ0J2SUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1YldGclpWQmxjbk53WldOMGFYWmxLQ2tnYUdGeklHSmxaVzRnY21Wa1pXWnBibVZrSUdGdVpDQm9ZWE1nWVNCdVpYY2djMmxuYm1GMGRYSmxMaUJRYkdWaGMyVWdZMmhsWTJzZ2RHaGxJR1J2WTNNdUlpazdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCc0lEMGdNaUFxSUhJZ0x5QW9kQ0F0SUdVcExDQmpJRDBnTWlBcUlISWdMeUFvYmlBdElHa3BMQ0JvSUQwZ0tIUWdLeUJsS1NBdklDaDBJQzBnWlNrc0lIVWdQU0FvYmlBcklHa3BJQzhnS0c0Z0xTQnBLU3dnWkNBOUlDMG9ieUFySUhJcElDOGdLRzhnTFNCeUtTd2daaUE5SUMweUlDb2dieUFxSUhJZ0x5QW9ieUF0SUhJcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaFd6QmRJRDBnYkN3Z1lWczBYU0E5SURBc0lHRmJPRjBnUFNCb0xDQmhXekV5WFNBOUlEQXNJR0ZiTVYwZ1BTQXdMQ0JoV3pWZElEMGdZeXdnWVZzNVhTQTlJSFVzSUdGYk1UTmRJRDBnTUN3Z1lWc3lYU0E5SURBc0lHRmJObDBnUFNBd0xDQmhXekV3WFNBOUlHUXNJR0ZiTVRSZElEMGdaaXdnWVZzelhTQTlJREFzSUdGYk4xMGdQU0F3TENCaFd6RXhYU0E5SUMweExDQmhXekUxWFNBOUlEQXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVDNKMGFHOW5jbUZ3YUdsaktHVXNJSFFzSUc0c0lHa3NJSElzSUc4cElIc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUd3Z1BTQXhJQzhnS0hRZ0xTQmxLU3dnWXlBOUlERWdMeUFvYmlBdElHa3BMQ0JvSUQwZ01TQXZJQ2h2SUMwZ2Npa3NJSFVnUFNBb2RDQXJJR1VwSUNvZ2JDd2daQ0E5SUNodUlDc2dhU2tnS2lCakxDQm1JRDBnS0c4Z0t5QnlLU0FxSUdnN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGYk1GMGdQU0F5SUNvZ2JDd2dZVnMwWFNBOUlEQXNJR0ZiT0YwZ1BTQXdMQ0JoV3pFeVhTQTlJQzExTENCaFd6RmRJRDBnTUN3Z1lWczFYU0E5SURJZ0tpQmpMQ0JoV3psZElEMGdNQ3dnWVZzeE0xMGdQU0F0WkN3Z1lWc3lYU0E5SURBc0lHRmJObDBnUFNBd0xDQmhXekV3WFNBOUlDMHlJQ29nYUN3Z1lWc3hORjBnUFNBdFppd2dZVnN6WFNBOUlEQXNJR0ZiTjEwZ1BTQXdMQ0JoV3pFeFhTQTlJREFzSUdGYk1UVmRJRDBnTVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdWeGRXRnNjeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0J1SUQwZ1pTNWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3T3lCcElEd2dNVFk3SUdrckt5bHBaaUFvZEZ0cFhTQWhQVDBnYmx0cFhTa2djbVYwZFhKdUlDRXhPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhNRHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUJjbkpoZVNobExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQXhOanNnYmlzcktYUm9hWE11Wld4bGJXVnVkSE5iYmwwZ1BTQmxXMjRnS3lCMFhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlFYSnlZWGtvWlNBOUlGdGRMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlZ0MFhTQTlJRzViTUYwc0lHVmJkQ0FySURGZElEMGdibHN4WFN3Z1pWdDBJQ3NnTWwwZ1BTQnVXekpkTENCbFczUWdLeUF6WFNBOUlHNWJNMTBzSUdWYmRDQXJJRFJkSUQwZ2JsczBYU3dnWlZ0MElDc2dOVjBnUFNCdVd6VmRMQ0JsVzNRZ0t5QTJYU0E5SUc1Yk5sMHNJR1ZiZENBcklEZGRJRDBnYmxzM1hTd2daVnQwSUNzZ09GMGdQU0J1V3poZExDQmxXM1FnS3lBNVhTQTlJRzViT1Ywc0lHVmJkQ0FySURFd1hTQTlJRzViTVRCZExDQmxXM1FnS3lBeE1WMGdQU0J1V3pFeFhTd2daVnQwSUNzZ01USmRJRDBnYmxzeE1sMHNJR1ZiZENBcklERXpYU0E5SUc1Yk1UTmRMQ0JsVzNRZ0t5QXhORjBnUFNCdVd6RTBYU3dnWlZ0MElDc2dNVFZkSUQwZ2Jsc3hOVjBzSUdVN0NpQWdJQ0I5Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzVwYzAxaGRISnBlRFFnUFNBaE1Ec0tkbUZ5SUhOcElEMGdibVYzSUUwc0lFbDBJRDBnYm1WM0lIQmxMQ0IwWmlBOUlHNWxkeUJOS0RBc0lEQXNJREFwTENCdVppQTlJRzVsZHlCTktERXNJREVzSURFcExDQndiaUE5SUc1bGR5Qk5MQ0JhY2lBOUlHNWxkeUJOTENCVGRDQTlJRzVsZHlCTkxDQmZiQ0E5SUc1bGR5QndaU3dnVFd3Z1BTQnVaWGNnWjNRc0lGcHVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURBc0lIUWdQU0F3TENCdUlEMGdNQ3dnYVNBOUlGcHVMa1JsWm1GMWJIUlBjbVJsY2lsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHVXNJSFJvYVhNdVgza2dQU0IwTENCMGFHbHpMbDk2SUQwZ2Jpd2dkR2hwY3k1ZmIzSmtaWElnUFNCcE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnZUNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1VzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTVPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIa29aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYM2tnUFNCbExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnZWlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZWpzS0lDQWdJSDBLSUNBZ0lITmxkQ0I2S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5NklEMGdaU3dnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMElHOXlaR1Z5S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl2Y21SbGNqc0tJQ0FnSUgwS0lDQWdJSE5sZENCdmNtUmxjaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmYjNKa1pYSWdQU0JsTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2s3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZEN3Z2Jpd2dhU0E5SUhSb2FYTXVYMjl5WkdWeUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnZ1BTQmxMQ0IwYUdsekxsOTVJRDBnZEN3Z2RHaHBjeTVmZWlBOUlHNHNJSFJvYVhNdVgyOXlaR1Z5SUQwZ2FTd2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtIUm9hWE11WDNnc0lIUm9hWE11WDNrc0lIUm9hWE11WDNvc0lIUm9hWE11WDI5eVpHVnlLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTRJRDBnWlM1ZmVDd2dkR2hwY3k1ZmVTQTlJR1V1WDNrc0lIUm9hWE11WDNvZ1BTQmxMbDk2TENCMGFHbHpMbDl2Y21SbGNpQTlJR1V1WDI5eVpHVnlMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvWlN3Z2RDQTlJSFJvYVhNdVgyOXlaR1Z5TENCdUlEMGdJVEFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVdVpXeGxiV1Z1ZEhNc0lISWdQU0JwV3pCZExDQnZJRDBnYVZzMFhTd2dZU0E5SUdsYk9GMHNJR3dnUFNCcFd6RmRMQ0JqSUQwZ2FWczFYU3dnYUNBOUlHbGJPVjBzSUhVZ1BTQnBXekpkTENCa0lEMGdhVnMyWFN3Z1ppQTlJR2xiTVRCZE93b2dJQ0FnSUNBZ0lITjNhWFJqYUNoMEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXRmxhSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2tnUFNCTllYUm9MbUZ6YVc0b2JYUW9ZU3dnTFRFc0lERXBLU3dnVFdGMGFDNWhZbk1vWVNrZ1BDQXVPVGs1T1RrNU9TQS9JQ2gwYUdsekxsOTRJRDBnVFdGMGFDNWhkR0Z1TWlndGFDd2daaWtzSUhSb2FYTXVYM29nUFNCTllYUm9MbUYwWVc0eUtDMXZMQ0J5S1NrZ09pQW9kR2hwY3k1ZmVDQTlJRTFoZEdndVlYUmhiaklvWkN3Z1l5a3NJSFJvYVhNdVgzb2dQU0F3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0paV0ZvaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlFMWhkR2d1WVhOcGJpZ3RiWFFvYUN3Z0xURXNJREVwS1N3Z1RXRjBhQzVoWW5Nb2FDa2dQQ0F1T1RrNU9UazVPU0EvSUNoMGFHbHpMbDk1SUQwZ1RXRjBhQzVoZEdGdU1paGhMQ0JtS1N3Z2RHaHBjeTVmZWlBOUlFMWhkR2d1WVhSaGJqSW9iQ3dnWXlrcElEb2dLSFJvYVhNdVgza2dQU0JOWVhSb0xtRjBZVzR5S0MxMUxDQnlLU3dnZEdocGN5NWZlaUE5SURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxwWVdTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5NElEMGdUV0YwYUM1aGMybHVLRzEwS0dRc0lDMHhMQ0F4S1Nrc0lFMWhkR2d1WVdKektHUXBJRHdnTGprNU9UazVPVGtnUHlBb2RHaHBjeTVmZVNBOUlFMWhkR2d1WVhSaGJqSW9MWFVzSUdZcExDQjBhR2x6TGw5NklEMGdUV0YwYUM1aGRHRnVNaWd0Ynl3Z1l5a3BJRG9nS0hSb2FYTXVYM2tnUFNBd0xDQjBhR2x6TGw5NklEMGdUV0YwYUM1aGRHRnVNaWhzTENCeUtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVdsbFlJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgza2dQU0JOWVhSb0xtRnphVzRvTFcxMEtIVXNJQzB4TENBeEtTa3NJRTFoZEdndVlXSnpLSFVwSUR3Z0xqazVPVGs1T1RrZ1B5QW9kR2hwY3k1ZmVDQTlJRTFoZEdndVlYUmhiaklvWkN3Z1ppa3NJSFJvYVhNdVgzb2dQU0JOWVhSb0xtRjBZVzR5S0d3c0lISXBLU0E2SUNoMGFHbHpMbDk0SUQwZ01Dd2dkR2hwY3k1ZmVpQTlJRTFoZEdndVlYUmhiaklvTFc4c0lHTXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlpXbGdpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlaUE5SUUxaGRHZ3VZWE5wYmlodGRDaHNMQ0F0TVN3Z01Ta3BMQ0JOWVhSb0xtRmljeWhzS1NBOElDNDVPVGs1T1RrNUlEOGdLSFJvYVhNdVgzZ2dQU0JOWVhSb0xtRjBZVzR5S0Mxb0xDQmpLU3dnZEdocGN5NWZlU0E5SUUxaGRHZ3VZWFJoYmpJb0xYVXNJSElwS1NBNklDaDBhR2x6TGw5NElEMGdNQ3dnZEdocGN5NWZlU0E5SUUxaGRHZ3VZWFJoYmpJb1lTd2daaWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbGhhV1NJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDk2SUQwZ1RXRjBhQzVoYzJsdUtDMXRkQ2h2TENBdE1Td2dNU2twTENCTllYUm9MbUZpY3lodktTQThJQzQ1T1RrNU9UazVJRDhnS0hSb2FYTXVYM2dnUFNCTllYUm9MbUYwWVc0eUtHUXNJR01wTENCMGFHbHpMbDk1SUQwZ1RXRjBhQzVoZEdGdU1paGhMQ0J5S1NrZ09pQW9kR2hwY3k1ZmVDQTlJRTFoZEdndVlYUmhiaklvTFdnc0lHWXBMQ0IwYUdsekxsOTVJRDBnTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVJYVnNaWEk2SUM1elpYUkdjbTl0VW05MFlYUnBiMjVOWVhSeWFYZ29LU0JsYm1OdmRXNTBaWEpsWkNCaGJpQjFibXR1YjNkdUlHOXlaR1Z5T2lBaUlDc2dkQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXZjbVJsY2lBOUlIUXNJRzRnUFQwOUlDRXdJQ1ltSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVJkV0YwWlhKdWFXOXVLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYMnd1YldGclpWSnZkR0YwYVc5dVJuSnZiVkYxWVhSbGNtNXBiMjRvWlNrc0lIUm9hWE11YzJWMFJuSnZiVkp2ZEdGMGFXOXVUV0YwY21sNEtGOXNMQ0IwTENCdUtUc0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVdaV04wYjNJektHVXNJSFFnUFNCMGFHbHpMbDl2Y21SbGNpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDaGxMbmdzSUdVdWVTd2daUzU2TENCMEtUc0tJQ0FnSUgwS0lDQWdJSEpsYjNKa1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOYkM1elpYUkdjbTl0UlhWc1pYSW9kR2hwY3lrc0lIUm9hWE11YzJWMFJuSnZiVkYxWVhSbGNtNXBiMjRvVFd3c0lHVXBPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1ZmVDQTlQVDBnZEdocGN5NWZlQ0FtSmlCbExsOTVJRDA5UFNCMGFHbHpMbDk1SUNZbUlHVXVYM29nUFQwOUlIUm9hWE11WDNvZ0ppWWdaUzVmYjNKa1pYSWdQVDA5SUhSb2FYTXVYMjl5WkdWeU93b2dJQ0FnZlFvZ0lDQWdabkp2YlVGeWNtRjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0E5SUdWYk1GMHNJSFJvYVhNdVgza2dQU0JsV3pGZExDQjBhR2x6TGw5NklEMGdaVnN5WFN3Z1pWc3pYU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TGw5dmNtUmxjaUE5SUdWYk0xMHBMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMEZ5Y21GNUtHVWdQU0JiWFN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlZ0MFhTQTlJSFJvYVhNdVgzZ3NJR1ZiZENBcklERmRJRDBnZEdocGN5NWZlU3dnWlZ0MElDc2dNbDBnUFNCMGFHbHpMbDk2TENCbFczUWdLeUF6WFNBOUlIUm9hWE11WDI5eVpHVnlMQ0JsT3dvZ0lDQWdmUW9nSUNBZ2RHOVdaV04wYjNJektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0EvSUdVdWMyVjBLSFJvYVhNdVgzZ3NJSFJvYVhNdVgza3NJSFJvYVhNdVgzb3BJRG9nYm1WM0lFMG9kR2hwY3k1ZmVDd2dkR2hwY3k1ZmVTd2dkR2hwY3k1ZmVpazdDaUFnSUNCOUNpQWdJQ0JmYjI1RGFHRnVaMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUY5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0NrZ2UzMEtmVHNLV200dWNISnZkRzkwZVhCbExtbHpSWFZzWlhJZ1BTQWhNRHNLV200dVJHVm1ZWFZzZEU5eVpHVnlJRDBnSWxoWldpSTdDbHB1TGxKdmRHRjBhVzl1VDNKa1pYSnpJRDBnV3dvZ0lDQWdJbGhaV2lJc0NpQWdJQ0FpV1ZwWUlpd0tJQ0FnSUNKYVdGa2lMQW9nSUNBZ0lsaGFXU0lzQ2lBZ0lDQWlXVmhhSWl3S0lDQWdJQ0phV1ZnaUNsMDdDblpoY2lCS2N5QTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlYTnJJRDBnTVRzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhOcklEMGdLREVnUER3Z1pTQjhJREFwSUQ0K1BpQXdPd29nSUNBZ2ZRb2dJQ0FnWlc1aFlteGxLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoYzJzZ2ZEMGdNU0E4UENCbElId2dNRHNLSUNBZ0lIMEtJQ0FnSUdWdVlXSnNaVUZzYkNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGMyc2dQU0F0TVRzS0lDQWdJSDBLSUNBZ0lIUnZaMmRzWlNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlYTnJJRjQ5SURFZ1BEd2daU0I4SURBN0NpQWdJQ0I5Q2lBZ0lDQmthWE5oWW14bEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWhjMnNnSmowZ2ZpZ3hJRHc4SUdVZ2ZDQXdLVHNLSUNBZ0lIMEtJQ0FnSUdScGMyRmliR1ZCYkd3b0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlYTnJJRDBnTURzS0lDQWdJSDBLSUNBZ0lIUmxjM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBb2RHaHBjeTV0WVhOcklDWWdaUzV0WVhOcktTQWhQVDBnTURzS0lDQWdJSDBLSUNBZ0lHbHpSVzVoWW14bFpDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ2gwYUdsekxtMWhjMnNnSmlBb01TQThQQ0JsSUh3Z01Da3BJQ0U5UFNBd093b2dJQ0FnZlFwOUxDQnlaaUE5SURBc0lHSnNJRDBnYm1WM0lFMHNJRzlwSUQwZ2JtVjNJR2QwTENCUmRDQTlJRzVsZHlCd1pTd2dKSElnUFNCdVpYY2dUU3dnV21rZ1BTQnVaWGNnVFN3Z2MyWWdQU0J1WlhjZ1RTd2diMllnUFNCdVpYY2daM1FzSUhkc0lEMGdibVYzSUUwb01Td2dNQ3dnTUNrc0lGTnNJRDBnYm1WM0lFMG9NQ3dnTVN3Z01Da3NJRlJzSUQwZ2JtVjNJRTBvTUN3Z01Dd2dNU2tzSUdGbUlEMGdld29nSUNBZ2RIbHdaVG9nSW1Ga1pHVmtJZ3A5TENCRmJDQTlJSHNLSUNBZ0lIUjVjR1U2SUNKeVpXMXZkbVZrSWdwOUxDQk9aU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdSVzRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaDBhR2x6TENBaWFXUWlMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCeVppc3JDaUFnSUNBZ0lDQWdmU2tzSUhSb2FYTXVkWFZwWkNBOUlFVjBLQ2tzSUhSb2FYTXVibUZ0WlNBOUlDSWlMQ0IwYUdsekxuUjVjR1VnUFNBaVQySnFaV04wTTBRaUxDQjBhR2x6TG5CaGNtVnVkQ0E5SUc1MWJHd3NJSFJvYVhNdVkyaHBiR1J5Wlc0Z1BTQmJYU3dnZEdocGN5NTFjQ0E5SUU1bExrUmxabUYxYkhSVmNDNWpiRzl1WlNncE93b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2JtVjNJRTBzSUhRZ1BTQnVaWGNnV200c0lHNGdQU0J1WlhjZ1ozUXNJR2tnUFNCdVpYY2dUU2d4TENBeExDQXhLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ5S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J1TG5ObGRFWnliMjFGZFd4bGNpaDBMQ0FoTVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHOG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVjMlYwUm5KdmJWRjFZWFJsY201cGIyNG9iaXdnZG05cFpDQXdMQ0FoTVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUXVYMjl1UTJoaGJtZGxLSElwTENCdUxsOXZia05vWVc1blpTaHZLU3dnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25ScFpYTW9kR2hwY3l3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVptbG5kWEpoWW14bE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1ZFcxbGNtRmliR1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUdVS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtOTBZWFJwYjI0NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibVpwWjNWeVlXSnNaVG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJuVnRaWEpoWW14bE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQjBDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSEYxWVhSbGNtNXBiMjQ2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJtWnBaM1Z5WVdKc1pUb2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm5WdFpYSmhZbXhsT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdUNpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmpZV3hsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNW1hV2QxY21GaWJHVTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1MWJXVnlZV0pzWlRvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2FRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnRiMlJsYkZacFpYZE5ZWFJ5YVhnNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2djR1VLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm05eWJXRnNUV0YwY21sNE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJR3gwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NXRZWFJ5YVhnZ1BTQnVaWGNnY0dVc0lIUm9hWE11YldGMGNtbDRWMjl5YkdRZ1BTQnVaWGNnY0dVc0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUU1bExrUmxabUYxYkhSTllYUnlhWGhCZFhSdlZYQmtZWFJsTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NXNZWGxsY25NZ1BTQnVaWGNnU25Nc0lIUm9hWE11ZG1semFXSnNaU0E5SUNFd0xDQjBhR2x6TG1OaGMzUlRhR0ZrYjNjZ1BTQWhNU3dnZEdocGN5NXlaV05sYVhabFUyaGhaRzkzSUQwZ0lURXNJSFJvYVhNdVpuSjFjM1IxYlVOMWJHeGxaQ0E5SUNFd0xDQjBhR2x6TG5KbGJtUmxjazl5WkdWeUlEMGdNQ3dnZEdocGN5NWhibWx0WVhScGIyNXpJRDBnVzEwc0lIUm9hWE11ZFhObGNrUmhkR0VnUFNCN2ZUc0tJQ0FnSUgwS0lDQWdJRzl1UW1WbWIzSmxVbVZ1WkdWeUtDa2dlMzBLSUNBZ0lHOXVRV1owWlhKU1pXNWtaWElvS1NCN2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ0ppWWdkR2hwY3k1MWNHUmhkR1ZOWVhSeWFYZ29LU3dnZEdocGN5NXRZWFJ5YVhndWNISmxiWFZzZEdsd2JIa29aU2tzSUhSb2FYTXViV0YwY21sNExtUmxZMjl0Y0c5elpTaDBhR2x6TG5CdmMybDBhVzl1TENCMGFHbHpMbkYxWVhSbGNtNXBiMjRzSUhSb2FYTXVjMk5oYkdVcE93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsUmRXRjBaWEp1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eGRXRjBaWEp1YVc5dUxuQnlaVzExYkhScGNHeDVLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVtOTBZWFJwYjI1R2NtOXRRWGhwYzBGdVoyeGxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5GMVlYUmxjbTVwYjI0dWMyVjBSbkp2YlVGNGFYTkJibWRzWlNobExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUhObGRGSnZkR0YwYVc5dVJuSnZiVVYxYkdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuRjFZWFJsY201cGIyNHVjMlYwUm5KdmJVVjFiR1Z5S0dVc0lDRXdLVHNLSUNBZ0lIMEtJQ0FnSUhObGRGSnZkR0YwYVc5dVJuSnZiVTFoZEhKcGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXhkV0YwWlhKdWFXOXVMbk5sZEVaeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNobEtUc0tJQ0FnSUgwS0lDQWdJSE5sZEZKdmRHRjBhVzl1Um5KdmJWRjFZWFJsY201cGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjWFZoZEdWeWJtbHZiaTVqYjNCNUtHVXBPd29nSUNBZ2ZRb2dJQ0FnY205MFlYUmxUMjVCZUdsektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYjJrdWMyVjBSbkp2YlVGNGFYTkJibWRzWlNobExDQjBLU3dnZEdocGN5NXhkV0YwWlhKdWFXOXVMbTExYkhScGNHeDVLRzlwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKdmRHRjBaVTl1VjI5eWJHUkJlR2x6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiMmt1YzJWMFJuSnZiVUY0YVhOQmJtZHNaU2hsTENCMEtTd2dkR2hwY3k1eGRXRjBaWEp1YVc5dUxuQnlaVzExYkhScGNHeDVLRzlwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKdmRHRjBaVmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkp2ZEdGMFpVOXVRWGhwY3loM2JDd2daU2s3Q2lBZ0lDQjlDaUFnSUNCeWIzUmhkR1ZaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5YjNSaGRHVlBia0Y0YVhNb1Uyd3NJR1VwT3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsV2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y205MFlYUmxUMjVCZUdsektGUnNMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6YkdGMFpVOXVRWGhwY3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0pzTG1OdmNIa29aU2t1WVhCd2JIbFJkV0YwWlhKdWFXOXVLSFJvYVhNdWNYVmhkR1Z5Ym1sdmJpa3NJSFJvYVhNdWNHOXphWFJwYjI0dVlXUmtLR0pzTG0xMWJIUnBjR3g1VTJOaGJHRnlLSFFwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlZnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5SeVlXNXpiR0YwWlU5dVFYaHBjeWgzYkN3Z1pTazdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyeGhkR1ZaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwY21GdWMyeGhkR1ZQYmtGNGFYTW9VMndzSUdVcE93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5Oc1lYUmxXaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkSEpoYm5Oc1lYUmxUMjVCZUdsektGUnNMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZMkZzVkc5WGIzSnNaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBPd29nSUNBZ2ZRb2dJQ0FnZDI5eWJHUlViMHh2WTJGc0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVoY0hCc2VVMWhkSEpwZURRb1VYUXVZMjl3ZVNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1M1cGJuWmxjblFvS1NrN0NpQWdJQ0I5Q2lBZ0lDQnNiMjlyUVhRb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHVXVhWE5XWldOMGIzSXpJRDhnSkhJdVkyOXdlU2hsS1NBNklDUnlMbk5sZENobExDQjBMQ0J1S1RzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVjR0Z5Wlc1ME93b2dJQ0FnSUNBZ0lIUm9hWE11ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvSVRBc0lDRXhLU3dnV21rdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxtbHpRMkZ0WlhKaElIeDhJSFJvYVhNdWFYTk1hV2RvZENBL0lGRjBMbXh2YjJ0QmRDaGFhU3dnSkhJc0lIUm9hWE11ZFhBcElEb2dVWFF1Ykc5dmEwRjBLQ1J5TENCYWFTd2dkR2hwY3k1MWNDa3NJSFJvYVhNdWNYVmhkR1Z5Ym1sdmJpNXpaWFJHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvVVhRcExDQnBJQ1ltSUNoUmRDNWxlSFJ5WVdOMFVtOTBZWFJwYjI0b2FTNXRZWFJ5YVhoWGIzSnNaQ2tzSUc5cExuTmxkRVp5YjIxU2IzUmhkR2x2YmsxaGRISnBlQ2hSZENrc0lIUm9hWE11Y1hWaGRHVnlibWx2Ymk1d2NtVnRkV3gwYVhCc2VTaHZhUzVwYm5abGNuUW9LU2twT3dvZ0lDQWdmUW9nSUNBZ1lXUmtLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9ZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQStJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTURzZ2RDQThJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJSFFyS3lsMGFHbHpMbUZrWkNoaGNtZDFiV1Z1ZEhOYmRGMHBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdQVDA5SUhSb2FYTWdQeUFvWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVQySnFaV04wTTBRdVlXUmtPaUJ2WW1wbFkzUWdZMkZ1SjNRZ1ltVWdZV1JrWldRZ1lYTWdZU0JqYUdsc1pDQnZaaUJwZEhObGJHWXVJaXdnWlNrc0lIUm9hWE1wSURvZ0tHVWdKaVlnWlM1cGMwOWlhbVZqZERORUlEOGdLR1V1Y0dGeVpXNTBJQ0U5UFNCdWRXeHNJQ1ltSUdVdWNHRnlaVzUwTG5KbGJXOTJaU2hsS1N3Z1pTNXdZWEpsYm5RZ1BTQjBhR2x6TENCMGFHbHpMbU5vYVd4a2NtVnVMbkIxYzJnb1pTa3NJR1V1WkdsemNHRjBZMmhGZG1WdWRDaGhaaWtwSURvZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUMkpxWldOME0wUXVZV1JrT2lCdlltcGxZM1FnYm05MElHRnVJR2x1YzNSaGJtTmxJRzltSUZSSVVrVkZMazlpYW1WamRETkVMaUlzSUdVcExDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lISmxiVzkyWlNobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0dGeVozVnRaVzUwY3k1c1pXNW5kR2dnUGlBeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENCaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvT3lCdUt5c3BkR2hwY3k1eVpXMXZkbVVvWVhKbmRXMWxiblJ6VzI1ZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYUdsc1pISmxiaTVwYm1SbGVFOW1LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUNFOVBTQXRNU0FtSmlBb1pTNXdZWEpsYm5RZ1BTQnVkV3hzTENCMGFHbHpMbU5vYVd4a2NtVnVMbk53YkdsalpTaDBMQ0F4S1N3Z1pTNWthWE53WVhSamFFVjJaVzUwS0VWc0tTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnlaVzF2ZG1WR2NtOXRVR0Z5Wlc1MEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1d1lYSmxiblE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnSVQwOUlHNTFiR3dnSmlZZ1pTNXlaVzF2ZG1Vb2RHaHBjeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdWaGNpZ3BJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBd095QmxJRHdnZEdocGN5NWphR2xzWkhKbGJpNXNaVzVuZEdnN0lHVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYUdsc1pISmxibHRsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkQzV3WVhKbGJuUWdQU0J1ZFd4c0xDQjBMbVJwYzNCaGRHTm9SWFpsYm5Rb1JXd3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amFHbHNaSEpsYmk1c1pXNW5kR2dnUFNBd0xDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYUjBZV05vS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2doTUN3Z0lURXBMQ0JSZEM1amIzQjVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BMQ0JsTG5CaGNtVnVkQ0FoUFQwZ2JuVnNiQ0FtSmlBb1pTNXdZWEpsYm5RdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lUQXNJQ0V4S1N3Z1VYUXViWFZzZEdsd2JIa29aUzV3WVhKbGJuUXViV0YwY21sNFYyOXliR1FwS1N3Z1pTNWhjSEJzZVUxaGRISnBlRFFvVVhRcExDQjBhR2x6TG1Ga1pDaGxLU3dnWlM1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Td2dJVEFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFQySnFaV04wUW5sSlpDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBUMkpxWldOMFFubFFjbTl3WlhKMGVTZ2lhV1FpTENCbEtUc0tJQ0FnSUgwS0lDQWdJR2RsZEU5aWFtVmpkRUo1VG1GdFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBUMkpxWldOMFFubFFjbTl3WlhKMGVTZ2libUZ0WlNJc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFQySnFaV04wUW5sUWNtOXdaWEowZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE5iWlYwZ1BUMDlJSFFwSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBhR2x6TG1Ob2FXeGtjbVZ1TG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdkR2hwY3k1amFHbHNaSEpsYmx0dVhTNW5aWFJQWW1wbFkzUkNlVkJ5YjNCbGNuUjVLR1VzSUhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2J5QWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdienNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCblpYUlhiM0pzWkZCdmMybDBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2doTUN3Z0lURXBMQ0JsTG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDBhR2x6TG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUgwS0lDQWdJR2RsZEZkdmNteGtVWFZoZEdWeWJtbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEFzSUNFeEtTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pDNWtaV052YlhCdmMyVW9XbWtzSUdVc0lITm1LU3dnWlRzS0lDQWdJSDBLSUNBZ0lHZGxkRmR2Y214a1UyTmhiR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLQ0V3TENBaE1Ta3NJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXVaR1ZqYjIxd2IzTmxLRnBwTENCdlppd2daU2tzSUdVN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJYYjNKc1pFUnBjbVZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV0WVhSeWFYaFhiM0pzWkM1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1elpYUW9kRnM0WFN3Z2RGczVYU3dnZEZzeE1GMHBMbTV2Y20xaGJHbDZaU2dwT3dvZ0lDQWdmUW9nSUNBZ2NtRjVZMkZ6ZENncElIdDlDaUFnSUNCMGNtRjJaWEp6WlNobEtTQjdDaUFnSUNBZ0lDQWdaU2gwYUdsektUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJocGJHUnlaVzQ3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUhRdWJHVnVaM1JvT3lCdUlEd2dhVHNnYmlzcktYUmJibDB1ZEhKaGRtVnljMlVvWlNrN0NpQWdJQ0I5Q2lBZ0lDQjBjbUYyWlhKelpWWnBjMmxpYkdVb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMblpwYzJsaWJHVWdQVDA5SUNFeEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ1pTaDBhR2x6S1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMmhwYkdSeVpXNDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJSFF1YkdWdVozUm9PeUJ1SUR3Z2FUc2diaXNyS1hSYmJsMHVkSEpoZG1WeWMyVldhWE5wWW14bEtHVXBPd29nSUNBZ2ZRb2dJQ0FnZEhKaGRtVnljMlZCYm1ObGMzUnZjbk1vWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV3WVhKbGJuUTdDaUFnSUNBZ0lDQWdkQ0FoUFQwZ2JuVnNiQ0FtSmlBb1pTaDBLU3dnZEM1MGNtRjJaWEp6WlVGdVkyVnpkRzl5Y3lobEtTazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVhnb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlYUnlhWGd1WTI5dGNHOXpaU2gwYUdsekxuQnZjMmwwYVc5dUxDQjBhR2x6TG5GMVlYUmxjbTVwYjI0c0lIUm9hWE11YzJOaGJHVXBMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdKaVlnZEdocGN5NTFjR1JoZEdWTllYUnlhWGdvS1N3Z0tIUm9hWE11YldGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpTQjhmQ0JsS1NBbUppQW9kR2hwY3k1d1lYSmxiblFnUFQwOUlHNTFiR3dnUHlCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG1OdmNIa29kR2hwY3k1dFlYUnlhWGdwSURvZ2RHaHBjeTV0WVhSeWFYaFhiM0pzWkM1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0hSb2FYTXVjR0Z5Wlc1MExtMWhkSEpwZUZkdmNteGtMQ0IwYUdsekxtMWhkSEpwZUNrc0lIUm9hWE11YldGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpTQTlJQ0V4TENCbElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWphR2xzWkhKbGJqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZEZ0dVhTNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVmR2Y214a1RXRjBjbWw0S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWNHRnlaVzUwT3dvZ0lDQWdJQ0FnSUdsbUlDaGxJRDA5UFNBaE1DQW1KaUJ1SUNFOVBTQnVkV3hzSUNZbUlHNHVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEFzSUNFeEtTd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUNZbUlIUm9hWE11ZFhCa1lYUmxUV0YwY21sNEtDa3NJSFJvYVhNdWNHRnlaVzUwSUQwOVBTQnVkV3hzSUQ4Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkM1amIzQjVLSFJvYVhNdWJXRjBjbWw0S1NBNklIUm9hWE11YldGMGNtbDRWMjl5YkdRdWJYVnNkR2x3YkhsTllYUnlhV05sY3loMGFHbHpMbkJoY21WdWRDNXRZWFJ5YVhoWGIzSnNaQ3dnZEdocGN5NXRZWFJ5YVhncExDQjBJRDA5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVZMmhwYkdSeVpXNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCcExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bHBXM0pkTG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0NFeExDQWhNQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVWdQVDA5SUhadmFXUWdNQ0I4ZkNCMGVYQmxiMllnWlNBOVBTQWljM1J5YVc1bklpd2diaUE5SUh0OU93b2dJQ0FnSUNBZ0lIUWdKaVlnS0dVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdkbGIyMWxkSEpwWlhNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNCdFlYUmxjbWxoYkhNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNCMFpYaDBkWEpsY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUdsdFlXZGxjem9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWVhCbGN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITnJaV3hsZEc5dWN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRnVhVzFoZEdsdmJuTTZJSHQ5Q2lBZ0lDQWdJQ0FnZlN3Z2JpNXRaWFJoWkdGMFlTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ05DNDFMQW9nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpVDJKcVpXTjBJaXdLSUNBZ0lDQWdJQ0FnSUNBZ1oyVnVaWEpoZEc5eU9pQWlUMkpxWldOME0wUXVkRzlLVTA5T0lnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdlMzA3Q2lBZ0lDQWdJQ0FnYVM1MWRXbGtJRDBnZEdocGN5NTFkV2xrTENCcExuUjVjR1VnUFNCMGFHbHpMblI1Y0dVc0lIUm9hWE11Ym1GdFpTQWhQVDBnSWlJZ0ppWWdLR2t1Ym1GdFpTQTlJSFJvYVhNdWJtRnRaU2tzSUhSb2FYTXVZMkZ6ZEZOb1lXUnZkeUE5UFQwZ0lUQWdKaVlnS0drdVkyRnpkRk5vWVdSdmR5QTlJQ0V3S1N3Z2RHaHBjeTV5WldObGFYWmxVMmhoWkc5M0lEMDlQU0FoTUNBbUppQW9hUzV5WldObGFYWmxVMmhoWkc5M0lEMGdJVEFwTENCMGFHbHpMblpwYzJsaWJHVWdQVDA5SUNFeElDWW1JQ2hwTG5acGMybGliR1VnUFNBaE1Ta3NJSFJvYVhNdVpuSjFjM1IxYlVOMWJHeGxaQ0E5UFQwZ0lURWdKaVlnS0drdVpuSjFjM1IxYlVOMWJHeGxaQ0E5SUNFeEtTd2dkR2hwY3k1eVpXNWtaWEpQY21SbGNpQWhQVDBnTUNBbUppQW9hUzV5Wlc1a1pYSlBjbVJsY2lBOUlIUm9hWE11Y21WdVpHVnlUM0prWlhJcExDQktVMDlPTG5OMGNtbHVaMmxtZVNoMGFHbHpMblZ6WlhKRVlYUmhLU0FoUFQwZ0ludDlJaUFtSmlBb2FTNTFjMlZ5UkdGMFlTQTlJSFJvYVhNdWRYTmxja1JoZEdFcExDQnBMbXhoZVdWeWN5QTlJSFJvYVhNdWJHRjVaWEp6TG0xaGMyc3NJR2t1YldGMGNtbDRJRDBnZEdocGN5NXRZWFJ5YVhndWRHOUJjbkpoZVNncExDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFQwOUlDRXhJQ1ltSUNocExtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU2tzSUhSb2FYTXVhWE5KYm5OMFlXNWpaV1JOWlhOb0lDWW1JQ2hwTG5SNWNHVWdQU0FpU1c1emRHRnVZMlZrVFdWemFDSXNJR2t1WTI5MWJuUWdQU0IwYUdsekxtTnZkVzUwTENCcExtbHVjM1JoYm1ObFRXRjBjbWw0SUQwZ2RHaHBjeTVwYm5OMFlXNWpaVTFoZEhKcGVDNTBiMHBUVDA0b0tTd2dkR2hwY3k1cGJuTjBZVzVqWlVOdmJHOXlJQ0U5UFNCdWRXeHNJQ1ltSUNocExtbHVjM1JoYm1ObFEyOXNiM0lnUFNCMGFHbHpMbWx1YzNSaGJtTmxRMjlzYjNJdWRHOUtVMDlPS0NrcEtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnlLR0VzSUd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0ZiYkM1MWRXbGtYU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaGhXMnd1ZFhWcFpGMGdQU0JzTG5SdlNsTlBUaWhsS1Nrc0lHd3VkWFZwWkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFYTlRZMlZ1WlNrZ2RHaHBjeTVpWVdOclozSnZkVzVrSUNZbUlDaDBhR2x6TG1KaFkydG5jbTkxYm1RdWFYTkRiMnh2Y2lBL0lHa3VZbUZqYTJkeWIzVnVaQ0E5SUhSb2FYTXVZbUZqYTJkeWIzVnVaQzUwYjBwVFQwNG9LU0E2SUhSb2FYTXVZbUZqYTJkeWIzVnVaQzVwYzFSbGVIUjFjbVVnSmlZZ0tHa3VZbUZqYTJkeWIzVnVaQ0E5SUhSb2FYTXVZbUZqYTJkeWIzVnVaQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3BMQ0IwYUdsekxtVnVkbWx5YjI1dFpXNTBJQ1ltSUhSb2FYTXVaVzUyYVhKdmJtMWxiblF1YVhOVVpYaDBkWEpsSUNZbUlDaHBMbVZ1ZG1seWIyNXRaVzUwSUQwZ2RHaHBjeTVsYm5acGNtOXViV1Z1ZEM1MGIwcFRUMDRvWlNrdWRYVnBaQ2s3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvZEdocGN5NXBjMDFsYzJnZ2ZId2dkR2hwY3k1cGMweHBibVVnZkh3Z2RHaHBjeTVwYzFCdmFXNTBjeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBMbWRsYjIxbGRISjVJRDBnY2lobExtZGxiMjFsZEhKcFpYTXNJSFJvYVhNdVoyVnZiV1YwY25rcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVoyVnZiV1YwY25rdWNHRnlZVzFsZEdWeWN6c0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHRWdJVDA5SUhadmFXUWdNQ0FtSmlCaExuTm9ZWEJsY3lBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHRXVjMmhoY0dWek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb2JDa3BJR1p2Y2loc1pYUWdZeUE5SURBc0lHZ2dQU0JzTG14bGJtZDBhRHNnWXlBOElHZzdJR01yS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQnNXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISW9aUzV6YUdGd1pYTXNJSFVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnlLR1V1YzJoaGNHVnpMQ0JzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVwYzFOcmFXNXVaV1JOWlhOb0lDWW1JQ2hwTG1KcGJtUk5iMlJsSUQwZ2RHaHBjeTVpYVc1a1RXOWtaU3dnYVM1aWFXNWtUV0YwY21sNElEMGdkR2hwY3k1aWFXNWtUV0YwY21sNExuUnZRWEp5WVhrb0tTd2dkR2hwY3k1emEyVnNaWFJ2YmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h5S0dVdWMydGxiR1YwYjI1ekxDQjBhR2x6TG5OclpXeGxkRzl1S1N3Z2FTNXphMlZzWlhSdmJpQTlJSFJvYVhNdWMydGxiR1YwYjI0dWRYVnBaQ2twTENCMGFHbHpMbTFoZEdWeWFXRnNJQ0U5UFNCMmIybGtJREFwSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0hSb2FYTXViV0YwWlhKcFlXd3BLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlEQXNJR01nUFNCMGFHbHpMbTFoZEdWeWFXRnNMbXhsYm1kMGFEc2diQ0E4SUdNN0lHd3JLeWxoTG5CMWMyZ29jaWhsTG0xaGRHVnlhV0ZzY3l3Z2RHaHBjeTV0WVhSbGNtbGhiRnRzWFNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwTG0xaGRHVnlhV0ZzSUQwZ1lUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FTNXRZWFJsY21saGJDQTlJSElvWlM1dFlYUmxjbWxoYkhNc0lIUm9hWE11YldGMFpYSnBZV3dwT3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1Ob2FXeGtjbVZ1TG14bGJtZDBhQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVM1amFHbHNaSEpsYmlBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ1BTQXdPeUJoSUR3Z2RHaHBjeTVqYUdsc1pISmxiaTVzWlc1bmRHZzdJR0VyS3lscExtTm9hV3hrY21WdUxuQjFjMmdvZEdocGN5NWphR2xzWkhKbGJsdGhYUzUwYjBwVFQwNG9aU2t1YjJKcVpXTjBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WVc1cGJXRjBhVzl1Y3k1c1pXNW5kR2dnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdrdVlXNXBiV0YwYVc5dWN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdQU0F3T3lCaElEd2dkR2hwY3k1aGJtbHRZWFJwYjI1ekxteGxibWQwYURzZ1lTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdkR2hwY3k1aGJtbHRZWFJwYjI1elcyRmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzVoYm1sdFlYUnBiMjV6TG5CMWMyZ29jaWhsTG1GdWFXMWhkR2x2Ym5Nc0lHd3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzhvWlM1blpXOXRaWFJ5YVdWektTd2diQ0E5SUc4b1pTNXRZWFJsY21saGJITXBMQ0JqSUQwZ2J5aGxMblJsZUhSMWNtVnpLU3dnYUNBOUlHOG9aUzVwYldGblpYTXBMQ0IxSUQwZ2J5aGxMbk5vWVhCbGN5a3NJR1FnUFNCdktHVXVjMnRsYkdWMGIyNXpLU3dnWmlBOUlHOG9aUzVoYm1sdFlYUnBiMjV6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdZUzVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbWRsYjIxbGRISnBaWE1nUFNCaEtTd2diQzVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbTFoZEdWeWFXRnNjeUE5SUd3cExDQmpMbXhsYm1kMGFDQStJREFnSmlZZ0tHNHVkR1Y0ZEhWeVpYTWdQU0JqS1N3Z2FDNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtbHRZV2RsY3lBOUlHZ3BMQ0IxTG14bGJtZDBhQ0ErSURBZ0ppWWdLRzR1YzJoaGNHVnpJRDBnZFNrc0lHUXViR1Z1WjNSb0lENGdNQ0FtSmlBb2JpNXphMlZzWlhSdmJuTWdQU0JrS1N3Z1ppNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtRnVhVzFoZEdsdmJuTWdQU0JtS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWIySnFaV04wSUQwZ2FTd2dianNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ2S0dFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmpJR2x1SUdFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCaFcyTmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElHZ3ViV1YwWVdSaGRHRXNJR3d1Y0hWemFDaG9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlN3Z2RDQTlJQ0V3S1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWJtRnRaU0E5SUdVdWJtRnRaU3dnZEdocGN5NTFjQzVqYjNCNUtHVXVkWEFwTENCMGFHbHpMbkJ2YzJsMGFXOXVMbU52Y0hrb1pTNXdiM05wZEdsdmJpa3NJSFJvYVhNdWNtOTBZWFJwYjI0dWIzSmtaWElnUFNCbExuSnZkR0YwYVc5dUxtOXlaR1Z5TENCMGFHbHpMbkYxWVhSbGNtNXBiMjR1WTI5d2VTaGxMbkYxWVhSbGNtNXBiMjRwTENCMGFHbHpMbk5qWVd4bExtTnZjSGtvWlM1elkyRnNaU2tzSUhSb2FYTXViV0YwY21sNExtTnZjSGtvWlM1dFlYUnlhWGdwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG1OdmNIa29aUzV0WVhSeWFYaFhiM0pzWkNrc0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUdVdWJXRjBjbWw0UVhWMGIxVndaR0YwWlN3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbElEMGdaUzV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbExDQjBhR2x6TG14aGVXVnljeTV0WVhOcklEMGdaUzVzWVhsbGNuTXViV0Z6YXl3Z2RHaHBjeTUyYVhOcFlteGxJRDBnWlM1MmFYTnBZbXhsTENCMGFHbHpMbU5oYzNSVGFHRmtiM2NnUFNCbExtTmhjM1JUYUdGa2IzY3NJSFJvYVhNdWNtVmpaV2wyWlZOb1lXUnZkeUE5SUdVdWNtVmpaV2wyWlZOb1lXUnZkeXdnZEdocGN5NW1jblZ6ZEhWdFEzVnNiR1ZrSUQwZ1pTNW1jblZ6ZEhWdFEzVnNiR1ZrTENCMGFHbHpMbkpsYm1SbGNrOXlaR1Z5SUQwZ1pTNXlaVzVrWlhKUGNtUmxjaXdnZEdocGN5NTFjMlZ5UkdGMFlTQTlJRXBUVDA0dWNHRnljMlVvU2xOUFRpNXpkSEpwYm1kcFpua29aUzUxYzJWeVJHRjBZU2twTENCMElEMDlQU0FoTUNrZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElHVXVZMmhwYkdSeVpXNHViR1Z1WjNSb095QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVXVZMmhwYkdSeVpXNWJibDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WVdSa0tHa3VZMnh2Ym1Vb0tTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUXA5T3dwT1pTNUVaV1poZFd4MFZYQWdQU0J1WlhjZ1RTZ3dMQ0F4TENBd0tUc0tUbVV1UkdWbVlYVnNkRTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTURzS1RtVXVjSEp2ZEc5MGVYQmxMbWx6VDJKcVpXTjBNMFFnUFNBaE1Ec0tkbUZ5SUVSMElEMGdibVYzSUUwc0lFdDBJRDBnYm1WM0lFMHNJRU52SUQwZ2JtVjNJRTBzSUdWdUlEMGdibVYzSUUwc0lHRnBJRDBnYm1WM0lFMHNJR3hwSUQwZ2JtVjNJRTBzSUVGc0lEMGdibVYzSUUwc0lFeHZJRDBnYm1WM0lFMHNJRkp2SUQwZ2JtVjNJRTBzSUZCdklEMGdibVYzSUUwc0lHNTBJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5Qk5MQ0IwSUQwZ2JtVjNJRTBzSUc0Z1BTQnVaWGNnVFNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVoSUQwZ1pTd2dkR2hwY3k1aUlEMGdkQ3dnZEdocGN5NWpJRDBnYmpzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCblpYUk9iM0p0WVd3b1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR2t1YzNWaVZtVmpkRzl5Y3lodUxDQjBLU3dnUkhRdWMzVmlWbVZqZEc5eWN5aGxMQ0IwS1N3Z2FTNWpjbTl6Y3loRWRDazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnBMbXhsYm1kMGFGTnhLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSElnUGlBd0lEOGdhUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3hJQzhnVFdGMGFDNXpjWEowS0hJcEtTQTZJR2t1YzJWMEtEQXNJREFzSURBcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHZGxkRUpoY25samIyOXlaQ2hsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdSSFF1YzNWaVZtVmpkRzl5Y3locExDQjBLU3dnUzNRdWMzVmlWbVZqZEc5eWN5aHVMQ0IwS1N3Z1EyOHVjM1ZpVm1WamRHOXljeWhsTENCMEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlFUjBMbVJ2ZENoRWRDa3NJR0VnUFNCRWRDNWtiM1FvUzNRcExDQnNJRDBnUkhRdVpHOTBLRU52S1N3Z1l5QTlJRXQwTG1SdmRDaExkQ2tzSUdnZ1BTQkxkQzVrYjNRb1EyOHBMQ0IxSUQwZ2J5QXFJR01nTFNCaElDb2dZVHNLSUNBZ0lDQWdJQ0JwWmlBb2RTQTlQVDBnTUNrZ2NtVjBkWEp1SUhJdWMyVjBLQzB5TENBdE1Td2dMVEVwT3dvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnTVNBdklIVXNJR1lnUFNBb1l5QXFJR3dnTFNCaElDb2dhQ2tnS2lCa0xDQnRJRDBnS0c4Z0tpQm9JQzBnWVNBcUlHd3BJQ29nWkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2k1elpYUW9NU0F0SUdZZ0xTQnRMQ0J0TENCbUtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QmpiMjUwWVdsdWMxQnZhVzUwS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSQ1lYSjVZMjl2Y21Rb1pTd2dkQ3dnYml3Z2FTd2daVzRwTENCbGJpNTRJRDQ5SURBZ0ppWWdaVzR1ZVNBK1BTQXdJQ1ltSUdWdUxuZ2dLeUJsYmk1NUlEdzlJREU3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWjJWMFZWWW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEVKaGNubGpiMjl5WkNobExDQjBMQ0J1TENCcExDQmxiaWtzSUd3dWMyVjBLREFzSURBcExDQnNMbUZrWkZOallXeGxaRlpsWTNSdmNpaHlMQ0JsYmk1NEtTd2diQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9ieXdnWlc0dWVTa3NJR3d1WVdSa1UyTmhiR1ZrVm1WamRHOXlLR0VzSUdWdUxub3BMQ0JzT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdselJuSnZiblJHWVdOcGJtY29aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJFZEM1emRXSldaV04wYjNKektHNHNJSFFwTENCTGRDNXpkV0pXWldOMGIzSnpLR1VzSUhRcExDQkVkQzVqY205emN5aExkQ2t1Wkc5MEtHa3BJRHdnTURzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlTNWpiM0I1S0dVcExDQjBhR2x6TG1JdVkyOXdlU2gwS1N3Z2RHaHBjeTVqTG1OdmNIa29iaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVRzlwYm5SelFXNWtTVzVrYVdObGN5aGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlTNWpiM0I1S0dWYmRGMHBMQ0IwYUdsekxtSXVZMjl3ZVNobFcyNWRLU3dnZEdocGN5NWpMbU52Y0hrb1pWdHBYU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRWFIwY21saWRYUmxRVzVrU1c1a2FXTmxjeWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZUzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dVc0lIUXBMQ0IwYUdsekxtSXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCdUtTd2dkR2hwY3k1akxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnYVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlTNWpiM0I1S0dVdVlTa3NJSFJvYVhNdVlpNWpiM0I1S0dVdVlpa3NJSFJvYVhNdVl5NWpiM0I1S0dVdVl5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJCY21WaEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQkVkQzV6ZFdKV1pXTjBiM0p6S0hSb2FYTXVZeXdnZEdocGN5NWlLU3dnUzNRdWMzVmlWbVZqZEc5eWN5aDBhR2x6TG1Fc0lIUm9hWE11WWlrc0lFUjBMbU55YjNOektFdDBLUzVzWlc1bmRHZ29LU0FxSUM0MU93b2dJQ0FnZlFvZ0lDQWdaMlYwVFdsa2NHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtRmtaRlpsWTNSdmNuTW9kR2hwY3k1aExDQjBhR2x6TG1JcExtRmtaQ2gwYUdsekxtTXBMbTExYkhScGNHeDVVMk5oYkdGeUtERWdMeUF6S1RzS0lDQWdJSDBLSUNBZ0lHZGxkRTV2Y20xaGJDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzUwTG1kbGRFNXZjbTFoYkNoMGFHbHpMbUVzSUhSb2FYTXVZaXdnZEdocGN5NWpMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRkJzWVc1bEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV6WlhSR2NtOXRRMjl3YkdGdVlYSlFiMmx1ZEhNb2RHaHBjeTVoTENCMGFHbHpMbUlzSUhSb2FYTXVZeWs3Q2lBZ0lDQjlDaUFnSUNCblpYUkNZWEo1WTI5dmNtUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdWRDNW5aWFJDWVhKNVkyOXZjbVFvWlN3Z2RHaHBjeTVoTENCMGFHbHpMbUlzSUhSb2FYTXVZeXdnZENrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJWVmlobExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzUwTG1kbGRGVldLR1VzSUhSb2FYTXVZU3dnZEdocGN5NWlMQ0IwYUdsekxtTXNJSFFzSUc0c0lHa3NJSElwT3dvZ0lDQWdmUW9nSUNBZ1kyOXVkR0ZwYm5OUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MExtTnZiblJoYVc1elVHOXBiblFvWlN3Z2RHaHBjeTVoTENCMGFHbHpMbUlzSUhSb2FYTXVZeWs3Q2lBZ0lDQjlDaUFnSUNCcGMwWnliMjUwUm1GamFXNW5LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm5RdWFYTkdjbTl1ZEVaaFkybHVaeWgwYUdsekxtRXNJSFJvYVhNdVlpd2dkR2hwY3k1akxDQmxLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOQ2IzZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1sdWRHVnljMlZqZEhOVWNtbGhibWRzWlNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IzTmxjM1JRYjJsdWRGUnZVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWhMQ0JwSUQwZ2RHaHBjeTVpTENCeUlEMGdkR2hwY3k1akxDQnZMQ0JoT3dvZ0lDQWdJQ0FnSUdGcExuTjFZbFpsWTNSdmNuTW9hU3dnYmlrc0lHeHBMbk4xWWxabFkzUnZjbk1vY2l3Z2Jpa3NJRXh2TG5OMVlsWmxZM1J2Y25Nb1pTd2diaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JoYVM1a2IzUW9URzhwTENCaklEMGdiR2t1Wkc5MEtFeHZLVHNLSUNBZ0lDQWdJQ0JwWmlBb2JDQThQU0F3SUNZbUlHTWdQRDBnTUNrZ2NtVjBkWEp1SUhRdVkyOXdlU2h1S1RzS0lDQWdJQ0FnSUNCU2J5NXpkV0pXWldOMGIzSnpLR1VzSUdrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ1lXa3VaRzkwS0ZKdktTd2dkU0E5SUd4cExtUnZkQ2hTYnlrN0NpQWdJQ0FnSUNBZ2FXWWdLR2dnUGowZ01DQW1KaUIxSUR3OUlHZ3BJSEpsZEhWeWJpQjBMbU52Y0hrb2FTazdDaUFnSUNBZ0lDQWdiR1YwSUdRZ1BTQnNJQ29nZFNBdElHZ2dLaUJqT3dvZ0lDQWdJQ0FnSUdsbUlDaGtJRHc5SURBZ0ppWWdiQ0ErUFNBd0lDWW1JR2dnUEQwZ01Da2djbVYwZFhKdUlHOGdQU0JzSUM4Z0tHd2dMU0JvS1N3Z2RDNWpiM0I1S0c0cExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loaGFTd2dieWs3Q2lBZ0lDQWdJQ0FnVUc4dWMzVmlWbVZqZEc5eWN5aGxMQ0J5S1RzS0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUdGcExtUnZkQ2hRYnlrc0lHMGdQU0JzYVM1a2IzUW9VRzhwT3dvZ0lDQWdJQ0FnSUdsbUlDaHRJRDQ5SURBZ0ppWWdaaUE4UFNCdEtTQnlaWFIxY200Z2RDNWpiM0I1S0hJcE93b2dJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ1ppQXFJR01nTFNCc0lDb2diVHNLSUNBZ0lDQWdJQ0JwWmlBb2VDQThQU0F3SUNZbUlHTWdQajBnTUNBbUppQnRJRHc5SURBcElISmxkSFZ5YmlCaElEMGdZeUF2SUNoaklDMGdiU2tzSUhRdVkyOXdlU2h1S1M1aFpHUlRZMkZzWldSV1pXTjBiM0lvYkdrc0lHRXBPd29nSUNBZ0lDQWdJR3hsZENCMklEMGdhQ0FxSUcwZ0xTQm1JQ29nZFRzS0lDQWdJQ0FnSUNCcFppQW9kaUE4UFNBd0lDWW1JSFVnTFNCb0lENDlJREFnSmlZZ1ppQXRJRzBnUGowZ01Da2djbVYwZFhKdUlFRnNMbk4xWWxabFkzUnZjbk1vY2l3Z2FTa3NJR0VnUFNBb2RTQXRJR2dwSUM4Z0tIVWdMU0JvSUNzZ0tHWWdMU0J0S1Nrc0lIUXVZMjl3ZVNocEtTNWhaR1JUWTJGc1pXUldaV04wYjNJb1FXd3NJR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnTVNBdklDaDJJQ3NnZUNBcklHUXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnZJRDBnZUNBcUlHY3NJR0VnUFNCa0lDb2daeXdnZEM1amIzQjVLRzRwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhoYVN3Z2J5a3VZV1JrVTJOaGJHVmtWbVZqZEc5eUtHeHBMQ0JoS1RzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZUzVsY1hWaGJITW9kR2hwY3k1aEtTQW1KaUJsTG1JdVpYRjFZV3h6S0hSb2FYTXVZaWtnSmlZZ1pTNWpMbVZ4ZFdGc2N5aDBhR2x6TG1NcE93b2dJQ0FnZlFwOUxDQnNaaUE5SURBc0lHUjBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUm9hWE1zSUNKcFpDSXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUd4bUt5c0tJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NTFkV2xrSUQwZ1JYUW9LU3dnZEdocGN5NXVZVzFsSUQwZ0lpSXNJSFJvYVhNdWRIbHdaU0E5SUNKTllYUmxjbWxoYkNJc0lIUm9hWE11Wm05bklEMGdJVEFzSUhSb2FYTXVZbXhsYm1ScGJtY2dQU0J6Y2l3Z2RHaHBjeTV6YVdSbElEMGdRV2tzSUhSb2FYTXVkbVZ5ZEdWNFEyOXNiM0p6SUQwZ0lURXNJSFJvYVhNdWIzQmhZMmwwZVNBOUlERXNJSFJvYVhNdVptOXliV0YwSUQwZ1kzUXNJSFJvYVhNdWRISmhibk53WVhKbGJuUWdQU0FoTVN3Z2RHaHBjeTVpYkdWdVpGTnlZeUE5SUVkakxDQjBhR2x6TG1Kc1pXNWtSSE4wSUQwZ1ZtTXNJSFJvYVhNdVlteGxibVJGY1hWaGRHbHZiaUE5SUY5cExDQjBhR2x6TG1Kc1pXNWtVM0pqUVd4d2FHRWdQU0J1ZFd4c0xDQjBhR2x6TG1Kc1pXNWtSSE4wUVd4d2FHRWdQU0J1ZFd4c0xDQjBhR2x6TG1Kc1pXNWtSWEYxWVhScGIyNUJiSEJvWVNBOUlHNTFiR3dzSUhSb2FYTXVaR1Z3ZEdoR2RXNWpJRDBnWldFc0lIUm9hWE11WkdWd2RHaFVaWE4wSUQwZ0lUQXNJSFJvYVhNdVpHVndkR2hYY21sMFpTQTlJQ0V3TENCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlUxaGMyc2dQU0F5TlRVc0lIUm9hWE11YzNSbGJtTnBiRVoxYm1NZ1BTQlZaQ3dnZEdocGN5NXpkR1Z1WTJsc1VtVm1JRDBnTUN3Z2RHaHBjeTV6ZEdWdVkybHNSblZ1WTAxaGMyc2dQU0F5TlRVc0lIUm9hWE11YzNSbGJtTnBiRVpoYVd3Z1BTQjJieXdnZEdocGN5NXpkR1Z1WTJsc1drWmhhV3dnUFNCMmJ5d2dkR2hwY3k1emRHVnVZMmxzV2xCaGMzTWdQU0IyYnl3Z2RHaHBjeTV6ZEdWdVkybHNWM0pwZEdVZ1BTQWhNU3dnZEdocGN5NWpiR2x3Y0dsdVoxQnNZVzVsY3lBOUlHNTFiR3dzSUhSb2FYTXVZMnhwY0VsdWRHVnljMlZqZEdsdmJpQTlJQ0V4TENCMGFHbHpMbU5zYVhCVGFHRmtiM2R6SUQwZ0lURXNJSFJvYVhNdWMyaGhaRzkzVTJsa1pTQTlJRzUxYkd3c0lIUm9hWE11WTI5c2IzSlhjbWwwWlNBOUlDRXdMQ0IwYUdsekxuQnlaV05wYzJsdmJpQTlJRzUxYkd3c0lIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRDQTlJQ0V4TENCMGFHbHpMbkJ2YkhsbmIyNVBabVp6WlhSR1lXTjBiM0lnUFNBd0xDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBOUlEQXNJSFJvYVhNdVpHbDBhR1Z5YVc1bklEMGdJVEVzSUhSb2FYTXVZV3h3YUdGVWIwTnZkbVZ5WVdkbElEMGdJVEVzSUhSb2FYTXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhJRDBnSVRFc0lIUm9hWE11ZG1semFXSnNaU0E5SUNFd0xDQjBhR2x6TG5SdmJtVk5ZWEJ3WldRZ1BTQWhNQ3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJSHQ5TENCMGFHbHpMblpsY25OcGIyNGdQU0F3TENCMGFHbHpMbDloYkhCb1lWUmxjM1FnUFNBd093b2dJQ0FnZlFvZ0lDQWdaMlYwSUdGc2NHaGhWR1Z6ZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWVd4d2FHRlVaWE4wT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJR0ZzY0doaFZHVnpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWVd4d2FHRlVaWE4wSUQ0Z01DQWhQU0JsSUQ0Z01DQW1KaUIwYUdsekxuWmxjbk5wYjI0ckt5d2dkR2hwY3k1ZllXeHdhR0ZVWlhOMElEMGdaVHNLSUNBZ0lIMEtJQ0FnSUc5dVFuVnBiR1FvS1NCN2ZRb2dJQ0FnYjI1Q1pXWnZjbVZTWlc1a1pYSW9LU0I3ZlFvZ0lDQWdiMjVDWldadmNtVkRiMjF3YVd4bEtDa2dlMzBLSUNBZ0lHTjFjM1J2YlZCeWIyZHlZVzFEWVdOb1pVdGxlU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZia0psWm05eVpVTnZiWEJwYkdVdWRHOVRkSEpwYm1jb0tUc0tJQ0FnSUgwS0lDQWdJSE5sZEZaaGJIVmxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCMElHbHVJR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1SUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwWlhKcFlXdzZJQ2NpSUNzZ2RDQXJJQ0luSUhCaGNtRnRaWFJsY2lCcGN5QjFibVJsWm1sdVpXUXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnSW5Ob1lXUnBibWNpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxpSWdLeUIwYUdsekxuUjVjR1VnS3lBaU9pQXVjMmhoWkdsdVp5Qm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnZEdobElHSnZiMnhsWVc0Z0xtWnNZWFJUYUdGa2FXNW5JR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVabXhoZEZOb1lXUnBibWNnUFNCdUlEMDlQU0JyWXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNGlJQ3NnZEdocGN5NTBlWEJsSUNzZ0lqb2dKeUlnS3lCMElDc2dJaWNnYVhNZ2JtOTBJR0VnY0hKdmNHVnlkSGtnYjJZZ2RHaHBjeUJ0WVhSbGNtbGhiQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdrZ0ppWWdhUzVwYzBOdmJHOXlJRDhnYVM1elpYUW9iaWtnT2lCcElDWW1JR2t1YVhOV1pXTjBiM0l6SUNZbUlHNGdKaVlnYmk1cGMxWmxZM1J2Y2pNZ1B5QnBMbU52Y0hrb2Jpa2dPaUIwYUdselczUmRJRDBnYmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaU0E5UFQwZ2RtOXBaQ0F3SUh4OElIUjVjR1Z2WmlCbElEMDlJQ0p6ZEhKcGJtY2lPd29nSUNBZ0lDQWdJSFFnSmlZZ0tHVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFIxY21Wek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXMWhaMlZ6T2lCN2ZRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdFpYUmhaR0YwWVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ05DNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0lrMWhkR1Z5YVdGc0lpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxibVZ5WVhSdmNqb2dJazFoZEdWeWFXRnNMblJ2U2xOUFRpSUtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2JpNTFkV2xrSUQwZ2RHaHBjeTUxZFdsa0xDQnVMblI1Y0dVZ1BTQjBhR2x6TG5SNWNHVXNJSFJvYVhNdWJtRnRaU0FoUFQwZ0lpSWdKaVlnS0c0dWJtRnRaU0E5SUhSb2FYTXVibUZ0WlNrc0lIUm9hWE11WTI5c2IzSWdKaVlnZEdocGN5NWpiMnh2Y2k1cGMwTnZiRzl5SUNZbUlDaHVMbU52Ykc5eUlEMGdkR2hwY3k1amIyeHZjaTVuWlhSSVpYZ29LU2tzSUhSb2FYTXVjbTkxWjJodVpYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVjbTkxWjJodVpYTnpJRDBnZEdocGN5NXliM1ZuYUc1bGMzTXBMQ0IwYUdsekxtMWxkR0ZzYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodUxtMWxkR0ZzYm1WemN5QTlJSFJvYVhNdWJXVjBZV3h1WlhOektTd2dkR2hwY3k1emFHVmxiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbk5vWldWdUlEMGdkR2hwY3k1emFHVmxiaWtzSUhSb2FYTXVjMmhsWlc1RGIyeHZjaUFtSmlCMGFHbHpMbk5vWldWdVEyOXNiM0l1YVhORGIyeHZjaUFtSmlBb2JpNXphR1ZsYmtOdmJHOXlJRDBnZEdocGN5NXphR1ZsYmtOdmJHOXlMbWRsZEVobGVDZ3BLU3dnZEdocGN5NXphR1ZsYmxKdmRXZG9ibVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5Ob1pXVnVVbTkxWjJodVpYTnpJRDBnZEdocGN5NXphR1ZsYmxKdmRXZG9ibVZ6Y3lrc0lIUm9hWE11WlcxcGMzTnBkbVVnSmlZZ2RHaHBjeTVsYldsemMybDJaUzVwYzBOdmJHOXlJQ1ltSUNodUxtVnRhWE56YVhabElEMGdkR2hwY3k1bGJXbHpjMmwyWlM1blpYUklaWGdvS1Nrc0lIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnSmlZZ2RHaHBjeTVsYldsemMybDJaVWx1ZEdWdWMybDBlU0FoUFQwZ01TQW1KaUFvYmk1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtwTENCMGFHbHpMbk53WldOMWJHRnlJQ1ltSUhSb2FYTXVjM0JsWTNWc1lYSXVhWE5EYjJ4dmNpQW1KaUFvYmk1emNHVmpkV3hoY2lBOUlIUm9hWE11YzNCbFkzVnNZWEl1WjJWMFNHVjRLQ2twTENCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVjM0JsWTNWc1lYSkpiblJsYm5OcGRIa2dQU0IwYUdsekxuTndaV04xYkdGeVNXNTBaVzV6YVhSNUtTd2dkR2hwY3k1emNHVmpkV3hoY2tOdmJHOXlJQ1ltSUhSb2FYTXVjM0JsWTNWc1lYSkRiMnh2Y2k1cGMwTnZiRzl5SUNZbUlDaHVMbk53WldOMWJHRnlRMjlzYjNJZ1BTQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSXVaMlYwU0dWNEtDa3BMQ0IwYUdsekxuTm9hVzVwYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuTm9hVzVwYm1WemN5QTlJSFJvYVhNdWMyaHBibWx1WlhOektTd2dkR2hwY3k1amJHVmhjbU52WVhRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1amJHVmhjbU52WVhRZ1BTQjBhR2x6TG1Oc1pXRnlZMjloZENrc0lIUm9hWE11WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUQwZ2RHaHBjeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM01wTENCMGFHbHpMbU5zWldGeVkyOWhkRTFoY0NBbUppQjBhR2x6TG1Oc1pXRnlZMjloZEUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVkyeGxZWEpqYjJGMFRXRndJRDBnZEdocGN5NWpiR1ZoY21OdllYUk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0FtSmlCMGFHbHpMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0lEMGdkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NBbUppQjBhR2x6TG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUQwZ2RHaHBjeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXNJRzR1WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVZ1BTQjBhR2x6TG1Oc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bExuUnZRWEp5WVhrb0tTa3NJSFJvYVhNdWJXRndJQ1ltSUhSb2FYTXViV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTV0WVhBZ1BTQjBhR2x6TG0xaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11YldGMFkyRndJQ1ltSUhSb2FYTXViV0YwWTJGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1dFlYUmpZWEFnUFNCMGFHbHpMbTFoZEdOaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11WVd4d2FHRk5ZWEFnSmlZZ2RHaHBjeTVoYkhCb1lVMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZV3h3YUdGTllYQWdQU0IwYUdsekxtRnNjR2hoVFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTVzYVdkb2RFMWhjQ0FtSmlCMGFHbHpMbXhwWjJoMFRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXNhV2RvZEUxaGNDQTlJSFJvYVhNdWJHbG5hSFJOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQjBhR2x6TG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1S1N3Z2RHaHBjeTVoYjAxaGNDQW1KaUIwYUdsekxtRnZUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTVoYjAxaGNDQTlJSFJvYVhNdVlXOU5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXNJRzR1WVc5TllYQkpiblJsYm5OcGRIa2dQU0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1S1N3Z2RHaHBjeTVpZFcxd1RXRndJQ1ltSUhSb2FYTXVZblZ0Y0UxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVluVnRjRTFoY0NBOUlIUm9hWE11WW5WdGNFMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDd2diaTVpZFcxd1UyTmhiR1VnUFNCMGFHbHpMbUoxYlhCVFkyRnNaU2tzSUhSb2FYTXVibTl5YldGc1RXRndJQ1ltSUhSb2FYTXVibTl5YldGc1RXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXViM0p0WVd4TllYQWdQU0IwYUdsekxtNXZjbTFoYkUxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkN3Z2JpNXViM0p0WVd4TllYQlVlWEJsSUQwZ2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbExDQnVMbTV2Y20xaGJGTmpZV3hsSUQwZ2RHaHBjeTV1YjNKdFlXeFRZMkZzWlM1MGIwRnljbUY1S0NrcExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQXVkRzlLVTA5T0tHVXBMblYxYVdRc0lHNHVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQnVMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNcExDQjBhR2x6TG5KdmRXZG9ibVZ6YzAxaGNDQW1KaUIwYUdsekxuSnZkV2RvYm1WemMwMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVjbTkxWjJodVpYTnpUV0Z3SUQwZ2RHaHBjeTV5YjNWbmFHNWxjM05OWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbTFsZEdGc2JtVnpjMDFoY0NBbUppQjBhR2x6TG0xbGRHRnNibVZ6YzAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dWJXVjBZV3h1WlhOelRXRndJRDBnZEdocGN5NXRaWFJoYkc1bGMzTk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtVnRhWE56YVhabFRXRndJQ1ltSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMbVZ0YVhOemFYWmxUV0Z3SUQwZ2RHaHBjeTVsYldsemMybDJaVTFoY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ2tzSUhSb2FYTXVjM0JsWTNWc1lYSk5ZWEFnSmlZZ2RHaHBjeTV6Y0dWamRXeGhjazFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1YzNCbFkzVnNZWEpOWVhBZ1BTQjBhR2x6TG5Od1pXTjFiR0Z5VFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBbUppQjBhR2x6TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQTlJSFJvYVhNdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnSmlZZ2RHaHBjeTV6Y0dWamRXeGhja052Ykc5eVRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0lEMGdkR2hwY3k1emNHVmpkV3hoY2tOdmJHOXlUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtLU3dnZEdocGN5NWxiblpOWVhBZ0ppWWdkR2hwY3k1bGJuWk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMbVZ1ZGsxaGNDQTlJSFJvYVhNdVpXNTJUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtMQ0IwYUdsekxtTnZiV0pwYm1VZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1amIyMWlhVzVsSUQwZ2RHaHBjeTVqYjIxaWFXNWxLU2tzSUhSb2FYTXVaVzUyVFdGd1NXNTBaVzV6YVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVpXNTJUV0Z3U1c1MFpXNXphWFI1SUQwZ2RHaHBjeTVsYm5aTllYQkpiblJsYm5OcGRIa3BMQ0IwYUdsekxuSmxabXhsWTNScGRtbDBlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbkpsWm14bFkzUnBkbWwwZVNBOUlIUm9hWE11Y21WbWJHVmpkR2wyYVhSNUtTd2dkR2hwY3k1eVpXWnlZV04wYVc5dVVtRjBhVzhnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTV5WldaeVlXTjBhVzl1VW1GMGFXOGdQU0IwYUdsekxuSmxabkpoWTNScGIyNVNZWFJwYnlrc0lIUm9hWE11WjNKaFpHbGxiblJOWVhBZ0ppWWdkR2hwY3k1bmNtRmthV1Z1ZEUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVozSmhaR2xsYm5STllYQWdQU0IwYUdsekxtZHlZV1JwWlc1MFRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1MGNtRnVjMjFwYzNOcGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNTBjbUZ1YzIxcGMzTnBiMjRnUFNCMGFHbHpMblJ5WVc1emJXbHpjMmx2Ymlrc0lIUm9hWE11ZEhKaGJuTnRhWE56YVc5dVRXRndJQ1ltSUhSb2FYTXVkSEpoYm5OdGFYTnphVzl1VFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1MGNtRnVjMjFwYzNOcGIyNU5ZWEFnUFNCMGFHbHpMblJ5WVc1emJXbHpjMmx2YmsxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11ZEdocFkydHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1ZEdocFkydHVaWE56SUQwZ2RHaHBjeTUwYUdsamEyNWxjM01wTENCMGFHbHpMblJvYVdOcmJtVnpjMDFoY0NBbUppQjBhR2x6TG5Sb2FXTnJibVZ6YzAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dWRHaHBZMnR1WlhOelRXRndJRDBnZEdocGN5NTBhR2xqYTI1bGMzTk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJRDBnZEdocGN5NWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxLU3dnZEdocGN5NWhkSFJsYm5WaGRHbHZia052Ykc5eUlDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVlYUjBaVzUxWVhScGIyNURiMnh2Y2lBOUlIUm9hWE11WVhSMFpXNTFZWFJwYjI1RGIyeHZjaTVuWlhSSVpYZ29LU2tzSUhSb2FYTXVjMmw2WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5OcGVtVWdQU0IwYUdsekxuTnBlbVVwTENCMGFHbHpMbk5vWVdSdmQxTnBaR1VnSVQwOUlHNTFiR3dnSmlZZ0tHNHVjMmhoWkc5M1UybGtaU0E5SUhSb2FYTXVjMmhoWkc5M1UybGtaU2tzSUhSb2FYTXVjMmw2WlVGMGRHVnVkV0YwYVc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dWMybDZaVUYwZEdWdWRXRjBhVzl1SUQwZ2RHaHBjeTV6YVhwbFFYUjBaVzUxWVhScGIyNHBMQ0IwYUdsekxtSnNaVzVrYVc1bklDRTlQU0J6Y2lBbUppQW9iaTVpYkdWdVpHbHVaeUE5SUhSb2FYTXVZbXhsYm1ScGJtY3BMQ0IwYUdsekxuTnBaR1VnSVQwOUlFRnBJQ1ltSUNodUxuTnBaR1VnUFNCMGFHbHpMbk5wWkdVcExDQjBhR2x6TG5abGNuUmxlRU52Ykc5eWN5QW1KaUFvYmk1MlpYSjBaWGhEYjJ4dmNuTWdQU0FoTUNrc0lIUm9hWE11YjNCaFkybDBlU0E4SURFZ0ppWWdLRzR1YjNCaFkybDBlU0E5SUhSb2FYTXViM0JoWTJsMGVTa3NJSFJvYVhNdVptOXliV0YwSUNFOVBTQmpkQ0FtSmlBb2JpNW1iM0p0WVhRZ1BTQjBhR2x6TG1admNtMWhkQ2tzSUhSb2FYTXVkSEpoYm5Od1lYSmxiblFnUFQwOUlDRXdJQ1ltSUNodUxuUnlZVzV6Y0dGeVpXNTBJRDBnZEdocGN5NTBjbUZ1YzNCaGNtVnVkQ2tzSUc0dVpHVndkR2hHZFc1aklEMGdkR2hwY3k1a1pYQjBhRVoxYm1Nc0lHNHVaR1Z3ZEdoVVpYTjBJRDBnZEdocGN5NWtaWEIwYUZSbGMzUXNJRzR1WkdWd2RHaFhjbWwwWlNBOUlIUm9hWE11WkdWd2RHaFhjbWwwWlN3Z2JpNWpiMnh2Y2xkeWFYUmxJRDBnZEdocGN5NWpiMnh2Y2xkeWFYUmxMQ0J1TG5OMFpXNWphV3hYY21sMFpTQTlJSFJvYVhNdWMzUmxibU5wYkZkeWFYUmxMQ0J1TG5OMFpXNWphV3hYY21sMFpVMWhjMnNnUFNCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlUxaGMyc3NJRzR1YzNSbGJtTnBiRVoxYm1NZ1BTQjBhR2x6TG5OMFpXNWphV3hHZFc1akxDQnVMbk4wWlc1amFXeFNaV1lnUFNCMGFHbHpMbk4wWlc1amFXeFNaV1lzSUc0dWMzUmxibU5wYkVaMWJtTk5ZWE5ySUQwZ2RHaHBjeTV6ZEdWdVkybHNSblZ1WTAxaGMyc3NJRzR1YzNSbGJtTnBiRVpoYVd3Z1BTQjBhR2x6TG5OMFpXNWphV3hHWVdsc0xDQnVMbk4wWlc1amFXeGFSbUZwYkNBOUlIUm9hWE11YzNSbGJtTnBiRnBHWVdsc0xDQnVMbk4wWlc1amFXeGFVR0Z6Y3lBOUlIUm9hWE11YzNSbGJtTnBiRnBRWVhOekxDQjBhR2x6TG5KdmRHRjBhVzl1SUNZbUlIUm9hWE11Y205MFlYUnBiMjRnSVQwOUlEQWdKaVlnS0c0dWNtOTBZWFJwYjI0Z1BTQjBhR2x6TG5KdmRHRjBhVzl1S1N3Z2RHaHBjeTV3YjJ4NVoyOXVUMlptYzJWMElEMDlQU0FoTUNBbUppQW9iaTV3YjJ4NVoyOXVUMlptYzJWMElEMGdJVEFwTENCMGFHbHpMbkJ2YkhsbmIyNVBabVp6WlhSR1lXTjBiM0lnSVQwOUlEQWdKaVlnS0c0dWNHOXNlV2R2Yms5bVpuTmxkRVpoWTNSdmNpQTlJSFJvYVhNdWNHOXNlV2R2Yms5bVpuTmxkRVpoWTNSdmNpa3NJSFJvYVhNdWNHOXNlV2R2Yms5bVpuTmxkRlZ1YVhSeklDRTlQU0F3SUNZbUlDaHVMbkJ2YkhsbmIyNVBabVp6WlhSVmJtbDBjeUE5SUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZEZWdWFYUnpLU3dnZEdocGN5NXNhVzVsZDJsa2RHZ2dKaVlnZEdocGN5NXNhVzVsZDJsa2RHZ2dJVDA5SURFZ0ppWWdLRzR1YkdsdVpYZHBaSFJvSUQwZ2RHaHBjeTVzYVc1bGQybGtkR2dwTENCMGFHbHpMbVJoYzJoVGFYcGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVaR0Z6YUZOcGVtVWdQU0IwYUdsekxtUmhjMmhUYVhwbEtTd2dkR2hwY3k1bllYQlRhWHBsSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WjJGd1UybDZaU0E5SUhSb2FYTXVaMkZ3VTJsNlpTa3NJSFJvYVhNdWMyTmhiR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTV6WTJGc1pTQTlJSFJvYVhNdWMyTmhiR1VwTENCMGFHbHpMbVJwZEdobGNtbHVaeUE5UFQwZ0lUQWdKaVlnS0c0dVpHbDBhR1Z5YVc1bklEMGdJVEFwTENCMGFHbHpMbUZzY0doaFZHVnpkQ0ErSURBZ0ppWWdLRzR1WVd4d2FHRlVaWE4wSUQwZ2RHaHBjeTVoYkhCb1lWUmxjM1FwTENCMGFHbHpMbUZzY0doaFZHOURiM1psY21GblpTQTlQVDBnSVRBZ0ppWWdLRzR1WVd4d2FHRlViME52ZG1WeVlXZGxJRDBnZEdocGN5NWhiSEJvWVZSdlEyOTJaWEpoWjJVcExDQjBhR2x6TG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBOVBUMGdJVEFnSmlZZ0tHNHVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhJRDBnZEdocGN5NXdjbVZ0ZFd4MGFYQnNhV1ZrUVd4d2FHRXBMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlQVDBnSVRBZ0ppWWdLRzR1ZDJseVpXWnlZVzFsSUQwZ2RHaHBjeTUzYVhKbFpuSmhiV1VwTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0ErSURFZ0ppWWdLRzR1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dwTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WallYQWdJVDA5SUNKeWIzVnVaQ0lnSmlZZ0tHNHVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0Nrc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnSVQwOUlDSnliM1Z1WkNJZ0ppWWdLRzR1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVLU3dnZEdocGN5NW1iR0YwVTJoaFpHbHVaeUE5UFQwZ0lUQWdKaVlnS0c0dVpteGhkRk5vWVdScGJtY2dQU0IwYUdsekxtWnNZWFJUYUdGa2FXNW5LU3dnZEdocGN5NTJhWE5wWW14bElEMDlQU0FoTVNBbUppQW9iaTUyYVhOcFlteGxJRDBnSVRFcExDQjBhR2x6TG5SdmJtVk5ZWEJ3WldRZ1BUMDlJQ0V4SUNZbUlDaHVMblJ2Ym1WTllYQndaV1FnUFNBaE1Ta3NJRXBUVDA0dWMzUnlhVzVuYVdaNUtIUm9hWE11ZFhObGNrUmhkR0VwSUNFOVBTQWllMzBpSUNZbUlDaHVMblZ6WlhKRVlYUmhJRDBnZEdocGN5NTFjMlZ5UkdGMFlTazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdhU2h5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQnBiaUJ5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnY2x0aFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCc0xtMWxkR0ZrWVhSaExDQnZMbkIxYzJnb2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHODdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYVNobExuUmxlSFIxY21WektTd2dieUE5SUdrb1pTNXBiV0ZuWlhNcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5TG14bGJtZDBhQ0ErSURBZ0ppWWdLRzR1ZEdWNGRIVnlaWE1nUFNCeUtTd2dieTVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbWx0WVdkbGN5QTlJRzhwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmpzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTVoYldVZ1BTQmxMbTVoYldVc0lIUm9hWE11Wm05bklEMGdaUzVtYjJjc0lIUm9hWE11WW14bGJtUnBibWNnUFNCbExtSnNaVzVrYVc1bkxDQjBhR2x6TG5OcFpHVWdQU0JsTG5OcFpHVXNJSFJvYVhNdWRtVnlkR1Y0UTI5c2IzSnpJRDBnWlM1MlpYSjBaWGhEYjJ4dmNuTXNJSFJvYVhNdWIzQmhZMmwwZVNBOUlHVXViM0JoWTJsMGVTd2dkR2hwY3k1bWIzSnRZWFFnUFNCbExtWnZjbTFoZEN3Z2RHaHBjeTUwY21GdWMzQmhjbVZ1ZENBOUlHVXVkSEpoYm5Od1lYSmxiblFzSUhSb2FYTXVZbXhsYm1SVGNtTWdQU0JsTG1Kc1pXNWtVM0pqTENCMGFHbHpMbUpzWlc1a1JITjBJRDBnWlM1aWJHVnVaRVJ6ZEN3Z2RHaHBjeTVpYkdWdVpFVnhkV0YwYVc5dUlEMGdaUzVpYkdWdVpFVnhkV0YwYVc5dUxDQjBhR2x6TG1Kc1pXNWtVM0pqUVd4d2FHRWdQU0JsTG1Kc1pXNWtVM0pqUVd4d2FHRXNJSFJvYVhNdVlteGxibVJFYzNSQmJIQm9ZU0E5SUdVdVlteGxibVJFYzNSQmJIQm9ZU3dnZEdocGN5NWliR1Z1WkVWeGRXRjBhVzl1UVd4d2FHRWdQU0JsTG1Kc1pXNWtSWEYxWVhScGIyNUJiSEJvWVN3Z2RHaHBjeTVrWlhCMGFFWjFibU1nUFNCbExtUmxjSFJvUm5WdVl5d2dkR2hwY3k1a1pYQjBhRlJsYzNRZ1BTQmxMbVJsY0hSb1ZHVnpkQ3dnZEdocGN5NWtaWEIwYUZkeWFYUmxJRDBnWlM1a1pYQjBhRmR5YVhSbExDQjBhR2x6TG5OMFpXNWphV3hYY21sMFpVMWhjMnNnUFNCbExuTjBaVzVqYVd4WGNtbDBaVTFoYzJzc0lIUm9hWE11YzNSbGJtTnBiRVoxYm1NZ1BTQmxMbk4wWlc1amFXeEdkVzVqTENCMGFHbHpMbk4wWlc1amFXeFNaV1lnUFNCbExuTjBaVzVqYVd4U1pXWXNJSFJvYVhNdWMzUmxibU5wYkVaMWJtTk5ZWE5ySUQwZ1pTNXpkR1Z1WTJsc1JuVnVZMDFoYzJzc0lIUm9hWE11YzNSbGJtTnBiRVpoYVd3Z1BTQmxMbk4wWlc1amFXeEdZV2xzTENCMGFHbHpMbk4wWlc1amFXeGFSbUZwYkNBOUlHVXVjM1JsYm1OcGJGcEdZV2xzTENCMGFHbHpMbk4wWlc1amFXeGFVR0Z6Y3lBOUlHVXVjM1JsYm1OcGJGcFFZWE56TENCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlNBOUlHVXVjM1JsYm1OcGJGZHlhWFJsT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1amJHbHdjR2x1WjFCc1lXNWxjeXdnYmlBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMExteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdiaUE5SUc1bGR5QkJjbkpoZVNocEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUFoUFQwZ2FUc2dLeXR5S1c1YmNsMGdQU0IwVzNKZExtTnNiMjVsS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5zYVhCd2FXNW5VR3hoYm1WeklEMGdiaXdnZEdocGN5NWpiR2x3U1c1MFpYSnpaV04wYVc5dUlEMGdaUzVqYkdsd1NXNTBaWEp6WldOMGFXOXVMQ0IwYUdsekxtTnNhWEJUYUdGa2IzZHpJRDBnWlM1amJHbHdVMmhoWkc5M2N5d2dkR2hwY3k1emFHRmtiM2RUYVdSbElEMGdaUzV6YUdGa2IzZFRhV1JsTENCMGFHbHpMbU52Ykc5eVYzSnBkR1VnUFNCbExtTnZiRzl5VjNKcGRHVXNJSFJvYVhNdWNISmxZMmx6YVc5dUlEMGdaUzV3Y21WamFYTnBiMjRzSUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZENBOUlHVXVjRzlzZVdkdmJrOW1abk5sZEN3Z2RHaHBjeTV3YjJ4NVoyOXVUMlptYzJWMFJtRmpkRzl5SUQwZ1pTNXdiMng1WjI5dVQyWm1jMlYwUm1GamRHOXlMQ0IwYUdsekxuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5QTlJR1V1Y0c5c2VXZHZiazltWm5ObGRGVnVhWFJ6TENCMGFHbHpMbVJwZEdobGNtbHVaeUE5SUdVdVpHbDBhR1Z5YVc1bkxDQjBhR2x6TG1Gc2NHaGhWR1Z6ZENBOUlHVXVZV3h3YUdGVVpYTjBMQ0IwYUdsekxtRnNjR2hoVkc5RGIzWmxjbUZuWlNBOUlHVXVZV3h3YUdGVWIwTnZkbVZ5WVdkbExDQjBhR2x6TG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBOUlHVXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhMQ0IwYUdsekxuWnBjMmxpYkdVZ1BTQmxMblpwYzJsaWJHVXNJSFJvYVhNdWRHOXVaVTFoY0hCbFpDQTlJR1V1ZEc5dVpVMWhjSEJsWkN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvWlM1MWMyVnlSR0YwWVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpWkdsemNHOXpaU0lLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLSUNBZ0lITmxkQ0J1WldWa2MxVndaR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdaU0E5UFQwZ0lUQWdKaVlnZEdocGN5NTJaWEp6YVc5dUt5czdDaUFnSUNCOUNuMDdDbVIwTG5CeWIzUnZkSGx3WlM1cGMwMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQWtZeUE5SUhzS0lDQWdJR0ZzYVdObFlteDFaVG9nTVRVM09USXpPRE1zQ2lBZ0lDQmhiblJwY1hWbGQyaHBkR1U2SURFMk5EUTBNemMxTEFvZ0lDQWdZWEYxWVRvZ05qVTFNelVzQ2lBZ0lDQmhjWFZoYldGeWFXNWxPaUE0TXpnNE5UWTBMQW9nSUNBZ1lYcDFjbVU2SURFMU56azBNVGMxTEFvZ0lDQWdZbVZwWjJVNklERTJNVEU1TWpZd0xBb2dJQ0FnWW1semNYVmxPaUF4TmpjM01ESTBOQ3dLSUNBZ0lHSnNZV05yT2lBd0xBb2dJQ0FnWW14aGJtTm9aV1JoYkcxdmJtUTZJREUyTnpjeU1EUTFMQW9nSUNBZ1lteDFaVG9nTWpVMUxBb2dJQ0FnWW14MVpYWnBiMnhsZERvZ09UQTFOVEl3TWl3S0lDQWdJR0p5YjNkdU9pQXhNRGd5TkRJek5Dd0tJQ0FnSUdKMWNteDVkMjl2WkRvZ01UUTFPVFl5TXpFc0NpQWdJQ0JqWVdSbGRHSnNkV1U2SURZeU5qWTFNamdzQ2lBZ0lDQmphR0Z5ZEhKbGRYTmxPaUE0TXpnNE16VXlMQW9nSUNBZ1kyaHZZMjlzWVhSbE9pQXhNemM0T1RRM01Dd0tJQ0FnSUdOdmNtRnNPaUF4TmpjME5ESTNNaXdLSUNBZ0lHTnZjbTVtYkc5M1pYSmliSFZsT2lBMk5Ua3hPVGd4TEFvZ0lDQWdZMjl5Ym5OcGJHczZJREUyTnpjMU16ZzRMQW9nSUNBZ1kzSnBiWE52YmpvZ01UUTBNak14TURBc0NpQWdJQ0JqZVdGdU9pQTJOVFV6TlN3S0lDQWdJR1JoY210aWJIVmxPaUF4TXprc0NpQWdJQ0JrWVhKclkzbGhiam9nTXpVM01qTXNDaUFnSUNCa1lYSnJaMjlzWkdWdWNtOWtPaUF4TWpBNU1qa3pPU3dLSUNBZ0lHUmhjbXRuY21GNU9pQXhNVEV4T1RBeE55d0tJQ0FnSUdSaGNtdG5jbVZsYmpvZ01qVTJNREFzQ2lBZ0lDQmtZWEpyWjNKbGVUb2dNVEV4TVRrd01UY3NDaUFnSUNCa1lYSnJhMmhoYTJrNklERXlORE16TWpVNUxBb2dJQ0FnWkdGeWEyMWhaMlZ1ZEdFNklEa3hNRGsyTkRNc0NpQWdJQ0JrWVhKcmIyeHBkbVZuY21WbGJqb2dOVFU1TnprNU9Td0tJQ0FnSUdSaGNtdHZjbUZ1WjJVNklERTJOelEzTlRJd0xBb2dJQ0FnWkdGeWEyOXlZMmhwWkRvZ01UQXdOREF3TVRJc0NpQWdJQ0JrWVhKcmNtVmtPaUE1TVRBNU5UQTBMQW9nSUNBZ1pHRnlhM05oYkcxdmJqb2dNVFV6TURnME1UQXNDaUFnSUNCa1lYSnJjMlZoWjNKbFpXNDZJRGswTVRrNU1Ua3NDaUFnSUNCa1lYSnJjMnhoZEdWaWJIVmxPaUEwTnpNME16UTNMQW9nSUNBZ1pHRnlhM05zWVhSbFozSmhlVG9nTXpFd01EUTVOU3dLSUNBZ0lHUmhjbXR6YkdGMFpXZHlaWGs2SURNeE1EQTBPVFVzQ2lBZ0lDQmtZWEpyZEhWeWNYVnZhWE5sT2lBMU1qazBOU3dLSUNBZ0lHUmhjbXQyYVc5c1pYUTZJRGsyT1RrMU16a3NDaUFnSUNCa1pXVndjR2x1YXpvZ01UWTNNVFk1TkRjc0NpQWdJQ0JrWldWd2MydDVZbXgxWlRvZ05Ea3hOVEVzQ2lBZ0lDQmthVzFuY21GNU9pQTJPVEE0TWpZMUxBb2dJQ0FnWkdsdFozSmxlVG9nTmprd09ESTJOU3dLSUNBZ0lHUnZaR2RsY21Kc2RXVTZJREl3TURNeE9Ua3NDaUFnSUNCbWFYSmxZbkpwWTJzNklERXhOamMwTVRRMkxBb2dJQ0FnWm14dmNtRnNkMmhwZEdVNklERTJOemMxT1RJd0xBb2dJQ0FnWm05eVpYTjBaM0psWlc0NklESXlOak00TkRJc0NpQWdJQ0JtZFdOb2MybGhPaUF4TmpjeE1Ua3pOU3dLSUNBZ0lHZGhhVzV6WW05eWJ6b2dNVFEwTnpRME5qQXNDaUFnSUNCbmFHOXpkSGRvYVhSbE9pQXhOak14TmpZM01Td0tJQ0FnSUdkdmJHUTZJREUyTnpZMk56SXdMQW9nSUNBZ1oyOXNaR1Z1Y205a09pQXhORE15T1RFeU1Dd0tJQ0FnSUdkeVlYazZJRGcwTWpFMU1EUXNDaUFnSUNCbmNtVmxiam9nTXpJM05qZ3NDaUFnSUNCbmNtVmxibmxsYkd4dmR6b2dNVEUwTURNd05UVXNDaUFnSUNCbmNtVjVPaUE0TkRJeE5UQTBMQW9nSUNBZ2FHOXVaWGxrWlhjNklERTFOemswTVRZd0xBb2dJQ0FnYUc5MGNHbHVhem9nTVRZM016ZzNOREFzQ2lBZ0lDQnBibVJwWVc1eVpXUTZJREV6TkRVNE5USTBMQW9nSUNBZ2FXNWthV2R2T2lBME9URTFNek13TEFvZ0lDQWdhWFp2Y25rNklERTJOemMzTWpBd0xBb2dJQ0FnYTJoaGEyazZJREUxTnpnM05qWXdMQW9nSUNBZ2JHRjJaVzVrWlhJNklERTFNVE15TkRFd0xBb2dJQ0FnYkdGMlpXNWtaWEppYkhWemFEb2dNVFkzTnpNek5qVXNDaUFnSUNCc1lYZHVaM0psWlc0NklEZ3hPVEE1TnpZc0NpQWdJQ0JzWlcxdmJtTm9hV1ptYjI0NklERTJOemMxT0RnMUxBb2dJQ0FnYkdsbmFIUmliSFZsT2lBeE1UTTVNekkxTkN3S0lDQWdJR3hwWjJoMFkyOXlZV3c2SURFMU56WXhOVE0yTEFvZ0lDQWdiR2xuYUhSamVXRnVPaUF4TkRjME5UVTVPU3dLSUNBZ0lHeHBaMmgwWjI5c1pHVnVjbTlrZVdWc2JHOTNPaUF4TmpRME9ESXhNQ3dLSUNBZ0lHeHBaMmgwWjNKaGVUb2dNVE00T0RJek1qTXNDaUFnSUNCc2FXZG9kR2R5WldWdU9pQTVORGs0TWpVMkxBb2dJQ0FnYkdsbmFIUm5jbVY1T2lBeE16ZzRNak15TXl3S0lDQWdJR3hwWjJoMGNHbHVhem9nTVRZM05UZzBOalVzQ2lBZ0lDQnNhV2RvZEhOaGJHMXZiam9nTVRZM05USTNOaklzQ2lBZ0lDQnNhV2RvZEhObFlXZHlaV1Z1T2lBeU1UUXlPRGt3TEFvZ0lDQWdiR2xuYUhSemEzbGliSFZsT2lBNE9UQXdNelEyTEFvZ0lDQWdiR2xuYUhSemJHRjBaV2R5WVhrNklEYzRNek0zTlRNc0NpQWdJQ0JzYVdkb2RITnNZWFJsWjNKbGVUb2dOemd6TXpjMU15d0tJQ0FnSUd4cFoyaDBjM1JsWld4aWJIVmxPaUF4TVRVNE5EY3pOQ3dLSUNBZ0lHeHBaMmgwZVdWc2JHOTNPaUF4TmpjM056RTROQ3dLSUNBZ0lHeHBiV1U2SURZMU1qZ3dMQW9nSUNBZ2JHbHRaV2R5WldWdU9pQXpNekk1TXpNd0xBb2dJQ0FnYkdsdVpXNDZJREUyTkRRMU5qY3dMQW9nSUNBZ2JXRm5aVzUwWVRvZ01UWTNNVEU1TXpVc0NpQWdJQ0J0WVhKdmIyNDZJRGd6T0RnMk1EZ3NDaUFnSUNCdFpXUnBkVzFoY1hWaGJXRnlhVzVsT2lBMk56TTNNekl5TEFvZ0lDQWdiV1ZrYVhWdFlteDFaVG9nTWpBMUxBb2dJQ0FnYldWa2FYVnRiM0pqYUdsa09pQXhNakl4TVRZMk55d0tJQ0FnSUcxbFpHbDFiWEIxY25Cc1pUb2dPVFkyTWpZNE15d0tJQ0FnSUcxbFpHbDFiWE5sWVdkeVpXVnVPaUF6T1RjNE1EazNMQW9nSUNBZ2JXVmthWFZ0YzJ4aGRHVmliSFZsT2lBNE1EZzNOemt3TEFvZ0lDQWdiV1ZrYVhWdGMzQnlhVzVuWjNKbFpXNDZJRFkwTVRVMExBb2dJQ0FnYldWa2FYVnRkSFZ5Y1hWdmFYTmxPaUEwTnpjeU16QXdMQW9nSUNBZ2JXVmthWFZ0ZG1sdmJHVjBjbVZrT2lBeE16QTBOekUzTXl3S0lDQWdJRzFwWkc1cFoyaDBZbXgxWlRvZ01UWTBORGt4TWl3S0lDQWdJRzFwYm5SamNtVmhiVG9nTVRZeE1qRTROVEFzQ2lBZ0lDQnRhWE4wZVhKdmMyVTZJREUyTnpjd01qY3pMQW9nSUNBZ2JXOWpZMkZ6YVc0NklERTJOemN3TWpJNUxBb2dJQ0FnYm1GMllXcHZkMmhwZEdVNklERTJOelk0TmpnMUxBb2dJQ0FnYm1GMmVUb2dNVEk0TEFvZ0lDQWdiMnhrYkdGalpUb2dNVFkyTkRNMU5UZ3NDaUFnSUNCdmJHbDJaVG9nT0RReU1UTTNOaXdLSUNBZ0lHOXNhWFpsWkhKaFlqb2dOekEwT0Rjek9Td0tJQ0FnSUc5eVlXNW5aVG9nTVRZM05UTTVNakFzQ2lBZ0lDQnZjbUZ1WjJWeVpXUTZJREUyTnpJNU16UTBMQW9nSUNBZ2IzSmphR2xrT2lBeE5ETXhOVGN6TkN3S0lDQWdJSEJoYkdWbmIyeGtaVzV5YjJRNklERTFOalUzTVRNd0xBb2dJQ0FnY0dGc1pXZHlaV1Z1T2lBeE1EQXlOVGc0TUN3S0lDQWdJSEJoYkdWMGRYSnhkVzlwYzJVNklERXhOVEk1T1RZMkxBb2dJQ0FnY0dGc1pYWnBiMnhsZEhKbFpEb2dNVFF6T0RFeU1ETXNDaUFnSUNCd1lYQmhlV0YzYUdsd09pQXhOamMzTXpBM055d0tJQ0FnSUhCbFlXTm9jSFZtWmpvZ01UWTNOamMyTnpNc0NpQWdJQ0J3WlhKMU9pQXhNelEyT0RrNU1Td0tJQ0FnSUhCcGJtczZJREUyTnpZeE1ETTFMQW9nSUNBZ2NHeDFiVG9nTVRRMU1qUTJNemNzQ2lBZ0lDQndiM2RrWlhKaWJIVmxPaUF4TVRVNU1Ua3hNQ3dLSUNBZ0lIQjFjbkJzWlRvZ09ETTRPRGN6Tml3S0lDQWdJSEpsWW1WalkyRndkWEp3YkdVNklEWTJPVGM0T0RFc0NpQWdJQ0J5WldRNklERTJOekV4Tmpnd0xBb2dJQ0FnY205emVXSnliM2R1T2lBeE1qTTFOelV4T1N3S0lDQWdJSEp2ZVdGc1lteDFaVG9nTkRJNE5qazBOU3dLSUNBZ0lITmhaR1JzWldKeWIzZHVPaUE1TVRJM01UZzNMQW9nSUNBZ2MyRnNiVzl1T2lBeE5qUXhOamc0TWl3S0lDQWdJSE5oYm1SNVluSnZkMjQ2SURFMk1ETXlPRFkwTEFvZ0lDQWdjMlZoWjNKbFpXNDZJRE13TlRBek1qY3NDaUFnSUNCelpXRnphR1ZzYkRvZ01UWTNOelEyTXpnc0NpQWdJQ0J6YVdWdWJtRTZJREV3TlRBMk56azNMQW9nSUNBZ2MybHNkbVZ5T2lBeE1qWXpNakkxTml3S0lDQWdJSE5yZVdKc2RXVTZJRGc1TURBek16RXNDaUFnSUNCemJHRjBaV0pzZFdVNklEWTVOekF3TmpFc0NpQWdJQ0J6YkdGMFpXZHlZWGs2SURjek56STVORFFzQ2lBZ0lDQnpiR0YwWldkeVpYazZJRGN6TnpJNU5EUXNDaUFnSUNCemJtOTNPaUF4TmpjM05Ua3pNQ3dLSUNBZ0lITndjbWx1WjJkeVpXVnVPaUEyTlRRd055d0tJQ0FnSUhOMFpXVnNZbXgxWlRvZ05EWXlNRGs0TUN3S0lDQWdJSFJoYmpvZ01UTTRNRGczT0RBc0NpQWdJQ0IwWldGc09pQXpNamc1Tml3S0lDQWdJSFJvYVhOMGJHVTZJREUwTWpBME9EZzRMQW9nSUNBZ2RHOXRZWFJ2T2lBeE5qY3pOekE1TlN3S0lDQWdJSFIxY25GMWIybHpaVG9nTkRJMU1UZzFOaXdLSUNBZ0lIWnBiMnhsZERvZ01UVTJNekV3T0RZc0NpQWdJQ0IzYUdWaGREb2dNVFl4TVRNek16RXNDaUFnSUNCM2FHbDBaVG9nTVRZM056Y3lNVFVzQ2lBZ0lDQjNhR2wwWlhOdGIydGxPaUF4TmpFeE9USTROU3dLSUNBZ0lIbGxiR3h2ZHpvZ01UWTNOelk1TmpBc0NpQWdJQ0I1Wld4c2IzZG5jbVZsYmpvZ01UQXhORFV3TnpRS2ZTd2dSblFnUFNCN0NpQWdJQ0JvT2lBd0xBb2dJQ0FnY3pvZ01Dd0tJQ0FnSUd3NklEQUtmU3dnYW5JZ1BTQjdDaUFnSUNCb09pQXdMQW9nSUNBZ2N6b2dNQ3dLSUNBZ0lHdzZJREFLZlRzS1puVnVZM1JwYjI0Z1NXOG9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUhRZ1BDQXdJQ1ltSUNoMElDczlJREVwTENCMElENGdNU0FtSmlBb2RDQXRQU0F4S1N3Z2RDQThJREVnTHlBMklEOGdjeUFySUNobElDMGdjeWtnS2lBMklDb2dkQ0E2SUhRZ1BDQXhJQzhnTWlBL0lHVWdPaUIwSUR3Z01pQXZJRE1nUHlCeklDc2dLR1VnTFNCektTQXFJRFlnS2lBb01pQXZJRE1nTFNCMEtTQTZJSE03Q24wS1puVnVZM1JwYjI0Z1JHOG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlITWdQQ0F1TURRd05EVWdQeUJ6SUNvZ0xqQTNOek01T1RNNE1EZ2dPaUJOWVhSb0xuQnZkeWh6SUNvZ0xqazBOemcyTnpJNU9EWWdLeUF1TURVeU1UTXlOekF4TkN3Z01pNDBLVHNLZlFwbWRXNWpkR2x2YmlCR2J5aHpLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5QThJQzR3TURNeE16QTRJRDhnY3lBcUlERXlMamt5SURvZ01TNHdOVFVnS2lCTllYUm9MbkJ2ZHloekxDQXVOREUyTmpZcElDMGdMakExTlRzS2ZRcDJZWElnWVdVZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBOVBUMGdkbTlwWkNBd0lDWW1JRzRnUFQwOUlIWnZhV1FnTUNBL0lIUm9hWE11YzJWMEtHVXBJRG9nZEdocGN5NXpaWFJTUjBJb1pTd2dkQ3dnYmlrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDWW1JR1V1YVhORGIyeHZjaUEvSUhSb2FYTXVZMjl3ZVNobEtTQTZJSFI1Y0dWdlppQmxJRDA5SUNKdWRXMWlaWElpSUQ4Z2RHaHBjeTV6WlhSSVpYZ29aU2tnT2lCMGVYQmxiMllnWlNBOVBTQWljM1J5YVc1bklpQW1KaUIwYUdsekxuTmxkRk4wZVd4bEtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJRDBnWlN3Z2RHaHBjeTVuSUQwZ1pTd2dkR2hwY3k1aUlEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVobGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnUFNCTllYUm9MbVpzYjI5eUtHVXBMQ0IwYUdsekxuSWdQU0FvWlNBK1BpQXhOaUFtSURJMU5Ta2dMeUF5TlRVc0lIUm9hWE11WnlBOUlDaGxJRDQrSURnZ0ppQXlOVFVwSUM4Z01qVTFMQ0IwYUdsekxtSWdQU0FvWlNBbUlESTFOU2tnTHlBeU5UVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJTUjBJb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbklnUFNCbExDQjBhR2x6TG1jZ1BTQjBMQ0IwYUdsekxtSWdQU0J1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFNGTk1LR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQTlJR1JoS0dVc0lERXBMQ0IwSUQwZ2JYUW9kQ3dnTUN3Z01Ta3NJRzRnUFNCdGRDaHVMQ0F3TENBeEtTd2dkQ0E5UFQwZ01Da2dkR2hwY3k1eUlEMGdkR2hwY3k1bklEMGdkR2hwY3k1aUlEMGdianNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1SUR3OUlDNDFJRDhnYmlBcUlDZ3hJQ3NnZENrZ09pQnVJQ3NnZENBdElHNGdLaUIwTENCeUlEMGdNaUFxSUc0Z0xTQnBPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbklnUFNCSmJ5aHlMQ0JwTENCbElDc2dNU0F2SURNcExDQjBhR2x6TG1jZ1BTQkpieWh5TENCcExDQmxLU3dnZEdocGN5NWlJRDBnU1c4b2Npd2dhU3dnWlNBdElERWdMeUF6S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSVGRIbHNaU2hsS1NCN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RDaHBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa2dJVDA5SUhadmFXUWdNQ0FtSmlCd1lYSnpaVVpzYjJGMEtHa3BJRHdnTVNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa052Ykc5eU9pQkJiSEJvWVNCamIyMXdiMjVsYm5RZ2IyWWdJaUFySUdVZ0t5QWlJSGRwYkd3Z1ltVWdhV2R1YjNKbFpDNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHNDdDaUFnSUNBZ0lDQWdhV1lnS0c0Z1BTQXZYaWdvUHpweVoySjhhSE5zS1dFL0tWd29LRnRlWENsZEtpbGNLUzh1WlhobFl5aGxLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVN3Z2NpQTlJRzViTVYwc0lHOGdQU0J1V3pKZE93b2dJQ0FnSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29jaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSnlaMklpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWljbWRpWVNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BTQXZYbHh6S2loY1pDc3BYSE1xTEZ4ektpaGNaQ3NwWEhNcUxGeHpLaWhjWkNzcFhITXFLRDg2TEZ4ektpaGNaQ3BjTGo5Y1pDc3BYSE1xS1Q4a0x5NWxlR1ZqS0c4cEtTQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1RXRjBhQzV0YVc0b01qVTFMQ0J3WVhKelpVbHVkQ2hwV3pGZExDQXhNQ2twSUM4Z01qVTFMQ0IwYUdsekxtY2dQU0JOWVhSb0xtMXBiaWd5TlRVc0lIQmhjbk5sU1c1MEtHbGJNbDBzSURFd0tTa2dMeUF5TlRVc0lIUm9hWE11WWlBOUlFMWhkR2d1YldsdUtESTFOU3dnY0dGeWMyVkpiblFvYVZzelhTd2dNVEFwS1NBdklESTFOU3dnZENocFd6UmRLU3dnZEdocGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQTlJQzllWEhNcUtGeGtLeWxjSlZ4ektpeGNjeW9vWEdRcktWd2xYSE1xTEZ4ektpaGNaQ3NwWENWY2N5b29Qem9zWEhNcUtGeGtLbHd1UDF4a0t5bGNjeW9wUHlRdkxtVjRaV01vYnlrcElISmxkSFZ5YmlCMGFHbHpMbklnUFNCTllYUm9MbTFwYmlneE1EQXNJSEJoY25ObFNXNTBLR2xiTVYwc0lERXdLU2tnTHlBeE1EQXNJSFJvYVhNdVp5QTlJRTFoZEdndWJXbHVLREV3TUN3Z2NHRnljMlZKYm5Rb2FWc3lYU3dnTVRBcEtTQXZJREV3TUN3Z2RHaHBjeTVpSUQwZ1RXRjBhQzV0YVc0b01UQXdMQ0J3WVhKelpVbHVkQ2hwV3pOZExDQXhNQ2twSUM4Z01UQXdMQ0IwS0dsYk5GMHBMQ0IwYUdsek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpYUhOc0lqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW1oemJHRWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJRDBnTDE1Y2N5b29YR1FxWEM0L1hHUXJLVnh6S2l4Y2N5b29YR1FyS1Z3bFhITXFMRnh6S2loY1pDc3BYQ1ZjY3lvb1B6b3NYSE1xS0Z4a0tsd3VQMXhrS3lsY2N5b3BQeVF2TG1WNFpXTW9ieWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J3WVhKelpVWnNiMkYwS0dsYk1WMHBJQzhnTXpZd0xDQnNJRDBnY0dGeWMyVkpiblFvYVZzeVhTd2dNVEFwSUM4Z01UQXdMQ0JqSUQwZ2NHRnljMlZKYm5Rb2FWc3pYU3dnTVRBcElDOGdNVEF3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ2hwV3pSZEtTd2dkR2hwY3k1elpYUklVMHdvWVN3Z2JDd2dZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNodUlEMGdMMTVjSXloYlFTMUdZUzFtWEdSZEt5a2tMeTVsZUdWaktHVXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2Jsc3hYU3dnY2lBOUlHa3ViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnTXlrZ2NtVjBkWEp1SUhSb2FYTXVjaUE5SUhCaGNuTmxTVzUwS0drdVkyaGhja0YwS0RBcElDc2dhUzVqYUdGeVFYUW9NQ2tzSURFMktTQXZJREkxTlN3Z2RHaHBjeTVuSUQwZ2NHRnljMlZKYm5Rb2FTNWphR0Z5UVhRb01Ta2dLeUJwTG1Ob1lYSkJkQ2d4S1N3Z01UWXBJQzhnTWpVMUxDQjBhR2x6TG1JZ1BTQndZWEp6WlVsdWRDaHBMbU5vWVhKQmRDZ3lLU0FySUdrdVkyaGhja0YwS0RJcExDQXhOaWtnTHlBeU5UVXNJSFJvYVhNN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0EyS1NCeVpYUjFjbTRnZEdocGN5NXlJRDBnY0dGeWMyVkpiblFvYVM1amFHRnlRWFFvTUNrZ0t5QnBMbU5vWVhKQmRDZ3hLU3dnTVRZcElDOGdNalUxTENCMGFHbHpMbWNnUFNCd1lYSnpaVWx1ZENocExtTm9ZWEpCZENneUtTQXJJR2t1WTJoaGNrRjBLRE1wTENBeE5pa2dMeUF5TlRVc0lIUm9hWE11WWlBOUlIQmhjbk5sU1c1MEtHa3VZMmhoY2tGMEtEUXBJQ3NnYVM1amFHRnlRWFFvTlNrc0lERTJLU0F2SURJMU5Td2dkR2hwY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ0ppWWdaUzVzWlc1bmRHZ2dQaUF3SUQ4Z2RHaHBjeTV6WlhSRGIyeHZjazVoYldVb1pTa2dPaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUTI5c2IzSk9ZVzFsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlDUmpXMlV1ZEc5TWIzZGxja05oYzJVb0tWMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUhadmFXUWdNQ0EvSUhSb2FYTXVjMlYwU0dWNEtIUXBJRG9nWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1RGIyeHZjam9nVlc1cmJtOTNiaUJqYjJ4dmNpQWlJQ3NnWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb2RHaHBjeTV5TENCMGFHbHpMbWNzSUhSb2FYTXVZaWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJRDBnWlM1eUxDQjBhR2x6TG1jZ1BTQmxMbWNzSUhSb2FYTXVZaUE5SUdVdVlpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGxUVWtkQ1ZHOU1hVzVsWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQkVieWhsTG5JcExDQjBhR2x6TG1jZ1BTQkVieWhsTG1jcExDQjBhR2x6TG1JZ1BTQkVieWhsTG1JcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlVXhwYm1WaGNsUnZVMUpIUWlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBOUlFWnZLR1V1Y2lrc0lIUm9hWE11WnlBOUlFWnZLR1V1Wnlrc0lIUm9hWE11WWlBOUlFWnZLR1V1WWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIyNTJaWEowVTFKSFFsUnZUR2x1WldGeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OdmNIbFRVa2RDVkc5TWFXNWxZWElvZEdocGN5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiMjUyWlhKMFRHbHVaV0Z5Vkc5VFVrZENLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZjSGxNYVc1bFlYSlViMU5TUjBJb2RHaHBjeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSSVpYZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNpQXFJREkxTlNBOFBDQXhOaUJlSUhSb2FYTXVaeUFxSURJMU5TQThQQ0E0SUY0Z2RHaHBjeTVpSUNvZ01qVTFJRHc4SURBN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJJWlhoVGRISnBibWNvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNnaU1EQXdNREF3SWlBcklIUm9hWE11WjJWMFNHVjRLQ2t1ZEc5VGRISnBibWNvTVRZcEtTNXpiR2xqWlNndE5pazdDaUFnSUNCOUNpQWdJQ0JuWlhSSVUwd29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXlMQ0J1SUQwZ2RHaHBjeTVuTENCcElEMGdkR2hwY3k1aUxDQnlJRDBnVFdGMGFDNXRZWGdvZEN3Z2Jpd2dhU2tzSUc4Z1BTQk5ZWFJvTG0xcGJpaDBMQ0J1TENCcEtTd2dZU3dnYkN3Z1l5QTlJQ2h2SUNzZ2Npa2dMeUF5T3dvZ0lDQWdJQ0FnSUdsbUlDaHZJRDA5UFNCeUtTQmhJRDBnTUN3Z2JDQTlJREE3Q2lBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnY2lBdElHODdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2hzSUQwZ1l5QThQU0F1TlNBL0lHZ2dMeUFvY2lBcklHOHBJRG9nYUNBdklDZ3lJQzBnY2lBdElHOHBMQ0J5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaElEMGdLRzRnTFNCcEtTQXZJR2dnS3lBb2JpQThJR2tnUHlBMklEb2dNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElHNDZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVNBOUlDaHBJQzBnZENrZ0x5Qm9JQ3NnTWpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdhVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaElEMGdLSFFnTFNCdUtTQXZJR2dnS3lBME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHRWdMejBnTmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWFDQTlJR0VzSUdVdWN5QTlJR3dzSUdVdWJDQTlJR01zSUdVN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJUZEhsc1pTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJbkpuWWlnaUlDc2dLSFJvYVhNdWNpQXFJREkxTlNCOElEQXBJQ3NnSWl3aUlDc2dLSFJvYVhNdVp5QXFJREkxTlNCOElEQXBJQ3NnSWl3aUlDc2dLSFJvYVhNdVlpQXFJREkxTlNCOElEQXBJQ3NnSWlraU93b2dJQ0FnZlFvZ0lDQWdiMlptYzJWMFNGTk1LR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUklVMHdvUm5RcExDQkdkQzVvSUNzOUlHVXNJRVowTG5NZ0t6MGdkQ3dnUm5RdWJDQXJQU0J1TENCMGFHbHpMbk5sZEVoVFRDaEdkQzVvTENCR2RDNXpMQ0JHZEM1c0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUFyUFNCbExuSXNJSFJvYVhNdVp5QXJQU0JsTG1jc0lIUm9hWE11WWlBclBTQmxMbUlzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSRGIyeHZjbk1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQmxMbklnS3lCMExuSXNJSFJvYVhNdVp5QTlJR1V1WnlBcklIUXVaeXdnZEdocGN5NWlJRDBnWlM1aUlDc2dkQzVpTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVdSa1UyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUNzOUlHVXNJSFJvYVhNdVp5QXJQU0JsTENCMGFHbHpMbUlnS3owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITjFZaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUE5SUUxaGRHZ3ViV0Y0S0RBc0lIUm9hWE11Y2lBdElHVXVjaWtzSUhSb2FYTXVaeUE5SUUxaGRHZ3ViV0Y0S0RBc0lIUm9hWE11WnlBdElHVXVaeWtzSUhSb2FYTXVZaUE5SUUxaGRHZ3ViV0Y0S0RBc0lIUm9hWE11WWlBdElHVXVZaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUFxUFNCbExuSXNJSFJvYVhNdVp5QXFQU0JsTG1jc0lIUm9hWE11WWlBcVBTQmxMbUlzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlVk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNpQXFQU0JsTENCMGFHbHpMbWNnS2owZ1pTd2dkR2hwY3k1aUlDbzlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JzWlhKd0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJQ3M5SUNobExuSWdMU0IwYUdsekxuSXBJQ29nZEN3Z2RHaHBjeTVuSUNzOUlDaGxMbWNnTFNCMGFHbHpMbWNwSUNvZ2RDd2dkR2hwY3k1aUlDczlJQ2hsTG1JZ0xTQjBhR2x6TG1JcElDb2dkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3hsY25CRGIyeHZjbk1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JsTG5JZ0t5QW9kQzV5SUMwZ1pTNXlLU0FxSUc0c0lIUm9hWE11WnlBOUlHVXVaeUFySUNoMExtY2dMU0JsTG1jcElDb2diaXdnZEdocGN5NWlJRDBnWlM1aUlDc2dLSFF1WWlBdElHVXVZaWtnS2lCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JHVnljRWhUVENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NW5aWFJJVTB3b1JuUXBMQ0JsTG1kbGRFaFRUQ2hxY2lrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCdmNpaEdkQzVvTENCcWNpNW9MQ0IwS1N3Z2FTQTlJRzl5S0VaMExuTXNJR3B5TG5Nc0lIUXBMQ0J5SUQwZ2IzSW9SblF1YkN3Z2FuSXViQ3dnZENrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwU0ZOTUtHNHNJR2tzSUhJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXlJRDA5UFNCMGFHbHpMbklnSmlZZ1pTNW5JRDA5UFNCMGFHbHpMbWNnSmlZZ1pTNWlJRDA5UFNCMGFHbHpMbUk3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRWEp5WVhrb1pTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1pWdDBYU3dnZEdocGN5NW5JRDBnWlZ0MElDc2dNVjBzSUhSb2FYTXVZaUE5SUdWYmRDQXJJREpkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5QmNuSmhlU2hsSUQwZ1cxMHNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJkRjBnUFNCMGFHbHpMbklzSUdWYmRDQXJJREZkSUQwZ2RHaHBjeTVuTENCbFczUWdLeUF5WFNBOUlIUm9hWE11WWl3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQmxMbWRsZEZnb2RDa3NJSFJvYVhNdVp5QTlJR1V1WjJWMFdTaDBLU3dnZEdocGN5NWlJRDBnWlM1blpYUmFLSFFwTENCbExtNXZjbTFoYkdsNlpXUWdQVDA5SUNFd0lDWW1JQ2gwYUdsekxuSWdMejBnTWpVMUxDQjBhR2x6TG1jZ0x6MGdNalUxTENCMGFHbHpMbUlnTHowZ01qVTFLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUklaWGdvS1RzS0lDQWdJSDBLZlRzS1lXVXVUa0ZOUlZNZ1BTQWtZenNLWVdVdWNISnZkRzkwZVhCbExtbHpRMjlzYjNJZ1BTQWhNRHNLWVdVdWNISnZkRzkwZVhCbExuSWdQU0F4T3dwaFpTNXdjbTkwYjNSNWNHVXVaeUE5SURFN0NtRmxMbkJ5YjNSdmRIbHdaUzVpSUQwZ01Uc0tkbUZ5SUdodUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9RbUZ6YVdOTllYUmxjbWxoYkNJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9NVFkzTnpjeU1UVXBMQ0IwYUdsekxtMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJHbG5hSFJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnTVN3Z2RHaHBjeTVoYjAxaGNDQTlJRzUxYkd3c0lIUm9hWE11WVc5TllYQkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbk53WldOMWJHRnlUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJRzUxYkd3c0lIUm9hWE11Wlc1MlRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1amIyMWlhVzVsSUQwZ1ZuTXNJSFJvYVhNdWNtVm1iR1ZqZEdsMmFYUjVJRDBnTVN3Z2RHaHBjeTV5WldaeVlXTjBhVzl1VW1GMGFXOGdQU0F1T1Rnc0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ0lURXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdNU3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsWTJGd0lEMGdJbkp2ZFc1a0lpd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxhbTlwYmlBOUlDSnliM1Z1WkNJc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZMjlzYjNJdVkyOXdlU2hsTG1OdmJHOXlLU3dnZEdocGN5NXRZWEFnUFNCbExtMWhjQ3dnZEdocGN5NXNhV2RvZEUxaGNDQTlJR1V1YkdsbmFIUk5ZWEFzSUhSb2FYTXViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0JsTG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbUZ2VFdGd0lEMGdaUzVoYjAxaGNDd2dkR2hwY3k1aGIwMWhjRWx1ZEdWdWMybDBlU0E5SUdVdVlXOU5ZWEJKYm5SbGJuTnBkSGtzSUhSb2FYTXVjM0JsWTNWc1lYSk5ZWEFnUFNCbExuTndaV04xYkdGeVRXRndMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdaUzVoYkhCb1lVMWhjQ3dnZEdocGN5NWxiblpOWVhBZ1BTQmxMbVZ1ZGsxaGNDd2dkR2hwY3k1amIyMWlhVzVsSUQwZ1pTNWpiMjFpYVc1bExDQjBhR2x6TG5KbFpteGxZM1JwZG1sMGVTQTlJR1V1Y21WbWJHVmpkR2wyYVhSNUxDQjBhR2x6TG5KbFpuSmhZM1JwYjI1U1lYUnBieUE5SUdVdWNtVm1jbUZqZEdsdmJsSmhkR2x2TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUdVdWQybHlaV1p5WVcxbExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlHVXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9MQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WallYQXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVMQ0IwYUdsek93b2dJQ0FnZlFwOU93cG9iaTV3Y205MGIzUjVjR1V1YVhOTlpYTm9RbUZ6YVdOTllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1NtVWdQU0J1WlhjZ1RTd2dVWElnUFNCdVpYY2dXQ3dnVldVZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNobEtTa2dkR2h5YjNjZ2JtVjNJRlI1Y0dWRmNuSnZjaWdpVkVoU1JVVXVRblZtWm1WeVFYUjBjbWxpZFhSbE9pQmhjbkpoZVNCemFHOTFiR1FnWW1VZ1lTQlVlWEJsWkNCQmNuSmhlUzRpS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbTVoYldVZ1BTQWlJaXdnZEdocGN5NWhjbkpoZVNBOUlHVXNJSFJvYVhNdWFYUmxiVk5wZW1VZ1BTQjBMQ0IwYUdsekxtTnZkVzUwSUQwZ1pTQWhQVDBnZG05cFpDQXdJRDhnWlM1c1pXNW5kR2dnTHlCMElEb2dNQ3dnZEdocGN5NXViM0p0WVd4cGVtVmtJRDBnYmlBOVBUMGdJVEFzSUhSb2FYTXVkWE5oWjJVZ1BTQm9jaXdnZEdocGN5NTFjR1JoZEdWU1lXNW5aU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdiMlptYzJWME9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCamIzVnVkRG9nTFRFS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5abGNuTnBiMjRnUFNBd093b2dJQ0FnZlFvZ0lDQWdiMjVWY0d4dllXUkRZV3hzWW1GamF5Z3BJSHQ5Q2lBZ0lDQnpaWFFnYm1WbFpITlZjR1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJR1VnUFQwOUlDRXdJQ1ltSUhSb2FYTXVkbVZ5YzJsdmJpc3JPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZYTmhaMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblZ6WVdkbElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01aGJXVWdQU0JsTG01aGJXVXNJSFJvYVhNdVlYSnlZWGtnUFNCdVpYY2daUzVoY25KaGVTNWpiMjV6ZEhKMVkzUnZjaWhsTG1GeWNtRjVLU3dnZEdocGN5NXBkR1Z0VTJsNlpTQTlJR1V1YVhSbGJWTnBlbVVzSUhSb2FYTXVZMjkxYm5RZ1BTQmxMbU52ZFc1MExDQjBhR2x6TG01dmNtMWhiR2w2WldRZ1BTQmxMbTV2Y20xaGJHbDZaV1FzSUhSb2FYTXVkWE5oWjJVZ1BTQmxMblZ6WVdkbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlVUYwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCbElDbzlJSFJvYVhNdWFYUmxiVk5wZW1Vc0lHNGdLajBnZEM1cGRHVnRVMmw2WlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ2RHaHBjeTVwZEdWdFUybDZaVHNnYVNBOElISTdJR2tyS3lsMGFHbHpMbUZ5Y21GNVcyVWdLeUJwWFNBOUlIUXVZWEp5WVhsYmJpQXJJR2xkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVVGeWNtRjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjbkpoZVM1elpYUW9aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVEyOXNiM0p6UVhKeVlYa29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWhjbkpoZVN3Z2JpQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUdVdWJHVnVaM1JvT3lCcElEd2djanNnYVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsVzJsZE93b2dJQ0FnSUNBZ0lDQWdJQ0J2SUQwOVBTQjJiMmxrSURBZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlRWFIwY21saWRYUmxMbU52Y0hsRGIyeHZjbk5CY25KaGVTZ3BPaUJqYjJ4dmNpQnBjeUIxYm1SbFptbHVaV1FpTENCcEtTd2dieUE5SUc1bGR5QmhaU2tzSUhSYmJpc3JYU0E5SUc4dWNpd2dkRnR1S3l0ZElEMGdieTVuTENCMFcyNHJLMTBnUFNCdkxtSTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlVlpsWTNSdmNqSnpRWEp5WVhrb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1aGNuSmhlU3dnYmlBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJR1V1YkdWdVozUm9PeUJwSUR3Z2Nqc2dhU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQmxXMmxkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZJRDA5UFNCMmIybGtJREFnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVFYUjBjbWxpZFhSbExtTnZjSGxXWldOMGIzSXljMEZ5Y21GNUtDazZJSFpsWTNSdmNpQnBjeUIxYm1SbFptbHVaV1FpTENCcEtTd2dieUE5SUc1bGR5QllLU3dnZEZ0dUt5dGRJRDBnYnk1NExDQjBXMjRySzEwZ1BTQnZMbms3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVZabFkzUnZjak56UVhKeVlYa29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWhjbkpoZVN3Z2JpQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUdVdWJHVnVaM1JvT3lCcElEd2djanNnYVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsVzJsZE93b2dJQ0FnSUNBZ0lDQWdJQ0J2SUQwOVBTQjJiMmxrSURBZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlRWFIwY21saWRYUmxMbU52Y0hsV1pXTjBiM0l6YzBGeWNtRjVLQ2s2SUhabFkzUnZjaUJwY3lCMWJtUmxabWx1WldRaUxDQnBLU3dnYnlBOUlHNWxkeUJOS1N3Z2RGdHVLeXRkSUQwZ2J5NTRMQ0IwVzI0cksxMGdQU0J2TG5rc0lIUmJiaXNyWFNBOUlHOHVlanNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1Vm1WamRHOXlOSE5CY25KaGVTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtRnljbUY1TENCdUlEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnWlM1c1pXNW5kR2c3SUdrZ1BDQnlPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1ZiYVYwN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnUFQwOUlIWnZhV1FnTUNBbUppQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVXVZMjl3ZVZabFkzUnZjalJ6UVhKeVlYa29LVG9nZG1WamRHOXlJR2x6SUhWdVpHVm1hVzVsWkNJc0lHa3BMQ0J2SUQwZ2JtVjNJRlpsS1N3Z2RGdHVLeXRkSUQwZ2J5NTRMQ0IwVzI0cksxMGdQU0J2TG5rc0lIUmJiaXNyWFNBOUlHOHVlaXdnZEZ0dUt5dGRJRDBnYnk1M093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE15aGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YVhSbGJWTnBlbVVnUFQwOUlESXBJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxtTnZkVzUwT3lCMElEd2dianNnZENzcktWRnlMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEdocGN5d2dkQ2tzSUZGeUxtRndjR3g1VFdGMGNtbDRNeWhsS1N3Z2RHaHBjeTV6WlhSWVdTaDBMQ0JSY2k1NExDQlJjaTU1S1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoMGFHbHpMbWwwWlcxVGFYcGxJRDA5UFNBektTQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1amIzVnVkRHNnZENBOElHNDdJSFFyS3lsS1pTNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFJvYVhNc0lIUXBMQ0JLWlM1aGNIQnNlVTFoZEhKcGVETW9aU2tzSUhSb2FYTXVjMlYwV0ZsYUtIUXNJRXBsTG5nc0lFcGxMbmtzSUVwbExub3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2RHaHBjeTVqYjNWdWREc2dkQ0E4SUc0N0lIUXJLeWxLWlM1NElEMGdkR2hwY3k1blpYUllLSFFwTENCS1pTNTVJRDBnZEdocGN5NW5aWFJaS0hRcExDQktaUzU2SUQwZ2RHaHBjeTVuWlhSYUtIUXBMQ0JLWlM1aGNIQnNlVTFoZEhKcGVEUW9aU2tzSUhSb2FYTXVjMlYwV0ZsYUtIUXNJRXBsTG5nc0lFcGxMbmtzSUVwbExub3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxPYjNKdFlXeE5ZWFJ5YVhnb1pTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxtTnZkVzUwT3lCMElEd2dianNnZENzcktVcGxMbmdnUFNCMGFHbHpMbWRsZEZnb2RDa3NJRXBsTG5rZ1BTQjBhR2x6TG1kbGRGa29kQ2tzSUVwbExub2dQU0IwYUdsekxtZGxkRm9vZENrc0lFcGxMbUZ3Y0d4NVRtOXliV0ZzVFdGMGNtbDRLR1VwTENCMGFHbHpMbk5sZEZoWldpaDBMQ0JLWlM1NExDQktaUzU1TENCS1pTNTZLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhSb2FYTXVZMjkxYm5RN0lIUWdQQ0J1T3lCMEt5c3BTbVV1ZUNBOUlIUm9hWE11WjJWMFdDaDBLU3dnU21VdWVTQTlJSFJvYVhNdVoyVjBXU2gwS1N3Z1NtVXVlaUE5SUhSb2FYTXVaMlYwV2loMEtTd2dTbVV1ZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0dVcExDQjBhR2x6TG5ObGRGaFpXaWgwTENCS1pTNTRMQ0JLWlM1NUxDQktaUzU2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNUxuTmxkQ2hsTENCMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNVcyVWdLaUIwYUdsekxtbDBaVzFUYVhwbFhUc0tJQ0FnSUgwS0lDQWdJSE5sZEZnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRnljbUY1VzJVZ0tpQjBhR2x6TG1sMFpXMVRhWHBsWFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVWdGxJQ29nZEdocGN5NXBkR1Z0VTJsNlpTQXJJREZkT3dvZ0lDQWdmUW9nSUNBZ2MyVjBXU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF4WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJhS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVWdGxJQ29nZEdocGN5NXBkR1Z0VTJsNlpTQXJJREpkT3dvZ0lDQWdmUW9nSUNBZ2MyVjBXaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF5WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJYS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVWdGxJQ29nZEdocGN5NXBkR1Z0VTJsNlpTQXJJRE5kT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF6WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1NobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ0tqMGdkR2hwY3k1cGRHVnRVMmw2WlN3Z2RHaHBjeTVoY25KaGVWdGxJQ3NnTUYwZ1BTQjBMQ0IwYUdsekxtRnljbUY1VzJVZ0t5QXhYU0E5SUc0c0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllXVm9vWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDbzlJSFJvYVhNdWFYUmxiVk5wZW1Vc0lIUm9hWE11WVhKeVlYbGJaU0FySURCZElEMGdkQ3dnZEdocGN5NWhjbkpoZVZ0bElDc2dNVjBnUFNCdUxDQjBhR2x6TG1GeWNtRjVXMlVnS3lBeVhTQTlJR2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWVdWcFhLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQXFQU0IwYUdsekxtbDBaVzFUYVhwbExDQjBhR2x6TG1GeWNtRjVXMlVnS3lBd1hTQTlJSFFzSUhSb2FYTXVZWEp5WVhsYlpTQXJJREZkSUQwZ2Jpd2dkR2hwY3k1aGNuSmhlVnRsSUNzZ01sMGdQU0JwTENCMGFHbHpMbUZ5Y21GNVcyVWdLeUF6WFNBOUlISXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnZibFZ3Ykc5aFpDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWIyNVZjR3h2WVdSRFlXeHNZbUZqYXlBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9kR2hwY3k1aGNuSmhlU3dnZEdocGN5NXBkR1Z0VTJsNlpTa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdhWFJsYlZOcGVtVTZJSFJvYVhNdWFYUmxiVk5wZW1Vc0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklIUm9hWE11WVhKeVlYa3VZMjl1YzNSeWRXTjBiM0l1Ym1GdFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVhKeVlYazZJRUZ5Y21GNUxuQnliM1J2ZEhsd1pTNXpiR2xqWlM1allXeHNLSFJvYVhNdVlYSnlZWGtwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnViM0p0WVd4cGVtVmtPaUIwYUdsekxtNXZjbTFoYkdsNlpXUUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01aGJXVWdJVDA5SUNJaUlDWW1JQ2hsTG01aGJXVWdQU0IwYUdsekxtNWhiV1VwTENCMGFHbHpMblZ6WVdkbElDRTlQU0JvY2lBbUppQW9aUzUxYzJGblpTQTlJSFJvYVhNdWRYTmhaMlVwTENBb2RHaHBjeTUxY0dSaGRHVlNZVzVuWlM1dlptWnpaWFFnSVQwOUlEQWdmSHdnZEdocGN5NTFjR1JoZEdWU1lXNW5aUzVqYjNWdWRDQWhQVDBnTFRFcElDWW1JQ2hsTG5Wd1pHRjBaVkpoYm1kbElEMGdkR2hwY3k1MWNHUmhkR1ZTWVc1blpTa3NJR1U3Q2lBZ0lDQjlDbjA3Q2xWbExuQnliM1J2ZEhsd1pTNXBjMEoxWm1abGNrRjBkSEpwWW5WMFpTQTlJQ0V3T3dwMllYSWdhbU1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzVsZHlCSmJuUTRRWEp5WVhrb1pTa3NJSFFzSUc0cE93b2dJQ0FnZlFwOUxDQlJZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWV1VnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUZWcGJuUTRRWEp5WVhrb1pTa3NJSFFzSUc0cE93b2dJQ0FnZlFwOUxDQkxZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWV1VnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUZWcGJuUTRRMnhoYlhCbFpFRnljbUY1S0dVcExDQjBMQ0J1S1RzS0lDQWdJSDBLZlN3Z1pXZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklGVmxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNWxkeUJKYm5ReE5rRnljbUY1S0dVcExDQjBMQ0J1S1RzS0lDQWdJSDBLZlN3Z1dYTWdQU0JqYkdGemN5QmxlSFJsYm1SeklGVmxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNWxkeUJWYVc1ME1UWkJjbkpoZVNobEtTd2dkQ3dnYmlrN0NpQWdJQ0I5Q24wc0lIUm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVaWGNnU1c1ME16SkJjbkpoZVNobEtTd2dkQ3dnYmlrN0NpQWdJQ0I5Q24wc0lGcHpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVaWGNnVldsdWRETXlRWEp5WVhrb1pTa3NJSFFzSUc0cE93b2dJQ0FnZlFwOUxDQnVhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWV1VnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUZWcGJuUXhOa0Z5Y21GNUtHVXBMQ0IwTENCdUtUc0tJQ0FnSUgwS2ZUc0tibWd1Y0hKdmRHOTBlWEJsTG1selJteHZZWFF4TmtKMVptWmxja0YwZEhKcFluVjBaU0E5SUNFd093cDJZWElnWkdVZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5QkdiRzloZERNeVFYSnlZWGtvWlNrc0lIUXNJRzRwT3dvZ0lDQWdmUXA5TENCcGFDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1ZXVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JtVjNJRVpzYjJGME5qUkJjbkpoZVNobEtTd2dkQ3dnYmlrN0NpQWdJQ0I5Q24wc0lHTm1JRDBnTUN3Z1VuUWdQU0J1WlhjZ2NHVXNJRTV2SUQwZ2JtVjNJRTVsTENCamFTQTlJRzVsZHlCTkxDQlVkQ0E5SUc1bGR5Qk1kQ3dnSkdrZ1BTQnVaWGNnVEhRc0lHaDBJRDBnYm1WM0lFMHNJRjlsSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnBaQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHTm1LeXNLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUxZFdsa0lEMGdSWFFvS1N3Z2RHaHBjeTV1WVcxbElEMGdJaUlzSUhSb2FYTXVkSGx3WlNBOUlDSkNkV1ptWlhKSFpXOXRaWFJ5ZVNJc0lIUm9hWE11YVc1a1pYZ2dQU0J1ZFd4c0xDQjBhR2x6TG1GMGRISnBZblYwWlhNZ1BTQjdmU3dnZEdocGN5NXRiM0p3YUVGMGRISnBZblYwWlhNZ1BTQjdmU3dnZEdocGN5NXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaU0E5SUNFeExDQjBhR2x6TG1keWIzVndjeUE5SUZ0ZExDQjBhR2x6TG1KdmRXNWthVzVuUW05NElEMGdiblZzYkN3Z2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpTQTlJRzUxYkd3c0lIUm9hWE11WkhKaGQxSmhibWRsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWREb2dNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyOTFiblE2SURFZ0x5QXdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJSHQ5T3dvZ0lDQWdmUW9nSUNBZ1oyVjBTVzVrWlhnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVc1a1pYZzdDaUFnSUNCOUNpQWdJQ0J6WlhSSmJtUmxlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVGeWNtRjVMbWx6UVhKeVlYa29aU2tnUHlCMGFHbHpMbWx1WkdWNElEMGdibVYzSUNoWll5aGxLU0ErSURZMU5UTTFJRDhnV25NZ09pQlpjeWtvWlN3Z01Ta2dPaUIwYUdsekxtbHVaR1Y0SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRUYwZEhKcFluVjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWFIwY21saWRYUmxjMXRsWFRzS0lDQWdJSDBLSUNBZ0lITmxkRUYwZEhKcFluVjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhSMGNtbGlkWFJsYzF0bFhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrWld4bGRHVkJkSFJ5YVdKMWRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJrWld4bGRHVWdkR2hwY3k1aGRIUnlhV0oxZEdWelcyVmRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdhR0Z6UVhSMGNtbGlkWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzJWZElDRTlQU0IyYjJsa0lEQTdDaUFnSUNCOUNpQWdJQ0JoWkdSSGNtOTFjQ2hsTENCMExDQnVJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WjNKdmRYQnpMbkIxYzJnb2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWREb2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyOTFiblE2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdWeWFXRnNTVzVrWlhnNklHNEtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtJQ0FnSUdOc1pXRnlSM0p2ZFhCektDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVozSnZkWEJ6SUQwZ1cxMDdDaUFnSUNCOUNpQWdJQ0J6WlhSRWNtRjNVbUZ1WjJVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaSEpoZDFKaGJtZGxMbk4wWVhKMElEMGdaU3dnZEdocGN5NWtjbUYzVW1GdVoyVXVZMjkxYm5RZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVlYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJqc0tJQ0FnSUNBZ0lDQjBJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUXVZWEJ3YkhsTllYUnlhWGcwS0dVcExDQjBMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1aGRIUnlhV0oxZEdWekxtNXZjbTFoYkRzS0lDQWdJQ0FnSUNCcFppQW9iaUFoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdibVYzSUd4MEtDa3VaMlYwVG05eWJXRnNUV0YwY21sNEtHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCdUxtRndjR3g1VG05eWJXRnNUV0YwY21sNEtISXBMQ0J1TG01bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWhkSFJ5YVdKMWRHVnpMblJoYm1kbGJuUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9aU2tzSUdrdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrc0lIUm9hWE11WW05MWJtUnBibWRDYjNnZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1amIyMXdkWFJsUW05MWJtUnBibWRDYjNnb0tTd2dkR2hwY3k1aWIzVnVaR2x1WjFOd2FHVnlaU0FoUFQwZ2JuVnNiQ0FtSmlCMGFHbHpMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxSZFdGMFpYSnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1VuUXViV0ZyWlZKdmRHRjBhVzl1Um5KdmJWRjFZWFJsY201cGIyNG9aU2tzSUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0ZKMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISnZkR0YwWlZnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlNkQzV0WVd0bFVtOTBZWFJwYjI1WUtHVXBMQ0IwYUdsekxtRndjR3g1VFdGMGNtbDROQ2hTZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeWIzUmhkR1ZaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1VuUXViV0ZyWlZKdmRHRjBhVzl1V1NobEtTd2dkR2hwY3k1aGNIQnNlVTFoZEhKcGVEUW9VblFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MFlYUmxXaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZKMExtMWhhMlZTYjNSaGRHbHZibG9vWlNrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtGSjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRkowTG0xaGEyVlVjbUZ1YzJ4aGRHbHZiaWhsTENCMExDQnVLU3dnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvVW5RcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyTmhiR1VvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJTZEM1dFlXdGxVMk5oYkdVb1pTd2dkQ3dnYmlrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtGSjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3h2YjJ0QmRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTV2TG14dmIydEJkQ2hsS1N3Z1RtOHVkWEJrWVhSbFRXRjBjbWw0S0Nrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtFNXZMbTFoZEhKcGVDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpaVzUwWlhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dGNIVjBaVUp2ZFc1a2FXNW5RbTk0S0Nrc0lIUm9hWE11WW05MWJtUnBibWRDYjNndVoyVjBRMlZ1ZEdWeUtHTnBLUzV1WldkaGRHVW9LU3dnZEdocGN5NTBjbUZ1YzJ4aGRHVW9ZMmt1ZUN3Z1kya3VlU3dnWTJrdWVpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFVHOXBiblJ6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0JsTG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdaVnR1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdkQzV3ZFhOb0tISXVlQ3dnY2k1NUxDQnlMbm9nZkh3Z01DazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9kQ3dnTXlrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlVKdmRXNWthVzVuUW05NEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ2dQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVZbTkxYm1ScGJtZENiM2dnUFNCdVpYY2dUSFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0IwSUQwZ2RHaHBjeTV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0ppWWdaUzVwYzBkTVFuVm1abVZ5UVhSMGNtbGlkWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0oxUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVMbU52YlhCMWRHVkNiM1Z1WkdsdVowSnZlQ2dwT2lCSFRFSjFabVpsY2tGMGRISnBZblYwWlNCeVpYRjFhWEpsY3lCaElHMWhiblZoYkNCaWIzVnVaR2x1WnlCaWIzZ3VJRUZzZEdWeWJtRjBhWFpsYkhrZ2MyVjBJQ0p0WlhOb0xtWnlkWE4wZFcxRGRXeHNaV1FpSUhSdklDSm1ZV3h6WlNJdUp5d2dkR2hwY3lrc0lIUm9hWE11WW05MWJtUnBibWRDYjNndWMyVjBLRzVsZHlCTktDMHhJQzhnTUN3Z0xURWdMeUF3TENBdE1TQXZJREFwTENCdVpYY2dUU2d4SUM4Z01Dd2dNU0F2SURBc0lERWdMeUF3S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1aWIzVnVaR2x1WjBKdmVDNXpaWFJHY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dVcExDQjBLU0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMFcyNWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdWSFF1YzJWMFJuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHlLU3dnZEdocGN5NXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaU0EvSUNob2RDNWhaR1JXWldOMGIzSnpLSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV2x1TENCVWRDNXRhVzRwTENCMGFHbHpMbUp2ZFc1a2FXNW5RbTk0TG1WNGNHRnVaRUo1VUc5cGJuUW9hSFFwTENCb2RDNWhaR1JXWldOMGIzSnpLSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV0Y0TENCVWRDNXRZWGdwTENCMGFHbHpMbUp2ZFc1a2FXNW5RbTk0TG1WNGNHRnVaRUo1VUc5cGJuUW9hSFFwS1NBNklDaDBhR2x6TG1KdmRXNWthVzVuUW05NExtVjRjR0Z1WkVKNVVHOXBiblFvVkhRdWJXbHVLU3dnZEdocGN5NWliM1Z1WkdsdVowSnZlQzVsZUhCaGJtUkNlVkJ2YVc1MEtGUjBMbTFoZUNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV0ZyWlVWdGNIUjVLQ2s3Q2lBZ0lDQWdJQ0FnS0dselRtRk9LSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV2x1TG5ncElIeDhJR2x6VG1GT0tIUm9hWE11WW05MWJtUnBibWRDYjNndWJXbHVMbmtwSUh4OElHbHpUbUZPS0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldsdUxub3BLU0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ2RVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVM1amIyMXdkWFJsUW05MWJtUnBibWRDYjNnb0tUb2dRMjl0Y0hWMFpXUWdiV2x1TDIxaGVDQm9ZWFpsSUU1aFRpQjJZV3gxWlhNdUlGUm9aU0FpY0c5emFYUnBiMjRpSUdGMGRISnBZblYwWlNCcGN5QnNhV3RsYkhrZ2RHOGdhR0YyWlNCT1lVNGdkbUZzZFdWekxpY3NJSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0hWMFpVSnZkVzVrYVc1blUzQm9aWEpsS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVWdQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VZ1BTQnVaWGNnUVc0cE93b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCMElEMGdkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdKaVlnWlM1cGMwZE1RblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9KMVJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMU53YUdWeVpTZ3BPaUJIVEVKMVptWmxja0YwZEhKcFluVjBaU0J5WlhGMWFYSmxjeUJoSUcxaGJuVmhiQ0JpYjNWdVpHbHVaeUJ6Y0dobGNtVXVJRUZzZEdWeWJtRjBhWFpsYkhrZ2MyVjBJQ0p0WlhOb0xtWnlkWE4wZFcxRGRXeHNaV1FpSUhSdklDSm1ZV3h6WlNJdUp5d2dkR2hwY3lrc0lIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVXVjMlYwS0c1bGR5Qk5MQ0F4SUM4Z01DazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbExtTmxiblJsY2pzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0ZSMExuTmxkRVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlNrc0lIUXBJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0IwTG14bGJtZDBhRHNnY2lBOElHODdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSYmNsMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWthUzV6WlhSR2NtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHRXBMQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJRDhnS0doMExtRmtaRlpsWTNSdmNuTW9WSFF1YldsdUxDQWthUzV0YVc0cExDQlVkQzVsZUhCaGJtUkNlVkJ2YVc1MEtHaDBLU3dnYUhRdVlXUmtWbVZqZEc5eWN5aFVkQzV0WVhnc0lDUnBMbTFoZUNrc0lGUjBMbVY0Y0dGdVpFSjVVRzlwYm5Rb2FIUXBLU0E2SUNoVWRDNWxlSEJoYm1SQ2VWQnZhVzUwS0NScExtMXBiaWtzSUZSMExtVjRjR0Z1WkVKNVVHOXBiblFvSkdrdWJXRjRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnVkhRdVoyVjBRMlZ1ZEdWeUtHNHBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SURBN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0JsTG1OdmRXNTBPeUJ5SUR3Z2J6c2djaXNyS1doMExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnY2lrc0lHa2dQU0JOWVhSb0xtMWhlQ2hwTENCdUxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tHaDBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwS1NCbWIzSW9iR1YwSUhJZ1BTQXdMQ0J2SUQwZ2RDNXNaVzVuZEdnN0lISWdQQ0J2T3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBXM0pkTENCc0lEMGdkR2hwY3k1dGIzSndhRlJoY21kbGRITlNaV3hoZEdsMlpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QTlJREFzSUdnZ1BTQmhMbU52ZFc1ME95QmpJRHdnYURzZ1l5c3JLV2gwTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dZeWtzSUd3Z0ppWWdLR05wTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dZeWtzSUdoMExtRmtaQ2hqYVNrcExDQnBJRDBnVFdGMGFDNXRZWGdvYVN3Z2JpNWthWE4wWVc1alpWUnZVM0YxWVhKbFpDaG9kQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VdWNtRmthWFZ6SUQwZ1RXRjBhQzV6Y1hKMEtHa3BMQ0JwYzA1aFRpaDBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxMbkpoWkdsMWN5a2dKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ25WRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbmt1WTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDazZJRU52YlhCMWRHVmtJSEpoWkdsMWN5QnBjeUJPWVU0dUlGUm9aU0FpY0c5emFYUnBiMjRpSUdGMGRISnBZblYwWlNCcGN5QnNhV3RsYkhrZ2RHOGdhR0YyWlNCT1lVNGdkbUZzZFdWekxpY3NJSFJvYVhNcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR052YlhCMWRHVlVZVzVuWlc1MGN5Z3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdWFXNWtaWGdzSUhRZ1BTQjBhR2x6TG1GMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnUFQwOUlHNTFiR3dnZkh3Z2RDNXdiM05wZEdsdmJpQTlQVDBnZG05cFpDQXdJSHg4SUhRdWJtOXliV0ZzSUQwOVBTQjJiMmxrSURBZ2ZId2dkQzUxZGlBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1T2lBdVkyOXRjSFYwWlZSaGJtZGxiblJ6S0NrZ1ptRnBiR1ZrTGlCTmFYTnphVzVuSUhKbGNYVnBjbVZrSUdGMGRISnBZblYwWlhNZ0tHbHVaR1Y0TENCd2IzTnBkR2x2Yml3Z2JtOXliV0ZzSUc5eUlIVjJLU0lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWhjbkpoZVN3Z2FTQTlJSFF1Y0c5emFYUnBiMjR1WVhKeVlYa3NJSElnUFNCMExtNXZjbTFoYkM1aGNuSmhlU3dnYnlBOUlIUXVkWFl1WVhKeVlYa3NJR0VnUFNCcExteGxibWQwYUNBdklETTdDaUFnSUNBZ0lDQWdkQzUwWVc1blpXNTBJRDA5UFNCMmIybGtJREFnSmlZZ2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luUmhibWRsYm5RaUxDQnVaWGNnVldVb2JtVjNJRVpzYjJGME16SkJjbkpoZVNnMElDb2dZU2tzSURRcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUXVkR0Z1WjJWdWRDNWhjbkpoZVN3Z1l5QTlJRnRkTENCb0lEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JDSUQwZ01Ec2dRaUE4SUdFN0lFSXJLeWxqVzBKZElEMGdibVYzSUUwc0lHaGJRbDBnUFNCdVpYY2dUVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJRzVsZHlCTkxDQmtJRDBnYm1WM0lFMHNJR1lnUFNCdVpYY2dUU3dnYlNBOUlHNWxkeUJZTENCNElEMGdibVYzSUZnc0lIWWdQU0J1WlhjZ1dDd2daeUE5SUc1bGR5Qk5MQ0J3SUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWHloQ0xDQlFMQ0IzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFV1Wm5KdmJVRnljbUY1S0drc0lFSWdLaUF6S1N3Z1pDNW1jbTl0UVhKeVlYa29hU3dnVUNBcUlETXBMQ0JtTG1aeWIyMUJjbkpoZVNocExDQjNJQ29nTXlrc0lHMHVabkp2YlVGeWNtRjVLRzhzSUVJZ0tpQXlLU3dnZUM1bWNtOXRRWEp5WVhrb2J5d2dVQ0FxSURJcExDQjJMbVp5YjIxQmNuSmhlU2h2TENCM0lDb2dNaWtzSUdRdWMzVmlLSFVwTENCbUxuTjFZaWgxS1N3Z2VDNXpkV0lvYlNrc0lIWXVjM1ZpS0cwcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJREVnTHlBb2VDNTRJQ29nZGk1NUlDMGdkaTU0SUNvZ2VDNTVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lXbHpSbWx1YVhSbEtFVXBJSHg4SUNobkxtTnZjSGtvWkNrdWJYVnNkR2x3YkhsVFkyRnNZWElvZGk1NUtTNWhaR1JUWTJGc1pXUldaV04wYjNJb1ppd2dMWGd1ZVNrdWJYVnNkR2x3YkhsVFkyRnNZWElvUlNrc0lIQXVZMjl3ZVNobUtTNXRkV3gwYVhCc2VWTmpZV3hoY2loNExuZ3BMbUZrWkZOallXeGxaRlpsWTNSdmNpaGtMQ0F0ZGk1NEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loRktTd2dZMXRDWFM1aFpHUW9aeWtzSUdOYlVGMHVZV1JrS0djcExDQmpXM2RkTG1Ga1pDaG5LU3dnYUZ0Q1hTNWhaR1FvY0Nrc0lHaGJVRjB1WVdSa0tIQXBMQ0JvVzNkZExtRmtaQ2h3S1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ2RHaHBjeTVuY205MWNITTdDaUFnSUNBZ0lDQWdlUzVzWlc1bmRHZ2dQVDA5SURBZ0ppWWdLSGtnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKME9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjkxYm5RNklHNHViR1Z1WjNSb0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVJZ1BTQXdMQ0JRSUQwZ2VTNXNaVzVuZEdnN0lFSWdQQ0JRT3lBckswSXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkeUE5SUhsYlFsMHNJRVVnUFNCM0xuTjBZWEowTENCRUlEMGdkeTVqYjNWdWREc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JWSUQwZ1JTd2dSaUE5SUVVZ0t5QkVPeUJWSUR3Z1Jqc2dWU0FyUFNBektWOG9ibHRWSUNzZ01GMHNJRzViVlNBcklERmRMQ0J1VzFVZ0t5QXlYU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnYm1WM0lFMHNJRUVnUFNCdVpYY2dUU3dnVENBOUlHNWxkeUJOTENCSklEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2F5aENLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lFd3Vabkp2YlVGeWNtRjVLSElzSUVJZ0tpQXpLU3dnU1M1amIzQjVLRXdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVUNBOUlHTmJRbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSXVZMjl3ZVNoUUtTd2dZaTV6ZFdJb1RDNXRkV3gwYVhCc2VWTmpZV3hoY2loTUxtUnZkQ2hRS1NrcExtNXZjbTFoYkdsNlpTZ3BMQ0JCTG1OeWIzTnpWbVZqZEc5eWN5aEpMQ0JRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVVZ1BTQkJMbVJ2ZENob1cwSmRLU0E4SURBZ1B5QXRNU0E2SURFN0NpQWdJQ0FnSUNBZ0lDQWdJR3hiUWlBcUlEUmRJRDBnWWk1NExDQnNXMElnS2lBMElDc2dNVjBnUFNCaUxua3NJR3hiUWlBcUlEUWdLeUF5WFNBOUlHSXVlaXdnYkZ0Q0lDb2dOQ0FySUROZElEMGdSVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JDSUQwZ01Dd2dVQ0E5SUhrdWJHVnVaM1JvT3lCQ0lEd2dVRHNnS3l0Q0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIY2dQU0I1VzBKZExDQkZJRDBnZHk1emRHRnlkQ3dnUkNBOUlIY3VZMjkxYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdWU0E5SUVVc0lFWWdQU0JGSUNzZ1JEc2dWU0E4SUVZN0lGVWdLejBnTXlscktHNWJWU0FySURCZEtTd2dheWh1VzFVZ0t5QXhYU2tzSUdzb2JsdFZJQ3NnTWwwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR052YlhCMWRHVldaWEowWlhoT2IzSnRZV3h6S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVwYm1SbGVDd2dkQ0E5SUhSb2FYTXVaMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJcE93b2dJQ0FnSUNBZ0lHbG1JQ2gwSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtZGxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1SUQwOVBTQjJiMmxrSURBcElHNGdQU0J1WlhjZ1ZXVW9ibVYzSUVac2IyRjBNekpCY25KaGVTaDBMbU52ZFc1MElDb2dNeWtzSURNcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2diaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnWm05eUtHeGxkQ0JrSUQwZ01Dd2daaUE5SUc0dVkyOTFiblE3SUdRZ1BDQm1PeUJrS3lzcGJpNXpaWFJZV1Zvb1pDd2dNQ3dnTUN3Z01DazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYm1WM0lFMHNJSElnUFNCdVpYY2dUU3dnYnlBOUlHNWxkeUJOTENCaElEMGdibVYzSUUwc0lHd2dQU0J1WlhjZ1RTd2dZeUE5SUc1bGR5Qk5MQ0JvSUQwZ2JtVjNJRTBzSUhVZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dVcElHWnZjaWhzWlhRZ1pDQTlJREFzSUdZZ1BTQmxMbU52ZFc1ME95QmtJRHdnWmpzZ1pDQXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnWlM1blpYUllLR1FnS3lBd0tTd2dlQ0E5SUdVdVoyVjBXQ2hrSUNzZ01Ta3NJSFlnUFNCbExtZGxkRmdvWkNBcklESXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hRc0lHMHBMQ0J5TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2dlQ2tzSUc4dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBMQ0IyS1N3Z2FDNXpkV0pXWldOMGIzSnpLRzhzSUhJcExDQjFMbk4xWWxabFkzUnZjbk1vYVN3Z2Npa3NJR2d1WTNKdmMzTW9kU2tzSUdFdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHVMQ0J0S1N3Z2JDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLRzRzSUhncExDQmpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYml3Z2Rpa3NJR0V1WVdSa0tHZ3BMQ0JzTG1Ga1pDaG9LU3dnWXk1aFpHUW9hQ2tzSUc0dWMyVjBXRmxhS0cwc0lHRXVlQ3dnWVM1NUxDQmhMbm9wTENCdUxuTmxkRmhaV2loNExDQnNMbmdzSUd3dWVTd2diQzU2S1N3Z2JpNXpaWFJZV1Zvb2Rpd2dZeTU0TENCakxua3NJR011ZWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JtYjNJb2JHVjBJR1FnUFNBd0xDQm1JRDBnZEM1amIzVnVkRHNnWkNBOElHWTdJR1FnS3owZ015bHBMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEN3Z1pDQXJJREFwTENCeUxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kQ3dnWkNBcklERXBMQ0J2TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2daQ0FySURJcExDQm9Mbk4xWWxabFkzUnZjbk1vYnl3Z2Npa3NJSFV1YzNWaVZtVmpkRzl5Y3locExDQnlLU3dnYUM1amNtOXpjeWgxS1N3Z2JpNXpaWFJZV1Zvb1pDQXJJREFzSUdndWVDd2dhQzU1TENCb0xub3BMQ0J1TG5ObGRGaFpXaWhrSUNzZ01Td2dhQzU0TENCb0xua3NJR2d1ZWlrc0lHNHVjMlYwV0ZsYUtHUWdLeUF5TENCb0xuZ3NJR2d1ZVN3Z2FDNTZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV1YjNKdFlXeHBlbVZPYjNKdFlXeHpLQ2tzSUc0dWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnRaWEpuWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tDRW9aU0FtSmlCbExtbHpRblZtWm1WeVIyVnZiV1YwY25rcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG0xbGNtZGxLQ2s2SUdkbGIyMWxkSEo1SUc1dmRDQmhiaUJwYm5OMFlXNWpaU0J2WmlCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTNGlMQ0JsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBJRDA5UFNCMmIybGtJREFnSmlZZ0tIUWdQU0F3TENCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG0xbGNtZGxLQ2s2SUU5MlpYSjNjbWwwYVc1bklHOXlhV2RwYm1Gc0lHZGxiMjFsZEhKNUxDQnpkR0Z5ZEdsdVp5QmhkQ0J2Wm1aelpYUTlNQzRnVlhObElFSjFabVpsY2tkbGIyMWxkSEo1VlhScGJITXViV1Z5WjJWQ2RXWm1aWEpIWlc5dFpYUnlhV1Z6S0NrZ1ptOXlJR3h2YzNOc1pYTnpJRzFsY21kbExpSXBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVlYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dhVzRnYmlsN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobExtRjBkSEpwWW5WMFpYTmJhVjBnUFQwOUlIWnZhV1FnTUNrZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdibHRwWFM1aGNuSmhlU3dnWVNBOUlHVXVZWFIwY21saWRYUmxjMXRwWFN3Z2JDQTlJR0V1WVhKeVlYa3NJR01nUFNCaExtbDBaVzFUYVhwbElDb2dkQ3dnYUNBOUlFMWhkR2d1YldsdUtHd3ViR1Z1WjNSb0xDQnZMbXhsYm1kMGFDQXRJR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0F3TENCa0lEMGdZenNnZFNBOElHZzdJSFVyS3l3Z1pDc3JLVzliWkYwZ1BTQnNXM1ZkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzV2Y20xaGJHbDZaVTV2Y20xaGJITW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtRjBkSEpwWW5WMFpYTXVibTl5YldGc093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQmxMbU52ZFc1ME95QjBJRHdnYmpzZ2RDc3JLV2gwTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dkQ2tzSUdoMExtNXZjbTFoYkdsNlpTZ3BMQ0JsTG5ObGRGaFpXaWgwTENCb2RDNTRMQ0JvZEM1NUxDQm9kQzU2S1RzS0lDQWdJSDBLSUNBZ0lIUnZUbTl1U1c1a1pYaGxaQ2dwSUhzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCbEtHRXNJR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQmhMbUZ5Y21GNUxDQm9JRDBnWVM1cGRHVnRVMmw2WlN3Z2RTQTlJR0V1Ym05eWJXRnNhWHBsWkN3Z1pDQTlJRzVsZHlCakxtTnZibk4wY25WamRHOXlLR3d1YkdWdVozUm9JQ29nYUNrc0lHWWdQU0F3TENCdElEMGdNRHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNElEMGdNQ3dnZGlBOUlHd3ViR1Z1WjNSb095QjRJRHdnZGpzZ2VDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0V1YVhOSmJuUmxjbXhsWVhabFpFSjFabVpsY2tGMGRISnBZblYwWlNBL0lHWWdQU0JzVzNoZElDb2dZUzVrWVhSaExuTjBjbWxrWlNBcklHRXViMlptYzJWMElEb2daaUE5SUd4YmVGMGdLaUJvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JuSUQwZ01Ec2daeUE4SUdnN0lHY3JLeWxrVzIwcksxMGdQU0JqVzJZcksxMDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJWWlNoa0xDQm9MQ0IxS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFXNWtaWGdnUFQwOUlHNTFiR3dwSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVMblJ2VG05dVNXNWtaWGhsWkNncE9pQkNkV1ptWlhKSFpXOXRaWFJ5ZVNCcGN5QmhiSEpsWVdSNUlHNXZiaTFwYm1SbGVHVmtMaUlwTENCMGFHbHpPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdibVYzSUY5bExDQnVJRDBnZEdocGN5NXBibVJsZUM1aGNuSmhlU3dnYVNBOUlIUm9hWE11WVhSMGNtbGlkWFJsY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ2FXNGdhU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2FWdGhYU3dnWXlBOUlHVW9iQ3dnYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1YzJWMFFYUjBjbWxpZFhSbEtHRXNJR01wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXViVzl5Y0doQmRIUnlhV0oxZEdWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQnBiaUJ5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQmJYU3dnWXlBOUlISmJZVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJREFzSUhVZ1BTQmpMbXhsYm1kMGFEc2dhQ0E4SUhVN0lHZ3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJR05iYUYwc0lHWWdQU0JsS0dRc0lHNHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiQzV3ZFhOb0tHWXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFF1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpXMkZkSUQwZ2JEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkQzV0YjNKd2FGUmhjbWRsZEhOU1pXeGhkR2wyWlNBOUlIUm9hWE11Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMGFHbHpMbWR5YjNWd2N6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdQU0F3TENCc0lEMGdieTVzWlc1bmRHZzdJR0VnUENCc095QmhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHOWJZVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVZV1JrUjNKdmRYQW9ZeTV6ZEdGeWRDd2dZeTVqYjNWdWRDd2dZeTV0WVhSbGNtbGhiRWx1WkdWNEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMWxkR0ZrWVhSaE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaWEp6YVc5dU9pQTBMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlRblZtWm1WeVIyVnZiV1YwY25raUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVnVaWEpoZEc5eU9pQWlRblZtWm1WeVIyVnZiV1YwY25rdWRHOUtVMDlPSWdvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNTFkV2xrSUQwZ2RHaHBjeTUxZFdsa0xDQmxMblI1Y0dVZ1BTQjBhR2x6TG5SNWNHVXNJSFJvYVhNdWJtRnRaU0FoUFQwZ0lpSWdKaVlnS0dVdWJtRnRaU0E5SUhSb2FYTXVibUZ0WlNrc0lFOWlhbVZqZEM1clpYbHpLSFJvYVhNdWRYTmxja1JoZEdFcExteGxibWQwYUNBK0lEQWdKaVlnS0dVdWRYTmxja1JoZEdFZ1BTQjBhR2x6TG5WelpYSkVZWFJoS1N3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0IwYUdsekxuQmhjbUZ0WlhSbGNuTTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlCcGJpQnNLV3hiWTEwZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWlZ0alhTQTlJR3hiWTEwcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWlM1a1lYUmhJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmhkSFJ5YVdKMWRHVnpPaUI3ZlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbWx1WkdWNE93b2dJQ0FnSUNBZ0lIUWdJVDA5SUc1MWJHd2dKaVlnS0dVdVpHRjBZUzVwYm1SbGVDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nZEM1aGNuSmhlUzVqYjI1emRISjFZM1J2Y2k1dVlXMWxMQW9nSUNBZ0lDQWdJQ0FnSUNCaGNuSmhlVG9nUVhKeVlYa3VjSEp2ZEc5MGVYQmxMbk5zYVdObExtTmhiR3dvZEM1aGNuSmhlU2tLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR3dnYVc0Z2JpbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnYmx0c1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1a1lYUmhMbUYwZEhKcFluVjBaWE5iYkYwZ1BTQmpMblJ2U2xOUFRpaGxMbVJoZEdFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIdDlMQ0J5SUQwZ0lURTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNJR2x1SUhSb2FYTXViVzl5Y0doQmRIUnlhV0oxZEdWektYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0IwYUdsekxtMXZjbkJvUVhSMGNtbGlkWFJsYzF0c1hTd2dhQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnWXk1c1pXNW5kR2c3SUhVZ1BDQmtPeUIxS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCalczVmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhQzV3ZFhOb0tHWXVkRzlLVTA5T0tHVXVaR0YwWVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHZ3ViR1Z1WjNSb0lENGdNQ0FtSmlBb2FWdHNYU0E5SUdnc0lISWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISWdKaVlnS0dVdVpHRjBZUzV0YjNKd2FFRjBkSEpwWW5WMFpYTWdQU0JwTENCbExtUmhkR0V1Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VZ1BTQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11WjNKdmRYQnpPd29nSUNBZ0lDQWdJRzh1YkdWdVozUm9JRDRnTUNBbUppQW9aUzVrWVhSaExtZHliM1Z3Y3lBOUlFcFRUMDR1Y0dGeWMyVW9TbE5QVGk1emRISnBibWRwWm5rb2J5a3BLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0VnSVQwOUlHNTFiR3dnSmlZZ0tHVXVaR0YwWVM1aWIzVnVaR2x1WjFOd2FHVnlaU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMlZ1ZEdWeU9pQmhMbU5sYm5SbGNpNTBiMEZ5Y21GNUtDa3NDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWVM1eVlXUnBkWE1LSUNBZ0lDQWdJQ0I5S1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdVpHVjRJRDBnYm5Wc2JDd2dkR2hwY3k1aGRIUnlhV0oxZEdWeklEMGdlMzBzSUhSb2FYTXViVzl5Y0doQmRIUnlhV0oxZEdWeklEMGdlMzBzSUhSb2FYTXVaM0p2ZFhCeklEMGdXMTBzSUhSb2FYTXVZbTkxYm1ScGJtZENiM2dnUFNCdWRXeHNMQ0IwYUdsekxtSnZkVzVrYVc1blUzQm9aWEpsSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSHQ5T3dvZ0lDQWdJQ0FnSUhSb2FYTXVibUZ0WlNBOUlHVXVibUZ0WlRzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdWFXNWtaWGc3Q2lBZ0lDQWdJQ0FnYmlBaFBUMGdiblZzYkNBbUppQjBhR2x6TG5ObGRFbHVaR1Y0S0c0dVkyeHZibVVvZENrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNWhkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZeUJwYmlCcEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JwVzJOZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2hqTENCb0xtTnNiMjVsS0hRcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQmxMbTF2Y25Cb1FYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdhVzRnY2lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdXMTBzSUhVZ1BTQnlXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHUWdQU0F3TENCbUlEMGdkUzVzWlc1bmRHZzdJR1FnUENCbU95QmtLeXNwYUM1d2RYTm9LSFZiWkYwdVkyeHZibVVvZENrcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMXZjbkJvUVhSMGNtbGlkWFJsYzF0alhTQTlJR2c3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVVnUFNCbExtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdaUzVuY205MWNITTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmpJRDBnTUN3Z2FDQTlJRzh1YkdWdVozUm9PeUJqSUR3Z2FEc2dZeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQnZXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Ga1pFZHliM1Z3S0hVdWMzUmhjblFzSUhVdVkyOTFiblFzSUhVdWJXRjBaWEpwWVd4SmJtUmxlQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnWlM1aWIzVnVaR2x1WjBKdmVEc0tJQ0FnSUNBZ0lDQmhJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbUp2ZFc1a2FXNW5RbTk0SUQwZ1lTNWpiRzl1WlNncEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHVXVZbTkxYm1ScGJtZFRjR2hsY21VN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUd3Z0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVVnUFNCc0xtTnNiMjVsS0NrcExDQjBhR2x6TG1SeVlYZFNZVzVuWlM1emRHRnlkQ0E5SUdVdVpISmhkMUpoYm1kbExuTjBZWEowTENCMGFHbHpMbVJ5WVhkU1lXNW5aUzVqYjNWdWRDQTlJR1V1WkhKaGQxSmhibWRsTG1OdmRXNTBMQ0IwYUdsekxuVnpaWEpFWVhSaElEMGdaUzUxYzJWeVJHRjBZU3dnWlM1d1lYSmhiV1YwWlhKeklDRTlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdVdWNHRnlZVzFsZEdWeWN5a3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVpHbHpjRzl6WlNJS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS2ZUc0tYMlV1Y0hKdmRHOTBlWEJsTG1selFuVm1abVZ5UjJWdmJXVjBjbmtnUFNBaE1Ec0tkbUZ5SUVOc0lEMGdibVYzSUhCbExDQm9hU0E5SUc1bGR5QkRiaXdnUW04Z1BTQnVaWGNnUVc0c0lHMXVJRDBnYm1WM0lFMHNJR2R1SUQwZ2JtVjNJRTBzSUhodUlEMGdibVYzSUUwc0lIcHZJRDBnYm1WM0lFMHNJRlZ2SUQwZ2JtVjNJRTBzSUU5dklEMGdibVYzSUUwc0lFdHlJRDBnYm1WM0lFMHNJR1Z6SUQwZ2JtVjNJRTBzSUhSeklEMGdibVYzSUUwc0lHNXpJRDBnYm1WM0lGZ3NJR2x6SUQwZ2JtVjNJRmdzSUhKeklEMGdibVYzSUZnc0lFaHZJRDBnYm1WM0lFMHNJSE56SUQwZ2JtVjNJRTBzSUhOMElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lGOWxMQ0IwSUQwZ2JtVjNJR2h1S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk5aWE5vSWl3Z2RHaHBjeTVuWlc5dFpYUnllU0E5SUdVc0lIUm9hWE11YldGMFpYSnBZV3dnUFNCMExDQjBhR2x6TG5Wd1pHRjBaVTF2Y25Cb1ZHRnlaMlYwY3lncE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUdVdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeklEMGdaUzV0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNdWMyeHBZMlVvS1Nrc0lHVXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1SUNFOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWlM1dGIzSndhRlJoY21kbGRFUnBZM1JwYjI1aGNua3BLU3dnZEdocGN5NXRZWFJsY21saGJDQTlJR1V1YldGMFpYSnBZV3dzSUhSb2FYTXVaMlZ2YldWMGNua2dQU0JsTG1kbGIyMWxkSEo1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVuWlc5dFpYUnllVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNXBjMEoxWm1abGNrZGxiMjFsZEhKNUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1dGIzSndhRUYwZEhKcFluVjBaWE1zSUc0Z1BTQlBZbXBsWTNRdWEyVjVjeWgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c0dWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBXMjViTUYxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJRDBnVzEwc0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNUlEMGdlMzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHa3ViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnBXM0pkTG01aGJXVWdmSHdnVTNSeWFXNW5LSElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeTV3ZFhOb0tEQXBMQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBSR2xqZEdsdmJtRnllVnRoWFNBOUlISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG0xdmNuQm9WR0Z5WjJWMGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnZENBaFBUMGdkbTlwWkNBd0lDWW1JSFF1YkdWdVozUm9JRDRnTUNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWlhOb0xuVndaR0YwWlUxdmNuQm9WR0Z5WjJWMGN5Z3BJRzV2SUd4dmJtZGxjaUJ6ZFhCd2IzSjBjeUJVU0ZKRlJTNUhaVzl0WlhSeWVTNGdWWE5sSUZSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUlHbHVjM1JsWVdRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnY21GNVkyRnpkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1kbGIyMWxkSEo1TENCcElEMGdkR2hwY3k1dFlYUmxjbWxoYkN3Z2NpQTlJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUTdDaUFnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJSFp2YVdRZ01DQjhmQ0FvYmk1aWIzVnVaR2x1WjFOd2FHVnlaU0E5UFQwZ2JuVnNiQ0FtSmlCdUxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwTENCQ2J5NWpiM0I1S0c0dVltOTFibVJwYm1kVGNHaGxjbVVwTENCQ2J5NWhjSEJzZVUxaGRISnBlRFFvY2lrc0lHVXVjbUY1TG1sdWRHVnljMlZqZEhOVGNHaGxjbVVvUW04cElEMDlQU0FoTVNrZ2ZId2dLRU5zTG1OdmNIa29jaWt1YVc1MlpYSjBLQ2tzSUdocExtTnZjSGtvWlM1eVlYa3BMbUZ3Y0d4NVRXRjBjbWw0TkNoRGJDa3NJRzR1WW05MWJtUnBibWRDYjNnZ0lUMDlJRzUxYkd3Z0ppWWdhR2t1YVc1MFpYSnpaV04wYzBKdmVDaHVMbUp2ZFc1a2FXNW5RbTk0S1NBOVBUMGdJVEVwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnYkdWMElHODdDaUFnSUNBZ0lDQWdhV1lnS0c0dWFYTkNkV1ptWlhKSFpXOXRaWFJ5ZVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzR1YVc1a1pYZ3NJR3dnUFNCdUxtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHNJR01nUFNCdUxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3Z2FDQTlJRzR1Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1Vc0lIVWdQU0J1TG1GMGRISnBZblYwWlhNdWRYWXNJR1FnUFNCdUxtRjBkSEpwWW5WMFpYTXVkWFl5TENCbUlEMGdiaTVuY205MWNITXNJRzBnUFNCdUxtUnlZWGRTWVc1blpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHRWdJVDA5SUc1MWJHd3BJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLR2twS1NCbWIzSW9iR1YwSUhnZ1BTQXdMQ0IySUQwZ1ppNXNaVzVuZEdnN0lIZ2dQQ0IyT3lCNEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQm1XM2hkTENCd0lEMGdhVnRuTG0xaGRHVnlhV0ZzU1c1a1pYaGRMQ0JmSUQwZ1RXRjBhQzV0WVhnb1p5NXpkR0Z5ZEN3Z2JTNXpkR0Z5ZENrc0lIa2dQU0JOWVhSb0xtMXBiaWhoTG1OdmRXNTBMQ0JOWVhSb0xtMXBiaWhuTG5OMFlYSjBJQ3NnWnk1amIzVnVkQ3dnYlM1emRHRnlkQ0FySUcwdVkyOTFiblFwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWWlBOUlGOHNJRUVnUFNCNU95QmlJRHdnUVRzZ1lpQXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVENBOUlHRXVaMlYwV0NoaUtTd2dTU0E5SUdFdVoyVjBXQ2hpSUNzZ01Ta3NJR3NnUFNCaExtZGxkRmdvWWlBcklESXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnZjeWgwYUdsekxDQndMQ0JsTENCb2FTd2diQ3dnWXl3Z2FDd2dkU3dnWkN3Z1RDd2dTU3dnYXlrc0lHOGdKaVlnS0c4dVptRmpaVWx1WkdWNElEMGdUV0YwYUM1bWJHOXZjaWhpSUM4Z015a3NJRzh1Wm1GalpTNXRZWFJsY21saGJFbHVaR1Y0SUQwZ1p5NXRZWFJsY21saGJFbHVaR1Y0TENCMExuQjFjMmdvYnlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0JOWVhSb0xtMWhlQ2d3TENCdExuTjBZWEowS1N3Z2RpQTlJRTFoZEdndWJXbHVLR0V1WTI5MWJuUXNJRzB1YzNSaGNuUWdLeUJ0TG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaeUE5SUhnc0lIQWdQU0IyT3lCbklEd2djRHNnWnlBclBTQXpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUdFdVoyVjBXQ2huS1N3Z2VTQTlJR0V1WjJWMFdDaG5JQ3NnTVNrc0lHSWdQU0JoTG1kbGRGZ29aeUFySURJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdmN5aDBhR2x6TENCcExDQmxMQ0JvYVN3Z2JDd2dZeXdnYUN3Z2RTd2daQ3dnWHl3Z2VTd2dZaWtzSUc4Z0ppWWdLRzh1Wm1GalpVbHVaR1Y0SUQwZ1RXRjBhQzVtYkc5dmNpaG5JQzhnTXlrc0lIUXVjSFZ6YUNodktTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCcFppQW9iQ0FoUFQwZ2RtOXBaQ0F3S1NCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNocEtTa2dabTl5S0d4bGRDQjRJRDBnTUN3Z2RpQTlJR1l1YkdWdVozUm9PeUI0SUR3Z2Rqc2dlQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnWmx0NFhTd2djQ0E5SUdsYlp5NXRZWFJsY21saGJFbHVaR1Y0WFN3Z1h5QTlJRTFoZEdndWJXRjRLR2N1YzNSaGNuUXNJRzB1YzNSaGNuUXBMQ0I1SUQwZ1RXRjBhQzV0YVc0b2JDNWpiM1Z1ZEN3Z1RXRjBhQzV0YVc0b1p5NXpkR0Z5ZENBcklHY3VZMjkxYm5Rc0lHMHVjM1JoY25RZ0t5QnRMbU52ZFc1MEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHSWdQU0JmTENCQklEMGdlVHNnWWlBOElFRTdJR0lnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFd2dQU0JpTENCSklEMGdZaUFySURFc0lHc2dQU0JpSUNzZ01qc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2IzTW9kR2hwY3l3Z2NDd2daU3dnYUdrc0lHd3NJR01zSUdnc0lIVXNJR1FzSUV3c0lFa3NJR3NwTENCdklDWW1JQ2h2TG1aaFkyVkpibVJsZUNBOUlFMWhkR2d1Wm14dmIzSW9ZaUF2SURNcExDQnZMbVpoWTJVdWJXRjBaWEpwWVd4SmJtUmxlQ0E5SUdjdWJXRjBaWEpwWVd4SmJtUmxlQ3dnZEM1d2RYTm9LRzhwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdUV0YwYUM1dFlYZ29NQ3dnYlM1emRHRnlkQ2tzSUhZZ1BTQk5ZWFJvTG0xcGJpaHNMbU52ZFc1MExDQnRMbk4wWVhKMElDc2diUzVqYjNWdWRDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHY2dQU0I0TENCd0lEMGdkanNnWnlBOElIQTdJR2NnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0JuTENCNUlEMGdaeUFySURFc0lHSWdQU0JuSUNzZ01qc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2IzTW9kR2hwY3l3Z2FTd2daU3dnYUdrc0lHd3NJR01zSUdnc0lIVXNJR1FzSUY4c0lIa3NJR0lwTENCdklDWW1JQ2h2TG1aaFkyVkpibVJsZUNBOUlFMWhkR2d1Wm14dmIzSW9aeUF2SURNcExDQjBMbkIxYzJnb2J5a3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUc0dWFYTkhaVzl0WlhSeWVTQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TlpYTm9MbkpoZVdOaGMzUW9LU0J1YnlCc2IyNW5aWElnYzNWd2NHOXlkSE1nVkVoU1JVVXVSMlZ2YldWMGNua3VJRlZ6WlNCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBPd29nSUNBZ2ZRcDlPd3B6ZEM1d2NtOTBiM1I1Y0dVdWFYTk5aWE5vSUQwZ0lUQTdDbVoxYm1OMGFXOXVJR2htS0hNc0lHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXBJSHNLSUNBZ0lHeGxkQ0JzT3dvZ0lDQWdhV1lnS0dVdWMybGtaU0E5UFQwZ2FYUWdQeUJzSUQwZ2JpNXBiblJsY25ObFkzUlVjbWxoYm1kc1pTaHZMQ0J5TENCcExDQWhNQ3dnWVNrZ09pQnNJRDBnYmk1cGJuUmxjbk5sWTNSVWNtbGhibWRzWlNocExDQnlMQ0J2TENCbExuTnBaR1VnSVQwOUlFTnBMQ0JoS1N3Z2JDQTlQVDBnYm5Wc2JDa2djbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQnpjeTVqYjNCNUtHRXBMQ0J6Y3k1aGNIQnNlVTFoZEhKcGVEUW9jeTV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0JzWlhRZ1l5QTlJSFF1Y21GNUxtOXlhV2RwYmk1a2FYTjBZVzVqWlZSdktITnpLVHNLSUNBZ0lISmxkSFZ5YmlCaklEd2dkQzV1WldGeUlIeDhJR01nUGlCMExtWmhjaUEvSUc1MWJHd2dPaUI3Q2lBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SUdNc0NpQWdJQ0FnSUNBZ2NHOXBiblE2SUhOekxtTnNiMjVsS0Nrc0NpQWdJQ0FnSUNBZ2IySnFaV04wT2lCekNpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlHOXpLSE1zSUdVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01zSUdnc0lIVXBJSHNLSUNBZ0lHMXVMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYVN3Z1l5a3NJR2R1TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2FTd2dhQ2tzSUhodUxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9hU3dnZFNrN0NpQWdJQ0JzWlhRZ1pDQTlJSE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWek93b2dJQ0FnYVdZZ0tISWdKaVlnWkNrZ2V3b2dJQ0FnSUNBZ0lFdHlMbk5sZENnd0xDQXdMQ0F3S1N3Z1pYTXVjMlYwS0RBc0lEQXNJREFwTENCMGN5NXpaWFFvTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0SUQwZ01Dd2dlQ0E5SUhJdWJHVnVaM1JvT3lCdElEd2dlRHNnYlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0JrVzIxZExDQm5JRDBnY2x0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZGlBaFBUMGdNQ0FtSmlBb2VtOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2huTENCaktTd2dWVzh1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobkxDQm9LU3dnVDI4dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaG5MQ0IxS1N3Z2J5QS9JQ2hMY2k1aFpHUlRZMkZzWldSV1pXTjBiM0lvZW04c0lIWXBMQ0JsY3k1aFpHUlRZMkZzWldSV1pXTjBiM0lvVlc4c0lIWXBMQ0IwY3k1aFpHUlRZMkZzWldSV1pXTjBiM0lvVDI4c0lIWXBLU0E2SUNoTGNpNWhaR1JUWTJGc1pXUldaV04wYjNJb2VtOHVjM1ZpS0cxdUtTd2dkaWtzSUdWekxtRmtaRk5qWVd4bFpGWmxZM1J2Y2loVmJ5NXpkV0lvWjI0cExDQjJLU3dnZEhNdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0U5dkxuTjFZaWg0Ymlrc0lIWXBLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUcxdUxtRmtaQ2hMY2lrc0lHZHVMbUZrWkNobGN5a3NJSGh1TG1Ga1pDaDBjeWs3Q2lBZ0lDQjlDaUFnSUNCekxtbHpVMnRwYm01bFpFMWxjMmdnSmlZZ0tITXVZbTl1WlZSeVlXNXpabTl5YlNoakxDQnRiaWtzSUhNdVltOXVaVlJ5WVc1elptOXliU2hvTENCbmJpa3NJSE11WW05dVpWUnlZVzV6Wm05eWJTaDFMQ0I0YmlrcE93b2dJQ0FnYkdWMElHWWdQU0JvWmloekxDQmxMQ0IwTENCdUxDQnRiaXdnWjI0c0lIaHVMQ0JJYnlrN0NpQWdJQ0JwWmlBb1ppa2dld29nSUNBZ0lDQWdJR0VnSmlZZ0tHNXpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWVN3Z1l5a3NJR2x6TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dhQ2tzSUhKekxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnZFNrc0lHWXVkWFlnUFNCdWRDNW5aWFJWVmloSWJ5d2diVzRzSUdkdUxDQjRiaXdnYm5Nc0lHbHpMQ0J5Y3l3Z2JtVjNJRmdwS1N3Z2JDQW1KaUFvYm5NdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHNMQ0JqS1N3Z2FYTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hzTENCb0tTd2djbk11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoc0xDQjFLU3dnWmk1MWRqSWdQU0J1ZEM1blpYUlZWaWhJYnl3Z2JXNHNJR2R1TENCNGJpd2dibk1zSUdsekxDQnljeXdnYm1WM0lGZ3BLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1lUb2dZeXdLSUNBZ0lDQWdJQ0FnSUNBZ1lqb2dhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1l6b2dkU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtOXliV0ZzT2lCdVpYY2dUU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBaWEpwWVd4SmJtUmxlRG9nTUFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2JuUXVaMlYwVG05eWJXRnNLRzF1TENCbmJpd2dlRzRzSUcwdWJtOXliV0ZzS1N3Z1ppNW1ZV05sSUQwZ2JUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQm1Pd3A5Q25aaGNpQjNiaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdYMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBeExDQnVJRDBnTVN3Z2FTQTlJREVzSUhJZ1BTQXhMQ0J2SUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUW05NFIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9PaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUZObFoyMWxiblJ6T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUlRaV2R0Wlc1MGN6b2djaXdLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hUWldkdFpXNTBjem9nYndvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMGFHbHpPd29nSUNBZ0lDQWdJR2tnUFNCTllYUm9MbVpzYjI5eUtHa3BMQ0J5SUQwZ1RXRjBhQzVtYkc5dmNpaHlLU3dnYnlBOUlFMWhkR2d1Wm14dmIzSW9ieWs3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JiWFN3Z1l5QTlJRnRkTENCb0lEMGdXMTBzSUhVZ1BTQmJYU3dnWkNBOUlEQXNJR1lnUFNBd093b2dJQ0FnSUNBZ0lHMG9Jbm9pTENBaWVTSXNJQ0o0SWl3Z0xURXNJQzB4TENCdUxDQjBMQ0JsTENCdkxDQnlMQ0F3S1N3Z2JTZ2llaUlzSUNKNUlpd2dJbmdpTENBeExDQXRNU3dnYml3Z2RDd2dMV1VzSUc4c0lISXNJREVwTENCdEtDSjRJaXdnSW5vaUxDQWllU0lzSURFc0lERXNJR1VzSUc0c0lIUXNJR2tzSUc4c0lESXBMQ0J0S0NKNElpd2dJbm9pTENBaWVTSXNJREVzSUMweExDQmxMQ0J1TENBdGRDd2dhU3dnYnl3Z015a3NJRzBvSW5naUxDQWllU0lzSUNKNklpd2dNU3dnTFRFc0lHVXNJSFFzSUc0c0lHa3NJSElzSURRcExDQnRLQ0o0SWl3Z0lua2lMQ0FpZWlJc0lDMHhMQ0F0TVN3Z1pTd2dkQ3dnTFc0c0lHa3NJSElzSURVcExDQjBhR2x6TG5ObGRFbHVaR1Y0S0d3cExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9ZeXdnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtHZ3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lHUmxLSFVzSURJcEtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnRLSGdzSUhZc0lHY3NJSEFzSUY4c0lIa3NJR0lzSUVFc0lFd3NJRWtzSUdzcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFSWdQU0I1SUM4Z1RDd2dVQ0E5SUdJZ0x5QkpMQ0IzSUQwZ2VTQXZJRElzSUVVZ1BTQmlJQzhnTWl3Z1JDQTlJRUVnTHlBeUxDQlZJRDBnVENBcklERXNJRVlnUFNCSklDc2dNU3dnVHlBOUlEQXNJRzVsSUQwZ01Dd2dZMlVnUFNCdVpYY2dUVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCV0lEMGdNRHNnVmlBOElFWTdJRllyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWeUE5SUZZZ0tpQlFJQzBnUlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYUdVZ1BTQXdPeUJvWlNBOElGVTdJR2hsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc1pTQTlJR2hsSUNvZ1FpQXRJSGM3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyVmJlRjBnUFNCc1pTQXFJSEFzSUdObFczWmRJRDBnVnlBcUlGOHNJR05sVzJkZElEMGdSQ3dnWXk1d2RYTm9LR05sTG5nc0lHTmxMbmtzSUdObExub3BMQ0JqWlZ0NFhTQTlJREFzSUdObFczWmRJRDBnTUN3Z1kyVmJaMTBnUFNCQklENGdNQ0EvSURFZ09pQXRNU3dnYUM1d2RYTm9LR05sTG5nc0lHTmxMbmtzSUdObExub3BMQ0IxTG5CMWMyZ29hR1VnTHlCTUtTd2dkUzV3ZFhOb0tERWdMU0JXSUM4Z1NTa3NJRThnS3owZ01Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGWWdQU0F3T3lCV0lEd2dTVHNnVmlzcktXWnZjaWhzWlhRZ1Z5QTlJREE3SUZjZ1BDQk1PeUJYS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2hsSUQwZ1pDQXJJRmNnS3lCVklDb2dWaXdnYkdVZ1BTQmtJQ3NnVnlBcklGVWdLaUFvVmlBcklERXBMQ0JtWlNBOUlHUWdLeUFvVnlBcklERXBJQ3NnVlNBcUlDaFdJQ3NnTVNrc0lFSmxJRDBnWkNBcklDaFhJQ3NnTVNrZ0t5QlZJQ29nVmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd3dWNIVnphQ2hvWlN3Z2JHVXNJRUpsS1N3Z2JDNXdkWE5vS0d4bExDQm1aU3dnUW1VcExDQnVaU0FyUFNBMk93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXVZV1JrUjNKdmRYQW9aaXdnYm1Vc0lHc3BMQ0JtSUNzOUlHNWxMQ0JrSUNzOUlFODdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIZHVLR1V1ZDJsa2RHZ3NJR1V1YUdWcFoyaDBMQ0JsTG1SbGNIUm9MQ0JsTG5kcFpIUm9VMlZuYldWdWRITXNJR1V1YUdWcFoyaDBVMlZuYldWdWRITXNJR1V1WkdWd2RHaFRaV2R0Wlc1MGN5azdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJRkpwS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnZTMwN0NpQWdJQ0JtYjNJb2JHVjBJSFFnYVc0Z2N5bDdDaUFnSUNBZ0lDQWdaVnQwWFNBOUlIdDlPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUJwYmlCelczUmRLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCelczUmRXMjVkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBJQ1ltSUNocExtbHpRMjlzYjNJZ2ZId2dhUzVwYzAxaGRISnBlRE1nZkh3Z2FTNXBjMDFoZEhKcGVEUWdmSHdnYVM1cGMxWmxZM1J2Y2pJZ2ZId2dhUzVwYzFabFkzUnZjak1nZkh3Z2FTNXBjMVpsWTNSdmNqUWdmSHdnYVM1cGMxUmxlSFIxY21VZ2ZId2dhUzVwYzFGMVlYUmxjbTVwYjI0cElEOGdaVnQwWFZ0dVhTQTlJR2t1WTJ4dmJtVW9LU0E2SUVGeWNtRjVMbWx6UVhKeVlYa29hU2tnUHlCbFczUmRXMjVkSUQwZ2FTNXpiR2xqWlNncElEb2daVnQwWFZ0dVhTQTlJR2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUdVN0NuMEtablZ1WTNScGIyNGdlWFFvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0I3ZlRzS0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBN0lIUWdQQ0J6TG14bGJtZDBhRHNnZENzcktYc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlGSnBLSE5iZEYwcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQnBiaUJ1S1dWYmFWMGdQU0J1VzJsZE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlHVTdDbjBLZG1GeUlIVm1JRDBnZXdvZ0lDQWdZMnh2Ym1VNklGSnBMQW9nSUNBZ2JXVnlaMlU2SUhsMENuMHNJR1JtSUQwZ1lIWnZhV1FnYldGcGJpZ3BJSHNLQ1dkc1gxQnZjMmwwYVc5dUlEMGdjSEp2YW1WamRHbHZiazFoZEhKcGVDQXFJRzF2WkdWc1ZtbGxkMDFoZEhKcGVDQXFJSFpsWXpRb0lIQnZjMmwwYVc5dUxDQXhMakFnS1RzS2ZXQXNJR1ptSUQwZ1lIWnZhV1FnYldGcGJpZ3BJSHNLQ1dkc1gwWnlZV2REYjJ4dmNpQTlJSFpsWXpRb0lERXVNQ3dnTUM0d0xDQXdMakFzSURFdU1DQXBPd3A5WUN3Z2MyNGdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsTm9ZV1JsY2sxaGRHVnlhV0ZzSWl3Z2RHaHBjeTVrWldacGJtVnpJRDBnZTMwc0lIUm9hWE11ZFc1cFptOXliWE1nUFNCN2ZTd2dkR2hwY3k1MlpYSjBaWGhUYUdGa1pYSWdQU0JrWml3Z2RHaHBjeTVtY21GbmJXVnVkRk5vWVdSbGNpQTlJR1ptTENCMGFHbHpMbXhwYm1WM2FXUjBhQ0E5SURFc0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ0lURXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdNU3dnZEdocGN5NW1iMmNnUFNBaE1Td2dkR2hwY3k1c2FXZG9kSE1nUFNBaE1Td2dkR2hwY3k1amJHbHdjR2x1WnlBOUlDRXhMQ0IwYUdsekxtVjRkR1Z1YzJsdmJuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjbWwyWVhScGRtVnpPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdabkpoWjBSbGNIUm9PaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdaSEpoZDBKMVptWmxjbk02SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGa1pYSlVaWGgwZFhKbFRFOUVPaUFoTVFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WkdWbVlYVnNkRUYwZEhKcFluVjBaVlpoYkhWbGN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Rb2dJQ0FnSUNBZ0lDQWdJQ0JkTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFkam9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RYWXlPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUFvZ0lDQWdJQ0FnSUNBZ0lDQmRDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXBibVJsZURCQmRIUnlhV0oxZEdWT1lXMWxJRDBnZG05cFpDQXdMQ0IwYUdsekxuVnVhV1p2Y20xelRtVmxaRlZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMbWRzYzJ4V1pYSnphVzl1SUQwZ2JuVnNiQ3dnWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hsTG1GMGRISnBZblYwWlhNZ0lUMDlJSFp2YVdRZ01DQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1VGFHRmtaWEpOWVhSbGNtbGhiRG9nWVhSMGNtbGlkWFJsY3lCemFHOTFiR1FnYm05M0lHSmxJR1JsWm1sdVpXUWdhVzRnVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1elpYUldZV3gxWlhNb1pTa3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11Wm5KaFoyMWxiblJUYUdGa1pYSWdQU0JsTG1aeVlXZHRaVzUwVTJoaFpHVnlMQ0IwYUdsekxuWmxjblJsZUZOb1lXUmxjaUE5SUdVdWRtVnlkR1Y0VTJoaFpHVnlMQ0IwYUdsekxuVnVhV1p2Y20xeklEMGdVbWtvWlM1MWJtbG1iM0p0Y3lrc0lIUm9hWE11WkdWbWFXNWxjeUE5SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdVdVpHVm1hVzVsY3lrc0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ1pTNTNhWEpsWm5KaGJXVXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dzSUhSb2FYTXViR2xuYUhSeklEMGdaUzVzYVdkb2RITXNJSFJvYVhNdVkyeHBjSEJwYm1jZ1BTQmxMbU5zYVhCd2FXNW5MQ0IwYUdsekxtVjRkR1Z1YzJsdmJuTWdQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG1WNGRHVnVjMmx2Ym5NcExDQjBhR2x6TG1kc2MyeFdaWEp6YVc5dUlEMGdaUzVuYkhOc1ZtVnljMmx2Yml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCemRYQmxjaTUwYjBwVFQwNG9aU2s3Q2lBZ0lDQWdJQ0FnZEM1bmJITnNWbVZ5YzJsdmJpQTlJSFJvYVhNdVoyeHpiRlpsY25OcGIyNHNJSFF1ZFc1cFptOXliWE1nUFNCN2ZUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dhVzRnZEdocGN5NTFibWxtYjNKdGN5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnZEdocGN5NTFibWxtYjNKdGMxdHBYUzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYnlBbUppQnZMbWx6VkdWNGRIVnlaU0EvSUhRdWRXNXBabTl5YlhOYmFWMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlkQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dieTUwYjBwVFQwNG9aU2t1ZFhWcFpBb2dJQ0FnSUNBZ0lDQWdJQ0I5SURvZ2J5QW1KaUJ2TG1selEyOXNiM0lnUHlCMExuVnVhV1p2Y20xelcybGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbU1pTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzh1WjJWMFNHVjRLQ2tLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQTZJRzhnSmlZZ2J5NXBjMVpsWTNSdmNqSWdQeUIwTG5WdWFXWnZjbTF6VzJsZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0luWXlJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnZMblJ2UVhKeVlYa29LUW9nSUNBZ0lDQWdJQ0FnSUNCOUlEb2dieUFtSmlCdkxtbHpWbVZqZEc5eU15QS9JSFF1ZFc1cFptOXliWE5iYVYwZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaWRqTWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHOHVkRzlCY25KaGVTZ3BDaUFnSUNBZ0lDQWdJQ0FnSUgwZ09pQnZJQ1ltSUc4dWFYTldaV04wYjNJMElEOGdkQzUxYm1sbWIzSnRjMXRwWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKMk5DSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2J5NTBiMEZ5Y21GNUtDa0tJQ0FnSUNBZ0lDQWdJQ0FnZlNBNklHOGdKaVlnYnk1cGMwMWhkSEpwZURNZ1B5QjBMblZ1YVdadmNtMXpXMmxkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW0weklpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdkxuUnZRWEp5WVhrb0tRb2dJQ0FnSUNBZ0lDQWdJQ0I5SURvZ2J5QW1KaUJ2TG1selRXRjBjbWw0TkNBL0lIUXVkVzVwWm05eWJYTmJhVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpYlRRaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc4dWRHOUJjbkpoZVNncENpQWdJQ0FnSUNBZ0lDQWdJSDBnT2lCMExuVnVhV1p2Y20xelcybGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzhLSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdUMkpxWldOMExtdGxlWE1vZEdocGN5NWtaV1pwYm1WektTNXNaVzVuZEdnZ1BpQXdJQ1ltSUNoMExtUmxabWx1WlhNZ1BTQjBhR2x6TG1SbFptbHVaWE1wTENCMExuWmxjblJsZUZOb1lXUmxjaUE5SUhSb2FYTXVkbVZ5ZEdWNFUyaGhaR1Z5TENCMExtWnlZV2R0Wlc1MFUyaGhaR1Z5SUQwZ2RHaHBjeTVtY21GbmJXVnVkRk5vWVdSbGNqc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIdDlPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0JwYmlCMGFHbHpMbVY0ZEdWdWMybHZibk1wZEdocGN5NWxlSFJsYm5OcGIyNXpXMmxkSUQwOVBTQWhNQ0FtSmlBb2JsdHBYU0E5SUNFd0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1QySnFaV04wTG10bGVYTW9iaWt1YkdWdVozUm9JRDRnTUNBbUppQW9kQzVsZUhSbGJuTnBiMjV6SUQwZ2Jpa3NJSFE3Q2lBZ0lDQjlDbjA3Q25OdUxuQnliM1J2ZEhsd1pTNXBjMU5vWVdSbGNrMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQkpjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkRZVzFsY21FaUxDQjBhR2x6TG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlNBOUlHNWxkeUJ3WlN3Z2RHaHBjeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRJRDBnYm1WM0lIQmxMQ0IwYUdsekxuQnliMnBsWTNScGIyNU5ZWFJ5YVhoSmJuWmxjbk5sSUQwZ2JtVjNJSEJsT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU3dnZENrc0lIUm9hWE11YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sTG1OdmNIa29aUzV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlVwTENCMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3VZMjl3ZVNobExuQnliMnBsWTNScGIyNU5ZWFJ5YVhncExDQjBhR2x6TG5CeWIycGxZM1JwYjI1TllYUnlhWGhKYm5abGNuTmxMbU52Y0hrb1pTNXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUlhiM0pzWkVScGNtVmpkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Dd2dJVEVwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXRZWFJ5YVhoWGIzSnNaQzVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV6WlhRb0xYUmJPRjBzSUMxMFd6bGRMQ0F0ZEZzeE1GMHBMbTV2Y20xaGJHbDZaU2dwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxuVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTNWpiM0I1S0hSb2FYTXViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMblZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLR1VzSUhRcExDQjBhR2x6TG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlM1amIzQjVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS2ZUc0tTWEl1Y0hKdmRHOTBlWEJsTG1selEyRnRaWEpoSUQwZ0lUQTdDblpoY2lCMWRDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1NYSWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURVd0xDQjBJRDBnTVN3Z2JpQTlJQzR4TENCcElEMGdNbVV6S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlFaWEp6Y0dWamRHbDJaVU5oYldWeVlTSXNJSFJvYVhNdVptOTJJRDBnWlN3Z2RHaHBjeTU2YjI5dElEMGdNU3dnZEdocGN5NXVaV0Z5SUQwZ2Jpd2dkR2hwY3k1bVlYSWdQU0JwTENCMGFHbHpMbVp2WTNWeklEMGdNVEFzSUhSb2FYTXVZWE53WldOMElEMGdkQ3dnZEdocGN5NTJhV1YzSUQwZ2JuVnNiQ3dnZEdocGN5NW1hV3h0UjJGMVoyVWdQU0F6TlN3Z2RHaHBjeTVtYVd4dFQyWm1jMlYwSUQwZ01Dd2dkR2hwY3k1MWNHUmhkR1ZRY205cVpXTjBhVzl1VFdGMGNtbDRLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxMQ0IwS1N3Z2RHaHBjeTVtYjNZZ1BTQmxMbVp2ZGl3Z2RHaHBjeTU2YjI5dElEMGdaUzU2YjI5dExDQjBhR2x6TG01bFlYSWdQU0JsTG01bFlYSXNJSFJvYVhNdVptRnlJRDBnWlM1bVlYSXNJSFJvYVhNdVptOWpkWE1nUFNCbExtWnZZM1Z6TENCMGFHbHpMbUZ6Y0dWamRDQTlJR1V1WVhOd1pXTjBMQ0IwYUdsekxuWnBaWGNnUFNCbExuWnBaWGNnUFQwOUlHNTFiR3dnUHlCdWRXeHNJRG9nVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWlM1MmFXVjNLU3dnZEdocGN5NW1hV3h0UjJGMVoyVWdQU0JsTG1acGJHMUhZWFZuWlN3Z2RHaHBjeTVtYVd4dFQyWm1jMlYwSUQwZ1pTNW1hV3h0VDJabWMyVjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm05allXeE1aVzVuZEdnb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdMalVnS2lCMGFHbHpMbWRsZEVacGJHMUlaV2xuYUhRb0tTQXZJR1U3Q2lBZ0lDQWdJQ0FnZEdocGN5NW1iM1lnUFNCa2NpQXFJRElnS2lCTllYUm9MbUYwWVc0b2RDa3NJSFJvYVhNdWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBSbTlqWVd4TVpXNW5kR2dvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCTllYUm9MblJoYmloWGJpQXFJQzQxSUNvZ2RHaHBjeTVtYjNZcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBdU5TQXFJSFJvYVhNdVoyVjBSbWxzYlVobGFXZG9kQ2dwSUM4Z1pUc0tJQ0FnSUgwS0lDQWdJR2RsZEVWbVptVmpkR2wyWlVaUFZpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaSElnS2lBeUlDb2dUV0YwYUM1aGRHRnVLRTFoZEdndWRHRnVLRmR1SUNvZ0xqVWdLaUIwYUdsekxtWnZkaWtnTHlCMGFHbHpMbnB2YjIwcE93b2dJQ0FnZlFvZ0lDQWdaMlYwUm1sc2JWZHBaSFJvS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVpwYkcxSFlYVm5aU0FxSUUxaGRHZ3ViV2x1S0hSb2FYTXVZWE53WldOMExDQXhLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFWnBiRzFJWldsbmFIUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVptbHNiVWRoZFdkbElDOGdUV0YwYUM1dFlYZ29kR2hwY3k1aGMzQmxZM1FzSURFcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVm1sbGQwOW1abk5sZENobExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVoYzNCbFkzUWdQU0JsSUM4Z2RDd2dkR2hwY3k1MmFXVjNJRDA5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMblpwWlhjZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWdVlXSnNaV1E2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JtZFd4c1YybGtkR2c2SURFc0NpQWdJQ0FnSUNBZ0lDQWdJR1oxYkd4SVpXbG5hSFE2SURFc0NpQWdJQ0FnSUNBZ0lDQWdJRzltWm5ObGRGZzZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOW1abk5sZEZrNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERUtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NTJhV1YzTG1WdVlXSnNaV1FnUFNBaE1Dd2dkR2hwY3k1MmFXVjNMbVoxYkd4WGFXUjBhQ0E5SUdVc0lIUm9hWE11ZG1sbGR5NW1kV3hzU0dWcFoyaDBJRDBnZEN3Z2RHaHBjeTUyYVdWM0xtOW1abk5sZEZnZ1BTQnVMQ0IwYUdsekxuWnBaWGN1YjJabWMyVjBXU0E5SUdrc0lIUm9hWE11ZG1sbGR5NTNhV1IwYUNBOUlISXNJSFJvYVhNdWRtbGxkeTVvWldsbmFIUWdQU0J2TENCMGFHbHpMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUc0tJQ0FnSUgwS0lDQWdJR05zWldGeVZtbGxkMDltWm5ObGRDZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuWnBaWGNnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11ZG1sbGR5NWxibUZpYkdWa0lEMGdJVEVwTENCMGFHbHpMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG01bFlYSXNJSFFnUFNCbElDb2dUV0YwYUM1MFlXNG9WMjRnS2lBdU5TQXFJSFJvYVhNdVptOTJLU0F2SUhSb2FYTXVlbTl2YlN3Z2JpQTlJRElnS2lCMExDQnBJRDBnZEdocGN5NWhjM0JsWTNRZ0tpQnVMQ0J5SUQwZ0xTNDFJQ29nYVN3Z2J5QTlJSFJvYVhNdWRtbGxkenNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTUyYVdWM0lDRTlQU0J1ZFd4c0lDWW1JSFJvYVhNdWRtbGxkeTVsYm1GaWJHVmtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2J5NW1kV3hzVjJsa2RHZ3NJR01nUFNCdkxtWjFiR3hJWldsbmFIUTdDaUFnSUNBZ0lDQWdJQ0FnSUhJZ0t6MGdieTV2Wm1aelpYUllJQ29nYVNBdklHd3NJSFFnTFQwZ2J5NXZabVp6WlhSWklDb2diaUF2SUdNc0lHa2dLajBnYnk1M2FXUjBhQ0F2SUd3c0lHNGdLajBnYnk1b1pXbG5hSFFnTHlCak93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUm9hWE11Wm1sc2JVOW1abk5sZERzS0lDQWdJQ0FnSUNCaElDRTlQU0F3SUNZbUlDaHlJQ3M5SUdVZ0tpQmhJQzhnZEdocGN5NW5aWFJHYVd4dFYybGtkR2dvS1Nrc0lIUm9hWE11Y0hKdmFtVmpkR2x2YmsxaGRISnBlQzV0WVd0bFVHVnljM0JsWTNScGRtVW9jaXdnY2lBcklHa3NJSFFzSUhRZ0xTQnVMQ0JsTENCMGFHbHpMbVpoY2lrc0lIUm9hWE11Y0hKdmFtVmpkR2x2YmsxaGRISnBlRWx1ZG1WeWMyVXVZMjl3ZVNoMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BMbWx1ZG1WeWRDZ3BPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhOMWNHVnlMblJ2U2xOUFRpaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzV2WW1wbFkzUXVabTkySUQwZ2RHaHBjeTVtYjNZc0lIUXViMkpxWldOMExucHZiMjBnUFNCMGFHbHpMbnB2YjIwc0lIUXViMkpxWldOMExtNWxZWElnUFNCMGFHbHpMbTVsWVhJc0lIUXViMkpxWldOMExtWmhjaUE5SUhSb2FYTXVabUZ5TENCMExtOWlhbVZqZEM1bWIyTjFjeUE5SUhSb2FYTXVabTlqZFhNc0lIUXViMkpxWldOMExtRnpjR1ZqZENBOUlIUm9hWE11WVhOd1pXTjBMQ0IwYUdsekxuWnBaWGNnSVQwOUlHNTFiR3dnSmlZZ0tIUXViMkpxWldOMExuWnBaWGNnUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCMGFHbHpMblpwWlhjcEtTd2dkQzV2WW1wbFkzUXVabWxzYlVkaGRXZGxJRDBnZEdocGN5NW1hV3h0UjJGMVoyVXNJSFF1YjJKcVpXTjBMbVpwYkcxUFptWnpaWFFnUFNCMGFHbHpMbVpwYkcxUFptWnpaWFFzSUhRN0NpQWdJQ0I5Q24wN0NuVjBMbkJ5YjNSdmRIbHdaUzVwYzFCbGNuTndaV04wYVhabFEyRnRaWEpoSUQwZ0lUQTdDblpoY2lCMWFTQTlJRGt3TENCa2FTQTlJREVzSUNSeklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxuUjVjR1VnUFNBaVEzVmlaVU5oYldWeVlTSXNJRzR1YVhOWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUWdJVDA5SUNFd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrTjFZbVZEWVcxbGNtRTZJRlJvWlNCamIyNXpkSEoxWTNSdmNpQnViM2NnWlhod1pXTjBjeUJoYmlCcGJuTjBZVzVqWlNCdlppQlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFnWVhNZ2RHaHBjbVFnY0dGeVlXMWxkR1Z5TGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdWNtVnVaR1Z5VkdGeVoyVjBJRDBnYmpzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc1bGR5QjFkQ2gxYVN3Z1pHa3NJR1VzSUhRcE93b2dJQ0FnSUNBZ0lHa3ViR0Y1WlhKeklEMGdkR2hwY3k1c1lYbGxjbk1zSUdrdWRYQXVjMlYwS0RBc0lDMHhMQ0F3S1N3Z2FTNXNiMjlyUVhRb2JtVjNJRTBvTVN3Z01Dd2dNQ2twTENCMGFHbHpMbUZrWkNocEtUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNWxkeUIxZENoMWFTd2daR2tzSUdVc0lIUXBPd29nSUNBZ0lDQWdJSEl1YkdGNVpYSnpJRDBnZEdocGN5NXNZWGxsY25Nc0lISXVkWEF1YzJWMEtEQXNJQzB4TENBd0tTd2djaTVzYjI5clFYUW9ibVYzSUUwb0xURXNJREFzSURBcEtTd2dkR2hwY3k1aFpHUW9jaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0J1WlhjZ2RYUW9kV2tzSUdScExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCdkxteGhlV1Z5Y3lBOUlIUm9hWE11YkdGNVpYSnpMQ0J2TG5Wd0xuTmxkQ2d3TENBd0xDQXhLU3dnYnk1c2IyOXJRWFFvYm1WM0lFMG9NQ3dnTVN3Z01Da3BMQ0IwYUdsekxtRmtaQ2h2S1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc1bGR5QjFkQ2gxYVN3Z1pHa3NJR1VzSUhRcE93b2dJQ0FnSUNBZ0lHRXViR0Y1WlhKeklEMGdkR2hwY3k1c1lYbGxjbk1zSUdFdWRYQXVjMlYwS0RBc0lEQXNJQzB4S1N3Z1lTNXNiMjlyUVhRb2JtVjNJRTBvTUN3Z0xURXNJREFwS1N3Z2RHaHBjeTVoWkdRb1lTazdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQnVaWGNnZFhRb2RXa3NJR1JwTENCbExDQjBLVHNLSUNBZ0lDQWdJQ0JzTG14aGVXVnljeUE5SUhSb2FYTXViR0Y1WlhKekxDQnNMblZ3TG5ObGRDZ3dMQ0F0TVN3Z01Da3NJR3d1Ykc5dmEwRjBLRzVsZHlCTktEQXNJREFzSURFcEtTd2dkR2hwY3k1aFpHUW9iQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0J1WlhjZ2RYUW9kV2tzSUdScExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCakxteGhlV1Z5Y3lBOUlIUm9hWE11YkdGNVpYSnpMQ0JqTG5Wd0xuTmxkQ2d3TENBdE1Td2dNQ2tzSUdNdWJHOXZhMEYwS0c1bGR5Qk5LREFzSURBc0lDMHhLU2tzSUhSb2FYTXVZV1JrS0dNcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkJoY21WdWRDQTlQVDBnYm5Wc2JDQW1KaUIwYUdsekxuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG5KbGJtUmxjbFJoY21kbGRDd2dXMmtzSUhJc0lHOHNJR0VzSUd3c0lHTmRJRDBnZEdocGN5NWphR2xzWkhKbGJpd2dhQ0E5SUdVdWVISXVaVzVoWW14bFpDd2dkU0E5SUdVdVoyVjBVbVZ1WkdWeVZHRnlaMlYwS0NrN0NpQWdJQ0FnSUNBZ1pTNTRjaTVsYm1GaWJHVmtJRDBnSVRFN0NpQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCdUxuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6T3dvZ0lDQWdJQ0FnSUc0dWRHVjRkSFZ5WlM1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Td2daUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9iaXdnTUNrc0lHVXVjbVZ1WkdWeUtIUXNJR2twTENCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENodUxDQXhLU3dnWlM1eVpXNWtaWElvZEN3Z2Npa3NJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRzRzSURJcExDQmxMbkpsYm1SbGNpaDBMQ0J2S1N3Z1pTNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2Jpd2dNeWtzSUdVdWNtVnVaR1Z5S0hRc0lHRXBMQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2h1TENBMEtTd2daUzV5Wlc1a1pYSW9kQ3dnYkNrc0lHNHVkR1Y0ZEhWeVpTNW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQmtMQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2h1TENBMUtTd2daUzV5Wlc1a1pYSW9kQ3dnWXlrc0lHVXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIVXBMQ0JsTG5oeUxtVnVZV0pzWldRZ1BTQm9Pd29nSUNBZ2ZRcDlMQ0JyYVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYjNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXl3Z2FDbDdDaUFnSUNBZ0lDQWdaU0E5SUdVZ0lUMDlJSFp2YVdRZ01DQS9JR1VnT2lCYlhTd2dkQ0E5SUhRZ0lUMDlJSFp2YVdRZ01DQS9JSFFnT2lCQ2FUc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaExDQnNMQ0JqTENCb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1ac2FYQlpJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnYVcxaFoyVnpLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHRZV2RsT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJR2x0WVdkbGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBiV0ZuWlNBOUlHVTdDaUFnSUNCOUNuMDdDbXRwTG5CeWIzUnZkSGx3WlM1cGMwTjFZbVZVWlhoMGRYSmxJRDBnSVRBN0NuWmhjaUJxY3lBOUlHTnNZWE56SUdWNGRHVnVaSE1nUVhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ1RuVnRZbVZ5TG1selNXNTBaV2RsY2loMEtTQW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUTZJR052Ym5OMGNuVmpkRzl5SUhOcFoyNWhkSFZ5WlNCcGN5QnViM2NnVjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMEtDQnphWHBsTENCdmNIUnBiMjV6SUNraUtTd2dkQ0E5SUc0cE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhRZ1BTQjBJSHg4SUh0OUxDQjBhR2x6TG5SbGVIUjFjbVVnUFNCdVpYY2dhMmtvZG05cFpDQXdMQ0IwTG0xaGNIQnBibWNzSUhRdWQzSmhjRk1zSUhRdWQzSmhjRlFzSUhRdWJXRm5SbWxzZEdWeUxDQjBMbTFwYmtacGJIUmxjaXdnZEM1bWIzSnRZWFFzSUhRdWRIbHdaU3dnZEM1aGJtbHpiM1J5YjNCNUxDQjBMbVZ1WTI5a2FXNW5LU3dnZEdocGN5NTBaWGgwZFhKbExtbHpVbVZ1WkdWeVZHRnlaMlYwVkdWNGRIVnlaU0E5SUNFd0xDQjBhR2x6TG5SbGVIUjFjbVV1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnZEM1blpXNWxjbUYwWlUxcGNHMWhjSE1nSVQwOUlIWnZhV1FnTUNBL0lIUXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEb2dJVEVzSUhSb2FYTXVkR1Y0ZEhWeVpTNXRhVzVHYVd4MFpYSWdQU0IwTG0xcGJrWnBiSFJsY2lBaFBUMGdkbTlwWkNBd0lEOGdkQzV0YVc1R2FXeDBaWElnT2lCMGRDd2dkR2hwY3k1MFpYaDBkWEpsTGw5dVpXVmtjMFpzYVhCRmJuWk5ZWEFnUFNBaE1Uc0tJQ0FnSUgwS0lDQWdJR1p5YjIxRmNYVnBjbVZqZEdGdVozVnNZWEpVWlhoMGRYSmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SbGVIUjFjbVV1ZEhsd1pTQTlJSFF1ZEhsd1pTd2dkR2hwY3k1MFpYaDBkWEpsTG1admNtMWhkQ0E5SUdOMExDQjBhR2x6TG5SbGVIUjFjbVV1Wlc1amIyUnBibWNnUFNCMExtVnVZMjlrYVc1bkxDQjBhR2x6TG5SbGVIUjFjbVV1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnZEM1blpXNWxjbUYwWlUxcGNHMWhjSE1zSUhSb2FYTXVkR1Y0ZEhWeVpTNXRhVzVHYVd4MFpYSWdQU0IwTG0xcGJrWnBiSFJsY2l3Z2RHaHBjeTUwWlhoMGRYSmxMbTFoWjBacGJIUmxjaUE5SUhRdWJXRm5SbWxzZEdWeU93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEVWeGRXbHlaV04wT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQmdDZ29KQ1FrSmRtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pFUnBjbVZqZEdsdmJqc0tDZ2tKQ1FsMlpXTXpJSFJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnYVc0Z2RtVmpNeUJrYVhJc0lHbHVJRzFoZERRZ2JXRjBjbWw0SUNrZ2V3b0tDUWtKQ1FseVpYUjFjbTRnYm05eWJXRnNhWHBsS0NBb0lHMWhkSEpwZUNBcUlIWmxZelFvSUdScGNpd2dNQzR3SUNrZ0tTNTRlWG9nS1RzS0Nna0pDUWw5Q2dvSkNRa0pkbTlwWkNCdFlXbHVLQ2tnZXdvS0NRa0pDUWwyVjI5eWJHUkVhWEpsWTNScGIyNGdQU0IwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUhCdmMybDBhVzl1TENCdGIyUmxiRTFoZEhKcGVDQXBPd29LQ1FrSkNRa2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkNRa0pDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtDZ2tKQ1FsOUNna0pDV0FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCZ0Nnb0pDUWtKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnZEVWeGRXbHlaV04wT3dvS0NRa0pDWFpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JFYVhKbFkzUnBiMjQ3Q2dvSkNRa0pJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtDZ2tKQ1FsMmIybGtJRzFoYVc0b0tTQjdDZ29KQ1FrSkNYWmxZek1nWkdseVpXTjBhVzl1SUQwZ2JtOXliV0ZzYVhwbEtDQjJWMjl5YkdSRWFYSmxZM1JwYjI0Z0tUc0tDZ2tKQ1FrSmRtVmpNaUJ6WVcxd2JHVlZWaUE5SUdWeGRXbHlaV04wVlhZb0lHUnBjbVZqZEdsdmJpQXBPd29LQ1FrSkNRbG5iRjlHY21GblEyOXNiM0lnUFNCMFpYaDBkWEpsTWtRb0lIUkZjWFZwY21WamRDd2djMkZ0Y0d4bFZWWWdLVHNLQ2drSkNRbDlDZ2tKQ1dBS0lDQWdJQ0FnSUNCOUxDQnBJRDBnYm1WM0lIZHVLRFVzSURVc0lEVXBMQ0J5SUQwZ2JtVjNJSE51S0hzS0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0lrTjFZbVZ0WVhCR2NtOXRSWEYxYVhKbFkzUWlMQW9nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ1Vta29iaTUxYm1sbWIzSnRjeWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nYmk1MlpYSjBaWGhUYUdGa1pYSXNDaUFnSUNBZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJ1TG1aeVlXZHRaVzUwVTJoaFpHVnlMQW9nSUNBZ0lDQWdJQ0FnSUNCemFXUmxPaUJwZEN3S0lDQWdJQ0FnSUNBZ0lDQWdZbXhsYm1ScGJtYzZJSFp1Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2NpNTFibWxtYjNKdGN5NTBSWEYxYVhKbFkzUXVkbUZzZFdVZ1BTQjBPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdibVYzSUhOMEtHa3NJSElwTENCaElEMGdkQzV0YVc1R2FXeDBaWEk3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1YldsdVJtbHNkR1Z5SUQwOVBTQlZhU0FtSmlBb2RDNXRhVzVHYVd4MFpYSWdQU0IwZENrc0lHNWxkeUFrY3lneExDQXhNQ3dnZEdocGN5a3VkWEJrWVhSbEtHVXNJRzhwTENCMExtMXBia1pwYkhSbGNpQTlJR0VzSUc4dVoyVnZiV1YwY25rdVpHbHpjRzl6WlNncExDQnZMbTFoZEdWeWFXRnNMbVJwYzNCdmMyVW9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zWldGeUtHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJR1V1WjJWMFVtVnVaR1Z5VkdGeVoyVjBLQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUQwZ01Ec2dieUE4SURZN0lHOHJLeWxsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2gwYUdsekxDQnZLU3dnWlM1amJHVmhjaWgwTENCdUxDQnBLVHNLSUNBZ0lDQWdJQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2h5S1RzS0lDQWdJSDBLZlRzS2FuTXVjSEp2ZEc5MGVYQmxMbWx6VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMElEMGdJVEE3Q25aaGNpQnJieUE5SUc1bGR5Qk5MQ0J3WmlBOUlHNWxkeUJOTENCdFppQTlJRzVsZHlCc2RDd2dWM1FnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRTBvTVN3Z01Dd2dNQ2tzSUhRZ1BTQXdLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtNXZjbTFoYkNBOUlHVXNJSFJvYVhNdVkyOXVjM1JoYm5RZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd3dVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjI1emRHRnVkQ0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkRiMjF3YjI1bGJuUnpLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd3dWMyVjBLR1VzSUhRc0lHNHBMQ0IwYUdsekxtTnZibk4wWVc1MElEMGdhU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMU9iM0p0WVd4QmJtUkRiM0JzWVc1aGNsQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3d1WTI5d2VTaGxLU3dnZEdocGN5NWpiMjV6ZEdGdWRDQTlJQzEwTG1SdmRDaDBhR2x6TG01dmNtMWhiQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMjl3YkdGdVlYSlFiMmx1ZEhNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2EyOHVjM1ZpVm1WamRHOXljeWh1TENCMEtTNWpjbTl6Y3lod1ppNXpkV0pXWldOMGIzSnpLR1VzSUhRcEtTNXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUkdjbTl0VG05eWJXRnNRVzVrUTI5d2JHRnVZWEpRYjJsdWRDaHBMQ0JsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNXZjbTFoYkM1amIzQjVLR1V1Ym05eWJXRnNLU3dnZEdocGN5NWpiMjV6ZEdGdWRDQTlJR1V1WTI5dWMzUmhiblFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J1YjNKdFlXeHBlbVVvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBeElDOGdkR2hwY3k1dWIzSnRZV3d1YkdWdVozUm9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1VwTENCMGFHbHpMbU52Ym5OMFlXNTBJQ285SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdVpXZGhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl1YzNSaGJuUWdLajBnTFRFc0lIUm9hWE11Ym05eWJXRnNMbTVsWjJGMFpTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3d1Wkc5MEtHVXBJQ3NnZEdocGN5NWpiMjV6ZEdGdWREc0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxWRzlUY0dobGNtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUnBjM1JoYm1ObFZHOVFiMmx1ZENobExtTmxiblJsY2lrZ0xTQmxMbkpoWkdsMWN6c0tJQ0FnSUgwS0lDQWdJSEJ5YjJwbFkzUlFiMmx1ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1WTI5d2VTaDBhR2x6TG01dmNtMWhiQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9MWFJvYVhNdVpHbHpkR0Z1WTJWVWIxQnZhVzUwS0dVcEtTNWhaR1FvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUk1hVzVsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1WkdWc2RHRW9hMjhwTENCcElEMGdkR2hwY3k1dWIzSnRZV3d1Wkc5MEtHNHBPd29nSUNBZ0lDQWdJR2xtSUNocElEMDlQU0F3S1NCeVpYUjFjbTRnZEdocGN5NWthWE4wWVc1alpWUnZVRzlwYm5Rb1pTNXpkR0Z5ZENrZ1BUMDlJREFnUHlCMExtTnZjSGtvWlM1emRHRnlkQ2tnT2lCdWRXeHNPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdMU2hsTG5OMFlYSjBMbVJ2ZENoMGFHbHpMbTV2Y20xaGJDa2dLeUIwYUdsekxtTnZibk4wWVc1MEtTQXZJR2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSElnUENBd0lIeDhJSElnUGlBeElEOGdiblZzYkNBNklIUXVZMjl3ZVNodUtTNXRkV3gwYVhCc2VWTmpZV3hoY2loeUtTNWhaR1FvWlM1emRHRnlkQ2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelRHbHVaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaGxMbk4wWVhKMEtTd2diaUE5SUhSb2FYTXVaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHVXVaVzVrS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBOElEQWdKaVlnYmlBK0lEQWdmSHdnYmlBOElEQWdKaVlnZENBK0lEQTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVwYm5SbGNuTmxZM1J6VUd4aGJtVW9kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpVM0JvWlhKbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVwYm5SbGNuTmxZM1J6VUd4aGJtVW9kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0JzWVc1aGNsQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWpiM0I1S0hSb2FYTXVibTl5YldGc0tTNXRkV3gwYVhCc2VWTmpZV3hoY2lndGRHaHBjeTVqYjI1emRHRnVkQ2s3Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVTFoZEhKcGVEUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RDQjhmQ0J0Wmk1blpYUk9iM0p0WVd4TllYUnlhWGdvWlNrc0lHa2dQU0IwYUdsekxtTnZjR3hoYm1GeVVHOXBiblFvYTI4cExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z2NpQTlJSFJvYVhNdWJtOXliV0ZzTG1Gd2NHeDVUV0YwY21sNE15aHVLUzV1YjNKdFlXeHBlbVVvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiMjV6ZEdGdWRDQTlJQzFwTG1SdmRDaHlLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl1YzNSaGJuUWdMVDBnWlM1a2IzUW9kR2hwY3k1dWIzSnRZV3dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dWIzSnRZV3d1WlhGMVlXeHpLSFJvYVhNdWJtOXliV0ZzS1NBbUppQmxMbU52Ym5OMFlXNTBJRDA5UFNCMGFHbHpMbU52Ym5OMFlXNTBPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS2ZUc0tWM1F1Y0hKdmRHOTBlWEJsTG1selVHeGhibVVnUFNBaE1Ec0tkbUZ5SUdacElEMGdibVYzSUVGdUxDQmhjeUE5SUc1bGR5Qk5MQ0JFY2lBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnVjNRc0lIUWdQU0J1WlhjZ1YzUXNJRzRnUFNCdVpYY2dWM1FzSUdrZ1BTQnVaWGNnVjNRc0lISWdQU0J1WlhjZ1YzUXNJRzhnUFNCdVpYY2dWM1FwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjR3hoYm1WeklEMGdXd29nSUNBZ0lDQWdJQ0FnSUNCbExBb2dJQ0FnSUNBZ0lDQWdJQ0IwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCcExBb2dJQ0FnSUNBZ0lDQWdJQ0J5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnZDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TG5Cc1lXNWxjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZVnN3WFM1amIzQjVLR1VwTENCaFd6RmRMbU52Y0hrb2RDa3NJR0ZiTWwwdVkyOXdlU2h1S1N3Z1lWc3pYUzVqYjNCNUtHa3BMQ0JoV3pSZExtTnZjSGtvY2lrc0lHRmJOVjB1WTI5d2VTaHZLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1d2JHRnVaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURZN0lHNHJLeWwwVzI1ZExtTnZjSGtvWlM1d2JHRnVaWE5iYmwwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXdiR0Z1WlhNc0lHNGdQU0JsTG1Wc1pXMWxiblJ6TENCcElEMGdibHN3WFN3Z2NpQTlJRzViTVYwc0lHOGdQU0J1V3pKZExDQmhJRDBnYmxzelhTd2diQ0E5SUc1Yk5GMHNJR01nUFNCdVd6VmRMQ0JvSUQwZ2JsczJYU3dnZFNBOUlHNWJOMTBzSUdRZ1BTQnVXemhkTENCbUlEMGdibHM1WFN3Z2JTQTlJRzViTVRCZExDQjRJRDBnYmxzeE1WMHNJSFlnUFNCdVd6RXlYU3dnWnlBOUlHNWJNVE5kTENCd0lEMGdibHN4TkYwc0lGOGdQU0J1V3pFMVhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RGc3dYUzV6WlhSRGIyMXdiMjVsYm5SektHRWdMU0JwTENCMUlDMGdiQ3dnZUNBdElHUXNJRjhnTFNCMktTNXViM0p0WVd4cGVtVW9LU3dnZEZzeFhTNXpaWFJEYjIxd2IyNWxiblJ6S0dFZ0t5QnBMQ0IxSUNzZ2JDd2dlQ0FySUdRc0lGOGdLeUIyS1M1dWIzSnRZV3hwZW1Vb0tTd2dkRnN5WFM1elpYUkRiMjF3YjI1bGJuUnpLR0VnS3lCeUxDQjFJQ3NnWXl3Z2VDQXJJR1lzSUY4Z0t5Qm5LUzV1YjNKdFlXeHBlbVVvS1N3Z2RGc3pYUzV6WlhSRGIyMXdiMjVsYm5SektHRWdMU0J5TENCMUlDMGdZeXdnZUNBdElHWXNJRjhnTFNCbktTNXViM0p0WVd4cGVtVW9LU3dnZEZzMFhTNXpaWFJEYjIxd2IyNWxiblJ6S0dFZ0xTQnZMQ0IxSUMwZ2FDd2dlQ0F0SUcwc0lGOGdMU0J3S1M1dWIzSnRZV3hwZW1Vb0tTd2dkRnMxWFM1elpYUkRiMjF3YjI1bGJuUnpLR0VnS3lCdkxDQjFJQ3NnYUN3Z2VDQXJJRzBzSUY4Z0t5QndLUzV1YjNKdFlXeHBlbVVvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOUFltcGxZM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNW5aVzl0WlhSeWVUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNWliM1Z1WkdsdVoxTndhR1Z5WlNBOVBUMGdiblZzYkNBbUppQjBMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncExDQm1hUzVqYjNCNUtIUXVZbTkxYm1ScGJtZFRjR2hsY21VcExtRndjR3g1VFdGMGNtbDROQ2hsTG0xaGRISnBlRmR2Y214a0tTd2dkR2hwY3k1cGJuUmxjbk5sWTNSelUzQm9aWEpsS0dacEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5UY0hKcGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtYVM1alpXNTBaWEl1YzJWMEtEQXNJREFzSURBcExDQm1hUzV5WVdScGRYTWdQU0F1TnpBM01UQTJOemd4TVRnMk5UUTNOaXdnWm1rdVlYQndiSGxOWVhSeWFYZzBLR1V1YldGMGNtbDRWMjl5YkdRcExDQjBhR2x6TG1sdWRHVnljMlZqZEhOVGNHaGxjbVVvWm1rcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMU53YUdWeVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuQnNZVzVsY3l3Z2JpQTlJR1V1WTJWdWRHVnlMQ0JwSUQwZ0xXVXVjbUZrYVhWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ1BDQTJPeUJ5S3lzcGFXWWdLSFJiY2wwdVpHbHpkR0Z1WTJWVWIxQnZhVzUwS0c0cElEd2dhU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoTURzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITkNiM2dvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV3YkdGdVpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJRFk3SUc0ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEZ0dVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHRnpMbmdnUFNCcExtNXZjbTFoYkM1NElENGdNQ0EvSUdVdWJXRjRMbmdnT2lCbExtMXBiaTU0TENCaGN5NTVJRDBnYVM1dWIzSnRZV3d1ZVNBK0lEQWdQeUJsTG0xaGVDNTVJRG9nWlM1dGFXNHVlU3dnWVhNdWVpQTlJR2t1Ym05eWJXRnNMbm9nUGlBd0lEOGdaUzV0WVhndWVpQTZJR1V1YldsdUxub3NJR2t1WkdsemRHRnVZMlZVYjFCdmFXNTBLR0Z6S1NBOElEQXBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1kyOXVkR0ZwYm5OUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbkJzWVc1bGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEd2dOanNnYmlzcktXbG1JQ2gwVzI1ZExtUnBjM1JoYm1ObFZHOVFiMmx1ZENobEtTQThJREFwSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSVRBN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCeWFDZ3BJSHNLSUNBZ0lHeGxkQ0J6SUQwZ2JuVnNiQ3dnWlNBOUlDRXhMQ0IwSUQwZ2JuVnNiQ3dnYmlBOUlHNTFiR3c3Q2lBZ0lDQm1kVzVqZEdsdmJpQnBLSElzSUc4cElIc0tJQ0FnSUNBZ0lDQjBLSElzSUc4cExDQnVJRDBnY3k1eVpYRjFaWE4wUVc1cGJXRjBhVzl1Um5KaGJXVW9hU2s3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUhOMFlYSjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaU0FoUFQwZ0lUQWdKaVlnZENBaFBUMGdiblZzYkNBbUppQW9iaUE5SUhNdWNtVnhkV1Z6ZEVGdWFXMWhkR2x2YmtaeVlXMWxLR2twTENCbElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MzUnZjRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSE11WTJGdVkyVnNRVzVwYldGMGFXOXVSbkpoYldVb2Jpa3NJR1VnUFNBaE1Uc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZEVGdWFXMWhkR2x2Ymt4dmIzQTZJR1oxYm1OMGFXOXVLSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhJN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFJEYjI1MFpYaDBPaUJtZFc1amRHbHZiaWh5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSE1nUFNCeU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdaMllvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCbExtbHpWMlZpUjB3eUxDQnVJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0JtZFc1amRHbHZiaUJwS0dNc0lHZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR011WVhKeVlYa3NJR1FnUFNCakxuVnpZV2RsTENCbUlEMGdjeTVqY21WaGRHVkNkV1ptWlhJb0tUc0tJQ0FnSUNBZ0lDQnpMbUpwYm1SQ2RXWm1aWElvYUN3Z1ppa3NJSE11WW5WbVptVnlSR0YwWVNob0xDQjFMQ0JrS1N3Z1l5NXZibFZ3Ykc5aFpFTmhiR3hpWVdOcktDazdDaUFnSUNBZ0lDQWdiR1YwSUcwZ1BTQTFNVEkyT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIxSUdsdWMzUmhibU5sYjJZZ1JteHZZWFF6TWtGeWNtRjVJRDhnYlNBOUlEVXhNallnT2lCMUlHbHVjM1JoYm1ObGIyWWdSbXh2WVhRMk5FRnljbUY1SUQ4Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEVGMGRISnBZblYwWlhNNklGVnVjM1Z3Y0c5eWRHVmtJR1JoZEdFZ1luVm1abVZ5SUdadmNtMWhkRG9nUm14dllYUTJORUZ5Y21GNUxpSXBJRG9nZFNCcGJuTjBZVzVqWlc5bUlGVnBiblF4TmtGeWNtRjVJRDhnWXk1cGMwWnNiMkYwTVRaQ2RXWm1aWEpCZEhSeWFXSjFkR1VnUHlCMElEOGdiU0E5SURVeE16RWdPaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1RWFIwY21saWRYUmxjem9nVlhOaFoyVWdiMllnUm14dllYUXhOa0oxWm1abGNrRjBkSEpwWW5WMFpTQnlaWEYxYVhKbGN5QlhaV0pIVERJdUlpa2dPaUJ0SUQwZ05URXlNeUE2SUhVZ2FXNXpkR0Z1WTJWdlppQkpiblF4TmtGeWNtRjVJRDhnYlNBOUlEVXhNaklnT2lCMUlHbHVjM1JoYm1ObGIyWWdWV2x1ZERNeVFYSnlZWGtnUHlCdElEMGdOVEV5TlNBNklIVWdhVzV6ZEdGdVkyVnZaaUJKYm5Rek1rRnljbUY1SUQ4Z2JTQTlJRFV4TWpRZ09pQjFJR2x1YzNSaGJtTmxiMllnU1c1ME9FRnljbUY1SUQ4Z2JTQTlJRFV4TWpBZ09pQW9kU0JwYm5OMFlXNWpaVzltSUZWcGJuUTRRWEp5WVhrZ2ZId2dkU0JwYm5OMFlXNWpaVzltSUZWcGJuUTRRMnhoYlhCbFpFRnljbUY1S1NBbUppQW9iU0E5SURVeE1qRXBMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2pvZ1ppd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2diU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lubDBaWE5RWlhKRmJHVnRaVzUwT2lCMUxrSlpWRVZUWDFCRlVsOUZURVZOUlU1VUxBb2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUJqTG5abGNuTnBiMjRLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2NpaGpMQ0JvTENCMUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdRZ1BTQm9MbUZ5Y21GNUxDQm1JRDBnYUM1MWNHUmhkR1ZTWVc1blpUc0tJQ0FnSUNBZ0lDQnpMbUpwYm1SQ2RXWm1aWElvZFN3Z1l5a3NJR1l1WTI5MWJuUWdQVDA5SUMweElEOGdjeTVpZFdabVpYSlRkV0pFWVhSaEtIVXNJREFzSUdRcElEb2dLSFFnUHlCekxtSjFabVpsY2xOMVlrUmhkR0VvZFN3Z1ppNXZabVp6WlhRZ0tpQmtMa0paVkVWVFgxQkZVbDlGVEVWTlJVNVVMQ0JrTENCbUxtOW1abk5sZEN3Z1ppNWpiM1Z1ZENrZ09pQnpMbUoxWm1abGNsTjFZa1JoZEdFb2RTd2daaTV2Wm1aelpYUWdLaUJrTGtKWlZFVlRYMUJGVWw5RlRFVk5SVTVVTENCa0xuTjFZbUZ5Y21GNUtHWXViMlptYzJWMExDQm1MbTltWm5ObGRDQXJJR1l1WTI5MWJuUXBLU3dnWmk1amIzVnVkQ0E5SUMweEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzhvWXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCakxtbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVWdKaVlnS0dNZ1BTQmpMbVJoZEdFcExDQnVMbWRsZENoaktUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR0VvWXlrZ2V3b2dJQ0FnSUNBZ0lHTXVhWE5KYm5SbGNteGxZWFpsWkVKMVptWmxja0YwZEhKcFluVjBaU0FtSmlBb1l5QTlJR011WkdGMFlTazdDaUFnSUNBZ0lDQWdiR1YwSUdnZ1BTQnVMbWRsZENoaktUc0tJQ0FnSUNBZ0lDQm9JQ1ltSUNoekxtUmxiR1YwWlVKMVptWmxjaWhvTG1KMVptWmxjaWtzSUc0dVpHVnNaWFJsS0dNcEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR3dvWXl3Z2FDa2dld29nSUNBZ0lDQWdJR2xtSUNoakxtbHpSMHhDZFdabVpYSkJkSFJ5YVdKMWRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCdUxtZGxkQ2hqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdLQ0ZrSUh4OElHUXVkbVZ5YzJsdmJpQThJR011ZG1WeWMybHZiaWtnSmlZZ2JpNXpaWFFvWXl3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luVm1abVZ5T2lCakxtSjFabVpsY2l3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJR011ZEhsd1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSjVkR1Z6VUdWeVJXeGxiV1Z1ZERvZ1l5NWxiR1Z0Wlc1MFUybDZaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpsY25OcGIyNDZJR011ZG1WeWMybHZiZ29nSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JqTG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVZ0ppWWdLR01nUFNCakxtUmhkR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYmk1blpYUW9ZeWs3Q2lBZ0lDQWdJQ0FnZFNBOVBUMGdkbTlwWkNBd0lEOGdiaTV6WlhRb1l5d2dhU2hqTENCb0tTa2dPaUIxTG5abGNuTnBiMjRnUENCakxuWmxjbk5wYjI0Z0ppWWdLSElvZFM1aWRXWm1aWElzSUdNc0lHZ3BMQ0IxTG5abGNuTnBiMjRnUFNCakxuWmxjbk5wYjI0cE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFE2SUc4c0NpQWdJQ0FnSUNBZ2NtVnRiM1psT2lCaExBb2dJQ0FnSUNBZ0lIVndaR0YwWlRvZ2JBb2dJQ0FnZlRzS2ZRcDJZWElnVUdrZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNU3dnYmlBOUlERXNJR2tnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pRYkdGdVpVZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRk5sWjIxbGJuUnpPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhSVFpXZHRaVzUwY3pvZ2FRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQmxJQzhnTWl3Z2J5QTlJSFFnTHlBeUxDQmhJRDBnVFdGMGFDNW1iRzl2Y2lodUtTd2diQ0E5SUUxaGRHZ3VabXh2YjNJb2FTa3NJR01nUFNCaElDc2dNU3dnYUNBOUlHd2dLeUF4TENCMUlEMGdaU0F2SUdFc0lHUWdQU0IwSUM4Z2JDd2daaUE5SUZ0ZExDQnRJRDBnVzEwc0lIZ2dQU0JiWFN3Z2RpQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnlBOUlEQTdJR2NnUENCb095Qm5LeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0NBOUlHY2dLaUJrSUMwZ2J6c0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JmSUQwZ01Ec2dYeUE4SUdNN0lGOHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJRjhnS2lCMUlDMGdjanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzB1Y0hWemFDaDVMQ0F0Y0N3Z01Da3NJSGd1Y0hWemFDZ3dMQ0F3TENBeEtTd2dkaTV3ZFhOb0tGOGdMeUJoS1N3Z2RpNXdkWE5vS0RFZ0xTQm5JQzhnYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JuSUQwZ01Ec2daeUE4SUd3N0lHY3JLeWxtYjNJb2JHVjBJSEFnUFNBd095QndJRHdnWVRzZ2NDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjhnUFNCd0lDc2dZeUFxSUdjc0lIa2dQU0J3SUNzZ1l5QXFJQ2huSUNzZ01Ta3NJR0lnUFNCd0lDc2dNU0FySUdNZ0tpQW9aeUFySURFcExDQkJJRDBnY0NBcklERWdLeUJqSUNvZ1p6c0tJQ0FnSUNBZ0lDQWdJQ0FnWmk1d2RYTm9LRjhzSUhrc0lFRXBMQ0JtTG5CMWMyZ29lU3dnWWl3Z1FTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdWMyVjBTVzVrWlhnb1ppa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2h0TENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p1YjNKdFlXd2lMQ0J1WlhjZ1pHVW9lQ3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2daR1VvZGl3Z01pa3BPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lGQnBLR1V1ZDJsa2RHZ3NJR1V1YUdWcFoyaDBMQ0JsTG5kcFpIUm9VMlZuYldWdWRITXNJR1V1YUdWcFoyaDBVMlZuYldWdWRITXBPd29nSUNBZ2ZRcDlMQ0I0WmlBOUlHQWphV1prWldZZ1ZWTkZYMEZNVUVoQlRVRlFDZ2xrYVdabWRYTmxRMjlzYjNJdVlTQXFQU0IwWlhoMGRYSmxNa1FvSUdGc2NHaGhUV0Z3TENCMlZYWWdLUzVuT3dvalpXNWthV1pnTENCNVppQTlJR0FqYVdaa1pXWWdWVk5GWDBGTVVFaEJUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCaGJIQm9ZVTFoY0RzS0kyVnVaR2xtWUN3Z2RtWWdQU0JnSTJsbVpHVm1JRlZUUlY5QlRGQklRVlJGVTFRS0NXbG1JQ2dnWkdsbVpuVnpaVU52Ykc5eUxtRWdQQ0JoYkhCb1lWUmxjM1FnS1NCa2FYTmpZWEprT3dvalpXNWthV1pnTENCZlppQTlJR0FqYVdaa1pXWWdWVk5GWDBGTVVFaEJWRVZUVkFvSmRXNXBabTl5YlNCbWJHOWhkQ0JoYkhCb1lWUmxjM1E3Q2lObGJtUnBabUFzSUUxbUlEMGdZQ05wWm1SbFppQlZVMFZmUVU5TlFWQUtDV1pzYjJGMElHRnRZbWxsYm5SUFkyTnNkWE5wYjI0Z1BTQW9JSFJsZUhSMWNtVXlSQ2dnWVc5TllYQXNJSFpWZGpJZ0tTNXlJQzBnTVM0d0lDa2dLaUJoYjAxaGNFbHVkR1Z1YzJsMGVTQXJJREV1TURzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FxUFNCaGJXSnBaVzUwVDJOamJIVnphVzl1T3dvSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5RlRsWk5RVkFnS1NBbUppQmtaV1pwYm1Wa0tDQlRWRUZPUkVGU1JDQXBDZ2tKWm14dllYUWdaRzkwVGxZZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCblpXOXRaWFJ5ZVM1dWIzSnRZV3dzSUdkbGIyMWxkSEo1TG5acFpYZEVhWElnS1NBcE93b0pDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFUzQmxZM1ZzWVhJZ0tqMGdZMjl0Y0hWMFpWTndaV04xYkdGeVQyTmpiSFZ6YVc5dUtDQmtiM1JPVml3Z1lXMWlhV1Z1ZEU5alkyeDFjMmx2Yml3Z2JXRjBaWEpwWVd3dWNtOTFaMmh1WlhOeklDazdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dZbVlnUFNCZ0kybG1aR1ZtSUZWVFJWOUJUMDFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ1lXOU5ZWEE3Q2dsMWJtbG1iM0p0SUdac2IyRjBJR0Z2VFdGd1NXNTBaVzV6YVhSNU93b2paVzVrYVdaZ0xDQjNaaUE5SUNKMlpXTXpJSFJ5WVc1elptOXliV1ZrSUQwZ2RtVmpNeWdnY0c5emFYUnBiMjRnS1RzaUxDQlRaaUE5SUdCMlpXTXpJRzlpYW1WamRFNXZjbTFoYkNBOUlIWmxZek1vSUc1dmNtMWhiQ0FwT3dvamFXWmtaV1lnVlZORlgxUkJUa2RGVGxRS0NYWmxZek1nYjJKcVpXTjBWR0Z1WjJWdWRDQTlJSFpsWXpNb0lIUmhibWRsYm5RdWVIbDZJQ2s3Q2lObGJtUnBabUFzSUZSbUlEMGdZSFpsWXpNZ1FsSkVSbDlNWVcxaVpYSjBLQ0JqYjI1emRDQnBiaUIyWldNeklHUnBabVoxYzJWRGIyeHZjaUFwSUhzS0NYSmxkSFZ5YmlCU1JVTkpVRkpQUTBGTVgxQkpJQ29nWkdsbVpuVnpaVU52Ykc5eU93cDlDblpsWXpNZ1JsOVRZMmhzYVdOcktDQmpiMjV6ZENCcGJpQjJaV016SUdZd0xDQmpiMjV6ZENCcGJpQm1iRzloZENCbU9UQXNJR052Ym5OMElHbHVJR1pzYjJGMElHUnZkRlpJSUNrZ2V3b0pabXh2WVhRZ1puSmxjMjVsYkNBOUlHVjRjRElvSUNnZ0xTQTFMalUxTkRjeklDb2daRzkwVmtnZ0xTQTJMams0TXpFMklDa2dLaUJrYjNSV1NDQXBPd29KY21WMGRYSnVJR1l3SUNvZ0tDQXhMakFnTFNCbWNtVnpibVZzSUNrZ0t5QW9JR1k1TUNBcUlHWnlaWE51Wld3Z0tUc0tmUXBtYkc5aGRDQldYMGRIV0Y5VGJXbDBhRU52Y25KbGJHRjBaV1FvSUdOdmJuTjBJR2x1SUdac2IyRjBJR0ZzY0doaExDQmpiMjV6ZENCcGJpQm1iRzloZENCa2IzUk9UQ3dnWTI5dWMzUWdhVzRnWm14dllYUWdaRzkwVGxZZ0tTQjdDZ2xtYkc5aGRDQmhNaUE5SUhCdmR6SW9JR0ZzY0doaElDazdDZ2xtYkc5aGRDQm5kaUE5SUdSdmRFNU1JQ29nYzNGeWRDZ2dZVElnS3lBb0lERXVNQ0F0SUdFeUlDa2dLaUJ3YjNjeUtDQmtiM1JPVmlBcElDazdDZ2xtYkc5aGRDQm5iQ0E5SUdSdmRFNVdJQ29nYzNGeWRDZ2dZVElnS3lBb0lERXVNQ0F0SUdFeUlDa2dLaUJ3YjNjeUtDQmtiM1JPVENBcElDazdDZ2x5WlhSMWNtNGdNQzQxSUM4Z2JXRjRLQ0JuZGlBcklHZHNMQ0JGVUZOSlRFOU9JQ2s3Q24wS1pteHZZWFFnUkY5SFIxZ29JR052Ym5OMElHbHVJR1pzYjJGMElHRnNjR2hoTENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JrYjNST1NDQXBJSHNLQ1dac2IyRjBJR0V5SUQwZ2NHOTNNaWdnWVd4d2FHRWdLVHNLQ1dac2IyRjBJR1JsYm05dElEMGdjRzkzTWlnZ1pHOTBUa2dnS1NBcUlDZ2dZVElnTFNBeExqQWdLU0FySURFdU1Ec0tDWEpsZEhWeWJpQlNSVU5KVUZKUFEwRk1YMUJKSUNvZ1lUSWdMeUJ3YjNjeUtDQmtaVzV2YlNBcE93cDlDblpsWXpNZ1FsSkVSbDlIUjFnb0lHTnZibk4wSUdsdUlIWmxZek1nYkdsbmFIUkVhWElzSUdOdmJuTjBJR2x1SUhabFl6TWdkbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dzSUdOdmJuTjBJR2x1SUhabFl6TWdaakFzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1k1TUN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnY205MVoyaHVaWE56SUNrZ2V3b0pabXh2WVhRZ1lXeHdhR0VnUFNCd2IzY3lLQ0J5YjNWbmFHNWxjM01nS1RzS0NYWmxZek1nYUdGc1prUnBjaUE5SUc1dmNtMWhiR2w2WlNnZ2JHbG5hSFJFYVhJZ0t5QjJhV1YzUkdseUlDazdDZ2xtYkc5aGRDQmtiM1JPVENBOUlITmhkSFZ5WVhSbEtDQmtiM1FvSUc1dmNtMWhiQ3dnYkdsbmFIUkVhWElnS1NBcE93b0pabXh2WVhRZ1pHOTBUbFlnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSWdLU0FwT3dvSlpteHZZWFFnWkc5MFRrZ2dQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQnViM0p0WVd3c0lHaGhiR1pFYVhJZ0tTQXBPd29KWm14dllYUWdaRzkwVmtnZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCMmFXVjNSR2x5TENCb1lXeG1SR2x5SUNrZ0tUc0tDWFpsWXpNZ1JpQTlJRVpmVTJOb2JHbGpheWdnWmpBc0lHWTVNQ3dnWkc5MFZrZ2dLVHNLQ1dac2IyRjBJRllnUFNCV1gwZEhXRjlUYldsMGFFTnZjbkpsYkdGMFpXUW9JR0ZzY0doaExDQmtiM1JPVEN3Z1pHOTBUbFlnS1RzS0NXWnNiMkYwSUVRZ1BTQkVYMGRIV0NnZ1lXeHdhR0VzSUdSdmRFNUlJQ2s3Q2dseVpYUjFjbTRnUmlBcUlDZ2dWaUFxSUVRZ0tUc0tmUXAyWldNeUlFeFVRMTlWZGlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJPTENCamIyNXpkQ0JwYmlCMlpXTXpJRllzSUdOdmJuTjBJR2x1SUdac2IyRjBJSEp2ZFdkb2JtVnpjeUFwSUhzS0NXTnZibk4wSUdac2IyRjBJRXhWVkY5VFNWcEZJRDBnTmpRdU1Ec0tDV052Ym5OMElHWnNiMkYwSUV4VlZGOVRRMEZNUlNBOUlDZ2dURlZVWDFOSldrVWdMU0F4TGpBZ0tTQXZJRXhWVkY5VFNWcEZPd29KWTI5dWMzUWdabXh2WVhRZ1RGVlVYMEpKUVZNZ1BTQXdMalVnTHlCTVZWUmZVMGxhUlRzS0NXWnNiMkYwSUdSdmRFNVdJRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2dUaXdnVmlBcElDazdDZ2wyWldNeUlIVjJJRDBnZG1Wak1pZ2djbTkxWjJodVpYTnpMQ0J6Y1hKMEtDQXhMakFnTFNCa2IzUk9WaUFwSUNrN0NnbDFkaUE5SUhWMklDb2dURlZVWDFORFFVeEZJQ3NnVEZWVVgwSkpRVk03Q2dseVpYUjFjbTRnZFhZN0NuMEtabXh2WVhRZ1RGUkRYME5zYVhCd1pXUlRjR2hsY21WR2IzSnRSbUZqZEc5eUtDQmpiMjV6ZENCcGJpQjJaV016SUdZZ0tTQjdDZ2xtYkc5aGRDQnNJRDBnYkdWdVozUm9LQ0JtSUNrN0NnbHlaWFIxY200Z2JXRjRLQ0FvSUd3Z0tpQnNJQ3NnWmk1NklDa2dMeUFvSUd3Z0t5QXhMakFnS1N3Z01DNHdJQ2s3Q24wS2RtVmpNeUJNVkVOZlJXUm5aVlpsWTNSdmNrWnZjbTFHWVdOMGIzSW9JR052Ym5OMElHbHVJSFpsWXpNZ2RqRXNJR052Ym5OMElHbHVJSFpsWXpNZ2RqSWdLU0I3Q2dsbWJHOWhkQ0I0SUQwZ1pHOTBLQ0IyTVN3Z2RqSWdLVHNLQ1dac2IyRjBJSGtnUFNCaFluTW9JSGdnS1RzS0NXWnNiMkYwSUdFZ1BTQXdMamcxTkRNNU9EVWdLeUFvSURBdU5EazJOVEUxTlNBcklEQXVNREUwTlRJd05pQXFJSGtnS1NBcUlIazdDZ2xtYkc5aGRDQmlJRDBnTXk0ME1UYzFPVFF3SUNzZ0tDQTBMakUyTVRZM01qUWdLeUI1SUNrZ0tpQjVPd29KWm14dllYUWdkaUE5SUdFZ0x5QmlPd29KWm14dllYUWdkR2hsZEdGZmMybHVkR2hsZEdFZ1BTQW9JSGdnUGlBd0xqQWdLU0EvSUhZZ09pQXdMalVnS2lCcGJuWmxjbk5sYzNGeWRDZ2diV0Y0S0NBeExqQWdMU0I0SUNvZ2VDd2dNV1V0TnlBcElDa2dMU0IyT3dvSmNtVjBkWEp1SUdOeWIzTnpLQ0IyTVN3Z2RqSWdLU0FxSUhSb1pYUmhYM05wYm5Sb1pYUmhPd3A5Q25abFl6TWdURlJEWDBWMllXeDFZWFJsS0NCamIyNXpkQ0JwYmlCMlpXTXpJRTRzSUdOdmJuTjBJR2x1SUhabFl6TWdWaXdnWTI5dWMzUWdhVzRnZG1Wak15QlFMQ0JqYjI1emRDQnBiaUJ0WVhReklHMUpibllzSUdOdmJuTjBJR2x1SUhabFl6TWdjbVZqZEVOdmIzSmtjMXNnTkNCZElDa2dld29KZG1Wak15QjJNU0E5SUhKbFkzUkRiMjl5WkhOYklERWdYU0F0SUhKbFkzUkRiMjl5WkhOYklEQWdYVHNLQ1habFl6TWdkaklnUFNCeVpXTjBRMjl2Y21Seld5QXpJRjBnTFNCeVpXTjBRMjl2Y21Seld5QXdJRjA3Q2dsMlpXTXpJR3hwWjJoMFRtOXliV0ZzSUQwZ1kzSnZjM01vSUhZeExDQjJNaUFwT3dvSmFXWW9JR1J2ZENnZ2JHbG5hSFJPYjNKdFlXd3NJRkFnTFNCeVpXTjBRMjl2Y21Seld5QXdJRjBnS1NBOElEQXVNQ0FwSUhKbGRIVnliaUIyWldNektDQXdMakFnS1RzS0NYWmxZek1nVkRFc0lGUXlPd29KVkRFZ1BTQnViM0p0WVd4cGVtVW9JRllnTFNCT0lDb2daRzkwS0NCV0xDQk9JQ2tnS1RzS0NWUXlJRDBnTFNCamNtOXpjeWdnVGl3Z1ZERWdLVHNLQ1cxaGRETWdiV0YwSUQwZ2JVbHVkaUFxSUhSeVlXNXpjRzl6WlUxaGRETW9JRzFoZERNb0lGUXhMQ0JVTWl3Z1RpQXBJQ2s3Q2dsMlpXTXpJR052YjNKa2Mxc2dOQ0JkT3dvSlkyOXZjbVJ6V3lBd0lGMGdQU0J0WVhRZ0tpQW9JSEpsWTNSRGIyOXlaSE5iSURBZ1hTQXRJRkFnS1RzS0NXTnZiM0prYzFzZ01TQmRJRDBnYldGMElDb2dLQ0J5WldOMFEyOXZjbVJ6V3lBeElGMGdMU0JRSUNrN0NnbGpiMjl5WkhOYklESWdYU0E5SUcxaGRDQXFJQ2dnY21WamRFTnZiM0prYzFzZ01pQmRJQzBnVUNBcE93b0pZMjl2Y21Seld5QXpJRjBnUFNCdFlYUWdLaUFvSUhKbFkzUkRiMjl5WkhOYklETWdYU0F0SUZBZ0tUc0tDV052YjNKa2Mxc2dNQ0JkSUQwZ2JtOXliV0ZzYVhwbEtDQmpiMjl5WkhOYklEQWdYU0FwT3dvSlkyOXZjbVJ6V3lBeElGMGdQU0J1YjNKdFlXeHBlbVVvSUdOdmIzSmtjMXNnTVNCZElDazdDZ2xqYjI5eVpITmJJRElnWFNBOUlHNXZjbTFoYkdsNlpTZ2dZMjl2Y21Seld5QXlJRjBnS1RzS0NXTnZiM0prYzFzZ015QmRJRDBnYm05eWJXRnNhWHBsS0NCamIyOXlaSE5iSURNZ1hTQXBPd29KZG1Wak15QjJaV04wYjNKR2IzSnRSbUZqZEc5eUlEMGdkbVZqTXlnZ01DNHdJQ2s3Q2dsMlpXTjBiM0pHYjNKdFJtRmpkRzl5SUNzOUlFeFVRMTlGWkdkbFZtVmpkRzl5Um05eWJVWmhZM1J2Y2lnZ1kyOXZjbVJ6V3lBd0lGMHNJR052YjNKa2Mxc2dNU0JkSUNrN0NnbDJaV04wYjNKR2IzSnRSbUZqZEc5eUlDczlJRXhVUTE5RlpHZGxWbVZqZEc5eVJtOXliVVpoWTNSdmNpZ2dZMjl2Y21Seld5QXhJRjBzSUdOdmIzSmtjMXNnTWlCZElDazdDZ2wyWldOMGIzSkdiM0p0Um1GamRHOXlJQ3M5SUV4VVExOUZaR2RsVm1WamRHOXlSbTl5YlVaaFkzUnZjaWdnWTI5dmNtUnpXeUF5SUYwc0lHTnZiM0prYzFzZ015QmRJQ2s3Q2dsMlpXTjBiM0pHYjNKdFJtRmpkRzl5SUNzOUlFeFVRMTlGWkdkbFZtVmpkRzl5Um05eWJVWmhZM1J2Y2lnZ1kyOXZjbVJ6V3lBeklGMHNJR052YjNKa2Mxc2dNQ0JkSUNrN0NnbG1iRzloZENCeVpYTjFiSFFnUFNCTVZFTmZRMnhwY0hCbFpGTndhR1Z5WlVadmNtMUdZV04wYjNJb0lIWmxZM1J2Y2tadmNtMUdZV04wYjNJZ0tUc0tDWEpsZEhWeWJpQjJaV016S0NCeVpYTjFiSFFnS1RzS2ZRcG1iRzloZENCSFgwSnNhVzV1VUdodmJtZGZTVzF3YkdsamFYUW9JQ2tnZXdvSmNtVjBkWEp1SURBdU1qVTdDbjBLWm14dllYUWdSRjlDYkdsdWJsQm9iMjVuS0NCamIyNXpkQ0JwYmlCbWJHOWhkQ0J6YUdsdWFXNWxjM01zSUdOdmJuTjBJR2x1SUdac2IyRjBJR1J2ZEU1SUlDa2dld29KY21WMGRYSnVJRkpGUTBsUVVrOURRVXhmVUVrZ0tpQW9JSE5vYVc1cGJtVnpjeUFxSURBdU5TQXJJREV1TUNBcElDb2djRzkzS0NCa2IzUk9TQ3dnYzJocGJtbHVaWE56SUNrN0NuMEtkbVZqTXlCQ1VrUkdYMEpzYVc1dVVHaHZibWNvSUdOdmJuTjBJR2x1SUhabFl6TWdiR2xuYUhSRWFYSXNJR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJR052Ym5OMElHbHVJSFpsWXpNZ2MzQmxZM1ZzWVhKRGIyeHZjaXdnWTI5dWMzUWdhVzRnWm14dllYUWdjMmhwYm1sdVpYTnpJQ2tnZXdvSmRtVmpNeUJvWVd4bVJHbHlJRDBnYm05eWJXRnNhWHBsS0NCc2FXZG9kRVJwY2lBcklIWnBaWGRFYVhJZ0tUc0tDV1pzYjJGMElHUnZkRTVJSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnYm05eWJXRnNMQ0JvWVd4bVJHbHlJQ2tnS1RzS0NXWnNiMkYwSUdSdmRGWklJRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2dkbWxsZDBScGNpd2dhR0ZzWmtScGNpQXBJQ2s3Q2dsMlpXTXpJRVlnUFNCR1gxTmphR3hwWTJzb0lITndaV04xYkdGeVEyOXNiM0lzSURFdU1Dd2daRzkwVmtnZ0tUc0tDV1pzYjJGMElFY2dQU0JIWDBKc2FXNXVVR2h2Ym1kZlNXMXdiR2xqYVhRb0lDazdDZ2xtYkc5aGRDQkVJRDBnUkY5Q2JHbHVibEJvYjI1bktDQnphR2x1YVc1bGMzTXNJR1J2ZEU1SUlDazdDZ2x5WlhSMWNtNGdSaUFxSUNnZ1J5QXFJRVFnS1RzS2ZRb2phV1lnWkdWbWFXNWxaQ2dnVlZORlgxTklSVVZPSUNrS1pteHZZWFFnUkY5RGFHRnliR2xsS0NCbWJHOWhkQ0J5YjNWbmFHNWxjM01zSUdac2IyRjBJR1J2ZEU1SUlDa2dld29KWm14dllYUWdZV3h3YUdFZ1BTQndiM2N5S0NCeWIzVm5hRzVsYzNNZ0tUc0tDV1pzYjJGMElHbHVka0ZzY0doaElEMGdNUzR3SUM4Z1lXeHdhR0U3Q2dsbWJHOWhkQ0JqYjNNeWFDQTlJR1J2ZEU1SUlDb2daRzkwVGtnN0NnbG1iRzloZENCemFXNHlhQ0E5SUcxaGVDZ2dNUzR3SUMwZ1kyOXpNbWdzSURBdU1EQTNPREV5TlNBcE93b0pjbVYwZFhKdUlDZ2dNaTR3SUNzZ2FXNTJRV3h3YUdFZ0tTQXFJSEJ2ZHlnZ2MybHVNbWdzSUdsdWRrRnNjR2hoSUNvZ01DNDFJQ2tnTHlBb0lESXVNQ0FxSUZCSklDazdDbjBLWm14dllYUWdWbDlPWlhWaVpXeDBLQ0JtYkc5aGRDQmtiM1JPVml3Z1pteHZZWFFnWkc5MFRrd2dLU0I3Q2dseVpYUjFjbTRnYzJGMGRYSmhkR1VvSURFdU1DQXZJQ2dnTkM0d0lDb2dLQ0JrYjNST1RDQXJJR1J2ZEU1V0lDMGdaRzkwVGt3Z0tpQmtiM1JPVmlBcElDa2dLVHNLZlFwMlpXTXpJRUpTUkVaZlUyaGxaVzRvSUdOdmJuTjBJR2x1SUhabFl6TWdiR2xuYUhSRWFYSXNJR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJSFpsWXpNZ2MyaGxaVzVEYjJ4dmNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2MyaGxaVzVTYjNWbmFHNWxjM01nS1NCN0NnbDJaV016SUdoaGJHWkVhWElnUFNCdWIzSnRZV3hwZW1Vb0lHeHBaMmgwUkdseUlDc2dkbWxsZDBScGNpQXBPd29KWm14dllYUWdaRzkwVGt3Z1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCdWIzSnRZV3dzSUd4cFoyaDBSR2x5SUNrZ0tUc0tDV1pzYjJGMElHUnZkRTVXSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnYm05eWJXRnNMQ0IyYVdWM1JHbHlJQ2tnS1RzS0NXWnNiMkYwSUdSdmRFNUlJRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2dibTl5YldGc0xDQm9ZV3htUkdseUlDa2dLVHNLQ1dac2IyRjBJRVFnUFNCRVgwTm9ZWEpzYVdVb0lITm9aV1Z1VW05MVoyaHVaWE56TENCa2IzUk9TQ0FwT3dvSlpteHZZWFFnVmlBOUlGWmZUbVYxWW1Wc2RDZ2daRzkwVGxZc0lHUnZkRTVNSUNrN0NnbHlaWFIxY200Z2MyaGxaVzVEYjJ4dmNpQXFJQ2dnUkNBcUlGWWdLVHNLZlFvalpXNWthV1pnTENCRlppQTlJR0FqYVdaa1pXWWdWVk5GWDBKVlRWQk5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdKMWJYQk5ZWEE3Q2dsMWJtbG1iM0p0SUdac2IyRjBJR0oxYlhCVFkyRnNaVHNLQ1habFl6SWdaRWhrZUhsZlpuZGtLQ2tnZXdvSkNYWmxZeklnWkZOVVpIZ2dQU0JrUm1SNEtDQjJWWFlnS1RzS0NRbDJaV015SUdSVFZHUjVJRDBnWkVaa2VTZ2dkbFYySUNrN0Nna0pabXh2WVhRZ1NHeHNJRDBnWW5WdGNGTmpZV3hsSUNvZ2RHVjRkSFZ5WlRKRUtDQmlkVzF3VFdGd0xDQjJWWFlnS1M1NE93b0pDV1pzYjJGMElHUkNlQ0E5SUdKMWJYQlRZMkZzWlNBcUlIUmxlSFIxY21VeVJDZ2dZblZ0Y0UxaGNDd2dkbFYySUNzZ1pGTlVaSGdnS1M1NElDMGdTR3hzT3dvSkNXWnNiMkYwSUdSQ2VTQTlJR0oxYlhCVFkyRnNaU0FxSUhSbGVIUjFjbVV5UkNnZ1luVnRjRTFoY0N3Z2RsVjJJQ3NnWkZOVVpIa2dLUzU0SUMwZ1NHeHNPd29KQ1hKbGRIVnliaUIyWldNeUtDQmtRbmdzSUdSQ2VTQXBPd29KZlFvSmRtVmpNeUJ3WlhKMGRYSmlUbTl5YldGc1FYSmlLQ0IyWldNeklITjFjbVpmY0c5ekxDQjJaV016SUhOMWNtWmZibTl5YlN3Z2RtVmpNaUJrU0dSNGVTd2dabXh2WVhRZ1ptRmpaVVJwY21WamRHbHZiaUFwSUhzS0NRbDJaV016SUhaVGFXZHRZVmdnUFNCMlpXTXpLQ0JrUm1SNEtDQnpkWEptWDNCdmN5NTRJQ2tzSUdSR1pIZ29JSE4xY21aZmNHOXpMbmtnS1N3Z1pFWmtlQ2dnYzNWeVpsOXdiM011ZWlBcElDazdDZ2tKZG1Wak15QjJVMmxuYldGWklEMGdkbVZqTXlnZ1pFWmtlU2dnYzNWeVpsOXdiM011ZUNBcExDQmtSbVI1S0NCemRYSm1YM0J2Y3k1NUlDa3NJR1JHWkhrb0lITjFjbVpmY0c5ekxub2dLU0FwT3dvSkNYWmxZek1nZGs0Z1BTQnpkWEptWDI1dmNtMDdDZ2tKZG1Wak15QlNNU0E5SUdOeWIzTnpLQ0IyVTJsbmJXRlpMQ0IyVGlBcE93b0pDWFpsWXpNZ1VqSWdQU0JqY205emN5Z2dkazRzSUhaVGFXZHRZVmdnS1RzS0NRbG1iRzloZENCbVJHVjBJRDBnWkc5MEtDQjJVMmxuYldGWUxDQlNNU0FwSUNvZ1ptRmpaVVJwY21WamRHbHZianNLQ1FsMlpXTXpJSFpIY21Ga0lEMGdjMmxuYmlnZ1prUmxkQ0FwSUNvZ0tDQmtTR1I0ZVM1NElDb2dVakVnS3lCa1NHUjRlUzU1SUNvZ1VqSWdLVHNLQ1FseVpYUjFjbTRnYm05eWJXRnNhWHBsS0NCaFluTW9JR1pFWlhRZ0tTQXFJSE4xY21aZmJtOXliU0F0SUhaSGNtRmtJQ2s3Q2dsOUNpTmxibVJwWm1Bc0lFRm1JRDBnWUNOcFppQk9WVTFmUTB4SlVGQkpUa2RmVUV4QlRrVlRJRDRnTUFvSmRtVmpOQ0J3YkdGdVpUc0tDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUZWT1NVOU9YME5NU1ZCUVNVNUhYMUJNUVU1RlV6c2dhU0FyS3lBcElIc0tDUWx3YkdGdVpTQTlJR05zYVhCd2FXNW5VR3hoYm1Weld5QnBJRjA3Q2drSmFXWWdLQ0JrYjNRb0lIWkRiR2x3VUc5emFYUnBiMjRzSUhCc1lXNWxMbmg1ZWlBcElENGdjR3hoYm1VdWR5QXBJR1JwYzJOaGNtUTdDZ2w5Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQW9KSTJsbUlGVk9TVTlPWDBOTVNWQlFTVTVIWDFCTVFVNUZVeUE4SUU1VlRWOURURWxRVUVsT1IxOVFURUZPUlZNS0NRbGliMjlzSUdOc2FYQndaV1FnUFNCMGNuVmxPd29KQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1FsbWIzSWdLQ0JwYm5RZ2FTQTlJRlZPU1U5T1gwTk1TVkJRU1U1SFgxQk1RVTVGVXpzZ2FTQThJRTVWVFY5RFRFbFFVRWxPUjE5UVRFRk9SVk03SUdrZ0t5c2dLU0I3Q2drSkNYQnNZVzVsSUQwZ1kyeHBjSEJwYm1kUWJHRnVaWE5iSUdrZ1hUc0tDUWtKWTJ4cGNIQmxaQ0E5SUNnZ1pHOTBLQ0IyUTJ4cGNGQnZjMmwwYVc5dUxDQndiR0Z1WlM1NGVYb2dLU0ErSUhCc1lXNWxMbmNnS1NBbUppQmpiR2x3Y0dWa093b0pDWDBLQ1FramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQW9KQ1dsbUlDZ2dZMnhwY0hCbFpDQXBJR1JwYzJOaGNtUTdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dRMllnUFNCZ0kybG1JRTVWVFY5RFRFbFFVRWxPUjE5UVRFRk9SVk1nUGlBd0NnbDJZWEo1YVc1bklIWmxZek1nZGtOc2FYQlFiM05wZEdsdmJqc0tDWFZ1YVdadmNtMGdkbVZqTkNCamJHbHdjR2x1WjFCc1lXNWxjMXNnVGxWTlgwTk1TVkJRU1U1SFgxQk1RVTVGVXlCZE93b2paVzVrYVdaZ0xDQk1aaUE5SUdBamFXWWdUbFZOWDBOTVNWQlFTVTVIWDFCTVFVNUZVeUErSURBS0NYWmhjbmxwYm1jZ2RtVmpNeUIyUTJ4cGNGQnZjMmwwYVc5dU93b2paVzVrYVdaZ0xDQlNaaUE5SUdBamFXWWdUbFZOWDBOTVNWQlFTVTVIWDFCTVFVNUZVeUErSURBS0NYWkRiR2x3VUc5emFYUnBiMjRnUFNBdElHMTJVRzl6YVhScGIyNHVlSGw2T3dvalpXNWthV1pnTENCUVppQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U1gwRk1VRWhCSUNrS0NXUnBabVoxYzJWRGIyeHZjaUFxUFNCMlEyOXNiM0k3Q2lObGJHbG1JR1JsWm1sdVpXUW9JRlZUUlY5RFQweFBVaUFwQ2dsa2FXWm1kWE5sUTI5c2IzSXVjbWRpSUNvOUlIWkRiMnh2Y2pzS0kyVnVaR2xtWUN3Z1NXWWdQU0JnSTJsbUlHUmxabWx1WldRb0lGVlRSVjlEVDB4UFVsOUJURkJJUVNBcENnbDJZWEo1YVc1bklIWmxZelFnZGtOdmJHOXlPd29qWld4cFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSWdLUW9KZG1GeWVXbHVaeUIyWldNeklIWkRiMnh2Y2pzS0kyVnVaR2xtWUN3Z1JHWWdQU0JnSTJsbUlHUmxabWx1WldRb0lGVlRSVjlEVDB4UFVsOUJURkJJUVNBcENnbDJZWEo1YVc1bklIWmxZelFnZGtOdmJHOXlPd29qWld4cFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZTVTVUVkVGT1EwbE9SMTlEVDB4UFVpQXBDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RrTnZiRzl5T3dvalpXNWthV1pnTENCR1ppQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U1gwRk1VRWhCSUNrS0NYWkRiMnh2Y2lBOUlIWmxZelFvSURFdU1DQXBPd29qWld4cFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZTVTVUVkVGT1EwbE9SMTlEVDB4UFVpQXBDZ2wyUTI5c2IzSWdQU0IyWldNektDQXhMakFnS1RzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlEwOU1UMUlLQ1haRGIyeHZjaUFxUFNCamIyeHZjanNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmU1U1VFZFRk9RMGxPUjE5RFQweFBVZ29KZGtOdmJHOXlMbmg1ZWlBcVBTQnBibk4wWVc1alpVTnZiRzl5TG5oNWVqc0tJMlZ1WkdsbVlDd2dUbVlnUFNCZ0kyUmxabWx1WlNCUVNTQXpMakUwTVRVNU1qWTFNelU0T1RjNU13b2paR1ZtYVc1bElGQkpNaUEyTGpJNE16RTROVE13TnpFM09UVTROZ29qWkdWbWFXNWxJRkJKWDBoQlRFWWdNUzQxTnpBM09UWXpNalkzT1RRNE9UWTJDaU5rWldacGJtVWdVa1ZEU1ZCU1QwTkJURjlRU1NBd0xqTXhPRE13T1RnNE5qRTRNemM1TURjS0kyUmxabWx1WlNCU1JVTkpVRkpQUTBGTVgxQkpNaUF3TGpFMU9URTFORGswTXpBNU1UZzVOVE0xQ2lOa1pXWnBibVVnUlZCVFNVeFBUaUF4WlMwMkNpTnBabTVrWldZZ2MyRjBkWEpoZEdVS0kyUmxabWx1WlNCellYUjFjbUYwWlNnZ1lTQXBJR05zWVcxd0tDQmhMQ0F3TGpBc0lERXVNQ0FwQ2lObGJtUnBaZ29qWkdWbWFXNWxJSGRvYVhSbFEyOXRjR3hsYldWdWRDZ2dZU0FwSUNnZ01TNHdJQzBnYzJGMGRYSmhkR1VvSUdFZ0tTQXBDbVpzYjJGMElIQnZkeklvSUdOdmJuTjBJR2x1SUdac2IyRjBJSGdnS1NCN0lISmxkSFZ5YmlCNEtuZzdJSDBLWm14dllYUWdjRzkzTXlnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnZUNBcElIc2djbVYwZFhKdUlIZ3FlQ3A0T3lCOUNtWnNiMkYwSUhCdmR6UW9JR052Ym5OMElHbHVJR1pzYjJGMElIZ2dLU0I3SUdac2IyRjBJSGd5SUQwZ2VDcDRPeUJ5WlhSMWNtNGdlRElxZURJN0lIMEtabXh2WVhRZ2JXRjRNeWdnWTI5dWMzUWdhVzRnZG1Wak15QjJJQ2tnZXlCeVpYUjFjbTRnYldGNEtDQnRZWGdvSUhZdWVDd2dkaTU1SUNrc0lIWXVlaUFwT3lCOUNtWnNiMkYwSUdGMlpYSmhaMlVvSUdOdmJuTjBJR2x1SUhabFl6TWdZMjlzYjNJZ0tTQjdJSEpsZEhWeWJpQmtiM1FvSUdOdmJHOXlMQ0IyWldNektDQXdMak16TXpNZ0tTQXBPeUI5Q21ocFoyaHdJR1pzYjJGMElISmhibVFvSUdOdmJuTjBJR2x1SUhabFl6SWdkWFlnS1NCN0NnbGpiMjV6ZENCb2FXZG9jQ0JtYkc5aGRDQmhJRDBnTVRJdU9UZzVPQ3dnWWlBOUlEYzRMakl6TXl3Z1l5QTlJRFF6TnpVNExqVTBOVE03Q2dsb2FXZG9jQ0JtYkc5aGRDQmtkQ0E5SUdSdmRDZ2dkWFl1ZUhrc0lIWmxZeklvSUdFc1lpQXBJQ2tzSUhOdUlEMGdiVzlrS0NCa2RDd2dVRWtnS1RzS0NYSmxkSFZ5YmlCbWNtRmpkQ2dnYzJsdUtDQnpiaUFwSUNvZ1l5QXBPd3A5Q2lOcFptUmxaaUJJU1VkSVgxQlNSVU5KVTBsUFRnb0pabXh2WVhRZ2NISmxZMmx6YVc5dVUyRm1aVXhsYm1kMGFDZ2dkbVZqTXlCMklDa2dleUJ5WlhSMWNtNGdiR1Z1WjNSb0tDQjJJQ2s3SUgwS0kyVnNjMlVLQ1dac2IyRjBJSEJ5WldOcGMybHZibE5oWm1WTVpXNW5kR2dvSUhabFl6TWdkaUFwSUhzS0NRbG1iRzloZENCdFlYaERiMjF3YjI1bGJuUWdQU0J0WVhnektDQmhZbk1vSUhZZ0tTQXBPd29KQ1hKbGRIVnliaUJzWlc1bmRHZ29JSFlnTHlCdFlYaERiMjF3YjI1bGJuUWdLU0FxSUcxaGVFTnZiWEJ2Ym1WdWREc0tDWDBLSTJWdVpHbG1Dbk4wY25WamRDQkpibU5wWkdWdWRFeHBaMmgwSUhzS0NYWmxZek1nWTI5c2IzSTdDZ2wyWldNeklHUnBjbVZqZEdsdmJqc0tDV0p2YjJ3Z2RtbHphV0pzWlRzS2ZUc0tjM1J5ZFdOMElGSmxabXhsWTNSbFpFeHBaMmgwSUhzS0NYWmxZek1nWkdseVpXTjBSR2xtWm5WelpUc0tDWFpsWXpNZ1pHbHlaV04wVTNCbFkzVnNZWEk3Q2dsMlpXTXpJR2x1WkdseVpXTjBSR2xtWm5WelpUc0tDWFpsWXpNZ2FXNWthWEpsWTNSVGNHVmpkV3hoY2pzS2ZUc0tjM1J5ZFdOMElFZGxiMjFsZEhKcFkwTnZiblJsZUhRZ2V3b0pkbVZqTXlCd2IzTnBkR2x2YmpzS0NYWmxZek1nYm05eWJXRnNPd29KZG1Wak15QjJhV1YzUkdseU93b2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWQW9KZG1Wak15QmpiR1ZoY21OdllYUk9iM0p0WVd3N0NpTmxibVJwWmdwOU93cDJaV016SUhSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2FXNGdkbVZqTXlCa2FYSXNJR2x1SUcxaGREUWdiV0YwY21sNElDa2dld29KY21WMGRYSnVJRzV2Y20xaGJHbDZaU2dnS0NCdFlYUnlhWGdnS2lCMlpXTTBLQ0JrYVhJc0lEQXVNQ0FwSUNrdWVIbDZJQ2s3Q24wS2RtVmpNeUJwYm5abGNuTmxWSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0JwYmlCMlpXTXpJR1JwY2l3Z2FXNGdiV0YwTkNCdFlYUnlhWGdnS1NCN0NnbHlaWFIxY200Z2JtOXliV0ZzYVhwbEtDQW9JSFpsWXpRb0lHUnBjaXdnTUM0d0lDa2dLaUJ0WVhSeWFYZ2dLUzU0ZVhvZ0tUc0tmUXB0WVhReklIUnlZVzV6Y0c5elpVMWhkRE1vSUdOdmJuTjBJR2x1SUcxaGRETWdiU0FwSUhzS0NXMWhkRE1nZEcxd093b0pkRzF3V3lBd0lGMGdQU0IyWldNektDQnRXeUF3SUYwdWVDd2diVnNnTVNCZExuZ3NJRzFiSURJZ1hTNTRJQ2s3Q2dsMGJYQmJJREVnWFNBOUlIWmxZek1vSUcxYklEQWdYUzU1TENCdFd5QXhJRjB1ZVN3Z2JWc2dNaUJkTG5rZ0tUc0tDWFJ0Y0ZzZ01pQmRJRDBnZG1Wak15Z2diVnNnTUNCZExub3NJRzFiSURFZ1hTNTZMQ0J0V3lBeUlGMHVlaUFwT3dvSmNtVjBkWEp1SUhSdGNEc0tmUXBtYkc5aGRDQnNhVzVsWVhKVWIxSmxiR0YwYVhabFRIVnRhVzVoYm1ObEtDQmpiMjV6ZENCcGJpQjJaV016SUdOdmJHOXlJQ2tnZXdvSmRtVmpNeUIzWldsbmFIUnpJRDBnZG1Wak15Z2dNQzR5TVRJMkxDQXdMamN4TlRJc0lEQXVNRGN5TWlBcE93b0pjbVYwZFhKdUlHUnZkQ2dnZDJWcFoyaDBjeXdnWTI5c2IzSXVjbWRpSUNrN0NuMEtZbTl2YkNCcGMxQmxjbk53WldOMGFYWmxUV0YwY21sNEtDQnRZWFEwSUcwZ0tTQjdDZ2x5WlhSMWNtNGdiVnNnTWlCZFd5QXpJRjBnUFQwZ0xTQXhMakE3Q24wS2RtVmpNaUJsY1hWcGNtVmpkRlYyS0NCcGJpQjJaV016SUdScGNpQXBJSHNLQ1dac2IyRjBJSFVnUFNCaGRHRnVLQ0JrYVhJdWVpd2daR2x5TG5nZ0tTQXFJRkpGUTBsUVVrOURRVXhmVUVreUlDc2dNQzQxT3dvSlpteHZZWFFnZGlBOUlHRnphVzRvSUdOc1lXMXdLQ0JrYVhJdWVTd2dMU0F4TGpBc0lERXVNQ0FwSUNrZ0tpQlNSVU5KVUZKUFEwRk1YMUJKSUNzZ01DNDFPd29KY21WMGRYSnVJSFpsWXpJb0lIVXNJSFlnS1RzS2ZXQXNJRUptSUQwZ1lDTnBabVJsWmlCRlRsWk5RVkJmVkZsUVJWOURWVUpGWDFWV0Nna2paR1ZtYVc1bElHTjFZbVZWVmw5dFlYaE5hWEJNWlhabGJDQTRMakFLQ1NOa1pXWnBibVVnWTNWaVpWVldYMjFwYmsxcGNFeGxkbVZzSURRdU1Bb0pJMlJsWm1sdVpTQmpkV0psVlZaZmJXRjRWR2xzWlZOcGVtVWdNalUyTGpBS0NTTmtaV1pwYm1VZ1kzVmlaVlZXWDIxcGJsUnBiR1ZUYVhwbElERTJMakFLQ1dac2IyRjBJR2RsZEVaaFkyVW9JSFpsWXpNZ1pHbHlaV04wYVc5dUlDa2dld29KQ1habFl6TWdZV0p6UkdseVpXTjBhVzl1SUQwZ1lXSnpLQ0JrYVhKbFkzUnBiMjRnS1RzS0NRbG1iRzloZENCbVlXTmxJRDBnTFNBeExqQTdDZ2tKYVdZZ0tDQmhZbk5FYVhKbFkzUnBiMjR1ZUNBK0lHRmljMFJwY21WamRHbHZiaTU2SUNrZ2V3b0pDUWxwWmlBb0lHRmljMFJwY21WamRHbHZiaTU0SUQ0Z1lXSnpSR2x5WldOMGFXOXVMbmtnS1FvSkNRa0pabUZqWlNBOUlHUnBjbVZqZEdsdmJpNTRJRDRnTUM0d0lEOGdNQzR3SURvZ015NHdPd29KQ1FsbGJITmxDZ2tKQ1FsbVlXTmxJRDBnWkdseVpXTjBhVzl1TG5rZ1BpQXdMakFnUHlBeExqQWdPaUEwTGpBN0Nna0pmU0JsYkhObElIc0tDUWtKYVdZZ0tDQmhZbk5FYVhKbFkzUnBiMjR1ZWlBK0lHRmljMFJwY21WamRHbHZiaTU1SUNrS0NRa0pDV1poWTJVZ1BTQmthWEpsWTNScGIyNHVlaUErSURBdU1DQS9JREl1TUNBNklEVXVNRHNLQ1FrSlpXeHpaUW9KQ1FrSlptRmpaU0E5SUdScGNtVmpkR2x2Ymk1NUlENGdNQzR3SUQ4Z01TNHdJRG9nTkM0d093b0pDWDBLQ1FseVpYUjFjbTRnWm1GalpUc0tDWDBLQ1habFl6SWdaMlYwVlZZb0lIWmxZek1nWkdseVpXTjBhVzl1TENCbWJHOWhkQ0JtWVdObElDa2dld29KQ1habFl6SWdkWFk3Q2drSmFXWWdLQ0JtWVdObElEMDlJREF1TUNBcElIc0tDUWtKZFhZZ1BTQjJaV015S0NCa2FYSmxZM1JwYjI0dWVpd2daR2x5WldOMGFXOXVMbmtnS1NBdklHRmljeWdnWkdseVpXTjBhVzl1TG5nZ0tUc0tDUWw5SUdWc2MyVWdhV1lnS0NCbVlXTmxJRDA5SURFdU1DQXBJSHNLQ1FrSmRYWWdQU0IyWldNeUtDQXRJR1JwY21WamRHbHZiaTU0TENBdElHUnBjbVZqZEdsdmJpNTZJQ2tnTHlCaFluTW9JR1JwY21WamRHbHZiaTU1SUNrN0Nna0pmU0JsYkhObElHbG1JQ2dnWm1GalpTQTlQU0F5TGpBZ0tTQjdDZ2tKQ1hWMklEMGdkbVZqTWlnZ0xTQmthWEpsWTNScGIyNHVlQ3dnWkdseVpXTjBhVzl1TG5rZ0tTQXZJR0ZpY3lnZ1pHbHlaV04wYVc5dUxub2dLVHNLQ1FsOUlHVnNjMlVnYVdZZ0tDQm1ZV05sSUQwOUlETXVNQ0FwSUhzS0NRa0pkWFlnUFNCMlpXTXlLQ0F0SUdScGNtVmpkR2x2Ymk1NkxDQmthWEpsWTNScGIyNHVlU0FwSUM4Z1lXSnpLQ0JrYVhKbFkzUnBiMjR1ZUNBcE93b0pDWDBnWld4elpTQnBaaUFvSUdaaFkyVWdQVDBnTkM0d0lDa2dld29KQ1FsMWRpQTlJSFpsWXpJb0lDMGdaR2x5WldOMGFXOXVMbmdzSUdScGNtVmpkR2x2Ymk1NklDa2dMeUJoWW5Nb0lHUnBjbVZqZEdsdmJpNTVJQ2s3Q2drSmZTQmxiSE5sSUhzS0NRa0pkWFlnUFNCMlpXTXlLQ0JrYVhKbFkzUnBiMjR1ZUN3Z1pHbHlaV04wYVc5dUxua2dLU0F2SUdGaWN5Z2daR2x5WldOMGFXOXVMbm9nS1RzS0NRbDlDZ2tKY21WMGRYSnVJREF1TlNBcUlDZ2dkWFlnS3lBeExqQWdLVHNLQ1gwS0NYWmxZek1nWW1sc2FXNWxZWEpEZFdKbFZWWW9JSE5oYlhCc1pYSXlSQ0JsYm5aTllYQXNJSFpsWXpNZ1pHbHlaV04wYVc5dUxDQm1iRzloZENCdGFYQkpiblFnS1NCN0Nna0pabXh2WVhRZ1ptRmpaU0E5SUdkbGRFWmhZMlVvSUdScGNtVmpkR2x2YmlBcE93b0pDV1pzYjJGMElHWnBiSFJsY2tsdWRDQTlJRzFoZUNnZ1kzVmlaVlZXWDIxcGJrMXBjRXhsZG1Wc0lDMGdiV2x3U1c1MExDQXdMakFnS1RzS0NRbHRhWEJKYm5RZ1BTQnRZWGdvSUcxcGNFbHVkQ3dnWTNWaVpWVldYMjFwYmsxcGNFeGxkbVZzSUNrN0Nna0pabXh2WVhRZ1ptRmpaVk5wZW1VZ1BTQmxlSEF5S0NCdGFYQkpiblFnS1RzS0NRbG1iRzloZENCMFpYaGxiRk5wZW1VZ1BTQXhMakFnTHlBb0lETXVNQ0FxSUdOMVltVlZWbDl0WVhoVWFXeGxVMmw2WlNBcE93b0pDWFpsWXpJZ2RYWWdQU0JuWlhSVlZpZ2daR2x5WldOMGFXOXVMQ0JtWVdObElDa2dLaUFvSUdaaFkyVlRhWHBsSUMwZ01TNHdJQ2tnS3lBd0xqVTdDZ2tKYVdZZ0tDQm1ZV05sSUQ0Z01pNHdJQ2tnZXdvSkNRbDFkaTU1SUNzOUlHWmhZMlZUYVhwbE93b0pDUWxtWVdObElDMDlJRE11TURzS0NRbDlDZ2tKZFhZdWVDQXJQU0JtWVdObElDb2dabUZqWlZOcGVtVTdDZ2tKYVdZZ0tDQnRhWEJKYm5RZ1BDQmpkV0psVlZaZmJXRjRUV2x3VEdWMlpXd2dLU0I3Q2drSkNYVjJMbmtnS3owZ01pNHdJQ29nWTNWaVpWVldYMjFoZUZScGJHVlRhWHBsT3dvSkNYMEtDUWwxZGk1NUlDczlJR1pwYkhSbGNrbHVkQ0FxSURJdU1DQXFJR04xWW1WVlZsOXRhVzVVYVd4bFUybDZaVHNLQ1FsMWRpNTRJQ3M5SURNdU1DQXFJRzFoZUNnZ01DNHdMQ0JqZFdKbFZWWmZiV0Y0Vkdsc1pWTnBlbVVnTFNBeUxqQWdLaUJtWVdObFUybDZaU0FwT3dvSkNYVjJJQ285SUhSbGVHVnNVMmw2WlRzS0NRbHlaWFIxY200Z2RHVjRkSFZ5WlRKRUtDQmxiblpOWVhBc0lIVjJJQ2t1Y21kaU93b0pmUW9KSTJSbFptbHVaU0J5TUNBeExqQUtDU05rWldacGJtVWdkakFnTUM0ek16a0tDU05rWldacGJtVWdiVEFnTFNBeUxqQUtDU05rWldacGJtVWdjakVnTUM0NENna2paR1ZtYVc1bElIWXhJREF1TWpjMkNna2paR1ZtYVc1bElHMHhJQzBnTVM0d0Nna2paR1ZtYVc1bElISTBJREF1TkFvSkkyUmxabWx1WlNCMk5DQXdMakEwTmdvSkkyUmxabWx1WlNCdE5DQXlMakFLQ1NOa1pXWnBibVVnY2pVZ01DNHpNRFVLQ1NOa1pXWnBibVVnZGpVZ01DNHdNVFlLQ1NOa1pXWnBibVVnYlRVZ015NHdDZ2tqWkdWbWFXNWxJSEkySURBdU1qRUtDU05rWldacGJtVWdkallnTUM0d01ETTRDZ2tqWkdWbWFXNWxJRzAySURRdU1Bb0pabXh2WVhRZ2NtOTFaMmh1WlhOelZHOU5hWEFvSUdac2IyRjBJSEp2ZFdkb2JtVnpjeUFwSUhzS0NRbG1iRzloZENCdGFYQWdQU0F3TGpBN0Nna0phV1lnS0NCeWIzVm5hRzVsYzNNZ1BqMGdjakVnS1NCN0Nna0pDVzFwY0NBOUlDZ2djakFnTFNCeWIzVm5hRzVsYzNNZ0tTQXFJQ2dnYlRFZ0xTQnRNQ0FwSUM4Z0tDQnlNQ0F0SUhJeElDa2dLeUJ0TURzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0J5YjNWbmFHNWxjM01nUGowZ2NqUWdLU0I3Q2drSkNXMXBjQ0E5SUNnZ2NqRWdMU0J5YjNWbmFHNWxjM01nS1NBcUlDZ2diVFFnTFNCdE1TQXBJQzhnS0NCeU1TQXRJSEkwSUNrZ0t5QnRNVHNLQ1FsOUlHVnNjMlVnYVdZZ0tDQnliM1ZuYUc1bGMzTWdQajBnY2pVZ0tTQjdDZ2tKQ1cxcGNDQTlJQ2dnY2pRZ0xTQnliM1ZuYUc1bGMzTWdLU0FxSUNnZ2JUVWdMU0J0TkNBcElDOGdLQ0J5TkNBdElISTFJQ2tnS3lCdE5Ec0tDUWw5SUdWc2MyVWdhV1lnS0NCeWIzVm5hRzVsYzNNZ1BqMGdjallnS1NCN0Nna0pDVzFwY0NBOUlDZ2djalVnTFNCeWIzVm5hRzVsYzNNZ0tTQXFJQ2dnYlRZZ0xTQnROU0FwSUM4Z0tDQnlOU0F0SUhJMklDa2dLeUJ0TlRzS0NRbDlJR1ZzYzJVZ2V3b0pDUWx0YVhBZ1BTQXRJREl1TUNBcUlHeHZaeklvSURFdU1UWWdLaUJ5YjNWbmFHNWxjM01nS1RzSkNYMEtDUWx5WlhSMWNtNGdiV2x3T3dvSmZRb0pkbVZqTkNCMFpYaDBkWEpsUTNWaVpWVldLQ0J6WVcxd2JHVnlNa1FnWlc1MlRXRndMQ0IyWldNeklITmhiWEJzWlVScGNpd2dabXh2WVhRZ2NtOTFaMmh1WlhOeklDa2dld29KQ1dac2IyRjBJRzFwY0NBOUlHTnNZVzF3S0NCeWIzVm5hRzVsYzNOVWIwMXBjQ2dnY205MVoyaHVaWE56SUNrc0lHMHdMQ0JqZFdKbFZWWmZiV0Y0VFdsd1RHVjJaV3dnS1RzS0NRbG1iRzloZENCdGFYQkdJRDBnWm5KaFkzUW9JRzFwY0NBcE93b0pDV1pzYjJGMElHMXBjRWx1ZENBOUlHWnNiMjl5S0NCdGFYQWdLVHNLQ1FsMlpXTXpJR052Ykc5eU1DQTlJR0pwYkdsdVpXRnlRM1ZpWlZWV0tDQmxiblpOWVhBc0lITmhiWEJzWlVScGNpd2diV2x3U1c1MElDazdDZ2tKYVdZZ0tDQnRhWEJHSUQwOUlEQXVNQ0FwSUhzS0NRa0pjbVYwZFhKdUlIWmxZelFvSUdOdmJHOXlNQ3dnTVM0d0lDazdDZ2tKZlNCbGJITmxJSHNLQ1FrSmRtVmpNeUJqYjJ4dmNqRWdQU0JpYVd4cGJtVmhja04xWW1WVlZpZ2daVzUyVFdGd0xDQnpZVzF3YkdWRWFYSXNJRzFwY0VsdWRDQXJJREV1TUNBcE93b0pDUWx5WlhSMWNtNGdkbVZqTkNnZ2JXbDRLQ0JqYjJ4dmNqQXNJR052Ykc5eU1Td2diV2x3UmlBcExDQXhMakFnS1RzS0NRbDlDZ2w5Q2lObGJtUnBabUFzSUhwbUlEMGdZSFpsWXpNZ2RISmhibk5tYjNKdFpXUk9iM0p0WVd3Z1BTQnZZbXBsWTNST2IzSnRZV3c3Q2lOcFptUmxaaUJWVTBWZlNVNVRWRUZPUTBsT1J3b0piV0YwTXlCdElEMGdiV0YwTXlnZ2FXNXpkR0Z1WTJWTllYUnlhWGdnS1RzS0NYUnlZVzV6Wm05eWJXVmtUbTl5YldGc0lDODlJSFpsWXpNb0lHUnZkQ2dnYlZzZ01DQmRMQ0J0V3lBd0lGMGdLU3dnWkc5MEtDQnRXeUF4SUYwc0lHMWJJREVnWFNBcExDQmtiM1FvSUcxYklESWdYU3dnYlZzZ01pQmRJQ2tnS1RzS0NYUnlZVzV6Wm05eWJXVmtUbTl5YldGc0lEMGdiU0FxSUhSeVlXNXpabTl5YldWa1RtOXliV0ZzT3dvalpXNWthV1lLZEhKaGJuTm1iM0p0WldST2IzSnRZV3dnUFNCdWIzSnRZV3hOWVhSeWFYZ2dLaUIwY21GdWMyWnZjbTFsWkU1dmNtMWhiRHNLSTJsbVpHVm1JRVpNU1ZCZlUwbEVSVVFLQ1hSeVlXNXpabTl5YldWa1RtOXliV0ZzSUQwZ0xTQjBjbUZ1YzJadmNtMWxaRTV2Y20xaGJEc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZWRUZPUjBWT1ZBb0pkbVZqTXlCMGNtRnVjMlp2Y20xbFpGUmhibWRsYm5RZ1BTQW9JRzF2WkdWc1ZtbGxkMDFoZEhKcGVDQXFJSFpsWXpRb0lHOWlhbVZqZEZSaGJtZGxiblFzSURBdU1DQXBJQ2t1ZUhsNk93b0pJMmxtWkdWbUlFWk1TVkJmVTBsRVJVUUtDUWwwY21GdWMyWnZjbTFsWkZSaGJtZGxiblFnUFNBdElIUnlZVzV6Wm05eWJXVmtWR0Z1WjJWdWREc0tDU05sYm1ScFpnb2paVzVrYVdaZ0xDQlZaaUE5SUdBamFXWmtaV1lnVlZORlgwUkpVMUJNUVVORlRVVk9WRTFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ1pHbHpjR3hoWTJWdFpXNTBUV0Z3T3dvSmRXNXBabTl5YlNCbWJHOWhkQ0JrYVhOd2JHRmpaVzFsYm5SVFkyRnNaVHNLQ1hWdWFXWnZjbTBnWm14dllYUWdaR2x6Y0d4aFkyVnRaVzUwUW1saGN6c0tJMlZ1WkdsbVlDd2dUMllnUFNCZ0kybG1aR1ZtSUZWVFJWOUVTVk5RVEVGRFJVMUZUbFJOUVZBS0NYUnlZVzV6Wm05eWJXVmtJQ3M5SUc1dmNtMWhiR2w2WlNnZ2IySnFaV04wVG05eWJXRnNJQ2tnS2lBb0lIUmxlSFIxY21VeVJDZ2daR2x6Y0d4aFkyVnRaVzUwVFdGd0xDQjJWWFlnS1M1NElDb2daR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdLeUJrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJQ2s3Q2lObGJtUnBabUFzSUVobUlEMGdZQ05wWm1SbFppQlZVMFZmUlUxSlUxTkpWa1ZOUVZBS0NYWmxZelFnWlcxcGMzTnBkbVZEYjJ4dmNpQTlJSFJsZUhSMWNtVXlSQ2dnWlcxcGMzTnBkbVZOWVhBc0lIWlZkaUFwT3dvSlpXMXBjM05wZG1WRGIyeHZjaTV5WjJJZ1BTQmxiV2x6YzJsMlpVMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lHVnRhWE56YVhabFEyOXNiM0lnS1M1eVoySTdDZ2wwYjNSaGJFVnRhWE56YVhabFVtRmthV0Z1WTJVZ0tqMGdaVzFwYzNOcGRtVkRiMnh2Y2k1eVoySTdDaU5sYm1ScFptQXNJR3RtSUQwZ1lDTnBabVJsWmlCVlUwVmZSVTFKVTFOSlZrVk5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdWdGFYTnphWFpsVFdGd093b2paVzVrYVdaZ0xDQkhaaUE5SUNKbmJGOUdjbUZuUTI5c2IzSWdQU0JzYVc1bFlYSlViMDkxZEhCMWRGUmxlR1ZzS0NCbmJGOUdjbUZuUTI5c2IzSWdLVHNpTENCV1ppQTlJR0IyWldNMElFeHBibVZoY2xSdlRHbHVaV0Z5S0NCcGJpQjJaV00wSUhaaGJIVmxJQ2tnZXdvSmNtVjBkWEp1SUhaaGJIVmxPd3A5Q25abFl6UWdjMUpIUWxSdlRHbHVaV0Z5S0NCcGJpQjJaV00wSUhaaGJIVmxJQ2tnZXdvSmNtVjBkWEp1SUhabFl6UW9JRzFwZUNnZ2NHOTNLQ0IyWVd4MVpTNXlaMklnS2lBd0xqazBOemcyTnpJNU9EWWdLeUIyWldNektDQXdMakExTWpFek1qY3dNVFFnS1N3Z2RtVmpNeWdnTWk0MElDa2dLU3dnZG1Gc2RXVXVjbWRpSUNvZ01DNHdOemN6T1Rrek9EQTRMQ0IyWldNektDQnNaWE56VkdoaGJrVnhkV0ZzS0NCMllXeDFaUzV5WjJJc0lIWmxZek1vSURBdU1EUXdORFVnS1NBcElDa2dLU3dnZG1Gc2RXVXVZU0FwT3dwOUNuWmxZelFnVEdsdVpXRnlWRzl6VWtkQ0tDQnBiaUIyWldNMElIWmhiSFZsSUNrZ2V3b0pjbVYwZFhKdUlIWmxZelFvSUcxcGVDZ2djRzkzS0NCMllXeDFaUzV5WjJJc0lIWmxZek1vSURBdU5ERTJOallnS1NBcElDb2dNUzR3TlRVZ0xTQjJaV016S0NBd0xqQTFOU0FwTENCMllXeDFaUzV5WjJJZ0tpQXhNaTQ1TWl3Z2RtVmpNeWdnYkdWemMxUm9ZVzVGY1hWaGJDZ2dkbUZzZFdVdWNtZGlMQ0IyWldNektDQXdMakF3TXpFek1EZ2dLU0FwSUNrZ0tTd2dkbUZzZFdVdVlTQXBPd3A5WUN3Z1YyWWdQU0JnSTJsbVpHVm1JRlZUUlY5RlRsWk5RVkFLQ1NOcFptUmxaaUJGVGxaZlYwOVNURVJRVDFNS0NRbDJaV016SUdOaGJXVnlZVlJ2Um5KaFp6c0tDUWxwWmlBb0lHbHpUM0owYUc5bmNtRndhR2xqSUNrZ2V3b0pDUWxqWVcxbGNtRlViMFp5WVdjZ1BTQnViM0p0WVd4cGVtVW9JSFpsWXpNb0lDMGdkbWxsZDAxaGRISnBlRnNnTUNCZFd5QXlJRjBzSUMwZ2RtbGxkMDFoZEhKcGVGc2dNU0JkV3lBeUlGMHNJQzBnZG1sbGQwMWhkSEpwZUZzZ01pQmRXeUF5SUYwZ0tTQXBPd29KQ1gwZ1pXeHpaU0I3Q2drSkNXTmhiV1Z5WVZSdlJuSmhaeUE5SUc1dmNtMWhiR2w2WlNnZ2RsZHZjbXhrVUc5emFYUnBiMjRnTFNCallXMWxjbUZRYjNOcGRHbHZiaUFwT3dvSkNYMEtDUWwyWldNeklIZHZjbXhrVG05eWJXRnNJRDBnYVc1MlpYSnpaVlJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnYm05eWJXRnNMQ0IyYVdWM1RXRjBjbWw0SUNrN0Nna0pJMmxtWkdWbUlFVk9WazFCVUY5TlQwUkZYMUpGUmt4RlExUkpUMDRLQ1FrSmRtVmpNeUJ5Wldac1pXTjBWbVZqSUQwZ2NtVm1iR1ZqZENnZ1kyRnRaWEpoVkc5R2NtRm5MQ0IzYjNKc1pFNXZjbTFoYkNBcE93b0pDU05sYkhObENna0pDWFpsWXpNZ2NtVm1iR1ZqZEZabFl5QTlJSEpsWm5KaFkzUW9JR05oYldWeVlWUnZSbkpoWnl3Z2QyOXliR1JPYjNKdFlXd3NJSEpsWm5KaFkzUnBiMjVTWVhScGJ5QXBPd29KQ1NObGJtUnBaZ29KSTJWc2MyVUtDUWwyWldNeklISmxabXhsWTNSV1pXTWdQU0IyVW1WbWJHVmpkRHNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRVZPVmsxQlVGOVVXVkJGWDBOVlFrVUtDUWwyWldNMElHVnVka052Ykc5eUlEMGdkR1Y0ZEhWeVpVTjFZbVVvSUdWdWRrMWhjQ3dnZG1Wak15Z2dabXhwY0VWdWRrMWhjQ0FxSUhKbFpteGxZM1JXWldNdWVDd2djbVZtYkdWamRGWmxZeTU1ZWlBcElDazdDZ2tKWlc1MlEyOXNiM0lnUFNCbGJuWk5ZWEJVWlhobGJGUnZUR2x1WldGeUtDQmxiblpEYjJ4dmNpQXBPd29KSTJWc2FXWWdaR1ZtYVc1bFpDZ2dSVTVXVFVGUVgxUlpVRVZmUTFWQ1JWOVZWaUFwQ2drSmRtVmpOQ0JsYm5aRGIyeHZjaUE5SUhSbGVIUjFjbVZEZFdKbFZWWW9JR1Z1ZGsxaGNDd2djbVZtYkdWamRGWmxZeXdnTUM0d0lDazdDZ2tqWld4elpRb0pDWFpsWXpRZ1pXNTJRMjlzYjNJZ1BTQjJaV00wS0NBd0xqQWdLVHNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRVZPVmsxQlVGOUNURVZPUkVsT1IxOU5WVXhVU1ZCTVdRb0pDVzkxZEdkdmFXNW5UR2xuYUhRZ1BTQnRhWGdvSUc5MWRHZHZhVzVuVEdsbmFIUXNJRzkxZEdkdmFXNW5UR2xuYUhRZ0tpQmxiblpEYjJ4dmNpNTRlWG9zSUhOd1pXTjFiR0Z5VTNSeVpXNW5kR2dnS2lCeVpXWnNaV04wYVhacGRIa2dLVHNLQ1NObGJHbG1JR1JsWm1sdVpXUW9JRVZPVmsxQlVGOUNURVZPUkVsT1IxOU5TVmdnS1FvSkNXOTFkR2R2YVc1blRHbG5hSFFnUFNCdGFYZ29JRzkxZEdkdmFXNW5UR2xuYUhRc0lHVnVka052Ykc5eUxuaDVlaXdnYzNCbFkzVnNZWEpUZEhKbGJtZDBhQ0FxSUhKbFpteGxZM1JwZG1sMGVTQXBPd29KSTJWc2FXWWdaR1ZtYVc1bFpDZ2dSVTVXVFVGUVgwSk1SVTVFU1U1SFgwRkVSQ0FwQ2drSmIzVjBaMjlwYm1kTWFXZG9kQ0FyUFNCbGJuWkRiMnh2Y2k1NGVYb2dLaUJ6Y0dWamRXeGhjbE4wY21WdVozUm9JQ29nY21WbWJHVmpkR2wyYVhSNU93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lIRm1JRDBnWUNOcFptUmxaaUJWVTBWZlJVNVdUVUZRQ2dsMWJtbG1iM0p0SUdac2IyRjBJR1Z1ZGsxaGNFbHVkR1Z1YzJsMGVUc0tDWFZ1YVdadmNtMGdabXh2WVhRZ1pteHBjRVZ1ZGsxaGNEc0tDU05wWm1SbFppQkZUbFpOUVZCZlZGbFFSVjlEVlVKRkNna0pkVzVwWm05eWJTQnpZVzF3YkdWeVEzVmlaU0JsYm5aTllYQTdDZ2tqWld4elpRb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR1Z1ZGsxaGNEc0tDU05sYm1ScFpnb0pDaU5sYm1ScFptQXNJRmhtSUQwZ1lDTnBabVJsWmlCVlUwVmZSVTVXVFVGUUNnbDFibWxtYjNKdElHWnNiMkYwSUhKbFpteGxZM1JwZG1sMGVUc0tDU05wWmlCa1pXWnBibVZrS0NCVlUwVmZRbFZOVUUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZWVFJWOU9UMUpOUVV4TlFWQWdLU0I4ZkNCa1pXWnBibVZrS0NCUVNFOU9SeUFwQ2drSkkyUmxabWx1WlNCRlRsWmZWMDlTVEVSUVQxTUtDU05sYm1ScFpnb0pJMmxtWkdWbUlFVk9WbDlYVDFKTVJGQlBVd29KQ1haaGNubHBibWNnZG1Wak15QjJWMjl5YkdSUWIzTnBkR2x2YmpzS0NRbDFibWxtYjNKdElHWnNiMkYwSUhKbFpuSmhZM1JwYjI1U1lYUnBienNLQ1NObGJITmxDZ2tKZG1GeWVXbHVaeUIyWldNeklIWlNaV1pzWldOME93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lFcG1JRDBnWUNOcFptUmxaaUJWVTBWZlJVNVdUVUZRQ2dramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBKVlRWQk5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmVGs5U1RVRk1UVUZRSUNrZ2ZIeGtaV1pwYm1Wa0tDQlFTRTlPUnlBcENna0pJMlJsWm1sdVpTQkZUbFpmVjA5U1RFUlFUMU1LQ1NObGJtUnBaZ29KSTJsbVpHVm1JRVZPVmw5WFQxSk1SRkJQVXdvSkNRb0pDWFpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JRYjNOcGRHbHZianNLQ1NObGJITmxDZ2tKZG1GeWVXbHVaeUIyWldNeklIWlNaV1pzWldOME93b0pDWFZ1YVdadmNtMGdabXh2WVhRZ2NtVm1jbUZqZEdsdmJsSmhkR2x2T3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUZsbUlEMGdZQ05wWm1SbFppQlZVMFZmUlU1V1RVRlFDZ2tqYVdaa1pXWWdSVTVXWDFkUFVreEVVRTlUQ2drSmRsZHZjbXhrVUc5emFYUnBiMjRnUFNCM2IzSnNaRkJ2YzJsMGFXOXVMbmg1ZWpzS0NTTmxiSE5sQ2drSmRtVmpNeUJqWVcxbGNtRlViMVpsY25SbGVEc0tDUWxwWmlBb0lHbHpUM0owYUc5bmNtRndhR2xqSUNrZ2V3b0pDUWxqWVcxbGNtRlViMVpsY25SbGVDQTlJRzV2Y20xaGJHbDZaU2dnZG1Wak15Z2dMU0IyYVdWM1RXRjBjbWw0V3lBd0lGMWJJRElnWFN3Z0xTQjJhV1YzVFdGMGNtbDRXeUF4SUYxYklESWdYU3dnTFNCMmFXVjNUV0YwY21sNFd5QXlJRjFiSURJZ1hTQXBJQ2s3Q2drSmZTQmxiSE5sSUhzS0NRa0pZMkZ0WlhKaFZHOVdaWEowWlhnZ1BTQnViM0p0WVd4cGVtVW9JSGR2Y214a1VHOXphWFJwYjI0dWVIbDZJQzBnWTJGdFpYSmhVRzl6YVhScGIyNGdLVHNLQ1FsOUNna0pkbVZqTXlCM2IzSnNaRTV2Y20xaGJDQTlJR2x1ZG1WeWMyVlVjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9JSFJ5WVc1elptOXliV1ZrVG05eWJXRnNMQ0IyYVdWM1RXRjBjbWw0SUNrN0Nna0pJMmxtWkdWbUlFVk9WazFCVUY5TlQwUkZYMUpGUmt4RlExUkpUMDRLQ1FrSmRsSmxabXhsWTNRZ1BTQnlaV1pzWldOMEtDQmpZVzFsY21GVWIxWmxjblJsZUN3Z2QyOXliR1JPYjNKdFlXd2dLVHNLQ1FralpXeHpaUW9KQ1FsMlVtVm1iR1ZqZENBOUlISmxabkpoWTNRb0lHTmhiV1Z5WVZSdlZtVnlkR1Y0TENCM2IzSnNaRTV2Y20xaGJDd2djbVZtY21GamRHbHZibEpoZEdsdklDazdDZ2tKSTJWdVpHbG1DZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dXbVlnUFNCZ0kybG1aR1ZtSUZWVFJWOUdUMGNLQ1haR2IyZEVaWEIwYUNBOUlDMGdiWFpRYjNOcGRHbHZiaTU2T3dvalpXNWthV1pnTENBa1ppQTlJR0FqYVdaa1pXWWdWVk5GWDBaUFJ3b0pkbUZ5ZVdsdVp5Qm1iRzloZENCMlJtOW5SR1Z3ZEdnN0NpTmxibVJwWm1Bc0lHcG1JRDBnWUNOcFptUmxaaUJWVTBWZlJrOUhDZ2tqYVdaa1pXWWdSazlIWDBWWVVESUtDUWxtYkc5aGRDQm1iMmRHWVdOMGIzSWdQU0F4TGpBZ0xTQmxlSEFvSUMwZ1ptOW5SR1Z1YzJsMGVTQXFJR1p2WjBSbGJuTnBkSGtnS2lCMlJtOW5SR1Z3ZEdnZ0tpQjJSbTluUkdWd2RHZ2dLVHNLQ1NObGJITmxDZ2tKWm14dllYUWdabTluUm1GamRHOXlJRDBnYzIxdmIzUm9jM1JsY0NnZ1ptOW5UbVZoY2l3Z1ptOW5SbUZ5TENCMlJtOW5SR1Z3ZEdnZ0tUc0tDU05sYm1ScFpnb0paMnhmUm5KaFowTnZiRzl5TG5KbllpQTlJRzFwZUNnZ1oyeGZSbkpoWjBOdmJHOXlMbkpuWWl3Z1ptOW5RMjlzYjNJc0lHWnZaMFpoWTNSdmNpQXBPd29qWlc1a2FXWmdMQ0JSWmlBOUlHQWphV1prWldZZ1ZWTkZYMFpQUndvSmRXNXBabTl5YlNCMlpXTXpJR1p2WjBOdmJHOXlPd29KZG1GeWVXbHVaeUJtYkc5aGRDQjJSbTluUkdWd2RHZzdDZ2tqYVdaa1pXWWdSazlIWDBWWVVESUtDUWwxYm1sbWIzSnRJR1pzYjJGMElHWnZaMFJsYm5OcGRIazdDZ2tqWld4elpRb0pDWFZ1YVdadmNtMGdabXh2WVhRZ1ptOW5UbVZoY2pzS0NRbDFibWxtYjNKdElHWnNiMkYwSUdadlowWmhjanNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JMWmlBOUlHQWphV1prWldZZ1ZWTkZYMGRTUVVSSlJVNVVUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCbmNtRmthV1Z1ZEUxaGNEc0tJMlZ1WkdsbUNuWmxZek1nWjJWMFIzSmhaR2xsYm5SSmNuSmhaR2xoYm1ObEtDQjJaV016SUc1dmNtMWhiQ3dnZG1Wak15QnNhV2RvZEVScGNtVmpkR2x2YmlBcElIc0tDV1pzYjJGMElHUnZkRTVNSUQwZ1pHOTBLQ0J1YjNKdFlXd3NJR3hwWjJoMFJHbHlaV04wYVc5dUlDazdDZ2wyWldNeUlHTnZiM0prSUQwZ2RtVmpNaWdnWkc5MFRrd2dLaUF3TGpVZ0t5QXdMalVzSURBdU1DQXBPd29KSTJsbVpHVm1JRlZUUlY5SFVrRkVTVVZPVkUxQlVBb0pDWEpsZEhWeWJpQjJaV016S0NCMFpYaDBkWEpsTWtRb0lHZHlZV1JwWlc1MFRXRndMQ0JqYjI5eVpDQXBMbklnS1RzS0NTTmxiSE5sQ2drSmNtVjBkWEp1SUNnZ1kyOXZjbVF1ZUNBOElEQXVOeUFwSUQ4Z2RtVmpNeWdnTUM0M0lDa2dPaUIyWldNektDQXhMakFnS1RzS0NTTmxibVJwWmdwOVlDd2daWEFnUFNCZ0kybG1aR1ZtSUZWVFJWOU1TVWRJVkUxQlVBb0pkbVZqTkNCc2FXZG9kRTFoY0ZSbGVHVnNJRDBnZEdWNGRIVnlaVEpFS0NCc2FXZG9kRTFoY0N3Z2RsVjJNaUFwT3dvSmRtVmpNeUJzYVdkb2RFMWhjRWx5Y21Ga2FXRnVZMlVnUFNCc2FXZG9kRTFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JR3hwWjJoMFRXRndWR1Y0Wld3Z0tTNXlaMklnS2lCc2FXZG9kRTFoY0VsdWRHVnVjMmwwZVRzS0NTTnBabTVrWldZZ1VFaFpVMGxEUVV4TVdWOURUMUpTUlVOVVgweEpSMGhVVXdvSkNXeHBaMmgwVFdGd1NYSnlZV1JwWVc1alpTQXFQU0JRU1RzS0NTTmxibVJwWmdvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3M5SUd4cFoyaDBUV0Z3U1hKeVlXUnBZVzVqWlRzS0kyVnVaR2xtWUN3Z2RIQWdQU0JnSTJsbVpHVm1JRlZUUlY5TVNVZElWRTFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2JHbG5hSFJOWVhBN0NnbDFibWxtYjNKdElHWnNiMkYwSUd4cFoyaDBUV0Z3U1c1MFpXNXphWFI1T3dvalpXNWthV1pnTENCdWNDQTlJR0IyWldNeklHUnBabVoxYzJVZ1BTQjJaV016S0NBeExqQWdLVHNLUjJWdmJXVjBjbWxqUTI5dWRHVjRkQ0JuWlc5dFpYUnllVHNLWjJWdmJXVjBjbmt1Y0c5emFYUnBiMjRnUFNCdGRsQnZjMmwwYVc5dUxuaDVlanNLWjJWdmJXVjBjbmt1Ym05eWJXRnNJRDBnYm05eWJXRnNhWHBsS0NCMGNtRnVjMlp2Y20xbFpFNXZjbTFoYkNBcE93cG5aVzl0WlhSeWVTNTJhV1YzUkdseUlEMGdLQ0JwYzA5eWRHaHZaM0poY0docFl5QXBJRDhnZG1Wak15Z2dNQ3dnTUN3Z01TQXBJRG9nYm05eWJXRnNhWHBsS0NBdGJYWlFiM05wZEdsdmJpNTRlWG9nS1RzS1IyVnZiV1YwY21salEyOXVkR1Y0ZENCaVlXTnJSMlZ2YldWMGNuazdDbUpoWTJ0SFpXOXRaWFJ5ZVM1d2IzTnBkR2x2YmlBOUlHZGxiMjFsZEhKNUxuQnZjMmwwYVc5dU93cGlZV05yUjJWdmJXVjBjbmt1Ym05eWJXRnNJRDBnTFdkbGIyMWxkSEo1TG01dmNtMWhiRHNLWW1GamEwZGxiMjFsZEhKNUxuWnBaWGRFYVhJZ1BTQm5aVzl0WlhSeWVTNTJhV1YzUkdseU93cDJUR2xuYUhSR2NtOXVkQ0E5SUhabFl6TW9JREF1TUNBcE93cDJTVzVrYVhKbFkzUkdjbTl1ZENBOUlIWmxZek1vSURBdU1DQXBPd29qYVdaa1pXWWdSRTlWUWt4RlgxTkpSRVZFQ2dsMlRHbG5hSFJDWVdOcklEMGdkbVZqTXlnZ01DNHdJQ2s3Q2dsMlNXNWthWEpsWTNSQ1lXTnJJRDBnZG1Wak15Z2dNQzR3SUNrN0NpTmxibVJwWmdwSmJtTnBaR1Z1ZEV4cFoyaDBJR1JwY21WamRFeHBaMmgwT3dwbWJHOWhkQ0JrYjNST1REc0tkbVZqTXlCa2FYSmxZM1JNYVdkb2RFTnZiRzl5WDBScFptWjFjMlU3Q25aSmJtUnBjbVZqZEVaeWIyNTBJQ3M5SUdkbGRFRnRZbWxsYm5STWFXZG9kRWx5Y21Ga2FXRnVZMlVvSUdGdFltbGxiblJNYVdkb2RFTnZiRzl5SUNrN0NuWkpibVJwY21WamRFWnliMjUwSUNzOUlHZGxkRXhwWjJoMFVISnZZbVZKY25KaFpHbGhibU5sS0NCc2FXZG9kRkJ5YjJKbExDQm5aVzl0WlhSeWVTNXViM0p0WVd3Z0tUc0tJMmxtWkdWbUlFUlBWVUpNUlY5VFNVUkZSQW9KZGtsdVpHbHlaV04wUW1GamF5QXJQU0JuWlhSQmJXSnBaVzUwVEdsbmFIUkpjbkpoWkdsaGJtTmxLQ0JoYldKcFpXNTBUR2xuYUhSRGIyeHZjaUFwT3dvSmRrbHVaR2x5WldOMFFtRmpheUFyUFNCblpYUk1hV2RvZEZCeWIySmxTWEp5WVdScFlXNWpaU2dnYkdsbmFIUlFjbTlpWlN3Z1ltRmphMGRsYjIxbGRISjVMbTV2Y20xaGJDQXBPd29qWlc1a2FXWUtJMmxtSUU1VlRWOVFUMGxPVkY5TVNVZElWRk1nUGlBd0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlVFOUpUbFJmVEVsSFNGUlRPeUJwSUNzcklDa2dld29KQ1dkbGRGQnZhVzUwVEdsbmFIUkpibVp2S0NCd2IybHVkRXhwWjJoMGMxc2dhU0JkTENCblpXOXRaWFJ5ZVN3Z1pHbHlaV04wVEdsbmFIUWdLVHNLQ1Fsa2IzUk9UQ0E5SUdSdmRDZ2daMlZ2YldWMGNua3VibTl5YldGc0xDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1RzS0NRbGthWEpsWTNSTWFXZG9kRU52Ykc5eVgwUnBabVoxYzJVZ1BTQmthWEpsWTNSTWFXZG9kQzVqYjJ4dmNqc0tDUWwyVEdsbmFIUkdjbTl1ZENBclBTQnpZWFIxY21GMFpTZ2daRzkwVGt3Z0tTQXFJR1JwY21WamRFeHBaMmgwUTI5c2IzSmZSR2xtWm5WelpUc0tDUWtqYVdaa1pXWWdSRTlWUWt4RlgxTkpSRVZFQ2drSkNYWk1hV2RvZEVKaFkyc2dLejBnYzJGMGRYSmhkR1VvSUMwZ1pHOTBUa3dnS1NBcUlHUnBjbVZqZEV4cFoyaDBRMjlzYjNKZlJHbG1ablZ6WlRzS0NRa2paVzVrYVdZS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0NpTmxibVJwWmdvamFXWWdUbFZOWDFOUVQxUmZURWxIU0ZSVElENGdNQW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMU5RVDFSZlRFbEhTRlJUT3lCcElDc3JJQ2tnZXdvSkNXZGxkRk53YjNSTWFXZG9kRWx1Wm04b0lITndiM1JNYVdkb2RITmJJR2tnWFN3Z1oyVnZiV1YwY25rc0lHUnBjbVZqZEV4cFoyaDBJQ2s3Q2drSlpHOTBUa3dnUFNCa2IzUW9JR2RsYjIxbGRISjVMbTV2Y20xaGJDd2daR2x5WldOMFRHbG5hSFF1WkdseVpXTjBhVzl1SUNrN0Nna0paR2x5WldOMFRHbG5hSFJEYjJ4dmNsOUVhV1ptZFhObElEMGdaR2x5WldOMFRHbG5hSFF1WTI5c2IzSTdDZ2tKZGt4cFoyaDBSbkp2Ym5RZ0t6MGdjMkYwZFhKaGRHVW9JR1J2ZEU1TUlDa2dLaUJrYVhKbFkzUk1hV2RvZEVOdmJHOXlYMFJwWm1aMWMyVTdDZ2tKSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSkNRbDJUR2xuYUhSQ1lXTnJJQ3M5SUhOaGRIVnlZWFJsS0NBdElHUnZkRTVNSUNrZ0tpQmthWEpsWTNSTWFXZG9kRU52Ykc5eVgwUnBabVoxYzJVN0Nna0pJMlZ1WkdsbUNnbDlDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDJWdVpBb2paVzVrYVdZS0kybG1JRTVWVFY5RVNWSmZURWxIU0ZSVElENGdNQW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMFJKVWw5TVNVZElWRk03SUdrZ0t5c2dLU0I3Q2drSloyVjBSR2x5WldOMGFXOXVZV3hNYVdkb2RFbHVabThvSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJ6V3lCcElGMHNJR2RsYjIxbGRISjVMQ0JrYVhKbFkzUk1hV2RvZENBcE93b0pDV1J2ZEU1TUlEMGdaRzkwS0NCblpXOXRaWFJ5ZVM1dWIzSnRZV3dzSUdScGNtVmpkRXhwWjJoMExtUnBjbVZqZEdsdmJpQXBPd29KQ1dScGNtVmpkRXhwWjJoMFEyOXNiM0pmUkdsbVpuVnpaU0E5SUdScGNtVmpkRXhwWjJoMExtTnZiRzl5T3dvSkNYWk1hV2RvZEVaeWIyNTBJQ3M5SUhOaGRIVnlZWFJsS0NCa2IzUk9UQ0FwSUNvZ1pHbHlaV04wVEdsbmFIUkRiMnh2Y2w5RWFXWm1kWE5sT3dvSkNTTnBabVJsWmlCRVQxVkNURVZmVTBsRVJVUUtDUWtKZGt4cFoyaDBRbUZqYXlBclBTQnpZWFIxY21GMFpTZ2dMU0JrYjNST1RDQXBJQ29nWkdseVpXTjBUR2xuYUhSRGIyeHZjbDlFYVdabWRYTmxPd29KQ1NObGJtUnBaZ29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLSTJWdVpHbG1DaU5wWmlCT1ZVMWZTRVZOU1Y5TVNVZElWRk1nUGlBd0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlNFVk5TVjlNU1VkSVZGTTdJR2tnS3lzZ0tTQjdDZ2tKZGtsdVpHbHlaV04wUm5KdmJuUWdLejBnWjJWMFNHVnRhWE53YUdWeVpVeHBaMmgwU1hKeVlXUnBZVzVqWlNnZ2FHVnRhWE53YUdWeVpVeHBaMmgwYzFzZ2FTQmRMQ0JuWlc5dFpYUnllUzV1YjNKdFlXd2dLVHNLQ1FramFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNna0pDWFpKYm1ScGNtVmpkRUpoWTJzZ0t6MGdaMlYwU0dWdGFYTndhR1Z5WlV4cFoyaDBTWEp5WVdScFlXNWpaU2dnYUdWdGFYTndhR1Z5WlV4cFoyaDBjMXNnYVNCZExDQmlZV05yUjJWdmJXVjBjbmt1Ym05eWJXRnNJQ2s3Q2drSkkyVnVaR2xtQ2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvalpXNWthV1pnTENCcGNDQTlJR0IxYm1sbWIzSnRJR0p2YjJ3Z2NtVmpaV2wyWlZOb1lXUnZkenNLZFc1cFptOXliU0IyWldNeklHRnRZbWxsYm5STWFXZG9kRU52Ykc5eU93cDFibWxtYjNKdElIWmxZek1nYkdsbmFIUlFjbTlpWlZzZ09TQmRPd3AyWldNeklITm9SMlYwU1hKeVlXUnBZVzVqWlVGMEtDQnBiaUIyWldNeklHNXZjbTFoYkN3Z2FXNGdkbVZqTXlCemFFTnZaV1ptYVdOcFpXNTBjMXNnT1NCZElDa2dld29KWm14dllYUWdlQ0E5SUc1dmNtMWhiQzU0TENCNUlEMGdibTl5YldGc0xua3NJSG9nUFNCdWIzSnRZV3d1ZWpzS0NYWmxZek1nY21WemRXeDBJRDBnYzJoRGIyVm1abWxqYVdWdWRITmJJREFnWFNBcUlEQXVPRGcyTWpJM093b0pjbVZ6ZFd4MElDczlJSE5vUTI5bFptWnBZMmxsYm5Seld5QXhJRjBnS2lBeUxqQWdLaUF3TGpVeE1UWTJOQ0FxSUhrN0NnbHlaWE4xYkhRZ0t6MGdjMmhEYjJWbVptbGphV1Z1ZEhOYklESWdYU0FxSURJdU1DQXFJREF1TlRFeE5qWTBJQ29nZWpzS0NYSmxjM1ZzZENBclBTQnphRU52WldabWFXTnBaVzUwYzFzZ015QmRJQ29nTWk0d0lDb2dNQzQxTVRFMk5qUWdLaUI0T3dvSmNtVnpkV3gwSUNzOUlITm9RMjlsWm1acFkybGxiblJ6V3lBMElGMGdLaUF5TGpBZ0tpQXdMalF5T1RBME15QXFJSGdnS2lCNU93b0pjbVZ6ZFd4MElDczlJSE5vUTI5bFptWnBZMmxsYm5Seld5QTFJRjBnS2lBeUxqQWdLaUF3TGpReU9UQTBNeUFxSUhrZ0tpQjZPd29KY21WemRXeDBJQ3M5SUhOb1EyOWxabVpwWTJsbGJuUnpXeUEySUYwZ0tpQW9JREF1TnpRek1USTFJQ29nZWlBcUlIb2dMU0F3TGpJME56Y3dPQ0FwT3dvSmNtVnpkV3gwSUNzOUlITm9RMjlsWm1acFkybGxiblJ6V3lBM0lGMGdLaUF5TGpBZ0tpQXdMalF5T1RBME15QXFJSGdnS2lCNk93b0pjbVZ6ZFd4MElDczlJSE5vUTI5bFptWnBZMmxsYm5Seld5QTRJRjBnS2lBd0xqUXlPVEEwTXlBcUlDZ2dlQ0FxSUhnZ0xTQjVJQ29nZVNBcE93b0pjbVYwZFhKdUlISmxjM1ZzZERzS2ZRcDJaV016SUdkbGRFeHBaMmgwVUhKdlltVkpjbkpoWkdsaGJtTmxLQ0JqYjI1emRDQnBiaUIyWldNeklHeHBaMmgwVUhKdlltVmJJRGtnWFN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd2dLU0I3Q2dsMlpXTXpJSGR2Y214a1RtOXliV0ZzSUQwZ2FXNTJaWEp6WlZSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2JtOXliV0ZzTENCMmFXVjNUV0YwY21sNElDazdDZ2wyWldNeklHbHljbUZrYVdGdVkyVWdQU0J6YUVkbGRFbHljbUZrYVdGdVkyVkJkQ2dnZDI5eWJHUk9iM0p0WVd3c0lHeHBaMmgwVUhKdlltVWdLVHNLQ1hKbGRIVnliaUJwY25KaFpHbGhibU5sT3dwOUNuWmxZek1nWjJWMFFXMWlhV1Z1ZEV4cFoyaDBTWEp5WVdScFlXNWpaU2dnWTI5dWMzUWdhVzRnZG1Wak15QmhiV0pwWlc1MFRHbG5hSFJEYjJ4dmNpQXBJSHNLQ1habFl6TWdhWEp5WVdScFlXNWpaU0E5SUdGdFltbGxiblJNYVdkb2RFTnZiRzl5T3dvSmNtVjBkWEp1SUdseWNtRmthV0Z1WTJVN0NuMEtabXh2WVhRZ1oyVjBSR2x6ZEdGdVkyVkJkSFJsYm5WaGRHbHZiaWdnWTI5dWMzUWdhVzRnWm14dllYUWdiR2xuYUhSRWFYTjBZVzVqWlN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWTNWMGIyWm1SR2x6ZEdGdVkyVXNJR052Ym5OMElHbHVJR1pzYjJGMElHUmxZMkY1Ulhod2IyNWxiblFnS1NCN0Nna2phV1lnWkdWbWFXNWxaQ0FvSUZCSVdWTkpRMEZNVEZsZlEwOVNVa1ZEVkY5TVNVZElWRk1nS1FvSkNXWnNiMkYwSUdScGMzUmhibU5sUm1Gc2JHOW1aaUE5SURFdU1DQXZJRzFoZUNnZ2NHOTNLQ0JzYVdkb2RFUnBjM1JoYm1ObExDQmtaV05oZVVWNGNHOXVaVzUwSUNrc0lEQXVNREVnS1RzS0NRbHBaaUFvSUdOMWRHOW1aa1JwYzNSaGJtTmxJRDRnTUM0d0lDa2dld29KQ1Fsa2FYTjBZVzVqWlVaaGJHeHZabVlnS2owZ2NHOTNNaWdnYzJGMGRYSmhkR1VvSURFdU1DQXRJSEJ2ZHpRb0lHeHBaMmgwUkdsemRHRnVZMlVnTHlCamRYUnZabVpFYVhOMFlXNWpaU0FwSUNrZ0tUc0tDUWw5Q2drSmNtVjBkWEp1SUdScGMzUmhibU5sUm1Gc2JHOW1aanNLQ1NObGJITmxDZ2tKYVdZZ0tDQmpkWFJ2Wm1aRWFYTjBZVzVqWlNBK0lEQXVNQ0FtSmlCa1pXTmhlVVY0Y0c5dVpXNTBJRDRnTUM0d0lDa2dld29KQ1FseVpYUjFjbTRnY0c5M0tDQnpZWFIxY21GMFpTZ2dMU0JzYVdkb2RFUnBjM1JoYm1ObElDOGdZM1YwYjJabVJHbHpkR0Z1WTJVZ0t5QXhMakFnS1N3Z1pHVmpZWGxGZUhCdmJtVnVkQ0FwT3dvSkNYMEtDUWx5WlhSMWNtNGdNUzR3T3dvSkkyVnVaR2xtQ24wS1pteHZZWFFnWjJWMFUzQnZkRUYwZEdWdWRXRjBhVzl1S0NCamIyNXpkQ0JwYmlCbWJHOWhkQ0JqYjI1bFEyOXphVzVsTENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J3Wlc1MWJXSnlZVU52YzJsdVpTd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1lXNW5iR1ZEYjNOcGJtVWdLU0I3Q2dseVpYUjFjbTRnYzIxdmIzUm9jM1JsY0NnZ1kyOXVaVU52YzJsdVpTd2djR1Z1ZFcxaWNtRkRiM05wYm1Vc0lHRnVaMnhsUTI5emFXNWxJQ2s3Q24wS0kybG1JRTVWVFY5RVNWSmZURWxIU0ZSVElENGdNQW9KYzNSeWRXTjBJRVJwY21WamRHbHZibUZzVEdsbmFIUWdld29KQ1habFl6TWdaR2x5WldOMGFXOXVPd29KQ1habFl6TWdZMjlzYjNJN0NnbDlPd29KZFc1cFptOXliU0JFYVhKbFkzUnBiMjVoYkV4cFoyaDBJR1JwY21WamRHbHZibUZzVEdsbmFIUnpXeUJPVlUxZlJFbFNYMHhKUjBoVVV5QmRPd29KZG05cFpDQm5aWFJFYVhKbFkzUnBiMjVoYkV4cFoyaDBTVzVtYnlnZ1kyOXVjM1FnYVc0Z1JHbHlaV04wYVc5dVlXeE1hV2RvZENCa2FYSmxZM1JwYjI1aGJFeHBaMmgwTENCamIyNXpkQ0JwYmlCSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdkbGIyMWxkSEo1TENCdmRYUWdTVzVqYVdSbGJuUk1hV2RvZENCc2FXZG9kQ0FwSUhzS0NRbHNhV2RvZEM1amIyeHZjaUE5SUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFF1WTI5c2IzSTdDZ2tKYkdsbmFIUXVaR2x5WldOMGFXOXVJRDBnWkdseVpXTjBhVzl1WVd4TWFXZG9kQzVrYVhKbFkzUnBiMjQ3Q2drSmJHbG5hSFF1ZG1semFXSnNaU0E5SUhSeWRXVTdDZ2w5Q2lObGJtUnBaZ29qYVdZZ1RsVk5YMUJQU1U1VVgweEpSMGhVVXlBK0lEQUtDWE4wY25WamRDQlFiMmx1ZEV4cFoyaDBJSHNLQ1FsMlpXTXpJSEJ2YzJsMGFXOXVPd29KQ1habFl6TWdZMjlzYjNJN0Nna0pabXh2WVhRZ1pHbHpkR0Z1WTJVN0Nna0pabXh2WVhRZ1pHVmpZWGs3Q2dsOU93b0pkVzVwWm05eWJTQlFiMmx1ZEV4cFoyaDBJSEJ2YVc1MFRHbG5hSFJ6V3lCT1ZVMWZVRTlKVGxSZlRFbEhTRlJUSUYwN0NnbDJiMmxrSUdkbGRGQnZhVzUwVEdsbmFIUkpibVp2S0NCamIyNXpkQ0JwYmlCUWIybHVkRXhwWjJoMElIQnZhVzUwVEdsbmFIUXNJR052Ym5OMElHbHVJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdaMlZ2YldWMGNua3NJRzkxZENCSmJtTnBaR1Z1ZEV4cFoyaDBJR3hwWjJoMElDa2dld29KQ1habFl6TWdiRlpsWTNSdmNpQTlJSEJ2YVc1MFRHbG5hSFF1Y0c5emFYUnBiMjRnTFNCblpXOXRaWFJ5ZVM1d2IzTnBkR2x2YmpzS0NRbHNhV2RvZEM1a2FYSmxZM1JwYjI0Z1BTQnViM0p0WVd4cGVtVW9JR3hXWldOMGIzSWdLVHNLQ1FsbWJHOWhkQ0JzYVdkb2RFUnBjM1JoYm1ObElEMGdiR1Z1WjNSb0tDQnNWbVZqZEc5eUlDazdDZ2tKYkdsbmFIUXVZMjlzYjNJZ1BTQndiMmx1ZEV4cFoyaDBMbU52Ykc5eU93b0pDV3hwWjJoMExtTnZiRzl5SUNvOUlHZGxkRVJwYzNSaGJtTmxRWFIwWlc1MVlYUnBiMjRvSUd4cFoyaDBSR2x6ZEdGdVkyVXNJSEJ2YVc1MFRHbG5hSFF1WkdsemRHRnVZMlVzSUhCdmFXNTBUR2xuYUhRdVpHVmpZWGtnS1RzS0NRbHNhV2RvZEM1MmFYTnBZbXhsSUQwZ0tDQnNhV2RvZEM1amIyeHZjaUFoUFNCMlpXTXpLQ0F3TGpBZ0tTQXBPd29KZlFvalpXNWthV1lLSTJsbUlFNVZUVjlUVUU5VVgweEpSMGhVVXlBK0lEQUtDWE4wY25WamRDQlRjRzkwVEdsbmFIUWdld29KQ1habFl6TWdjRzl6YVhScGIyNDdDZ2tKZG1Wak15QmthWEpsWTNScGIyNDdDZ2tKZG1Wak15QmpiMnh2Y2pzS0NRbG1iRzloZENCa2FYTjBZVzVqWlRzS0NRbG1iRzloZENCa1pXTmhlVHNLQ1FsbWJHOWhkQ0JqYjI1bFEyOXpPd29KQ1dac2IyRjBJSEJsYm5WdFluSmhRMjl6T3dvSmZUc0tDWFZ1YVdadmNtMGdVM0J2ZEV4cFoyaDBJSE53YjNSTWFXZG9kSE5iSUU1VlRWOVRVRTlVWDB4SlIwaFVVeUJkT3dvSmRtOXBaQ0JuWlhSVGNHOTBUR2xuYUhSSmJtWnZLQ0JqYjI1emRDQnBiaUJUY0c5MFRHbG5hSFFnYzNCdmRFeHBaMmgwTENCamIyNXpkQ0JwYmlCSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdkbGIyMWxkSEo1TENCdmRYUWdTVzVqYVdSbGJuUk1hV2RvZENCc2FXZG9kQ0FwSUhzS0NRbDJaV016SUd4V1pXTjBiM0lnUFNCemNHOTBUR2xuYUhRdWNHOXphWFJwYjI0Z0xTQm5aVzl0WlhSeWVTNXdiM05wZEdsdmJqc0tDUWxzYVdkb2RDNWthWEpsWTNScGIyNGdQU0J1YjNKdFlXeHBlbVVvSUd4V1pXTjBiM0lnS1RzS0NRbG1iRzloZENCaGJtZHNaVU52Y3lBOUlHUnZkQ2dnYkdsbmFIUXVaR2x5WldOMGFXOXVMQ0J6Y0c5MFRHbG5hSFF1WkdseVpXTjBhVzl1SUNrN0Nna0pabXh2WVhRZ2MzQnZkRUYwZEdWdWRXRjBhVzl1SUQwZ1oyVjBVM0J2ZEVGMGRHVnVkV0YwYVc5dUtDQnpjRzkwVEdsbmFIUXVZMjl1WlVOdmN5d2djM0J2ZEV4cFoyaDBMbkJsYm5WdFluSmhRMjl6TENCaGJtZHNaVU52Y3lBcE93b0pDV2xtSUNnZ2MzQnZkRUYwZEdWdWRXRjBhVzl1SUQ0Z01DNHdJQ2tnZXdvSkNRbG1iRzloZENCc2FXZG9kRVJwYzNSaGJtTmxJRDBnYkdWdVozUm9LQ0JzVm1WamRHOXlJQ2s3Q2drSkNXeHBaMmgwTG1OdmJHOXlJRDBnYzNCdmRFeHBaMmgwTG1OdmJHOXlJQ29nYzNCdmRFRjBkR1Z1ZFdGMGFXOXVPd29KQ1Fsc2FXZG9kQzVqYjJ4dmNpQXFQU0JuWlhSRWFYTjBZVzVqWlVGMGRHVnVkV0YwYVc5dUtDQnNhV2RvZEVScGMzUmhibU5sTENCemNHOTBUR2xuYUhRdVpHbHpkR0Z1WTJVc0lITndiM1JNYVdkb2RDNWtaV05oZVNBcE93b0pDUWxzYVdkb2RDNTJhWE5wWW14bElEMGdLQ0JzYVdkb2RDNWpiMnh2Y2lBaFBTQjJaV016S0NBd0xqQWdLU0FwT3dvSkNYMGdaV3h6WlNCN0Nna0pDV3hwWjJoMExtTnZiRzl5SUQwZ2RtVmpNeWdnTUM0d0lDazdDZ2tKQ1d4cFoyaDBMblpwYzJsaWJHVWdQU0JtWVd4elpUc0tDUWw5Q2dsOUNpTmxibVJwWmdvamFXWWdUbFZOWDFKRlExUmZRVkpGUVY5TVNVZElWRk1nUGlBd0NnbHpkSEoxWTNRZ1VtVmpkRUZ5WldGTWFXZG9kQ0I3Q2drSmRtVmpNeUJqYjJ4dmNqc0tDUWwyWldNeklIQnZjMmwwYVc5dU93b0pDWFpsWXpNZ2FHRnNabGRwWkhSb093b0pDWFpsWXpNZ2FHRnNaa2hsYVdkb2REc0tDWDA3Q2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCc2RHTmZNVHNKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYkhSalh6STdDZ2wxYm1sbWIzSnRJRkpsWTNSQmNtVmhUR2xuYUhRZ2NtVmpkRUZ5WldGTWFXZG9kSE5iSUU1VlRWOVNSVU5VWDBGU1JVRmZURWxIU0ZSVElGMDdDaU5sYm1ScFpnb2phV1lnVGxWTlgwaEZUVWxmVEVsSFNGUlRJRDRnTUFvSmMzUnlkV04wSUVobGJXbHpjR2hsY21WTWFXZG9kQ0I3Q2drSmRtVmpNeUJrYVhKbFkzUnBiMjQ3Q2drSmRtVmpNeUJ6YTNsRGIyeHZjanNLQ1FsMlpXTXpJR2R5YjNWdVpFTnZiRzl5T3dvSmZUc0tDWFZ1YVdadmNtMGdTR1Z0YVhOd2FHVnlaVXhwWjJoMElHaGxiV2x6Y0dobGNtVk1hV2RvZEhOYklFNVZUVjlJUlUxSlgweEpSMGhVVXlCZE93b0pkbVZqTXlCblpYUklaVzFwYzNCb1pYSmxUR2xuYUhSSmNuSmhaR2xoYm1ObEtDQmpiMjV6ZENCcGJpQklaVzFwYzNCb1pYSmxUR2xuYUhRZ2FHVnRhVXhwWjJoMExDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ0FwSUhzS0NRbG1iRzloZENCa2IzUk9UQ0E5SUdSdmRDZ2dibTl5YldGc0xDQm9aVzFwVEdsbmFIUXVaR2x5WldOMGFXOXVJQ2s3Q2drSlpteHZZWFFnYUdWdGFVUnBabVoxYzJWWFpXbG5hSFFnUFNBd0xqVWdLaUJrYjNST1RDQXJJREF1TlRzS0NRbDJaV016SUdseWNtRmthV0Z1WTJVZ1BTQnRhWGdvSUdobGJXbE1hV2RvZEM1bmNtOTFibVJEYjJ4dmNpd2dhR1Z0YVV4cFoyaDBMbk5yZVVOdmJHOXlMQ0JvWlcxcFJHbG1ablZ6WlZkbGFXZG9kQ0FwT3dvSkNYSmxkSFZ5YmlCcGNuSmhaR2xoYm1ObE93b0pmUW9qWlc1a2FXWmdMQ0J5Y0NBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVlZORlgwVk9WazFCVUNBcENna2phV1prWldZZ1JVNVdUVUZRWDAxUFJFVmZVa1ZHVWtGRFZFbFBUZ29KQ1hWdWFXWnZjbTBnWm14dllYUWdjbVZtY21GamRHbHZibEpoZEdsdk93b0pJMlZ1WkdsbUNnbDJaV016SUdkbGRFbENURWx5Y21Ga2FXRnVZMlVvSUdOdmJuTjBJR2x1SUhabFl6TWdibTl5YldGc0lDa2dld29KQ1NOcFppQmtaV1pwYm1Wa0tDQkZUbFpOUVZCZlZGbFFSVjlEVlVKRlgxVldJQ2tLQ1FrSmRtVmpNeUIzYjNKc1pFNXZjbTFoYkNBOUlHbHVkbVZ5YzJWVWNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lHNXZjbTFoYkN3Z2RtbGxkMDFoZEhKcGVDQXBPd29KQ1FsMlpXTTBJR1Z1ZGsxaGNFTnZiRzl5SUQwZ2RHVjRkSFZ5WlVOMVltVlZWaWdnWlc1MlRXRndMQ0IzYjNKc1pFNXZjbTFoYkN3Z01TNHdJQ2s3Q2drSkNYSmxkSFZ5YmlCUVNTQXFJR1Z1ZGsxaGNFTnZiRzl5TG5KbllpQXFJR1Z1ZGsxaGNFbHVkR1Z1YzJsMGVUc0tDUWtqWld4elpRb0pDUWx5WlhSMWNtNGdkbVZqTXlnZ01DNHdJQ2s3Q2drSkkyVnVaR2xtQ2dsOUNnbDJaV016SUdkbGRFbENURkpoWkdsaGJtTmxLQ0JqYjI1emRDQnBiaUIyWldNeklIWnBaWGRFYVhJc0lHTnZibk4wSUdsdUlIWmxZek1nYm05eWJXRnNMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnliM1ZuYUc1bGMzTWdLU0I3Q2drSkkybG1JR1JsWm1sdVpXUW9JRVZPVmsxQlVGOVVXVkJGWDBOVlFrVmZWVllnS1FvSkNRbDJaV016SUhKbFpteGxZM1JXWldNN0Nna0pDU05wWm1SbFppQkZUbFpOUVZCZlRVOUVSVjlTUlVaTVJVTlVTVTlPQ2drSkNRbHlaV1pzWldOMFZtVmpJRDBnY21WbWJHVmpkQ2dnTFNCMmFXVjNSR2x5TENCdWIzSnRZV3dnS1RzS0NRa0pDWEpsWm14bFkzUldaV01nUFNCdWIzSnRZV3hwZW1Vb0lHMXBlQ2dnY21WbWJHVmpkRlpsWXl3Z2JtOXliV0ZzTENCeWIzVm5hRzVsYzNNZ0tpQnliM1ZuYUc1bGMzTXBJQ2s3Q2drSkNTTmxiSE5sQ2drSkNRbHlaV1pzWldOMFZtVmpJRDBnY21WbWNtRmpkQ2dnTFNCMmFXVjNSR2x5TENCdWIzSnRZV3dzSUhKbFpuSmhZM1JwYjI1U1lYUnBieUFwT3dvSkNRa2paVzVrYVdZS0NRa0pjbVZtYkdWamRGWmxZeUE5SUdsdWRtVnljMlZVY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUhKbFpteGxZM1JXWldNc0lIWnBaWGROWVhSeWFYZ2dLVHNLQ1FrSmRtVmpOQ0JsYm5aTllYQkRiMnh2Y2lBOUlIUmxlSFIxY21WRGRXSmxWVllvSUdWdWRrMWhjQ3dnY21WbWJHVmpkRlpsWXl3Z2NtOTFaMmh1WlhOeklDazdDZ2tKQ1hKbGRIVnliaUJsYm5aTllYQkRiMnh2Y2k1eVoySWdLaUJsYm5aTllYQkpiblJsYm5OcGRIazdDZ2tKSTJWc2MyVUtDUWtKY21WMGRYSnVJSFpsWXpNb0lEQXVNQ0FwT3dvSkNTTmxibVJwWmdvSmZRb2paVzVrYVdaZ0xDQnpjQ0E5SUdCVWIyOXVUV0YwWlhKcFlXd2diV0YwWlhKcFlXdzdDbTFoZEdWeWFXRnNMbVJwWm1aMWMyVkRiMnh2Y2lBOUlHUnBabVoxYzJWRGIyeHZjaTV5WjJJN1lDd2diM0FnUFNCZ2RtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NuTjBjblZqZENCVWIyOXVUV0YwWlhKcFlXd2dld29KZG1Wak15QmthV1ptZFhObFEyOXNiM0k3Q24wN0NuWnZhV1FnVWtWZlJHbHlaV04wWDFSdmIyNG9JR052Ym5OMElHbHVJRWx1WTJsa1pXNTBUR2xuYUhRZ1pHbHlaV04wVEdsbmFIUXNJR052Ym5OMElHbHVJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdaMlZ2YldWMGNua3NJR052Ym5OMElHbHVJRlJ2YjI1TllYUmxjbWxoYkNCdFlYUmxjbWxoYkN3Z2FXNXZkWFFnVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ0tTQjdDZ2wyWldNeklHbHljbUZrYVdGdVkyVWdQU0JuWlhSSGNtRmthV1Z1ZEVseWNtRmthV0Z1WTJVb0lHZGxiMjFsZEhKNUxtNXZjbTFoYkN3Z1pHbHlaV04wVEdsbmFIUXVaR2x5WldOMGFXOXVJQ2tnS2lCa2FYSmxZM1JNYVdkb2RDNWpiMnh2Y2pzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmVEdGdFltVnlkQ2dnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDazdDbjBLZG05cFpDQlNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVmZWRzl2YmlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJwY25KaFpHbGhibU5sTENCamIyNXpkQ0JwYmlCSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdkbGIyMWxkSEo1TENCamIyNXpkQ0JwYmlCVWIyOXVUV0YwWlhKcFlXd2diV0YwWlhKcFlXd3NJR2x1YjNWMElGSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2tnZXdvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3M5SUdseWNtRmthV0Z1WTJVZ0tpQkNVa1JHWDB4aGJXSmxjblFvSUcxaGRHVnlhV0ZzTG1ScFptWjFjMlZEYjJ4dmNpQXBPd3A5Q2lOa1pXWnBibVVnVWtWZlJHbHlaV04wQ1FrSkNWSkZYMFJwY21WamRGOVViMjl1Q2lOa1pXWnBibVVnVWtWZlNXNWthWEpsWTNSRWFXWm1kWE5sQ1FsU1JWOUpibVJwY21WamRFUnBabVoxYzJWZlZHOXZiZ29qWkdWbWFXNWxJRTFoZEdWeWFXRnNYMHhwWjJoMFVISnZZbVZNVDBRb0lHMWhkR1Z5YVdGc0lDa0pLREFwWUN3Z1lYQWdQU0JnUW14cGJtNVFhRzl1WjAxaGRHVnlhV0ZzSUcxaGRHVnlhV0ZzT3dwdFlYUmxjbWxoYkM1a2FXWm1kWE5sUTI5c2IzSWdQU0JrYVdabWRYTmxRMjlzYjNJdWNtZGlPd3B0WVhSbGNtbGhiQzV6Y0dWamRXeGhja052Ykc5eUlEMGdjM0JsWTNWc1lYSTdDbTFoZEdWeWFXRnNMbk53WldOMWJHRnlVMmhwYm1sdVpYTnpJRDBnYzJocGJtbHVaWE56T3dwdFlYUmxjbWxoYkM1emNHVmpkV3hoY2xOMGNtVnVaM1JvSUQwZ2MzQmxZM1ZzWVhKVGRISmxibWQwYUR0Z0xDQnNjQ0E5SUdCMllYSjVhVzVuSUhabFl6TWdkbFpwWlhkUWIzTnBkR2x2YmpzS2MzUnlkV04wSUVKc2FXNXVVR2h2Ym1kTllYUmxjbWxoYkNCN0NnbDJaV016SUdScFptWjFjMlZEYjJ4dmNqc0tDWFpsWXpNZ2MzQmxZM1ZzWVhKRGIyeHZjanNLQ1dac2IyRjBJSE53WldOMWJHRnlVMmhwYm1sdVpYTnpPd29KWm14dllYUWdjM0JsWTNWc1lYSlRkSEpsYm1kMGFEc0tmVHNLZG05cFpDQlNSVjlFYVhKbFkzUmZRbXhwYm01UWFHOXVaeWdnWTI5dWMzUWdhVzRnU1c1amFXUmxiblJNYVdkb2RDQmthWEpsWTNSTWFXZG9kQ3dnWTI5dWMzUWdhVzRnUjJWdmJXVjBjbWxqUTI5dWRHVjRkQ0JuWlc5dFpYUnllU3dnWTI5dWMzUWdhVzRnUW14cGJtNVFhRzl1WjAxaGRHVnlhV0ZzSUcxaGRHVnlhV0ZzTENCcGJtOTFkQ0JTWldac1pXTjBaV1JNYVdkb2RDQnlaV1pzWldOMFpXUk1hV2RvZENBcElIc0tDV1pzYjJGMElHUnZkRTVNSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnWjJWdmJXVjBjbmt1Ym05eWJXRnNMQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0Z0tTQXBPd29KZG1Wak15QnBjbkpoWkdsaGJtTmxJRDBnWkc5MFRrd2dLaUJrYVhKbFkzUk1hV2RvZEM1amIyeHZjanNLQ1hKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ0t6MGdhWEp5WVdScFlXNWpaU0FxSUVKU1JFWmZUR0Z0WW1WeWRDZ2diV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUNrN0NnbHlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JUY0dWamRXeGhjaUFyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5Q2JHbHVibEJvYjI1bktDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRzSUdkbGIyMWxkSEo1TG5acFpYZEVhWElzSUdkbGIyMWxkSEo1TG01dmNtMWhiQ3dnYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpEYjJ4dmNpd2diV0YwWlhKcFlXd3VjM0JsWTNWc1lYSlRhR2x1YVc1bGMzTWdLU0FxSUcxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5VTNSeVpXNW5kR2c3Q24wS2RtOXBaQ0JTUlY5SmJtUnBjbVZqZEVScFptWjFjMlZmUW14cGJtNVFhRzl1WnlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJwY25KaFpHbGhibU5sTENCamIyNXpkQ0JwYmlCSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdkbGIyMWxkSEo1TENCamIyNXpkQ0JwYmlCQ2JHbHVibEJvYjI1blRXRjBaWEpwWVd3Z2JXRjBaWEpwWVd3c0lHbHViM1YwSUZKbFpteGxZM1JsWkV4cFoyaDBJSEpsWm14bFkzUmxaRXhwWjJoMElDa2dld29KY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUkVhV1ptZFhObElDczlJR2x5Y21Ga2FXRnVZMlVnS2lCQ1VrUkdYMHhoYldKbGNuUW9JRzFoZEdWeWFXRnNMbVJwWm1aMWMyVkRiMnh2Y2lBcE93cDlDaU5rWldacGJtVWdVa1ZmUkdseVpXTjBDUWtKQ1ZKRlgwUnBjbVZqZEY5Q2JHbHVibEJvYjI1bkNpTmtaV1pwYm1VZ1VrVmZTVzVrYVhKbFkzUkVhV1ptZFhObENRbFNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVmZRbXhwYm01UWFHOXVad29qWkdWbWFXNWxJRTFoZEdWeWFXRnNYMHhwWjJoMFVISnZZbVZNVDBRb0lHMWhkR1Z5YVdGc0lDa0pLREFwWUN3Z1kzQWdQU0JnVUdoNWMybGpZV3hOWVhSbGNtbGhiQ0J0WVhSbGNtbGhiRHNLYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlEMGdaR2xtWm5WelpVTnZiRzl5TG5KbllpQXFJQ2dnTVM0d0lDMGdiV1YwWVd4dVpYTnpSbUZqZEc5eUlDazdDblpsWXpNZ1pIaDVJRDBnYldGNEtDQmhZbk1vSUdSR1pIZ29JR2RsYjIxbGRISjVUbTl5YldGc0lDa2dLU3dnWVdKektDQmtSbVI1S0NCblpXOXRaWFJ5ZVU1dmNtMWhiQ0FwSUNrZ0tUc0tabXh2WVhRZ1oyVnZiV1YwY25sU2IzVm5hRzVsYzNNZ1BTQnRZWGdvSUcxaGVDZ2daSGg1TG5nc0lHUjRlUzU1SUNrc0lHUjRlUzU2SUNrN0NtMWhkR1Z5YVdGc0xuSnZkV2RvYm1WemN5QTlJRzFoZUNnZ2NtOTFaMmh1WlhOelJtRmpkRzl5TENBd0xqQTFNalVnS1R0dFlYUmxjbWxoYkM1eWIzVm5hRzVsYzNNZ0t6MGdaMlZ2YldWMGNubFNiM1ZuYUc1bGMzTTdDbTFoZEdWeWFXRnNMbkp2ZFdkb2JtVnpjeUE5SUcxcGJpZ2diV0YwWlhKcFlXd3VjbTkxWjJodVpYTnpMQ0F4TGpBZ0tUc0tJMmxtWkdWbUlFbFBVZ29KSTJsbVpHVm1JRk5RUlVOVlRFRlNDZ2tKWm14dllYUWdjM0JsWTNWc1lYSkpiblJsYm5OcGRIbEdZV04wYjNJZ1BTQnpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVUc0tDUWwyWldNeklITndaV04xYkdGeVEyOXNiM0pHWVdOMGIzSWdQU0J6Y0dWamRXeGhja052Ykc5eU93b0pDU05wWm1SbFppQlZVMFZmVTFCRlExVk1RVkpKVGxSRlRsTkpWRmxOUVZBS0NRa0pjM0JsWTNWc1lYSkpiblJsYm5OcGRIbEdZV04wYjNJZ0tqMGdkR1Y0ZEhWeVpUSkVLQ0J6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0N3Z2RsVjJJQ2t1WVRzS0NRa2paVzVrYVdZS0NRa2phV1prWldZZ1ZWTkZYMU5RUlVOVlRFRlNRMDlNVDFKTlFWQUtDUWtKYzNCbFkzVnNZWEpEYjJ4dmNrWmhZM1J2Y2lBcVBTQnpjR1ZqZFd4aGNrTnZiRzl5VFdGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnZEdWNGRIVnlaVEpFS0NCemNHVmpkV3hoY2tOdmJHOXlUV0Z3TENCMlZYWWdLU0FwTG5Kbllqc0tDUWtqWlc1a2FXWUtDUWx0WVhSbGNtbGhiQzV6Y0dWamRXeGhja1k1TUNBOUlHMXBlQ2dnYzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxHWVdOMGIzSXNJREV1TUN3Z2JXVjBZV3h1WlhOelJtRmpkRzl5SUNrN0Nna2paV3h6WlFvSkNXWnNiMkYwSUhOd1pXTjFiR0Z5U1c1MFpXNXphWFI1Um1GamRHOXlJRDBnTVM0d093b0pDWFpsWXpNZ2MzQmxZM1ZzWVhKRGIyeHZja1poWTNSdmNpQTlJSFpsWXpNb0lERXVNQ0FwT3dvSkNXMWhkR1Z5YVdGc0xuTndaV04xYkdGeVJqa3dJRDBnTVM0d093b0pJMlZ1WkdsbUNnbHRZWFJsY21saGJDNXpjR1ZqZFd4aGNrTnZiRzl5SUQwZ2JXbDRLQ0J0YVc0b0lIQnZkeklvSUNnZ2FXOXlJQzBnTVM0d0lDa2dMeUFvSUdsdmNpQXJJREV1TUNBcElDa2dLaUJ6Y0dWamRXeGhja052Ykc5eVJtRmpkRzl5TENCMlpXTXpLQ0F4TGpBZ0tTQXBJQ29nYzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxHWVdOMGIzSXNJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySXNJRzFsZEdGc2JtVnpjMFpoWTNSdmNpQXBPd29qWld4elpRb0piV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkRiMnh2Y2lBOUlHMXBlQ2dnZG1Wak15Z2dNQzR3TkNBcExDQmthV1ptZFhObFEyOXNiM0l1Y21kaUxDQnRaWFJoYkc1bGMzTkdZV04wYjNJZ0tUc0tDVzFoZEdWeWFXRnNMbk53WldOMWJHRnlSamt3SUQwZ01TNHdPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlFLQ1cxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZENBOUlHTnNaV0Z5WTI5aGREc0tDVzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeUE5SUdOc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3pzS0NXMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRFWXdJRDBnZG1Wak15Z2dNQzR3TkNBcE93b0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBSamt3SUQwZ01TNHdPd29KSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZSTlFWQUtDUWx0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFFnS2owZ2RHVjRkSFZ5WlRKRUtDQmpiR1ZoY21OdllYUk5ZWEFzSUhaVmRpQXBMbmc3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVVgxSlBWVWRJVGtWVFUwMUJVQW9KQ1cxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBcVBTQjBaWGgwZFhKbE1rUW9JR05zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0N3Z2RsVjJJQ2t1ZVRzS0NTTmxibVJwWmdvSmJXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMElEMGdjMkYwZFhKaGRHVW9JRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkQ0FwT3dsdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ1BTQnRZWGdvSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3l3Z01DNHdOVEkxSUNrN0NnbHRZWFJsY21saGJDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdLejBnWjJWdmJXVjBjbmxTYjNWbmFHNWxjM003Q2dsdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ1BTQnRhVzRvSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3l3Z01TNHdJQ2s3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDFOSVJVVk9DZ2x0WVhSbGNtbGhiQzV6YUdWbGJrTnZiRzl5SUQwZ2MyaGxaVzVEYjJ4dmNqc0tDU05wWm1SbFppQlZVMFZmVTBoRlJVNURUMHhQVWsxQlVBb0pDVzFoZEdWeWFXRnNMbk5vWldWdVEyOXNiM0lnS2owZ2MyaGxaVzVEYjJ4dmNrMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lIUmxlSFIxY21VeVJDZ2djMmhsWlc1RGIyeHZjazFoY0N3Z2RsVjJJQ2tnS1M1eVoySTdDZ2tqWlc1a2FXWUtDVzFoZEdWeWFXRnNMbk5vWldWdVVtOTFaMmh1WlhOeklEMGdZMnhoYlhBb0lITm9aV1Z1VW05MVoyaHVaWE56TENBd0xqQTNMQ0F4TGpBZ0tUc0tDU05wWm1SbFppQlZVMFZmVTBoRlJVNVNUMVZIU0U1RlUxTk5RVkFLQ1FsdFlYUmxjbWxoYkM1emFHVmxibEp2ZFdkb2JtVnpjeUFxUFNCMFpYaDBkWEpsTWtRb0lITm9aV1Z1VW05MVoyaHVaWE56VFdGd0xDQjJWWFlnS1M1aE93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lHaHdJRDBnWUhOMGNuVmpkQ0JRYUhsemFXTmhiRTFoZEdWeWFXRnNJSHNLQ1habFl6TWdaR2xtWm5WelpVTnZiRzl5T3dvSlpteHZZWFFnY205MVoyaHVaWE56T3dvSmRtVmpNeUJ6Y0dWamRXeGhja052Ykc5eU93b0pabXh2WVhRZ2MzQmxZM1ZzWVhKR09UQTdDZ2tqYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkFvSkNXWnNiMkYwSUdOc1pXRnlZMjloZERzS0NRbG1iRzloZENCamJHVmhjbU52WVhSU2IzVm5hRzVsYzNNN0Nna0pkbVZqTXlCamJHVmhjbU52WVhSR01Ec0tDUWxtYkc5aGRDQmpiR1ZoY21OdllYUkdPVEE3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTRLQ1FsMlpXTXpJSE5vWldWdVEyOXNiM0k3Q2drSlpteHZZWFFnYzJobFpXNVNiM1ZuYUc1bGMzTTdDZ2tqWlc1a2FXWUtmVHNLZG1Wak15QmpiR1ZoY21OdllYUlRjR1ZqZFd4aGNpQTlJSFpsWXpNb0lEQXVNQ0FwT3dwMlpXTXpJSE5vWldWdVUzQmxZM1ZzWVhJZ1BTQjJaV016S0NBd0xqQWdLVHNLWm14dllYUWdTVUpNVTJobFpXNUNVa1JHS0NCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDd2dZMjl1YzNRZ2FXNGdkbVZqTXlCMmFXVjNSR2x5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J5YjNWbmFHNWxjM01wSUhzS0NXWnNiMkYwSUdSdmRFNVdJRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2dibTl5YldGc0xDQjJhV1YzUkdseUlDa2dLVHNLQ1dac2IyRjBJSEl5SUQwZ2NtOTFaMmh1WlhOeklDb2djbTkxWjJodVpYTnpPd29KWm14dllYUWdZU0E5SUhKdmRXZG9ibVZ6Y3lBOElEQXVNalVnUHlBdE16TTVMaklnS2lCeU1pQXJJREUyTVM0MElDb2djbTkxWjJodVpYTnpJQzBnTWpVdU9TQTZJQzA0TGpRNElDb2djaklnS3lBeE5DNHpJQ29nY205MVoyaHVaWE56SUMwZ09TNDVOVHNLQ1dac2IyRjBJR0lnUFNCeWIzVm5hRzVsYzNNZ1BDQXdMakkxSUQ4Z05EUXVNQ0FxSUhJeUlDMGdNak11TnlBcUlISnZkV2RvYm1WemN5QXJJRE11TWpZZ09pQXhMamszSUNvZ2NqSWdMU0F6TGpJM0lDb2djbTkxWjJodVpYTnpJQ3NnTUM0M01qc0tDV1pzYjJGMElFUkhJRDBnWlhod0tDQmhJQ29nWkc5MFRsWWdLeUJpSUNrZ0t5QW9JSEp2ZFdkb2JtVnpjeUE4SURBdU1qVWdQeUF3TGpBZ09pQXdMakVnS2lBb0lISnZkV2RvYm1WemN5QXRJREF1TWpVZ0tTQXBPd29KY21WMGRYSnVJSE5oZEhWeVlYUmxLQ0JFUnlBcUlGSkZRMGxRVWs5RFFVeGZVRWtnS1RzS2ZRcDJaV015SUVSR1IwRndjSEp2ZUNnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnY205MVoyaHVaWE56SUNrZ2V3b0pabXh2WVhRZ1pHOTBUbFlnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSWdLU0FwT3dvSlkyOXVjM1FnZG1Wak5DQmpNQ0E5SUhabFl6UW9JQzBnTVN3Z0xTQXdMakF5TnpVc0lDMGdNQzQxTnpJc0lEQXVNREl5SUNrN0NnbGpiMjV6ZENCMlpXTTBJR014SUQwZ2RtVmpOQ2dnTVN3Z01DNHdOREkxTENBeExqQTBMQ0F0SURBdU1EUWdLVHNLQ1habFl6UWdjaUE5SUhKdmRXZG9ibVZ6Y3lBcUlHTXdJQ3NnWXpFN0NnbG1iRzloZENCaE1EQTBJRDBnYldsdUtDQnlMbmdnS2lCeUxuZ3NJR1Y0Y0RJb0lDMGdPUzR5T0NBcUlHUnZkRTVXSUNrZ0tTQXFJSEl1ZUNBcklISXVlVHNLQ1habFl6SWdabUZpSUQwZ2RtVmpNaWdnTFNBeExqQTBMQ0F4TGpBMElDa2dLaUJoTURBMElDc2djaTU2ZHpzS0NYSmxkSFZ5YmlCbVlXSTdDbjBLZG1Wak15QkZiblpwY205dWJXVnVkRUpTUkVZb0lHTnZibk4wSUdsdUlIWmxZek1nYm05eWJXRnNMQ0JqYjI1emRDQnBiaUIyWldNeklIWnBaWGRFYVhJc0lHTnZibk4wSUdsdUlIWmxZek1nYzNCbFkzVnNZWEpEYjJ4dmNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2MzQmxZM1ZzWVhKR09UQXNJR052Ym5OMElHbHVJR1pzYjJGMElISnZkV2RvYm1WemN5QXBJSHNLQ1habFl6SWdabUZpSUQwZ1JFWkhRWEJ3Y205NEtDQnViM0p0WVd3c0lIWnBaWGRFYVhJc0lISnZkV2RvYm1WemN5QXBPd29KY21WMGRYSnVJSE53WldOMWJHRnlRMjlzYjNJZ0tpQm1ZV0l1ZUNBcklITndaV04xYkdGeVJqa3dJQ29nWm1GaUxuazdDbjBLZG05cFpDQmpiMjF3ZFhSbFRYVnNkR2x6WTJGMGRHVnlhVzVuS0NCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDd2dZMjl1YzNRZ2FXNGdkbVZqTXlCMmFXVjNSR2x5TENCamIyNXpkQ0JwYmlCMlpXTXpJSE53WldOMWJHRnlRMjlzYjNJc0lHTnZibk4wSUdsdUlHWnNiMkYwSUhOd1pXTjFiR0Z5Umprd0xDQmpiMjV6ZENCcGJpQm1iRzloZENCeWIzVm5hRzVsYzNNc0lHbHViM1YwSUhabFl6TWdjMmx1WjJ4bFUyTmhkSFJsY2l3Z2FXNXZkWFFnZG1Wak15QnRkV3gwYVZOallYUjBaWElnS1NCN0NnbDJaV015SUdaaFlpQTlJRVJHUjBGd2NISnZlQ2dnYm05eWJXRnNMQ0IyYVdWM1JHbHlMQ0J5YjNWbmFHNWxjM01nS1RzS0NYWmxZek1nUm5OelJYTnpJRDBnYzNCbFkzVnNZWEpEYjJ4dmNpQXFJR1poWWk1NElDc2djM0JsWTNWc1lYSkdPVEFnS2lCbVlXSXVlVHNLQ1dac2IyRjBJRVZ6Y3lBOUlHWmhZaTU0SUNzZ1ptRmlMbms3Q2dsbWJHOWhkQ0JGYlhNZ1BTQXhMakFnTFNCRmMzTTdDZ2wyWldNeklFWmhkbWNnUFNCemNHVmpkV3hoY2tOdmJHOXlJQ3NnS0NBeExqQWdMU0J6Y0dWamRXeGhja052Ykc5eUlDa2dLaUF3TGpBME56WXhPVHNKZG1Wak15QkdiWE1nUFNCR2MzTkZjM01nS2lCR1lYWm5JQzhnS0NBeExqQWdMU0JGYlhNZ0tpQkdZWFpuSUNrN0NnbHphVzVuYkdWVFkyRjBkR1Z5SUNzOUlFWnpjMFZ6Y3pzS0NXMTFiSFJwVTJOaGRIUmxjaUFyUFNCR2JYTWdLaUJGYlhNN0NuMEtJMmxtSUU1VlRWOVNSVU5VWDBGU1JVRmZURWxIU0ZSVElENGdNQW9KZG05cFpDQlNSVjlFYVhKbFkzUmZVbVZqZEVGeVpXRmZVR2g1YzJsallXd29JR052Ym5OMElHbHVJRkpsWTNSQmNtVmhUR2xuYUhRZ2NtVmpkRUZ5WldGTWFXZG9kQ3dnWTI5dWMzUWdhVzRnUjJWdmJXVjBjbWxqUTI5dWRHVjRkQ0JuWlc5dFpYUnllU3dnWTI5dWMzUWdhVzRnVUdoNWMybGpZV3hOWVhSbGNtbGhiQ0J0WVhSbGNtbGhiQ3dnYVc1dmRYUWdVbVZtYkdWamRHVmtUR2xuYUhRZ2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1NCN0Nna0pkbVZqTXlCdWIzSnRZV3dnUFNCblpXOXRaWFJ5ZVM1dWIzSnRZV3c3Q2drSmRtVmpNeUIyYVdWM1JHbHlJRDBnWjJWdmJXVjBjbmt1ZG1sbGQwUnBjanNLQ1FsMlpXTXpJSEJ2YzJsMGFXOXVJRDBnWjJWdmJXVjBjbmt1Y0c5emFYUnBiMjQ3Q2drSmRtVmpNeUJzYVdkb2RGQnZjeUE5SUhKbFkzUkJjbVZoVEdsbmFIUXVjRzl6YVhScGIyNDdDZ2tKZG1Wak15Qm9ZV3htVjJsa2RHZ2dQU0J5WldOMFFYSmxZVXhwWjJoMExtaGhiR1pYYVdSMGFEc0tDUWwyWldNeklHaGhiR1pJWldsbmFIUWdQU0J5WldOMFFYSmxZVXhwWjJoMExtaGhiR1pJWldsbmFIUTdDZ2tKZG1Wak15QnNhV2RvZEVOdmJHOXlJRDBnY21WamRFRnlaV0ZNYVdkb2RDNWpiMnh2Y2pzS0NRbG1iRzloZENCeWIzVm5hRzVsYzNNZ1BTQnRZWFJsY21saGJDNXliM1ZuYUc1bGMzTTdDZ2tKZG1Wak15QnlaV04wUTI5dmNtUnpXeUEwSUYwN0Nna0pjbVZqZEVOdmIzSmtjMXNnTUNCZElEMGdiR2xuYUhSUWIzTWdLeUJvWVd4bVYybGtkR2dnTFNCb1lXeG1TR1ZwWjJoME93a0pjbVZqZEVOdmIzSmtjMXNnTVNCZElEMGdiR2xuYUhSUWIzTWdMU0JvWVd4bVYybGtkR2dnTFNCb1lXeG1TR1ZwWjJoME93b0pDWEpsWTNSRGIyOXlaSE5iSURJZ1hTQTlJR3hwWjJoMFVHOXpJQzBnYUdGc1psZHBaSFJvSUNzZ2FHRnNaa2hsYVdkb2REc0tDUWx5WldOMFEyOXZjbVJ6V3lBeklGMGdQU0JzYVdkb2RGQnZjeUFySUdoaGJHWlhhV1IwYUNBcklHaGhiR1pJWldsbmFIUTdDZ2tKZG1Wak1pQjFkaUE5SUV4VVExOVZkaWdnYm05eWJXRnNMQ0IyYVdWM1JHbHlMQ0J5YjNWbmFHNWxjM01nS1RzS0NRbDJaV00wSUhReElEMGdkR1Y0ZEhWeVpUSkVLQ0JzZEdOZk1Td2dkWFlnS1RzS0NRbDJaV00wSUhReUlEMGdkR1Y0ZEhWeVpUSkVLQ0JzZEdOZk1pd2dkWFlnS1RzS0NRbHRZWFF6SUcxSmJuWWdQU0J0WVhRektBb0pDUWwyWldNektDQjBNUzU0TENBd0xDQjBNUzU1SUNrc0Nna0pDWFpsWXpNb0lDQWdJREFzSURFc0lDQWdJREFnS1N3S0NRa0pkbVZqTXlnZ2RERXVlaXdnTUN3Z2RERXVkeUFwQ2drSktUc0tDUWwyWldNeklHWnlaWE51Wld3Z1BTQW9JRzFoZEdWeWFXRnNMbk53WldOMWJHRnlRMjlzYjNJZ0tpQjBNaTU0SUNzZ0tDQjJaV016S0NBeExqQWdLU0F0SUcxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5UTI5c2IzSWdLU0FxSUhReUxua2dLVHNLQ1FseVpXWnNaV04wWldSTWFXZG9kQzVrYVhKbFkzUlRjR1ZqZFd4aGNpQXJQU0JzYVdkb2RFTnZiRzl5SUNvZ1puSmxjMjVsYkNBcUlFeFVRMTlGZG1Gc2RXRjBaU2dnYm05eWJXRnNMQ0IyYVdWM1JHbHlMQ0J3YjNOcGRHbHZiaXdnYlVsdWRpd2djbVZqZEVOdmIzSmtjeUFwT3dvSkNYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYkdsbmFIUkRiMnh2Y2lBcUlHMWhkR1Z5YVdGc0xtUnBabVoxYzJWRGIyeHZjaUFxSUV4VVExOUZkbUZzZFdGMFpTZ2dibTl5YldGc0xDQjJhV1YzUkdseUxDQndiM05wZEdsdmJpd2diV0YwTXlnZ01TNHdJQ2tzSUhKbFkzUkRiMjl5WkhNZ0tUc0tDWDBLSTJWdVpHbG1Dblp2YVdRZ1VrVmZSR2x5WldOMFgxQm9lWE5wWTJGc0tDQmpiMjV6ZENCcGJpQkpibU5wWkdWdWRFeHBaMmgwSUdScGNtVmpkRXhwWjJoMExDQmpiMjV6ZENCcGJpQkhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNUxDQmpiMjV6ZENCcGJpQlFhSGx6YVdOaGJFMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc0xDQnBibTkxZENCU1pXWnNaV04wWldSTWFXZG9kQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBJSHNLQ1dac2IyRjBJR1J2ZEU1TUlEMGdjMkYwZFhKaGRHVW9JR1J2ZENnZ1oyVnZiV1YwY25rdWJtOXliV0ZzTENCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNGdLU0FwT3dvSmRtVmpNeUJwY25KaFpHbGhibU5sSUQwZ1pHOTBUa3dnS2lCa2FYSmxZM1JNYVdkb2RDNWpiMnh2Y2pzS0NTTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2tKWm14dllYUWdaRzkwVGt4all5QTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHZGxiMjFsZEhKNUxtTnNaV0Z5WTI5aGRFNXZjbTFoYkN3Z1pHbHlaV04wVEdsbmFIUXVaR2x5WldOMGFXOXVJQ2tnS1RzS0NRbDJaV016SUdOalNYSnlZV1JwWVc1alpTQTlJR1J2ZEU1TVkyTWdLaUJrYVhKbFkzUk1hV2RvZEM1amIyeHZjanNLQ1FsamJHVmhjbU52WVhSVGNHVmpkV3hoY2lBclBTQmpZMGx5Y21Ga2FXRnVZMlVnS2lCQ1VrUkdYMGRIV0NnZ1pHbHlaV04wVEdsbmFIUXVaR2x5WldOMGFXOXVMQ0JuWlc5dFpYUnllUzUyYVdWM1JHbHlMQ0JuWlc5dFpYUnllUzVqYkdWaGNtTnZZWFJPYjNKdFlXd3NJRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRVl3TENCdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSR09UQXNJRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeUFwT3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnVlZORlgxTklSVVZPQ2drSmMyaGxaVzVUY0dWamRXeGhjaUFyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5VGFHVmxiaWdnWkdseVpXTjBUR2xuYUhRdVpHbHlaV04wYVc5dUxDQm5aVzl0WlhSeWVTNTJhV1YzUkdseUxDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHMWhkR1Z5YVdGc0xuTm9aV1Z1UTI5c2IzSXNJRzFoZEdWeWFXRnNMbk5vWldWdVVtOTFaMmh1WlhOeklDazdDZ2tqWlc1a2FXWUtDWEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEZOd1pXTjFiR0Z5SUNzOUlHbHljbUZrYVdGdVkyVWdLaUJDVWtSR1gwZEhXQ2dnWkdseVpXTjBUR2xuYUhRdVpHbHlaV04wYVc5dUxDQm5aVzl0WlhSeWVTNTJhV1YzUkdseUxDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHMWhkR1Z5YVdGc0xuTndaV04xYkdGeVEyOXNiM0lzSUcxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5Umprd0xDQnRZWFJsY21saGJDNXliM1ZuYUc1bGMzTWdLVHNLQ1hKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ0t6MGdhWEp5WVdScFlXNWpaU0FxSUVKU1JFWmZUR0Z0WW1WeWRDZ2diV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUNrN0NuMEtkbTlwWkNCU1JWOUpibVJwY21WamRFUnBabVoxYzJWZlVHaDVjMmxqWVd3b0lHTnZibk4wSUdsdUlIWmxZek1nYVhKeVlXUnBZVzVqWlN3Z1kyOXVjM1FnYVc0Z1IyVnZiV1YwY21salEyOXVkR1Y0ZENCblpXOXRaWFJ5ZVN3Z1kyOXVjM1FnYVc0Z1VHaDVjMmxqWVd4TllYUmxjbWxoYkNCdFlYUmxjbWxoYkN3Z2FXNXZkWFFnVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ0tTQjdDZ2x5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdhWEp5WVdScFlXNWpaU0FxSUVKU1JFWmZUR0Z0WW1WeWRDZ2diV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUNrN0NuMEtkbTlwWkNCU1JWOUpibVJwY21WamRGTndaV04xYkdGeVgxQm9lWE5wWTJGc0tDQmpiMjV6ZENCcGJpQjJaV016SUhKaFpHbGhibU5sTENCamIyNXpkQ0JwYmlCMlpXTXpJR2x5Y21Ga2FXRnVZMlVzSUdOdmJuTjBJR2x1SUhabFl6TWdZMnhsWVhKamIyRjBVbUZrYVdGdVkyVXNJR052Ym5OMElHbHVJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdaMlZ2YldWMGNua3NJR052Ym5OMElHbHVJRkJvZVhOcFkyRnNUV0YwWlhKcFlXd2diV0YwWlhKcFlXd3NJR2x1YjNWMElGSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBLU0I3Q2dramFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZBb0pDV05zWldGeVkyOWhkRk53WldOMWJHRnlJQ3M5SUdOc1pXRnlZMjloZEZKaFpHbGhibU5sSUNvZ1JXNTJhWEp2Ym0xbGJuUkNVa1JHS0NCblpXOXRaWFJ5ZVM1amJHVmhjbU52WVhST2IzSnRZV3dzSUdkbGIyMWxkSEo1TG5acFpYZEVhWElzSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEVZd0xDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUkdPVEFzSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBcE93b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYMU5JUlVWT0Nna0pjMmhsWlc1VGNHVmpkV3hoY2lBclBTQnBjbkpoWkdsaGJtTmxJQ29nYldGMFpYSnBZV3d1YzJobFpXNURiMnh2Y2lBcUlFbENURk5vWldWdVFsSkVSaWdnWjJWdmJXVjBjbmt1Ym05eWJXRnNMQ0JuWlc5dFpYUnllUzUyYVdWM1JHbHlMQ0J0WVhSbGNtbGhiQzV6YUdWbGJsSnZkV2RvYm1WemN5QXBPd29KSTJWdVpHbG1DZ2wyWldNeklITnBibWRzWlZOallYUjBaWEpwYm1jZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1habFl6TWdiWFZzZEdsVFkyRjBkR1Z5YVc1bklEMGdkbVZqTXlnZ01DNHdJQ2s3Q2dsMlpXTXpJR052YzJsdVpWZGxhV2RvZEdWa1NYSnlZV1JwWVc1alpTQTlJR2x5Y21Ga2FXRnVZMlVnS2lCU1JVTkpVRkpQUTBGTVgxQkpPd29KWTI5dGNIVjBaVTExYkhScGMyTmhkSFJsY21sdVp5Z2daMlZ2YldWMGNua3VibTl5YldGc0xDQm5aVzl0WlhSeWVTNTJhV1YzUkdseUxDQnRZWFJsY21saGJDNXpjR1ZqZFd4aGNrTnZiRzl5TENCdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tZNU1Dd2diV0YwWlhKcFlXd3VjbTkxWjJodVpYTnpMQ0J6YVc1bmJHVlRZMkYwZEdWeWFXNW5MQ0J0ZFd4MGFWTmpZWFIwWlhKcGJtY2dLVHNLQ1habFl6TWdaR2xtWm5WelpTQTlJRzFoZEdWeWFXRnNMbVJwWm1aMWMyVkRiMnh2Y2lBcUlDZ2dNUzR3SUMwZ0tDQnphVzVuYkdWVFkyRjBkR1Z5YVc1bklDc2diWFZzZEdsVFkyRjBkR1Z5YVc1bklDa2dLVHNLQ1hKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBVM0JsWTNWc1lYSWdLejBnY21Ga2FXRnVZMlVnS2lCemFXNW5iR1ZUWTJGMGRHVnlhVzVuT3dvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JUY0dWamRXeGhjaUFyUFNCdGRXeDBhVk5qWVhSMFpYSnBibWNnS2lCamIzTnBibVZYWldsbmFIUmxaRWx5Y21Ga2FXRnVZMlU3Q2dseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLejBnWkdsbVpuVnpaU0FxSUdOdmMybHVaVmRsYVdkb2RHVmtTWEp5WVdScFlXNWpaVHNLZlFvalpHVm1hVzVsSUZKRlgwUnBjbVZqZEFrSkNRbFNSVjlFYVhKbFkzUmZVR2g1YzJsallXd0tJMlJsWm1sdVpTQlNSVjlFYVhKbFkzUmZVbVZqZEVGeVpXRUpDVkpGWDBScGNtVmpkRjlTWldOMFFYSmxZVjlRYUhsemFXTmhiQW9qWkdWbWFXNWxJRkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaUWtKVWtWZlNXNWthWEpsWTNSRWFXWm1kWE5sWDFCb2VYTnBZMkZzQ2lOa1pXWnBibVVnVWtWZlNXNWthWEpsWTNSVGNHVmpkV3hoY2drSlVrVmZTVzVrYVhKbFkzUlRjR1ZqZFd4aGNsOVFhSGx6YVdOaGJBcG1iRzloZENCamIyMXdkWFJsVTNCbFkzVnNZWEpQWTJOc2RYTnBiMjRvSUdOdmJuTjBJR2x1SUdac2IyRjBJR1J2ZEU1V0xDQmpiMjV6ZENCcGJpQm1iRzloZENCaGJXSnBaVzUwVDJOamJIVnphVzl1TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J5YjNWbmFHNWxjM01nS1NCN0NnbHlaWFIxY200Z2MyRjBkWEpoZEdVb0lIQnZkeWdnWkc5MFRsWWdLeUJoYldKcFpXNTBUMk5qYkhWemFXOXVMQ0JsZUhBeUtDQXRJREUyTGpBZ0tpQnliM1ZuYUc1bGMzTWdMU0F4TGpBZ0tTQXBJQzBnTVM0d0lDc2dZVzFpYVdWdWRFOWpZMngxYzJsdmJpQXBPd3A5WUN3Z2RYQWdQU0JnQ2tkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbms3Q21kbGIyMWxkSEo1TG5CdmMybDBhVzl1SUQwZ0xTQjJWbWxsZDFCdmMybDBhVzl1T3dwblpXOXRaWFJ5ZVM1dWIzSnRZV3dnUFNCdWIzSnRZV3c3Q21kbGIyMWxkSEo1TG5acFpYZEVhWElnUFNBb0lHbHpUM0owYUc5bmNtRndhR2xqSUNrZ1B5QjJaV016S0NBd0xDQXdMQ0F4SUNrZ09pQnViM0p0WVd4cGVtVW9JSFpXYVdWM1VHOXphWFJwYjI0Z0tUc0tJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlFLQ1dkbGIyMWxkSEo1TG1Oc1pXRnlZMjloZEU1dmNtMWhiQ0E5SUdOc1pXRnlZMjloZEU1dmNtMWhiRHNLSTJWdVpHbG1Da2x1WTJsa1pXNTBUR2xuYUhRZ1pHbHlaV04wVEdsbmFIUTdDaU5wWmlBb0lFNVZUVjlRVDBsT1ZGOU1TVWRJVkZNZ1BpQXdJQ2tnSmlZZ1pHVm1hVzVsWkNnZ1VrVmZSR2x5WldOMElDa0tDVkJ2YVc1MFRHbG5hSFFnY0c5cGJuUk1hV2RvZERzS0NTTnBaaUJrWldacGJtVmtLQ0JWVTBWZlUwaEJSRTlYVFVGUUlDa2dKaVlnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dsUWIybHVkRXhwWjJoMFUyaGhaRzkzSUhCdmFXNTBUR2xuYUhSVGFHRmtiM2M3Q2dralpXNWthV1lLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlRVDBsT1ZGOU1TVWRJVkZNN0lHa2dLeXNnS1NCN0Nna0pjRzlwYm5STWFXZG9kQ0E5SUhCdmFXNTBUR2xuYUhSeld5QnBJRjA3Q2drSloyVjBVRzlwYm5STWFXZG9kRWx1Wm04b0lIQnZhVzUwVEdsbmFIUXNJR2RsYjIxbGRISjVMQ0JrYVhKbFkzUk1hV2RvZENBcE93b0pDU05wWmlCa1pXWnBibVZrS0NCVlUwVmZVMGhCUkU5WFRVRlFJQ2tnSmlZZ0tDQlZUbEpQVEV4RlJGOU1UMDlRWDBsT1JFVllJRHdnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdLUW9KQ1hCdmFXNTBUR2xuYUhSVGFHRmtiM2NnUFNCd2IybHVkRXhwWjJoMFUyaGhaRzkzYzFzZ2FTQmRPd29KQ1dScGNtVmpkRXhwWjJoMExtTnZiRzl5SUNvOUlHRnNiQ2dnWW5abFl6SW9JR1JwY21WamRFeHBaMmgwTG5acGMybGliR1VzSUhKbFkyVnBkbVZUYUdGa2IzY2dLU0FwSUQ4Z1oyVjBVRzlwYm5SVGFHRmtiM2NvSUhCdmFXNTBVMmhoWkc5M1RXRndXeUJwSUYwc0lIQnZhVzUwVEdsbmFIUlRhR0ZrYjNjdWMyaGhaRzkzVFdGd1UybDZaU3dnY0c5cGJuUk1hV2RvZEZOb1lXUnZkeTV6YUdGa2IzZENhV0Z6TENCd2IybHVkRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkMUpoWkdsMWN5d2dkbEJ2YVc1MFUyaGhaRzkzUTI5dmNtUmJJR2tnWFN3Z2NHOXBiblJNYVdkb2RGTm9ZV1J2ZHk1emFHRmtiM2REWVcxbGNtRk9aV0Z5TENCd2IybHVkRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkME5oYldWeVlVWmhjaUFwSURvZ01TNHdPd29KQ1NObGJtUnBaZ29KQ1ZKRlgwUnBjbVZqZENnZ1pHbHlaV04wVEdsbmFIUXNJR2RsYjIxbGRISjVMQ0J0WVhSbGNtbGhiQ3dnY21WbWJHVmpkR1ZrVEdsbmFIUWdLVHNLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2lObGJtUnBaZ29qYVdZZ0tDQk9WVTFmVTFCUFZGOU1TVWRJVkZNZ1BpQXdJQ2tnSmlZZ1pHVm1hVzVsWkNnZ1VrVmZSR2x5WldOMElDa0tDVk53YjNSTWFXZG9kQ0J6Y0c5MFRHbG5hSFE3Q2dramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDFOSVFVUlBWMDFCVUNBcElDWW1JRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2xUY0c5MFRHbG5hSFJUYUdGa2IzY2djM0J2ZEV4cFoyaDBVMmhoWkc5M093b0pJMlZ1WkdsbUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlUxQlBWRjlNU1VkSVZGTTdJR2tnS3lzZ0tTQjdDZ2tKYzNCdmRFeHBaMmgwSUQwZ2MzQnZkRXhwWjJoMGMxc2dhU0JkT3dvSkNXZGxkRk53YjNSTWFXZG9kRWx1Wm04b0lITndiM1JNYVdkb2RDd2daMlZ2YldWMGNua3NJR1JwY21WamRFeHBaMmgwSUNrN0Nna0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOVRTRUZFVDFkTlFWQWdLU0FtSmlBb0lGVk9VazlNVEVWRVgweFBUMUJmU1U1RVJWZ2dQQ0JPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVElDa0tDUWx6Y0c5MFRHbG5hSFJUYUdGa2IzY2dQU0J6Y0c5MFRHbG5hSFJUYUdGa2IzZHpXeUJwSUYwN0Nna0paR2x5WldOMFRHbG5hSFF1WTI5c2IzSWdLajBnWVd4c0tDQmlkbVZqTWlnZ1pHbHlaV04wVEdsbmFIUXVkbWx6YVdKc1pTd2djbVZqWldsMlpWTm9ZV1J2ZHlBcElDa2dQeUJuWlhSVGFHRmtiM2NvSUhOd2IzUlRhR0ZrYjNkTllYQmJJR2tnWFN3Z2MzQnZkRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkMDFoY0ZOcGVtVXNJSE53YjNSTWFXZG9kRk5vWVdSdmR5NXphR0ZrYjNkQ2FXRnpMQ0J6Y0c5MFRHbG5hSFJUYUdGa2IzY3VjMmhoWkc5M1VtRmthWFZ6TENCMlUzQnZkRk5vWVdSdmQwTnZiM0prV3lCcElGMGdLU0E2SURFdU1Ec0tDUWtqWlc1a2FXWUtDUWxTUlY5RWFYSmxZM1FvSUdScGNtVmpkRXhwWjJoMExDQm5aVzl0WlhSeWVTd2diV0YwWlhKcFlXd3NJSEpsWm14bFkzUmxaRXhwWjJoMElDazdDZ2w5Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQW9qWlc1a2FXWUtJMmxtSUNnZ1RsVk5YMFJKVWw5TVNVZElWRk1nUGlBd0lDa2dKaVlnWkdWbWFXNWxaQ2dnVWtWZlJHbHlaV04wSUNrS0NVUnBjbVZqZEdsdmJtRnNUR2xuYUhRZ1pHbHlaV04wYVc5dVlXeE1hV2RvZERzS0NTTnBaaUJrWldacGJtVmtLQ0JWVTBWZlUwaEJSRTlYVFVGUUlDa2dKaVlnVGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KUkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmR5QmthWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzT3dvSkkyVnVaR2xtQ2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmUkVsU1gweEpSMGhVVXpzZ2FTQXJLeUFwSUhzS0NRbGthWEpsWTNScGIyNWhiRXhwWjJoMElEMGdaR2x5WldOMGFXOXVZV3hNYVdkb2RITmJJR2tnWFRzS0NRbG5aWFJFYVhKbFkzUnBiMjVoYkV4cFoyaDBTVzVtYnlnZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEN3Z1oyVnZiV1YwY25rc0lHUnBjbVZqZEV4cFoyaDBJQ2s3Q2drSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5VFNFRkVUMWROUVZBZ0tTQW1KaUFvSUZWT1VrOU1URVZFWDB4UFQxQmZTVTVFUlZnZ1BDQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nS1FvSkNXUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2NnUFNCa2FYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNjMXNnYVNCZE93b0pDV1JwY21WamRFeHBaMmgwTG1OdmJHOXlJQ285SUdGc2JDZ2dZblpsWXpJb0lHUnBjbVZqZEV4cFoyaDBMblpwYzJsaWJHVXNJSEpsWTJWcGRtVlRhR0ZrYjNjZ0tTQXBJRDhnWjJWMFUyaGhaRzkzS0NCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNGc2dhU0JkTENCa2FYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNMbk5vWVdSdmQwMWhjRk5wZW1Vc0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2N1YzJoaFpHOTNRbWxoY3l3Z1pHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkeTV6YUdGa2IzZFNZV1JwZFhNc0lIWkVhWEpsWTNScGIyNWhiRk5vWVdSdmQwTnZiM0prV3lCcElGMGdLU0E2SURFdU1Ec0tDUWtqWlc1a2FXWUtDUWxTUlY5RWFYSmxZM1FvSUdScGNtVmpkRXhwWjJoMExDQm5aVzl0WlhSeWVTd2diV0YwWlhKcFlXd3NJSEpsWm14bFkzUmxaRXhwWjJoMElDazdDZ2w5Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQW9qWlc1a2FXWUtJMmxtSUNnZ1RsVk5YMUpGUTFSZlFWSkZRVjlNU1VkSVZGTWdQaUF3SUNrZ0ppWWdaR1ZtYVc1bFpDZ2dVa1ZmUkdseVpXTjBYMUpsWTNSQmNtVmhJQ2tLQ1ZKbFkzUkJjbVZoVEdsbmFIUWdjbVZqZEVGeVpXRk1hV2RvZERzS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5U1JVTlVYMEZTUlVGZlRFbEhTRlJUT3lCcElDc3JJQ2tnZXdvSkNYSmxZM1JCY21WaFRHbG5hSFFnUFNCeVpXTjBRWEpsWVV4cFoyaDBjMXNnYVNCZE93b0pDVkpGWDBScGNtVmpkRjlTWldOMFFYSmxZU2dnY21WamRFRnlaV0ZNYVdkb2RDd2daMlZ2YldWMGNua3NJRzFoZEdWeWFXRnNMQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBPd29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLSTJWdVpHbG1DaU5wWmlCa1pXWnBibVZrS0NCU1JWOUpibVJwY21WamRFUnBabVoxYzJVZ0tRb0pkbVZqTXlCcFlteEpjbkpoWkdsaGJtTmxJRDBnZG1Wak15Z2dNQzR3SUNrN0NnbDJaV016SUdseWNtRmthV0Z1WTJVZ1BTQm5aWFJCYldKcFpXNTBUR2xuYUhSSmNuSmhaR2xoYm1ObEtDQmhiV0pwWlc1MFRHbG5hSFJEYjJ4dmNpQXBPd29KYVhKeVlXUnBZVzVqWlNBclBTQm5aWFJNYVdkb2RGQnliMkpsU1hKeVlXUnBZVzVqWlNnZ2JHbG5hSFJRY205aVpTd2daMlZ2YldWMGNua3VibTl5YldGc0lDazdDZ2tqYVdZZ0tDQk9WVTFmU0VWTlNWOU1TVWRJVkZNZ1BpQXdJQ2tLQ1FramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2drSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDBoRlRVbGZURWxIU0ZSVE95QnBJQ3NySUNrZ2V3b0pDUWxwY25KaFpHbGhibU5sSUNzOUlHZGxkRWhsYldsemNHaGxjbVZNYVdkb2RFbHljbUZrYVdGdVkyVW9JR2hsYldsemNHaGxjbVZNYVdkb2RITmJJR2tnWFN3Z1oyVnZiV1YwY25rdWJtOXliV0ZzSUNrN0Nna0pmUW9KQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDZ2tqWlc1a2FXWUtJMlZ1WkdsbUNpTnBaaUJrWldacGJtVmtLQ0JTUlY5SmJtUnBjbVZqZEZOd1pXTjFiR0Z5SUNrS0NYWmxZek1nY21Ga2FXRnVZMlVnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tDWFpsWXpNZ1kyeGxZWEpqYjJGMFVtRmthV0Z1WTJVZ1BTQjJaV016S0NBd0xqQWdLVHNLSTJWdVpHbG1ZQ3dnWkhBZ1BTQmdJMmxtSUdSbFptbHVaV1FvSUZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlNBcENna2phV1prWldZZ1ZWTkZYMHhKUjBoVVRVRlFDZ2tKZG1Wak5DQnNhV2RvZEUxaGNGUmxlR1ZzSUQwZ2RHVjRkSFZ5WlRKRUtDQnNhV2RvZEUxaGNDd2dkbFYyTWlBcE93b0pDWFpsWXpNZ2JHbG5hSFJOWVhCSmNuSmhaR2xoYm1ObElEMGdiR2xuYUhSTllYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCc2FXZG9kRTFoY0ZSbGVHVnNJQ2t1Y21kaUlDb2diR2xuYUhSTllYQkpiblJsYm5OcGRIazdDZ2tKSTJsbWJtUmxaaUJRU0ZsVFNVTkJURXhaWDBOUFVsSkZRMVJmVEVsSFNGUlRDZ2tKQ1d4cFoyaDBUV0Z3U1hKeVlXUnBZVzVqWlNBcVBTQlFTVHNLQ1FralpXNWthV1lLQ1FscGNuSmhaR2xoYm1ObElDczlJR3hwWjJoMFRXRndTWEp5WVdScFlXNWpaVHNLQ1NObGJtUnBaZ29KSTJsbUlHUmxabWx1WldRb0lGVlRSVjlGVGxaTlFWQWdLU0FtSmlCa1pXWnBibVZrS0NCVFZFRk9SRUZTUkNBcElDWW1JR1JsWm1sdVpXUW9JRVZPVmsxQlVGOVVXVkJGWDBOVlFrVmZWVllnS1FvSkNXbGliRWx5Y21Ga2FXRnVZMlVnS3owZ1oyVjBTVUpNU1hKeVlXUnBZVzVqWlNnZ1oyVnZiV1YwY25rdWJtOXliV0ZzSUNrN0Nna2paVzVrYVdZS0kyVnVaR2xtQ2lOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUlU1V1RVRlFJQ2tnSmlZZ1pHVm1hVzVsWkNnZ1VrVmZTVzVrYVhKbFkzUlRjR1ZqZFd4aGNpQXBDZ2x5WVdScFlXNWpaU0FyUFNCblpYUkpRa3hTWVdScFlXNWpaU2dnWjJWdmJXVjBjbmt1ZG1sbGQwUnBjaXdnWjJWdmJXVjBjbmt1Ym05eWJXRnNMQ0J0WVhSbGNtbGhiQzV5YjNWbmFHNWxjM01nS1RzS0NTTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2tKWTJ4bFlYSmpiMkYwVW1Ga2FXRnVZMlVnS3owZ1oyVjBTVUpNVW1Ga2FXRnVZMlVvSUdkbGIyMWxkSEo1TG5acFpYZEVhWElzSUdkbGIyMWxkSEo1TG1Oc1pXRnlZMjloZEU1dmNtMWhiQ3dnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUNrN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1puQWdQU0JnSTJsbUlHUmxabWx1WldRb0lGSkZYMGx1WkdseVpXTjBSR2xtWm5WelpTQXBDZ2xTUlY5SmJtUnBjbVZqZEVScFptWjFjMlVvSUdseWNtRmthV0Z1WTJVc0lHZGxiMjFsZEhKNUxDQnRZWFJsY21saGJDd2djbVZtYkdWamRHVmtUR2xuYUhRZ0tUc0tJMlZ1WkdsbUNpTnBaaUJrWldacGJtVmtLQ0JTUlY5SmJtUnBjbVZqZEZOd1pXTjFiR0Z5SUNrS0NWSkZYMGx1WkdseVpXTjBVM0JsWTNWc1lYSW9JSEpoWkdsaGJtTmxMQ0JwWW14SmNuSmhaR2xoYm1ObExDQmpiR1ZoY21OdllYUlNZV1JwWVc1alpTd2daMlZ2YldWMGNua3NJRzFoZEdWeWFXRnNMQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBPd29qWlc1a2FXWmdMQ0J3Y0NBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVlZORlgweFBSMFJGVUZSSVFsVkdJQ2tnSmlZZ1pHVm1hVzVsWkNnZ1ZWTkZYMHhQUjBSRlVGUklRbFZHWDBWWVZDQXBDZ2xuYkY5R2NtRm5SR1Z3ZEdoRldGUWdQU0IyU1hOUVpYSnpjR1ZqZEdsMlpTQTlQU0F3TGpBZ1B5Qm5iRjlHY21GblEyOXZjbVF1ZWlBNklHeHZaeklvSUhaR2NtRm5SR1Z3ZEdnZ0tTQXFJR3h2WjBSbGNIUm9RblZtUmtNZ0tpQXdMalU3Q2lObGJtUnBabUFzSUcxd0lEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZURTlIUkVWUVZFaENWVVlnS1NBbUppQmtaV1pwYm1Wa0tDQlZVMFZmVEU5SFJFVlFWRWhDVlVaZlJWaFVJQ2tLQ1hWdWFXWnZjbTBnWm14dllYUWdiRzluUkdWd2RHaENkV1pHUXpzS0NYWmhjbmxwYm1jZ1pteHZZWFFnZGtaeVlXZEVaWEIwYURzS0NYWmhjbmxwYm1jZ1pteHZZWFFnZGtselVHVnljM0JsWTNScGRtVTdDaU5sYm1ScFptQXNJR2R3SUQwZ1lDTnBabVJsWmlCVlUwVmZURTlIUkVWUVZFaENWVVlLQ1NOcFptUmxaaUJWVTBWZlRFOUhSRVZRVkVoQ1ZVWmZSVmhVQ2drSmRtRnllV2x1WnlCbWJHOWhkQ0IyUm5KaFowUmxjSFJvT3dvSkNYWmhjbmxwYm1jZ1pteHZZWFFnZGtselVHVnljM0JsWTNScGRtVTdDZ2tqWld4elpRb0pDWFZ1YVdadmNtMGdabXh2WVhRZ2JHOW5SR1Z3ZEdoQ2RXWkdRenNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0I0Y0NBOUlHQWphV1prWldZZ1ZWTkZYMHhQUjBSRlVGUklRbFZHQ2dramFXWmtaV1lnVlZORlgweFBSMFJGVUZSSVFsVkdYMFZZVkFvSkNYWkdjbUZuUkdWd2RHZ2dQU0F4TGpBZ0t5Qm5iRjlRYjNOcGRHbHZiaTUzT3dvSkNYWkpjMUJsY25Od1pXTjBhWFpsSUQwZ1pteHZZWFFvSUdselVHVnljM0JsWTNScGRtVk5ZWFJ5YVhnb0lIQnliMnBsWTNScGIyNU5ZWFJ5YVhnZ0tTQXBPd29KSTJWc2MyVUtDUWxwWmlBb0lHbHpVR1Z5YzNCbFkzUnBkbVZOWVhSeWFYZ29JSEJ5YjJwbFkzUnBiMjVOWVhSeWFYZ2dLU0FwSUhzS0NRa0paMnhmVUc5emFYUnBiMjR1ZWlBOUlHeHZaeklvSUcxaGVDZ2dSVkJUU1V4UFRpd2daMnhmVUc5emFYUnBiMjR1ZHlBcklERXVNQ0FwSUNrZ0tpQnNiMmRFWlhCMGFFSjFaa1pESUMwZ01TNHdPd29KQ1FsbmJGOVFiM05wZEdsdmJpNTZJQ285SUdkc1gxQnZjMmwwYVc5dUxuYzdDZ2tKZlFvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUhsd0lEMGdZQ05wWm1SbFppQlZVMFZmVFVGUUNnbDJaV00wSUhSbGVHVnNRMjlzYjNJZ1BTQjBaWGgwZFhKbE1rUW9JRzFoY0N3Z2RsVjJJQ2s3Q2dsMFpYaGxiRU52Ykc5eUlEMGdiV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2dkR1Y0Wld4RGIyeHZjaUFwT3dvSlpHbG1ablZ6WlVOdmJHOXlJQ285SUhSbGVHVnNRMjlzYjNJN0NpTmxibVJwWm1Bc0lIWndJRDBnWUNOcFptUmxaaUJWVTBWZlRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0J0WVhBN0NpTmxibVJwWm1Bc0lGOXdJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwRk1VRWhCVFVGUUlDa0tDWFpsWXpJZ2RYWWdQU0FvSUhWMlZISmhibk5tYjNKdElDb2dkbVZqTXlnZ1oyeGZVRzlwYm5SRGIyOXlaQzU0TENBeExqQWdMU0JuYkY5UWIybHVkRU52YjNKa0xua3NJREVnS1NBcExuaDVPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlOUVZBS0NYWmxZelFnYldGd1ZHVjRaV3dnUFNCMFpYaDBkWEpsTWtRb0lHMWhjQ3dnZFhZZ0tUc0tDV1JwWm1aMWMyVkRiMnh2Y2lBcVBTQnRZWEJVWlhobGJGUnZUR2x1WldGeUtDQnRZWEJVWlhobGJDQXBPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlCVEZCSVFVMUJVQW9KWkdsbVpuVnpaVU52Ykc5eUxtRWdLajBnZEdWNGRIVnlaVEpFS0NCaGJIQm9ZVTFoY0N3Z2RYWWdLUzVuT3dvalpXNWthV1pnTENCTmNDQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMDFCVUNBcElIeDhJR1JsWm1sdVpXUW9JRlZUUlY5QlRGQklRVTFCVUNBcENnbDFibWxtYjNKdElHMWhkRE1nZFhaVWNtRnVjMlp2Y20wN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYldGd093b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOUJURkJJUVUxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdZV3h3YUdGTllYQTdDaU5sYm1ScFptQXNJR0p3SUQwZ1lHWnNiMkYwSUcxbGRHRnNibVZ6YzBaaFkzUnZjaUE5SUcxbGRHRnNibVZ6Y3pzS0kybG1aR1ZtSUZWVFJWOU5SVlJCVEU1RlUxTk5RVkFLQ1habFl6UWdkR1Y0Wld4TlpYUmhiRzVsYzNNZ1BTQjBaWGgwZFhKbE1rUW9JRzFsZEdGc2JtVnpjMDFoY0N3Z2RsVjJJQ2s3Q2dsdFpYUmhiRzVsYzNOR1lXTjBiM0lnS2owZ2RHVjRaV3hOWlhSaGJHNWxjM011WWpzS0kyVnVaR2xtWUN3Z2QzQWdQU0JnSTJsbVpHVm1JRlZUUlY5TlJWUkJURTVGVTFOTlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJRzFsZEdGc2JtVnpjMDFoY0RzS0kyVnVaR2xtWUN3Z1UzQWdQU0JnSTJsbVpHVm1JRlZUUlY5TlQxSlFTRTVQVWsxQlRGTUtDVzlpYW1WamRFNXZjbTFoYkNBcVBTQnRiM0p3YUZSaGNtZGxkRUpoYzJWSmJtWnNkV1Z1WTJVN0Nna2phV1prWldZZ1RVOVNVRWhVUVZKSFJWUlRYMVJGV0ZSVlVrVUtDUWxtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCTlQxSlFTRlJCVWtkRlZGTmZRMDlWVGxRN0lHa2dLeXNnS1NCN0Nna0pDV2xtSUNnZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUJwSUYwZ1BpQXdMakFnS1NCdlltcGxZM1JPYjNKdFlXd2dLejBnWjJWMFRXOXljR2dvSUdkc1gxWmxjblJsZUVsRUxDQnBMQ0F4TENBeUlDa2dLaUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklHa2dYVHNLQ1FsOUNna2paV3h6WlFvSkNXOWlhbVZqZEU1dmNtMWhiQ0FyUFNCdGIzSndhRTV2Y20xaGJEQWdLaUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklEQWdYVHNLQ1FsdlltcGxZM1JPYjNKdFlXd2dLejBnYlc5eWNHaE9iM0p0WVd3eElDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBeElGMDdDZ2tKYjJKcVpXTjBUbTl5YldGc0lDczlJRzF2Y25Cb1RtOXliV0ZzTWlBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTWlCZE93b0pDVzlpYW1WamRFNXZjbTFoYkNBclBTQnRiM0p3YUU1dmNtMWhiRE1nS2lCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJRE1nWFRzS0NTTmxibVJwWmdvalpXNWthV1pnTENCVWNDQTlJR0FqYVdaa1pXWWdWVk5GWDAxUFVsQklWRUZTUjBWVVV3b0pkVzVwWm05eWJTQm1iRzloZENCdGIzSndhRlJoY21kbGRFSmhjMlZKYm1ac2RXVnVZMlU3Q2dramFXWmtaV1lnVFU5U1VFaFVRVkpIUlZSVFgxUkZXRlJWVWtVS0NRbDFibWxtYjNKdElHWnNiMkYwSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dUVTlTVUVoVVFWSkhSVlJUWDBOUFZVNVVJRjA3Q2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtSQmNuSmhlU0J0YjNKd2FGUmhjbWRsZEhOVVpYaDBkWEpsT3dvSkNYVnVhV1p2Y20wZ2RtVmpNaUJ0YjNKd2FGUmhjbWRsZEhOVVpYaDBkWEpsVTJsNlpUc0tDUWwyWldNeklHZGxkRTF2Y25Cb0tDQmpiMjV6ZENCcGJpQnBiblFnZG1WeWRHVjRTVzVrWlhnc0lHTnZibk4wSUdsdUlHbHVkQ0J0YjNKd2FGUmhjbWRsZEVsdVpHVjRMQ0JqYjI1emRDQnBiaUJwYm5RZ2IyWm1jMlYwTENCamIyNXpkQ0JwYmlCcGJuUWdjM1J5YVdSbElDa2dld29KQ1FsbWJHOWhkQ0IwWlhobGJFbHVaR1Y0SUQwZ1pteHZZWFFvSUhabGNuUmxlRWx1WkdWNElDb2djM1J5YVdSbElDc2diMlptYzJWMElDazdDZ2tKQ1dac2IyRjBJSGtnUFNCbWJHOXZjaWdnZEdWNFpXeEpibVJsZUNBdklHMXZjbkJvVkdGeVoyVjBjMVJsZUhSMWNtVlRhWHBsTG5nZ0tUc0tDUWtKWm14dllYUWdlQ0E5SUhSbGVHVnNTVzVrWlhnZ0xTQjVJQ29nYlc5eWNHaFVZWEpuWlhSelZHVjRkSFZ5WlZOcGVtVXVlRHNLQ1FrSmRtVmpNeUJ0YjNKd2FGVldJRDBnZG1Wak15Z2dLQ0I0SUNzZ01DNDFJQ2tnTHlCdGIzSndhRlJoY21kbGRITlVaWGgwZFhKbFUybDZaUzU0TENCNUlDOGdiVzl5Y0doVVlYSm5aWFJ6VkdWNGRIVnlaVk5wZW1VdWVTd2diVzl5Y0doVVlYSm5aWFJKYm1SbGVDQXBPd29KQ1FseVpYUjFjbTRnZEdWNGRIVnlaU2dnYlc5eWNHaFVZWEpuWlhSelZHVjRkSFZ5WlN3Z2JXOXljR2hWVmlBcExuaDVlanNLQ1FsOUNna2paV3h6WlFvSkNTTnBabTVrWldZZ1ZWTkZYMDFQVWxCSVRrOVNUVUZNVXdvSkNRbDFibWxtYjNKdElHWnNiMkYwSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dPQ0JkT3dvSkNTTmxiSE5sQ2drSkNYVnVhV1p2Y20wZ1pteHZZWFFnYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QTBJRjA3Q2drSkkyVnVaR2xtQ2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnUlhBZ1BTQmdJMmxtWkdWbUlGVlRSVjlOVDFKUVNGUkJVa2RGVkZNS0NYUnlZVzV6Wm05eWJXVmtJQ285SUcxdmNuQm9WR0Z5WjJWMFFtRnpaVWx1Wm14MVpXNWpaVHNLQ1NOcFptUmxaaUJOVDFKUVNGUkJVa2RGVkZOZlZFVllWRlZTUlFvSkNXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTFQVWxCSVZFRlNSMFZVVTE5RFQxVk9WRHNnYVNBckt5QXBJSHNLQ1FrSkkybG1ibVJsWmlCVlUwVmZUVTlTVUVoT1QxSk5RVXhUQ2drSkNRbHBaaUFvSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dhU0JkSUQ0Z01DNHdJQ2tnZEhKaGJuTm1iM0p0WldRZ0t6MGdaMlYwVFc5eWNHZ29JR2RzWDFabGNuUmxlRWxFTENCcExDQXdMQ0F4SUNrZ0tpQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSUdrZ1hUc0tDUWtKSTJWc2MyVUtDUWtKQ1dsbUlDZ2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lCcElGMGdQaUF3TGpBZ0tTQjBjbUZ1YzJadmNtMWxaQ0FyUFNCblpYUk5iM0p3YUNnZ1oyeGZWbVZ5ZEdWNFNVUXNJR2tzSURBc0lESWdLU0FxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dhU0JkT3dvSkNRa2paVzVrYVdZS0NRbDlDZ2tqWld4elpRb0pDWFJ5WVc1elptOXliV1ZrSUNzOUlHMXZjbkJvVkdGeVoyVjBNQ0FxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dNQ0JkT3dvSkNYUnlZVzV6Wm05eWJXVmtJQ3M5SUcxdmNuQm9WR0Z5WjJWME1TQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ01TQmRPd29KQ1hSeVlXNXpabTl5YldWa0lDczlJRzF2Y25Cb1ZHRnlaMlYwTWlBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTWlCZE93b0pDWFJ5WVc1elptOXliV1ZrSUNzOUlHMXZjbkJvVkdGeVoyVjBNeUFxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dNeUJkT3dvSkNTTnBabTVrWldZZ1ZWTkZYMDFQVWxCSVRrOVNUVUZNVXdvSkNRbDBjbUZ1YzJadmNtMWxaQ0FyUFNCdGIzSndhRlJoY21kbGREUWdLaUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklEUWdYVHNLQ1FrSmRISmhibk5tYjNKdFpXUWdLejBnYlc5eWNHaFVZWEpuWlhRMUlDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBMUlGMDdDZ2tKQ1hSeVlXNXpabTl5YldWa0lDczlJRzF2Y25Cb1ZHRnlaMlYwTmlBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTmlCZE93b0pDUWwwY21GdWMyWnZjbTFsWkNBclBTQnRiM0p3YUZSaGNtZGxkRGNnS2lCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJRGNnWFRzS0NRa2paVzVrYVdZS0NTTmxibVJwWmdvalpXNWthV1pnTENCQmNDQTlJR0JtYkc5aGRDQm1ZV05sUkdseVpXTjBhVzl1SUQwZ1oyeGZSbkp2Ym5SR1lXTnBibWNnUHlBeExqQWdPaUF0SURFdU1Ec0tJMmxtWkdWbUlFWk1RVlJmVTBoQlJFVkVDZ2wyWldNeklHWmtlQ0E5SUhabFl6TW9JR1JHWkhnb0lIWldhV1YzVUc5emFYUnBiMjR1ZUNBcExDQmtSbVI0S0NCMlZtbGxkMUJ2YzJsMGFXOXVMbmtnS1N3Z1pFWmtlQ2dnZGxacFpYZFFiM05wZEdsdmJpNTZJQ2tnS1RzS0NYWmxZek1nWm1SNUlEMGdkbVZqTXlnZ1pFWmtlU2dnZGxacFpYZFFiM05wZEdsdmJpNTRJQ2tzSUdSR1pIa29JSFpXYVdWM1VHOXphWFJwYjI0dWVTQXBMQ0JrUm1SNUtDQjJWbWxsZDFCdmMybDBhVzl1TG5vZ0tTQXBPd29KZG1Wak15QnViM0p0WVd3Z1BTQnViM0p0WVd4cGVtVW9JR055YjNOektDQm1aSGdzSUdaa2VTQXBJQ2s3Q2lObGJITmxDZ2wyWldNeklHNXZjbTFoYkNBOUlHNXZjbTFoYkdsNlpTZ2dkazV2Y20xaGJDQXBPd29KSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSkNXNXZjbTFoYkNBOUlHNXZjbTFoYkNBcUlHWmhZMlZFYVhKbFkzUnBiMjQ3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlZFRk9SMFZPVkFvSkNYWmxZek1nZEdGdVoyVnVkQ0E5SUc1dmNtMWhiR2w2WlNnZ2RsUmhibWRsYm5RZ0tUc0tDUWwyWldNeklHSnBkR0Z1WjJWdWRDQTlJRzV2Y20xaGJHbDZaU2dnZGtKcGRHRnVaMlZ1ZENBcE93b0pDU05wWm1SbFppQkVUMVZDVEVWZlUwbEVSVVFLQ1FrSmRHRnVaMlZ1ZENBOUlIUmhibWRsYm5RZ0tpQm1ZV05sUkdseVpXTjBhVzl1T3dvSkNRbGlhWFJoYm1kbGJuUWdQU0JpYVhSaGJtZGxiblFnS2lCbVlXTmxSR2x5WldOMGFXOXVPd29KQ1NObGJtUnBaZ29KQ1NOcFppQmtaV1pwYm1Wa0tDQlVRVTVIUlU1VVUxQkJRMFZmVGs5U1RVRk1UVUZRSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDBOTVJVRlNRMDlCVkY5T1QxSk5RVXhOUVZBZ0tRb0pDUWx0WVhReklIWlVRazRnUFNCdFlYUXpLQ0IwWVc1blpXNTBMQ0JpYVhSaGJtZGxiblFzSUc1dmNtMWhiQ0FwT3dvSkNTTmxibVJwWmdvSkkyVnVaR2xtQ2lObGJtUnBaZ3AyWldNeklHZGxiMjFsZEhKNVRtOXliV0ZzSUQwZ2JtOXliV0ZzTzJBc0lFTndJRDBnWUNOcFptUmxaaUJQUWtwRlExUlRVRUZEUlY5T1QxSk5RVXhOUVZBS0NXNXZjbTFoYkNBOUlIUmxlSFIxY21VeVJDZ2dibTl5YldGc1RXRndMQ0IyVlhZZ0tTNTRlWG9nS2lBeUxqQWdMU0F4TGpBN0Nna2phV1prWldZZ1JreEpVRjlUU1VSRlJBb0pDVzV2Y20xaGJDQTlJQzBnYm05eWJXRnNPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdSRTlWUWt4RlgxTkpSRVZFQ2drSmJtOXliV0ZzSUQwZ2JtOXliV0ZzSUNvZ1ptRmpaVVJwY21WamRHbHZianNLQ1NObGJtUnBaZ29KYm05eWJXRnNJRDBnYm05eWJXRnNhWHBsS0NCdWIzSnRZV3hOWVhSeWFYZ2dLaUJ1YjNKdFlXd2dLVHNLSTJWc2FXWWdaR1ZtYVc1bFpDZ2dWRUZPUjBWT1ZGTlFRVU5GWDA1UFVrMUJURTFCVUNBcENnbDJaV016SUcxaGNFNGdQU0IwWlhoMGRYSmxNa1FvSUc1dmNtMWhiRTFoY0N3Z2RsVjJJQ2t1ZUhsNklDb2dNaTR3SUMwZ01TNHdPd29KYldGd1RpNTRlU0FxUFNCdWIzSnRZV3hUWTJGc1pUc0tDU05wWm1SbFppQlZVMFZmVkVGT1IwVk9WQW9KQ1c1dmNtMWhiQ0E5SUc1dmNtMWhiR2w2WlNnZ2RsUkNUaUFxSUcxaGNFNGdLVHNLQ1NObGJITmxDZ2tKYm05eWJXRnNJRDBnY0dWeWRIVnlZazV2Y20xaGJESkJjbUlvSUMwZ2RsWnBaWGRRYjNOcGRHbHZiaXdnYm05eWJXRnNMQ0J0WVhCT0xDQm1ZV05sUkdseVpXTjBhVzl1SUNrN0Nna2paVzVrYVdZS0kyVnNhV1lnWkdWbWFXNWxaQ2dnVlZORlgwSlZUVkJOUVZBZ0tRb0pibTl5YldGc0lEMGdjR1Z5ZEhWeVlrNXZjbTFoYkVGeVlpZ2dMU0IyVm1sbGQxQnZjMmwwYVc5dUxDQnViM0p0WVd3c0lHUklaSGg1WDJaM1pDZ3BMQ0JtWVdObFJHbHlaV04wYVc5dUlDazdDaU5sYm1ScFptQXNJRXh3SUQwZ1lDTnBabTVrWldZZ1JreEJWRjlUU0VGRVJVUUtDWFpoY25scGJtY2dkbVZqTXlCMlRtOXliV0ZzT3dvSkkybG1aR1ZtSUZWVFJWOVVRVTVIUlU1VUNna0pkbUZ5ZVdsdVp5QjJaV016SUhaVVlXNW5aVzUwT3dvSkNYWmhjbmxwYm1jZ2RtVmpNeUIyUW1sMFlXNW5aVzUwT3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUZKd0lEMGdZQ05wWm01a1pXWWdSa3hCVkY5VFNFRkVSVVFLQ1haaGNubHBibWNnZG1Wak15QjJUbTl5YldGc093b0pJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVDZ2tKZG1GeWVXbHVaeUIyWldNeklIWlVZVzVuWlc1ME93b0pDWFpoY25scGJtY2dkbVZqTXlCMlFtbDBZVzVuWlc1ME93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lGQndJRDBnWUNOcFptNWtaV1lnUmt4QlZGOVRTRUZFUlVRS0NYWk9iM0p0WVd3Z1BTQnViM0p0WVd4cGVtVW9JSFJ5WVc1elptOXliV1ZrVG05eWJXRnNJQ2s3Q2dramFXWmtaV1lnVlZORlgxUkJUa2RGVGxRS0NRbDJWR0Z1WjJWdWRDQTlJRzV2Y20xaGJHbDZaU2dnZEhKaGJuTm1iM0p0WldSVVlXNW5aVzUwSUNrN0Nna0pka0pwZEdGdVoyVnVkQ0E5SUc1dmNtMWhiR2w2WlNnZ1kzSnZjM01vSUhaT2IzSnRZV3dzSUhaVVlXNW5aVzUwSUNrZ0tpQjBZVzVuWlc1MExuY2dLVHNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JKY0NBOUlHQWphV1prWldZZ1ZWTkZYMDVQVWsxQlRFMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYm05eWJXRnNUV0Z3T3dvSmRXNXBabTl5YlNCMlpXTXlJRzV2Y20xaGJGTmpZV3hsT3dvalpXNWthV1lLSTJsbVpHVm1JRTlDU2tWRFZGTlFRVU5GWDA1UFVrMUJURTFCVUFvSmRXNXBabTl5YlNCdFlYUXpJRzV2Y20xaGJFMWhkSEpwZURzS0kyVnVaR2xtQ2lOcFppQWhJR1JsWm1sdVpXUWdLQ0JWVTBWZlZFRk9SMFZPVkNBcElDWW1JQ2dnWkdWbWFXNWxaQ0FvSUZSQlRrZEZUbFJUVUVGRFJWOU9UMUpOUVV4TlFWQWdLU0I4ZkNCa1pXWnBibVZrSUNnZ1ZWTkZYME5NUlVGU1EwOUJWRjlPVDFKTlFVeE5RVkFnS1NBcENnbDJaV016SUhCbGNuUjFjbUpPYjNKdFlXd3lRWEppS0NCMlpXTXpJR1Y1WlY5d2IzTXNJSFpsWXpNZ2MzVnlabDl1YjNKdExDQjJaV016SUcxaGNFNHNJR1pzYjJGMElHWmhZMlZFYVhKbFkzUnBiMjRnS1NCN0Nna0pkbVZqTXlCeE1DQTlJSFpsWXpNb0lHUkdaSGdvSUdWNVpWOXdiM011ZUNBcExDQmtSbVI0S0NCbGVXVmZjRzl6TG5rZ0tTd2daRVprZUNnZ1pYbGxYM0J2Y3k1NklDa2dLVHNLQ1FsMlpXTXpJSEV4SUQwZ2RtVmpNeWdnWkVaa2VTZ2daWGxsWDNCdmN5NTRJQ2tzSUdSR1pIa29JR1Y1WlY5d2IzTXVlU0FwTENCa1JtUjVLQ0JsZVdWZmNHOXpMbm9nS1NBcE93b0pDWFpsWXpJZ2MzUXdJRDBnWkVaa2VDZ2dkbFYyTG5OMElDazdDZ2tKZG1Wak1pQnpkREVnUFNCa1JtUjVLQ0IyVlhZdWMzUWdLVHNLQ1FsMlpXTXpJRTRnUFNCemRYSm1YMjV2Y20wN0Nna0pkbVZqTXlCeE1YQmxjbkFnUFNCamNtOXpjeWdnY1RFc0lFNGdLVHNLQ1FsMlpXTXpJSEV3Y0dWeWNDQTlJR055YjNOektDQk9MQ0J4TUNBcE93b0pDWFpsWXpNZ1ZDQTlJSEV4Y0dWeWNDQXFJSE4wTUM1NElDc2djVEJ3WlhKd0lDb2djM1F4TG5nN0Nna0pkbVZqTXlCQ0lEMGdjVEZ3WlhKd0lDb2djM1F3TG5rZ0t5QnhNSEJsY25BZ0tpQnpkREV1ZVRzS0NRbG1iRzloZENCa1pYUWdQU0J0WVhnb0lHUnZkQ2dnVkN3Z1ZDQXBMQ0JrYjNRb0lFSXNJRUlnS1NBcE93b0pDV1pzYjJGMElITmpZV3hsSUQwZ0tDQmtaWFFnUFQwZ01DNHdJQ2tnUHlBd0xqQWdPaUJtWVdObFJHbHlaV04wYVc5dUlDb2dhVzUyWlhKelpYTnhjblFvSUdSbGRDQXBPd29KQ1hKbGRIVnliaUJ1YjNKdFlXeHBlbVVvSUZRZ0tpQW9JRzFoY0U0dWVDQXFJSE5qWVd4bElDa2dLeUJDSUNvZ0tDQnRZWEJPTG5rZ0tpQnpZMkZzWlNBcElDc2dUaUFxSUcxaGNFNHVlaUFwT3dvSmZRb2paVzVrYVdaZ0xDQkVjQ0E5SUdBamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZBb0pkbVZqTXlCamJHVmhjbU52WVhST2IzSnRZV3dnUFNCblpXOXRaWFJ5ZVU1dmNtMWhiRHNLSTJWdVpHbG1ZQ3dnUm5BZ1BTQmdJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlJmVGs5U1RVRk1UVUZRQ2dsMlpXTXpJR05zWldGeVkyOWhkRTFoY0U0Z1BTQjBaWGgwZFhKbE1rUW9JR05zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ3dnZGxWMklDa3VlSGw2SUNvZ01pNHdJQzBnTVM0d093b0pZMnhsWVhKamIyRjBUV0Z3VGk1NGVTQXFQU0JqYkdWaGNtTnZZWFJPYjNKdFlXeFRZMkZzWlRzS0NTTnBabVJsWmlCVlUwVmZWRUZPUjBWT1ZBb0pDV05zWldGeVkyOWhkRTV2Y20xaGJDQTlJRzV2Y20xaGJHbDZaU2dnZGxSQ1RpQXFJR05zWldGeVkyOWhkRTFoY0U0Z0tUc0tDU05sYkhObENna0pZMnhsWVhKamIyRjBUbTl5YldGc0lEMGdjR1Z5ZEhWeVlrNXZjbTFoYkRKQmNtSW9JQzBnZGxacFpYZFFiM05wZEdsdmJpd2dZMnhsWVhKamIyRjBUbTl5YldGc0xDQmpiR1ZoY21OdllYUk5ZWEJPTENCbVlXTmxSR2x5WldOMGFXOXVJQ2s3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnVG5BZ1BTQmdJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlJOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHTnNaV0Z5WTI5aGRFMWhjRHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVWDFKUFZVZElUa1ZUVTAxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZSZlRrOVNUVUZNVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmpiR1ZoY21OdllYUk9iM0p0WVd4TllYQTdDZ2wxYm1sbWIzSnRJSFpsWXpJZ1kyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVTdDaU5sYm1ScFptQXNJRUp3SUQwZ1lDTnBabVJsWmlCUFVFRlJWVVVLWkdsbVpuVnpaVU52Ykc5eUxtRWdQU0F4TGpBN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgxUlNRVTVUVFVsVFUwbFBUZ3BrYVdabWRYTmxRMjlzYjNJdVlTQXFQU0IwY21GdWMyMXBjM05wYjI1QmJIQm9ZU0FySURBdU1Uc0tJMlZ1WkdsbUNtZHNYMFp5WVdkRGIyeHZjaUE5SUhabFl6UW9JRzkxZEdkdmFXNW5UR2xuYUhRc0lHUnBabVoxYzJWRGIyeHZjaTVoSUNrN1lDd2dlbkFnUFNCZ2RtVmpNeUJ3WVdOclRtOXliV0ZzVkc5U1IwSW9JR052Ym5OMElHbHVJSFpsWXpNZ2JtOXliV0ZzSUNrZ2V3b0pjbVYwZFhKdUlHNXZjbTFoYkdsNlpTZ2dibTl5YldGc0lDa2dLaUF3TGpVZ0t5QXdMalU3Q24wS2RtVmpNeUIxYm5CaFkydFNSMEpVYjA1dmNtMWhiQ2dnWTI5dWMzUWdhVzRnZG1Wak15QnlaMklnS1NCN0NnbHlaWFIxY200Z01pNHdJQ29nY21kaUxuaDVlaUF0SURFdU1Ec0tmUXBqYjI1emRDQm1iRzloZENCUVlXTnJWWEJ6WTJGc1pTQTlJREkxTmk0Z0x5QXlOVFV1TzJOdmJuTjBJR1pzYjJGMElGVnVjR0ZqYTBSdmQyNXpZMkZzWlNBOUlESTFOUzRnTHlBeU5UWXVPd3BqYjI1emRDQjJaV016SUZCaFkydEdZV04wYjNKeklEMGdkbVZqTXlnZ01qVTJMaUFxSURJMU5pNGdLaUF5TlRZdUxDQXlOVFl1SUNvZ01qVTJMaXdnTWpVMkxpQXBPd3BqYjI1emRDQjJaV00wSUZWdWNHRmphMFpoWTNSdmNuTWdQU0JWYm5CaFkydEViM2R1YzJOaGJHVWdMeUIyWldNMEtDQlFZV05yUm1GamRHOXljeXdnTVM0Z0tUc0tZMjl1YzNRZ1pteHZZWFFnVTJocFpuUlNhV2RvZERnZ1BTQXhMaUF2SURJMU5pNDdDblpsWXpRZ2NHRmphMFJsY0hSb1ZHOVNSMEpCS0NCamIyNXpkQ0JwYmlCbWJHOWhkQ0IySUNrZ2V3b0pkbVZqTkNCeUlEMGdkbVZqTkNnZ1puSmhZM1FvSUhZZ0tpQlFZV05yUm1GamRHOXljeUFwTENCMklDazdDZ2x5TG5sNmR5QXRQU0J5TG5oNWVpQXFJRk5vYVdaMFVtbG5hSFE0T3dseVpYUjFjbTRnY2lBcUlGQmhZMnRWY0hOallXeGxPd3A5Q21ac2IyRjBJSFZ1Y0dGamExSkhRa0ZVYjBSbGNIUm9LQ0JqYjI1emRDQnBiaUIyWldNMElIWWdLU0I3Q2dseVpYUjFjbTRnWkc5MEtDQjJMQ0JWYm5CaFkydEdZV04wYjNKeklDazdDbjBLZG1Wak5DQndZV05yTWtoaGJHWlViMUpIUWtFb0lIWmxZeklnZGlBcElIc0tDWFpsWXpRZ2NpQTlJSFpsWXpRb0lIWXVlQ3dnWm5KaFkzUW9JSFl1ZUNBcUlESTFOUzR3SUNrc0lIWXVlU3dnWm5KaFkzUW9JSFl1ZVNBcUlESTFOUzR3SUNrZ0tUc0tDWEpsZEhWeWJpQjJaV00wS0NCeUxuZ2dMU0J5TG5rZ0x5QXlOVFV1TUN3Z2NpNTVMQ0J5TG5vZ0xTQnlMbmNnTHlBeU5UVXVNQ3dnY2k1M0lDazdDbjBLZG1Wak1pQjFibkJoWTJ0U1IwSkJWRzh5U0dGc1ppZ2dkbVZqTkNCMklDa2dld29KY21WMGRYSnVJSFpsWXpJb0lIWXVlQ0FySUNnZ2RpNTVJQzhnTWpVMUxqQWdLU3dnZGk1NklDc2dLQ0IyTG5jZ0x5QXlOVFV1TUNBcElDazdDbjBLWm14dllYUWdkbWxsZDFwVWIwOXlkR2h2WjNKaGNHaHBZMFJsY0hSb0tDQmpiMjV6ZENCcGJpQm1iRzloZENCMmFXVjNXaXdnWTI5dWMzUWdhVzRnWm14dllYUWdibVZoY2l3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWm1GeUlDa2dld29KY21WMGRYSnVJQ2dnZG1sbGQxb2dLeUJ1WldGeUlDa2dMeUFvSUc1bFlYSWdMU0JtWVhJZ0tUc0tmUXBtYkc5aGRDQnZjblJvYjJkeVlYQm9hV05FWlhCMGFGUnZWbWxsZDFvb0lHTnZibk4wSUdsdUlHWnNiMkYwSUd4cGJtVmhja05zYVhCYUxDQmpiMjV6ZENCcGJpQm1iRzloZENCdVpXRnlMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQm1ZWElnS1NCN0NnbHlaWFIxY200Z2JHbHVaV0Z5UTJ4cGNGb2dLaUFvSUc1bFlYSWdMU0JtWVhJZ0tTQXRJRzVsWVhJN0NuMEtabXh2WVhRZ2RtbGxkMXBVYjFCbGNuTndaV04wYVhabFJHVndkR2dvSUdOdmJuTjBJR2x1SUdac2IyRjBJSFpwWlhkYUxDQmpiMjV6ZENCcGJpQm1iRzloZENCdVpXRnlMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQm1ZWElnS1NCN0NnbHlaWFIxY200Z0tDQW9JRzVsWVhJZ0t5QjJhV1YzV2lBcElDb2dabUZ5SUNrZ0x5QW9JQ2dnWm1GeUlDMGdibVZoY2lBcElDb2dkbWxsZDFvZ0tUc0tmUXBtYkc5aGRDQndaWEp6Y0dWamRHbDJaVVJsY0hSb1ZHOVdhV1YzV2lnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnYVc1MlEyeHBjRm9zSUdOdmJuTjBJR2x1SUdac2IyRjBJRzVsWVhJc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdaaGNpQXBJSHNLQ1hKbGRIVnliaUFvSUc1bFlYSWdLaUJtWVhJZ0tTQXZJQ2dnS0NCbVlYSWdMU0J1WldGeUlDa2dLaUJwYm5aRGJHbHdXaUF0SUdaaGNpQXBPd3A5WUN3Z1ZYQWdQU0JnSTJsbVpHVm1JRkJTUlUxVlRGUkpVRXhKUlVSZlFVeFFTRUVLQ1dkc1gwWnlZV2REYjJ4dmNpNXlaMklnS2owZ1oyeGZSbkpoWjBOdmJHOXlMbUU3Q2lObGJtUnBabUFzSUU5d0lEMGdZSFpsWXpRZ2JYWlFiM05wZEdsdmJpQTlJSFpsWXpRb0lIUnlZVzV6Wm05eWJXVmtMQ0F4TGpBZ0tUc0tJMmxtWkdWbUlGVlRSVjlKVGxOVVFVNURTVTVIQ2dsdGRsQnZjMmwwYVc5dUlEMGdhVzV6ZEdGdVkyVk5ZWFJ5YVhnZ0tpQnRkbEJ2YzJsMGFXOXVPd29qWlc1a2FXWUtiWFpRYjNOcGRHbHZiaUE5SUcxdlpHVnNWbWxsZDAxaGRISnBlQ0FxSUcxMlVHOXphWFJwYjI0N0NtZHNYMUJ2YzJsMGFXOXVJRDBnY0hKdmFtVmpkR2x2YmsxaGRISnBlQ0FxSUcxMlVHOXphWFJwYjI0N1lDd2dTSEFnUFNCZ0kybG1aR1ZtSUVSSlZFaEZVa2xPUndvSloyeGZSbkpoWjBOdmJHOXlMbkpuWWlBOUlHUnBkR2hsY21sdVp5Z2daMnhmUm5KaFowTnZiRzl5TG5KbllpQXBPd29qWlc1a2FXWmdMQ0JyY0NBOUlHQWphV1prWldZZ1JFbFVTRVZTU1U1SENnbDJaV016SUdScGRHaGxjbWx1WnlnZ2RtVmpNeUJqYjJ4dmNpQXBJSHNLQ1FsbWJHOWhkQ0JuY21sa1gzQnZjMmwwYVc5dUlEMGdjbUZ1WkNnZ1oyeGZSbkpoWjBOdmIzSmtMbmg1SUNrN0Nna0pkbVZqTXlCa2FYUm9aWEpmYzJocFpuUmZVa2RDSUQwZ2RtVmpNeWdnTUM0eU5TQXZJREkxTlM0d0xDQXRNQzR5TlNBdklESTFOUzR3TENBd0xqSTFJQzhnTWpVMUxqQWdLVHNLQ1Fsa2FYUm9aWEpmYzJocFpuUmZVa2RDSUQwZ2JXbDRLQ0F5TGpBZ0tpQmthWFJvWlhKZmMyaHBablJmVWtkQ0xDQXRNaTR3SUNvZ1pHbDBhR1Z5WDNOb2FXWjBYMUpIUWl3Z1ozSnBaRjl3YjNOcGRHbHZiaUFwT3dvSkNYSmxkSFZ5YmlCamIyeHZjaUFySUdScGRHaGxjbDl6YUdsbWRGOVNSMEk3Q2dsOUNpTmxibVJwWm1Bc0lFZHdJRDBnWUdac2IyRjBJSEp2ZFdkb2JtVnpjMFpoWTNSdmNpQTlJSEp2ZFdkb2JtVnpjenNLSTJsbVpHVm1JRlZUUlY5U1QxVkhTRTVGVTFOTlFWQUtDWFpsWXpRZ2RHVjRaV3hTYjNWbmFHNWxjM01nUFNCMFpYaDBkWEpsTWtRb0lISnZkV2RvYm1WemMwMWhjQ3dnZGxWMklDazdDZ2x5YjNWbmFHNWxjM05HWVdOMGIzSWdLajBnZEdWNFpXeFNiM1ZuYUc1bGMzTXVaenNLSTJWdVpHbG1ZQ3dnVm5BZ1BTQmdJMmxtWkdWbUlGVlRSVjlTVDFWSFNFNUZVMU5OUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlISnZkV2RvYm1WemMwMWhjRHNLSTJWdVpHbG1ZQ3dnVjNBZ1BTQmdJMmxtWkdWbUlGVlRSVjlUU0VGRVQxZE5RVkFLQ1NOcFppQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0Nna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWEJiSUU1VlRWOUVTVkpmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1haaGNubHBibWNnZG1Wak5DQjJSR2x5WldOMGFXOXVZV3hUYUdGa2IzZERiMjl5WkZzZ1RsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2drSmMzUnlkV04wSUVScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzY2dld29KQ1FsbWJHOWhkQ0J6YUdGa2IzZENhV0Z6T3dvSkNRbG1iRzloZENCemFHRmtiM2RPYjNKdFlXeENhV0Z6T3dvSkNRbG1iRzloZENCemFHRmtiM2RTWVdScGRYTTdDZ2tKQ1habFl6SWdjMmhoWkc5M1RXRndVMmw2WlRzS0NRbDlPd29KQ1hWdWFXWnZjbTBnUkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmR5QmthWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzYzFzZ1RsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2dralpXNWthV1lLQ1NOcFppQk9WVTFmVTFCUFZGOU1TVWRJVkY5VFNFRkVUMWRUSUQ0Z01Bb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSE53YjNSVGFHRmtiM2ROWVhCYklFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbDJZWEo1YVc1bklIWmxZelFnZGxOd2IzUlRhR0ZrYjNkRGIyOXlaRnNnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1hOMGNuVmpkQ0JUY0c5MFRHbG5hSFJUYUdGa2IzY2dld29KQ1FsbWJHOWhkQ0J6YUdGa2IzZENhV0Z6T3dvSkNRbG1iRzloZENCemFHRmtiM2RPYjNKdFlXeENhV0Z6T3dvSkNRbG1iRzloZENCemFHRmtiM2RTWVdScGRYTTdDZ2tKQ1habFl6SWdjMmhoWkc5M1RXRndVMmw2WlRzS0NRbDlPd29KQ1hWdWFXWnZjbTBnVTNCdmRFeHBaMmgwVTJoaFpHOTNJSE53YjNSTWFXZG9kRk5vWVdSdmQzTmJJRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDU05sYm1ScFpnb0pJMmxtSUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlIQnZhVzUwVTJoaFpHOTNUV0Z3V3lCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkNYWmhjbmxwYm1jZ2RtVmpOQ0IyVUc5cGJuUlRhR0ZrYjNkRGIyOXlaRnNnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1FsemRISjFZM1FnVUc5cGJuUk1hV2RvZEZOb1lXUnZkeUI3Q2drSkNXWnNiMkYwSUhOb1lXUnZkMEpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDFKaFpHbDFjenNLQ1FrSmRtVmpNaUJ6YUdGa2IzZE5ZWEJUYVhwbE93b0pDUWxtYkc5aGRDQnphR0ZrYjNkRFlXMWxjbUZPWldGeU93b0pDUWxtYkc5aGRDQnphR0ZrYjNkRFlXMWxjbUZHWVhJN0Nna0pmVHNLQ1FsMWJtbG1iM0p0SUZCdmFXNTBUR2xuYUhSVGFHRmtiM2NnY0c5cGJuUk1hV2RvZEZOb1lXUnZkM05iSUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2dralpXNWthV1lLQ1dac2IyRjBJSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5oYlhCc1pYSXlSQ0JrWlhCMGFITXNJSFpsWXpJZ2RYWXNJR1pzYjJGMElHTnZiWEJoY21VZ0tTQjdDZ2tKY21WMGRYSnVJSE4wWlhBb0lHTnZiWEJoY21Vc0lIVnVjR0ZqYTFKSFFrRlViMFJsY0hSb0tDQjBaWGgwZFhKbE1rUW9JR1JsY0hSb2N5d2dkWFlnS1NBcElDazdDZ2w5Q2dsMlpXTXlJSFJsZUhSMWNtVXlSRVJwYzNSeWFXSjFkR2x2YmlnZ2MyRnRjR3hsY2pKRUlITm9ZV1J2ZHl3Z2RtVmpNaUIxZGlBcElIc0tDUWx5WlhSMWNtNGdkVzV3WVdOclVrZENRVlJ2TWtoaGJHWW9JSFJsZUhSMWNtVXlSQ2dnYzJoaFpHOTNMQ0IxZGlBcElDazdDZ2w5Q2dsbWJHOWhkQ0JXVTAxVGFHRmtiM2NnS0hOaGJYQnNaWEl5UkNCemFHRmtiM2NzSUhabFl6SWdkWFlzSUdac2IyRjBJR052YlhCaGNtVWdLWHNLQ1FsbWJHOWhkQ0J2WTJOc2RYTnBiMjRnUFNBeExqQTdDZ2tKZG1Wak1pQmthWE4wY21saWRYUnBiMjRnUFNCMFpYaDBkWEpsTWtSRWFYTjBjbWxpZFhScGIyNG9JSE5vWVdSdmR5d2dkWFlnS1RzS0NRbG1iRzloZENCb1lYSmtYM05vWVdSdmR5QTlJSE4wWlhBb0lHTnZiWEJoY21VZ0xDQmthWE4wY21saWRYUnBiMjR1ZUNBcE93b0pDV2xtSUNob1lYSmtYM05vWVdSdmR5QWhQU0F4TGpBZ0tTQjdDZ2tKQ1dac2IyRjBJR1JwYzNSaGJtTmxJRDBnWTI5dGNHRnlaU0F0SUdScGMzUnlhV0oxZEdsdmJpNTRJRHNLQ1FrSlpteHZZWFFnZG1GeWFXRnVZMlVnUFNCdFlYZ29JREF1TURBd01EQXNJR1JwYzNSeWFXSjFkR2x2Ymk1NUlDb2daR2x6ZEhKcFluVjBhVzl1TG5rZ0tUc0tDUWtKWm14dllYUWdjMjltZEc1bGMzTmZjSEp2WW1GaWFXeHBkSGtnUFNCMllYSnBZVzVqWlNBdklDaDJZWEpwWVc1alpTQXJJR1JwYzNSaGJtTmxJQ29nWkdsemRHRnVZMlVnS1RzSkNRbHpiMlowYm1WemMxOXdjbTlpWVdKcGJHbDBlU0E5SUdOc1lXMXdLQ0FvSUhOdlpuUnVaWE56WDNCeWIySmhZbWxzYVhSNUlDMGdNQzR6SUNrZ0x5QW9JREF1T1RVZ0xTQXdMak1nS1N3Z01DNHdMQ0F4TGpBZ0tUc0pDUWx2WTJOc2RYTnBiMjRnUFNCamJHRnRjQ2dnYldGNEtDQm9ZWEprWDNOb1lXUnZkeXdnYzI5bWRHNWxjM05mY0hKdlltRmlhV3hwZEhrZ0tTd2dNQzR3TENBeExqQWdLVHNLQ1FsOUNna0pjbVYwZFhKdUlHOWpZMngxYzJsdmJqc0tDWDBLQ1dac2IyRjBJR2RsZEZOb1lXUnZkeWdnYzJGdGNHeGxjakpFSUhOb1lXUnZkMDFoY0N3Z2RtVmpNaUJ6YUdGa2IzZE5ZWEJUYVhwbExDQm1iRzloZENCemFHRmtiM2RDYVdGekxDQm1iRzloZENCemFHRmtiM2RTWVdScGRYTXNJSFpsWXpRZ2MyaGhaRzkzUTI5dmNtUWdLU0I3Q2drSlpteHZZWFFnYzJoaFpHOTNJRDBnTVM0d093b0pDWE5vWVdSdmQwTnZiM0prTG5oNWVpQXZQU0J6YUdGa2IzZERiMjl5WkM1M093b0pDWE5vWVdSdmQwTnZiM0prTG5vZ0t6MGdjMmhoWkc5M1FtbGhjenNLQ1FsaWRtVmpOQ0JwYmtaeWRYTjBkVzFXWldNZ1BTQmlkbVZqTkNBb0lITm9ZV1J2ZDBOdmIzSmtMbmdnUGowZ01DNHdMQ0J6YUdGa2IzZERiMjl5WkM1NElEdzlJREV1TUN3Z2MyaGhaRzkzUTI5dmNtUXVlU0ErUFNBd0xqQXNJSE5vWVdSdmQwTnZiM0prTG5rZ1BEMGdNUzR3SUNrN0Nna0pZbTl2YkNCcGJrWnlkWE4wZFcwZ1BTQmhiR3dvSUdsdVJuSjFjM1IxYlZabFl5QXBPd29KQ1dKMlpXTXlJR1p5ZFhOMGRXMVVaWE4wVm1WaklEMGdZblpsWXpJb0lHbHVSbkoxYzNSMWJTd2djMmhoWkc5M1EyOXZjbVF1ZWlBOFBTQXhMakFnS1RzS0NRbGliMjlzSUdaeWRYTjBkVzFVWlhOMElEMGdZV3hzS0NCbWNuVnpkSFZ0VkdWemRGWmxZeUFwT3dvSkNXbG1JQ2dnWm5KMWMzUjFiVlJsYzNRZ0tTQjdDZ2tKSTJsbUlHUmxabWx1WldRb0lGTklRVVJQVjAxQlVGOVVXVkJGWDFCRFJpQXBDZ2tKQ1habFl6SWdkR1Y0Wld4VGFYcGxJRDBnZG1Wak1pZ2dNUzR3SUNrZ0x5QnphR0ZrYjNkTllYQlRhWHBsT3dvSkNRbG1iRzloZENCa2VEQWdQU0F0SUhSbGVHVnNVMmw2WlM1NElDb2djMmhoWkc5M1VtRmthWFZ6T3dvSkNRbG1iRzloZENCa2VUQWdQU0F0SUhSbGVHVnNVMmw2WlM1NUlDb2djMmhoWkc5M1VtRmthWFZ6T3dvSkNRbG1iRzloZENCa2VERWdQU0FySUhSbGVHVnNVMmw2WlM1NElDb2djMmhoWkc5M1VtRmthWFZ6T3dvSkNRbG1iRzloZENCa2VURWdQU0FySUhSbGVHVnNVMmw2WlM1NUlDb2djMmhoWkc5M1VtRmthWFZ6T3dvSkNRbG1iRzloZENCa2VESWdQU0JrZURBZ0x5QXlMakE3Q2drSkNXWnNiMkYwSUdSNU1pQTlJR1I1TUNBdklESXVNRHNLQ1FrSlpteHZZWFFnWkhneklEMGdaSGd4SUM4Z01pNHdPd29KQ1FsbWJHOWhkQ0JrZVRNZ1BTQmtlVEVnTHlBeUxqQTdDZ2tKQ1hOb1lXUnZkeUE5SUNnS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlREFzSUdSNU1DQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSURBdU1Dd2daSGt3SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2daSGd4TENCa2VUQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VESXNJR1I1TWlBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JREF1TUN3Z1pIa3lJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ1pIZ3pMQ0JrZVRJZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURBc0lEQXVNQ0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lHUjRNaXdnTUM0d0lDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1TENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lHUjRNeXdnTUM0d0lDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnWkhneExDQXdMakFnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlRElzSUdSNU15QXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSURBdU1Dd2daSGt6SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2daSGd6TENCa2VUTWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VEQXNJR1I1TVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JREF1TUN3Z1pIa3hJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ1pIZ3hMQ0JrZVRFZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcENna0pDU2tnS2lBb0lERXVNQ0F2SURFM0xqQWdLVHNLQ1FralpXeHBaaUJrWldacGJtVmtLQ0JUU0VGRVQxZE5RVkJmVkZsUVJWOVFRMFpmVTA5R1ZDQXBDZ2tKQ1habFl6SWdkR1Y0Wld4VGFYcGxJRDBnZG1Wak1pZ2dNUzR3SUNrZ0x5QnphR0ZrYjNkTllYQlRhWHBsT3dvSkNRbG1iRzloZENCa2VDQTlJSFJsZUdWc1UybDZaUzU0T3dvSkNRbG1iRzloZENCa2VTQTlJSFJsZUdWc1UybDZaUzU1T3dvSkNRbDJaV015SUhWMklEMGdjMmhoWkc5M1EyOXZjbVF1ZUhrN0Nna0pDWFpsWXpJZ1ppQTlJR1p5WVdOMEtDQjFkaUFxSUhOb1lXUnZkMDFoY0ZOcGVtVWdLeUF3TGpVZ0tUc0tDUWtKZFhZZ0xUMGdaaUFxSUhSbGVHVnNVMmw2WlRzS0NRa0pjMmhoWkc5M0lEMGdLQW9KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaXdnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0JrZUN3Z01DNHdJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RtVmpNaWdnTUM0d0xDQmtlU0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIUmxlR1ZzVTJsNlpTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1cxcGVDZ2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSUMxa2VDd2dNQzR3SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1N3Z0Nna0pDUWtKSUhSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2RYWWdLeUIyWldNeUtDQXlMakFnS2lCa2VDd2dNQzR3SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1N3S0NRa0pDUWtnWmk1NElDa2dLd29KQ1FrSmJXbDRLQ0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ0xXUjRMQ0JrZVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrc0lBb0pDUWtKQ1NCMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dNaTR3SUNvZ1pIZ3NJR1I1SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1N3S0NRa0pDUWtnWmk1NElDa2dLd29KQ1FrSmJXbDRLQ0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ01DNHdMQ0F0WkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExDQUtDUWtKQ1FrZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JREF1TUN3Z01pNHdJQ29nWkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExBb0pDUWtKQ1NCbUxua2dLU0FyQ2drSkNRbHRhWGdvSUhSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2RYWWdLeUIyWldNeUtDQmtlQ3dnTFdSNUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd2dDZ2tKQ1FrSklIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0JrZUN3Z01pNHdJQ29nWkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExBb0pDUWtKQ1NCbUxua2dLU0FyQ2drSkNRbHRhWGdvSUcxcGVDZ2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSUMxa2VDd2dMV1I1SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1N3Z0Nna0pDUWtKQ1NBZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JREl1TUNBcUlHUjRMQ0F0WkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExBb0pDUWtKQ1FrZ0lHWXVlQ0FwTEFvSkNRa0pDU0J0YVhnb0lIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0F0Wkhnc0lESXVNQ0FxSUdSNUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd2dDZ2tKQ1FrSkNTQWdkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSURJdU1DQXFJR1I0TENBeUxqQWdLaUJrZVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrc0Nna0pDUWtKQ1NBZ1ppNTRJQ2tzQ2drSkNRa0pJR1l1ZVNBcENna0pDU2tnS2lBb0lERXVNQ0F2SURrdU1DQXBPd29KQ1NObGJHbG1JR1JsWm1sdVpXUW9JRk5JUVVSUFYwMUJVRjlVV1ZCRlgxWlRUU0FwQ2drSkNYTm9ZV1J2ZHlBOUlGWlRUVk5vWVdSdmR5Z2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcE93b0pDU05sYkhObENna0pDWE5vWVdSdmR5QTlJSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tUc0tDUWtqWlc1a2FXWUtDUWw5Q2drSmNtVjBkWEp1SUhOb1lXUnZkenNLQ1gwS0NYWmxZeklnWTNWaVpWUnZWVllvSUhabFl6TWdkaXdnWm14dllYUWdkR1Y0Wld4VGFYcGxXU0FwSUhzS0NRbDJaV016SUdGaWMxWWdQU0JoWW5Nb0lIWWdLVHNLQ1FsbWJHOWhkQ0J6WTJGc1pWUnZRM1ZpWlNBOUlERXVNQ0F2SUcxaGVDZ2dZV0p6Vmk1NExDQnRZWGdvSUdGaWMxWXVlU3dnWVdKelZpNTZJQ2tnS1RzS0NRbGhZbk5XSUNvOUlITmpZV3hsVkc5RGRXSmxPd29KQ1hZZ0tqMGdjMk5oYkdWVWIwTjFZbVVnS2lBb0lERXVNQ0F0SURJdU1DQXFJSFJsZUdWc1UybDZaVmtnS1RzS0NRbDJaV015SUhCc1lXNWhjaUE5SUhZdWVIazdDZ2tKWm14dllYUWdZV3h0YjNOMFFWUmxlR1ZzSUQwZ01TNDFJQ29nZEdWNFpXeFRhWHBsV1RzS0NRbG1iRzloZENCaGJHMXZjM1JQYm1VZ1BTQXhMakFnTFNCaGJHMXZjM1JCVkdWNFpXdzdDZ2tKYVdZZ0tDQmhZbk5XTG5vZ1BqMGdZV3h0YjNOMFQyNWxJQ2tnZXdvSkNRbHBaaUFvSUhZdWVpQStJREF1TUNBcENna0pDUWx3YkdGdVlYSXVlQ0E5SURRdU1DQXRJSFl1ZURzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0JoWW5OV0xuZ2dQajBnWVd4dGIzTjBUMjVsSUNrZ2V3b0pDUWxtYkc5aGRDQnphV2R1V0NBOUlITnBaMjRvSUhZdWVDQXBPd29KQ1Fsd2JHRnVZWEl1ZUNBOUlIWXVlaUFxSUhOcFoyNVlJQ3NnTWk0d0lDb2djMmxuYmxnN0Nna0pmU0JsYkhObElHbG1JQ2dnWVdKelZpNTVJRDQ5SUdGc2JXOXpkRTl1WlNBcElIc0tDUWtKWm14dllYUWdjMmxuYmxrZ1BTQnphV2R1S0NCMkxua2dLVHNLQ1FrSmNHeGhibUZ5TG5nZ1BTQjJMbmdnS3lBeUxqQWdLaUJ6YVdkdVdTQXJJREl1TURzS0NRa0pjR3hoYm1GeUxua2dQU0IyTG5vZ0tpQnphV2R1V1NBdElESXVNRHNLQ1FsOUNna0pjbVYwZFhKdUlIWmxZeklvSURBdU1USTFMQ0F3TGpJMUlDa2dLaUJ3YkdGdVlYSWdLeUIyWldNeUtDQXdMak0zTlN3Z01DNDNOU0FwT3dvSmZRb0pabXh2WVhRZ1oyVjBVRzlwYm5SVGFHRmtiM2NvSUhOaGJYQnNaWEl5UkNCemFHRmtiM2ROWVhBc0lIWmxZeklnYzJoaFpHOTNUV0Z3VTJsNlpTd2dabXh2WVhRZ2MyaGhaRzkzUW1saGN5d2dabXh2WVhRZ2MyaGhaRzkzVW1Ga2FYVnpMQ0IyWldNMElITm9ZV1J2ZDBOdmIzSmtMQ0JtYkc5aGRDQnphR0ZrYjNkRFlXMWxjbUZPWldGeUxDQm1iRzloZENCemFHRmtiM2REWVcxbGNtRkdZWElnS1NCN0Nna0pkbVZqTWlCMFpYaGxiRk5wZW1VZ1BTQjJaV015S0NBeExqQWdLU0F2SUNnZ2MyaGhaRzkzVFdGd1UybDZaU0FxSUhabFl6SW9JRFF1TUN3Z01pNHdJQ2tnS1RzS0NRbDJaV016SUd4cFoyaDBWRzlRYjNOcGRHbHZiaUE5SUhOb1lXUnZkME52YjNKa0xuaDVlanNLQ1FsbWJHOWhkQ0JrY0NBOUlDZ2diR1Z1WjNSb0tDQnNhV2RvZEZSdlVHOXphWFJwYjI0Z0tTQXRJSE5vWVdSdmQwTmhiV1Z5WVU1bFlYSWdLU0F2SUNnZ2MyaGhaRzkzUTJGdFpYSmhSbUZ5SUMwZ2MyaGhaRzkzUTJGdFpYSmhUbVZoY2lBcE93a0paSEFnS3owZ2MyaGhaRzkzUW1saGN6c0tDUWwyWldNeklHSmtNMFFnUFNCdWIzSnRZV3hwZW1Vb0lHeHBaMmgwVkc5UWIzTnBkR2x2YmlBcE93b0pDU05wWmlCa1pXWnBibVZrS0NCVFNFRkVUMWROUVZCZlZGbFFSVjlRUTBZZ0tTQjhmQ0JrWldacGJtVmtLQ0JUU0VGRVQxZE5RVkJmVkZsUVJWOVFRMFpmVTA5R1ZDQXBJSHg4SUdSbFptbHVaV1FvSUZOSVFVUlBWMDFCVUY5VVdWQkZYMVpUVFNBcENna0pDWFpsWXpJZ2IyWm1jMlYwSUQwZ2RtVmpNaWdnTFNBeExDQXhJQ2tnS2lCemFHRmtiM2RTWVdScGRYTWdLaUIwWlhobGJGTnBlbVV1ZVRzS0NRa0pjbVYwZFhKdUlDZ0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z1kzVmlaVlJ2VlZZb0lHSmtNMFFnS3lCdlptWnpaWFF1ZUhsNUxDQjBaWGhsYkZOcGVtVXVlU0FwTENCa2NDQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dZM1ZpWlZSdlZWWW9JR0prTTBRZ0t5QnZabVp6WlhRdWVYbDVMQ0IwWlhobGJGTnBlbVV1ZVNBcExDQmtjQ0FwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnWTNWaVpWUnZWVllvSUdKa00wUWdLeUJ2Wm1aelpYUXVlSGw0TENCMFpYaGxiRk5wZW1VdWVTQXBMQ0JrY0NBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z1kzVmlaVlJ2VlZZb0lHSmtNMFFnS3lCdlptWnpaWFF1ZVhsNExDQjBaWGhsYkZOcGVtVXVlU0FwTENCa2NDQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dZM1ZpWlZSdlZWWW9JR0prTTBRc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NGVIa3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDQXJJRzltWm5ObGRDNTVlSGtzSUhSbGVHVnNVMmw2WlM1NUlDa3NJR1J3SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ0FySUc5bVpuTmxkQzU0ZUhnc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NWVIZ3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tLQ1FrSktTQXFJQ2dnTVM0d0lDOGdPUzR3SUNrN0Nna0pJMlZzYzJVS0NRa0pjbVYwZFhKdUlIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dZM1ZpWlZSdlZWWW9JR0prTTBRc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDazdDZ2tKSTJWdVpHbG1DZ2w5Q2lObGJtUnBabUFzSUhGd0lEMGdZQ05wWm1SbFppQlZVMFZmVTBoQlJFOVhUVUZRQ2dramFXWWdUbFZOWDBSSlVsOU1TVWRJVkY5VFNFRkVUMWRUSUQ0Z01Bb0pDWFZ1YVdadmNtMGdiV0YwTkNCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGRISnBlRnNnVGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tKZG1GeWVXbHVaeUIyWldNMElIWkVhWEpsWTNScGIyNWhiRk5vWVdSdmQwTnZiM0prV3lCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1FsemRISjFZM1FnUkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmR5QjdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMUpoWkdsMWN6c0tDUWtKZG1Wak1pQnphR0ZrYjNkTllYQlRhWHBsT3dvSkNYMDdDZ2tKZFc1cFptOXliU0JFYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2R6V3lCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1NObGJtUnBaZ29KSTJsbUlFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0Nna0pkVzVwWm05eWJTQnRZWFEwSUhOd2IzUlRhR0ZrYjNkTllYUnlhWGhiSUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1FsMllYSjVhVzVuSUhabFl6UWdkbE53YjNSVGFHRmtiM2REYjI5eVpGc2dUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWE4wY25WamRDQlRjRzkwVEdsbmFIUlRhR0ZrYjNjZ2V3b0pDUWxtYkc5aGRDQnphR0ZrYjNkQ2FXRnpPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZE9iM0p0WVd4Q2FXRnpPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZFNZV1JwZFhNN0Nna0pDWFpsWXpJZ2MyaGhaRzkzVFdGd1UybDZaVHNLQ1FsOU93b0pDWFZ1YVdadmNtMGdVM0J2ZEV4cFoyaDBVMmhoWkc5M0lITndiM1JNYVdkb2RGTm9ZV1J2ZDNOYklFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NTTmxibVJwWmdvSkkybG1JRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KQ1hWdWFXWnZjbTBnYldGME5DQndiMmx1ZEZOb1lXUnZkMDFoZEhKcGVGc2dUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDUWwyWVhKNWFXNW5JSFpsWXpRZ2RsQnZhVzUwVTJoaFpHOTNRMjl2Y21SYklFNVZUVjlRVDBsT1ZGOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna0pjM1J5ZFdOMElGQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ2V3b0pDUWxtYkc5aGRDQnphR0ZrYjNkQ2FXRnpPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZE9iM0p0WVd4Q2FXRnpPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZFNZV1JwZFhNN0Nna0pDWFpsWXpJZ2MyaGhaRzkzVFdGd1UybDZaVHNLQ1FrSlpteHZZWFFnYzJoaFpHOTNRMkZ0WlhKaFRtVmhjanNLQ1FrSlpteHZZWFFnYzJoaFpHOTNRMkZ0WlhKaFJtRnlPd29KQ1gwN0Nna0pkVzVwWm05eWJTQlFiMmx1ZEV4cFoyaDBVMmhoWkc5M0lIQnZhVzUwVEdsbmFIUlRhR0ZrYjNkeld5Qk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lGaHdJRDBnWUNOcFptUmxaaUJWVTBWZlUwaEJSRTlYVFVGUUNna2phV1lnVGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVElENGdNQ0I4ZkNCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUNCOGZDQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlBK0lEQUtDUWwyWldNeklITm9ZV1J2ZDFkdmNteGtUbTl5YldGc0lEMGdhVzUyWlhKelpWUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2dkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd3NJSFpwWlhkTllYUnlhWGdnS1RzS0NRbDJaV00wSUhOb1lXUnZkMWR2Y214a1VHOXphWFJwYjI0N0Nna2paVzVrYVdZS0NTTnBaaUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTTdJR2tnS3lzZ0tTQjdDZ2tKYzJoaFpHOTNWMjl5YkdSUWIzTnBkR2x2YmlBOUlIZHZjbXhrVUc5emFYUnBiMjRnS3lCMlpXTTBLQ0J6YUdGa2IzZFhiM0pzWkU1dmNtMWhiQ0FxSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzZHpXeUJwSUYwdWMyaGhaRzkzVG05eWJXRnNRbWxoY3l3Z01DQXBPd29KQ1haRWFYSmxZM1JwYjI1aGJGTm9ZV1J2ZDBOdmIzSmtXeUJwSUYwZ1BTQmthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhkSEpwZUZzZ2FTQmRJQ29nYzJoaFpHOTNWMjl5YkdSUWIzTnBkR2x2YmpzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0Nna2paVzVrYVdZS0NTTnBaaUJPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVenNnYVNBckt5QXBJSHNLQ1FsemFHRmtiM2RYYjNKc1pGQnZjMmwwYVc5dUlEMGdkMjl5YkdSUWIzTnBkR2x2YmlBcklIWmxZelFvSUhOb1lXUnZkMWR2Y214a1RtOXliV0ZzSUNvZ2MzQnZkRXhwWjJoMFUyaGhaRzkzYzFzZ2FTQmRMbk5vWVdSdmQwNXZjbTFoYkVKcFlYTXNJREFnS1RzS0NRbDJVM0J2ZEZOb1lXUnZkME52YjNKa1d5QnBJRjBnUFNCemNHOTBVMmhoWkc5M1RXRjBjbWw0V3lCcElGMGdLaUJ6YUdGa2IzZFhiM0pzWkZCdmMybDBhVzl1T3dvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0NTTmxibVJwWmdvSkkybG1JRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU03SUdrZ0t5c2dLU0I3Q2drSmMyaGhaRzkzVjI5eWJHUlFiM05wZEdsdmJpQTlJSGR2Y214a1VHOXphWFJwYjI0Z0t5QjJaV00wS0NCemFHRmtiM2RYYjNKc1pFNXZjbTFoYkNBcUlIQnZhVzUwVEdsbmFIUlRhR0ZrYjNkeld5QnBJRjB1YzJoaFpHOTNUbTl5YldGc1FtbGhjeXdnTUNBcE93b0pDWFpRYjJsdWRGTm9ZV1J2ZDBOdmIzSmtXeUJwSUYwZ1BTQndiMmx1ZEZOb1lXUnZkMDFoZEhKcGVGc2dhU0JkSUNvZ2MyaGhaRzkzVjI5eWJHUlFiM05wZEdsdmJqc0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dTbkFnUFNCZ1pteHZZWFFnWjJWMFUyaGhaRzkzVFdGemF5Z3BJSHNLQ1dac2IyRjBJSE5vWVdSdmR5QTlJREV1TURzS0NTTnBabVJsWmlCVlUwVmZVMGhCUkU5WFRVRlFDZ2tqYVdZZ1RsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSlJHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkeUJrYVhKbFkzUnBiMjVoYkV4cFoyaDBPd29KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRPeUJwSUNzcklDa2dld29KQ1dScGNtVmpkR2x2Ym1Gc1RHbG5hSFFnUFNCa2FYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNjMXNnYVNCZE93b0pDWE5vWVdSdmR5QXFQU0J5WldObGFYWmxVMmhoWkc5M0lEOGdaMlYwVTJoaFpHOTNLQ0JrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoY0ZzZ2FTQmRMQ0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBMbk5vWVdSdmQwMWhjRk5wZW1Vc0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhRdWMyaGhaRzkzUW1saGN5d2daR2x5WldOMGFXOXVZV3hNYVdkb2RDNXphR0ZrYjNkU1lXUnBkWE1zSUhaRWFYSmxZM1JwYjI1aGJGTm9ZV1J2ZDBOdmIzSmtXeUJwSUYwZ0tTQTZJREV1TURzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0Nna2paVzVrYVdZS0NTTnBaaUJPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KVTNCdmRFeHBaMmgwVTJoaFpHOTNJSE53YjNSTWFXZG9kRHNLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU03SUdrZ0t5c2dLU0I3Q2drSmMzQnZkRXhwWjJoMElEMGdjM0J2ZEV4cFoyaDBVMmhoWkc5M2Mxc2dhU0JkT3dvSkNYTm9ZV1J2ZHlBcVBTQnlaV05sYVhabFUyaGhaRzkzSUQ4Z1oyVjBVMmhoWkc5M0tDQnpjRzkwVTJoaFpHOTNUV0Z3V3lCcElGMHNJSE53YjNSTWFXZG9kQzV6YUdGa2IzZE5ZWEJUYVhwbExDQnpjRzkwVEdsbmFIUXVjMmhoWkc5M1FtbGhjeXdnYzNCdmRFeHBaMmgwTG5Ob1lXUnZkMUpoWkdsMWN5d2dkbE53YjNSVGFHRmtiM2REYjI5eVpGc2dhU0JkSUNrZ09pQXhMakE3Q2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvSkkyVnVaR2xtQ2dramFXWWdUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2xRYjJsdWRFeHBaMmgwVTJoaFpHOTNJSEJ2YVc1MFRHbG5hSFE3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXpzZ2FTQXJLeUFwSUhzS0NRbHdiMmx1ZEV4cFoyaDBJRDBnY0c5cGJuUk1hV2RvZEZOb1lXUnZkM05iSUdrZ1hUc0tDUWx6YUdGa2IzY2dLajBnY21WalpXbDJaVk5vWVdSdmR5QS9JR2RsZEZCdmFXNTBVMmhoWkc5M0tDQndiMmx1ZEZOb1lXUnZkMDFoY0ZzZ2FTQmRMQ0J3YjJsdWRFeHBaMmgwTG5Ob1lXUnZkMDFoY0ZOcGVtVXNJSEJ2YVc1MFRHbG5hSFF1YzJoaFpHOTNRbWxoY3l3Z2NHOXBiblJNYVdkb2RDNXphR0ZrYjNkU1lXUnBkWE1zSUhaUWIybHVkRk5vWVdSdmQwTnZiM0prV3lCcElGMHNJSEJ2YVc1MFRHbG5hSFF1YzJoaFpHOTNRMkZ0WlhKaFRtVmhjaXdnY0c5cGJuUk1hV2RvZEM1emFHRmtiM2REWVcxbGNtRkdZWElnS1NBNklERXVNRHNLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2dralpXNWthV1lLQ1NObGJtUnBaZ29KY21WMGRYSnVJSE5vWVdSdmR6c0tmV0FzSUZsd0lEMGdZQ05wWm1SbFppQlZVMFZmVTB0SlRrNUpUa2NLQ1cxaGREUWdZbTl1WlUxaGRGZ2dQU0JuWlhSQ2IyNWxUV0YwY21sNEtDQnphMmx1U1c1a1pYZ3VlQ0FwT3dvSmJXRjBOQ0JpYjI1bFRXRjBXU0E5SUdkbGRFSnZibVZOWVhSeWFYZ29JSE5yYVc1SmJtUmxlQzU1SUNrN0NnbHRZWFEwSUdKdmJtVk5ZWFJhSUQwZ1oyVjBRbTl1WlUxaGRISnBlQ2dnYzJ0cGJrbHVaR1Y0TG5vZ0tUc0tDVzFoZERRZ1ltOXVaVTFoZEZjZ1BTQm5aWFJDYjI1bFRXRjBjbWw0S0NCemEybHVTVzVrWlhndWR5QXBPd29qWlc1a2FXWmdMQ0JhY0NBOUlHQWphV1prWldZZ1ZWTkZYMU5MU1U1T1NVNUhDZ2wxYm1sbWIzSnRJRzFoZERRZ1ltbHVaRTFoZEhKcGVEc0tDWFZ1YVdadmNtMGdiV0YwTkNCaWFXNWtUV0YwY21sNFNXNTJaWEp6WlRzS0NTTnBabVJsWmlCQ1QwNUZYMVJGV0ZSVlVrVUtDUWwxYm1sbWIzSnRJR2hwWjJod0lITmhiWEJzWlhJeVJDQmliMjVsVkdWNGRIVnlaVHNLQ1FsMWJtbG1iM0p0SUdsdWRDQmliMjVsVkdWNGRIVnlaVk5wZW1VN0Nna0piV0YwTkNCblpYUkNiMjVsVFdGMGNtbDRLQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnBJQ2tnZXdvSkNRbG1iRzloZENCcUlEMGdhU0FxSURRdU1Ec0tDUWtKWm14dllYUWdlQ0E5SUcxdlpDZ2dhaXdnWm14dllYUW9JR0p2Ym1WVVpYaDBkWEpsVTJsNlpTQXBJQ2s3Q2drSkNXWnNiMkYwSUhrZ1BTQm1iRzl2Y2lnZ2FpQXZJR1pzYjJGMEtDQmliMjVsVkdWNGRIVnlaVk5wZW1VZ0tTQXBPd29KQ1FsbWJHOWhkQ0JrZUNBOUlERXVNQ0F2SUdac2IyRjBLQ0JpYjI1bFZHVjRkSFZ5WlZOcGVtVWdLVHNLQ1FrSlpteHZZWFFnWkhrZ1BTQXhMakFnTHlCbWJHOWhkQ2dnWW05dVpWUmxlSFIxY21WVGFYcGxJQ2s3Q2drSkNYa2dQU0JrZVNBcUlDZ2dlU0FySURBdU5TQXBPd29KQ1FsMlpXTTBJSFl4SUQwZ2RHVjRkSFZ5WlRKRUtDQmliMjVsVkdWNGRIVnlaU3dnZG1Wak1pZ2daSGdnS2lBb0lIZ2dLeUF3TGpVZ0tTd2dlU0FwSUNrN0Nna0pDWFpsWXpRZ2RqSWdQU0IwWlhoMGRYSmxNa1FvSUdKdmJtVlVaWGgwZFhKbExDQjJaV015S0NCa2VDQXFJQ2dnZUNBcklERXVOU0FwTENCNUlDa2dLVHNLQ1FrSmRtVmpOQ0IyTXlBOUlIUmxlSFIxY21VeVJDZ2dZbTl1WlZSbGVIUjFjbVVzSUhabFl6SW9JR1I0SUNvZ0tDQjRJQ3NnTWk0MUlDa3NJSGtnS1NBcE93b0pDUWwyWldNMElIWTBJRDBnZEdWNGRIVnlaVEpFS0NCaWIyNWxWR1Y0ZEhWeVpTd2dkbVZqTWlnZ1pIZ2dLaUFvSUhnZ0t5QXpMalVnS1N3Z2VTQXBJQ2s3Q2drSkNXMWhkRFFnWW05dVpTQTlJRzFoZERRb0lIWXhMQ0IyTWl3Z2RqTXNJSFkwSUNrN0Nna0pDWEpsZEhWeWJpQmliMjVsT3dvSkNYMEtDU05sYkhObENna0pkVzVwWm05eWJTQnRZWFEwSUdKdmJtVk5ZWFJ5YVdObGMxc2dUVUZZWDBKUFRrVlRJRjA3Q2drSmJXRjBOQ0JuWlhSQ2IyNWxUV0YwY21sNEtDQmpiMjV6ZENCcGJpQm1iRzloZENCcElDa2dld29KQ1FsdFlYUTBJR0p2Ym1VZ1BTQmliMjVsVFdGMGNtbGpaWE5iSUdsdWRDaHBLU0JkT3dvSkNRbHlaWFIxY200Z1ltOXVaVHNLQ1FsOUNna2paVzVrYVdZS0kyVnVaR2xtWUN3Z0pIQWdQU0JnSTJsbVpHVm1JRlZUUlY5VFMwbE9Ua2xPUndvSmRtVmpOQ0J6YTJsdVZtVnlkR1Y0SUQwZ1ltbHVaRTFoZEhKcGVDQXFJSFpsWXpRb0lIUnlZVzV6Wm05eWJXVmtMQ0F4TGpBZ0tUc0tDWFpsWXpRZ2MydHBibTVsWkNBOUlIWmxZelFvSURBdU1DQXBPd29KYzJ0cGJtNWxaQ0FyUFNCaWIyNWxUV0YwV0NBcUlITnJhVzVXWlhKMFpYZ2dLaUJ6YTJsdVYyVnBaMmgwTG5nN0NnbHphMmx1Ym1Wa0lDczlJR0p2Ym1WTllYUlpJQ29nYzJ0cGJsWmxjblJsZUNBcUlITnJhVzVYWldsbmFIUXVlVHNLQ1hOcmFXNXVaV1FnS3owZ1ltOXVaVTFoZEZvZ0tpQnphMmx1Vm1WeWRHVjRJQ29nYzJ0cGJsZGxhV2RvZEM1Nk93b0pjMnRwYm01bFpDQXJQU0JpYjI1bFRXRjBWeUFxSUhOcmFXNVdaWEowWlhnZ0tpQnphMmx1VjJWcFoyaDBMbmM3Q2dsMGNtRnVjMlp2Y20xbFpDQTlJQ2dnWW1sdVpFMWhkSEpwZUVsdWRtVnljMlVnS2lCemEybHVibVZrSUNrdWVIbDZPd29qWlc1a2FXWmdMQ0JxY0NBOUlHQWphV1prWldZZ1ZWTkZYMU5MU1U1T1NVNUhDZ2x0WVhRMElITnJhVzVOWVhSeWFYZ2dQU0J0WVhRMEtDQXdMakFnS1RzS0NYTnJhVzVOWVhSeWFYZ2dLejBnYzJ0cGJsZGxhV2RvZEM1NElDb2dZbTl1WlUxaGRGZzdDZ2x6YTJsdVRXRjBjbWw0SUNzOUlITnJhVzVYWldsbmFIUXVlU0FxSUdKdmJtVk5ZWFJaT3dvSmMydHBiazFoZEhKcGVDQXJQU0J6YTJsdVYyVnBaMmgwTG5vZ0tpQmliMjVsVFdGMFdqc0tDWE5yYVc1TllYUnlhWGdnS3owZ2MydHBibGRsYVdkb2RDNTNJQ29nWW05dVpVMWhkRmM3Q2dsemEybHVUV0YwY21sNElEMGdZbWx1WkUxaGRISnBlRWx1ZG1WeWMyVWdLaUJ6YTJsdVRXRjBjbWw0SUNvZ1ltbHVaRTFoZEhKcGVEc0tDVzlpYW1WamRFNXZjbTFoYkNBOUlIWmxZelFvSUhOcmFXNU5ZWFJ5YVhnZ0tpQjJaV00wS0NCdlltcGxZM1JPYjNKdFlXd3NJREF1TUNBcElDa3VlSGw2T3dvSkkybG1aR1ZtSUZWVFJWOVVRVTVIUlU1VUNna0piMkpxWldOMFZHRnVaMlZ1ZENBOUlIWmxZelFvSUhOcmFXNU5ZWFJ5YVhnZ0tpQjJaV00wS0NCdlltcGxZM1JVWVc1blpXNTBMQ0F3TGpBZ0tTQXBMbmg1ZWpzS0NTTmxibVJwWmdvalpXNWthV1pnTENCUmNDQTlJR0JtYkc5aGRDQnpjR1ZqZFd4aGNsTjBjbVZ1WjNSb093b2phV1prWldZZ1ZWTkZYMU5RUlVOVlRFRlNUVUZRQ2dsMlpXTTBJSFJsZUdWc1UzQmxZM1ZzWVhJZ1BTQjBaWGgwZFhKbE1rUW9JSE53WldOMWJHRnlUV0Z3TENCMlZYWWdLVHNLQ1hOd1pXTjFiR0Z5VTNSeVpXNW5kR2dnUFNCMFpYaGxiRk53WldOMWJHRnlMbkk3Q2lObGJITmxDZ2x6Y0dWamRXeGhjbE4wY21WdVozUm9JRDBnTVM0d093b2paVzVrYVdaZ0xDQkxjQ0E5SUdBamFXWmtaV1lnVlZORlgxTlFSVU5WVEVGU1RVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0J6Y0dWamRXeGhjazFoY0RzS0kyVnVaR2xtWUN3Z1pXMGdQU0JnSTJsbUlHUmxabWx1WldRb0lGUlBUa1ZmVFVGUVVFbE9SeUFwQ2dsbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUQwZ2RHOXVaVTFoY0hCcGJtY29JR2RzWDBaeVlXZERiMnh2Y2k1eVoySWdLVHNLSTJWdVpHbG1ZQ3dnZEcwZ1BTQmdJMmxtYm1SbFppQnpZWFIxY21GMFpRb2paR1ZtYVc1bElITmhkSFZ5WVhSbEtDQmhJQ2tnWTJ4aGJYQW9JR0VzSURBdU1Dd2dNUzR3SUNrS0kyVnVaR2xtQ25WdWFXWnZjbTBnWm14dllYUWdkRzl1WlUxaGNIQnBibWRGZUhCdmMzVnlaVHNLZG1Wak15Qk1hVzVsWVhKVWIyNWxUV0Z3Y0dsdVp5Z2dkbVZqTXlCamIyeHZjaUFwSUhzS0NYSmxkSFZ5YmlCMGIyNWxUV0Z3Y0dsdVowVjRjRzl6ZFhKbElDb2dZMjlzYjNJN0NuMEtkbVZqTXlCU1pXbHVhR0Z5WkZSdmJtVk5ZWEJ3YVc1bktDQjJaV016SUdOdmJHOXlJQ2tnZXdvSlkyOXNiM0lnS2owZ2RHOXVaVTFoY0hCcGJtZEZlSEJ2YzNWeVpUc0tDWEpsZEhWeWJpQnpZWFIxY21GMFpTZ2dZMjlzYjNJZ0x5QW9JSFpsWXpNb0lERXVNQ0FwSUNzZ1kyOXNiM0lnS1NBcE93cDlDblpsWXpNZ1QzQjBhVzFwZW1Wa1EybHVaVzl1Vkc5dVpVMWhjSEJwYm1jb0lIWmxZek1nWTI5c2IzSWdLU0I3Q2dsamIyeHZjaUFxUFNCMGIyNWxUV0Z3Y0dsdVowVjRjRzl6ZFhKbE93b0pZMjlzYjNJZ1BTQnRZWGdvSUhabFl6TW9JREF1TUNBcExDQmpiMnh2Y2lBdElEQXVNREEwSUNrN0NnbHlaWFIxY200Z2NHOTNLQ0FvSUdOdmJHOXlJQ29nS0NBMkxqSWdLaUJqYjJ4dmNpQXJJREF1TlNBcElDa2dMeUFvSUdOdmJHOXlJQ29nS0NBMkxqSWdLaUJqYjJ4dmNpQXJJREV1TnlBcElDc2dNQzR3TmlBcExDQjJaV016S0NBeUxqSWdLU0FwT3dwOUNuWmxZek1nVWxKVVFXNWtUMFJVUm1sMEtDQjJaV016SUhZZ0tTQjdDZ2wyWldNeklHRWdQU0IySUNvZ0tDQjJJQ3NnTUM0d01qUTFOemcySUNrZ0xTQXdMakF3TURBNU1EVXpOenNLQ1habFl6TWdZaUE5SUhZZ0tpQW9JREF1T1Rnek56STVJQ29nZGlBcklEQXVORE15T1RVeE1DQXBJQ3NnTUM0eU16Z3dPREU3Q2dseVpYUjFjbTRnWVNBdklHSTdDbjBLZG1Wak15QkJRMFZUUm1sc2JXbGpWRzl1WlUxaGNIQnBibWNvSUhabFl6TWdZMjlzYjNJZ0tTQjdDZ2xqYjI1emRDQnRZWFF6SUVGRFJWTkpibkIxZEUxaGRDQTlJRzFoZERNb0Nna0pkbVZqTXlnZ01DNDFPVGN4T1N3Z01DNHdOell3TUN3Z01DNHdNamcwTUNBcExBa0pkbVZqTXlnZ01DNHpOVFExT0N3Z01DNDVNRGd6TkN3Z01DNHhNek00TXlBcExBb0pDWFpsWXpNb0lEQXVNRFE0TWpNc0lEQXVNREUxTmpZc0lEQXVPRE0zTnpjZ0tRb0pLVHNLQ1dOdmJuTjBJRzFoZERNZ1FVTkZVMDkxZEhCMWRFMWhkQ0E5SUcxaGRETW9DZ2tKZG1Wak15Z2dJREV1TmpBME56VXNJQzB3TGpFd01qQTRMQ0F0TUM0d01ETXlOeUFwTEFrSmRtVmpNeWdnTFRBdU5UTXhNRGdzSUNBeExqRXdPREV6TENBdE1DNHdOekkzTmlBcExBb0pDWFpsWXpNb0lDMHdMakEzTXpZM0xDQXRNQzR3TURZd05Td2dJREV1TURjMk1ESWdLUW9KS1RzS0NXTnZiRzl5SUNvOUlIUnZibVZOWVhCd2FXNW5SWGh3YjNOMWNtVWdMeUF3TGpZN0NnbGpiMnh2Y2lBOUlFRkRSVk5KYm5CMWRFMWhkQ0FxSUdOdmJHOXlPd29KWTI5c2IzSWdQU0JTVWxSQmJtUlBSRlJHYVhRb0lHTnZiRzl5SUNrN0NnbGpiMnh2Y2lBOUlFRkRSVk5QZFhSd2RYUk5ZWFFnS2lCamIyeHZjanNLQ1hKbGRIVnliaUJ6WVhSMWNtRjBaU2dnWTI5c2IzSWdLVHNLZlFwMlpXTXpJRU4xYzNSdmJWUnZibVZOWVhCd2FXNW5LQ0IyWldNeklHTnZiRzl5SUNrZ2V5QnlaWFIxY200Z1kyOXNiM0k3SUgxZ0xDQnViU0E5SUdBamFXWmtaV1lnVlZORlgxUlNRVTVUVFVsVFUwbFBUZ29KWm14dllYUWdkSEpoYm5OdGFYTnphVzl1UVd4d2FHRWdQU0F4TGpBN0NnbG1iRzloZENCMGNtRnVjMjFwYzNOcGIyNUdZV04wYjNJZ1BTQjBjbUZ1YzIxcGMzTnBiMjQ3Q2dsbWJHOWhkQ0IwYUdsamEyNWxjM05HWVdOMGIzSWdQU0IwYUdsamEyNWxjM003Q2dramFXWmtaV1lnVlZORlgxUlNRVTVUVFVsVFUwbFBUazFCVUFvSkNYUnlZVzV6YldsemMybHZia1poWTNSdmNpQXFQU0IwWlhoMGRYSmxNa1FvSUhSeVlXNXpiV2x6YzJsdmJrMWhjQ3dnZGxWMklDa3VjanNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRlZUUlY5VVNFbERTMDVGVTFOTlFWQUtDUWwwYUdsamEyNWxjM05HWVdOMGIzSWdLajBnZEdWNGRIVnlaVEpFS0NCMGFHbGphMjVsYzNOTllYQXNJSFpWZGlBcExtYzdDZ2tqWlc1a2FXWUtDWFpsWXpNZ2NHOXpJRDBnZGxkdmNteGtVRzl6YVhScGIyNDdDZ2wyWldNeklIWWdQU0J1YjNKdFlXeHBlbVVvSUdOaGJXVnlZVkJ2YzJsMGFXOXVJQzBnY0c5eklDazdDZ2wyWldNeklHNGdQU0JwYm5abGNuTmxWSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0J1YjNKdFlXd3NJSFpwWlhkTllYUnlhWGdnS1RzS0NYWmxZelFnZEhKaGJuTnRhWE56YVc5dUlEMGdaMlYwU1VKTVZtOXNkVzFsVW1WbWNtRmpkR2x2YmlnS0NRbHVMQ0IyTENCeWIzVm5hRzVsYzNOR1lXTjBiM0lzSUcxaGRHVnlhV0ZzTG1ScFptWjFjMlZEYjJ4dmNpd2diV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkRiMnh2Y2l3Z2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKR09UQXNDZ2tKY0c5ekxDQnRiMlJsYkUxaGRISnBlQ3dnZG1sbGQwMWhkSEpwZUN3Z2NISnZhbVZqZEdsdmJrMWhkSEpwZUN3Z2FXOXlMQ0IwYUdsamEyNWxjM05HWVdOMGIzSXNDZ2tKWVhSMFpXNTFZWFJwYjI1RGIyeHZjaXdnWVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlNBcE93b0pkRzkwWVd4RWFXWm1kWE5sSUQwZ2JXbDRLQ0IwYjNSaGJFUnBabVoxYzJVc0lIUnlZVzV6YldsemMybHZiaTV5WjJJc0lIUnlZVzV6YldsemMybHZia1poWTNSdmNpQXBPd29KZEhKaGJuTnRhWE56YVc5dVFXeHdhR0VnUFNCdGFYZ29JSFJ5WVc1emJXbHpjMmx2YmtGc2NHaGhMQ0IwY21GdWMyMXBjM05wYjI0dVlTd2dkSEpoYm5OdGFYTnphVzl1Um1GamRHOXlJQ2s3Q2lObGJtUnBabUFzSUdsdElEMGdZQ05wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0NnbDFibWxtYjNKdElHWnNiMkYwSUhSeVlXNXpiV2x6YzJsdmJqc0tDWFZ1YVdadmNtMGdabXh2WVhRZ2RHaHBZMnR1WlhOek93b0pkVzVwWm05eWJTQm1iRzloZENCaGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObE93b0pkVzVwWm05eWJTQjJaV016SUdGMGRHVnVkV0YwYVc5dVEyOXNiM0k3Q2dramFXWmtaV1lnVlZORlgxUlNRVTVUVFVsVFUwbFBUazFCVUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlIUnlZVzV6YldsemMybHZiazFoY0RzS0NTTmxibVJwWmdvSkkybG1aR1ZtSUZWVFJWOVVTRWxEUzA1RlUxTk5RVkFLQ1FsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCMGFHbGphMjVsYzNOTllYQTdDZ2tqWlc1a2FXWUtDWFZ1YVdadmNtMGdkbVZqTWlCMGNtRnVjMjFwYzNOcGIyNVRZVzF3YkdWeVUybDZaVHNLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhSeVlXNXpiV2x6YzJsdmJsTmhiWEJzWlhKTllYQTdDZ2wxYm1sbWIzSnRJRzFoZERRZ2JXOWtaV3hOWVhSeWFYZzdDZ2wxYm1sbWIzSnRJRzFoZERRZ2NISnZhbVZqZEdsdmJrMWhkSEpwZURzS0NYWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUlFiM05wZEdsdmJqc0tDWFpsWXpNZ1oyVjBWbTlzZFcxbFZISmhibk50YVhOemFXOXVVbUY1S0NCMlpXTXpJRzRzSUhabFl6TWdkaXdnWm14dllYUWdkR2hwWTJ0dVpYTnpMQ0JtYkc5aGRDQnBiM0lzSUcxaGREUWdiVzlrWld4TllYUnlhWGdnS1NCN0Nna0pkbVZqTXlCeVpXWnlZV04wYVc5dVZtVmpkRzl5SUQwZ2NtVm1jbUZqZENnZ0xTQjJMQ0J1YjNKdFlXeHBlbVVvSUc0Z0tTd2dNUzR3SUM4Z2FXOXlJQ2s3Q2drSmRtVmpNeUJ0YjJSbGJGTmpZV3hsT3dvSkNXMXZaR1ZzVTJOaGJHVXVlQ0E5SUd4bGJtZDBhQ2dnZG1Wak15Z2diVzlrWld4TllYUnlhWGhiSURBZ1hTNTRlWG9nS1NBcE93b0pDVzF2WkdWc1UyTmhiR1V1ZVNBOUlHeGxibWQwYUNnZ2RtVmpNeWdnYlc5a1pXeE5ZWFJ5YVhoYklERWdYUzU0ZVhvZ0tTQXBPd29KQ1cxdlpHVnNVMk5oYkdVdWVpQTlJR3hsYm1kMGFDZ2dkbVZqTXlnZ2JXOWtaV3hOWVhSeWFYaGJJRElnWFM1NGVYb2dLU0FwT3dvSkNYSmxkSFZ5YmlCdWIzSnRZV3hwZW1Vb0lISmxabkpoWTNScGIyNVdaV04wYjNJZ0tTQXFJSFJvYVdOcmJtVnpjeUFxSUcxdlpHVnNVMk5oYkdVN0NnbDlDZ2xtYkc5aGRDQmhjSEJzZVVsdmNsUnZVbTkxWjJodVpYTnpLQ0JtYkc5aGRDQnliM1ZuYUc1bGMzTXNJR1pzYjJGMElHbHZjaUFwSUhzS0NRbHlaWFIxY200Z2NtOTFaMmh1WlhOeklDb2dZMnhoYlhBb0lHbHZjaUFxSURJdU1DQXRJREl1TUN3Z01DNHdMQ0F4TGpBZ0tUc0tDWDBLQ1habFl6UWdaMlYwVkhKaGJuTnRhWE56YVc5dVUyRnRjR3hsS0NCMlpXTXlJR1p5WVdkRGIyOXlaQ3dnWm14dllYUWdjbTkxWjJodVpYTnpMQ0JtYkc5aGRDQnBiM0lnS1NCN0Nna0pabXh2WVhRZ1puSmhiV1ZpZFdabVpYSk1iMlFnUFNCc2IyY3lLQ0IwY21GdWMyMXBjM05wYjI1VFlXMXdiR1Z5VTJsNlpTNTRJQ2tnS2lCaGNIQnNlVWx2Y2xSdlVtOTFaMmh1WlhOektDQnliM1ZuYUc1bGMzTXNJR2x2Y2lBcE93b0pDU05wWm1SbFppQlVSVmhVVlZKRlgweFBSRjlGV0ZRS0NRa0pjbVYwZFhKdUlIUmxlSFIxY21VeVJFeHZaRVZZVkNnZ2RISmhibk50YVhOemFXOXVVMkZ0Y0d4bGNrMWhjQ3dnWm5KaFowTnZiM0prTG5oNUxDQm1jbUZ0WldKMVptWmxja3h2WkNBcE93b0pDU05sYkhObENna0pDWEpsZEhWeWJpQjBaWGgwZFhKbE1rUW9JSFJ5WVc1emJXbHpjMmx2YmxOaGJYQnNaWEpOWVhBc0lHWnlZV2REYjI5eVpDNTRlU3dnWm5KaGJXVmlkV1ptWlhKTWIyUWdLVHNLQ1FralpXNWthV1lLQ1gwS0NYWmxZek1nWVhCd2JIbFdiMngxYldWQmRIUmxiblZoZEdsdmJpZ2dkbVZqTXlCeVlXUnBZVzVqWlN3Z1pteHZZWFFnZEhKaGJuTnRhWE56YVc5dVJHbHpkR0Z1WTJVc0lIWmxZek1nWVhSMFpXNTFZWFJwYjI1RGIyeHZjaXdnWm14dllYUWdZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU0FwSUhzS0NRbHBaaUFvSUdGMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVZ1BUMGdNQzR3SUNrZ2V3b0pDUWx5WlhSMWNtNGdjbUZrYVdGdVkyVTdDZ2tKZlNCbGJITmxJSHNLQ1FrSmRtVmpNeUJoZEhSbGJuVmhkR2x2YmtOdlpXWm1hV05wWlc1MElEMGdMV3h2WnlnZ1lYUjBaVzUxWVhScGIyNURiMnh2Y2lBcElDOGdZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaVHNLQ1FrSmRtVmpNeUIwY21GdWMyMXBkSFJoYm1ObElEMGdaWGh3S0NBdElHRjBkR1Z1ZFdGMGFXOXVRMjlsWm1acFkybGxiblFnS2lCMGNtRnVjMjFwYzNOcGIyNUVhWE4wWVc1alpTQXBPd2tKQ1hKbGRIVnliaUIwY21GdWMyMXBkSFJoYm1ObElDb2djbUZrYVdGdVkyVTdDZ2tKZlFvSmZRb0pkbVZqTkNCblpYUkpRa3hXYjJ4MWJXVlNaV1p5WVdOMGFXOXVLQ0IyWldNeklHNHNJSFpsWXpNZ2Rpd2dabXh2WVhRZ2NtOTFaMmh1WlhOekxDQjJaV016SUdScFptWjFjMlZEYjJ4dmNpd2dkbVZqTXlCemNHVmpkV3hoY2tOdmJHOXlMQ0JtYkc5aGRDQnpjR1ZqZFd4aGNrWTVNQ3dLQ1FsMlpXTXpJSEJ2YzJsMGFXOXVMQ0J0WVhRMElHMXZaR1ZzVFdGMGNtbDRMQ0J0WVhRMElIWnBaWGROWVhSeWFYZ3NJRzFoZERRZ2NISnZhazFoZEhKcGVDd2dabXh2WVhRZ2FXOXlMQ0JtYkc5aGRDQjBhR2xqYTI1bGMzTXNDZ2tKZG1Wak15QmhkSFJsYm5WaGRHbHZia052Ykc5eUxDQm1iRzloZENCaGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElDa2dld29KQ1habFl6TWdkSEpoYm5OdGFYTnphVzl1VW1GNUlEMGdaMlYwVm05c2RXMWxWSEpoYm5OdGFYTnphVzl1VW1GNUtDQnVMQ0IyTENCMGFHbGphMjVsYzNNc0lHbHZjaXdnYlc5a1pXeE5ZWFJ5YVhnZ0tUc0tDUWwyWldNeklISmxabkpoWTNSbFpGSmhlVVY0YVhRZ1BTQndiM05wZEdsdmJpQXJJSFJ5WVc1emJXbHpjMmx2YmxKaGVUc0tDUWwyWldNMElHNWtZMUJ2Y3lBOUlIQnliMnBOWVhSeWFYZ2dLaUIyYVdWM1RXRjBjbWw0SUNvZ2RtVmpOQ2dnY21WbWNtRmpkR1ZrVW1GNVJYaHBkQ3dnTVM0d0lDazdDZ2tKZG1Wak1pQnlaV1p5WVdOMGFXOXVRMjl2Y21SeklEMGdibVJqVUc5ekxuaDVJQzhnYm1SalVHOXpMbmM3Q2drSmNtVm1jbUZqZEdsdmJrTnZiM0prY3lBclBTQXhMakE3Q2drSmNtVm1jbUZqZEdsdmJrTnZiM0prY3lBdlBTQXlMakE3Q2drSmRtVmpOQ0IwY21GdWMyMXBkSFJsWkV4cFoyaDBJRDBnWjJWMFZISmhibk50YVhOemFXOXVVMkZ0Y0d4bEtDQnlaV1p5WVdOMGFXOXVRMjl2Y21SekxDQnliM1ZuYUc1bGMzTXNJR2x2Y2lBcE93b0pDWFpsWXpNZ1lYUjBaVzUxWVhSbFpFTnZiRzl5SUQwZ1lYQndiSGxXYjJ4MWJXVkJkSFJsYm5WaGRHbHZiaWdnZEhKaGJuTnRhWFIwWldSTWFXZG9kQzV5WjJJc0lHeGxibWQwYUNnZ2RISmhibk50YVhOemFXOXVVbUY1SUNrc0lHRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJc0lHRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdLVHNLQ1FsMlpXTXpJRVlnUFNCRmJuWnBjbTl1YldWdWRFSlNSRVlvSUc0c0lIWXNJSE53WldOMWJHRnlRMjlzYjNJc0lITndaV04xYkdGeVJqa3dMQ0J5YjNWbmFHNWxjM01nS1RzS0NRbHlaWFIxY200Z2RtVmpOQ2dnS0NBeExqQWdMU0JHSUNrZ0tpQmhkSFJsYm5WaGRHVmtRMjlzYjNJZ0tpQmthV1ptZFhObFEyOXNiM0lzSUhSeVlXNXpiV2wwZEdWa1RHbG5hSFF1WVNBcE93b0pmUW9qWlc1a2FXWmdMQ0J5YlNBOUlHQWphV1lnS0NCa1pXWnBibVZrS0NCVlUwVmZWVllnS1NBbUppQWhJR1JsWm1sdVpXUW9JRlZXVTE5V1JWSlVSVmhmVDA1TVdTQXBJQ2tLQ1haaGNubHBibWNnZG1Wak1pQjJWWFk3Q2lObGJtUnBabUFzSUhOdElEMGdZQ05wWm1SbFppQlZVMFZmVlZZS0NTTnBabVJsWmlCVlZsTmZWa1ZTVkVWWVgwOU9URmtLQ1FsMlpXTXlJSFpWZGpzS0NTTmxiSE5sQ2drSmRtRnllV2x1WnlCMlpXTXlJSFpWZGpzS0NTTmxibVJwWmdvSmRXNXBabTl5YlNCdFlYUXpJSFYyVkhKaGJuTm1iM0p0T3dvalpXNWthV1pnTENCdmJTQTlJR0FqYVdaa1pXWWdWVk5GWDFWV0NnbDJWWFlnUFNBb0lIVjJWSEpoYm5ObWIzSnRJQ29nZG1Wak15Z2dkWFlzSURFZ0tTQXBMbmg1T3dvalpXNWthV1pnTENCaGJTQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMHhKUjBoVVRVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1ZWTkZYMEZQVFVGUUlDa0tDWFpoY25scGJtY2dkbVZqTWlCMlZYWXlPd29qWlc1a2FXWmdMQ0JzYlNBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVlZORlgweEpSMGhVVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwRlBUVUZRSUNrS0NXRjBkSEpwWW5WMFpTQjJaV015SUhWMk1qc0tDWFpoY25scGJtY2dkbVZqTWlCMlZYWXlPd29KZFc1cFptOXliU0J0WVhReklIVjJNbFJ5WVc1elptOXliVHNLSTJWdVpHbG1ZQ3dnWTIwZ1BTQmdJMmxtSUdSbFptbHVaV1FvSUZWVFJWOU1TVWRJVkUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZWVFJWOUJUMDFCVUNBcENnbDJWWFl5SUQwZ0tDQjFkakpVY21GdWMyWnZjbTBnS2lCMlpXTXpLQ0IxZGpJc0lERWdLU0FwTG5oNU93b2paVzVrYVdaZ0xDQm9iU0E5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBWT1ZrMUJVQ0FwSUh4OElHUmxabWx1WldRb0lFUkpVMVJCVGtORklDa2dmSHdnWkdWbWFXNWxaQ0FvSUZWVFJWOVRTRUZFVDFkTlFWQWdLU0I4ZkNCa1pXWnBibVZrSUNnZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGlBcENnbDJaV00wSUhkdmNteGtVRzl6YVhScGIyNGdQU0IyWldNMEtDQjBjbUZ1YzJadmNtMWxaQ3dnTVM0d0lDazdDZ2tqYVdaa1pXWWdWVk5GWDBsT1UxUkJUa05KVGtjS0NRbDNiM0pzWkZCdmMybDBhVzl1SUQwZ2FXNXpkR0Z1WTJWTllYUnlhWGdnS2lCM2IzSnNaRkJ2YzJsMGFXOXVPd29KSTJWdVpHbG1DZ2wzYjNKc1pGQnZjMmwwYVc5dUlEMGdiVzlrWld4TllYUnlhWGdnS2lCM2IzSnNaRkJ2YzJsMGFXOXVPd29qWlc1a2FXWmdMQ0IxYlNBOUlHQjJZWEo1YVc1bklIWmxZeklnZGxWMk93cDFibWxtYjNKdElHMWhkRE1nZFhaVWNtRnVjMlp2Y20wN0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1haVmRpQTlJQ2dnZFhaVWNtRnVjMlp2Y20wZ0tpQjJaV016S0NCMWRpd2dNU0FwSUNrdWVIazdDZ2xuYkY5UWIzTnBkR2x2YmlBOUlIWmxZelFvSUhCdmMybDBhVzl1TG5oNUxDQXhMakFzSURFdU1DQXBPd3A5WUN3Z1pHMGdQU0JnZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnZERKRU93cDJZWEo1YVc1bklIWmxZeklnZGxWMk93cDJiMmxrSUcxaGFXNG9LU0I3Q2dsMlpXTTBJSFJsZUVOdmJHOXlJRDBnZEdWNGRIVnlaVEpFS0NCME1rUXNJSFpWZGlBcE93b0paMnhmUm5KaFowTnZiRzl5SUQwZ2JXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2RHVjRRMjlzYjNJZ0tUc0tDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDbjFnTENCbWJTQTlJR0IyWVhKNWFXNW5JSFpsWXpNZ2RsZHZjbXhrUkdseVpXTjBhVzl1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2wyVjI5eWJHUkVhWEpsWTNScGIyNGdQU0IwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUhCdmMybDBhVzl1TENCdGIyUmxiRTFoZEhKcGVDQXBPd29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtDV2RzWDFCdmMybDBhVzl1TG5vZ1BTQm5iRjlRYjNOcGRHbHZiaTUzT3dwOVlDd2djRzBnUFNCZ0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5amIyMXRiMjVmY0dGeWMxOW1jbUZuYldWdWRENEtkVzVwWm05eWJTQm1iRzloZENCdmNHRmphWFI1T3dwMllYSjVhVzVuSUhabFl6TWdkbGR2Y214a1JHbHlaV04wYVc5dU93b2phVzVqYkhWa1pTQThZM1ZpWlY5MWRsOXlaV1pzWldOMGFXOXVYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRvS1NCN0NnbDJaV016SUhaU1pXWnNaV04wSUQwZ2RsZHZjbXhrUkdseVpXTjBhVzl1T3dvSkkybHVZMngxWkdVZ1BHVnVkbTFoY0Y5bWNtRm5iV1Z1ZEQ0S0NXZHNYMFp5WVdkRGIyeHZjaUE5SUdWdWRrTnZiRzl5T3dvSloyeGZSbkpoWjBOdmJHOXlMbUVnS2owZ2IzQmhZMmwwZVRzS0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0NuMWdMQ0J0YlNBOUlHQWphVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOTJaWEowWlhnK0NuWmhjbmxwYm1jZ2RtVmpNaUIyU0dsbmFGQnlaV05wYzJsdmJscFhPd3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThkWFpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNWlZWE5sWDNabGNuUmxlRDRLQ1NOcFptUmxaaUJWVTBWZlJFbFRVRXhCUTBWTlJVNVVUVUZRQ2drSkkybHVZMngxWkdVZ1BHSmxaMmx1Ym05eWJXRnNYM1psY25SbGVENEtDUWtqYVc1amJIVmtaU0E4Ylc5eWNHaHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkNTTnBibU5zZFdSbElEeHphMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05sYm1ScFpnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGcrQ2dsMlNHbG5hRkJ5WldOcGMybHZibHBYSUQwZ1oyeGZVRzl6YVhScGIyNHVlbmM3Q24xZ0xDQm5iU0E5SUdBamFXWWdSRVZRVkVoZlVFRkRTMGxPUnlBOVBTQXpNakF3Q2dsMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDaU5sYm1ScFpnb2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThjR0ZqYTJsdVp6NEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtRnllV2x1WnlCMlpXTXlJSFpJYVdkb1VISmxZMmx6YVc5dVdsYzdDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lERXVNQ0FwT3dvSkkybG1JRVJGVUZSSVgxQkJRMHRKVGtjZ1BUMGdNekl3TUFvSkNXUnBabVoxYzJWRGIyeHZjaTVoSUQwZ2IzQmhZMmwwZVRzS0NTTmxibVJwWmdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZlpuSmhaMjFsYm5RK0NnbG1iRzloZENCbWNtRm5RMjl2Y21SYUlEMGdNQzQxSUNvZ2RraHBaMmhRY21WamFYTnBiMjVhVjFzd1hTQXZJSFpJYVdkb1VISmxZMmx6YVc5dVdsZGJNVjBnS3lBd0xqVTdDZ2tqYVdZZ1JFVlFWRWhmVUVGRFMwbE9SeUE5UFNBek1qQXdDZ2tKWjJ4ZlJuSmhaME52Ykc5eUlEMGdkbVZqTkNnZ2RtVmpNeWdnTVM0d0lDMGdabkpoWjBOdmIzSmtXaUFwTENCdmNHRmphWFI1SUNrN0Nna2paV3hwWmlCRVJWQlVTRjlRUVVOTFNVNUhJRDA5SURNeU1ERUtDUWxuYkY5R2NtRm5RMjlzYjNJZ1BTQndZV05yUkdWd2RHaFViMUpIUWtFb0lHWnlZV2REYjI5eVpGb2dLVHNLQ1NObGJtUnBaZ3A5WUN3Z2VHMGdQU0JnSTJSbFptbHVaU0JFU1ZOVVFVNURSUXAyWVhKNWFXNW5JSFpsWXpNZ2RsZHZjbXhrVUc5emFYUnBiMjQ3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5MlpYSjBaWGcrQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHgxZGw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkkybG1aR1ZtSUZWVFJWOUVTVk5RVEVGRFJVMUZUbFJOUVZBS0NRa2phVzVqYkhWa1pTQThZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KQ1NOcGJtTnNkV1JsSUR4dGIzSndhRzV2Y20xaGJGOTJaWEowWlhnK0Nna0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJWdVpHbG1DZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHbHpjR3hoWTJWdFpXNTBiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4M2IzSnNaSEJ2YzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNabGNuUmxlRDRLQ1haWGIzSnNaRkJ2YzJsMGFXOXVJRDBnZDI5eWJHUlFiM05wZEdsdmJpNTRlWG83Q24xZ0xDQjViU0E5SUdBalpHVm1hVzVsSUVSSlUxUkJUa05GQ25WdWFXWnZjbTBnZG1Wak15QnlaV1psY21WdVkyVlFiM05wZEdsdmJqc0tkVzVwWm05eWJTQm1iRzloZENCdVpXRnlSR2x6ZEdGdVkyVTdDblZ1YVdadmNtMGdabXh2WVhRZ1ptRnlSR2x6ZEdGdVkyVTdDblpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JRYjNOcGRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhCaFkydHBibWMrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVJQ2dwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lERXVNQ0FwT3dvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2xtYkc5aGRDQmthWE4wSUQwZ2JHVnVaM1JvS0NCMlYyOXliR1JRYjNOcGRHbHZiaUF0SUhKbFptVnlaVzVqWlZCdmMybDBhVzl1SUNrN0NnbGthWE4wSUQwZ0tDQmthWE4wSUMwZ2JtVmhja1JwYzNSaGJtTmxJQ2tnTHlBb0lHWmhja1JwYzNSaGJtTmxJQzBnYm1WaGNrUnBjM1JoYm1ObElDazdDZ2xrYVhOMElEMGdjMkYwZFhKaGRHVW9JR1JwYzNRZ0tUc0tDV2RzWDBaeVlXZERiMnh2Y2lBOUlIQmhZMnRFWlhCMGFGUnZVa2RDUVNnZ1pHbHpkQ0FwT3dwOVlDd2dkbTBnUFNCZ2RtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pFUnBjbVZqZEdsdmJqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtkbTlwWkNCdFlXbHVLQ2tnZXdvSmRsZHZjbXhrUkdseVpXTjBhVzl1SUQwZ2RISmhibk5tYjNKdFJHbHlaV04wYVc5dUtDQndiM05wZEdsdmJpd2diVzlrWld4TllYUnlhWGdnS1RzS0NTTnBibU5zZFdSbElEeGlaV2RwYmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGNISnZhbVZqZEY5MlpYSjBaWGcrQ24xZ0xDQmZiU0E5SUdCMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCMFJYRjFhWEpsWTNRN0NuWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUkVhWEpsWTNScGIyNDdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDblp2YVdRZ2JXRnBiaWdwSUhzS0NYWmxZek1nWkdseVpXTjBhVzl1SUQwZ2JtOXliV0ZzYVhwbEtDQjJWMjl5YkdSRWFYSmxZM1JwYjI0Z0tUc0tDWFpsWXpJZ2MyRnRjR3hsVlZZZ1BTQmxjWFZwY21WamRGVjJLQ0JrYVhKbFkzUnBiMjRnS1RzS0NYWmxZelFnZEdWNFEyOXNiM0lnUFNCMFpYaDBkWEpsTWtRb0lIUkZjWFZwY21WamRDd2djMkZ0Y0d4bFZWWWdLVHNLQ1dkc1gwWnlZV2REYjJ4dmNpQTlJRzFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JSFJsZUVOdmJHOXlJQ2s3Q2dramFXNWpiSFZrWlNBOGRHOXVaVzFoY0hCcGJtZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wlc1amIyUnBibWR6WDJaeVlXZHRaVzUwUGdwOVlDd2dUVzBnUFNCZ2RXNXBabTl5YlNCbWJHOWhkQ0J6WTJGc1pUc0tZWFIwY21saWRYUmxJR1pzYjJGMElHeHBibVZFYVhOMFlXNWpaVHNLZG1GeWVXbHVaeUJtYkc5aGRDQjJUR2x1WlVScGMzUmhibU5sT3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOFkyOXNiM0pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dsMlRHbHVaVVJwYzNSaGJtTmxJRDBnYzJOaGJHVWdLaUJzYVc1bFJHbHpkR0Z1WTJVN0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wm05blgzWmxjblJsZUQ0S2ZXQXNJR0p0SUQwZ1lIVnVhV1p2Y20wZ2RtVmpNeUJrYVdabWRYTmxPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NuVnVhV1p2Y20wZ1pteHZZWFFnWkdGemFGTnBlbVU3Q25WdWFXWnZjbTBnWm14dllYUWdkRzkwWVd4VGFYcGxPd3AyWVhKNWFXNW5JR1pzYjJGMElIWk1hVzVsUkdsemRHRnVZMlU3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZlpuSmhaMjFsYm5RK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mWm5KaFoyMWxiblErQ2dscFppQW9JRzF2WkNnZ2RreHBibVZFYVhOMFlXNWpaU3dnZEc5MFlXeFRhWHBsSUNrZ1BpQmtZWE5vVTJsNlpTQXBJSHNLQ1Fsa2FYTmpZWEprT3dvSmZRb0pkbVZqTXlCdmRYUm5iMmx1WjB4cFoyaDBJRDBnZG1Wak15Z2dNQzR3SUNrN0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lHUnBabVoxYzJVc0lHOXdZV05wZEhrZ0tUc0tDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGpiMnh2Y2w5bWNtRm5iV1Z1ZEQ0S0NXOTFkR2R2YVc1blRHbG5hSFFnUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpT3dvSkkybHVZMngxWkdVZ1BHOTFkSEIxZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIQnlaVzExYkhScGNHeHBaV1JmWVd4d2FHRmZabkpoWjIxbGJuUStDbjFnTENCM2JTQTlJR0FqYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHgxZGpKZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhsYm5adFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4MWRqSmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgzWmxjblJsZUQ0S0NTTnBaaUJrWldacGJtVmtJQ2dnVlZORlgwVk9WazFCVUNBcElIeDhJR1JsWm1sdVpXUWdLQ0JWVTBWZlUwdEpUazVKVGtjZ0tRb0pDU05wYm1Oc2RXUmxJRHhpWldkcGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2drSkkybHVZMngxWkdVZ1BHMXZjbkJvYm05eWJXRnNYM1psY25SbGVENEtDUWtqYVc1amJIVmtaU0E4YzJ0cGJtSmhjMlZmZG1WeWRHVjRQZ29KQ1NOcGJtTnNkV1JsSUR4emEybHVibTl5YldGc1gzWmxjblJsZUQ0S0NRa2phVzVqYkhWa1pTQThaR1ZtWVhWc2RHNXZjbTFoYkY5MlpYSjBaWGcrQ2dralpXNWthV1lLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHgzYjNKc1pIQnZjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wlc1MmJXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhtYjJkZmRtVnlkR1Y0UGdwOVlDd2dVMjBnUFNCZ2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS0kybG1ibVJsWmlCR1RFRlVYMU5JUVVSRlJBb0pkbUZ5ZVdsdVp5QjJaV016SUhaT2IzSnRZV3c3Q2lObGJtUnBaZ29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BIVjJNbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOWpiMjF0YjI1ZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZM1ZpWlY5MWRsOXlaV1pzWldOMGFXOXVYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4emNHVmpkV3hoY20xaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgyWnlZV2R0Wlc1MFBnb0pkbVZqTkNCa2FXWm1kWE5sUTI5c2IzSWdQU0IyWldNMEtDQmthV1ptZFhObExDQnZjR0ZqYVhSNUlDazdDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4emNHVmpkV3hoY20xaGNGOW1jbUZuYldWdWRENEtDVkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUQwZ1VtVm1iR1ZqZEdWa1RHbG5hSFFvSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBJQ2s3Q2dramFXWmtaV1lnVlZORlgweEpSMGhVVFVGUUNna0pkbVZqTkNCc2FXZG9kRTFoY0ZSbGVHVnNQU0IwWlhoMGRYSmxNa1FvSUd4cFoyaDBUV0Z3TENCMlZYWXlJQ2s3Q2drSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3M5SUd4cFoyaDBUV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2diR2xuYUhSTllYQlVaWGhsYkNBcExuSm5ZaUFxSUd4cFoyaDBUV0Z3U1c1MFpXNXphWFI1T3dvSkkyVnNjMlVLQ1FseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLejBnZG1Wak15Z2dNUzR3SUNrN0Nna2paVzVrYVdZS0NTTnBibU5zZFdSbElEeGhiMjFoY0Y5bWNtRm5iV1Z1ZEQ0S0NYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FxUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpT3dvSmRtVmpNeUJ2ZFhSbmIybHVaMHhwWjJoMElEMGdjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sT3dvSkkybHVZMngxWkdVZ1BHVnVkbTFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHZkWFJ3ZFhSZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThkRzl1WlcxaGNIQnBibWRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpXNWpiMlJwYm1kelgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHdjbVZ0ZFd4MGFYQnNhV1ZrWDJGc2NHaGhYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdScGRHaGxjbWx1WjE5bWNtRm5iV1Z1ZEQ0S2ZXQXNJRlJ0SUQwZ1lDTmtaV1pwYm1VZ1RFRk5Ra1ZTVkFwMllYSjVhVzVuSUhabFl6TWdka3hwWjJoMFJuSnZiblE3Q25aaGNubHBibWNnZG1Wak15QjJTVzVrYVhKbFkzUkdjbTl1ZERzS0kybG1aR1ZtSUVSUFZVSk1SVjlUU1VSRlJBb0pkbUZ5ZVdsdVp5QjJaV016SUhaTWFXZG9kRUpoWTJzN0NnbDJZWEo1YVc1bklIWmxZek1nZGtsdVpHbHlaV04wUW1GamF6c0tJMlZ1WkdsbUNpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BIVjJNbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR0p6WkdaelBnb2phVzVqYkhWa1pTQThiR2xuYUhSelgzQmhjbk5mWW1WbmFXNCtDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgzWmxjblJsZUQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEhWMlgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeDFkakpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2h1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1aVlYTmxYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a1pXWmhkV3gwYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeDNiM0pzWkhCdmMxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaVzUyYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNhV2RvZEhOZmJHRnRZbVZ5ZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeG1iMmRmZG1WeWRHVjRQZ3A5WUN3Z1JXMGdQU0JnZFc1cFptOXliU0IyWldNeklHUnBabVoxYzJVN0NuVnVhV1p2Y20wZ2RtVmpNeUJsYldsemMybDJaVHNLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93cDJZWEo1YVc1bklIWmxZek1nZGt4cFoyaDBSbkp2Ym5RN0NuWmhjbmxwYm1jZ2RtVmpNeUIyU1c1a2FYSmxZM1JHY205dWREc0tJMmxtWkdWbUlFUlBWVUpNUlY5VFNVUkZSQW9KZG1GeWVXbHVaeUIyWldNeklIWk1hV2RvZEVKaFkyczdDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RrbHVaR2x5WldOMFFtRmphenNLSTJWdVpHbG1DaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHh3WVdOcmFXNW5QZ29qYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BIVjJNbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z0YVhOemFYWmxiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhsYm5adFlYQmZZMjl0Ylc5dVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bGJuWnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR04xWW1WZmRYWmZjbVZtYkdWamRHbHZibDltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdKelpHWnpQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnpYM0JoY25OZlltVm5hVzQrQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGemExOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGMzQmxZM1ZzWVhKdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDWFpsWXpRZ1pHbG1ablZ6WlVOdmJHOXlJRDBnZG1Wak5DZ2daR2xtWm5WelpTd2diM0JoWTJsMGVTQXBPd29KVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ1BTQlNaV1pzWldOMFpXUk1hV2RvZENnZ2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tnS1RzS0NYWmxZek1nZEc5MFlXeEZiV2x6YzJsMlpWSmhaR2xoYm1ObElEMGdaVzFwYzNOcGRtVTdDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4emNHVmpkV3hoY20xaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYldsemMybDJaVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBabVJsWmlCRVQxVkNURVZmVTBsRVJVUUtDUWx5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdLQ0JuYkY5R2NtOXVkRVpoWTJsdVp5QXBJRDhnZGtsdVpHbHlaV04wUm5KdmJuUWdPaUIyU1c1a2FYSmxZM1JDWVdOck93b0pJMlZzYzJVS0NRbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3owZ2RrbHVaR2x5WldOMFJuSnZiblE3Q2dralpXNWthV1lLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kRzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FxUFNCQ1VrUkdYMHhoYldKbGNuUW9JR1JwWm1aMWMyVkRiMnh2Y2k1eVoySWdLVHNLQ1NOcFptUmxaaUJFVDFWQ1RFVmZVMGxFUlVRS0NRbHlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JFYVdabWRYTmxJRDBnS0NCbmJGOUdjbTl1ZEVaaFkybHVaeUFwSUQ4Z2RreHBaMmgwUm5KdmJuUWdPaUIyVEdsbmFIUkNZV05yT3dvSkkyVnNjMlVLQ1FseVpXWnNaV04wWldSTWFXZG9kQzVrYVhKbFkzUkVhV1ptZFhObElEMGdka3hwWjJoMFJuSnZiblE3Q2dralpXNWthV1lLQ1hKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ0tqMGdRbEpFUmw5TVlXMWlaWEowS0NCa2FXWm1kWE5sUTI5c2IzSXVjbWRpSUNrZ0tpQm5aWFJUYUdGa2IzZE5ZWE5yS0NrN0Nna2phVzVqYkhWa1pTQThZVzl0WVhCZlpuSmhaMjFsYm5RK0NnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0J5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSRWFXWm1kWE5sSUNzZ2NtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3NnZEc5MFlXeEZiV2x6YzJsMlpWSmhaR2xoYm1ObE93b0pJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh2ZFhSd2RYUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4ZEc5dVpXMWhjSEJwYm1kZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaVzVqYjJScGJtZHpYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdadloxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh3Y21WdGRXeDBhWEJzYVdWa1gyRnNjR2hoWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHUnBkR2hsY21sdVoxOW1jbUZuYldWdWRENEtmV0FzSUVGdElEMGdZQ05rWldacGJtVWdUVUZVUTBGUUNuWmhjbmxwYm1jZ2RtVmpNeUIyVm1sbGQxQnZjMmwwYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdVltRnpaVjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHVm1ZWFZzZEc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDZ2wyVm1sbGQxQnZjMmwwYVc5dUlEMGdMU0J0ZGxCdmMybDBhVzl1TG5oNWVqc0tmV0FzSUVOdElEMGdZQ05rWldacGJtVWdUVUZVUTBGUUNuVnVhV1p2Y20wZ2RtVmpNeUJrYVdabWRYTmxPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NuVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHMWhkR05oY0RzS2RtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZblZ0Y0cxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lHUnBabVoxYzJVc0lHOXdZV05wZEhrZ0tUc0tDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjlpWldkcGJqNEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3o0S0NYWmxZek1nZG1sbGQwUnBjaUE5SUc1dmNtMWhiR2w2WlNnZ2RsWnBaWGRRYjNOcGRHbHZiaUFwT3dvSmRtVmpNeUI0SUQwZ2JtOXliV0ZzYVhwbEtDQjJaV016S0NCMmFXVjNSR2x5TG5vc0lEQXVNQ3dnTFNCMmFXVjNSR2x5TG5nZ0tTQXBPd29KZG1Wak15QjVJRDBnWTNKdmMzTW9JSFpwWlhkRWFYSXNJSGdnS1RzS0NYWmxZeklnZFhZZ1BTQjJaV015S0NCa2IzUW9JSGdzSUc1dmNtMWhiQ0FwTENCa2IzUW9JSGtzSUc1dmNtMWhiQ0FwSUNrZ0tpQXdMalE1TlNBcklEQXVOVHNLQ1NOcFptUmxaaUJWVTBWZlRVRlVRMEZRQ2drSmRtVmpOQ0J0WVhSallYQkRiMnh2Y2lBOUlIUmxlSFIxY21VeVJDZ2diV0YwWTJGd0xDQjFkaUFwT3dvSkNXMWhkR05oY0VOdmJHOXlJRDBnYldGMFkyRndWR1Y0Wld4VWIweHBibVZoY2lnZ2JXRjBZMkZ3UTI5c2IzSWdLVHNLQ1NObGJITmxDZ2tKZG1Wak5DQnRZWFJqWVhCRGIyeHZjaUE5SUhabFl6UW9JREV1TUNBcE93b0pJMlZ1WkdsbUNnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0JrYVdabWRYTmxRMjlzYjNJdWNtZGlJQ29nYldGMFkyRndRMjlzYjNJdWNtZGlPd29KSTJsdVkyeDFaR1VnUEc5MWRIQjFkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z1RHMGdQU0JnSTJSbFptbHVaU0JPVDFKTlFVd0tJMmxtSUdSbFptbHVaV1FvSUVaTVFWUmZVMGhCUkVWRUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwSlZUVkJOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JVUVU1SFJVNVVVMUJCUTBWZlRrOVNUVUZNVFVGUUlDa0tDWFpoY25scGJtY2dkbVZqTXlCMlZtbGxkMUJ2YzJsMGFXOXVPd29qWlc1a2FXWUtJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThkWFpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtSmhjMlZmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUmxabUYxYkhSdWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHbHpjR3hoWTJWdFpXNTBiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0kybG1JR1JsWm1sdVpXUW9JRVpNUVZSZlUwaEJSRVZFSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDBKVlRWQk5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlVRVTVIUlU1VVUxQkJRMFZmVGs5U1RVRk1UVUZRSUNrS0NYWldhV1YzVUc5emFYUnBiMjRnUFNBdElHMTJVRzl6YVhScGIyNHVlSGw2T3dvalpXNWthV1lLZldBc0lGSnRJRDBnWUNOa1pXWnBibVVnVGs5U1RVRk1DblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS0kybG1JR1JsWm1sdVpXUW9JRVpNUVZSZlUwaEJSRVZFSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDBKVlRWQk5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlVRVTVIUlU1VVUxQkJRMFZmVGs5U1RVRk1UVUZRSUNrS0NYWmhjbmxwYm1jZ2RtVmpNeUIyVm1sbGQxQnZjMmwwYVc5dU93b2paVzVrYVdZS0kybHVZMngxWkdVZ1BIQmhZMnRwYm1jK0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThibTl5YldGc1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aWRXMXdiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZZbVZuYVc0K0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gyWnlZV2R0Wlc1MFgyMWhjSE0rQ2dsbmJGOUdjbUZuUTI5c2IzSWdQU0IyWldNMEtDQndZV05yVG05eWJXRnNWRzlTUjBJb0lHNXZjbTFoYkNBcExDQnZjR0ZqYVhSNUlDazdDbjFnTENCUWJTQTlJR0FqWkdWbWFXNWxJRkJJVDA1SENuWmhjbmxwYm1jZ2RtVmpNeUIyVm1sbGQxQnZjMmwwYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeDFkakpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhsYm5adFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4MWRqSmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGlaV2RwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzVpWVhObFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrWldaaGRXeDBibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTkyWlhKMFpYZytDZ2wyVm1sbGQxQnZjMmwwYVc5dUlEMGdMU0J0ZGxCdmMybDBhVzl1TG5oNWVqc0tDU05wYm1Oc2RXUmxJRHgzYjNKc1pIQnZjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wlc1MmJXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdadloxOTJaWEowWlhnK0NuMWdMQ0JKYlNBOUlHQWpaR1ZtYVc1bElGQklUMDVIQ25WdWFXWnZjbTBnZG1Wak15QmthV1ptZFhObE93cDFibWxtYjNKdElIWmxZek1nWlcxcGMzTnBkbVU3Q25WdWFXWnZjbTBnZG1Wak15QnpjR1ZqZFd4aGNqc0tkVzVwWm05eWJTQm1iRzloZENCemFHbHVhVzVsYzNNN0NuVnVhV1p2Y20wZ1pteHZZWFFnYjNCaFkybDBlVHNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhCaFkydHBibWMrQ2lOcGJtTnNkV1JsSUR4a2FYUm9aWEpwYm1kZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThkWFl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0Z2YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WlcxcGMzTnBkbVZ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjlqYjIxdGIyNWZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTNWaVpWOTFkbDl5Wldac1pXTjBhVzl1WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGljMlJtY3o0S0kybHVZMngxWkdVZ1BHeHBaMmgwYzE5d1lYSnpYMkpsWjJsdVBnb2phVzVqYkhWa1pTQThibTl5YldGc1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kSE5mY0dodmJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFluVnRjRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh6Y0dWamRXeGhjbTFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgyWnlZV2R0Wlc1MFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDJaeVlXZHRaVzUwUGdvSmRtVmpOQ0JrYVdabWRYTmxRMjlzYjNJZ1BTQjJaV00wS0NCa2FXWm1kWE5sTENCdmNHRmphWFI1SUNrN0NnbFNaV1pzWldOMFpXUk1hV2RvZENCeVpXWnNaV04wWldSTWFXZG9kQ0E5SUZKbFpteGxZM1JsWkV4cFoyaDBLQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTQXBPd29KZG1Wak15QjBiM1JoYkVWdGFYTnphWFpsVW1Ga2FXRnVZMlVnUFNCbGJXbHpjMmwyWlRzS0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRnRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSE53WldOMWJHRnliV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiajRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmWm5KaFoyMWxiblJmYldGd2N6NEtDU05wYm1Oc2RXUmxJRHhsYldsemMybDJaVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHaHZibWRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDJKbFoybHVQZ29KSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTltY21GbmJXVnVkRjl0WVhCelBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOW1jbUZuYldWdWRGOWxibVErQ2dramFXNWpiSFZrWlNBOFlXOXRZWEJmWm5KaFoyMWxiblErQ2dsMlpXTXpJRzkxZEdkdmFXNW5UR2xuYUhRZ1BTQnlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JFYVdabWRYTmxJQ3NnY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUkVhV1ptZFhObElDc2djbVZtYkdWamRHVmtUR2xuYUhRdVpHbHlaV04wVTNCbFkzVnNZWElnS3lCeVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRk53WldOMWJHRnlJQ3NnZEc5MFlXeEZiV2x6YzJsMlpWSmhaR2xoYm1ObE93b0pJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh2ZFhSd2RYUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4ZEc5dVpXMWhjSEJwYm1kZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaVzVqYjJScGJtZHpYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdadloxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh3Y21WdGRXeDBhWEJzYVdWa1gyRnNjR2hoWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHUnBkR2hsY21sdVoxOW1jbUZuYldWdWRENEtmV0FzSUVSdElEMGdZQ05rWldacGJtVWdVMVJCVGtSQlVrUUtkbUZ5ZVdsdVp5QjJaV016SUhaV2FXVjNVRzl6YVhScGIyNDdDaU5wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0NnbDJZWEo1YVc1bklIWmxZek1nZGxkdmNteGtVRzl6YVhScGIyNDdDaU5sYm1ScFpnb2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeDFkakpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BIVjJYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHgxZGpKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0dodWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNWlZWE5sWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGtaV1poZFd4MGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGNISnZhbVZqZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOTJaWEowWlhnK0NnbDJWbWxsZDFCdmMybDBhVzl1SUQwZ0xTQnRkbEJ2YzJsMGFXOXVMbmg1ZWpzS0NTTnBibU5zZFdSbElEeDNiM0pzWkhCdmMxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhtYjJkZmRtVnlkR1Y0UGdvamFXWmtaV1lnVlZORlgxUlNRVTVUVFVsVFUwbFBUZ29KZGxkdmNteGtVRzl6YVhScGIyNGdQU0IzYjNKc1pGQnZjMmwwYVc5dUxuaDVlanNLSTJWdVpHbG1DbjFnTENCR2JTQTlJR0FqWkdWbWFXNWxJRk5VUVU1RVFWSkVDaU5wWm1SbFppQlFTRmxUU1VOQlRBb0pJMlJsWm1sdVpTQkpUMUlLQ1NOa1pXWnBibVVnVTFCRlExVk1RVklLSTJWdVpHbG1DblZ1YVdadmNtMGdkbVZqTXlCa2FXWm1kWE5sT3dwMWJtbG1iM0p0SUhabFl6TWdaVzFwYzNOcGRtVTdDblZ1YVdadmNtMGdabXh2WVhRZ2NtOTFaMmh1WlhOek93cDFibWxtYjNKdElHWnNiMkYwSUcxbGRHRnNibVZ6Y3pzS2RXNXBabTl5YlNCbWJHOWhkQ0J2Y0dGamFYUjVPd29qYVdaa1pXWWdTVTlTQ2dsMWJtbG1iM0p0SUdac2IyRjBJR2x2Y2pzS0kyVnVaR2xtQ2lOcFptUmxaaUJUVUVWRFZVeEJVZ29KZFc1cFptOXliU0JtYkc5aGRDQnpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVUc0tDWFZ1YVdadmNtMGdkbVZqTXlCemNHVmpkV3hoY2tOdmJHOXlPd29KSTJsbVpHVm1JRlZUUlY5VFVFVkRWVXhCVWtsT1ZFVk9VMGxVV1UxQlVBb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSE53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3T3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnVlZORlgxTlFSVU5WVEVGU1EwOU1UMUpOUVZBS0NRbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnpjR1ZqZFd4aGNrTnZiRzl5VFdGd093b0pJMlZ1WkdsbUNpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZBb0pkVzVwWm05eWJTQm1iRzloZENCamJHVmhjbU52WVhRN0NnbDFibWxtYjNKdElHWnNiMkYwSUdOc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3pzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlUwaEZSVTRLQ1hWdWFXWnZjbTBnZG1Wak15QnphR1ZsYmtOdmJHOXlPd29KZFc1cFptOXliU0JtYkc5aGRDQnphR1ZsYmxKdmRXZG9ibVZ6Y3pzS0NTTnBabVJsWmlCVlUwVmZVMGhGUlU1RFQweFBVazFCVUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITm9aV1Z1UTI5c2IzSk5ZWEE3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTVTVDFWSFNFNUZVMU5OUVZBS0NRbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNEc0tDU05sYm1ScFpnb2paVzVrYVdZS2RtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeHdZV05yYVc1blBnb2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhWMk1sOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGIyMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiR2xuYUhSdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnRhWE56YVhabGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGljMlJtY3o0S0kybHVZMngxWkdVZ1BHTjFZbVZmZFhaZmNtVm1iR1ZqZEdsdmJsOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOWpiMjF0YjI1ZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjl3YUhsemFXTmhiRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RITmZjR0Z5YzE5aVpXZHBiajRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiR2xuYUhSelgzQm9lWE5wWTJGc1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4MGNtRnVjMjFwYzNOcGIyNWZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFluVnRjRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdWaGNtTnZZWFJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSEp2ZFdkb2JtVnpjMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YldWMFlXeHVaWE56YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lHUnBabVoxYzJVc0lHOXdZV05wZEhrZ0tUc0tDVkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUQwZ1VtVm1iR1ZqZEdWa1RHbG5hSFFvSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBJQ2s3Q2dsMlpXTXpJSFJ2ZEdGc1JXMXBjM05wZG1WU1lXUnBZVzVqWlNBOUlHVnRhWE56YVhabE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Y205MVoyaHVaWE56YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzFsZEdGc2JtVnpjMjFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZlpuSmhaMjFsYm5SZlltVm5hVzQrQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDJaeVlXZHRaVzUwWDIxaGNITStDZ2tqYVc1amJIVmtaU0E4WTJ4bFlYSmpiMkYwWDI1dmNtMWhiRjltY21GbmJXVnVkRjlpWldkcGJqNEtDU05wYm1Oc2RXUmxJRHhqYkdWaGNtTnZZWFJmYm05eWJXRnNYMlp5WVdkdFpXNTBYMjFoY0hNK0Nna2phVzVqYkhWa1pTQThaVzFwYzNOcGRtVnRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDNCb2VYTnBZMkZzWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYzE5bWNtRm5iV1Z1ZEY5aVpXZHBiajRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mWm5KaFoyMWxiblJmYldGd2N6NEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZabkpoWjIxbGJuUmZaVzVrUGdvSkkybHVZMngxWkdVZ1BHRnZiV0Z3WDJaeVlXZHRaVzUwUGdvSmRtVmpNeUIwYjNSaGJFUnBabVoxYzJVZ1BTQnlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JFYVdabWRYTmxJQ3NnY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUkVhV1ptZFhObE93b0pkbVZqTXlCMGIzUmhiRk53WldOMWJHRnlJRDBnY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFUzQmxZM1ZzWVhJZ0t5QnlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEZOd1pXTjFiR0Z5T3dvSkkybHVZMngxWkdVZ1BIUnlZVzV6YldsemMybHZibDltY21GbmJXVnVkRDRLQ1habFl6TWdiM1YwWjI5cGJtZE1hV2RvZENBOUlIUnZkR0ZzUkdsbVpuVnpaU0FySUhSdmRHRnNVM0JsWTNWc1lYSWdLeUIwYjNSaGJFVnRhWE56YVhabFVtRmthV0Z1WTJVN0Nna2phV1prWldZZ1ZWTkZYMU5JUlVWT0Nna0pabXh2WVhRZ2MyaGxaVzVGYm1WeVozbERiMjF3SUQwZ01TNHdJQzBnTUM0eE5UY2dLaUJ0WVhnektDQnRZWFJsY21saGJDNXphR1ZsYmtOdmJHOXlJQ2s3Q2drSmIzVjBaMjlwYm1kTWFXZG9kQ0E5SUc5MWRHZHZhVzVuVEdsbmFIUWdLaUJ6YUdWbGJrVnVaWEpuZVVOdmJYQWdLeUJ6YUdWbGJsTndaV04xYkdGeU93b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWQW9KQ1dac2IyRjBJR1J2ZEU1V1kyTWdQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQm5aVzl0WlhSeWVTNWpiR1ZoY21OdllYUk9iM0p0WVd3c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJZ0tTQXBPd29KQ1habFl6TWdSbU5qSUQwZ1JsOVRZMmhzYVdOcktDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUkdNQ3dnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwUmprd0xDQmtiM1JPVm1OaklDazdDZ2tKYjNWMFoyOXBibWRNYVdkb2RDQTlJRzkxZEdkdmFXNW5UR2xuYUhRZ0tpQW9JREV1TUNBdElHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRDQXFJRVpqWXlBcElDc2dZMnhsWVhKamIyRjBVM0JsWTNWc1lYSWdLaUJ0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFE3Q2dralpXNWthV1lLQ1NOcGJtTnNkV1JsSUR4dmRYUndkWFJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGRHOXVaVzFoY0hCcGJtZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wlc1amIyUnBibWR6WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHWnZaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4d2NtVnRkV3gwYVhCc2FXVmtYMkZzY0doaFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1JwZEdobGNtbHVaMTltY21GbmJXVnVkRDRLZldBc0lFNXRJRDBnWUNOa1pXWnBibVVnVkU5UFRncDJZWEo1YVc1bklIWmxZek1nZGxacFpYZFFiM05wZEdsdmJqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThkWFl5WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTI5c2IzSmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3hmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z3WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTkyWlhKMFpYZytDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeDFkbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4ZFhZeVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiMnh2Y2w5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVZbUZ6WlY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR1ZtWVhWc2RHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pkbFpwWlhkUWIzTnBkR2x2YmlBOUlDMGdiWFpRYjNOcGRHbHZiaTU0ZVhvN0Nna2phVzVqYkhWa1pTQThkMjl5YkdSd2IzTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wm05blgzWmxjblJsZUQ0S2ZXQXNJRUp0SUQwZ1lDTmtaV1pwYm1VZ1ZFOVBUZ3AxYm1sbWIzSnRJSFpsWXpNZ1pHbG1ablZ6WlRzS2RXNXBabTl5YlNCMlpXTXpJR1Z0YVhOemFYWmxPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeHdZV05yYVc1blBnb2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhWMk1sOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGIyMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiR2xuYUhSdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnRhWE56YVhabGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeG5jbUZrYVdWdWRHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhpYzJSbWN6NEtJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXdZWEp6WDJKbFoybHVQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEhOZmRHOXZibDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGlkVzF3YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ1pHbG1ablZ6WlN3Z2IzQmhZMmwwZVNBcE93b0pVbVZtYkdWamRHVmtUR2xuYUhRZ2NtVm1iR1ZqZEdWa1RHbG5hSFFnUFNCU1pXWnNaV04wWldSTWFXZG9kQ2dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBMQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa2dLVHNLQ1habFl6TWdkRzkwWVd4RmJXbHpjMmwyWlZKaFpHbGhibU5sSUQwZ1pXMXBjM05wZG1VN0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoZEdWemRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZZbVZuYVc0K0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gyWnlZV2R0Wlc1MFgyMWhjSE0rQ2dramFXNWpiSFZrWlNBOFpXMXBjM05wZG1WdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYM1J2YjI1ZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgySmxaMmx1UGdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYzE5bWNtRm5iV1Z1ZEY5dFlYQnpQZ29KSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTltY21GbmJXVnVkRjlsYm1RK0Nna2phVzVqYkhWa1pTQThZVzl0WVhCZlpuSmhaMjFsYm5RK0NnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0J5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSRWFXWm1kWE5sSUNzZ2NtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3NnZEc5MFlXeEZiV2x6YzJsMlpWSmhaR2xoYm1ObE93b0pJMmx1WTJ4MVpHVWdQRzkxZEhCMWRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpHbDBhR1Z5YVc1blgyWnlZV2R0Wlc1MFBncDlZQ3dnZW0wZ1BTQmdkVzVwWm05eWJTQm1iRzloZENCemFYcGxPd3AxYm1sbWIzSnRJR1pzYjJGMElITmpZV3hsT3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOFkyOXNiM0pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOFkyOXNiM0pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGNISnZhbVZqZEY5MlpYSjBaWGcrQ2dsbmJGOVFiMmx1ZEZOcGVtVWdQU0J6YVhwbE93b0pJMmxtWkdWbUlGVlRSVjlUU1ZwRlFWUlVSVTVWUVZSSlQwNEtDUWxpYjI5c0lHbHpVR1Z5YzNCbFkzUnBkbVVnUFNCcGMxQmxjbk53WldOMGFYWmxUV0YwY21sNEtDQndjbTlxWldOMGFXOXVUV0YwY21sNElDazdDZ2tKYVdZZ0tDQnBjMUJsY25Od1pXTjBhWFpsSUNrZ1oyeGZVRzlwYm5SVGFYcGxJQ285SUNnZ2MyTmhiR1VnTHlBdElHMTJVRzl6YVhScGIyNHVlaUFwT3dvSkkyVnVaR2xtQ2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThkMjl5YkdSd2IzTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5MlpYSjBaWGcrQ24xZ0xDQlZiU0E5SUdCMWJtbG1iM0p0SUhabFl6TWdaR2xtWm5WelpUc0tkVzVwWm05eWJTQm1iRzloZENCdmNHRmphWFI1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOFkyOXNiM0pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQRzFoY0Y5d1lYSjBhV05zWlY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSFpsWXpNb0lEQXVNQ0FwT3dvSmRtVmpOQ0JrYVdabWRYTmxRMjlzYjNJZ1BTQjJaV00wS0NCa2FXWm1kWE5sTENCdmNHRmphWFI1SUNrN0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJXRndYM0JoY25ScFkyeGxYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NXOTFkR2R2YVc1blRHbG5hSFFnUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpT3dvSkkybHVZMngxWkdVZ1BHOTFkSEIxZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIQnlaVzExYkhScGNHeHBaV1JmWVd4d2FHRmZabkpoWjIxbGJuUStDbjFnTENCUGJTQTlJR0FqYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR0psWjJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm1KaGMyVmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdSbFptRjFiSFJ1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhkdmNteGtjRzl6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDbjFnTENCSWJTQTlJR0IxYm1sbWIzSnRJSFpsWXpNZ1kyOXNiM0k3Q25WdWFXWnZjbTBnWm14dllYUWdiM0JoWTJsMGVUc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSEJoWTJ0cGJtYytDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdKelpHWnpQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnpYM0JoY25OZlltVm5hVzQrQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoYzJ0ZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0paMnhmUm5KaFowTnZiRzl5SUQwZ2RtVmpOQ2dnWTI5c2IzSXNJRzl3WVdOcGRIa2dLaUFvSURFdU1DQXRJR2RsZEZOb1lXUnZkMDFoYzJzb0tTQXBJQ2s3Q2dramFXNWpiSFZrWlNBOGRHOXVaVzFoY0hCcGJtZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wlc1amIyUnBibWR6WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHWnZaMTltY21GbmJXVnVkRDRLZldBc0lHdHRJRDBnWUhWdWFXWnZjbTBnWm14dllYUWdjbTkwWVhScGIyNDdDblZ1YVdadmNtMGdkbVZqTWlCalpXNTBaWEk3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4ZFhaZmRtVnlkR1Y0UGdvSmRtVmpOQ0J0ZGxCdmMybDBhVzl1SUQwZ2JXOWtaV3hXYVdWM1RXRjBjbWw0SUNvZ2RtVmpOQ2dnTUM0d0xDQXdMakFzSURBdU1Dd2dNUzR3SUNrN0NnbDJaV015SUhOallXeGxPd29KYzJOaGJHVXVlQ0E5SUd4bGJtZDBhQ2dnZG1Wak15Z2diVzlrWld4TllYUnlhWGhiSURBZ1hTNTRMQ0J0YjJSbGJFMWhkSEpwZUZzZ01DQmRMbmtzSUcxdlpHVnNUV0YwY21sNFd5QXdJRjB1ZWlBcElDazdDZ2x6WTJGc1pTNTVJRDBnYkdWdVozUm9LQ0IyWldNektDQnRiMlJsYkUxaGRISnBlRnNnTVNCZExuZ3NJRzF2WkdWc1RXRjBjbWw0V3lBeElGMHVlU3dnYlc5a1pXeE5ZWFJ5YVhoYklERWdYUzU2SUNrZ0tUc0tDU05wWm01a1pXWWdWVk5GWDFOSldrVkJWRlJGVGxWQlZFbFBUZ29KQ1dKdmIyd2dhWE5RWlhKemNHVmpkR2wyWlNBOUlHbHpVR1Z5YzNCbFkzUnBkbVZOWVhSeWFYZ29JSEJ5YjJwbFkzUnBiMjVOWVhSeWFYZ2dLVHNLQ1FscFppQW9JR2x6VUdWeWMzQmxZM1JwZG1VZ0tTQnpZMkZzWlNBcVBTQXRJRzEyVUc5emFYUnBiMjR1ZWpzS0NTTmxibVJwWmdvSmRtVmpNaUJoYkdsbmJtVmtVRzl6YVhScGIyNGdQU0FvSUhCdmMybDBhVzl1TG5oNUlDMGdLQ0JqWlc1MFpYSWdMU0IyWldNeUtDQXdMalVnS1NBcElDa2dLaUJ6WTJGc1pUc0tDWFpsWXpJZ2NtOTBZWFJsWkZCdmMybDBhVzl1T3dvSmNtOTBZWFJsWkZCdmMybDBhVzl1TG5nZ1BTQmpiM01vSUhKdmRHRjBhVzl1SUNrZ0tpQmhiR2xuYm1Wa1VHOXphWFJwYjI0dWVDQXRJSE5wYmlnZ2NtOTBZWFJwYjI0Z0tTQXFJR0ZzYVdkdVpXUlFiM05wZEdsdmJpNTVPd29KY205MFlYUmxaRkJ2YzJsMGFXOXVMbmtnUFNCemFXNG9JSEp2ZEdGMGFXOXVJQ2tnS2lCaGJHbG5ibVZrVUc5emFYUnBiMjR1ZUNBcklHTnZjeWdnY205MFlYUnBiMjRnS1NBcUlHRnNhV2R1WldSUWIzTnBkR2x2Ymk1NU93b0piWFpRYjNOcGRHbHZiaTU0ZVNBclBTQnliM1JoZEdWa1VHOXphWFJwYjI0N0NnbG5iRjlRYjNOcGRHbHZiaUE5SUhCeWIycGxZM1JwYjI1TllYUnlhWGdnS2lCdGRsQnZjMmwwYVc5dU93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdadloxOTJaWEowWlhnK0NuMWdMQ0JIYlNBOUlHQjFibWxtYjNKdElIWmxZek1nWkdsbVpuVnpaVHNLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZlpuSmhaMjFsYm5RK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mWm5KaFoyMWxiblErQ2dsMlpXTXpJRzkxZEdkdmFXNW5UR2xuYUhRZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1habFl6UWdaR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnWkdsbVpuVnpaU3dnYjNCaFkybDBlU0FwT3dvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZlpuSmhaMjFsYm5RK0NnbHZkWFJuYjJsdVoweHBaMmgwSUQwZ1pHbG1ablZ6WlVOdmJHOXlMbkpuWWpzS0NTTnBibU5zZFdSbElEeHZkWFJ3ZFhSZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThkRzl1WlcxaGNIQnBibWRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpXNWpiMlJwYm1kelgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5bWNtRm5iV1Z1ZEQ0S2ZXQXNJRVpsSUQwZ2V3b2dJQ0FnWVd4d2FHRnRZWEJmWm5KaFoyMWxiblE2SUhobUxBb2dJQ0FnWVd4d2FHRnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dlV1lzQ2lBZ0lDQmhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUTZJSFptTEFvZ0lDQWdZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RNklGOW1MQW9nSUNBZ1lXOXRZWEJmWm5KaFoyMWxiblE2SUUxbUxBb2dJQ0FnWVc5dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1ltWXNDaUFnSUNCaVpXZHBibDkyWlhKMFpYZzZJSGRtTEFvZ0lDQWdZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRPaUJUWml3S0lDQWdJR0p6Wkdaek9pQlVaaXdLSUNBZ0lHSjFiWEJ0WVhCZmNHRnljMTltY21GbmJXVnVkRG9nUldZc0NpQWdJQ0JqYkdsd2NHbHVaMTl3YkdGdVpYTmZabkpoWjIxbGJuUTZJRUZtTEFvZ0lDQWdZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mWm5KaFoyMWxiblE2SUVObUxBb2dJQ0FnWTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0T2lCTVppd0tJQ0FnSUdOc2FYQndhVzVuWDNCc1lXNWxjMTkyWlhKMFpYZzZJRkptTEFvZ0lDQWdZMjlzYjNKZlpuSmhaMjFsYm5RNklGQm1MQW9nSUNBZ1kyOXNiM0pmY0dGeWMxOW1jbUZuYldWdWREb2dTV1lzQ2lBZ0lDQmpiMnh2Y2w5d1lYSnpYM1psY25SbGVEb2dSR1lzQ2lBZ0lDQmpiMnh2Y2w5MlpYSjBaWGc2SUVabUxBb2dJQ0FnWTI5dGJXOXVPaUJPWml3S0lDQWdJR04xWW1WZmRYWmZjbVZtYkdWamRHbHZibDltY21GbmJXVnVkRG9nUW1Zc0NpQWdJQ0JrWldaaGRXeDBibTl5YldGc1gzWmxjblJsZURvZ2VtWXNDaUFnSUNCa2FYTndiR0ZqWlcxbGJuUnRZWEJmY0dGeWMxOTJaWEowWlhnNklGVm1MQW9nSUNBZ1pHbHpjR3hoWTJWdFpXNTBiV0Z3WDNabGNuUmxlRG9nVDJZc0NpQWdJQ0JsYldsemMybDJaVzFoY0Y5bWNtRm5iV1Z1ZERvZ1NHWXNDaUFnSUNCbGJXbHpjMmwyWlcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCclppd0tJQ0FnSUdWdVkyOWthVzVuYzE5bWNtRm5iV1Z1ZERvZ1IyWXNDaUFnSUNCbGJtTnZaR2x1WjNOZmNHRnljMTltY21GbmJXVnVkRG9nVm1Zc0NpQWdJQ0JsYm5adFlYQmZabkpoWjIxbGJuUTZJRmRtTEFvZ0lDQWdaVzUyYldGd1gyTnZiVzF2Ymw5d1lYSnpYMlp5WVdkdFpXNTBPaUJ4Wml3S0lDQWdJR1Z1ZG0xaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCWVppd0tJQ0FnSUdWdWRtMWhjRjl3WVhKelgzWmxjblJsZURvZ1NtWXNDaUFnSUNCbGJuWnRZWEJmY0doNWMybGpZV3hmY0dGeWMxOW1jbUZuYldWdWREb2djbkFzQ2lBZ0lDQmxiblp0WVhCZmRtVnlkR1Y0T2lCWlppd0tJQ0FnSUdadloxOTJaWEowWlhnNklGcG1MQW9nSUNBZ1ptOW5YM0JoY25OZmRtVnlkR1Y0T2lBa1ppd0tJQ0FnSUdadloxOW1jbUZuYldWdWREb2dhbVlzQ2lBZ0lDQm1iMmRmY0dGeWMxOW1jbUZuYldWdWREb2dVV1lzQ2lBZ0lDQm5jbUZrYVdWdWRHMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQkxaaXdLSUNBZ0lHeHBaMmgwYldGd1gyWnlZV2R0Wlc1ME9pQmxjQ3dLSUNBZ0lHeHBaMmgwYldGd1gzQmhjbk5mWm5KaFoyMWxiblE2SUhSd0xBb2dJQ0FnYkdsbmFIUnpYMnhoYldKbGNuUmZkbVZ5ZEdWNE9pQnVjQ3dLSUNBZ0lHeHBaMmgwYzE5d1lYSnpYMkpsWjJsdU9pQnBjQ3dLSUNBZ0lHeHBaMmgwYzE5MGIyOXVYMlp5WVdkdFpXNTBPaUJ6Y0N3S0lDQWdJR3hwWjJoMGMxOTBiMjl1WDNCaGNuTmZabkpoWjIxbGJuUTZJRzl3TEFvZ0lDQWdiR2xuYUhSelgzQm9iMjVuWDJaeVlXZHRaVzUwT2lCaGNDd0tJQ0FnSUd4cFoyaDBjMTl3YUc5dVoxOXdZWEp6WDJaeVlXZHRaVzUwT2lCc2NDd0tJQ0FnSUd4cFoyaDBjMTl3YUhsemFXTmhiRjltY21GbmJXVnVkRG9nWTNBc0NpQWdJQ0JzYVdkb2RITmZjR2g1YzJsallXeGZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ2FIQXNDaUFnSUNCc2FXZG9kSE5mWm5KaFoyMWxiblJmWW1WbmFXNDZJSFZ3TEFvZ0lDQWdiR2xuYUhSelgyWnlZV2R0Wlc1MFgyMWhjSE02SUdSd0xBb2dJQ0FnYkdsbmFIUnpYMlp5WVdkdFpXNTBYMlZ1WkRvZ1puQXNDaUFnSUNCc2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWREb2djSEFzQ2lBZ0lDQnNiMmRrWlhCMGFHSjFabDl3WVhKelgyWnlZV2R0Wlc1ME9pQnRjQ3dLSUNBZ0lHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0T2lCbmNDd0tJQ0FnSUd4dloyUmxjSFJvWW5WbVgzWmxjblJsZURvZ2VIQXNDaUFnSUNCdFlYQmZabkpoWjIxbGJuUTZJSGx3TEFvZ0lDQWdiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUTZJSFp3TEFvZ0lDQWdiV0Z3WDNCaGNuUnBZMnhsWDJaeVlXZHRaVzUwT2lCZmNDd0tJQ0FnSUcxaGNGOXdZWEowYVdOc1pWOXdZWEp6WDJaeVlXZHRaVzUwT2lCTmNDd0tJQ0FnSUcxbGRHRnNibVZ6YzIxaGNGOW1jbUZuYldWdWREb2dZbkFzQ2lBZ0lDQnRaWFJoYkc1bGMzTnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dkM0FzQ2lBZ0lDQnRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZzZJRk53TEFvZ0lDQWdiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnNklGUndMQW9nSUNBZ2JXOXljR2gwWVhKblpYUmZkbVZ5ZEdWNE9pQkZjQ3dLSUNBZ0lHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiam9nUVhBc0NpQWdJQ0J1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3pvZ1EzQXNDaUFnSUNCdWIzSnRZV3hmY0dGeWMxOW1jbUZuYldWdWREb2dUSEFzQ2lBZ0lDQnViM0p0WVd4ZmNHRnljMTkyWlhKMFpYZzZJRkp3TEFvZ0lDQWdibTl5YldGc1gzWmxjblJsZURvZ1VIQXNDaUFnSUNCdWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRG9nU1hBc0NpQWdJQ0JqYkdWaGNtTnZZWFJmYm05eWJXRnNYMlp5WVdkdFpXNTBYMkpsWjJsdU9pQkVjQ3dLSUNBZ0lHTnNaV0Z5WTI5aGRGOXViM0p0WVd4ZlpuSmhaMjFsYm5SZmJXRndjem9nUm5Bc0NpQWdJQ0JqYkdWaGNtTnZZWFJmY0dGeWMxOW1jbUZuYldWdWREb2dUbkFzQ2lBZ0lDQnZkWFJ3ZFhSZlpuSmhaMjFsYm5RNklFSndMQW9nSUNBZ2NHRmphMmx1WnpvZ2VuQXNDaUFnSUNCd2NtVnRkV3gwYVhCc2FXVmtYMkZzY0doaFgyWnlZV2R0Wlc1ME9pQlZjQ3dLSUNBZ0lIQnliMnBsWTNSZmRtVnlkR1Y0T2lCUGNDd0tJQ0FnSUdScGRHaGxjbWx1WjE5bWNtRm5iV1Z1ZERvZ1NIQXNDaUFnSUNCa2FYUm9aWEpwYm1kZmNHRnljMTltY21GbmJXVnVkRG9nYTNBc0NpQWdJQ0J5YjNWbmFHNWxjM050WVhCZlpuSmhaMjFsYm5RNklFZHdMQW9nSUNBZ2NtOTFaMmh1WlhOemJXRndYM0JoY25OZlpuSmhaMjFsYm5RNklGWndMQW9nSUNBZ2MyaGhaRzkzYldGd1gzQmhjbk5mWm5KaFoyMWxiblE2SUZkd0xBb2dJQ0FnYzJoaFpHOTNiV0Z3WDNCaGNuTmZkbVZ5ZEdWNE9pQnhjQ3dLSUNBZ0lITm9ZV1J2ZDIxaGNGOTJaWEowWlhnNklGaHdMQW9nSUNBZ2MyaGhaRzkzYldGemExOXdZWEp6WDJaeVlXZHRaVzUwT2lCS2NDd0tJQ0FnSUhOcmFXNWlZWE5sWDNabGNuUmxlRG9nV1hBc0NpQWdJQ0J6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZURvZ1duQXNDaUFnSUNCemEybHVibWx1WjE5MlpYSjBaWGc2SUNSd0xBb2dJQ0FnYzJ0cGJtNXZjbTFoYkY5MlpYSjBaWGc2SUdwd0xBb2dJQ0FnYzNCbFkzVnNZWEp0WVhCZlpuSmhaMjFsYm5RNklGRndMQW9nSUNBZ2MzQmxZM1ZzWVhKdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1MzQXNDaUFnSUNCMGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWREb2daVzBzQ2lBZ0lDQjBiMjVsYldGd2NHbHVaMTl3WVhKelgyWnlZV2R0Wlc1ME9pQjBiU3dLSUNBZ0lIUnlZVzV6YldsemMybHZibDltY21GbmJXVnVkRG9nYm0wc0NpQWdJQ0IwY21GdWMyMXBjM05wYjI1ZmNHRnljMTltY21GbmJXVnVkRG9nYVcwc0NpQWdJQ0IxZGw5d1lYSnpYMlp5WVdkdFpXNTBPaUJ5YlN3S0lDQWdJSFYyWDNCaGNuTmZkbVZ5ZEdWNE9pQnpiU3dLSUNBZ0lIVjJYM1psY25SbGVEb2diMjBzQ2lBZ0lDQjFkakpmY0dGeWMxOW1jbUZuYldWdWREb2dZVzBzQ2lBZ0lDQjFkakpmY0dGeWMxOTJaWEowWlhnNklHeHRMQW9nSUNBZ2RYWXlYM1psY25SbGVEb2dZMjBzQ2lBZ0lDQjNiM0pzWkhCdmMxOTJaWEowWlhnNklHaHRMQW9nSUNBZ1ltRmphMmR5YjNWdVpGOTJaWEowT2lCMWJTd0tJQ0FnSUdKaFkydG5jbTkxYm1SZlpuSmhaem9nWkcwc0NpQWdJQ0JqZFdKbFgzWmxjblE2SUdadExBb2dJQ0FnWTNWaVpWOW1jbUZuT2lCd2JTd0tJQ0FnSUdSbGNIUm9YM1psY25RNklHMXRMQW9nSUNBZ1pHVndkR2hmWm5KaFp6b2daMjBzQ2lBZ0lDQmthWE4wWVc1alpWSkhRa0ZmZG1WeWREb2dlRzBzQ2lBZ0lDQmthWE4wWVc1alpWSkhRa0ZmWm5KaFp6b2dlVzBzQ2lBZ0lDQmxjWFZwY21WamRGOTJaWEowT2lCMmJTd0tJQ0FnSUdWeGRXbHlaV04wWDJaeVlXYzZJRjl0TEFvZ0lDQWdiR2x1WldSaGMyaGxaRjkyWlhKME9pQk5iU3dLSUNBZ0lHeHBibVZrWVhOb1pXUmZabkpoWnpvZ1ltMHNDaUFnSUNCdFpYTm9ZbUZ6YVdOZmRtVnlkRG9nZDIwc0NpQWdJQ0J0WlhOb1ltRnphV05mWm5KaFp6b2dVMjBzQ2lBZ0lDQnRaWE5vYkdGdFltVnlkRjkyWlhKME9pQlViU3dLSUNBZ0lHMWxjMmhzWVcxaVpYSjBYMlp5WVdjNklFVnRMQW9nSUNBZ2JXVnphRzFoZEdOaGNGOTJaWEowT2lCQmJTd0tJQ0FnSUcxbGMyaHRZWFJqWVhCZlpuSmhaem9nUTIwc0NpQWdJQ0J0WlhOb2JtOXliV0ZzWDNabGNuUTZJRXh0TEFvZ0lDQWdiV1Z6YUc1dmNtMWhiRjltY21Gbk9pQlNiU3dLSUNBZ0lHMWxjMmh3YUc5dVoxOTJaWEowT2lCUWJTd0tJQ0FnSUcxbGMyaHdhRzl1WjE5bWNtRm5PaUJKYlN3S0lDQWdJRzFsYzJod2FIbHphV05oYkY5MlpYSjBPaUJFYlN3S0lDQWdJRzFsYzJod2FIbHphV05oYkY5bWNtRm5PaUJHYlN3S0lDQWdJRzFsYzJoMGIyOXVYM1psY25RNklFNXRMQW9nSUNBZ2JXVnphSFJ2YjI1ZlpuSmhaem9nUW0wc0NpQWdJQ0J3YjJsdWRITmZkbVZ5ZERvZ2VtMHNDaUFnSUNCd2IybHVkSE5mWm5KaFp6b2dWVzBzQ2lBZ0lDQnphR0ZrYjNkZmRtVnlkRG9nVDIwc0NpQWdJQ0J6YUdGa2IzZGZabkpoWnpvZ1NHMHNDaUFnSUNCemNISnBkR1ZmZG1WeWREb2dhMjBzQ2lBZ0lDQnpjSEpwZEdWZlpuSmhaem9nUjIwS2ZTd2dhV1VnUFNCN0NpQWdJQ0JqYjIxdGIyNDZJSHNLSUNBZ0lDQWdJQ0JrYVdabWRYTmxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dZV1VvTVRZM056Y3lNVFVwQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCdmNHRmphWFI1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J0WVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIVjJWSEpoYm5ObWIzSnRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2diSFFLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhWMk1sUnlZVzV6Wm05eWJUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHeDBDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JoYkhCb1lVMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWVd4d2FHRlVaWE4wT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOd1pXTjFiR0Z5YldGd09pQjdDaUFnSUNBZ0lDQWdjM0JsWTNWc1lYSk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1pXNTJiV0Z3T2lCN0NpQWdJQ0FnSUNBZ1pXNTJUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCbWJHbHdSVzUyVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF0TVFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2NtVm1iR1ZqZEdsMmFYUjVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnBiM0k2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERXVOUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnY21WbWNtRmpkR2x2YmxKaGRHbHZPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBdU9UZ0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWVc5dFlYQTZJSHNLSUNBZ0lDQWdJQ0JoYjAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdZVzlOWVhCSmJuUmxibk5wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2JHbG5hSFJ0WVhBNklIc0tJQ0FnSUNBZ0lDQnNhV2RvZEUxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdiR2xuYUhSTllYQkpiblJsYm5OcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdaVzFwYzNOcGRtVnRZWEE2SUhzS0lDQWdJQ0FnSUNCbGJXbHpjMmwyWlUxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JpZFcxd2JXRndPaUI3Q2lBZ0lDQWdJQ0FnWW5WdGNFMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWW5WdGNGTmpZV3hsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUc1dmNtMWhiRzFoY0RvZ2V3b2dJQ0FnSUNBZ0lHNXZjbTFoYkUxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdibTl5YldGc1UyTmhiR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJZS0RFc0lERXBDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdScGMzQnNZV05sYldWdWRHMWhjRG9nZXdvZ0lDQWdJQ0FnSUdScGMzQnNZV05sYldWdWRFMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1JwYzNCc1lXTmxiV1Z1ZEVKcFlYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjbTkxWjJodVpYTnpiV0Z3T2lCN0NpQWdJQ0FnSUNBZ2NtOTFaMmh1WlhOelRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUcxbGRHRnNibVZ6YzIxaGNEb2dld29nSUNBZ0lDQWdJRzFsZEdGc2JtVnpjMDFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQm5jbUZrYVdWdWRHMWhjRG9nZXdvZ0lDQWdJQ0FnSUdkeVlXUnBaVzUwVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJR1p2WnpvZ2V3b2dJQ0FnSUNBZ0lHWnZaMFJsYm5OcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURJMVpTMDFDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JtYjJkT1pXRnlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQm1iMmRHWVhJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREpsTXdvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1ptOW5RMjlzYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3hOamMzTnpJeE5Ta0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYkdsbmFIUnpPaUI3Q2lBZ0lDQWdJQ0FnWVcxaWFXVnVkRXhwWjJoMFEyOXNiM0k2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JzYVdkb2RGQnliMkpsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1WVd4TWFXZG9kSE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNDZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJSHQ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNkek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRHbGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRbWxoY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQxSmhaR2wxY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkTllYQlRhWHBsT2lCN2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzNCdmRFeHBaMmgwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dXMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnliM0JsY25ScFpYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE4wWVc1alpUb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1bFEyOXpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCbGJuVnRZbkpoUTI5ek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWTJGNU9pQjdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpjRzkwVEdsbmFIUlRhR0ZrYjNkek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRHbGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRbWxoY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQxSmhaR2wxY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkTllYQlRhWHBsT2lCN2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCemNHOTBVMmhoWkc5M1RXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjM0J2ZEZOb1lXUnZkMDFoZEhKcGVEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIQnZhVzUwVEdsbmFIUnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNHVnlkR2xsY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZqWVhrNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJSHQ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzZHpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNHVnlkR2xsY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzUW1saGN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE9iM0p0WVd4Q2FXRnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMUpoWkdsMWN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE5ZWEJUYVhwbE9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwTmhiV1Z5WVU1bFlYSTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRMkZ0WlhKaFJtRnlPaUI3ZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J3YjJsdWRGTm9ZV1J2ZDAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIQnZhVzUwVTJoaFpHOTNUV0YwY21sNE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2FHVnRhWE53YUdWeVpVeHBaMmgwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dXMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnliM0JsY25ScFpYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiam9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemEzbERiMnh2Y2pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm5jbTkxYm1SRGIyeHZjam9nZTMwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnY21WamRFRnlaV0ZNYVdkb2RITTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZExBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y205d1pYSjBhV1Z6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklIdDlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHeDBZMTh4T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCc2RHTmZNam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCd2IybHVkSE02SUhzS0lDQWdJQ0FnSUNCa2FXWm1kWE5sT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnWVdVb01UWTNOemN5TVRVcENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCemFYcGxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpZMkZzWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYldGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmhiSEJvWVUxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdZV3h3YUdGVVpYTjBPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQjFkbFJ5WVc1elptOXliVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJR3gwQ2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITndjbWwwWlRvZ2V3b2dJQ0FnSUNBZ0lHUnBabVoxYzJVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3hOamMzTnpJeE5Ta0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJRzl3WVdOcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHTmxiblJsY2pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUZnb0xqVXNJQzQxS1FvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2NtOTBZWFJwYjI0NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUcxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdZV3h3YUdGTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR0ZzY0doaFZHVnpkRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdkWFpVY21GdWMyWnZjbTA2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJzZEFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlN3Z2NYUWdQU0I3Q2lBZ0lDQmlZWE5wWXpvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWMzQmxZM1ZzWVhKdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtVnVkbTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WVc5dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExteHBaMmgwYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bWIyY0tJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklFWmxMbTFsYzJoaVlYTnBZMTkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNXRaWE5vWW1GemFXTmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lHeGhiV0psY25RNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dlWFFvV3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVqYjIxdGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExuTndaV04xYkdGeWJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWxiblp0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1GdmJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXNhV2RvZEcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpXMXBjM05wZG1WdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtWnZaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXViR2xuYUhSekxBb2dJQ0FnSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYldsemMybDJaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dZV1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1YldWemFHeGhiV0psY25SZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YldWemFHeGhiV0psY25SZlpuSmhad29nSUNBZ2ZTd0tJQ0FnSUhCb2IyNW5PaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzV6Y0dWamRXeGhjbTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wlc1MmJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWhiMjFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YkdsbmFIUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVZ0YVhOemFYWmxiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVpZFcxd2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXViM0p0WVd4dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtUnBjM0JzWVdObGJXVnVkRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wm05bkxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1c2FXZG9kSE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnRhWE56YVhabE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3dLUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE53WldOMWJHRnlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d4TVRFNE5EZ3hLUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vYVc1cGJtVnpjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBek1Bb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWFNrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJHWlM1dFpYTm9jR2h2Ym1kZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YldWemFIQm9iMjVuWDJaeVlXY0tJQ0FnSUgwc0NpQWdJQ0J6ZEdGdVpHRnlaRG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCNWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtTnZiVzF2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wlc1MmJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWhiMjFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YkdsbmFIUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVZ0YVhOemFYWmxiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVpZFcxd2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXViM0p0WVd4dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtUnBjM0JzWVdObGJXVnVkRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Y205MVoyaHVaWE56YldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1dFpYUmhiRzVsYzNOdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtWnZaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXViR2xuYUhSekxBb2dJQ0FnSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYldsemMybDJaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dZV1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeWIzVm5hRzVsYzNNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGc2JtVnpjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNTJUV0Z3U1c1MFpXNXphWFI1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdWJXVnphSEJvZVhOcFkyRnNYM1psY25Rc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUVabExtMWxjMmh3YUhsemFXTmhiRjltY21GbkNpQWdJQ0I5TEFvZ0lDQWdkRzl2YmpvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVlXOXRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbXhwWjJoMGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWxiV2x6YzJsMlpXMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZblZ0Y0cxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJtOXliV0ZzYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1a2FYTndiR0ZqWlcxbGJuUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbWR5WVdScFpXNTBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVtYjJjc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG14cFoyaDBjeXdLSUNBZ0lDQWdJQ0FnSUNBZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXMXBjM05wZG1VNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUdGbEtEQXBDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExtMWxjMmgwYjI5dVgzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJRVpsTG0xbGMyaDBiMjl1WDJaeVlXY0tJQ0FnSUgwc0NpQWdJQ0J0WVhSallYQTZJSHNLSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nZVhRb1d3b2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1amIyMXRiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbUoxYlhCdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtNXZjbTFoYkcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpHbHpjR3hoWTJWdFpXNTBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVtYjJjc0NpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoZEdOaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRVpsTG0xbGMyaHRZWFJqWVhCZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YldWemFHMWhkR05oY0Y5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnY0c5cGJuUnpPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWNHOXBiblJ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVtYjJjS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExuQnZhVzUwYzE5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzV3YjJsdWRITmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lHUmhjMmhsWkRvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVptOW5MQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelkyRnNaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRnphRk5wZW1VNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ2ZEdGc1UybDZaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRVpsTG14cGJtVmtZWE5vWldSZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YkdsdVpXUmhjMmhsWkY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnWkdWd2RHZzZJSHNLSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nZVhRb1d3b2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1amIyMXRiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVJwYzNCc1lXTmxiV1Z1ZEcxaGNBb2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXVaR1Z3ZEdoZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1WkdWd2RHaGZabkpoWndvZ0lDQWdmU3dLSUNBZ0lHNXZjbTFoYkRvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVluVnRjRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Ym05eWJXRnNiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVrYVhOd2JHRmpaVzFsYm5SdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5d1lXTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWFNrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJHWlM1dFpYTm9ibTl5YldGc1gzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJRVpsTG0xbGMyaHViM0p0WVd4ZlpuSmhad29nSUNBZ2ZTd0tJQ0FnSUhOd2NtbDBaVG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCNWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsbExuTndjbWwwWlN3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wm05bkNpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNXpjSEpwZEdWZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YzNCeWFYUmxYMlp5WVdjS0lDQWdJSDBzQ2lBZ0lDQmlZV05yWjNKdmRXNWtPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkWFpVY21GdWMyWnZjbTA2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ2JIUUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdkREpFT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRVpsTG1KaFkydG5jbTkxYm1SZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1WW1GamEyZHliM1Z1WkY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnWTNWaVpUb2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI1ZENoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1WdWRtMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExtTjFZbVZmZG1WeWRDd0tJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1JtVXVZM1ZpWlY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnWlhGMWFYSmxZM1E2SUhzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwUlhGMWFYSmxZM1E2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1WlhGMWFYSmxZM1JmZG1WeWRDd0tJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1JtVXVaWEYxYVhKbFkzUmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lHUnBjM1JoYm1ObFVrZENRVG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCNWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtTnZiVzF2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WkdsemNHeGhZMlZ0Wlc1MGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpXWmxjbVZ1WTJWUWIzTnBkR2x2YmpvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnVFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1bFlYSkVhWE4wWVc1alpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm1GeVJHbHpkR0Z1WTJVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNV1V6Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklFWmxMbVJwYzNSaGJtTmxVa2RDUVY5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzVrYVhOMFlXNWpaVkpIUWtGZlpuSmhad29nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkem9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCNWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsbExteHBaMmgwY3l3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wm05bkxBb2dJQ0FnSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1lXVW9NQ2tLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Y0dGamFYUjVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1YzJoaFpHOTNYM1psY25Rc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUVabExuTm9ZV1J2ZDE5bWNtRm5DaUFnSUNCOUNuMDdDbkYwTG5Cb2VYTnBZMkZzSUQwZ2V3b2dJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQnhkQzV6ZEdGdVpHRnlaQzUxYm1sbWIzSnRjeXdLSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z5WTI5aGREb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBUbTl5YldGc1UyTmhiR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1dDZ3hMQ0F4S1FvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCamJHVmhjbU52WVhST2IzSnRZV3hOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWldWdU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR1ZsYmtOdmJHOXlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUdGbEtEQXBDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWldWdVEyOXNiM0pOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWldWdVVtOTFaMmh1WlhOek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTnRhWE56YVc5dU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzIxcGMzTnBiMjVOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emJXbHpjMmx2YmxOaGJYQnNaWEpUYVhwbE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJRmdLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTnRhWE56YVc5dVUyRnRjR3hsY2sxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocFkydHVaWE56T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTUFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHbGphMjVsYzNOTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdGMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dZV1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCemNHVmpkV3hoY2tOdmJHOXlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUdGbEtERXNJREVzSURFcENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITndaV04xYkdGeVEyOXNiM0pOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0JkS1N3S0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXViV1Z6YUhCb2VYTnBZMkZzWDNabGNuUXNDaUFnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWJXVnphSEJvZVhOcFkyRnNYMlp5WVdjS2ZUc0tablZ1WTNScGIyNGdWbTBvY3l3Z1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ2JHVjBJSElnUFNCdVpYY2dZV1VvTUNrc0lHOGdQU0F3TENCaExDQnNMQ0JqSUQwZ2JuVnNiQ3dnYUNBOUlEQXNJSFVnUFNCdWRXeHNPd29nSUNBZ1puVnVZM1JwYjI0Z1pDaHRMQ0I0S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFlnUFNBaE1Td2daeUE5SUhndWFYTlRZMlZ1WlNBOVBUMGdJVEFnUHlCNExtSmhZMnRuY205MWJtUWdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHY2dKaVlnWnk1cGMxUmxlSFIxY21VZ0ppWWdLR2NnUFNCbExtZGxkQ2huS1NrN0NpQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCekxuaHlMQ0JmSUQwZ2NDNW5aWFJUWlhOemFXOXVJQ1ltSUhBdVoyVjBVMlZ6YzJsdmJpZ3BPd29nSUNBZ0lDQWdJRjhnSmlZZ1h5NWxiblpwY205dWJXVnVkRUpzWlc1a1RXOWtaU0E5UFQwZ0ltRmtaR2wwYVhabElpQW1KaUFvWnlBOUlHNTFiR3dwTENCbklEMDlQU0J1ZFd4c0lEOGdaaWh5TENCdktTQTZJR2NnSmlZZ1p5NXBjME52Ykc5eUlDWW1JQ2htS0djc0lERXBMQ0IySUQwZ0lUQXBMQ0FvY3k1aGRYUnZRMnhsWVhJZ2ZId2dkaWtnSmlZZ2N5NWpiR1ZoY2loekxtRjFkRzlEYkdWaGNrTnZiRzl5TENCekxtRjFkRzlEYkdWaGNrUmxjSFJvTENCekxtRjFkRzlEYkdWaGNsTjBaVzVqYVd3cExDQm5JQ1ltSUNobkxtbHpRM1ZpWlZSbGVIUjFjbVVnZkh3Z1p5NXRZWEJ3YVc1bklEMDlQU0JRY2lrZ1B5QW9iQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaHNJRDBnYm1WM0lITjBLRzVsZHlCM2JpZ3hMQ0F4TENBeEtTd2dibVYzSUhOdUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dJa0poWTJ0bmNtOTFibVJEZFdKbFRXRjBaWEpwWVd3aUxBb2dJQ0FnSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nVW1rb2NYUXVZM1ZpWlM1MWJtbG1iM0p0Y3lrc0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ2NYUXVZM1ZpWlM1MlpYSjBaWGhUYUdGa1pYSXNDaUFnSUNBZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJ4ZEM1amRXSmxMbVp5WVdkdFpXNTBVMmhoWkdWeUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6YVdSbE9pQnBkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hVWlhOME9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hYY21sMFpUb2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnZaem9nSVRFS0lDQWdJQ0FnSUNCOUtTa3NJR3d1WjJWdmJXVjBjbmt1WkdWc1pYUmxRWFIwY21saWRYUmxLQ0p1YjNKdFlXd2lLU3dnYkM1blpXOXRaWFJ5ZVM1a1pXeGxkR1ZCZEhSeWFXSjFkR1VvSW5WMklpa3NJR3d1YjI1Q1pXWnZjbVZTWlc1a1pYSWdQU0JtZFc1amRHbHZiaWg1TENCaUxDQkJLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRWMjl5YkdRdVkyOXdlVkJ2YzJsMGFXOXVLRUV1YldGMGNtbDRWMjl5YkdRcE93b2dJQ0FnSUNBZ0lIMHNJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoc0xtMWhkR1Z5YVdGc0xDQWlaVzUyVFdGd0lpd2dld29nSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRXNXBabTl5YlhNdVpXNTJUV0Z3TG5aaGJIVmxPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTa3NJRzR1ZFhCa1lYUmxLR3dwS1N3Z2JDNXRZWFJsY21saGJDNTFibWxtYjNKdGN5NWxiblpOWVhBdWRtRnNkV1VnUFNCbkxDQnNMbTFoZEdWeWFXRnNMblZ1YVdadmNtMXpMbVpzYVhCRmJuWk5ZWEF1ZG1Gc2RXVWdQU0JuTG1selEzVmlaVlJsZUhSMWNtVWdKaVlnWnk1cGMxSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVWdQVDA5SUNFeElEOGdMVEVnT2lBeExDQW9ZeUFoUFQwZ1p5QjhmQ0JvSUNFOVBTQm5MblpsY25OcGIyNGdmSHdnZFNBaFBUMGdjeTUwYjI1bFRXRndjR2x1WnlrZ0ppWWdLR3d1YldGMFpYSnBZV3d1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnWXlBOUlHY3NJR2dnUFNCbkxuWmxjbk5wYjI0c0lIVWdQU0J6TG5SdmJtVk5ZWEJ3YVc1bktTd2diUzUxYm5Ob2FXWjBLR3dzSUd3dVoyVnZiV1YwY25rc0lHd3ViV0YwWlhKcFlXd3NJREFzSURBc0lHNTFiR3dwS1NBNklHY2dKaVlnWnk1cGMxUmxlSFIxY21VZ0ppWWdLR0VnUFQwOUlIWnZhV1FnTUNBbUppQW9ZU0E5SUc1bGR5QnpkQ2h1WlhjZ1VHa29NaXdnTWlrc0lHNWxkeUJ6YmloN0NpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDSkNZV05yWjNKdmRXNWtUV0YwWlhKcFlXd2lMQW9nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ1Vta29jWFF1WW1GamEyZHliM1Z1WkM1MWJtbG1iM0p0Y3lrc0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ2NYUXVZbUZqYTJkeWIzVnVaQzUyWlhKMFpYaFRhR0ZrWlhJc0NpQWdJQ0FnSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQnhkQzVpWVdOclozSnZkVzVrTG1aeVlXZHRaVzUwVTJoaFpHVnlMQW9nSUNBZ0lDQWdJQ0FnSUNCemFXUmxPaUJCYVN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoWGNtbDBaVG9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJR1p2WnpvZ0lURUtJQ0FnSUNBZ0lDQjlLU2tzSUdFdVoyVnZiV1YwY25rdVpHVnNaWFJsUVhSMGNtbGlkWFJsS0NKdWIzSnRZV3dpS1N3Z1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR0V1YldGMFpYSnBZV3dzSUNKdFlYQWlMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTFibWxtYjNKdGN5NTBNa1F1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUtTd2diaTUxY0dSaGRHVW9ZU2twTENCaExtMWhkR1Z5YVdGc0xuVnVhV1p2Y20xekxuUXlSQzUyWVd4MVpTQTlJR2NzSUdjdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOVBUMGdJVEFnSmlZZ1p5NTFjR1JoZEdWTllYUnlhWGdvS1N3Z1lTNXRZWFJsY21saGJDNTFibWxtYjNKdGN5NTFkbFJ5WVc1elptOXliUzUyWVd4MVpTNWpiM0I1S0djdWJXRjBjbWw0S1N3Z0tHTWdJVDA5SUdjZ2ZId2dhQ0FoUFQwZ1p5NTJaWEp6YVc5dUlIeDhJSFVnSVQwOUlITXVkRzl1WlUxaGNIQnBibWNwSUNZbUlDaGhMbTFoZEdWeWFXRnNMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJR01nUFNCbkxDQm9JRDBnWnk1MlpYSnphVzl1TENCMUlEMGdjeTUwYjI1bFRXRndjR2x1Wnlrc0lHMHVkVzV6YUdsbWRDaGhMQ0JoTG1kbGIyMWxkSEo1TENCaExtMWhkR1Z5YVdGc0xDQXdMQ0F3TENCdWRXeHNLU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCbUtHMHNJSGdwSUhzS0lDQWdJQ0FnSUNCMExtSjFabVpsY25NdVkyOXNiM0l1YzJWMFEyeGxZWElvYlM1eUxDQnRMbWNzSUcwdVlpd2dlQ3dnYVNrN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHZGxkRU5zWldGeVEyOXNiM0k2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjanNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGRFTnNaV0Z5UTI5c2IzSTZJR1oxYm1OMGFXOXVLRzBzSUhnZ1BTQXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISXVjMlYwS0cwcExDQnZJRDBnZUN3Z1ppaHlMQ0J2S1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHZGxkRU5zWldGeVFXeHdhR0U2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdienNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGRFTnNaV0Z5UVd4d2FHRTZJR1oxYm1OMGFXOXVLRzBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUcwc0lHWW9jaXdnYnlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnlaVzVrWlhJNklHUUtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdWMjBvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pORGt5TVNrc0lISWdQU0J1TG1selYyVmlSMHd5SUQ4Z2JuVnNiQ0E2SUdVdVoyVjBLQ0pQUlZOZmRtVnlkR1Y0WDJGeWNtRjVYMjlpYW1WamRDSXBMQ0J2SUQwZ2JpNXBjMWRsWWtkTU1pQjhmQ0J5SUNFOVBTQnVkV3hzTENCaElEMGdlMzBzSUd3Z1BTQjRLRzUxYkd3cExDQmpJRDBnYkRzS0lDQWdJR1oxYm1OMGFXOXVJR2dvUlN3Z1JDd2dWU3dnUml3Z1R5a2dld29nSUNBZ0lDQWdJR3hsZENCdVpTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUdsbUlDaHZLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqWlNBOUlHMG9SaXdnVlN3Z1JDazdDaUFnSUNBZ0lDQWdJQ0FnSUdNZ0lUMDlJR05sSUNZbUlDaGpJRDBnWTJVc0lHUW9ZeTV2WW1wbFkzUXBLU3dnYm1VZ1BTQjJLRVlzSUU4cExDQnVaU0FtSmlCbktFWXNJRThwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqWlNBOUlFUXVkMmx5WldaeVlXMWxJRDA5UFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnS0dNdVoyVnZiV1YwY25rZ0lUMDlJRVl1YVdRZ2ZId2dZeTV3Y205bmNtRnRJQ0U5UFNCVkxtbGtJSHg4SUdNdWQybHlaV1p5WVcxbElDRTlQU0JqWlNrZ0ppWWdLR011WjJWdmJXVjBjbmtnUFNCR0xtbGtMQ0JqTG5CeWIyZHlZVzBnUFNCVkxtbGtMQ0JqTG5kcGNtVm1jbUZ0WlNBOUlHTmxMQ0J1WlNBOUlDRXdLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnUlM1cGMwbHVjM1JoYm1ObFpFMWxjMmdnUFQwOUlDRXdJQ1ltSUNodVpTQTlJQ0V3S1N3Z1R5QWhQVDBnYm5Wc2JDQW1KaUIwTG5Wd1pHRjBaU2hQTENBek5EazJNeWtzSUc1bElDWW1JQ2hNS0VVc0lFUXNJRlVzSUVZcExDQlBJQ0U5UFNCdWRXeHNJQ1ltSUhNdVltbHVaRUoxWm1abGNpZ3pORGsyTXl3Z2RDNW5aWFFvVHlrdVluVm1abVZ5S1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjFLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG1selYyVmlSMHd5SUQ4Z2N5NWpjbVZoZEdWV1pYSjBaWGhCY25KaGVTZ3BJRG9nY2k1amNtVmhkR1ZXWlhKMFpYaEJjbkpoZVU5RlV5Z3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWkNoRktTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVhWE5YWldKSFRESWdQeUJ6TG1KcGJtUldaWEowWlhoQmNuSmhlU2hGS1NBNklISXVZbWx1WkZabGNuUmxlRUZ5Y21GNVQwVlRLRVVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1ppaEZLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YVhOWFpXSkhURElnUHlCekxtUmxiR1YwWlZabGNuUmxlRUZ5Y21GNUtFVXBJRG9nY2k1a1pXeGxkR1ZXWlhKMFpYaEJjbkpoZVU5RlV5aEZLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUcwb1JTd2dSQ3dnVlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JHSUQwZ1ZTNTNhWEpsWm5KaGJXVWdQVDA5SUNFd0xDQlBJRDBnWVZ0RkxtbGtYVHNLSUNBZ0lDQWdJQ0JQSUQwOVBTQjJiMmxrSURBZ0ppWWdLRThnUFNCN2ZTd2dZVnRGTG1sa1hTQTlJRThwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVaU0E5SUU5YlJDNXBaRjA3Q2lBZ0lDQWdJQ0FnYm1VZ1BUMDlJSFp2YVdRZ01DQW1KaUFvYm1VZ1BTQjdmU3dnVDF0RUxtbGtYU0E5SUc1bEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWTJVZ1BTQnVaVnRHWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTJVZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWTJVZ1BTQjRLSFVvS1Nrc0lHNWxXMFpkSUQwZ1kyVXBMQ0JqWlRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIZ29SU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQkVJRDBnVzEwc0lGVWdQU0JiWFN3Z1JpQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVHlBOUlEQTdJRThnUENCcE95QlBLeXNwUkZ0UFhTQTlJREFzSUZWYlQxMGdQU0F3TENCR1cwOWRJRDBnTURzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm5aVzl0WlhSeWVUb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2WjNKaGJUb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdkMmx5WldaeVlXMWxPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzUVhSMGNtbGlkWFJsY3pvZ1JDd0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1aFlteGxaRUYwZEhKcFluVjBaWE02SUZVc0NpQWdJQ0FnSUNBZ0lDQWdJR0YwZEhKcFluVjBaVVJwZG1semIzSnpPaUJHTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNRNklFVXNDaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISnBZblYwWlhNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlRG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIyS0VVc0lFUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZTQTlJR011WVhSMGNtbGlkWFJsY3l3Z1JpQTlJRVV1WVhSMGNtbGlkWFJsY3l3Z1R5QTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1WlNCcGJpQkdLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR05sSUQwZ1ZWdHVaVjBzSUZZZ1BTQkdXMjVsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dObElEMDlQU0IyYjJsa0lEQWdmSHdnWTJVdVlYUjBjbWxpZFhSbElDRTlQU0JXSUh4OElHTmxMbVJoZEdFZ0lUMDlJRll1WkdGMFlTa2djbVYwZFhKdUlDRXdPd29nSUNBZ0lDQWdJQ0FnSUNCUEt5czdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQmpMbUYwZEhKcFluVjBaWE5PZFcwZ0lUMDlJRThnZkh3Z1l5NXBibVJsZUNBaFBUMGdSRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdjb1JTd2dSQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQlZJRDBnZTMwc0lFWWdQU0JGTG1GMGRISnBZblYwWlhNc0lFOGdQU0F3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYm1VZ2FXNGdSaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqWlNBOUlFWmJibVZkTENCV0lEMGdlMzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lGWXVZWFIwY21saWRYUmxJRDBnWTJVc0lHTmxMbVJoZEdFZ0ppWWdLRll1WkdGMFlTQTlJR05sTG1SaGRHRXBMQ0JWVzI1bFhTQTlJRllzSUU4ckt6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdZeTVoZEhSeWFXSjFkR1Z6SUQwZ1ZTd2dZeTVoZEhSeWFXSjFkR1Z6VG5WdElEMGdUeXdnWXk1cGJtUmxlQ0E5SUVRN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQndLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQkZJRDBnWXk1dVpYZEJkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdSQ0E5SURBc0lGVWdQU0JGTG14bGJtZDBhRHNnUkNBOElGVTdJRVFyS3lsRlcwUmRJRDBnTURzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGOG9SU2tnZXdvZ0lDQWdJQ0FnSUhrb1JTd2dNQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCNUtFVXNJRVFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdWU0E5SUdNdWJtVjNRWFIwY21saWRYUmxjeXdnUmlBOUlHTXVaVzVoWW14bFpFRjBkSEpwWW5WMFpYTXNJRThnUFNCakxtRjBkSEpwWW5WMFpVUnBkbWx6YjNKek93b2dJQ0FnSUNBZ0lGVmJSVjBnUFNBeExDQkdXMFZkSUQwOVBTQXdJQ1ltSUNoekxtVnVZV0pzWlZabGNuUmxlRUYwZEhKcFlrRnljbUY1S0VVcExDQkdXMFZkSUQwZ01Ta3NJRTliUlYwZ0lUMDlJRVFnSmlZZ0tDaHVMbWx6VjJWaVIwd3lJRDhnY3lBNklHVXVaMlYwS0NKQlRrZE1SVjlwYm5OMFlXNWpaV1JmWVhKeVlYbHpJaWtwVzI0dWFYTlhaV0pIVERJZ1B5QWlkbVZ5ZEdWNFFYUjBjbWxpUkdsMmFYTnZjaUlnT2lBaWRtVnlkR1Y0UVhSMGNtbGlSR2wyYVhOdmNrRk9SMHhGSWwwb1JTd2dSQ2tzSUU5YlJWMGdQU0JFS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHSW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFVWdQU0JqTG01bGQwRjBkSEpwWW5WMFpYTXNJRVFnUFNCakxtVnVZV0pzWldSQmRIUnlhV0oxZEdWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ZTQTlJREFzSUVZZ1BTQkVMbXhsYm1kMGFEc2dWU0E4SUVZN0lGVXJLeWxFVzFWZElDRTlQU0JGVzFWZElDWW1JQ2h6TG1ScGMyRmliR1ZXWlhKMFpYaEJkSFJ5YVdKQmNuSmhlU2hWS1N3Z1JGdFZYU0E5SURBcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdRU2hGTENCRUxDQlZMQ0JHTENCUExDQnVaU2tnZXdvZ0lDQWdJQ0FnSUc0dWFYTlhaV0pIVERJZ1BUMDlJQ0V3SUNZbUlDaFZJRDA5UFNBMU1USTBJSHg4SUZVZ1BUMDlJRFV4TWpVcElEOGdjeTUyWlhKMFpYaEJkSFJ5YVdKSlVHOXBiblJsY2loRkxDQkVMQ0JWTENCUExDQnVaU2tnT2lCekxuWmxjblJsZUVGMGRISnBZbEJ2YVc1MFpYSW9SU3dnUkN3Z1ZTd2dSaXdnVHl3Z2JtVXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnVENoRkxDQkVMQ0JWTENCR0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0c0dWFYTlhaV0pIVERJZ1BUMDlJQ0V4SUNZbUlDaEZMbWx6U1c1emRHRnVZMlZrVFdWemFDQjhmQ0JHTG1selNXNXpkR0Z1WTJWa1FuVm1abVZ5UjJWdmJXVjBjbmtwSUNZbUlHVXVaMlYwS0NKQlRrZE1SVjlwYm5OMFlXNWpaV1JmWVhKeVlYbHpJaWtnUFQwOUlHNTFiR3dwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0J3S0NrN0NpQWdJQ0FnSUNBZ2JHVjBJRThnUFNCR0xtRjBkSEpwWW5WMFpYTXNJRzVsSUQwZ1ZTNW5aWFJCZEhSeWFXSjFkR1Z6S0Nrc0lHTmxJRDBnUkM1a1pXWmhkV3gwUVhSMGNtbGlkWFJsVm1Gc2RXVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdWaUJwYmlCdVpTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlhJRDBnYm1WYlZsMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFhMbXh2WTJGMGFXOXVJRDQ5SURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvWlNBOUlFOWJWbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FHVWdQVDA5SUhadmFXUWdNQ0FtSmlBb1ZpQTlQVDBnSW1sdWMzUmhibU5sVFdGMGNtbDRJaUFtSmlCRkxtbHVjM1JoYm1ObFRXRjBjbWw0SUNZbUlDaG9aU0E5SUVVdWFXNXpkR0Z1WTJWTllYUnlhWGdwTENCV0lEMDlQU0FpYVc1emRHRnVZMlZEYjJ4dmNpSWdKaVlnUlM1cGJuTjBZVzVqWlVOdmJHOXlJQ1ltSUNob1pTQTlJRVV1YVc1emRHRnVZMlZEYjJ4dmNpa3BMQ0JvWlNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHeGxJRDBnYUdVdWJtOXliV0ZzYVhwbFpDd2dabVVnUFNCb1pTNXBkR1Z0VTJsNlpTd2dRbVVnUFNCMExtZGxkQ2hvWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VKbElEMDlQU0IyYjJsa0lEQXBJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlpJRDBnUW1VdVluVm1abVZ5TENCRFpTQTlJRUpsTG5SNWNHVXNJSGxsSUQwZ1FtVXVZbmwwWlhOUVpYSkZiR1Z0Wlc1ME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNob1pTNXBjMGx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCblpTQTlJR2hsTG1SaGRHRXNJSGhsSUQwZ1oyVXVjM1J5YVdSbExDQlBaU0E5SUdobExtOW1abk5sZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHZGxJQ1ltSUdkbExtbHpTVzV6ZEdGdVkyVmtTVzUwWlhKc1pXRjJaV1JDZFdabVpYSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUnlBOUlEQTdJRWNnUENCWExteHZZMkYwYVc5dVUybDZaVHNnUnlzcktYa29WeTVzYjJOaGRHbHZiaUFySUVjc0lHZGxMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUlM1cGMwbHVjM1JoYm1ObFpFMWxjMmdnSVQwOUlDRXdJQ1ltSUVZdVgyMWhlRWx1YzNSaGJtTmxRMjkxYm5RZ1BUMDlJSFp2YVdRZ01DQW1KaUFvUmk1ZmJXRjRTVzV6ZEdGdVkyVkRiM1Z1ZENBOUlHZGxMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVWdLaUJuWlM1amIzVnVkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQm1iM0lvYkdWMElFY2dQU0F3T3lCSElEd2dWeTVzYjJOaGRHbHZibE5wZW1VN0lFY3JLeWxmS0ZjdWJHOWpZWFJwYjI0Z0t5QkhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVpYVc1a1FuVm1abVZ5S0RNME9UWXlMQ0JaS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JISUQwZ01Ec2dSeUE4SUZjdWJHOWpZWFJwYjI1VGFYcGxPeUJIS3lzcFFTaFhMbXh2WTJGMGFXOXVJQ3NnUnl3Z1ptVWdMeUJYTG14dlkyRjBhVzl1VTJsNlpTd2dRMlVzSUd4bExDQjRaU0FxSUhsbExDQW9UMlVnS3lCbVpTQXZJRmN1Ykc5allYUnBiMjVUYVhwbElDb2dSeWtnS2lCNVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dobExtbHpTVzV6ZEdGdVkyVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2RsSUQwZ01Ec2daMlVnUENCWExteHZZMkYwYVc5dVUybDZaVHNnWjJVckt5bDVLRmN1Ykc5allYUnBiMjRnS3lCblpTd2dhR1V1YldWemFGQmxja0YwZEhKcFluVjBaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRkxtbHpTVzV6ZEdGdVkyVmtUV1Z6YUNBaFBUMGdJVEFnSmlZZ1JpNWZiV0Y0U1c1emRHRnVZMlZEYjNWdWRDQTlQVDBnZG05cFpDQXdJQ1ltSUNoR0xsOXRZWGhKYm5OMFlXNWpaVU52ZFc1MElEMGdhR1V1YldWemFGQmxja0YwZEhKcFluVjBaU0FxSUdobExtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR1p2Y2loc1pYUWdaMlVnUFNBd095Qm5aU0E4SUZjdWJHOWpZWFJwYjI1VGFYcGxPeUJuWlNzcktWOG9WeTVzYjJOaGRHbHZiaUFySUdkbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWlhVzVrUW5WbVptVnlLRE0wT1RZeUxDQlpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm5aU0E5SURBN0lHZGxJRHdnVnk1c2IyTmhkR2x2YmxOcGVtVTdJR2RsS3lzcFFTaFhMbXh2WTJGMGFXOXVJQ3NnWjJVc0lHWmxJQzhnVnk1c2IyTmhkR2x2YmxOcGVtVXNJRU5sTENCc1pTd2dabVVnS2lCNVpTd2dabVVnTHlCWExteHZZMkYwYVc5dVUybDZaU0FxSUdkbElDb2dlV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9ZMlVnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc1pTQTlJR05sVzFaZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoc1pTQWhQVDBnZG05cFpDQXdLU0J6ZDJsMFkyZ29iR1V1YkdWdVozUm9LWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTUyWlhKMFpYaEJkSFJ5YVdJeVpuWW9WeTVzYjJOaGRHbHZiaXdnYkdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdWRtVnlkR1Y0UVhSMGNtbGlNMloyS0ZjdWJHOWpZWFJwYjI0c0lHeGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMblpsY25SbGVFRjBkSEpwWWpSbWRpaFhMbXh2WTJGMGFXOXVMQ0JzWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdWRtVnlkR1Y0UVhSMGNtbGlNV1oyS0ZjdWJHOWpZWFJwYjI0c0lHeGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWWlncE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdTU2dwSUhzS0lDQWdJQ0FnSUNCUUtDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQkZJR2x1SUdFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JDQTlJR0ZiUlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdWU0JwYmlCRUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHSUQwZ1JGdFZYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdUeUJwYmlCR0tXWW9SbHRQWFM1dlltcGxZM1FwTENCa1pXeGxkR1VnUmx0UFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCRVcxVmRPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQmhXMFZkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHc29SU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGhXMFV1YVdSZElEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnNaWFFnUkNBOUlHRmJSUzVwWkYwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCVklHbHVJRVFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUmlBOUlFUmJWVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1R5QnBiaUJHS1dZb1JsdFBYUzV2WW1wbFkzUXBMQ0JrWld4bGRHVWdSbHRQWFRzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElFUmJWVjA3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdSbGJHVjBaU0JoVzBVdWFXUmRPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUWloRktTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQkVJR2x1SUdFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZTQTlJR0ZiUkYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoVlcwVXVhV1JkSUQwOVBTQjJiMmxrSURBcElHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRlZiUlM1cFpGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVHlCcGJpQkdLV1lvUmx0UFhTNXZZbXBsWTNRcExDQmtaV3hsZEdVZ1JsdFBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUZWYlJTNXBaRjA3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1VDZ3BJSHNLSUNBZ0lDQWdJQ0IzS0Nrc0lHTWdJVDA5SUd3Z0ppWWdLR01nUFNCc0xDQmtLR011YjJKcVpXTjBLU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCM0tDa2dld29nSUNBZ0lDQWdJR3d1WjJWdmJXVjBjbmtnUFNCdWRXeHNMQ0JzTG5CeWIyZHlZVzBnUFNCdWRXeHNMQ0JzTG5kcGNtVm1jbUZ0WlNBOUlDRXhPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0J6WlhSMWNEb2dhQ3dLSUNBZ0lDQWdJQ0J5WlhObGREb2dVQ3dLSUNBZ0lDQWdJQ0J5WlhObGRFUmxabUYxYkhSVGRHRjBaVG9nZHl3S0lDQWdJQ0FnSUNCa2FYTndiM05sT2lCSkxBb2dJQ0FnSUNBZ0lISmxiR1ZoYzJWVGRHRjBaWE5QWmtkbGIyMWxkSEo1T2lCckxBb2dJQ0FnSUNBZ0lISmxiR1ZoYzJWVGRHRjBaWE5QWmxCeWIyZHlZVzA2SUVJc0NpQWdJQ0FnSUNBZ2FXNXBkRUYwZEhKcFluVjBaWE02SUhBc0NpQWdJQ0FnSUNBZ1pXNWhZbXhsUVhSMGNtbGlkWFJsT2lCZkxBb2dJQ0FnSUNBZ0lHUnBjMkZpYkdWVmJuVnpaV1JCZEhSeWFXSjFkR1Z6T2lCaUNpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlIRnRLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdiaTVwYzFkbFlrZE1NaXdnY2pzS0lDQWdJR1oxYm1OMGFXOXVJRzhvWXlrZ2V3b2dJQ0FnSUNBZ0lISWdQU0JqT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1lTaGpMQ0JvS1NCN0NpQWdJQ0FnSUNBZ2N5NWtjbUYzUVhKeVlYbHpLSElzSUdNc0lHZ3BMQ0IwTG5Wd1pHRjBaU2hvTENCeUxDQXhLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUd3b1l5d2dhQ3dnZFNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gxSUQwOVBTQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUdRc0lHWTdDaUFnSUNBZ0lDQWdhV1lnS0drcElHUWdQU0J6TENCbUlEMGdJbVJ5WVhkQmNuSmhlWE5KYm5OMFlXNWpaV1FpT3dvZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0dRZ1BTQmxMbWRsZENnaVFVNUhURVZmYVc1emRHRnVZMlZrWDJGeWNtRjVjeUlwTENCbUlEMGdJbVJ5WVhkQmNuSmhlWE5KYm5OMFlXNWpaV1JCVGtkTVJTSXNJR1FnUFQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweENkV1ptWlhKU1pXNWtaWEpsY2pvZ2RYTnBibWNnVkVoU1JVVXVTVzV6ZEdGdVkyVmtRblZtWm1WeVIyVnZiV1YwY25rZ1luVjBJR2hoY21SM1lYSmxJR1J2WlhNZ2JtOTBJSE4xY0hCdmNuUWdaWGgwWlc1emFXOXVJRUZPUjB4RlgybHVjM1JoYm1ObFpGOWhjbkpoZVhNdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWkZ0bVhTaHlMQ0JqTENCb0xDQjFLU3dnZEM1MWNHUmhkR1VvYUN3Z2Npd2dkU2s3Q2lBZ0lDQjlDaUFnSUNCMGFHbHpMbk5sZEUxdlpHVWdQU0J2TENCMGFHbHpMbkpsYm1SbGNpQTlJR0VzSUhSb2FYTXVjbVZ1WkdWeVNXNXpkR0Z1WTJWeklEMGdiRHNLZlFwbWRXNWpkR2x2YmlCWWJTaHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdianNLSUNBZ0lHWjFibU4wYVc5dUlHa29LU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNGdJVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJRzQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVhR0Z6S0NKRldGUmZkR1Y0ZEhWeVpWOW1hV3gwWlhKZllXNXBjMjkwY205d2FXTWlLU0E5UFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRXdnUFNCbExtZGxkQ2dpUlZoVVgzUmxlSFIxY21WZlptbHNkR1Z5WDJGdWFYTnZkSEp2Y0dsaklpazdDaUFnSUNBZ0lDQWdJQ0FnSUc0Z1BTQnpMbWRsZEZCaGNtRnRaWFJsY2loTUxrMUJXRjlVUlZoVVZWSkZYMDFCV0Y5QlRrbFRUMVJTVDFCWlgwVllWQ2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJRzRnUFNBd093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdjaWhNS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRXdnUFQwOUlDSm9hV2RvY0NJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITXVaMlYwVTJoaFpHVnlVSEpsWTJsemFXOXVSbTl5YldGMEtETTFOak16TENBek5qTXpPQ2t1Y0hKbFkybHphVzl1SUQ0Z01DQW1KaUJ6TG1kbGRGTm9ZV1JsY2xCeVpXTnBjMmx2YmtadmNtMWhkQ2d6TlRZek1pd2dNell6TXpncExuQnlaV05wYzJsdmJpQStJREFwSUhKbGRIVnliaUFpYUdsbmFIQWlPd29nSUNBZ0lDQWdJQ0FnSUNCTUlEMGdJbTFsWkdsMWJYQWlPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUQ0E5UFQwZ0ltMWxaR2wxYlhBaUlDWW1JSE11WjJWMFUyaGhaR1Z5VUhKbFkybHphVzl1Um05eWJXRjBLRE0xTmpNekxDQXpOak16TnlrdWNISmxZMmx6YVc5dUlENGdNQ0FtSmlCekxtZGxkRk5vWVdSbGNsQnlaV05wYzJsdmJrWnZjbTFoZENnek5UWXpNaXdnTXpZek16Y3BMbkJ5WldOcGMybHZiaUErSURBZ1B5QWliV1ZrYVhWdGNDSWdPaUFpYkc5M2NDSTdDaUFnSUNCOUNpQWdJQ0JzWlhRZ2J5QTlJSFI1Y0dWdlppQlhaV0pIVERKU1pXNWtaWEpwYm1kRGIyNTBaWGgwSUR3Z0luVWlJQ1ltSUhNZ2FXNXpkR0Z1WTJWdlppQlhaV0pIVERKU1pXNWtaWEpwYm1kRGIyNTBaWGgwSUh4OElIUjVjR1Z2WmlCWFpXSkhUREpEYjIxd2RYUmxVbVZ1WkdWeWFXNW5RMjl1ZEdWNGRDQThJQ0oxSWlBbUppQnpJR2x1YzNSaGJtTmxiMllnVjJWaVIwd3lRMjl0Y0hWMFpWSmxibVJsY21sdVowTnZiblJsZUhRc0lHRWdQU0IwTG5CeVpXTnBjMmx2YmlBaFBUMGdkbTlwWkNBd0lEOGdkQzV3Y21WamFYTnBiMjRnT2lBaWFHbG5hSEFpTENCc0lEMGdjaWhoS1RzS0lDQWdJR3dnSVQwOUlHRWdKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9pTENCaExDQWlibTkwSUhOMWNIQnZjblJsWkN3Z2RYTnBibWNpTENCc0xDQWlhVzV6ZEdWaFpDNGlLU3dnWVNBOUlHd3BPd29nSUNBZ2JHVjBJR01nUFNCdklIeDhJR1V1YUdGektDSlhSVUpIVEY5a2NtRjNYMkoxWm1abGNuTWlLU3dnYUNBOUlIUXViRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2lBOVBUMGdJVEFzSUhVZ1BTQnpMbWRsZEZCaGNtRnRaWFJsY2lnek5Ea3pNQ2tzSUdRZ1BTQnpMbWRsZEZCaGNtRnRaWFJsY2lnek5UWTJNQ2tzSUdZZ1BTQnpMbWRsZEZCaGNtRnRaWFJsY2lnek16YzVLU3dnYlNBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RNME1EYzJLU3dnZUNBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RNME9USXhLU3dnZGlBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RNMk16UTNLU3dnWnlBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RNMk16UTRLU3dnY0NBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RNMk16UTVLU3dnWHlBOUlHUWdQaUF3TENCNUlEMGdieUI4ZkNCbExtaGhjeWdpVDBWVFgzUmxlSFIxY21WZlpteHZZWFFpS1N3Z1lpQTlJRjhnSmlZZ2VTd2dRU0E5SUc4Z1B5QnpMbWRsZEZCaGNtRnRaWFJsY2lnek5qRTRNeWtnT2lBd093b2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JwYzFkbFlrZE1Nam9nYnl3S0lDQWdJQ0FnSUNCa2NtRjNRblZtWm1WeWN6b2dZeXdLSUNBZ0lDQWdJQ0JuWlhSTllYaEJibWx6YjNSeWIzQjVPaUJwTEFvZ0lDQWdJQ0FnSUdkbGRFMWhlRkJ5WldOcGMybHZiam9nY2l3S0lDQWdJQ0FnSUNCd2NtVmphWE5wYjI0NklHRXNDaUFnSUNBZ0lDQWdiRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2pvZ2FDd0tJQ0FnSUNBZ0lDQnRZWGhVWlhoMGRYSmxjem9nZFN3S0lDQWdJQ0FnSUNCdFlYaFdaWEowWlhoVVpYaDBkWEpsY3pvZ1pDd0tJQ0FnSUNBZ0lDQnRZWGhVWlhoMGRYSmxVMmw2WlRvZ1ppd0tJQ0FnSUNBZ0lDQnRZWGhEZFdKbGJXRndVMmw2WlRvZ2JTd0tJQ0FnSUNBZ0lDQnRZWGhCZEhSeWFXSjFkR1Z6T2lCNExBb2dJQ0FnSUNBZ0lHMWhlRlpsY25SbGVGVnVhV1p2Y20xek9pQjJMQW9nSUNBZ0lDQWdJRzFoZUZaaGNubHBibWR6T2lCbkxBb2dJQ0FnSUNBZ0lHMWhlRVp5WVdkdFpXNTBWVzVwWm05eWJYTTZJSEFzQ2lBZ0lDQWdJQ0FnZG1WeWRHVjRWR1Y0ZEhWeVpYTTZJRjhzQ2lBZ0lDQWdJQ0FnWm14dllYUkdjbUZuYldWdWRGUmxlSFIxY21Wek9pQjVMQW9nSUNBZ0lDQWdJR1pzYjJGMFZtVnlkR1Y0VkdWNGRIVnlaWE02SUdJc0NpQWdJQ0FnSUNBZ2JXRjRVMkZ0Y0d4bGN6b2dRUW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJLYlNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUhSb2FYTXNJSFFnUFNCdWRXeHNMQ0J1SUQwZ01Dd2dhU0E5SUNFeExDQnlJRDBnSVRFc0lHOGdQU0J1WlhjZ1YzUXNJR0VnUFNCdVpYY2diSFFzSUd3Z1BTQjdDaUFnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnYm1WbFpITlZjR1JoZEdVNklDRXhDaUFnSUNCOU93b2dJQ0FnZEdocGN5NTFibWxtYjNKdElEMGdiQ3dnZEdocGN5NXVkVzFRYkdGdVpYTWdQU0F3TENCMGFHbHpMbTUxYlVsdWRHVnljMlZqZEdsdmJpQTlJREFzSUhSb2FYTXVhVzVwZENBOUlHWjFibU4wYVc5dUtIVXNJR1FzSUdZcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlIVXViR1Z1WjNSb0lDRTlQU0F3SUh4OElHUWdmSHdnYmlBaFBUMGdNQ0I4ZkNCcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcElEMGdaQ3dnZENBOUlHZ29kU3dnWml3Z01Da3NJRzRnUFNCMUxteGxibWQwYUN3Z2JUc0tJQ0FnSUgwc0lIUm9hWE11WW1WbmFXNVRhR0ZrYjNkeklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY2lBOUlDRXdMQ0JvS0c1MWJHd3BPd29nSUNBZ2ZTd2dkR2hwY3k1bGJtUlRhR0ZrYjNkeklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY2lBOUlDRXhMQ0JqS0NrN0NpQWdJQ0I5TENCMGFHbHpMbk5sZEZOMFlYUmxJRDBnWm5WdVkzUnBiMjRvZFN3Z1pDd2daaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnZFM1amJHbHdjR2x1WjFCc1lXNWxjeXdnZUNBOUlIVXVZMnhwY0VsdWRHVnljMlZqZEdsdmJpd2dkaUE5SUhVdVkyeHBjRk5vWVdSdmQzTXNJR2NnUFNCekxtZGxkQ2gxS1RzS0lDQWdJQ0FnSUNCcFppQW9JV2tnZkh3Z2JTQTlQVDBnYm5Wc2JDQjhmQ0J0TG14bGJtZDBhQ0E5UFQwZ01DQjhmQ0J5SUNZbUlDRjJLU0J5SUQ4Z2FDaHVkV3hzS1NBNklHTW9LVHNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQWdQU0J5SUQ4Z01DQTZJRzRzSUY4Z1BTQndJQ29nTkN3Z2VTQTlJR2N1WTJ4cGNIQnBibWRUZEdGMFpTQjhmQ0J1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0JzTG5aaGJIVmxJRDBnZVN3Z2VTQTlJR2dvYlN3Z1pDd2dYeXdnWmlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZaUE5SURBN0lHSWdJVDA5SUY4N0lDc3JZaWw1VzJKZElEMGdkRnRpWFRzS0lDQWdJQ0FnSUNBZ0lDQWdaeTVqYkdsd2NHbHVaMU4wWVhSbElEMGdlU3dnZEdocGN5NXVkVzFKYm5SbGNuTmxZM1JwYjI0Z1BTQjRJRDhnZEdocGN5NXVkVzFRYkdGdVpYTWdPaUF3TENCMGFHbHpMbTUxYlZCc1lXNWxjeUFyUFNCd093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwN0NpQWdJQ0JtZFc1amRHbHZiaUJqS0NrZ2V3b2dJQ0FnSUNBZ0lHd3VkbUZzZFdVZ0lUMDlJSFFnSmlZZ0tHd3VkbUZzZFdVZ1BTQjBMQ0JzTG01bFpXUnpWWEJrWVhSbElEMGdiaUErSURBcExDQmxMbTUxYlZCc1lXNWxjeUE5SUc0c0lHVXViblZ0U1c1MFpYSnpaV04wYVc5dUlEMGdNRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdnb2RTd2daQ3dnWml3Z2JTa2dld29nSUNBZ0lDQWdJR3hsZENCNElEMGdkU0FoUFQwZ2JuVnNiQ0EvSUhVdWJHVnVaM1JvSURvZ01Dd2dkaUE5SUc1MWJHdzdDaUFnSUNBZ0lDQWdhV1lnS0hnZ0lUMDlJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hZZ1BTQnNMblpoYkhWbExDQnRJQ0U5UFNBaE1DQjhmQ0IySUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUdZZ0t5QjRJQ29nTkN3Z2NDQTlJR1F1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVM1blpYUk9iM0p0WVd4TllYUnlhWGdvY0Nrc0lDaDJJRDA5UFNCdWRXeHNJSHg4SUhZdWJHVnVaM1JvSUR3Z1p5a2dKaVlnS0hZZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtHY3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdYeUE5SURBc0lIa2dQU0JtT3lCZklDRTlQU0I0T3lBcksxOHNJSGtnS3owZ05DbHZMbU52Y0hrb2RWdGZYU2t1WVhCd2JIbE5ZWFJ5YVhnMEtIQXNJR0VwTENCdkxtNXZjbTFoYkM1MGIwRnljbUY1S0hZc0lIa3BMQ0IyVzNrZ0t5QXpYU0E5SUc4dVkyOXVjM1JoYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JDNTJZV3gxWlNBOUlIWXNJR3d1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1Ym5WdFVHeGhibVZ6SUQwZ2VDd2daUzV1ZFcxSmJuUmxjbk5sWTNScGIyNGdQU0F3TENCMk93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlGbHRLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQm1kVzVqZEdsdmJpQjBLRzhzSUdFcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1lTQTlQVDBnUkhNZ1B5QnZMbTFoY0hCcGJtY2dQU0JDYVNBNklHRWdQVDA5SUVaeklDWW1JQ2h2TG0xaGNIQnBibWNnUFNCNmFTa3NJRzg3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCdUtHOHBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2J5QW1KaUJ2TG1selZHVjRkSFZ5WlNBbUppQnZMbWx6VW1WdVpHVnlWR0Z5WjJWMFZHVjRkSFZ5WlNBOVBUMGdJVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnZMbTFoY0hCcGJtYzdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhJRDA5UFNCRWN5QjhmQ0JoSUQwOVBTQkdjeWtnYVdZZ0tHVXVhR0Z6S0c4cEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHVXVaMlYwS0c4cExuUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENoc0xDQnZMbTFoY0hCcGJtY3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0J2TG1sdFlXZGxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3Z0ppWWdiQzVvWldsbmFIUWdQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQnpMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BMQ0JvSUQwZ2JtVjNJR3B6S0d3dWFHVnBaMmgwSUM4Z01pazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2d1Wm5KdmJVVnhkV2x5WldOMFlXNW5kV3hoY2xSbGVIUjFjbVVvY3l3Z2J5a3NJR1V1YzJWMEtHOHNJR2dwTENCekxuTmxkRkpsYm1SbGNsUmhjbWRsZENoaktTd2dieTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnYVNrc0lIUW9hQzUwWlhoMGRYSmxMQ0J2TG0xaGNIQnBibWNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnZPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYVNodktTQjdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnZMblJoY21kbGREc0tJQ0FnSUNBZ0lDQmhMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHVXVaMlYwS0dFcE93b2dJQ0FnSUNBZ0lHd2dJVDA5SUhadmFXUWdNQ0FtSmlBb1pTNWtaV3hsZEdVb1lTa3NJR3d1WkdsemNHOXpaU2dwS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlISW9LU0I3Q2lBZ0lDQWdJQ0FnWlNBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHNHNDaUFnSUNBZ0lDQWdaR2x6Y0c5elpUb2djZ29nSUNBZ2ZUc0tmUXAyWVhJZ1JuSWdQU0JqYkdGemN5QmxlSFJsYm1SeklFbHlJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBdE1Td2dkQ0E5SURFc0lHNGdQU0F4TENCcElEMGdMVEVzSUhJZ1BTQXVNU3dnYnlBOUlESmxNeWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVQzSjBhRzluY21Gd2FHbGpRMkZ0WlhKaElpd2dkR2hwY3k1NmIyOXRJRDBnTVN3Z2RHaHBjeTUyYVdWM0lEMGdiblZzYkN3Z2RHaHBjeTVzWldaMElEMGdaU3dnZEdocGN5NXlhV2RvZENBOUlIUXNJSFJvYVhNdWRHOXdJRDBnYml3Z2RHaHBjeTVpYjNSMGIyMGdQU0JwTENCMGFHbHpMbTVsWVhJZ1BTQnlMQ0IwYUdsekxtWmhjaUE5SUc4c0lIUm9hWE11ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTd2dkQ2tzSUhSb2FYTXViR1ZtZENBOUlHVXViR1ZtZEN3Z2RHaHBjeTV5YVdkb2RDQTlJR1V1Y21sbmFIUXNJSFJvYVhNdWRHOXdJRDBnWlM1MGIzQXNJSFJvYVhNdVltOTBkRzl0SUQwZ1pTNWliM1IwYjIwc0lIUm9hWE11Ym1WaGNpQTlJR1V1Ym1WaGNpd2dkR2hwY3k1bVlYSWdQU0JsTG1aaGNpd2dkR2hwY3k1NmIyOXRJRDBnWlM1NmIyOXRMQ0IwYUdsekxuWnBaWGNnUFNCbExuWnBaWGNnUFQwOUlHNTFiR3dnUHlCdWRXeHNJRG9nVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWlM1MmFXVjNLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZacFpYZFBabVp6WlhRb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZG1sbGR5QTlQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NTJhV1YzSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsYm1GaWJHVmtPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdablZzYkZkcFpIUm9PaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1kV3hzU0dWcFoyaDBPaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhSWU9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCdlptWnpaWFJaT2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeENpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdWRtbGxkeTVsYm1GaWJHVmtJRDBnSVRBc0lIUm9hWE11ZG1sbGR5NW1kV3hzVjJsa2RHZ2dQU0JsTENCMGFHbHpMblpwWlhjdVpuVnNiRWhsYVdkb2RDQTlJSFFzSUhSb2FYTXVkbWxsZHk1dlptWnpaWFJZSUQwZ2Jpd2dkR2hwY3k1MmFXVjNMbTltWm5ObGRGa2dQU0JwTENCMGFHbHpMblpwWlhjdWQybGtkR2dnUFNCeUxDQjBhR2x6TG5acFpYY3VhR1ZwWjJoMElEMGdieXdnZEdocGN5NTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiR1ZoY2xacFpYZFBabVp6WlhRb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1MmFXVjNJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMblpwWlhjdVpXNWhZbXhsWkNBOUlDRXhLU3dnZEdocGN5NTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ0tIUm9hWE11Y21sbmFIUWdMU0IwYUdsekxteGxablFwSUM4Z0tESWdLaUIwYUdsekxucHZiMjBwTENCMElEMGdLSFJvYVhNdWRHOXdJQzBnZEdocGN5NWliM1IwYjIwcElDOGdLRElnS2lCMGFHbHpMbnB2YjIwcExDQnVJRDBnS0hSb2FYTXVjbWxuYUhRZ0t5QjBhR2x6TG14bFpuUXBJQzhnTWl3Z2FTQTlJQ2gwYUdsekxuUnZjQ0FySUhSb2FYTXVZbTkwZEc5dEtTQXZJRElzSUhJZ1BTQnVJQzBnWlN3Z2J5QTlJRzRnS3lCbExDQmhJRDBnYVNBcklIUXNJR3dnUFNCcElDMGdkRHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTUyYVdWM0lDRTlQU0J1ZFd4c0lDWW1JSFJvYVhNdWRtbGxkeTVsYm1GaWJHVmtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ0tIUm9hWE11Y21sbmFIUWdMU0IwYUdsekxteGxablFwSUM4Z2RHaHBjeTUyYVdWM0xtWjFiR3hYYVdSMGFDQXZJSFJvYVhNdWVtOXZiU3dnYUNBOUlDaDBhR2x6TG5SdmNDQXRJSFJvYVhNdVltOTBkRzl0S1NBdklIUm9hWE11ZG1sbGR5NW1kV3hzU0dWcFoyaDBJQzhnZEdocGN5NTZiMjl0T3dvZ0lDQWdJQ0FnSUNBZ0lDQnlJQ3M5SUdNZ0tpQjBhR2x6TG5acFpYY3ViMlptYzJWMFdDd2dieUE5SUhJZ0t5QmpJQ29nZEdocGN5NTJhV1YzTG5kcFpIUm9MQ0JoSUMwOUlHZ2dLaUIwYUdsekxuWnBaWGN1YjJabWMyVjBXU3dnYkNBOUlHRWdMU0JvSUNvZ2RHaHBjeTUyYVdWM0xtaGxhV2RvZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRMbTFoYTJWUGNuUm9iMmR5WVhCb2FXTW9jaXdnYnl3Z1lTd2diQ3dnZEdocGN5NXVaV0Z5TENCMGFHbHpMbVpoY2lrc0lIUm9hWE11Y0hKdmFtVmpkR2x2YmsxaGRISnBlRWx1ZG1WeWMyVXVZMjl3ZVNoMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BMbWx1ZG1WeWRDZ3BPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhOMWNHVnlMblJ2U2xOUFRpaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzV2WW1wbFkzUXVlbTl2YlNBOUlIUm9hWE11ZW05dmJTd2dkQzV2WW1wbFkzUXViR1ZtZENBOUlIUm9hWE11YkdWbWRDd2dkQzV2WW1wbFkzUXVjbWxuYUhRZ1BTQjBhR2x6TG5KcFoyaDBMQ0IwTG05aWFtVmpkQzUwYjNBZ1BTQjBhR2x6TG5SdmNDd2dkQzV2WW1wbFkzUXVZbTkwZEc5dElEMGdkR2hwY3k1aWIzUjBiMjBzSUhRdWIySnFaV04wTG01bFlYSWdQU0IwYUdsekxtNWxZWElzSUhRdWIySnFaV04wTG1aaGNpQTlJSFJvYVhNdVptRnlMQ0IwYUdsekxuWnBaWGNnSVQwOUlHNTFiR3dnSmlZZ0tIUXViMkpxWldOMExuWnBaWGNnUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCMGFHbHpMblpwWlhjcEtTd2dkRHNLSUNBZ0lIMEtmVHNLUm5JdWNISnZkRzkwZVhCbExtbHpUM0owYUc5bmNtRndhR2xqUTJGdFpYSmhJRDBnSVRBN0NuWmhjaUJIYVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYzI0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxKaGQxTm9ZV1JsY2sxaGRHVnlhV0ZzSWpzS0lDQWdJSDBLZlRzS1Iya3VjSEp2ZEc5MGVYQmxMbWx6VW1GM1UyaGhaR1Z5VFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUVWcElEMGdOQ3dnVFc0Z1BTQTRMQ0JXZENBOUlFMWhkR2d1Y0c5M0tESXNJRTF1S1N3Z2MyZ2dQU0JiQ2lBZ0lDQXVNVEkxTEFvZ0lDQWdMakl4TlN3S0lDQWdJQzR6TlN3S0lDQWdJQzQwTkRZc0NpQWdJQ0F1TlRJMkxBb2dJQ0FnTGpVNE1ncGRMQ0J2YUNBOUlFMXVJQzBnUldrZ0t5QXhJQ3NnYzJndWJHVnVaM1JvTENCd2FTQTlJREl3TENCSWN5QTlJSHNLSUNBZ0lGdE9kRjA2SURBc0NpQWdJQ0JiVDJsZE9pQXhDbjBzSUVkdklEMGdibVYzSUVaeUxDQjdJRjlzYjJSUWJHRnVaWE02SUdwcElDd2dYM05wZW1WTWIyUnpPaUJNYkNBc0lGOXphV2R0WVhNNklHeHpJQ0I5SUQwZ1dtMG9LU3dnVW13Z1BTQnVaWGNnWVdVc0lGWnZJRDBnYm5Wc2JDd2dUMjRnUFNBb01TQXJJRTFoZEdndWMzRnlkQ2cxS1NrZ0x5QXlMQ0J0YVNBOUlERWdMeUJQYml3Z1VHd2dQU0JiQ2lBZ0lDQnVaWGNnVFNneExDQXhMQ0F4S1N3S0lDQWdJRzVsZHlCTktDMHhMQ0F4TENBeEtTd0tJQ0FnSUc1bGR5Qk5LREVzSURFc0lDMHhLU3dLSUNBZ0lHNWxkeUJOS0MweExDQXhMQ0F0TVNrc0NpQWdJQ0J1WlhjZ1RTZ3dMQ0JQYml3Z2JXa3BMQW9nSUNBZ2JtVjNJRTBvTUN3Z1QyNHNJQzF0YVNrc0NpQWdJQ0J1WlhjZ1RTaHRhU3dnTUN3Z1QyNHBMQW9nSUNBZ2JtVjNJRTBvTFcxcExDQXdMQ0JQYmlrc0NpQWdJQ0J1WlhjZ1RTaFBiaXdnYldrc0lEQXBMQW9nSUNBZ2JtVjNJRTBvTFU5dUxDQnRhU3dnTUNrS1hTd2dZV2dnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbDl5Wlc1a1pYSmxjaUE5SUdVc0lIUm9hWE11WDNCcGJtZFFiMjVuVW1WdVpHVnlWR0Z5WjJWMElEMGdiblZzYkN3Z2RHaHBjeTVmWW14MWNrMWhkR1Z5YVdGc0lEMGdKRzBvY0drcExDQjBhR2x6TGw5bGNYVnBjbVZqZEZOb1lXUmxjaUE5SUc1MWJHd3NJSFJvYVhNdVgyTjFZbVZ0WVhCVGFHRmtaWElnUFNCdWRXeHNMQ0IwYUdsekxsOWpiMjF3YVd4bFRXRjBaWEpwWVd3b2RHaHBjeTVmWW14MWNrMWhkR1Z5YVdGc0tUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxVFkyVnVaU2hsTENCMElEMGdNQ3dnYmlBOUlDNHhMQ0JwSUQwZ01UQXdLU0I3Q2lBZ0lDQWdJQ0FnVm04Z1BTQjBhR2x6TGw5eVpXNWtaWEpsY2k1blpYUlNaVzVrWlhKVVlYSm5aWFFvS1RzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXVYMkZzYkc5allYUmxWR0Z5WjJWMGN5Z3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5elkyVnVaVlJ2UTNWaVpWVldLR1VzSUc0c0lHa3NJSElwTENCMElENGdNQ0FtSmlCMGFHbHpMbDlpYkhWeUtISXNJREFzSURBc0lIUXBMQ0IwYUdsekxsOWhjSEJzZVZCTlVrVk5LSElwTENCMGFHbHpMbDlqYkdWaGJuVndLSElwTENCeU93b2dJQ0FnZlFvZ0lDQWdabkp2YlVWeGRXbHlaV04wWVc1bmRXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMlp5YjIxVVpYaDBkWEpsS0dVcE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVOMVltVnRZWEFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDltY205dFZHVjRkSFZ5WlNobEtUc0tJQ0FnSUgwS0lDQWdJR052YlhCcGJHVkRkV0psYldGd1UyaGhaR1Z5S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDJOMVltVnRZWEJUYUdGa1pYSWdQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYMk4xWW1WdFlYQlRhR0ZrWlhJZ1BTQkdiQ2dwTENCMGFHbHpMbDlqYjIxd2FXeGxUV0YwWlhKcFlXd29kR2hwY3k1ZlkzVmlaVzFoY0ZOb1lXUmxjaWtwT3dvZ0lDQWdmUW9nSUNBZ1kyOXRjR2xzWlVWeGRXbHlaV04wWVc1bmRXeGhjbE5vWVdSbGNpZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2lBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1ZlpYRjFhWEpsWTNSVGFHRmtaWElnUFNCRWJDZ3BMQ0IwYUdsekxsOWpiMjF3YVd4bFRXRjBaWEpwWVd3b2RHaHBjeTVmWlhGMWFYSmxZM1JUYUdGa1pYSXBLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWW14MWNrMWhkR1Z5YVdGc0xtUnBjM0J2YzJVb0tTd2dkR2hwY3k1ZlkzVmlaVzFoY0ZOb1lXUmxjaUFoUFQwZ2JuVnNiQ0FtSmlCMGFHbHpMbDlqZFdKbGJXRndVMmhoWkdWeUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1ZlpYRjFhWEpsWTNSVGFHRmtaWElnSVQwOUlHNTFiR3dnSmlZZ2RHaHBjeTVmWlhGMWFYSmxZM1JUYUdGa1pYSXVaR2x6Y0c5elpTZ3BPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaU0E5SURBN0lHVWdQQ0JxYVM1c1pXNW5kR2c3SUdVckt5bHFhVnRsWFM1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQmZZMnhsWVc1MWNDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZjR2x1WjFCdmJtZFNaVzVrWlhKVVlYSm5aWFF1WkdsemNHOXpaU2dwTENCMGFHbHpMbDl5Wlc1a1pYSmxjaTV6WlhSU1pXNWtaWEpVWVhKblpYUW9WbThwTENCbExuTmphWE56YjNKVVpYTjBJRDBnSVRFc0lHTnpLR1VzSURBc0lEQXNJR1V1ZDJsa2RHZ3NJR1V1YUdWcFoyaDBLVHNLSUNBZ0lIMEtJQ0FnSUY5bWNtOXRWR1Y0ZEhWeVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnVm04Z1BTQjBhR2x6TGw5eVpXNWtaWEpsY2k1blpYUlNaVzVrWlhKVVlYSm5aWFFvS1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVYMkZzYkc5allYUmxWR0Z5WjJWMGN5aGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmRHVjRkSFZ5WlZSdlEzVmlaVlZXS0dVc0lIUXBMQ0IwYUdsekxsOWhjSEJzZVZCTlVrVk5LSFFwTENCMGFHbHpMbDlqYkdWaGJuVndLSFFwTENCME93b2dJQ0FnZlFvZ0lDQWdYMkZzYkc5allYUmxWR0Z5WjJWMGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMWhaMFpwYkhSbGNqb2dkSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMXBia1pwYkhSbGNqb2dkSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHZGxibVZ5WVhSbFRXbHdiV0Z3Y3pvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJR3R1TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0p0WVhRNklHTjBMQW9nSUNBZ0lDQWdJQ0FnSUNCbGJtTnZaR2x1WnpvZ1RuUXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9RblZtWm1WeU9pQWhNUW9nSUNBZ0lDQWdJSDBzSUc0Z1BTQkpiQ2gwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1a1pYQjBhRUoxWm1abGNpQTlJQ0ZsTENCMGFHbHpMbDl3YVc1blVHOXVaMUpsYm1SbGNsUmhjbWRsZENBOUlFbHNLSFFwTENCdU93b2dJQ0FnZlFvZ0lDQWdYMk52YlhCcGJHVk5ZWFJsY21saGJDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J1WlhjZ2MzUW9hbWxiTUYwc0lHVXBPd29nSUNBZ0lDQWdJSFJvYVhNdVgzSmxibVJsY21WeUxtTnZiWEJwYkdVb2RDd2dSMjhwT3dvZ0lDQWdmUW9nSUNBZ1gzTmpaVzVsVkc5RGRXSmxWVllvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2JtVjNJSFYwS0Rrd0xDQXhMQ0IwTENCdUtTd2diQ0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZExDQmpJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweENpQWdJQ0FnSUNBZ1hTd2dhQ0E5SUhSb2FYTXVYM0psYm1SbGNtVnlMQ0IxSUQwZ2FDNWhkWFJ2UTJ4bFlYSXNJR1FnUFNCb0xuUnZibVZOWVhCd2FXNW5Pd29nSUNBZ0lDQWdJR2d1WjJWMFEyeGxZWEpEYjJ4dmNpaFNiQ2tzSUdndWRHOXVaVTFoY0hCcGJtY2dQU0JmYml3Z2FDNWhkWFJ2UTJ4bFlYSWdQU0FoTVRzS0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUc1bGR5Qm9iaWg3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNKUVRWSkZUUzVDWVdOclozSnZkVzVrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdjMmxrWlRvZ2FYUXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9WM0pwZEdVNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRlJsYzNRNklDRXhDaUFnSUNBZ0lDQWdmU2tzSUcwZ1BTQnVaWGNnYzNRb2JtVjNJSGR1TENCbUtTd2dlQ0E5SUNFeExDQjJJRDBnWlM1aVlXTnJaM0p2ZFc1a093b2dJQ0FnSUNBZ0lIWWdQeUIyTG1selEyOXNiM0lnSmlZZ0tHWXVZMjlzYjNJdVkyOXdlU2gyS1N3Z1pTNWlZV05yWjNKdmRXNWtJRDBnYm5Wc2JDd2dlQ0E5SUNFd0tTQTZJQ2htTG1OdmJHOXlMbU52Y0hrb1Vtd3BMQ0I0SUQwZ0lUQXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaeUE5SURBN0lHY2dQQ0EyT3lCbkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUdjZ0pTQXpPd29nSUNBZ0lDQWdJQ0FnSUNCd0lEMDlJREFnUHlBb1lTNTFjQzV6WlhRb01Dd2diRnRuWFN3Z01Da3NJR0V1Ykc5dmEwRjBLR05iWjEwc0lEQXNJREFwS1NBNklIQWdQVDBnTVNBL0lDaGhMblZ3TG5ObGRDZ3dMQ0F3TENCc1cyZGRLU3dnWVM1c2IyOXJRWFFvTUN3Z1kxdG5YU3dnTUNrcElEb2dLR0V1ZFhBdWMyVjBLREFzSUd4YloxMHNJREFwTENCaExteHZiMnRCZENnd0xDQXdMQ0JqVzJkZEtTa3NJR056S0drc0lIQWdLaUJXZEN3Z1p5QStJRElnUHlCV2RDQTZJREFzSUZaMExDQldkQ2tzSUdndWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0drcExDQjRJQ1ltSUdndWNtVnVaR1Z5S0cwc0lHRXBMQ0JvTG5KbGJtUmxjaWhsTENCaEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiUzVuWlc5dFpYUnllUzVrYVhOd2IzTmxLQ2tzSUcwdWJXRjBaWEpwWVd3dVpHbHpjRzl6WlNncExDQm9MblJ2Ym1WTllYQndhVzVuSUQwZ1pDd2dhQzVoZFhSdlEyeGxZWElnUFNCMUxDQmxMbUpoWTJ0bmNtOTFibVFnUFNCMk93b2dJQ0FnZlFvZ0lDQWdYM05sZEVWdVkyOWthVzVuS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXlaVzVrWlhKbGNpNWpZWEJoWW1sc2FYUnBaWE11YVhOWFpXSkhURElnUFQwOUlDRXdJQ1ltSUhRdVptOXliV0YwSUQwOVBTQmpkQ0FtSmlCMExuUjVjR1VnUFQwOUlISnVJQ1ltSUhRdVpXNWpiMlJwYm1jZ1BUMDlJRTlwSUQ4Z1pTNTJZV3gxWlNBOUlFaHpXMDUwWFNBNklHVXVkbUZzZFdVZ1BTQkljMXQwTG1WdVkyOWthVzVuWFRzS0lDQWdJSDBLSUNBZ0lGOTBaWGgwZFhKbFZHOURkV0psVlZZb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWZjbVZ1WkdWeVpYSXNJR2tnUFNCbExtMWhjSEJwYm1jZ1BUMDlJRUpwSUh4OElHVXViV0Z3Y0dsdVp5QTlQVDBnZW1rN0NpQWdJQ0FnSUNBZ2FTQS9JSFJvYVhNdVgyTjFZbVZ0WVhCVGFHRmtaWElnUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmWTNWaVpXMWhjRk5vWVdSbGNpQTlJRVpzS0NrcElEb2dkR2hwY3k1ZlpYRjFhWEpsWTNSVGFHRmtaWElnUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmWlhGMWFYSmxZM1JUYUdGa1pYSWdQU0JFYkNncEtUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHa2dQeUIwYUdsekxsOWpkV0psYldGd1UyaGhaR1Z5SURvZ2RHaHBjeTVmWlhGMWFYSmxZM1JUYUdGa1pYSXNJRzhnUFNCdVpYY2djM1FvYW1sYk1GMHNJSElwTENCaElEMGdjaTUxYm1sbWIzSnRjenNLSUNBZ0lDQWdJQ0JoTG1WdWRrMWhjQzUyWVd4MVpTQTlJR1VzSUdrZ2ZId2dZUzUwWlhobGJGTnBlbVV1ZG1Gc2RXVXVjMlYwS0RFZ0x5QmxMbWx0WVdkbExuZHBaSFJvTENBeElDOGdaUzVwYldGblpTNW9aV2xuYUhRcExDQjBhR2x6TGw5elpYUkZibU52WkdsdVp5aGhMbWx1Y0hWMFJXNWpiMlJwYm1jc0lHVXBMQ0JqY3loMExDQXdMQ0F3TENBeklDb2dWblFzSURJZ0tpQldkQ2tzSUc0dWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0hRcExDQnVMbkpsYm1SbGNpaHZMQ0JIYnlrN0NpQWdJQ0I5Q2lBZ0lDQmZZWEJ3YkhsUVRWSkZUU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDl5Wlc1a1pYSmxjaXdnYmlBOUlIUXVZWFYwYjBOc1pXRnlPd29nSUNBZ0lDQWdJSFF1WVhWMGIwTnNaV0Z5SUQwZ0lURTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTVRzZ2FTQThJRzlvT3lCcEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUUxaGRHZ3VjM0Z5ZENoc2MxdHBYU0FxSUd4elcybGRJQzBnYkhOYmFTQXRJREZkSUNvZ2JITmJhU0F0SURGZEtTd2dieUE5SUZCc1d5aHBJQzBnTVNrZ0pTQlFiQzVzWlc1bmRHaGRPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlpYkhWeUtHVXNJR2tnTFNBeExDQnBMQ0J5TENCdktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkQzVoZFhSdlEyeGxZWElnUFNCdU93b2dJQ0FnZlFvZ0lDQWdYMkpzZFhJb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnZEdocGN5NWZjR2x1WjFCdmJtZFNaVzVrWlhKVVlYSm5aWFE3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZhR0ZzWmtKc2RYSW9aU3dnYnl3Z2RDd2diaXdnYVN3Z0lteGhkR2wwZFdScGJtRnNJaXdnY2lrc0lIUm9hWE11WDJoaGJHWkNiSFZ5S0c4c0lHVXNJRzRzSUc0c0lHa3NJQ0pzYjI1bmFYUjFaR2x1WVd3aUxDQnlLVHNLSUNBZ0lIMEtJQ0FnSUY5b1lXeG1RbXgxY2lobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQjBhR2x6TGw5eVpXNWtaWEpsY2l3Z1l5QTlJSFJvYVhNdVgySnNkWEpOWVhSbGNtbGhiRHNLSUNBZ0lDQWdJQ0J2SUNFOVBTQWliR0YwYVhSMVpHbHVZV3dpSUNZbUlHOGdJVDA5SUNKc2IyNW5hWFIxWkdsdVlXd2lJQ1ltSUdOdmJuTnZiR1V1WlhKeWIzSW9JbUpzZFhJZ1pHbHlaV04wYVc5dUlHMTFjM1FnWW1VZ1pXbDBhR1Z5SUd4aGRHbDBkV1JwYm1Gc0lHOXlJR3h2Ym1kcGRIVmthVzVoYkNFaUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlETXNJSFVnUFNCdVpYY2djM1FvYW1sYmFWMHNJR01wTENCa0lEMGdZeTUxYm1sbWIzSnRjeXdnWmlBOUlFeHNXMjVkSUMwZ01Td2diU0E5SUdselJtbHVhWFJsS0hJcElEOGdUV0YwYUM1UVNTQXZJQ2d5SUNvZ1ppa2dPaUF5SUNvZ1RXRjBhQzVRU1NBdklDZ3lJQ29nY0drZ0xTQXhLU3dnZUNBOUlISWdMeUJ0TENCMklEMGdhWE5HYVc1cGRHVW9jaWtnUHlBeElDc2dUV0YwYUM1bWJHOXZjaWhvSUNvZ2VDa2dPaUJ3YVRzS0lDQWdJQ0FnSUNCMklENGdjR2tnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLR0J6YVdkdFlWSmhaR2xoYm5Nc0lDUjdjbjBzSUdseklIUnZieUJzWVhKblpTQmhibVFnZDJsc2JDQmpiR2x3TENCaGN5QnBkQ0J5WlhGMVpYTjBaV1FnSkh0MmZTQnpZVzF3YkdWeklIZG9aVzRnZEdobElHMWhlR2x0ZFcwZ2FYTWdjMlYwSUhSdklDUjdjR2w5WUNrN0NpQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCYlhTd2djQ0E5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCQklEMGdNRHNnUVNBOElIQnBPeUFySzBFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1RDQTlJRUVnTHlCNExDQkpJRDBnVFdGMGFDNWxlSEFvTFV3Z0tpQk1JQzhnTWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR2N1Y0hWemFDaEpLU3dnUVNBOVBTQXdJRDhnY0NBclBTQkpJRG9nUVNBOElIWWdKaVlnS0hBZ0t6MGdNaUFxSUVrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFRWdQU0F3T3lCQklEd2daeTVzWlc1bmRHZzdJRUVyS3lsblcwRmRJRDBnWjF0QlhTQXZJSEE3Q2lBZ0lDQWdJQ0FnWkM1bGJuWk5ZWEF1ZG1Gc2RXVWdQU0JsTG5SbGVIUjFjbVVzSUdRdWMyRnRjR3hsY3k1MllXeDFaU0E5SUhZc0lHUXVkMlZwWjJoMGN5NTJZV3gxWlNBOUlHY3NJR1F1YkdGMGFYUjFaR2x1WVd3dWRtRnNkV1VnUFNCdklEMDlQU0FpYkdGMGFYUjFaR2x1WVd3aUxDQmhJQ1ltSUNoa0xuQnZiR1ZCZUdsekxuWmhiSFZsSUQwZ1lTa3NJR1F1WkZSb1pYUmhMblpoYkhWbElEMGdiU3dnWkM1dGFYQkpiblF1ZG1Gc2RXVWdQU0JOYmlBdElHNDdDaUFnSUNBZ0lDQWdiR1YwSUY4Z1BTQk1iRnRwWFN3Z2VTQTlJRE1nS2lCTllYUm9MbTFoZUNnd0xDQldkQ0F0SURJZ0tpQmZLU3dnWWlBOUlDaHBJRDA5UFNBd0lEOGdNQ0E2SURJZ0tpQldkQ2tnS3lBeUlDb2dYeUFxSUNocElENGdUVzRnTFNCRmFTQS9JR2tnTFNCTmJpQXJJRVZwSURvZ01DazdDaUFnSUNBZ0lDQWdZM01vZEN3Z2VTd2dZaXdnTXlBcUlGOHNJRElnS2lCZktTd2diQzV6WlhSU1pXNWtaWEpVWVhKblpYUW9kQ2tzSUd3dWNtVnVaR1Z5S0hVc0lFZHZLVHNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnV20wb0tTQjdDaUFnSUNCc1pYUWdjeUE5SUZ0ZExDQmxJRDBnVzEwc0lIUWdQU0JiWFN3Z2JpQTlJRTF1T3dvZ0lDQWdabTl5S0d4bGRDQnBJRDBnTURzZ2FTQThJRzlvT3lCcEt5c3Bld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdUV0YwYUM1d2IzY29NaXdnYmlrN0NpQWdJQ0FnSUNBZ1pTNXdkWE5vS0hJcE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ01TQXZJSEk3Q2lBZ0lDQWdJQ0FnYVNBK0lFMXVJQzBnUldrZ1B5QnZJRDBnYzJoYmFTQXRJRTF1SUNzZ1JXa2dMU0F4WFNBNklHa2dQVDBnTUNBbUppQW9ieUE5SURBcExDQjBMbkIxYzJnb2J5azdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQXhJQzhnS0hJZ0xTQXhLU3dnYkNBOUlDMWhJQzhnTWl3Z1l5QTlJREVnS3lCaElDOGdNaXdnYUNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnYkN3S0lDQWdJQ0FnSUNBZ0lDQWdiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnYkN3S0lDQWdJQ0FnSUNBZ0lDQWdZeXdLSUNBZ0lDQWdJQ0FnSUNBZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnYkN3S0lDQWdJQ0FnSUNBZ0lDQWdiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnWXl3S0lDQWdJQ0FnSUNBZ0lDQWdiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1l3b2dJQ0FnSUNBZ0lGMHNJSFVnUFNBMkxDQmtJRDBnTml3Z1ppQTlJRE1zSUcwZ1BTQXlMQ0I0SUQwZ01Td2dkaUE5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvWmlBcUlHUWdLaUIxS1N3Z1p5QTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29iU0FxSUdRZ0tpQjFLU3dnY0NBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb2VDQXFJR1FnS2lCMUtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIa2dQU0F3T3lCNUlEd2dkVHNnZVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSWdQU0I1SUNVZ015QXFJRElnTHlBeklDMGdNU3dnUVNBOUlIa2dQaUF5SUQ4Z01DQTZJQzB4TENCTUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWlBcklESWdMeUF6TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaUlDc2dNaUF2SURNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQklDc2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaUlDc2dNaUF2SURNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQklDc2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVNBcklERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdDaUFnSUNBZ0lDQWdJQ0FnSUYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFl1YzJWMEtFd3NJR1lnS2lCa0lDb2dlU2tzSUdjdWMyVjBLR2dzSUcwZ0tpQmtJQ29nZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCSklEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNUNpQWdJQ0FnSUNBZ0lDQWdJRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQXVjMlYwS0Vrc0lIZ2dLaUJrSUNvZ2VTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCZklEMGdibVYzSUY5bE93b2dJQ0FnSUNBZ0lGOHVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJWWlNoMkxDQm1LU2tzSUY4dWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJWWlNobkxDQnRLU2tzSUY4dWMyVjBRWFIwY21saWRYUmxLQ0ptWVdObFNXNWtaWGdpTENCdVpYY2dWV1VvY0N3Z2VDa3BMQ0J6TG5CMWMyZ29YeWtzSUc0Z1BpQkZhU0FtSmlCdUxTMDdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJRjlzYjJSUWJHRnVaWE02SUhNc0NpQWdJQ0FnSUNBZ1gzTnBlbVZNYjJSek9pQmxMQW9nSUNBZ0lDQWdJRjl6YVdkdFlYTTZJSFFLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnU1d3b2N5a2dld29nSUNBZ2JHVjBJR1VnUFNCdVpYY2dRWFFvTXlBcUlGWjBMQ0F6SUNvZ1ZuUXNJSE1wT3dvZ0lDQWdjbVYwZFhKdUlHVXVkR1Y0ZEhWeVpTNXRZWEJ3YVc1bklEMGdVSElzSUdVdWRHVjRkSFZ5WlM1dVlXMWxJRDBnSWxCTlVrVk5MbU4xWW1WVmRpSXNJR1V1YzJOcGMzTnZjbFJsYzNRZ1BTQWhNQ3dnWlRzS2ZRcG1kVzVqZEdsdmJpQmpjeWh6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCekxuWnBaWGR3YjNKMExuTmxkQ2hsTENCMExDQnVMQ0JwS1N3Z2N5NXpZMmx6YzI5eUxuTmxkQ2hsTENCMExDQnVMQ0JwS1RzS2ZRcG1kVzVqZEdsdmJpQWtiU2h6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29jeWtzSUhRZ1BTQnVaWGNnVFNnd0xDQXhMQ0F3S1RzS0lDQWdJSEpsZEhWeWJpQnVaWGNnUjJrb2V3b2dJQ0FnSUNBZ0lHNWhiV1U2SUNKVGNHaGxjbWxqWVd4SFlYVnpjMmxoYmtKc2RYSWlMQW9nSUNBZ0lDQWdJR1JsWm1sdVpYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2Jqb2djd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdaVzUyVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WVcxd2JHVnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0IzWldsbmFIUnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2daUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JzWVhScGRIVmthVzVoYkRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUNFeENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUlVhR1YwWVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXbHdTVzUwT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTUFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCd2IyeGxRWGhwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUhRS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQm1ZU2dwTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJnQ2dvSkNRbHdjbVZqYVhOcGIyNGdiV1ZrYVhWdGNDQm1iRzloZERzS0NRa0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdhVzUwT3dvS0NRa0pkbUZ5ZVdsdVp5QjJaV016SUhaUGRYUndkWFJFYVhKbFkzUnBiMjQ3Q2dvSkNRbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmxiblpOWVhBN0Nna0pDWFZ1YVdadmNtMGdhVzUwSUhOaGJYQnNaWE03Q2drSkNYVnVhV1p2Y20wZ1pteHZZWFFnZDJWcFoyaDBjMXNnYmlCZE93b0pDUWwxYm1sbWIzSnRJR0p2YjJ3Z2JHRjBhWFIxWkdsdVlXdzdDZ2tKQ1hWdWFXWnZjbTBnWm14dllYUWdaRlJvWlhSaE93b0pDUWwxYm1sbWIzSnRJR1pzYjJGMElHMXBjRWx1ZERzS0NRa0pkVzVwWm05eWJTQjJaV016SUhCdmJHVkJlR2x6T3dvS0NRa0pKSHR3WVNncGZRb0tDUWtKSTJSbFptbHVaU0JGVGxaTlFWQmZWRmxRUlY5RFZVSkZYMVZXQ2drSkNTTnBibU5zZFdSbElEeGpkV0psWDNWMlgzSmxabXhsWTNScGIyNWZabkpoWjIxbGJuUStDZ29KQ1FsMlpXTXpJR2RsZEZOaGJYQnNaU2dnWm14dllYUWdkR2hsZEdFc0lIWmxZek1nWVhocGN5QXBJSHNLQ2drSkNRbG1iRzloZENCamIzTlVhR1YwWVNBOUlHTnZjeWdnZEdobGRHRWdLVHNLQ1FrSkNTOHZJRkp2WkhKcFozVmxjeWNnWVhocGN5MWhibWRzWlNCeWIzUmhkR2x2YmdvSkNRa0pkbVZqTXlCellXMXdiR1ZFYVhKbFkzUnBiMjRnUFNCMlQzVjBjSFYwUkdseVpXTjBhVzl1SUNvZ1kyOXpWR2hsZEdFS0NRa0pDUWtySUdOeWIzTnpLQ0JoZUdsekxDQjJUM1YwY0hWMFJHbHlaV04wYVc5dUlDa2dLaUJ6YVc0b0lIUm9aWFJoSUNrS0NRa0pDUWtySUdGNGFYTWdLaUJrYjNRb0lHRjRhWE1zSUhaUGRYUndkWFJFYVhKbFkzUnBiMjRnS1NBcUlDZ2dNUzR3SUMwZ1kyOXpWR2hsZEdFZ0tUc0tDZ2tKQ1FseVpYUjFjbTRnWW1sc2FXNWxZWEpEZFdKbFZWWW9JR1Z1ZGsxaGNDd2djMkZ0Y0d4bFJHbHlaV04wYVc5dUxDQnRhWEJKYm5RZ0tUc0tDZ2tKQ1gwS0Nna0pDWFp2YVdRZ2JXRnBiaWdwSUhzS0Nna0pDUWwyWldNeklHRjRhWE1nUFNCc1lYUnBkSFZrYVc1aGJDQS9JSEJ2YkdWQmVHbHpJRG9nWTNKdmMzTW9JSEJ2YkdWQmVHbHpMQ0IyVDNWMGNIVjBSR2x5WldOMGFXOXVJQ2s3Q2dvSkNRa0phV1lnS0NCaGJHd29JR1Z4ZFdGc0tDQmhlR2x6TENCMlpXTXpLQ0F3TGpBZ0tTQXBJQ2tnS1NCN0Nnb0pDUWtKQ1dGNGFYTWdQU0IyWldNektDQjJUM1YwY0hWMFJHbHlaV04wYVc5dUxub3NJREF1TUN3Z0xTQjJUM1YwY0hWMFJHbHlaV04wYVc5dUxuZ2dLVHNLQ2drSkNRbDlDZ29KQ1FrSllYaHBjeUE5SUc1dmNtMWhiR2w2WlNnZ1lYaHBjeUFwT3dvS0NRa0pDV2RzWDBaeVlXZERiMnh2Y2lBOUlIWmxZelFvSURBdU1Dd2dNQzR3TENBd0xqQXNJREV1TUNBcE93b0pDUWtKWjJ4ZlJuSmhaME52Ykc5eUxuSm5ZaUFyUFNCM1pXbG5hSFJ6V3lBd0lGMGdLaUJuWlhSVFlXMXdiR1VvSURBdU1Dd2dZWGhwY3lBcE93b0tDUWtKQ1dadmNpQW9JR2x1ZENCcElEMGdNVHNnYVNBOElHNDdJR2tyS3lBcElIc0tDZ2tKQ1FrSmFXWWdLQ0JwSUQ0OUlITmhiWEJzWlhNZ0tTQjdDZ29KQ1FrSkNRbGljbVZoYXpzS0Nna0pDUWtKZlFvS0NRa0pDUWxtYkc5aGRDQjBhR1YwWVNBOUlHUlVhR1YwWVNBcUlHWnNiMkYwS0NCcElDazdDZ2tKQ1FrSloyeGZSbkpoWjBOdmJHOXlMbkpuWWlBclBTQjNaV2xuYUhSeld5QnBJRjBnS2lCblpYUlRZVzF3YkdVb0lDMHhMakFnS2lCMGFHVjBZU3dnWVhocGN5QXBPd29KQ1FrSkNXZHNYMFp5WVdkRGIyeHZjaTV5WjJJZ0t6MGdkMlZwWjJoMGMxc2dhU0JkSUNvZ1oyVjBVMkZ0Y0d4bEtDQjBhR1YwWVN3Z1lYaHBjeUFwT3dvS0NRa0pDWDBLQ2drSkNYMEtDUWxnTEFvZ0lDQWdJQ0FnSUdKc1pXNWthVzVuT2lCMmJpd0tJQ0FnSUNBZ0lDQmtaWEIwYUZSbGMzUTZJQ0V4TEFvZ0lDQWdJQ0FnSUdSbGNIUm9WM0pwZEdVNklDRXhDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJFYkNncElIc0tJQ0FnSUd4bGRDQnpJRDBnYm1WM0lGZ29NU3dnTVNrN0NpQWdJQ0J5WlhSMWNtNGdibVYzSUVkcEtIc0tJQ0FnSUNBZ0lDQnVZVzFsT2lBaVJYRjFhWEpsWTNSaGJtZDFiR0Z5Vkc5RGRXSmxWVllpTEFvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGsxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdWNFpXeFRhWHBsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nY3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCcGJuQjFkRVZ1WTI5a2FXNW5PaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dTSE5iVG5SZENpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dabUVvS1N3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nWUFvS0NRa0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdabXh2WVhRN0Nna0pDWEJ5WldOcGMybHZiaUJ0WldScGRXMXdJR2x1ZERzS0Nna0pDWFpoY25scGJtY2dkbVZqTXlCMlQzVjBjSFYwUkdseVpXTjBhVzl1T3dvS0NRa0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdaVzUyVFdGd093b0pDUWwxYm1sbWIzSnRJSFpsWXpJZ2RHVjRaV3hUYVhwbE93b0tDUWtKSkh0d1lTZ3BmUW9LQ1FrSkkybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0Nna0pDWFp2YVdRZ2JXRnBiaWdwSUhzS0Nna0pDUWxuYkY5R2NtRm5RMjlzYjNJZ1BTQjJaV00wS0NBd0xqQXNJREF1TUN3Z01DNHdMQ0F4TGpBZ0tUc0tDZ2tKQ1FsMlpXTXpJRzkxZEhCMWRFUnBjbVZqZEdsdmJpQTlJRzV2Y20xaGJHbDZaU2dnZGs5MWRIQjFkRVJwY21WamRHbHZiaUFwT3dvSkNRa0pkbVZqTWlCMWRpQTlJR1Z4ZFdseVpXTjBWWFlvSUc5MWRIQjFkRVJwY21WamRHbHZiaUFwT3dvS0NRa0pDWFpsWXpJZ1ppQTlJR1p5WVdOMEtDQjFkaUF2SUhSbGVHVnNVMmw2WlNBdElEQXVOU0FwT3dvSkNRa0pkWFlnTFQwZ1ppQXFJSFJsZUdWc1UybDZaVHNLQ1FrSkNYWmxZek1nZEd3Z1BTQmxiblpOWVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0IwWlhoMGRYSmxNa1FnS0NCbGJuWk5ZWEFzSUhWMklDa2dLUzV5WjJJN0Nna0pDUWwxZGk1NElDczlJSFJsZUdWc1UybDZaUzU0T3dvSkNRa0pkbVZqTXlCMGNpQTlJR1Z1ZGsxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUhSbGVIUjFjbVV5UkNBb0lHVnVkazFoY0N3Z2RYWWdLU0FwTG5Kbllqc0tDUWtKQ1hWMkxua2dLejBnZEdWNFpXeFRhWHBsTG5rN0Nna0pDUWwyWldNeklHSnlJRDBnWlc1MlRXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2RHVjRkSFZ5WlRKRUlDZ2daVzUyVFdGd0xDQjFkaUFwSUNrdWNtZGlPd29KQ1FrSmRYWXVlQ0F0UFNCMFpYaGxiRk5wZW1VdWVEc0tDUWtKQ1habFl6TWdZbXdnUFNCbGJuWk5ZWEJVWlhobGJGUnZUR2x1WldGeUtDQjBaWGgwZFhKbE1rUWdLQ0JsYm5aTllYQXNJSFYySUNrZ0tTNXlaMkk3Q2dvSkNRa0pkbVZqTXlCMGJTQTlJRzFwZUNnZ2RHd3NJSFJ5TENCbUxuZ2dLVHNLQ1FrSkNYWmxZek1nWW0wZ1BTQnRhWGdvSUdKc0xDQmljaXdnWmk1NElDazdDZ2tKQ1FsbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUQwZ2JXbDRLQ0IwYlN3Z1ltMHNJR1l1ZVNBcE93b0tDUWtKZlFvSkNXQXNDaUFnSUNBZ0lDQWdZbXhsYm1ScGJtYzZJSFp1TEFvZ0lDQWdJQ0FnSUdSbGNIUm9WR1Z6ZERvZ0lURXNDaUFnSUNBZ0lDQWdaR1Z3ZEdoWGNtbDBaVG9nSVRFS0lDQWdJSDBwT3dwOUNtWjFibU4wYVc5dUlFWnNLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHNWxkeUJIYVNoN0NpQWdJQ0FnSUNBZ2JtRnRaVG9nSWtOMVltVnRZWEJVYjBOMVltVlZWaUlzQ2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdaVzUyVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm5CMWRFVnVZMjlrYVc1bk9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1NITmJUblJkQ2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1ptRW9LU3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dZQW9LQ1FrSmNISmxZMmx6YVc5dUlHMWxaR2wxYlhBZ1pteHZZWFE3Q2drSkNYQnlaV05wYzJsdmJpQnRaV1JwZFcxd0lHbHVkRHNLQ2drSkNYWmhjbmxwYm1jZ2RtVmpNeUIyVDNWMGNIVjBSR2x5WldOMGFXOXVPd29LQ1FrSmRXNXBabTl5YlNCellXMXdiR1Z5UTNWaVpTQmxiblpOWVhBN0Nnb0pDUWtrZTNCaEtDbDlDZ29KQ1FsMmIybGtJRzFoYVc0b0tTQjdDZ29KQ1FrSloyeGZSbkpoWjBOdmJHOXlJRDBnWlc1MlRXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2RHVjRkSFZ5WlVOMVltVW9JR1Z1ZGsxaGNDd2dkbVZqTXlnZ0xTQjJUM1YwY0hWMFJHbHlaV04wYVc5dUxuZ3NJSFpQZFhSd2RYUkVhWEpsWTNScGIyNHVlWG9nS1NBcElDazdDZ29KQ1FsOUNna0pZQ3dLSUNBZ0lDQWdJQ0JpYkdWdVpHbHVaem9nZG00c0NpQWdJQ0FnSUNBZ1pHVndkR2hVWlhOME9pQWhNU3dLSUNBZ0lDQWdJQ0JrWlhCMGFGZHlhWFJsT2lBaE1Rb2dJQ0FnZlNrN0NuMEtablZ1WTNScGIyNGdabUVvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZQW9LQ1Fsd2NtVmphWE5wYjI0Z2JXVmthWFZ0Y0NCbWJHOWhkRHNLQ1Fsd2NtVmphWE5wYjI0Z2JXVmthWFZ0Y0NCcGJuUTdDZ29KQ1dGMGRISnBZblYwWlNCMlpXTXpJSEJ2YzJsMGFXOXVPd29KQ1dGMGRISnBZblYwWlNCMlpXTXlJSFYyT3dvSkNXRjBkSEpwWW5WMFpTQm1iRzloZENCbVlXTmxTVzVrWlhnN0Nnb0pDWFpoY25scGJtY2dkbVZqTXlCMlQzVjBjSFYwUkdseVpXTjBhVzl1T3dvS0NRa3ZMeUJTU0NCamIyOXlaR2x1WVhSbElITjVjM1JsYlRzZ1VFMVNSVTBnWm1GalpTMXBibVJsZUdsdVp5QmpiMjUyWlc1MGFXOXVDZ2tKZG1Wak15Qm5aWFJFYVhKbFkzUnBiMjRvSUhabFl6SWdkWFlzSUdac2IyRjBJR1poWTJVZ0tTQjdDZ29KQ1FsMWRpQTlJREl1TUNBcUlIVjJJQzBnTVM0d093b0tDUWtKZG1Wak15QmthWEpsWTNScGIyNGdQU0IyWldNektDQjFkaXdnTVM0d0lDazdDZ29KQ1FscFppQW9JR1poWTJVZ1BUMGdNQzR3SUNrZ2V3b0tDUWtKQ1dScGNtVmpkR2x2YmlBOUlHUnBjbVZqZEdsdmJpNTZlWGc3SUM4dklDZ2dNU3dnZGl3Z2RTQXBJSEJ2Y3lCNENnb0pDUWw5SUdWc2MyVWdhV1lnS0NCbVlXTmxJRDA5SURFdU1DQXBJSHNLQ2drSkNRbGthWEpsWTNScGIyNGdQU0JrYVhKbFkzUnBiMjR1ZUhwNU93b0pDUWtKWkdseVpXTjBhVzl1TG5oNklDbzlJQzB4TGpBN0lDOHZJQ2dnTFhVc0lERXNJQzEySUNrZ2NHOXpJSGtLQ2drSkNYMGdaV3h6WlNCcFppQW9JR1poWTJVZ1BUMGdNaTR3SUNrZ2V3b0tDUWtKQ1dScGNtVmpkR2x2Ymk1NElDbzlJQzB4TGpBN0lDOHZJQ2dnTFhVc0lIWXNJREVnS1NCd2IzTWdlZ29LQ1FrSmZTQmxiSE5sSUdsbUlDZ2dabUZqWlNBOVBTQXpMakFnS1NCN0Nnb0pDUWtKWkdseVpXTjBhVzl1SUQwZ1pHbHlaV04wYVc5dUxucDVlRHNLQ1FrSkNXUnBjbVZqZEdsdmJpNTRlaUFxUFNBdE1TNHdPeUF2THlBb0lDMHhMQ0IyTENBdGRTQXBJRzVsWnlCNENnb0pDUWw5SUdWc2MyVWdhV1lnS0NCbVlXTmxJRDA5SURRdU1DQXBJSHNLQ2drSkNRbGthWEpsWTNScGIyNGdQU0JrYVhKbFkzUnBiMjR1ZUhwNU93b0pDUWtKWkdseVpXTjBhVzl1TG5oNUlDbzlJQzB4TGpBN0lDOHZJQ2dnTFhVc0lDMHhMQ0IySUNrZ2JtVm5JSGtLQ2drSkNYMGdaV3h6WlNCcFppQW9JR1poWTJVZ1BUMGdOUzR3SUNrZ2V3b0tDUWtKQ1dScGNtVmpkR2x2Ymk1NklDbzlJQzB4TGpBN0lDOHZJQ2dnZFN3Z2Rpd2dMVEVnS1NCdVpXY2dlZ29LQ1FrSmZRb0tDUWtKY21WMGRYSnVJR1JwY21WamRHbHZianNLQ2drSmZRb0tDUWwyYjJsa0lHMWhhVzRvS1NCN0Nnb0pDUWwyVDNWMGNIVjBSR2x5WldOMGFXOXVJRDBnWjJWMFJHbHlaV04wYVc5dUtDQjFkaXdnWm1GalpVbHVaR1Y0SUNrN0Nna0pDV2RzWDFCdmMybDBhVzl1SUQwZ2RtVmpOQ2dnY0c5emFYUnBiMjRzSURFdU1DQXBPd29LQ1FsOUNnbGdPd3A5Q21aMWJtTjBhVzl1SUhCaEtDa2dld29nSUNBZ2NtVjBkWEp1SUdBS0Nna0pkVzVwWm05eWJTQnBiblFnYVc1d2RYUkZibU52WkdsdVp6c0tDZ2tKSTJsdVkyeDFaR1VnUEdWdVkyOWthVzVuYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ29LQ1FsMlpXTTBJR2x1Y0hWMFZHVjRaV3hVYjB4cGJtVmhjaWdnZG1Wak5DQjJZV3gxWlNBcElIc0tDZ2tKQ1dsbUlDZ2dhVzV3ZFhSRmJtTnZaR2x1WnlBOVBTQXdJQ2tnZXdvS0NRa0pDWEpsZEhWeWJpQjJZV3gxWlRzS0Nna0pDWDBnWld4elpTQjdDZ29KQ1FrSmNtVjBkWEp1SUhOU1IwSlViMHhwYm1WaGNpZ2dkbUZzZFdVZ0tUc0tDZ2tKQ1gwS0Nna0pmUW9LQ1FsMlpXTTBJR1Z1ZGsxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUhabFl6UWdZMjlzYjNJZ0tTQjdDZ29KQ1FseVpYUjFjbTRnYVc1d2RYUlVaWGhsYkZSdlRHbHVaV0Z5S0NCamIyeHZjaUFwT3dvS0NRbDlDZ2xnT3dwOUNtWjFibU4wYVc5dUlHcHRLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdibVYzSUZkbFlXdE5ZWEFzSUhRZ1BTQnVkV3hzT3dvZ0lDQWdablZ1WTNScGIyNGdiaWhoS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR0VnSmlZZ1lTNXBjMVJsZUhSMWNtVWdKaVlnWVM1cGMxSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVWdQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVM1dFlYQndhVzVuTENCaklEMGdiQ0E5UFQwZ1JITWdmSHdnYkNBOVBUMGdSbk1zSUdnZ1BTQnNJRDA5UFNCQ2FTQjhmQ0JzSUQwOVBTQjZhVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR01nZkh3Z2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dVdWFHRnpLR0VwS1NCeVpYUjFjbTRnWlM1blpYUW9ZU2t1ZEdWNGRIVnlaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUdFdWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR01nSmlZZ2RTQW1KaUIxTG1obGFXZG9kQ0ErSURBZ2ZId2dhQ0FtSmlCMUlDWW1JR2tvZFNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCekxtZGxkRkpsYm1SbGNsUmhjbWRsZENncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMElEMDlQU0J1ZFd4c0lDWW1JQ2gwSUQwZ2JtVjNJR0ZvS0hNcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCaklEOGdkQzVtY205dFJYRjFhWEpsWTNSaGJtZDFiR0Z5S0dFcElEb2dkQzVtY205dFEzVmlaVzFoY0NoaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWMyVjBLR0VzSUdZcExDQnpMbk5sZEZKbGJtUmxjbFJoY21kbGRDaGtLU3dnWVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z2Npa3NJR1l1ZEdWNGRIVnlaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0U3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcEtHRXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJREFzSUdNZ1BTQTJPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBN0lHZ2dQQ0JqT3lCb0t5c3BZVnRvWFNBaFBUMGdkbTlwWkNBd0lDWW1JR3dyS3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkNBOVBUMGdZenNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhJb1lTa2dld29nSUNBZ0lDQWdJR3hsZENCc0lEMGdZUzUwWVhKblpYUTdDaUFnSUNBZ0lDQWdiQzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z2NpazdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQmxMbWRsZENoc0tUc0tJQ0FnSUNBZ0lDQmpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHVXVaR1ZzWlhSbEtHd3BMQ0JqTG1ScGMzQnZjMlVvS1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnZLQ2tnZXdvZ0lDQWdJQ0FnSUdVZ1BTQnVaWGNnVjJWaGEwMWhjQ3dnZENBaFBUMGdiblZzYkNBbUppQW9kQzVrYVhOd2IzTmxLQ2tzSUhRZ1BTQnVkV3hzS1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJ1TEFvZ0lDQWdJQ0FnSUdScGMzQnZjMlU2SUc4S0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z1VXMG9jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQjdmVHNLSUNBZ0lHWjFibU4wYVc5dUlIUW9iaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaGxXMjVkSUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCbFcyNWRPd29nSUNBZ0lDQWdJR3hsZENCcE93b2dJQ0FnSUNBZ0lITjNhWFJqYUNodUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlWMFZDUjB4ZlpHVndkR2hmZEdWNGRIVnlaU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2N5NW5aWFJGZUhSbGJuTnBiMjRvSWxkRlFrZE1YMlJsY0hSb1gzUmxlSFIxY21VaUtTQjhmQ0J6TG1kbGRFVjRkR1Z1YzJsdmJpZ2lUVTlhWDFkRlFrZE1YMlJsY0hSb1gzUmxlSFIxY21VaUtTQjhmQ0J6TG1kbGRFVjRkR1Z1YzJsdmJpZ2lWMFZDUzBsVVgxZEZRa2RNWDJSbGNIUm9YM1JsZUhSMWNtVWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSkZXRlJmZEdWNGRIVnlaVjltYVd4MFpYSmZZVzVwYzI5MGNtOXdhV01pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBOUlITXVaMlYwUlhoMFpXNXphVzl1S0NKRldGUmZkR1Y0ZEhWeVpWOW1hV3gwWlhKZllXNXBjMjkwY205d2FXTWlLU0I4ZkNCekxtZGxkRVY0ZEdWdWMybHZiaWdpVFU5YVgwVllWRjkwWlhoMGRYSmxYMlpwYkhSbGNsOWhibWx6YjNSeWIzQnBZeUlwSUh4OElITXVaMlYwUlhoMFpXNXphVzl1S0NKWFJVSkxTVlJmUlZoVVgzUmxlSFIxY21WZlptbHNkR1Z5WDJGdWFYTnZkSEp2Y0dsaklpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNNemRHTWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0E5SUhNdVoyVjBSWGgwWlc1emFXOXVLQ0pYUlVKSFRGOWpiMjF3Y21WemMyVmtYM1JsZUhSMWNtVmZjek4wWXlJcElIeDhJSE11WjJWMFJYaDBaVzV6YVc5dUtDSk5UMXBmVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYM016ZEdNaUtTQjhmQ0J6TG1kbGRFVjRkR1Z1YzJsdmJpZ2lWMFZDUzBsVVgxZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5ek0zUmpJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzQjJjblJqSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1BTQnpMbWRsZEVWNGRHVnVjMmx2YmlnaVYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNCMmNuUmpJaWtnZkh3Z2N5NW5aWFJGZUhSbGJuTnBiMjRvSWxkRlFrdEpWRjlYUlVKSFRGOWpiMjF3Y21WemMyVmtYM1JsZUhSMWNtVmZjSFp5ZEdNaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQTlJSE11WjJWMFJYaDBaVzV6YVc5dUtHNHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnR1WFNBOUlHa3NJR2s3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdoaGN6b2dablZ1WTNScGIyNG9iaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDaHVLU0FoUFQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdsdWFYUTZJR1oxYm1OMGFXOXVLRzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiaTVwYzFkbFlrZE1NaUEvSUhRb0lrVllWRjlqYjJ4dmNsOWlkV1ptWlhKZlpteHZZWFFpS1NBNklDaDBLQ0pYUlVKSFRGOWtaWEIwYUY5MFpYaDBkWEpsSWlrc0lIUW9JazlGVTE5MFpYaDBkWEpsWDJac2IyRjBJaWtzSUhRb0lrOUZVMTkwWlhoMGRYSmxYMmhoYkdaZlpteHZZWFFpS1N3Z2RDZ2lUMFZUWDNSbGVIUjFjbVZmYUdGc1psOW1iRzloZEY5c2FXNWxZWElpS1N3Z2RDZ2lUMFZUWDNOMFlXNWtZWEprWDJSbGNtbDJZWFJwZG1Weklpa3NJSFFvSWs5RlUxOWxiR1Z0Wlc1MFgybHVaR1Y0WDNWcGJuUWlLU3dnZENnaVQwVlRYM1psY25SbGVGOWhjbkpoZVY5dlltcGxZM1FpS1N3Z2RDZ2lRVTVIVEVWZmFXNXpkR0Z1WTJWa1gyRnljbUY1Y3lJcEtTd2dkQ2dpVDBWVFgzUmxlSFIxY21WZlpteHZZWFJmYkdsdVpXRnlJaWtzSUhRb0lrVllWRjlqYjJ4dmNsOWlkV1ptWlhKZmFHRnNabDltYkc5aGRDSXBMQ0IwS0NKWFJVSkhURjl0ZFd4MGFYTmhiWEJzWldSZmNtVnVaR1Z5WDNSdlgzUmxlSFIxY21VaUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b2Jpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhRb2JpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJwSUQwOVBTQnVkV3hzSUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0lpQXJJRzRnS3lBaUlHVjRkR1Z1YzJsdmJpQnViM1FnYzNWd2NHOXlkR1ZrTGlJcExDQnBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnUzIwb2N5d2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCN2ZTd2djaUE5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnWm5WdVkzUnBiMjRnYnloMUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdRZ1BTQjFMblJoY21kbGREc0tJQ0FnSUNBZ0lDQmtMbWx1WkdWNElDRTlQU0J1ZFd4c0lDWW1JR1V1Y21WdGIzWmxLR1F1YVc1a1pYZ3BPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0JwYmlCa0xtRjBkSEpwWW5WMFpYTXBaUzV5WlcxdmRtVW9aQzVoZEhSeWFXSjFkR1Z6VzIxZEtUc0tJQ0FnSUNBZ0lDQmtMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCdktTd2daR1ZzWlhSbElHbGJaQzVwWkYwN0NpQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCeUxtZGxkQ2hrS1RzS0lDQWdJQ0FnSUNCbUlDWW1JQ2hsTG5KbGJXOTJaU2htS1N3Z2NpNWtaV3hsZEdVb1pDa3BMQ0J1TG5KbGJHVmhjMlZUZEdGMFpYTlBaa2RsYjIxbGRISjVLR1FwTENCa0xtbHpTVzV6ZEdGdVkyVmtRblZtWm1WeVIyVnZiV1YwY25rZ1BUMDlJQ0V3SUNZbUlHUmxiR1YwWlNCa0xsOXRZWGhKYm5OMFlXNWpaVU52ZFc1MExDQjBMbTFsYlc5eWVTNW5aVzl0WlhSeWFXVnpMUzA3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaEtIVXNJR1FwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVZ0a0xtbGtYU0E5UFQwZ0lUQWdmSHdnS0dRdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaVpHbHpjRzl6WlNJc0lHOHBMQ0JwVzJRdWFXUmRJRDBnSVRBc0lIUXViV1Z0YjNKNUxtZGxiMjFsZEhKcFpYTXJLeWtzSUdRN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnNLSFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUhVdVlYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMGdhVzRnWkNsbExuVndaR0YwWlNoa1cyMWRMQ0F6TkRrMk1pazdDaUFnSUNBZ0lDQWdiR1YwSUdZZ1BTQjFMbTF2Y25Cb1FYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMGdhVzRnWmlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdabHR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjJJRDBnTUN3Z1p5QTlJSGd1YkdWdVozUm9PeUIySUR3Z1p6c2dkaXNyS1dVdWRYQmtZWFJsS0hoYmRsMHNJRE0wT1RZeUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJqS0hVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlGdGRMQ0JtSUQwZ2RTNXBibVJsZUN3Z2JTQTlJSFV1WVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3Z2VDQTlJREE3Q2lBZ0lDQWdJQ0FnYVdZZ0tHWWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCbUxtRnljbUY1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjRJRDBnWmk1MlpYSnphVzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGOGdQU0F3TENCNUlEMGdjQzVzWlc1bmRHZzdJRjhnUENCNU95QmZJQ3M5SURNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0lnUFNCd1cxOGdLeUF3WFN3Z1FTQTlJSEJiWHlBcklERmRMQ0JNSUQwZ2NGdGZJQ3NnTWwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa0xuQjFjMmdvWWl3Z1FTd2dRU3dnVEN3Z1RDd2dZaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJRzB1WVhKeVlYazdDaUFnSUNBZ0lDQWdJQ0FnSUhnZ1BTQnRMblpsY25OcGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWHlBOUlEQXNJSGtnUFNCd0xteGxibWQwYUNBdklETWdMU0F4T3lCZklEd2dlVHNnWHlBclBTQXpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdYeUFySURBc0lFRWdQU0JmSUNzZ01Td2dUQ0E5SUY4Z0t5QXlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaQzV3ZFhOb0tHSXNJRUVzSUVFc0lFd3NJRXdzSUdJcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnYm1WM0lDaFpZeWhrS1NBK0lEWTFOVE0xSUQ4Z1duTWdPaUJaY3lrb1pDd2dNU2s3Q2lBZ0lDQWdJQ0FnZGk1MlpYSnphVzl1SUQwZ2VEc0tJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlISXVaMlYwS0hVcE93b2dJQ0FnSUNBZ0lHY2dKaVlnWlM1eVpXMXZkbVVvWnlrc0lISXVjMlYwS0hVc0lIWXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYUNoMUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdRZ1BTQnlMbWRsZENoMUtUc0tJQ0FnSUNBZ0lDQnBaaUFvWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJSFV1YVc1a1pYZzdDaUFnSUNBZ0lDQWdJQ0FnSUdZZ0lUMDlJRzUxYkd3Z0ppWWdaQzUyWlhKemFXOXVJRHdnWmk1MlpYSnphVzl1SUNZbUlHTW9kU2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR01vZFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJdVoyVjBLSFVwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCblpYUTZJR0VzQ2lBZ0lDQWdJQ0FnZFhCa1lYUmxPaUJzTEFvZ0lDQWdJQ0FnSUdkbGRGZHBjbVZtY21GdFpVRjBkSEpwWW5WMFpUb2dhQW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJsWnloekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUc0dWFYTlhaV0pIVERJc0lISTdDaUFnSUNCbWRXNWpkR2x2YmlCdktHUXBJSHNLSUNBZ0lDQWdJQ0J5SUQwZ1pEc0tJQ0FnSUgwS0lDQWdJR3hsZENCaExDQnNPd29nSUNBZ1puVnVZM1JwYjI0Z1l5aGtLU0I3Q2lBZ0lDQWdJQ0FnWVNBOUlHUXVkSGx3WlN3Z2JDQTlJR1F1WW5sMFpYTlFaWEpGYkdWdFpXNTBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYUNoa0xDQm1LU0I3Q2lBZ0lDQWdJQ0FnY3k1a2NtRjNSV3hsYldWdWRITW9jaXdnWml3Z1lTd2daQ0FxSUd3cExDQjBMblZ3WkdGMFpTaG1MQ0J5TENBeEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSFVvWkN3Z1ppd2diU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaHRJRDA5UFNBd0tTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJSGdzSUhZN0NpQWdJQ0FnSUNBZ2FXWWdLR2twSUhnZ1BTQnpMQ0IySUQwZ0ltUnlZWGRGYkdWdFpXNTBjMGx1YzNSaGJtTmxaQ0k3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvZUNBOUlHVXVaMlYwS0NKQlRrZE1SVjlwYm5OMFlXNWpaV1JmWVhKeVlYbHpJaWtzSUhZZ1BTQWlaSEpoZDBWc1pXMWxiblJ6U1c1emRHRnVZMlZrUVU1SFRFVWlMQ0I0SUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1TVzVrWlhobFpFSjFabVpsY2xKbGJtUmxjbVZ5T2lCMWMybHVaeUJVU0ZKRlJTNUpibk4wWVc1alpXUkNkV1ptWlhKSFpXOXRaWFJ5ZVNCaWRYUWdhR0Z5WkhkaGNtVWdaRzlsY3lCdWIzUWdjM1Z3Y0c5eWRDQmxlSFJsYm5OcGIyNGdRVTVIVEVWZmFXNXpkR0Z1WTJWa1gyRnljbUY1Y3k0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I0VzNaZEtISXNJR1lzSUdFc0lHUWdLaUJzTENCdEtTd2dkQzUxY0dSaGRHVW9aaXdnY2l3Z2JTazdDaUFnSUNCOUNpQWdJQ0IwYUdsekxuTmxkRTF2WkdVZ1BTQnZMQ0IwYUdsekxuTmxkRWx1WkdWNElEMGdZeXdnZEdocGN5NXlaVzVrWlhJZ1BTQm9MQ0IwYUdsekxuSmxibVJsY2tsdWMzUmhibU5sY3lBOUlIVTdDbjBLWm5WdVkzUnBiMjRnZEdjb2N5a2dld29nSUNBZ2JHVjBJR1VnUFNCN0NpQWdJQ0FnSUNBZ1oyVnZiV1YwY21sbGN6b2dNQ3dLSUNBZ0lDQWdJQ0IwWlhoMGRYSmxjem9nTUFvZ0lDQWdmU3dnZENBOUlIc0tJQ0FnSUNBZ0lDQm1jbUZ0WlRvZ01Dd0tJQ0FnSUNBZ0lDQmpZV3hzY3pvZ01Dd0tJQ0FnSUNBZ0lDQjBjbWxoYm1kc1pYTTZJREFzQ2lBZ0lDQWdJQ0FnY0c5cGJuUnpPaUF3TEFvZ0lDQWdJQ0FnSUd4cGJtVnpPaUF3Q2lBZ0lDQjlPd29nSUNBZ1puVnVZM1JwYjI0Z2JpaHlMQ0J2TENCaEtTQjdDaUFnSUNBZ0lDQWdjM2RwZEdOb0tIUXVZMkZzYkhNckt5d2dieWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTkRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRdWRISnBZVzVuYkdWeklDczlJR0VnS2lBb2NpQXZJRE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFF1YkdsdVpYTWdLejBnWVNBcUlDaHlJQzhnTWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F6T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEM1c2FXNWxjeUFyUFNCaElDb2dLSElnTFNBeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMExteHBibVZ6SUNzOUlHRWdLaUJ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFF1Y0c5cGJuUnpJQ3M5SUdFZ0tpQnlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRFbHVabTg2SUZWdWEyNXZkMjRnWkhKaGR5QnRiMlJsT2lJc0lHOHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhU2dwSUhzS0lDQWdJQ0FnSUNCMExtWnlZVzFsS3lzc0lIUXVZMkZzYkhNZ1BTQXdMQ0IwTG5SeWFXRnVaMnhsY3lBOUlEQXNJSFF1Y0c5cGJuUnpJRDBnTUN3Z2RDNXNhVzVsY3lBOUlEQTdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJRzFsYlc5eWVUb2daU3dLSUNBZ0lDQWdJQ0J5Wlc1a1pYSTZJSFFzQ2lBZ0lDQWdJQ0FnY0hKdlozSmhiWE02SUc1MWJHd3NDaUFnSUNBZ0lDQWdZWFYwYjFKbGMyVjBPaUFoTUN3S0lDQWdJQ0FnSUNCeVpYTmxkRG9nYVN3S0lDQWdJQ0FnSUNCMWNHUmhkR1U2SUc0S0lDQWdJSDA3Q24wS2RtRnlJRkZ6SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJ2ZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdiblZzYkN3Z2RDQTlJREVzSUc0Z1BTQXhMQ0JwSUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JuVnNiQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBiV0ZuWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2c2SUdrS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG0xaFowWnBiSFJsY2lBOUlISjBMQ0IwYUdsekxtMXBia1pwYkhSbGNpQTlJSEowTENCMGFHbHpMbmR5WVhCU0lEMGdkblFzSUhSb2FYTXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdJVEVzSUhSb2FYTXVabXhwY0ZrZ1BTQWhNU3dnZEdocGN5NTFibkJoWTJ0QmJHbG5ibTFsYm5RZ1BTQXhPd29nSUNBZ2ZRcDlPd3BSY3k1d2NtOTBiM1I1Y0dVdWFYTkVZWFJoVkdWNGRIVnlaVEpFUVhKeVlYa2dQU0FoTURzS1puVnVZM1JwYjI0Z2JtY29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJSE5iTUYwZ0xTQmxXekJkT3dwOUNtWjFibU4wYVc5dUlHbG5LSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRmljeWhsV3pGZEtTQXRJRTFoZEdndVlXSnpLSE5iTVYwcE93cDlDbVoxYm1OMGFXOXVJRTVzS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ01Td2diaUE5SUdVdWFYTkpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTQS9JR1V1WkdGMFlTNWhjbkpoZVNBNklHVXVZWEp5WVhrN0NpQWdJQ0J1SUdsdWMzUmhibU5sYjJZZ1NXNTBPRUZ5Y21GNUlEOGdkQ0E5SURFeU55QTZJRzRnYVc1emRHRnVZMlZ2WmlCSmJuUXhOa0Z5Y21GNUlEOGdkQ0E5SURNeU56WTNJRG9nYmlCcGJuTjBZVzVqWlc5bUlFbHVkRE15UVhKeVlYa2dQeUIwSUQwZ01qRTBOelE0TXpZME55QTZJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1UVzl5Y0doMFlYSm5aWFJ6T2lCVmJuTjFjSEJ2Y25SbFpDQnRiM0p3YUNCaGRIUnlhV0oxZEdVZ1pHRjBZU0IwZVhCbE9pQWlMQ0J1S1N3Z2N5NWthWFpwWkdWVFkyRnNZWElvZENrN0NuMEtablZ1WTNScGIyNGdjbWNvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQjdmU3dnYVNBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb09Da3NJSElnUFNCdVpYY2dWMlZoYTAxaGNDd2dieUE5SUc1bGR5Qk5MQ0JoSUQwZ1cxMDdDaUFnSUNCbWIzSW9iR1YwSUdNZ1BTQXdPeUJqSUR3Z09Ec2dZeXNyS1dGYlkxMGdQU0JiQ2lBZ0lDQWdJQ0FnWXl3S0lDQWdJQ0FnSUNBd0NpQWdJQ0JkT3dvZ0lDQWdablZ1WTNScGIyNGdiQ2hqTENCb0xDQjFMQ0JrS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCakxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjenNLSUNBZ0lDQWdJQ0JwWmlBb1pTNXBjMWRsWWtkTU1pQTlQVDBnSVRBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0JvTG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaTVzWlc1bmRHZ3NJSGdnUFNCeUxtZGxkQ2hvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hnZ1BUMDlJSFp2YVdRZ01DQjhmQ0I0TG1OdmRXNTBJQ0U5UFNCdEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRJQ0U5UFNCMmIybGtJREFnSmlZZ2VDNTBaWGgwZFhKbExtUnBjM0J2YzJVb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ2FDNXRiM0p3YUVGMGRISnBZblYwWlhNdWJtOXliV0ZzSUNFOVBTQjJiMmxrSURBc0lGOGdQU0JvTG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaXdnZVNBOUlHZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxtNXZjbTFoYkNCOGZDQmJYU3dnWWlBOUlHZ3VZWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaTVqYjNWdWRDd2dRU0E5SUhBZ1BUMDlJQ0V3SUQ4Z01pQTZJREVzSUV3Z1BTQmlJQ29nUVN3Z1NTQTlJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JNSUQ0Z1pTNXRZWGhVWlhoMGRYSmxVMmw2WlNBbUppQW9TU0E5SUUxaGRHZ3VZMlZwYkNoTUlDOGdaUzV0WVhoVVpYaDBkWEpsVTJsNlpTa3NJRXdnUFNCbExtMWhlRlJsZUhSMWNtVlRhWHBsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnJJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hNSUNvZ1NTQXFJRFFnS2lCdEtTd2dRaUE5SUc1bGR5QlJjeWhyTENCTUxDQkpMQ0J0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVJdVptOXliV0YwSUQwZ1kzUXNJRUl1ZEhsd1pTQTlJRzV1TENCQ0xtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdVQ0E5SUVFZ0tpQTBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjNJRDBnTURzZ2R5QThJRzA3SUhjckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JmVzNkZExDQkVJRDBnZVZ0M1hTd2dWU0E5SUV3Z0tpQkpJQ29nTkNBcUlIYzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JHSUQwZ01Ec2dSaUE4SUVVdVkyOTFiblE3SUVZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hGTENCR0tTd2dSUzV1YjNKdFlXeHBlbVZrSUQwOVBTQWhNQ0FtSmlCT2JDaHZMQ0JGS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFOGdQU0JHSUNvZ1VEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ExdFZJQ3NnVHlBcklEQmRJRDBnYnk1NExDQnJXMVVnS3lCUElDc2dNVjBnUFNCdkxua3NJR3RiVlNBcklFOGdLeUF5WFNBOUlHOHVlaXdnYTF0VklDc2dUeUFySUROZElEMGdNQ3dnY0NBOVBUMGdJVEFnSmlZZ0tHOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hFTENCR0tTd2dSQzV1YjNKdFlXeHBlbVZrSUQwOVBTQWhNQ0FtSmlCT2JDaHZMQ0JFS1N3Z2ExdFZJQ3NnVHlBcklEUmRJRDBnYnk1NExDQnJXMVVnS3lCUElDc2dOVjBnUFNCdkxua3NJR3RiVlNBcklFOGdLeUEyWFNBOUlHOHVlaXdnYTF0VklDc2dUeUFySURkZElEMGdNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIzVnVkRG9nYlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwZFhKbE9pQkNMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOcGVtVTZJRzVsZHlCWUtFd3NJRWtwQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TENCeUxuTmxkQ2hvTENCNEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlEQTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY0NBOUlEQTdJSEFnUENCbUxteGxibWQwYURzZ2NDc3JLWFlnS3owZ1psdHdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCb0xtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJRDhnTVNBNklERWdMU0IyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtMbWRsZEZWdWFXWnZjbTF6S0NrdWMyVjBWbUZzZFdVb2N5d2dJbTF2Y25Cb1ZHRnlaMlYwUW1GelpVbHVabXgxWlc1alpTSXNJR2NwTENCa0xtZGxkRlZ1YVdadmNtMXpLQ2t1YzJWMFZtRnNkV1VvY3l3Z0ltMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeUlzSUdZcExDQmtMbWRsZEZWdWFXWnZjbTF6S0NrdWMyVjBWbUZzZFdVb2N5d2dJbTF2Y25Cb1ZHRnlaMlYwYzFSbGVIUjFjbVVpTENCNExuUmxlSFIxY21Vc0lIUXBMQ0JrTG1kbGRGVnVhV1p2Y20xektDa3VjMlYwVm1Gc2RXVW9jeXdnSW0xdmNuQm9WR0Z5WjJWMGMxUmxlSFIxY21WVGFYcGxJaXdnZUM1emFYcGxLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUdZZ1BUMDlJSFp2YVdRZ01DQS9JREFnT2lCbUxteGxibWQwYUN3Z2VDQTlJRzViYUM1cFpGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDRJRDA5UFNCMmIybGtJREFnZkh3Z2VDNXNaVzVuZEdnZ0lUMDlJRzBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhnZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBN0lIa2dQQ0J0T3lCNUt5c3BlRnQ1WFNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVXMmd1YVdSZElEMGdlRHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGtnUFNBd095QjVJRHdnYlRzZ2VTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdlRnQ1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKYk1GMGdQU0I1TENCaVd6RmRJRDBnWmx0NVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjRMbk52Y25Rb2FXY3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhrZ1BTQXdPeUI1SUR3Z09Ec2dlU3NyS1hrZ1BDQnRJQ1ltSUhoYmVWMWJNVjBnUHlBb1lWdDVYVnN3WFNBOUlIaGJlVjFiTUYwc0lHRmJlVjFiTVYwZ1BTQjRXM2xkV3pGZEtTQTZJQ2hoVzNsZFd6QmRJRDBnVG5WdFltVnlMazFCV0Y5VFFVWkZYMGxPVkVWSFJWSXNJR0ZiZVYxYk1WMGdQU0F3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdZUzV6YjNKMEtHNW5LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCb0xtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3Z1p5QTlJR2d1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbTV2Y20xaGJDd2djQ0E5SURBN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBN0lIa2dQQ0E0T3lCNUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQmhXM2xkTENCQklEMGdZbHN3WFN3Z1RDQTlJR0piTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQklDRTlQU0JPZFcxaVpYSXVUVUZZWDFOQlJrVmZTVTVVUlVkRlVpQW1KaUJNSUQ4Z0tIWWdKaVlnYUM1blpYUkJkSFJ5YVdKMWRHVW9JbTF2Y25Cb1ZHRnlaMlYwSWlBcklIa3BJQ0U5UFNCMlcwRmRJQ1ltSUdndWMyVjBRWFIwY21saWRYUmxLQ0p0YjNKd2FGUmhjbWRsZENJZ0t5QjVMQ0IyVzBGZEtTd2daeUFtSmlCb0xtZGxkRUYwZEhKcFluVjBaU2dpYlc5eWNHaE9iM0p0WVd3aUlDc2dlU2tnSVQwOUlHZGJRVjBnSmlZZ2FDNXpaWFJCZEhSeWFXSjFkR1VvSW0xdmNuQm9UbTl5YldGc0lpQXJJSGtzSUdkYlFWMHBMQ0JwVzNsZElEMGdUQ3dnY0NBclBTQk1LU0E2SUNoMklDWW1JR2d1YUdGelFYUjBjbWxpZFhSbEtDSnRiM0p3YUZSaGNtZGxkQ0lnS3lCNUtTQTlQVDBnSVRBZ0ppWWdhQzVrWld4bGRHVkJkSFJ5YVdKMWRHVW9JbTF2Y25Cb1ZHRnlaMlYwSWlBcklIa3BMQ0JuSUNZbUlHZ3VhR0Z6UVhSMGNtbGlkWFJsS0NKdGIzSndhRTV2Y20xaGJDSWdLeUI1S1NBOVBUMGdJVEFnSmlZZ2FDNWtaV3hsZEdWQmRIUnlhV0oxZEdVb0ltMXZjbkJvVG05eWJXRnNJaUFySUhrcExDQnBXM2xkSUQwZ01DazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQm9MbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsSUQ4Z01TQTZJREVnTFNCd093b2dJQ0FnSUNBZ0lDQWdJQ0JrTG1kbGRGVnVhV1p2Y20xektDa3VjMlYwVm1Gc2RXVW9jeXdnSW0xdmNuQm9WR0Z5WjJWMFFtRnpaVWx1Wm14MVpXNWpaU0lzSUY4cExDQmtMbWRsZEZWdWFXWnZjbTF6S0NrdWMyVjBWbUZzZFdVb2N5d2dJbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3lJc0lHa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnZFhCa1lYUmxPaUJzQ2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUhObktITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCbWRXNWpkR2x2YmlCeUtHd3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzR1Y21WdVpHVnlMbVp5WVcxbExDQm9JRDBnYkM1blpXOXRaWFJ5ZVN3Z2RTQTlJR1V1WjJWMEtHd3NJR2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwTG1kbGRDaDFLU0FoUFQwZ1l5QW1KaUFvWlM1MWNHUmhkR1VvZFNrc0lHa3VjMlYwS0hVc0lHTXBLU3dnYkM1cGMwbHVjM1JoYm1ObFpFMWxjMmdnSmlZZ0tHd3VhR0Z6UlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJR0VwSUQwOVBTQWhNU0FtSmlCc0xtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQmhLU3dnZEM1MWNHUmhkR1VvYkM1cGJuTjBZVzVqWlUxaGRISnBlQ3dnTXpRNU5qSXBMQ0JzTG1sdWMzUmhibU5sUTI5c2IzSWdJVDA5SUc1MWJHd2dKaVlnZEM1MWNHUmhkR1VvYkM1cGJuTjBZVzVqWlVOdmJHOXlMQ0F6TkRrMk1pa3BMQ0IxT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2J5Z3BJSHNLSUNBZ0lDQWdJQ0JwSUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJoS0d3cElIc0tJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHd3VkR0Z5WjJWME93b2dJQ0FnSUNBZ0lHTXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpWkdsemNHOXpaU0lzSUdFcExDQjBMbkpsYlc5MlpTaGpMbWx1YzNSaGJtTmxUV0YwY21sNEtTd2dZeTVwYm5OMFlXNWpaVU52Ykc5eUlDRTlQU0J1ZFd4c0lDWW1JSFF1Y21WdGIzWmxLR011YVc1emRHRnVZMlZEYjJ4dmNpazdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJSFZ3WkdGMFpUb2djaXdLSUNBZ0lDQWdJQ0JrYVhOd2IzTmxPaUJ2Q2lBZ0lDQjlPd3A5Q25aaGNpQnRZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNTFiR3dzSUhRZ1BTQXhMQ0J1SUQwZ01Td2dhU0E5SURFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1MWJHd3BPd29nSUNBZ0lDQWdJSFJvYVhNdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9PaUJwQ2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV0WVdkR2FXeDBaWElnUFNCeWRDd2dkR2hwY3k1dGFXNUdhV3gwWlhJZ1BTQnlkQ3dnZEdocGN5NTNjbUZ3VWlBOUlIWjBMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhMQ0IwYUdsekxtWnNhWEJaSUQwZ0lURXNJSFJvYVhNdWRXNXdZV05yUVd4cFoyNXRaVzUwSUQwZ01Uc0tJQ0FnSUgwS2ZUc0tiV0V1Y0hKdmRHOTBlWEJsTG1selJHRjBZVlJsZUhSMWNtVXpSQ0E5SUNFd093cDJZWElnYkdnZ1BTQnVaWGNnYjNRc0lHTm9JRDBnYm1WM0lGRnpMQ0JvYUNBOUlHNWxkeUJ0WVN3Z2RXZ2dQU0J1WlhjZ2Eya3NJRUpzSUQwZ1cxMHNJSHBzSUQwZ1cxMHNJRlZzSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNneE5pa3NJRTlzSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNnNUtTd2dTR3dnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0RRcE93cG1kVzVqZEdsdmJpQldhU2h6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlITmJNRjA3Q2lBZ0lDQnBaaUFvYmlBOFBTQXdJSHg4SUc0Z1BpQXdLU0J5WlhSMWNtNGdjenNLSUNBZ0lHeGxkQ0JwSUQwZ1pTQXFJSFFzSUhJZ1BTQkNiRnRwWFRzS0lDQWdJR2xtSUNoeUlEMDlQU0IyYjJsa0lEQWdKaVlnS0hJZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtHa3BMQ0JDYkZ0cFhTQTlJSElwTENCbElDRTlQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JpNTBiMEZ5Y21GNUtISXNJREFwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlERXNJR0VnUFNBd095QnZJQ0U5UFNCbE95QXJLMjhwWVNBclBTQjBMQ0J6VzI5ZExuUnZRWEp5WVhrb2Npd2dZU2s3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnY2pzS2ZRcG1kVzVqZEdsdmJpQk5kQ2h6TENCbEtTQjdDaUFnSUNCcFppQW9jeTVzWlc1bmRHZ2dJVDA5SUdVdWJHVnVaM1JvS1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGFXWWdLSE5iZEYwZ0lUMDlJR1ZiZEYwcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUhKbGRIVnliaUFoTURzS2ZRcG1kVzVqZEdsdmJpQmZkQ2h6TENCbEtTQjdDaUFnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3BjMXQwWFNBOUlHVmJkRjA3Q24wS1puVnVZM1JwYjI0Z1MzTW9jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0I2YkZ0bFhUc0tJQ0FnSUhRZ1BUMDlJSFp2YVdRZ01DQW1KaUFvZENBOUlHNWxkeUJKYm5Rek1rRnljbUY1S0dVcExDQjZiRnRsWFNBOUlIUXBPd29nSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBaFBUMGdaVHNnS3l0dUtYUmJibDBnUFNCekxtRnNiRzlqWVhSbFZHVjRkSFZ5WlZWdWFYUW9LVHNLSUNBZ0lISmxkSFZ5YmlCME93cDlDbVoxYm1OMGFXOXVJRzluS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUhSYk1GMGdJVDA5SUdVZ0ppWWdLSE11ZFc1cFptOXliVEZtS0hSb2FYTXVZV1JrY2l3Z1pTa3NJSFJiTUYwZ1BTQmxLVHNLZlFwbWRXNWpkR2x2YmlCaFp5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRmphR1U3Q2lBZ0lDQnBaaUFvWlM1NElDRTlQU0IyYjJsa0lEQXBJQ2gwV3pCZElDRTlQU0JsTG5nZ2ZId2dkRnN4WFNBaFBUMGdaUzU1S1NBbUppQW9jeTUxYm1sbWIzSnRNbVlvZEdocGN5NWhaR1J5TENCbExuZ3NJR1V1ZVNrc0lIUmJNRjBnUFNCbExuZ3NJSFJiTVYwZ1BTQmxMbmtwT3dvZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ2FXWWdLRTEwS0hRc0lHVXBLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdjeTUxYm1sbWIzSnRNbVoyS0hSb2FYTXVZV1JrY2l3Z1pTa3NJRjkwS0hRc0lHVXBPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJR3huS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUdsbUlDaGxMbmdnSVQwOUlIWnZhV1FnTUNrZ0tIUmJNRjBnSVQwOUlHVXVlQ0I4ZkNCMFd6RmRJQ0U5UFNCbExua2dmSHdnZEZzeVhTQWhQVDBnWlM1NktTQW1KaUFvY3k1MWJtbG1iM0p0TTJZb2RHaHBjeTVoWkdSeUxDQmxMbmdzSUdVdWVTd2daUzU2S1N3Z2RGc3dYU0E5SUdVdWVDd2dkRnN4WFNBOUlHVXVlU3dnZEZzeVhTQTlJR1V1ZWlrN0NpQWdJQ0JsYkhObElHbG1JQ2hsTG5JZ0lUMDlJSFp2YVdRZ01Da2dLSFJiTUYwZ0lUMDlJR1V1Y2lCOGZDQjBXekZkSUNFOVBTQmxMbWNnZkh3Z2RGc3lYU0FoUFQwZ1pTNWlLU0FtSmlBb2N5NTFibWxtYjNKdE0yWW9kR2hwY3k1aFpHUnlMQ0JsTG5Jc0lHVXVaeXdnWlM1aUtTd2dkRnN3WFNBOUlHVXVjaXdnZEZzeFhTQTlJR1V1Wnl3Z2RGc3lYU0E5SUdVdVlpazdDaUFnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JwWmlBb1RYUW9kQ3dnWlNrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCekxuVnVhV1p2Y20welpuWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1kyY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdhV1lnS0dVdWVDQWhQVDBnZG05cFpDQXdLU0FvZEZzd1hTQWhQVDBnWlM1NElIeDhJSFJiTVYwZ0lUMDlJR1V1ZVNCOGZDQjBXekpkSUNFOVBTQmxMbm9nZkh3Z2RGc3pYU0FoUFQwZ1pTNTNLU0FtSmlBb2N5NTFibWxtYjNKdE5HWW9kR2hwY3k1aFpHUnlMQ0JsTG5nc0lHVXVlU3dnWlM1NkxDQmxMbmNwTENCMFd6QmRJRDBnWlM1NExDQjBXekZkSUQwZ1pTNTVMQ0IwV3pKZElEMGdaUzU2TENCMFd6TmRJRDBnWlM1M0tUc0tJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJR2xtSUNoTmRDaDBMQ0JsS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhNdWRXNXBabTl5YlRSbWRpaDBhR2x6TG1Ga1pISXNJR1VwTENCZmRDaDBMQ0JsS1RzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCb1p5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRmphR1VzSUc0Z1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ2FXWWdLRzRnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hOZENoMExDQmxLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSE11ZFc1cFptOXliVTFoZEhKcGVESm1kaWgwYUdsekxtRmtaSElzSUNFeExDQmxLU3dnWDNRb2RDd2daU2s3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hOZENoMExDQnVLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJRWhzTG5ObGRDaHVLU3dnY3k1MWJtbG1iM0p0VFdGMGNtbDRNbVoyS0hSb2FYTXVZV1JrY2l3Z0lURXNJRWhzS1N3Z1gzUW9kQ3dnYmlrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z2RXY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsTENCdUlEMGdaUzVsYkdWdFpXNTBjenNLSUNBZ0lHbG1JQ2h1SUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQnBaaUFvVFhRb2RDd2daU2twSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0J6TG5WdWFXWnZjbTFOWVhSeWFYZ3pabllvZEdocGN5NWhaR1J5TENBaE1Td2daU2tzSUY5MEtIUXNJR1VwT3dvZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQnBaaUFvVFhRb2RDd2diaWtwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JQYkM1elpYUW9iaWtzSUhNdWRXNXBabTl5YlUxaGRISnBlRE5tZGloMGFHbHpMbUZrWkhJc0lDRXhMQ0JQYkNrc0lGOTBLSFFzSUc0cE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlHUm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlN3Z2JpQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQnBaaUFvYmlBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0UxMEtIUXNJR1VwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnY3k1MWJtbG1iM0p0VFdGMGNtbDROR1oyS0hSb2FYTXVZV1JrY2l3Z0lURXNJR1VwTENCZmRDaDBMQ0JsS1RzS0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdhV1lnS0UxMEtIUXNJRzRwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnVld3dWMyVjBLRzRwTENCekxuVnVhV1p2Y20xTllYUnlhWGcwWm5Zb2RHaHBjeTVoWkdSeUxDQWhNU3dnVld3cExDQmZkQ2gwTENCdUtUc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQm1aeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVN0NpQWdJQ0IwV3pCZElDRTlQU0JsSUNZbUlDaHpMblZ1YVdadmNtMHhhU2gwYUdsekxtRmtaSElzSUdVcExDQjBXekJkSUQwZ1pTazdDbjBLWm5WdVkzUnBiMjRnY0djb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ1RYUW9kQ3dnWlNrZ2ZId2dLSE11ZFc1cFptOXliVEpwZGloMGFHbHpMbUZrWkhJc0lHVXBMQ0JmZENoMExDQmxLU2s3Q24wS1puVnVZM1JwYjI0Z2JXY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdUWFFvZEN3Z1pTa2dmSHdnS0hNdWRXNXBabTl5YlROcGRpaDBhR2x6TG1Ga1pISXNJR1VwTENCZmRDaDBMQ0JsS1NrN0NuMEtablZ1WTNScGIyNGdaMmNvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobE93b2dJQ0FnVFhRb2RDd2daU2tnZkh3Z0tITXVkVzVwWm05eWJUUnBkaWgwYUdsekxtRmtaSElzSUdVcExDQmZkQ2gwTENCbEtTazdDbjBLWm5WdVkzUnBiMjRnZUdjb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ2RGc3dYU0FoUFQwZ1pTQW1KaUFvY3k1MWJtbG1iM0p0TVhWcEtIUm9hWE11WVdSa2Npd2daU2tzSUhSYk1GMGdQU0JsS1RzS2ZRcG1kVzVqZEdsdmJpQjVaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVN0NpQWdJQ0JOZENoMExDQmxLU0I4ZkNBb2N5NTFibWxtYjNKdE1uVnBkaWgwYUdsekxtRmtaSElzSUdVcExDQmZkQ2gwTENCbEtTazdDbjBLWm5WdVkzUnBiMjRnZG1jb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ1RYUW9kQ3dnWlNrZ2ZId2dLSE11ZFc1cFptOXliVE4xYVhZb2RHaHBjeTVoWkdSeUxDQmxLU3dnWDNRb2RDd2daU2twT3dwOUNtWjFibU4wYVc5dUlGOW5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJRTEwS0hRc0lHVXBJSHg4SUNoekxuVnVhV1p2Y20wMGRXbDJLSFJvYVhNdVlXUmtjaXdnWlNrc0lGOTBLSFFzSUdVcEtUc0tmUXBtZFc1amRHbHZiaUJOWnloekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVkyRmphR1VzSUdrZ1BTQjBMbUZzYkc5allYUmxWR1Y0ZEhWeVpWVnVhWFFvS1RzS0lDQWdJRzViTUYwZ0lUMDlJR2tnSmlZZ0tITXVkVzVwWm05eWJURnBLSFJvYVhNdVlXUmtjaXdnYVNrc0lHNWJNRjBnUFNCcEtTd2dkQzV6WVdabFUyVjBWR1Y0ZEhWeVpUSkVLR1VnZkh3Z2JHZ3NJR2twT3dwOUNtWjFibU4wYVc5dUlHSm5LSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVqWVdOb1pTd2dhU0E5SUhRdVlXeHNiMk5oZEdWVVpYaDBkWEpsVlc1cGRDZ3BPd29nSUNBZ2Jsc3dYU0FoUFQwZ2FTQW1KaUFvY3k1MWJtbG1iM0p0TVdrb2RHaHBjeTVoWkdSeUxDQnBLU3dnYmxzd1hTQTlJR2twTENCMExuTmxkRlJsZUhSMWNtVXpSQ2hsSUh4OElHaG9MQ0JwS1RzS2ZRcG1kVzVqZEdsdmJpQjNaeWh6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTJGamFHVXNJR2tnUFNCMExtRnNiRzlqWVhSbFZHVjRkSFZ5WlZWdWFYUW9LVHNLSUNBZ0lHNWJNRjBnSVQwOUlHa2dKaVlnS0hNdWRXNXBabTl5YlRGcEtIUm9hWE11WVdSa2Npd2dhU2tzSUc1Yk1GMGdQU0JwS1N3Z2RDNXpZV1psVTJWMFZHVjRkSFZ5WlVOMVltVW9aU0I4ZkNCMWFDd2dhU2s3Q24wS1puVnVZM1JwYjI0Z1UyY29jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU5oWTJobExDQnBJRDBnZEM1aGJHeHZZMkYwWlZSbGVIUjFjbVZWYm1sMEtDazdDaUFnSUNCdVd6QmRJQ0U5UFNCcElDWW1JQ2h6TG5WdWFXWnZjbTB4YVNoMGFHbHpMbUZrWkhJc0lHa3BMQ0J1V3pCZElEMGdhU2tzSUhRdWMyVjBWR1Y0ZEhWeVpUSkVRWEp5WVhrb1pTQjhmQ0JqYUN3Z2FTazdDbjBLWm5WdVkzUnBiMjRnVkdjb2N5a2dld29nSUNBZ2MzZHBkR05vS0hNcGV3b2dJQ0FnSUNBZ0lHTmhjMlVnTlRFeU5qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzluT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmpRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmhaenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOalkxT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JHYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJOam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdObk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk56UTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJvWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpjMU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkV2M3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTmpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHUm5Pd29nSUNBZ0lDQWdJR05oYzJVZ05URXlORG9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamN3T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJOem9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamN4T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NHYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamN5T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JXYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJPVG9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamN6T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1oyYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBMU1USTFPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZUdjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU5Eb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSGxuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T1RVNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjJaenNLSUNBZ0lDQWdJQ0JqWVhObElETTJNamsyT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1gyYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNVGs0T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T1RnNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpNd05qb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qZ3lPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM09Ub0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazVPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNRGM2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaVp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qZ3dPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNREE2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOak13T0RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprek9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkMmM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk0T1RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTXpBek9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1URTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVNam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZObk93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlFVm5LSE1zSUdVcElIc0tJQ0FnSUhNdWRXNXBabTl5YlRGbWRpaDBhR2x6TG1Ga1pISXNJR1VwT3dwOUNtWjFibU4wYVc5dUlFRm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnVm1rb1pTd2dkR2hwY3k1emFYcGxMQ0F5S1RzS0lDQWdJSE11ZFc1cFptOXliVEptZGloMGFHbHpMbUZrWkhJc0lIUXBPd3A5Q21aMWJtTjBhVzl1SUVObktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdWbWtvWlN3Z2RHaHBjeTV6YVhwbExDQXpLVHNLSUNBZ0lITXVkVzVwWm05eWJUTm1kaWgwYUdsekxtRmtaSElzSUhRcE93cDlDbVoxYm1OMGFXOXVJRXhuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ1Zta29aU3dnZEdocGN5NXphWHBsTENBMEtUc0tJQ0FnSUhNdWRXNXBabTl5YlRSbWRpaDBhR2x6TG1Ga1pISXNJSFFwT3dwOUNtWjFibU4wYVc5dUlGSm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnVm1rb1pTd2dkR2hwY3k1emFYcGxMQ0EwS1RzS0lDQWdJSE11ZFc1cFptOXliVTFoZEhKcGVESm1kaWgwYUdsekxtRmtaSElzSUNFeExDQjBLVHNLZlFwbWRXNWpkR2x2YmlCUVp5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRlpwS0dVc0lIUm9hWE11YzJsNlpTd2dPU2s3Q2lBZ0lDQnpMblZ1YVdadmNtMU5ZWFJ5YVhnelpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z2RDazdDbjBLWm5WdVkzUnBiMjRnU1djb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQldhU2hsTENCMGFHbHpMbk5wZW1Vc0lERTJLVHNLSUNBZ0lITXVkVzVwWm05eWJVMWhkSEpwZURSbWRpaDBhR2x6TG1Ga1pISXNJQ0V4TENCMEtUc0tmUXBtZFc1amRHbHZiaUJFWnloekxDQmxLU0I3Q2lBZ0lDQnpMblZ1YVdadmNtMHhhWFlvZEdocGN5NWhaR1J5TENCbEtUc0tmUXBtZFc1amRHbHZiaUJHWnloekxDQmxLU0I3Q2lBZ0lDQnpMblZ1YVdadmNtMHlhWFlvZEdocGN5NWhaR1J5TENCbEtUc0tmUXBtZFc1amRHbHZiaUJPWnloekxDQmxLU0I3Q2lBZ0lDQnpMblZ1YVdadmNtMHphWFlvZEdocGN5NWhaR1J5TENCbEtUc0tmUXBtZFc1amRHbHZiaUJDWnloekxDQmxLU0I3Q2lBZ0lDQnpMblZ1YVdadmNtMDBhWFlvZEdocGN5NWhaR1J5TENCbEtUc0tmUXBtZFc1amRHbHZiaUI2WnloekxDQmxLU0I3Q2lBZ0lDQnpMblZ1YVdadmNtMHhkV2wyS0hSb2FYTXVZV1JrY2l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnVldjb2N5d2daU2tnZXdvZ0lDQWdjeTUxYm1sbWIzSnRNblZwZGloMGFHbHpMbUZrWkhJc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUU5bktITXNJR1VwSUhzS0lDQWdJSE11ZFc1cFptOXliVE4xYVhZb2RHaHBjeTVoWkdSeUxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCSVp5aHpMQ0JsS1NCN0NpQWdJQ0J6TG5WdWFXWnZjbTAwZFdsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z2EyY29jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCbExteGxibWQwYUN3Z2FTQTlJRXR6S0hRc0lHNHBPd29nSUNBZ2N5NTFibWxtYjNKdE1XbDJLSFJvYVhNdVlXUmtjaXdnYVNrN0NpQWdJQ0JtYjNJb2JHVjBJSElnUFNBd095QnlJQ0U5UFNCdU95QXJLM0lwZEM1ellXWmxVMlYwVkdWNGRIVnlaVEpFS0dWYmNsMGdmSHdnYkdnc0lHbGJjbDBwT3dwOUNtWjFibU4wYVc5dUlFZG5LSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ1pTNXNaVzVuZEdnc0lHa2dQU0JMY3loMExDQnVLVHNLSUNBZ0lITXVkVzVwWm05eWJURnBkaWgwYUdsekxtRmtaSElzSUdrcE93b2dJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUFoUFQwZ2Jqc2dLeXR5S1hRdWMyVjBWR1Y0ZEhWeVpUTkVLR1ZiY2wwZ2ZId2dhR2dzSUdsYmNsMHBPd3A5Q21aMWJtTjBhVzl1SUZabktITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnWlM1c1pXNW5kR2dzSUdrZ1BTQkxjeWgwTENCdUtUc0tJQ0FnSUhNdWRXNXBabTl5YlRGcGRpaDBhR2x6TG1Ga1pISXNJR2twT3dvZ0lDQWdabTl5S0d4bGRDQnlJRDBnTURzZ2NpQWhQVDBnYmpzZ0t5dHlLWFF1YzJGbVpWTmxkRlJsZUhSMWNtVkRkV0psS0dWYmNsMGdmSHdnZFdnc0lHbGJjbDBwT3dwOUNtWjFibU4wYVc5dUlGZG5LSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ1pTNXNaVzVuZEdnc0lHa2dQU0JMY3loMExDQnVLVHNLSUNBZ0lITXVkVzVwWm05eWJURnBkaWgwYUdsekxtRmtaSElzSUdrcE93b2dJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUFoUFQwZ2Jqc2dLeXR5S1hRdWMyVjBWR1Y0ZEhWeVpUSkVRWEp5WVhrb1pWdHlYU0I4ZkNCamFDd2dhVnR5WFNrN0NuMEtablZ1WTNScGIyNGdjV2NvY3lrZ2V3b2dJQ0FnYzNkcGRHTm9LSE1wZXdvZ0lDQWdJQ0FnSUdOaGMyVWdOVEV5TmpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFVm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOalE2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCQlp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qWTFPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUTJjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk5qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRXhuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnpRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlNaenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOamMxT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1VHYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNOam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVsbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTlRFeU5Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3dPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUkdjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk56b0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3hPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUm1jN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk9Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3lPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVG1jN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk9Ub0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qY3pPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUW1jN0NpQWdJQ0FnSUNBZ1kyRnpaU0ExTVRJMU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdlbWM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1TkRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGVm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVFU2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCUFp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazJPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnU0djN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM09Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1UazRPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVGc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOak13TmpvS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpneU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhMmM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzT1RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprNU9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EYzZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJIWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpnd09nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EQTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qTXdPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNamt6T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ZtYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTRPVG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekF6T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TVRFNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU1qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRmRuT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUZobktITXNJR1VzSUhRcElIc0tJQ0FnSUhSb2FYTXVhV1FnUFNCekxDQjBhR2x6TG1Ga1pISWdQU0IwTENCMGFHbHpMbU5oWTJobElEMGdXMTBzSUhSb2FYTXVjMlYwVm1Gc2RXVWdQU0JVWnlobExuUjVjR1VwT3dwOUNtWjFibU4wYVc5dUlHUm9LSE1zSUdVc0lIUXBJSHNLSUNBZ0lIUm9hWE11YVdRZ1BTQnpMQ0IwYUdsekxtRmtaSElnUFNCMExDQjBhR2x6TG1OaFkyaGxJRDBnVzEwc0lIUm9hWE11YzJsNlpTQTlJR1V1YzJsNlpTd2dkR2hwY3k1elpYUldZV3gxWlNBOUlIRm5LR1V1ZEhsd1pTazdDbjBLWkdndWNISnZkRzkwZVhCbExuVndaR0YwWlVOaFkyaGxJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdjeUJwYm5OMFlXNWpaVzltSUVac2IyRjBNekpCY25KaGVTQW1KaUJsTG14bGJtZDBhQ0FoUFQwZ2N5NXNaVzVuZEdnZ0ppWWdLSFJvYVhNdVkyRmphR1VnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0hNdWJHVnVaM1JvS1Nrc0lGOTBLR1VzSUhNcE93cDlPd3BtZFc1amRHbHZiaUJtYUNoektTQjdDaUFnSUNCMGFHbHpMbWxrSUQwZ2N5d2dkR2hwY3k1elpYRWdQU0JiWFN3Z2RHaHBjeTV0WVhBZ1BTQjdmVHNLZlFwbWFDNXdjbTkwYjNSNWNHVXVjMlYwVm1Gc2RXVWdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlIUm9hWE11YzJWeE93b2dJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUc0dWJHVnVaM1JvT3lCcElDRTlQU0J5T3lBcksya3Bld29nSUNBZ0lDQWdJR3hsZENCdklEMGdibHRwWFRzS0lDQWdJQ0FnSUNCdkxuTmxkRlpoYkhWbEtITXNJR1ZiYnk1cFpGMHNJSFFwT3dvZ0lDQWdmUXA5T3dwMllYSWdWMjhnUFNBdktGeDNLeWtvWEYwcFB5aGNXM3hjTGlrL0wyYzdDbVoxYm1OMGFXOXVJR3RzS0hNc0lHVXBJSHNLSUNBZ0lITXVjMlZ4TG5CMWMyZ29aU2tzSUhNdWJXRndXMlV1YVdSZElEMGdaVHNLZlFwbWRXNWpkR2x2YmlCS1p5aHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUhNdWJtRnRaU3dnYVNBOUlHNHViR1Z1WjNSb093b2dJQ0FnWm05eUtGZHZMbXhoYzNSSmJtUmxlQ0E5SURBN095bDdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQlhieTVsZUdWaktHNHBMQ0J2SUQwZ1YyOHViR0Z6ZEVsdVpHVjRMQ0JoSUQwZ2Nsc3hYU3dnYkNBOUlISmJNbDBnUFQwOUlDSmRJaXdnWXlBOUlISmJNMTA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHd2dKaVlnS0dFZ1BTQmhJSHdnTUNrc0lHTWdQVDA5SUhadmFXUWdNQ0I4ZkNCaklEMDlQU0FpV3lJZ0ppWWdieUFySURJZ1BUMDlJR2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhMndvZEN3Z1l5QTlQVDBnZG05cFpDQXdJRDhnYm1WM0lGaG5LR0VzSUhNc0lHVXBJRG9nYm1WM0lHUm9LR0VzSUhNc0lHVXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCMExtMWhjRnRoWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaDFJRDBnYm1WM0lHWm9LR0VwTENCcmJDaDBMQ0IxS1Nrc0lIUWdQU0IxT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCaWJpaHpMQ0JsS1NCN0NpQWdJQ0IwYUdsekxuTmxjU0E5SUZ0ZExDQjBhR2x6TG0xaGNDQTlJSHQ5T3dvZ0lDQWdiR1YwSUhRZ1BTQnpMbWRsZEZCeWIyZHlZVzFRWVhKaGJXVjBaWElvWlN3Z016VTNNVGdwT3dvZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJSFE3SUNzcmJpbDdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnpMbWRsZEVGamRHbDJaVlZ1YVdadmNtMG9aU3dnYmlrc0lISWdQU0J6TG1kbGRGVnVhV1p2Y20xTWIyTmhkR2x2YmlobExDQnBMbTVoYldVcE93b2dJQ0FnSUNBZ0lFcG5LR2tzSUhJc0lIUm9hWE1wT3dvZ0lDQWdmUXA5Q21KdUxuQnliM1J2ZEhsd1pTNXpaWFJXWVd4MVpTQTlJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdkR2hwY3k1dFlYQmJaVjA3Q2lBZ0lDQnBJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNXpaWFJXWVd4MVpTaHpMQ0IwTENCdUtUc0tmVHNLWW00dWNISnZkRzkwZVhCbExuTmxkRTl3ZEdsdmJtRnNJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQmxXM1JkT3dvZ0lDQWdiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlIUm9hWE11YzJWMFZtRnNkV1VvY3l3Z2RDd2diaWs3Q24wN0NtSnVMblZ3Ykc5aFpDQTlJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0JsTG14bGJtZDBhRHNnYVNBaFBUMGdjanNnS3l0cEtYc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHVmJhVjBzSUdFZ1BTQjBXMjh1YVdSZE93b2dJQ0FnSUNBZ0lHRXVibVZsWkhOVmNHUmhkR1VnSVQwOUlDRXhJQ1ltSUc4dWMyVjBWbUZzZFdVb2N5d2dZUzUyWVd4MVpTd2diaWs3Q2lBZ0lDQjlDbjA3Q21KdUxuTmxjVmRwZEdoV1lXeDFaU0E5SUdaMWJtTjBhVzl1S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ1cxMDdDaUFnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2N5NXNaVzVuZEdnN0lHNGdJVDA5SUdrN0lDc3JiaWw3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J6VzI1ZE93b2dJQ0FnSUNBZ0lISXVhV1FnYVc0Z1pTQW1KaUIwTG5CMWMyZ29jaWs3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZERzS2ZUc0tablZ1WTNScGIyNGdSMndvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQnpMbU55WldGMFpWTm9ZV1JsY2lobEtUc0tJQ0FnSUhKbGRIVnliaUJ6TG5Ob1lXUmxjbE52ZFhKalpTaHVMQ0IwS1N3Z2N5NWpiMjF3YVd4bFUyaGhaR1Z5S0c0cExDQnVPd3A5Q25aaGNpQlpaeUE5SURBN0NtWjFibU4wYVc5dUlGcG5LSE1wSUhzS0lDQWdJR3hsZENCbElEMGdjeTV6Y0d4cGRDaGdDbUFwT3dvZ0lDQWdabTl5S0d4bGRDQjBJRDBnTURzZ2RDQThJR1V1YkdWdVozUm9PeUIwS3lzcFpWdDBYU0E5SUhRZ0t5QXhJQ3NnSWpvZ0lpQXJJR1ZiZEYwN0NpQWdJQ0J5WlhSMWNtNGdaUzVxYjJsdUtHQUtZQ2s3Q24wS1puVnVZM1JwYjI0Z2NHZ29jeWtnZXdvZ0lDQWdjM2RwZEdOb0tITXBld29nSUNBZ0lDQWdJR05oYzJVZ1RuUTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpVEdsdVpXRnlJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0lvSUhaaGJIVmxJQ2tpQ2lBZ0lDQWdJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdZMkZ6WlNCUGFUb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0p6VWtkQ0lpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDSW9JSFpoYkhWbElDa2lDaUFnSUNBZ0lDQWdJQ0FnSUYwN0NpQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4UWNtOW5jbUZ0T2lCVmJuTjFjSEJ2Y25SbFpDQmxibU52WkdsdVp6b2lMQ0J6S1N3Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lreHBibVZoY2lJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaUtDQjJZV3gxWlNBcElnb2dJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUZac0tITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnY3k1blpYUlRhR0ZrWlhKUVlYSmhiV1YwWlhJb1pTd2dNelUzTVRNcExDQnBJRDBnY3k1blpYUlRhR0ZrWlhKSmJtWnZURzluS0dVcExuUnlhVzBvS1RzS0lDQWdJSEpsZEhWeWJpQnVJQ1ltSUdrZ1BUMDlJQ0lpSUQ4Z0lpSWdPaUIwTG5SdlZYQndaWEpEWVhObEtDa2dLeUJnQ2dwZ0lDc2dhU0FySUdBS0NtQWdLeUJhWnloekxtZGxkRk5vWVdSbGNsTnZkWEpqWlNobEtTazdDbjBLWm5WdVkzUnBiMjRnUkc0b2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQndhQ2hsS1RzS0lDQWdJSEpsZEhWeWJpQWlkbVZqTkNBaUlDc2djeUFySUNJb0lIWmxZelFnZG1Gc2RXVWdLU0I3SUhKbGRIVnliaUFpSUNzZ2RGc3dYU0FySUNKVWIweHBibVZoY2lJZ0t5QjBXekZkSUNzZ0lqc2dmU0k3Q24wS1puVnVZM1JwYjI0Z0pHY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0J3YUNobEtUc0tJQ0FnSUhKbGRIVnliaUFpZG1Wak5DQWlJQ3NnY3lBcklDSW9JSFpsWXpRZ2RtRnNkV1VnS1NCN0lISmxkSFZ5YmlCTWFXNWxZWEpVYnlJZ0t5QjBXekJkSUNzZ2RGc3hYU0FySUNJN0lIMGlPd3A5Q21aMWJtTjBhVzl1SUdwbktITXNJR1VwSUhzS0lDQWdJR3hsZENCME93b2dJQ0FnYzNkcGRHTm9LR1VwZXdvZ0lDQWdJQ0FnSUdOaGMyVWdUblU2Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0FpVEdsdVpXRnlJanNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWTJGelpTQkNkVG9LSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJQ0pTWldsdWFHRnlaQ0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdlblU2Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0FpVDNCMGFXMXBlbVZrUTJsdVpXOXVJanNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWTJGelpTQlZkVG9LSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJQ0pCUTBWVFJtbHNiV2xqSWpzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0JQZFRvS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUNKRGRYTjBiMjBpT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVISnZaM0poYlRvZ1ZXNXpkWEJ3YjNKMFpXUWdkRzl1WlUxaGNIQnBibWM2SWl3Z1pTa3NJSFFnUFNBaVRHbHVaV0Z5SWpzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlBaWRtVmpNeUFpSUNzZ2N5QXJJQ0lvSUhabFl6TWdZMjlzYjNJZ0tTQjdJSEpsZEhWeWJpQWlJQ3NnZENBcklDSlViMjVsVFdGd2NHbHVaeWdnWTI5c2IzSWdLVHNnZlNJN0NuMEtablZ1WTNScGIyNGdVV2NvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0J6TG1WNGRHVnVjMmx2YmtSbGNtbDJZWFJwZG1WeklIeDhJSE11Wlc1MlRXRndRM1ZpWlZWV0lIeDhJSE11WW5WdGNFMWhjQ0I4ZkNCekxuUmhibWRsYm5SVGNHRmpaVTV2Y20xaGJFMWhjQ0I4ZkNCekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDQjhmQ0J6TG1ac1lYUlRhR0ZrYVc1bklIeDhJSE11YzJoaFpHVnlTVVFnUFQwOUlDSndhSGx6YVdOaGJDSWdQeUFpSTJWNGRHVnVjMmx2YmlCSFRGOVBSVk5mYzNSaGJtUmhjbVJmWkdWeWFYWmhkR2wyWlhNZ09pQmxibUZpYkdVaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnS0hNdVpYaDBaVzV6YVc5dVJuSmhaMFJsY0hSb0lIeDhJSE11Ykc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNpa2dKaVlnY3k1eVpXNWtaWEpsY2tWNGRHVnVjMmx2YmtaeVlXZEVaWEIwYUNBL0lDSWpaWGgwWlc1emFXOXVJRWRNWDBWWVZGOW1jbUZuWDJSbGNIUm9JRG9nWlc1aFlteGxJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lITXVaWGgwWlc1emFXOXVSSEpoZDBKMVptWmxjbk1nSmlZZ2N5NXlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJrUnlZWGRDZFdabVpYSnpJRDhnSWlObGVIUmxibk5wYjI0Z1IweGZSVmhVWDJSeVlYZGZZblZtWm1WeWN5QTZJSEpsY1hWcGNtVWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ0tITXVaWGgwWlc1emFXOXVVMmhoWkdWeVZHVjRkSFZ5WlV4UFJDQjhmQ0J6TG1WdWRrMWhjQ0I4ZkNCekxuUnlZVzV6YldsemMybHZiaWtnSmlZZ2N5NXlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJsTm9ZV1JsY2xSbGVIUjFjbVZNYjJRZ1B5QWlJMlY0ZEdWdWMybHZiaUJIVEY5RldGUmZjMmhoWkdWeVgzUmxlSFIxY21WZmJHOWtJRG9nWlc1aFlteGxJaUE2SUNJaUNpQWdJQ0JkTG1acGJIUmxjaWh5Y2lrdWFtOXBiaWhnQ21BcE93cDlDbVoxYm1OMGFXOXVJRXRuS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnVzEwN0NpQWdJQ0JtYjNJb2JHVjBJSFFnYVc0Z2N5bDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQnpXM1JkT3dvZ0lDQWdJQ0FnSUc0Z0lUMDlJQ0V4SUNZbUlHVXVjSFZ6YUNnaUkyUmxabWx1WlNBaUlDc2dkQ0FySUNJZ0lpQXJJRzRwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUdVdWFtOXBiaWhnQ21BcE93cDlDbVoxYm1OMGFXOXVJR1Y0S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2UzMHNJRzRnUFNCekxtZGxkRkJ5YjJkeVlXMVFZWEpoYldWMFpYSW9aU3dnTXpVM01qRXBPd29nSUNBZ1ptOXlLR3hsZENCcElEMGdNRHNnYVNBOElHNDdJR2tyS3lsN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCekxtZGxkRUZqZEdsMlpVRjBkSEpwWWlobExDQnBLU3dnYnlBOUlISXVibUZ0WlN3Z1lTQTlJREU3Q2lBZ0lDQWdJQ0FnY2k1MGVYQmxJRDA5UFNBek5UWTNOQ0FtSmlBb1lTQTlJRElwTENCeUxuUjVjR1VnUFQwOUlETTFOamMxSUNZbUlDaGhJRDBnTXlrc0lISXVkSGx3WlNBOVBUMGdNelUyTnpZZ0ppWWdLR0VnUFNBMEtTd2dkRnR2WFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2djaTUwZVhCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JzYjJOaGRHbHZiam9nY3k1blpYUkJkSFJ5YVdKTWIyTmhkR2x2YmlobExDQnZLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHOWpZWFJwYjI1VGFYcGxPaUJoQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCME93cDlDbVoxYm1OMGFXOXVJSEp5S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUNFOVBTQWlJanNLZlFwbWRXNWpkR2x2YmlCWGJDaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdjeTV5WlhCc1lXTmxLQzlPVlUxZlJFbFNYMHhKUjBoVVV5OW5MQ0JsTG01MWJVUnBja3hwWjJoMGN5a3VjbVZ3YkdGalpTZ3ZUbFZOWDFOUVQxUmZURWxIU0ZSVEwyY3NJR1V1Ym5WdFUzQnZkRXhwWjJoMGN5a3VjbVZ3YkdGalpTZ3ZUbFZOWDFKRlExUmZRVkpGUVY5TVNVZElWRk12Wnl3Z1pTNXVkVzFTWldOMFFYSmxZVXhwWjJoMGN5a3VjbVZ3YkdGalpTZ3ZUbFZOWDFCUFNVNVVYMHhKUjBoVVV5OW5MQ0JsTG01MWJWQnZhVzUwVEdsbmFIUnpLUzV5WlhCc1lXTmxLQzlPVlUxZlNFVk5TVjlNU1VkSVZGTXZaeXdnWlM1dWRXMUlaVzFwVEdsbmFIUnpLUzV5WlhCc1lXTmxLQzlPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNdlp5d2daUzV1ZFcxRWFYSk1hV2RvZEZOb1lXUnZkM01wTG5KbGNHeGhZMlVvTDA1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTXZaeXdnWlM1dWRXMVRjRzkwVEdsbmFIUlRhR0ZrYjNkektTNXlaWEJzWVdObEtDOU9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXk5bkxDQmxMbTUxYlZCdmFXNTBUR2xuYUhSVGFHRmtiM2R6S1RzS2ZRcG1kVzVqZEdsdmJpQnhiQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3k1eVpYQnNZV05sS0M5T1ZVMWZRMHhKVUZCSlRrZGZVRXhCVGtWVEwyY3NJR1V1Ym5WdFEyeHBjSEJwYm1kUWJHRnVaWE1wTG5KbGNHeGhZMlVvTDFWT1NVOU9YME5NU1ZCUVNVNUhYMUJNUVU1RlV5OW5MQ0JsTG01MWJVTnNhWEJ3YVc1blVHeGhibVZ6SUMwZ1pTNXVkVzFEYkdsd1NXNTBaWEp6WldOMGFXOXVLVHNLZlFwMllYSWdkSGdnUFNBdlhsc2dYSFJkS2lOcGJtTnNkV1JsSUNzOEtGdGNkMXhrTGk5ZEt5aytMMmR0T3dwbWRXNWpkR2x2YmlCeVlTaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5NXlaWEJzWVdObEtIUjRMQ0J1ZUNrN0NuMEtablZ1WTNScGIyNGdibmdvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCR1pWdGxYVHNLSUNBZ0lHbG1JQ2gwSUQwOVBTQjJiMmxrSURBcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVEyRnVJRzV2ZENCeVpYTnZiSFpsSUNOcGJtTnNkV1JsSUR3aUlDc2daU0FySUNJK0lpazdDaUFnSUNCeVpYUjFjbTRnY21Fb2RDazdDbjBLZG1GeUlHbDRJRDBnTHlOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCYlhITmRLejltYjNJZ1hDZ2dhVzUwSUdrZ1hEMGdLRnhrS3lsY095QnBJRHdnS0Z4a0t5bGNPeUJwSUZ3clhDc2dYQ2tnWEhzb1cxeHpYRk5kS3o4cEtEODlYSDBwWEgwdlp5d2djbmdnUFNBdkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEZ4eksyWnZjbHh6S2x3b1hITXFhVzUwWEhNcmFWeHpLajFjY3lvb1hHUXJLVnh6S2p0Y2N5cHBYSE1xUEZ4ektpaGNaQ3NwWEhNcU8xeHpLbWxjY3lwY0sxd3JYSE1xWENsY2N5cDdLRnRjYzF4VFhTcy9LWDFjY3lzamNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQzluT3dwbWRXNWpkR2x2YmlCWWJDaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5NXlaWEJzWVdObEtISjRMQ0J0YUNrdWNtVndiR0ZqWlNocGVDd2djM2dwT3dwOUNtWjFibU4wYVc5dUlITjRLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxkbFlrZE1VSEp2WjNKaGJUb2dJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjQ0J6YUdGa1pYSWdjM2x1ZEdGNElHbHpJR1JsY0hKbFkyRjBaV1F1SUZCc1pXRnpaU0IxYzJVZ0kzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZENCemVXNTBZWGdnYVc1emRHVmhaQzRpS1N3Z2JXZ29jeXdnWlN3Z2RDd2diaWs3Q24wS1puVnVZM1JwYjI0Z2JXZ29jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdiR1YwSUdrZ1BTQWlJanNLSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJSEJoY25ObFNXNTBLR1VwT3lCeUlEd2djR0Z5YzJWSmJuUW9kQ2s3SUhJckt5bHBJQ3M5SUc0dWNtVndiR0ZqWlNndlhGdGNjeXBwWEhNcVhGMHZaeXdnSWxzZ0lpQXJJSElnS3lBaUlGMGlLUzV5WlhCc1lXTmxLQzlWVGxKUFRFeEZSRjlNVDA5UVgwbE9SRVZZTDJjc0lISXBPd29nSUNBZ2NtVjBkWEp1SUdrN0NuMEtablZ1WTNScGIyNGdTbXdvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0FpY0hKbFkybHphVzl1SUNJZ0t5QnpMbkJ5WldOcGMybHZiaUFySUdBZ1pteHZZWFE3Q25CeVpXTnBjMmx2YmlCZ0lDc2djeTV3Y21WamFYTnBiMjRnS3lBaUlHbHVkRHNpT3dvZ0lDQWdjbVYwZFhKdUlITXVjSEpsWTJsemFXOXVJRDA5UFNBaWFHbG5hSEFpSUQ4Z1pTQXJQU0JnQ2lOa1pXWnBibVVnU0VsSFNGOVFVa1ZEU1ZOSlQwNWdJRG9nY3k1d2NtVmphWE5wYjI0Z1BUMDlJQ0p0WldScGRXMXdJaUEvSUdVZ0t6MGdZQW9qWkdWbWFXNWxJRTFGUkVsVlRWOVFVa1ZEU1ZOSlQwNWdJRG9nY3k1d2NtVmphWE5wYjI0Z1BUMDlJQ0pzYjNkd0lpQW1KaUFvWlNBclBTQmdDaU5rWldacGJtVWdURTlYWDFCU1JVTkpVMGxQVG1BcExDQmxPd3A5Q21aMWJtTjBhVzl1SUc5NEtITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ0lsTklRVVJQVjAxQlVGOVVXVkJGWDBKQlUwbERJanNLSUNBZ0lISmxkSFZ5YmlCekxuTm9ZV1J2ZDAxaGNGUjVjR1VnUFQwOUlFaGpJRDhnWlNBOUlDSlRTRUZFVDFkTlFWQmZWRmxRUlY5UVEwWWlJRG9nY3k1emFHRmtiM2ROWVhCVWVYQmxJRDA5UFNCbWRTQS9JR1VnUFNBaVUwaEJSRTlYVFVGUVgxUlpVRVZmVUVOR1gxTlBSbFFpSURvZ2N5NXphR0ZrYjNkTllYQlVlWEJsSUQwOVBTQnBjaUFtSmlBb1pTQTlJQ0pUU0VGRVQxZE5RVkJmVkZsUVJWOVdVMDBpS1N3Z1pUc0tmUXBtZFc1amRHbHZiaUJoZUNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUNKRlRsWk5RVkJmVkZsUVJWOURWVUpGSWpzS0lDQWdJR2xtSUNoekxtVnVkazFoY0NrZ2MzZHBkR05vS0hNdVpXNTJUV0Z3VFc5a1pTbDdDaUFnSUNBZ0lDQWdZMkZ6WlNCQ2FUb0tJQ0FnSUNBZ0lDQmpZWE5sSUhwcE9nb2dJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ0lrVk9WazFCVUY5VVdWQkZYME5WUWtVaU93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQmpZWE5sSUZCeU9nb2dJQ0FnSUNBZ0lHTmhjMlVnVjNNNkNpQWdJQ0FnSUNBZ0lDQWdJR1VnUFNBaVJVNVdUVUZRWDFSWlVFVmZRMVZDUlY5VlZpSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJR1U3Q24wS1puVnVZM1JwYjI0Z2JIZ29jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQWlSVTVXVFVGUVgwMVBSRVZmVWtWR1RFVkRWRWxQVGlJN0NpQWdJQ0JwWmlBb2N5NWxiblpOWVhBcElITjNhWFJqYUNoekxtVnVkazFoY0UxdlpHVXBld29nSUNBZ0lDQWdJR05oYzJVZ2VtazZDaUFnSUNBZ0lDQWdZMkZ6WlNCWGN6b0tJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlDSkZUbFpOUVZCZlRVOUVSVjlTUlVaU1FVTlVTVTlPSWpzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z1pUc0tmUXBtZFc1amRHbHZiaUJqZUNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUNKRlRsWk5RVkJmUWt4RlRrUkpUa2RmVGs5T1JTSTdDaUFnSUNCcFppQW9jeTVsYm5aTllYQXBJSE4zYVhSamFDaHpMbU52YldKcGJtVXBld29nSUNBZ0lDQWdJR05oYzJVZ1ZuTTZDaUFnSUNBZ0lDQWdJQ0FnSUdVZ1BTQWlSVTVXVFVGUVgwSk1SVTVFU1U1SFgwMVZURlJKVUV4Wklqc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdZMkZ6WlNCRWRUb0tJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlDSkZUbFpOUVZCZlFreEZUa1JKVGtkZlRVbFlJanNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWTJGelpTQkdkVG9LSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJQ0pGVGxaTlFWQmZRa3hGVGtSSlRrZGZRVVJFSWpzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z1pUc0tmUXBtZFc1amRHbHZiaUJvZUNoekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUhNdVoyVjBRMjl1ZEdWNGRDZ3BMQ0J5SUQwZ2RDNWtaV1pwYm1WekxDQnZJRDBnZEM1MlpYSjBaWGhUYUdGa1pYSXNJR0VnUFNCMExtWnlZV2R0Wlc1MFUyaGhaR1Z5TENCc0lEMGdiM2dvZENrc0lHTWdQU0JoZUNoMEtTd2dhQ0E5SUd4NEtIUXBMQ0IxSUQwZ1kzZ29kQ2tzSUdRZ1BTQjBMbWx6VjJWaVIwd3lJRDhnSWlJZ09pQlJaeWgwS1N3Z1ppQTlJRXRuS0hJcExDQnRJRDBnYVM1amNtVmhkR1ZRY205bmNtRnRLQ2tzSUhnc0lIWXNJR2NnUFNCMExtZHNjMnhXWlhKemFXOXVJRDhnSWlOMlpYSnphVzl1SUNJZ0t5QjBMbWRzYzJ4V1pYSnphVzl1SUNzZ1lBcGdJRG9nSWlJN0NpQWdJQ0IwTG1selVtRjNVMmhoWkdWeVRXRjBaWEpwWVd3Z1B5QW9lQ0E5SUZzS0lDQWdJQ0FnSUNCbUNpQWdJQ0JkTG1acGJIUmxjaWh5Y2lrdWFtOXBiaWhnQ21BcExDQjRMbXhsYm1kMGFDQStJREFnSmlZZ0tIZ2dLejBnWUFwZ0tTd2dkaUE5SUZzS0lDQWdJQ0FnSUNCa0xBb2dJQ0FnSUNBZ0lHWUtJQ0FnSUYwdVptbHNkR1Z5S0hKeUtTNXFiMmx1S0dBS1lDa3NJSFl1YkdWdVozUm9JRDRnTUNBbUppQW9kaUFyUFNCZ0NtQXBLU0E2SUNoNElEMGdXd29nSUNBZ0lDQWdJRXBzS0hRcExBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElGTklRVVJGVWw5T1FVMUZJQ0lnS3lCMExuTm9ZV1JsY2s1aGJXVXNDaUFnSUNBZ0lDQWdaaXdLSUNBZ0lDQWdJQ0IwTG1sdWMzUmhibU5wYm1jZ1B5QWlJMlJsWm1sdVpTQlZVMFZmU1U1VFZFRk9RMGxPUnlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1sdWMzUmhibU5wYm1kRGIyeHZjaUEvSUNJalpHVm1hVzVsSUZWVFJWOUpUbE5VUVU1RFNVNUhYME5QVEU5U0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMzVndjRzl5ZEhOV1pYSjBaWGhVWlhoMGRYSmxjeUEvSUNJalpHVm1hVzVsSUZaRlVsUkZXRjlVUlZoVVZWSkZVeUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQk5RVmhmUWs5T1JWTWdJaUFySUhRdWJXRjRRbTl1WlhNc0NpQWdJQ0FnSUNBZ2RDNTFjMlZHYjJjZ0ppWWdkQzVtYjJjZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUms5SElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRYTmxSbTluSUNZbUlIUXVabTluUlhod01pQS9JQ0lqWkdWbWFXNWxJRVpQUjE5RldGQXlJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1WdWRrMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUZUbFpOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bGJuWk5ZWEFnUHlBaUkyUmxabWx1WlNBaUlDc2dhQ0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViR2xuYUhSTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlRFbEhTRlJOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1aGIwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUJUMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1WdGFYTnphWFpsVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBWTlNWTlRTVlpGVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVluVnRjRTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlDVlUxUVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVibTl5YldGc1RXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwNVBVazFCVEUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtNXZjbTFoYkUxaGNDQW1KaUIwTG05aWFtVmpkRk53WVdObFRtOXliV0ZzVFdGd0lEOGdJaU5rWldacGJtVWdUMEpLUlVOVVUxQkJRMFZmVGs5U1RVRk1UVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ym05eWJXRnNUV0Z3SUNZbUlIUXVkR0Z1WjJWdWRGTndZV05sVG05eWJXRnNUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZFRk9SMFZPVkZOUVFVTkZYMDVQVWsxQlRFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbU5zWldGeVkyOWhkRTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlEVEVWQlVrTlBRVlJOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlEweEZRVkpEVDBGVVgxSlBWVWRJVGtWVFUwMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOURURVZCVWtOUFFWUmZUazlTVFVGTVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDWW1JSFF1YzNWd2NHOXlkSE5XWlhKMFpYaFVaWGgwZFhKbGN5QS9JQ0lqWkdWbWFXNWxJRlZUUlY5RVNWTlFURUZEUlUxRlRsUk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6Y0dWamRXeGhjazFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlUVUVWRFZVeEJVazFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFOUVJVTlZURUZTU1U1VVJVNVRTVlJaVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlUVUVWRFZVeEJVa05QVEU5U1RVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjbTkxWjJodVpYTnpUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMUpQVlVkSVRrVlRVMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG0xbGRHRnNibVZ6YzAxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TlJWUkJURTVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWhiSEJvWVUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5QlRGQklRVTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5SeVlXNXpiV2x6YzJsdmJpQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VVVrRk9VMDFKVTFOSlQwNGlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVkZKQlRsTk5TVk5UU1U5T1RVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkR2hwWTJ0dVpYTnpUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMVJJU1VOTFRrVlRVMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Ob1pXVnVRMjlzYjNKTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlUwaEZSVTVEVDB4UFVrMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5vWldWdVVtOTFaMmh1WlhOelRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxTklSVVZPVWs5VlIwaE9SVk5UVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRtVnlkR1Y0VkdGdVoyVnVkSE1nUHlBaUkyUmxabWx1WlNCVlUwVmZWRUZPUjBWT1ZDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuWmxjblJsZUVOdmJHOXljeUEvSUNJalpHVm1hVzVsSUZWVFJWOURUMHhQVWlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5abGNuUmxlRUZzY0doaGN5QS9JQ0lqWkdWbWFXNWxJRlZUUlY5RFQweFBVbDlCVEZCSVFTSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuWmxjblJsZUZWMmN5QS9JQ0lqWkdWbWFXNWxJRlZUUlY5VlZpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuVjJjMVpsY25SbGVFOXViSGtnUHlBaUkyUmxabWx1WlNCVlZsTmZWa1ZTVkVWWVgwOU9URmtpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVtYkdGMFUyaGhaR2x1WnlBL0lDSWpaR1ZtYVc1bElFWk1RVlJmVTBoQlJFVkVJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjMnRwYm01cGJtY2dQeUFpSTJSbFptbHVaU0JWVTBWZlUwdEpUazVKVGtjaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MWMyVldaWEowWlhoVVpYaDBkWEpsSUQ4Z0lpTmtaV1pwYm1VZ1FrOU9SVjlVUlZoVVZWSkZJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViVzl5Y0doVVlYSm5aWFJ6SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMDFQVWxCSVZFRlNSMFZVVXlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG0xdmNuQm9UbTl5YldGc2N5QW1KaUIwTG1ac1lYUlRhR0ZrYVc1bklEMDlQU0FoTVNBL0lDSWpaR1ZtYVc1bElGVlRSVjlOVDFKUVNFNVBVazFCVEZNaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dGIzSndhRlJoY21kbGRITWdKaVlnZEM1cGMxZGxZa2RNTWlBL0lDSWpaR1ZtYVc1bElFMVBVbEJJVkVGU1IwVlVVMTlVUlZoVVZWSkZJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViVzl5Y0doVVlYSm5aWFJ6SUNZbUlIUXVhWE5YWldKSFRESWdQeUFpSTJSbFptbHVaU0JOVDFKUVNGUkJVa2RGVkZOZlEwOVZUbFFnSWlBcklIUXViVzl5Y0doVVlYSm5aWFJ6UTI5MWJuUWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtUnZkV0pzWlZOcFpHVmtJRDhnSWlOa1pXWnBibVVnUkU5VlFreEZYMU5KUkVWRUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpteHBjRk5wWkdWa0lEOGdJaU5rWldacGJtVWdSa3hKVUY5VFNVUkZSQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5vWVdSdmQwMWhjRVZ1WVdKc1pXUWdQeUFpSTJSbFptbHVaU0JWVTBWZlUwaEJSRTlYVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGhaRzkzVFdGd1JXNWhZbXhsWkNBL0lDSWpaR1ZtYVc1bElDSWdLeUJzSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YVhwbFFYUjBaVzUxWVhScGIyNGdQeUFpSTJSbFptbHVaU0JWVTBWZlUwbGFSVUZVVkVWT1ZVRlVTVTlPSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ykc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNpQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TVQwZEVSVkJVU0VKVlJpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElnSmlZZ2RDNXlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJrWnlZV2RFWlhCMGFDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TVQwZEVSVkJVU0VKVlJsOUZXRlFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdJblZ1YVdadmNtMGdiV0YwTkNCdGIyUmxiRTFoZEhKcGVEc2lMQW9nSUNBZ0lDQWdJQ0oxYm1sbWIzSnRJRzFoZERRZ2JXOWtaV3hXYVdWM1RXRjBjbWw0T3lJc0NpQWdJQ0FnSUNBZ0luVnVhV1p2Y20wZ2JXRjBOQ0J3Y205cVpXTjBhVzl1VFdGMGNtbDRPeUlzQ2lBZ0lDQWdJQ0FnSW5WdWFXWnZjbTBnYldGME5DQjJhV1YzVFdGMGNtbDRPeUlzQ2lBZ0lDQWdJQ0FnSW5WdWFXWnZjbTBnYldGME15QnViM0p0WVd4TllYUnlhWGc3SWl3S0lDQWdJQ0FnSUNBaWRXNXBabTl5YlNCMlpXTXpJR05oYldWeVlWQnZjMmwwYVc5dU95SXNDaUFnSUNBZ0lDQWdJblZ1YVdadmNtMGdZbTl2YkNCcGMwOXlkR2h2WjNKaGNHaHBZenNpTEFvZ0lDQWdJQ0FnSUNJamFXWmtaV1lnVlZORlgwbE9VMVJCVGtOSlRrY2lMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUcxaGREUWdhVzV6ZEdGdVkyVk5ZWFJ5YVhnN0lpd0tJQ0FnSUNBZ0lDQWlJMlZ1WkdsbUlpd0tJQ0FnSUNBZ0lDQWlJMmxtWkdWbUlGVlRSVjlKVGxOVVFVNURTVTVIWDBOUFRFOVNJaXdLSUNBZ0lDQWdJQ0FpQ1dGMGRISnBZblYwWlNCMlpXTXpJR2x1YzNSaGJtTmxRMjlzYjNJN0lpd0tJQ0FnSUNBZ0lDQWlJMlZ1WkdsbUlpd0tJQ0FnSUNBZ0lDQWlZWFIwY21saWRYUmxJSFpsWXpNZ2NHOXphWFJwYjI0N0lpd0tJQ0FnSUNBZ0lDQWlZWFIwY21saWRYUmxJSFpsWXpNZ2JtOXliV0ZzT3lJc0NpQWdJQ0FnSUNBZ0ltRjBkSEpwWW5WMFpTQjJaV015SUhWMk95SXNDaUFnSUNBZ0lDQWdJaU5wWm1SbFppQlZVMFZmVkVGT1IwVk9WQ0lzQ2lBZ0lDQWdJQ0FnSWdsaGRIUnlhV0oxZEdVZ2RtVmpOQ0IwWVc1blpXNTBPeUlzQ2lBZ0lDQWdJQ0FnSWlObGJtUnBaaUlzQ2lBZ0lDQWdJQ0FnSWlOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSmZRVXhRU0VFZ0tTSXNDaUFnSUNBZ0lDQWdJZ2xoZEhSeWFXSjFkR1VnZG1Wak5DQmpiMnh2Y2pzaUxBb2dJQ0FnSUNBZ0lDSWpaV3hwWmlCa1pXWnBibVZrS0NCVlUwVmZRMDlNVDFJZ0tTSXNDaUFnSUNBZ0lDQWdJZ2xoZEhSeWFXSjFkR1VnZG1Wak15QmpiMnh2Y2pzaUxBb2dJQ0FnSUNBZ0lDSWpaVzVrYVdZaUxBb2dJQ0FnSUNBZ0lDSWphV1lnS0NCa1pXWnBibVZrS0NCVlUwVmZUVTlTVUVoVVFWSkhSVlJUSUNrZ0ppWWdJU0JrWldacGJtVmtLQ0JOVDFKUVNGUkJVa2RGVkZOZlZFVllWRlZTUlNBcElDa2lMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doVVlYSm5aWFF3T3lJc0NpQWdJQ0FnSUNBZ0lnbGhkSFJ5YVdKMWRHVWdkbVZqTXlCdGIzSndhRlJoY21kbGRERTdJaXdLSUNBZ0lDQWdJQ0FpQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1ZHRnlaMlYwTWpzaUxBb2dJQ0FnSUNBZ0lDSUpZWFIwY21saWRYUmxJSFpsWXpNZ2JXOXljR2hVWVhKblpYUXpPeUlzQ2lBZ0lDQWdJQ0FnSWdramFXWmtaV1lnVlZORlgwMVBVbEJJVGs5U1RVRk1VeUlzQ2lBZ0lDQWdJQ0FnSWdrSllYUjBjbWxpZFhSbElIWmxZek1nYlc5eWNHaE9iM0p0WVd3d095SXNDaUFnSUNBZ0lDQWdJZ2tKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doT2IzSnRZV3d4T3lJc0NpQWdJQ0FnSUNBZ0lna0pZWFIwY21saWRYUmxJSFpsWXpNZ2JXOXljR2hPYjNKdFlXd3lPeUlzQ2lBZ0lDQWdJQ0FnSWdrSllYUjBjbWxpZFhSbElIWmxZek1nYlc5eWNHaE9iM0p0WVd3ek95SXNDaUFnSUNBZ0lDQWdJZ2tqWld4elpTSXNDaUFnSUNBZ0lDQWdJZ2tKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doVVlYSm5aWFEwT3lJc0NpQWdJQ0FnSUNBZ0lna0pZWFIwY21saWRYUmxJSFpsWXpNZ2JXOXljR2hVWVhKblpYUTFPeUlzQ2lBZ0lDQWdJQ0FnSWdrSllYUjBjbWxpZFhSbElIWmxZek1nYlc5eWNHaFVZWEpuWlhRMk95SXNDaUFnSUNBZ0lDQWdJZ2tKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doVVlYSm5aWFEzT3lJc0NpQWdJQ0FnSUNBZ0lna2paVzVrYVdZaUxBb2dJQ0FnSUNBZ0lDSWpaVzVrYVdZaUxBb2dJQ0FnSUNBZ0lDSWphV1prWldZZ1ZWTkZYMU5MU1U1T1NVNUhJaXdLSUNBZ0lDQWdJQ0FpQ1dGMGRISnBZblYwWlNCMlpXTTBJSE5yYVc1SmJtUmxlRHNpTEFvZ0lDQWdJQ0FnSUNJSllYUjBjbWxpZFhSbElIWmxZelFnYzJ0cGJsZGxhV2RvZERzaUxBb2dJQ0FnSUNBZ0lDSWpaVzVrYVdZaUxBb2dJQ0FnSUNBZ0lHQUtZQW9nSUNBZ1hTNW1hV3gwWlhJb2NuSXBMbXB2YVc0b1lBcGdLU3dnZGlBOUlGc0tJQ0FnSUNBZ0lDQmtMQW9nSUNBZ0lDQWdJRXBzS0hRcExBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElGTklRVVJGVWw5T1FVMUZJQ0lnS3lCMExuTm9ZV1JsY2s1aGJXVXNDaUFnSUNBZ0lDQWdaaXdLSUNBZ0lDQWdJQ0IwTG5WelpVWnZaeUFtSmlCMExtWnZaeUEvSUNJalpHVm1hVzVsSUZWVFJWOUdUMGNpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUxYzJWR2IyY2dKaVlnZEM1bWIyZEZlSEF5SUQ4Z0lpTmtaV1pwYm1VZ1JrOUhYMFZZVURJaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dFlYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViV0YwWTJGd0lEOGdJaU5rWldacGJtVWdWVk5GWDAxQlZFTkJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVZ1ZGsxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5RlRsWk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYm5aTllYQWdQeUFpSTJSbFptbHVaU0FpSUNzZ1l5QTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpXNTJUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ0lpQXJJR2dnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVZ1ZGsxaGNDQS9JQ0lqWkdWbWFXNWxJQ0lnS3lCMUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1c2FXZG9kRTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlNU1VkSVZFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbUZ2VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBGUFRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVaVzFwYzNOcGRtVk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZSVTFKVTFOSlZrVk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVpZFcxd1RXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwSlZUVkJOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dWIzSnRZV3hOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVGs5U1RVRk1UVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ym05eWJXRnNUV0Z3SUNZbUlIUXViMkpxWldOMFUzQmhZMlZPYjNKdFlXeE5ZWEFnUHlBaUkyUmxabWx1WlNCUFFrcEZRMVJUVUVGRFJWOU9UMUpOUVV4TlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXViM0p0WVd4TllYQWdKaVlnZEM1MFlXNW5aVzUwVTNCaFkyVk9iM0p0WVd4TllYQWdQeUFpSTJSbFptbHVaU0JVUVU1SFJVNVVVMUJCUTBWZlRrOVNUVUZNVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVkyeGxZWEpqYjJGMElEOGdJaU5rWldacGJtVWdWVk5GWDBOTVJVRlNRMDlCVkNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1Oc1pXRnlZMjloZEUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5RFRFVkJVa05QUVZSTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRMHhGUVZKRFQwRlVYMUpQVlVkSVRrVlRVMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlEVEVWQlVrTlBRVlJmVGs5U1RVRk1UVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzNCbFkzVnNZWEpOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVTFCRlExVk1RVkpOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFVFVkRWVXhCVWtsT1ZFVk9VMGxVV1UxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTndaV04xYkdGeVEyOXNiM0pOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVTFCRlExVk1RVkpEVDB4UFVrMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbkp2ZFdkb2JtVnpjMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlTVDFWSFNFNUZVMU5OUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dFpYUmhiRzVsYzNOTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlRVVlVRVXhPUlZOVFRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZV3h3YUdGTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlFVeFFTRUZOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1aGJIQm9ZVlJsYzNRZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUVV4UVNFRlVSVk5VSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzJobFpXNGdQeUFpSTJSbFptbHVaU0JWVTBWZlUwaEZSVTRpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YUdWbGJrTnZiRzl5VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFOSVJVVk9RMDlNVDFKTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFNFVkZUbEpQVlVkSVRrVlRVMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5SeVlXNXpiV2x6YzJsdmJpQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VVVrRk9VMDFKVTFOSlQwNGlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVkZKQlRsTk5TVk5UU1U5T1RVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkR2hwWTJ0dVpYTnpUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMVJJU1VOTFRrVlRVMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5abGNuUmxlRlJoYm1kbGJuUnpJRDhnSWlOa1pXWnBibVVnVlZORlgxUkJUa2RGVGxRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhEYjJ4dmNuTWdmSHdnZEM1cGJuTjBZVzVqYVc1blEyOXNiM0lnUHlBaUkyUmxabWx1WlNCVlUwVmZRMDlNVDFJaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhCYkhCb1lYTWdQeUFpSTJSbFptbHVaU0JWVTBWZlEwOU1UMUpmUVV4UVNFRWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTJaWEowWlhoVmRuTWdQeUFpSTJSbFptbHVaU0JWVTBWZlZWWWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTFkbk5XWlhKMFpYaFBibXg1SUQ4Z0lpTmtaV1pwYm1VZ1ZWWlRYMVpGVWxSRldGOVBUa3haSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WjNKaFpHbGxiblJOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUjFKQlJFbEZUbFJOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bWJHRjBVMmhoWkdsdVp5QS9JQ0lqWkdWbWFXNWxJRVpNUVZSZlUwaEJSRVZFSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wkc5MVlteGxVMmxrWldRZ1B5QWlJMlJsWm1sdVpTQkVUMVZDVEVWZlUwbEVSVVFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVtYkdsd1UybGtaV1FnUHlBaUkyUmxabWx1WlNCR1RFbFFYMU5KUkVWRUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGhaRzkzVFdGd1JXNWhZbXhsWkNBL0lDSWpaR1ZtYVc1bElGVlRSVjlUU0VGRVQxZE5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YUdGa2IzZE5ZWEJGYm1GaWJHVmtJRDhnSWlOa1pXWnBibVVnSWlBcklHd2dPaUFpSWl3S0lDQWdJQ0FnSUNCMExuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQS9JQ0lqWkdWbWFXNWxJRkJTUlUxVlRGUkpVRXhKUlVSZlFVeFFTRUVpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV3YUhsemFXTmhiR3g1UTI5eWNtVmpkRXhwWjJoMGN5QS9JQ0lqWkdWbWFXNWxJRkJJV1ZOSlEwRk1URmxmUTA5U1VrVkRWRjlNU1VkSVZGTWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXNiMmRoY21sMGFHMXBZMFJsY0hSb1FuVm1abVZ5SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMHhQUjBSRlVGUklRbFZHSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ykc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNpQW1KaUIwTG5KbGJtUmxjbVZ5UlhoMFpXNXphVzl1Um5KaFowUmxjSFJvSUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMHhQUjBSRlVGUklRbFZHWDBWWVZDSWdPaUFpSWl3S0lDQWdJQ0FnSUNBb2RDNWxlSFJsYm5OcGIyNVRhR0ZrWlhKVVpYaDBkWEpsVEU5RUlIeDhJSFF1Wlc1MlRXRndLU0FtSmlCMExuSmxibVJsY21WeVJYaDBaVzV6YVc5dVUyaGhaR1Z5VkdWNGRIVnlaVXh2WkNBL0lDSWpaR1ZtYVc1bElGUkZXRlJWVWtWZlRFOUVYMFZZVkNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0FpZFc1cFptOXliU0J0WVhRMElIWnBaWGROWVhSeWFYZzdJaXdLSUNBZ0lDQWdJQ0FpZFc1cFptOXliU0IyWldNeklHTmhiV1Z5WVZCdmMybDBhVzl1T3lJc0NpQWdJQ0FnSUNBZ0luVnVhV1p2Y20wZ1ltOXZiQ0JwYzA5eWRHaHZaM0poY0docFl6c2lMQW9nSUNBZ0lDQWdJSFF1ZEc5dVpVMWhjSEJwYm1jZ0lUMDlJRjl1SUQ4Z0lpTmtaV1pwYm1VZ1ZFOU9SVjlOUVZCUVNVNUhJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkRzl1WlUxaGNIQnBibWNnSVQwOUlGOXVJRDhnUm1VdWRHOXVaVzFoY0hCcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZENBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZEc5dVpVMWhjSEJwYm1jZ0lUMDlJRjl1SUQ4Z2FtY29JblJ2Ym1WTllYQndhVzVuSWl3Z2RDNTBiMjVsVFdGd2NHbHVaeWtnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVJwZEdobGNtbHVaeUEvSUNJalpHVm1hVzVsSUVSSlZFaEZVa2xPUnlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1admNtMWhkQ0E5UFQwZ1IyNGdQeUFpSTJSbFptbHVaU0JQVUVGUlZVVWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ1JtVXVaVzVqYjJScGJtZHpYM0JoY25OZlpuSmhaMjFsYm5Rc0NpQWdJQ0FnSUNBZ2RDNXRZWEFnUHlCRWJpZ2liV0Z3VkdWNFpXeFViMHhwYm1WaGNpSXNJSFF1YldGd1JXNWpiMlJwYm1jcElEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dFlYUmpZWEFnUHlCRWJpZ2liV0YwWTJGd1ZHVjRaV3hVYjB4cGJtVmhjaUlzSUhRdWJXRjBZMkZ3Ulc1amIyUnBibWNwSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYm5aTllYQWdQeUJFYmlnaVpXNTJUV0Z3VkdWNFpXeFViMHhwYm1WaGNpSXNJSFF1Wlc1MlRXRndSVzVqYjJScGJtY3BJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWxiV2x6YzJsMlpVMWhjQ0EvSUVSdUtDSmxiV2x6YzJsMlpVMWhjRlJsZUdWc1ZHOU1hVzVsWVhJaUxDQjBMbVZ0YVhOemFYWmxUV0Z3Ulc1amIyUnBibWNwSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6Y0dWamRXeGhja052Ykc5eVRXRndJRDhnUkc0b0luTndaV04xYkdGeVEyOXNiM0pOWVhCVVpYaGxiRlJ2VEdsdVpXRnlJaXdnZEM1emNHVmpkV3hoY2tOdmJHOXlUV0Z3Ulc1amIyUnBibWNwSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YUdWbGJrTnZiRzl5VFdGd0lEOGdSRzRvSW5Ob1pXVnVRMjlzYjNKTllYQlVaWGhsYkZSdlRHbHVaV0Z5SWl3Z2RDNXphR1ZsYmtOdmJHOXlUV0Z3Ulc1amIyUnBibWNwSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVzYVdkb2RFMWhjQ0EvSUVSdUtDSnNhV2RvZEUxaGNGUmxlR1ZzVkc5TWFXNWxZWElpTENCMExteHBaMmgwVFdGd1JXNWpiMlJwYm1jcElEb2dJaUlzQ2lBZ0lDQWdJQ0FnSkdjb0lteHBibVZoY2xSdlQzVjBjSFYwVkdWNFpXd2lMQ0IwTG05MWRIQjFkRVZ1WTI5a2FXNW5LU3dLSUNBZ0lDQWdJQ0IwTG1SbGNIUm9VR0ZqYTJsdVp5QS9JQ0lqWkdWbWFXNWxJRVJGVUZSSVgxQkJRMHRKVGtjZ0lpQXJJSFF1WkdWd2RHaFFZV05yYVc1bklEb2dJaUlzQ2lBZ0lDQWdJQ0FnWUFwZ0NpQWdJQ0JkTG1acGJIUmxjaWh5Y2lrdWFtOXBiaWhnQ21BcEtTd2dieUE5SUhKaEtHOHBMQ0J2SUQwZ1Yyd29ieXdnZENrc0lHOGdQU0J4YkNodkxDQjBLU3dnWVNBOUlISmhLR0VwTENCaElEMGdWMndvWVN3Z2RDa3NJR0VnUFNCeGJDaGhMQ0IwS1N3Z2J5QTlJRmhzS0c4cExDQmhJRDBnV0d3b1lTa3NJSFF1YVhOWFpXSkhURElnSmlZZ2RDNXBjMUpoZDFOb1lXUmxjazFoZEdWeWFXRnNJQ0U5UFNBaE1DQW1KaUFvWnlBOUlHQWpkbVZ5YzJsdmJpQXpNREFnWlhNS1lDd2dlQ0E5SUZzS0lDQWdJQ0FnSUNBaWNISmxZMmx6YVc5dUlHMWxaR2wxYlhBZ2MyRnRjR3hsY2pKRVFYSnlZWGs3SWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCaGRIUnlhV0oxZEdVZ2FXNGlMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJSFpoY25scGJtY2diM1YwSWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMFpYaDBkWEpsTWtRZ2RHVjRkSFZ5WlNJS0lDQWdJRjB1YW05cGJpaGdDbUFwSUNzZ1lBcGdJQ3NnZUN3Z2RpQTlJRnNLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0IyWVhKNWFXNW5JR2x1SWl3S0lDQWdJQ0FnSUNCMExtZHNjMnhXWlhKemFXOXVJRDA5UFNCNGJDQS9JQ0lpSURvZ0lteGhlVzkxZENoc2IyTmhkR2x2YmlBOUlEQXBJRzkxZENCb2FXZG9jQ0IyWldNMElIQmpYMlp5WVdkRGIyeHZjanNpTEFvZ0lDQWdJQ0FnSUhRdVoyeHpiRlpsY25OcGIyNGdQVDA5SUhoc0lEOGdJaUlnT2lBaUkyUmxabWx1WlNCbmJGOUdjbUZuUTI5c2IzSWdjR05mWm5KaFowTnZiRzl5SWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCbmJGOUdjbUZuUkdWd2RHaEZXRlFnWjJ4ZlJuSmhaMFJsY0hSb0lpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjBaWGgwZFhKbE1rUWdkR1Y0ZEhWeVpTSXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdkR1Y0ZEhWeVpVTjFZbVVnZEdWNGRIVnlaU0lzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnZEdWNGRIVnlaVEpFVUhKdmFpQjBaWGgwZFhKbFVISnZhaUlzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnZEdWNGRIVnlaVEpFVEc5a1JWaFVJSFJsZUhSMWNtVk1iMlFpTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhSbGVIUjFjbVV5UkZCeWIycE1iMlJGV0ZRZ2RHVjRkSFZ5WlZCeWIycE1iMlFpTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhSbGVIUjFjbVZEZFdKbFRHOWtSVmhVSUhSbGVIUjFjbVZNYjJRaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21VeVJFZHlZV1JGV0ZRZ2RHVjRkSFZ5WlVkeVlXUWlMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJSFJsZUhSMWNtVXlSRkJ5YjJwSGNtRmtSVmhVSUhSbGVIUjFjbVZRY205cVIzSmhaQ0lzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnZEdWNGRIVnlaVU4xWW1WSGNtRmtSVmhVSUhSbGVIUjFjbVZIY21Ga0lnb2dJQ0FnWFM1cWIybHVLR0FLWUNrZ0t5QmdDbUFnS3lCMktUc0tJQ0FnSUd4bGRDQndJRDBnWnlBcklIZ2dLeUJ2TENCZklEMGdaeUFySUhZZ0t5QmhMQ0I1SUQwZ1Iyd29hU3dnTXpVMk16TXNJSEFwTENCaUlEMGdSMndvYVN3Z016VTJNeklzSUY4cE93b2dJQ0FnYVdZZ0tHa3VZWFIwWVdOb1UyaGhaR1Z5S0cwc0lIa3BMQ0JwTG1GMGRHRmphRk5vWVdSbGNpaHRMQ0JpS1N3Z2RDNXBibVJsZURCQmRIUnlhV0oxZEdWT1lXMWxJQ0U5UFNCMmIybGtJREFnUHlCcExtSnBibVJCZEhSeWFXSk1iMk5oZEdsdmJpaHRMQ0F3TENCMExtbHVaR1Y0TUVGMGRISnBZblYwWlU1aGJXVXBJRG9nZEM1dGIzSndhRlJoY21kbGRITWdQVDA5SUNFd0lDWW1JR2t1WW1sdVpFRjBkSEpwWWt4dlkyRjBhVzl1S0cwc0lEQXNJQ0p3YjNOcGRHbHZiaUlwTENCcExteHBibXRRY205bmNtRnRLRzBwTENCekxtUmxZblZuTG1Ob1pXTnJVMmhoWkdWeVJYSnliM0p6S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRWtnUFNCcExtZGxkRkJ5YjJkeVlXMUpibVp2VEc5bktHMHBMblJ5YVcwb0tTd2dheUE5SUdrdVoyVjBVMmhoWkdWeVNXNW1iMHh2WnloNUtTNTBjbWx0S0Nrc0lFSWdQU0JwTG1kbGRGTm9ZV1JsY2tsdVptOU1iMmNvWWlrdWRISnBiU2dwTENCUUlEMGdJVEFzSUhjZ1BTQWhNRHNLSUNBZ0lDQWdJQ0JwWmlBb2FTNW5aWFJRY205bmNtRnRVR0Z5WVcxbGRHVnlLRzBzSURNMU56RTBLU0E5UFQwZ0lURXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1VDQTlJQ0V4T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlGWnNLR2tzSUhrc0lDSjJaWEowWlhnaUtTd2dSQ0E5SUZac0tHa3NJR0lzSUNKbWNtRm5iV1Z1ZENJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURkJ5YjJkeVlXMDZJRk5vWVdSbGNpQkZjbkp2Y2lBaUlDc2dhUzVuWlhSRmNuSnZjaWdwSUNzZ0lpQXRJRlpCVEVsRVFWUkZYMU5VUVZSVlV5QWlJQ3NnYVM1blpYUlFjbTluY21GdFVHRnlZVzFsZEdWeUtHMHNJRE0xTnpFMUtTQXJJR0FLQ2xCeWIyZHlZVzBnU1c1bWJ5Qk1iMmM2SUdBZ0t5QkpJQ3NnWUFwZ0lDc2dSU0FySUdBS1lDQXJJRVFwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JKSUNFOVBTQWlJaUEvSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhRY205bmNtRnRPaUJRY205bmNtRnRJRWx1Wm04Z1RHOW5PaUlzSUVrcElEb2dLR3NnUFQwOUlDSWlJSHg4SUVJZ1BUMDlJQ0lpS1NBbUppQW9keUE5SUNFeEtUc0tJQ0FnSUNBZ0lDQjNJQ1ltSUNoMGFHbHpMbVJwWVdkdWIzTjBhV056SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5ZFc1dVlXSnNaVG9nVUN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2WjNKaGJVeHZaem9nU1N3S0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc2IyYzZJR3NzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Y21WbWFYZzZJSGdLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3h2WnpvZ1Fpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnlaV1pwZURvZ2Rnb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q2lBZ0lDQnBMbVJsYkdWMFpWTm9ZV1JsY2loNUtTd2dhUzVrWld4bGRHVlRhR0ZrWlhJb1lpazdDaUFnSUNCc1pYUWdRVHNLSUNBZ0lIUm9hWE11WjJWMFZXNXBabTl5YlhNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdRU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaEJJRDBnYm1WM0lHSnVLR2tzSUcwcEtTd2dRVHNLSUNBZ0lIMDdDaUFnSUNCc1pYUWdURHNLSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEVGMGRISnBZblYwWlhNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaE1JRDBnWlhnb2FTd2diU2twTENCTU93b2dJQ0FnZlN3Z2RHaHBjeTVrWlhOMGNtOTVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2JpNXlaV3hsWVhObFUzUmhkR1Z6VDJaUWNtOW5jbUZ0S0hSb2FYTXBMQ0JwTG1SbGJHVjBaVkJ5YjJkeVlXMG9iU2tzSUhSb2FYTXVjSEp2WjNKaGJTQTlJSFp2YVdRZ01Ec0tJQ0FnSUgwc0lIUm9hWE11Ym1GdFpTQTlJSFF1YzJoaFpHVnlUbUZ0WlN3Z2RHaHBjeTVwWkNBOUlGbG5LeXNzSUhSb2FYTXVZMkZqYUdWTFpYa2dQU0JsTENCMGFHbHpMblZ6WldSVWFXMWxjeUE5SURFc0lIUm9hWE11Y0hKdlozSmhiU0E5SUcwc0lIUm9hWE11ZG1WeWRHVjRVMmhoWkdWeUlEMGdlU3dnZEdocGN5NW1jbUZuYldWdWRGTm9ZV1JsY2lBOUlHSXNJSFJvYVhNN0NuMEtkbUZ5SUhWNElEMGdNQ3dnWjJnZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lIUm9hWE11YzJoaFpHVnlRMkZqYUdVZ1BTQnVaWGNnVFdGd0xDQjBhR2x6TG0xaGRHVnlhV0ZzUTJGamFHVWdQU0J1WlhjZ1RXRndPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdWRtVnlkR1Y0VTJoaFpHVnlMQ0J1SUQwZ1pTNW1jbUZuYldWdWRGTm9ZV1JsY2l3Z2FTQTlJSFJvYVhNdVgyZGxkRk5vWVdSbGNsTjBZV2RsS0hRcExDQnlJRDBnZEdocGN5NWZaMlYwVTJoaFpHVnlVM1JoWjJVb2Jpa3NJRzhnUFNCMGFHbHpMbDluWlhSVGFHRmtaWEpEWVdOb1pVWnZjazFoZEdWeWFXRnNLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2TG1oaGN5aHBLU0E5UFQwZ0lURWdKaVlnS0c4dVlXUmtLR2twTENCcExuVnpaV1JVYVcxbGN5c3JLU3dnYnk1b1lYTW9jaWtnUFQwOUlDRXhJQ1ltSUNodkxtRmtaQ2h5S1N3Z2NpNTFjMlZrVkdsdFpYTXJLeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5WlcxdmRtVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXRZWFJsY21saGJFTmhZMmhsTG1kbGRDaGxLVHNLSUNBZ0lDQWdJQ0JtYjNJZ0tHeGxkQ0J1SUc5bUlIUXBiaTUxYzJWa1ZHbHRaWE10TFN3Z2JpNTFjMlZrVkdsdFpYTWdQVDA5SURBZ0ppWWdkR2hwY3k1emFHRmtaWEpEWVdOb1pTNWtaV3hsZEdVb2JpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldGMFpYSnBZV3hEWVdOb1pTNWtaV3hsZEdVb1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJXWlhKMFpYaFRhR0ZrWlhKSlJDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyZGxkRk5vWVdSbGNsTjBZV2RsS0dVdWRtVnlkR1Y0VTJoaFpHVnlLUzVwWkRzS0lDQWdJSDBLSUNBZ0lHZGxkRVp5WVdkdFpXNTBVMmhoWkdWeVNVUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOW5aWFJUYUdGa1pYSlRkR0ZuWlNobExtWnlZV2R0Wlc1MFUyaGhaR1Z5S1M1cFpEc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXphR0ZrWlhKRFlXTm9aUzVqYkdWaGNpZ3BMQ0IwYUdsekxtMWhkR1Z5YVdGc1EyRmphR1V1WTJ4bFlYSW9LVHNLSUNBZ0lIMEtJQ0FnSUY5blpYUlRhR0ZrWlhKRFlXTm9aVVp2Y2sxaGRHVnlhV0ZzS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11YldGMFpYSnBZV3hEWVdOb1pUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNW9ZWE1vWlNrZ1BUMDlJQ0V4SUNZbUlIUXVjMlYwS0dVc0lHNWxkeUJUWlhRcExDQjBMbWRsZENobEtUc0tJQ0FnSUgwS0lDQWdJRjluWlhSVGFHRmtaWEpUZEdGblpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuTm9ZV1JsY2tOaFkyaGxPd29nSUNBZ0lDQWdJR2xtSUNoMExtaGhjeWhsS1NBOVBUMGdJVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnZUdnN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1YzJWMEtHVXNJRzRwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1blpYUW9aU2s3Q2lBZ0lDQjlDbjBzSUhob0lEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sa0lEMGdkWGdyS3l3Z2RHaHBjeTUxYzJWa1ZHbHRaWE1nUFNBd093b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQmtlQ2h6TENCbExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0JzWlhRZ1lTQTlJRzVsZHlCS2N5d2diQ0E5SUc1bGR5Qm5hQ3dnWXlBOUlGdGRMQ0JvSUQwZ2FTNXBjMWRsWWtkTU1pd2dkU0E5SUdrdWJHOW5ZWEpwZEdodGFXTkVaWEIwYUVKMVptWmxjaXdnWkNBOUlHa3VabXh2WVhSV1pYSjBaWGhVWlhoMGRYSmxjeXdnWmlBOUlHa3ViV0Y0Vm1WeWRHVjRWVzVwWm05eWJYTXNJRzBnUFNCcExuWmxjblJsZUZSbGVIUjFjbVZ6TENCNElEMGdhUzV3Y21WamFYTnBiMjRzSUhZZ1BTQjdDaUFnSUNBZ0lDQWdUV1Z6YUVSbGNIUm9UV0YwWlhKcFlXdzZJQ0prWlhCMGFDSXNDaUFnSUNBZ0lDQWdUV1Z6YUVScGMzUmhibU5sVFdGMFpYSnBZV3c2SUNKa2FYTjBZVzVqWlZKSFFrRWlMQW9nSUNBZ0lDQWdJRTFsYzJoT2IzSnRZV3hOWVhSbGNtbGhiRG9nSW01dmNtMWhiQ0lzQ2lBZ0lDQWdJQ0FnVFdWemFFSmhjMmxqVFdGMFpYSnBZV3c2SUNKaVlYTnBZeUlzQ2lBZ0lDQWdJQ0FnVFdWemFFeGhiV0psY25STllYUmxjbWxoYkRvZ0lteGhiV0psY25RaUxBb2dJQ0FnSUNBZ0lFMWxjMmhRYUc5dVowMWhkR1Z5YVdGc09pQWljR2h2Ym1jaUxBb2dJQ0FnSUNBZ0lFMWxjMmhVYjI5dVRXRjBaWEpwWVd3NklDSjBiMjl1SWl3S0lDQWdJQ0FnSUNCTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJEb2dJbkJvZVhOcFkyRnNJaXdLSUNBZ0lDQWdJQ0JOWlhOb1VHaDVjMmxqWVd4TllYUmxjbWxoYkRvZ0luQm9lWE5wWTJGc0lpd0tJQ0FnSUNBZ0lDQk5aWE5vVFdGMFkyRndUV0YwWlhKcFlXdzZJQ0p0WVhSallYQWlMQW9nSUNBZ0lDQWdJRXhwYm1WQ1lYTnBZMDFoZEdWeWFXRnNPaUFpWW1GemFXTWlMQW9nSUNBZ0lDQWdJRXhwYm1WRVlYTm9aV1JOWVhSbGNtbGhiRG9nSW1SaGMyaGxaQ0lzQ2lBZ0lDQWdJQ0FnVUc5cGJuUnpUV0YwWlhKcFlXdzZJQ0p3YjJsdWRITWlMQW9nSUNBZ0lDQWdJRk5vWVdSdmQwMWhkR1Z5YVdGc09pQWljMmhoWkc5M0lpd0tJQ0FnSUNBZ0lDQlRjSEpwZEdWTllYUmxjbWxoYkRvZ0luTndjbWwwWlNJS0lDQWdJSDA3Q2lBZ0lDQm1kVzVqZEdsdmJpQm5LSGNwSUhzS0lDQWdJQ0FnSUNCc1pYUWdSQ0E5SUhjdWMydGxiR1YwYjI0dVltOXVaWE03Q2lBZ0lDQWdJQ0FnYVdZZ0tHUXBJSEpsZEhWeWJpQXhNREkwT3dvZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVZZ1BTQk5ZWFJvTG1ac2IyOXlLQ2htSUMwZ01qQXBJQzhnTkNrc0lFOGdQU0JOWVhSb0xtMXBiaWhHTENCRUxteGxibWQwYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlBJRHdnUkM1c1pXNW5kR2dnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCVGEyVnNaWFJ2YmlCb1lYTWdJaUFySUVRdWJHVnVaM1JvSUNzZ0lpQmliMjVsY3k0Z1ZHaHBjeUJIVUZVZ2MzVndjRzl5ZEhNZ0lpQXJJRThnS3lBaUxpSXBMQ0F3S1NBNklFODdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnY0NoM0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUVVN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhjZ0ppWWdkeTVwYzFSbGVIUjFjbVVnUHlCRklEMGdkeTVsYm1OdlpHbHVaeUE2SUhjZ0ppWWdkeTVwYzFkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwSUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4UWNtOW5jbUZ0Y3k1blpYUlVaWGgwZFhKbFJXNWpiMlJwYm1kR2NtOXRUV0Z3T2lCa2IyNG5kQ0IxYzJVZ2NtVnVaR1Z5SUhSaGNtZGxkSE1nWVhNZ2RHVjRkSFZ5WlhNdUlGVnpaU0IwYUdWcGNpQXVkR1Y0ZEhWeVpTQndjbTl3WlhKMGVTQnBibk4wWldGa0xpSXBMQ0JGSUQwZ2R5NTBaWGgwZFhKbExtVnVZMjlrYVc1bktTQTZJRVVnUFNCT2RDd2dhQ0FtSmlCM0lDWW1JSGN1YVhOVVpYaDBkWEpsSUNZbUlIY3VabTl5YldGMElEMDlQU0JqZENBbUppQjNMblI1Y0dVZ1BUMDlJSEp1SUNZbUlIY3VaVzVqYjJScGJtY2dQVDA5SUU5cElDWW1JQ2hGSUQwZ1RuUXBMQ0JGT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1h5aDNMQ0JGTENCRUxDQlZMQ0JHS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRThnUFNCVkxtWnZaeXdnYm1VZ1BTQjNMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z1B5QlZMbVZ1ZG1seWIyNXRaVzUwSURvZ2JuVnNiQ3dnWTJVZ1BTQW9keTVwYzAxbGMyaFRkR0Z1WkdGeVpFMWhkR1Z5YVdGc0lEOGdkQ0E2SUdVcExtZGxkQ2gzTG1WdWRrMWhjQ0I4ZkNCdVpTa3NJRllnUFNCMlczY3VkSGx3WlYwc0lGY2dQU0JHTG1selUydHBibTVsWkUxbGMyZ2dQeUJuS0VZcElEb2dNRHNLSUNBZ0lDQWdJQ0IzTG5CeVpXTnBjMmx2YmlBaFBUMGdiblZzYkNBbUppQW9lQ0E5SUdrdVoyVjBUV0Y0VUhKbFkybHphVzl1S0hjdWNISmxZMmx6YVc5dUtTd2dlQ0FoUFQwZ2R5NXdjbVZqYVhOcGIyNGdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkJ5YjJkeVlXMHVaMlYwVUdGeVlXMWxkR1Z5Y3pvaUxDQjNMbkJ5WldOcGMybHZiaXdnSW01dmRDQnpkWEJ3YjNKMFpXUXNJSFZ6YVc1bklpd2dlQ3dnSW1sdWMzUmxZV1F1SWlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvWlN3Z2JHVXNJR1psTENCQ1pUc0tJQ0FnSUNBZ0lDQnBaaUFvVmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VHVWdQU0J4ZEZ0V1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnYUdVZ1BTQjRaUzUyWlhKMFpYaFRhR0ZrWlhJc0lHeGxJRDBnZUdVdVpuSmhaMjFsYm5SVGFHRmtaWEk3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2hsSUQwZ2R5NTJaWEowWlhoVGFHRmtaWElzSUd4bElEMGdkeTVtY21GbmJXVnVkRk5vWVdSbGNpd2diQzUxY0dSaGRHVW9keWtzSUdabElEMGdiQzVuWlhSV1pYSjBaWGhUYUdGa1pYSkpSQ2gzS1N3Z1FtVWdQU0JzTG1kbGRFWnlZV2R0Wlc1MFUyaGhaR1Z5U1VRb2R5azdDaUFnSUNBZ0lDQWdiR1YwSUZrZ1BTQnpMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BMQ0JEWlNBOUlIY3VZV3h3YUdGVVpYTjBJRDRnTUN3Z2VXVWdQU0IzTG1Oc1pXRnlZMjloZENBK0lEQTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVhOWFpXSkhUREk2SUdnc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSbGNrbEVPaUJXTEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrWlhKT1lXMWxPaUIzTG5SNWNHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dhR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCc1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbWFXNWxjem9nZHk1a1pXWnBibVZ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpkWE4wYjIxV1pYSjBaWGhUYUdGa1pYSkpSRG9nWm1Vc0NpQWdJQ0FnSUNBZ0lDQWdJR04xYzNSdmJVWnlZV2R0Wlc1MFUyaGhaR1Z5U1VRNklFSmxMQW9nSUNBZ0lDQWdJQ0FnSUNCcGMxSmhkMU5vWVdSbGNrMWhkR1Z5YVdGc09pQjNMbWx6VW1GM1UyaGhaR1Z5VFdGMFpYSnBZV3dnUFQwOUlDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCbmJITnNWbVZ5YzJsdmJqb2dkeTVuYkhOc1ZtVnljMmx2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdjSEpsWTJsemFXOXVPaUI0TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibk4wWVc1amFXNW5PaUJHTG1selNXNXpkR0Z1WTJWa1RXVnphQ0E5UFQwZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsdWMzUmhibU5wYm1kRGIyeHZjam9nUmk1cGMwbHVjM1JoYm1ObFpFMWxjMmdnUFQwOUlDRXdJQ1ltSUVZdWFXNXpkR0Z1WTJWRGIyeHZjaUFoUFQwZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzVndjRzl5ZEhOV1pYSjBaWGhVWlhoMGRYSmxjem9nYlN3S0lDQWdJQ0FnSUNBZ0lDQWdiM1YwY0hWMFJXNWpiMlJwYm1jNklGa2dJVDA5SUc1MWJHd2dQeUJ3S0ZrdWRHVjRkSFZ5WlNrZ09pQnpMbTkxZEhCMWRFVnVZMjlrYVc1bkxBb2dJQ0FnSUNBZ0lDQWdJQ0J0WVhBNklDRWhkeTV0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoY0VWdVkyOWthVzVuT2lCd0tIY3ViV0Z3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdiV0YwWTJGd09pQWhJWGN1YldGMFkyRndMQW9nSUNBZ0lDQWdJQ0FnSUNCdFlYUmpZWEJGYm1OdlpHbHVaem9nY0NoM0xtMWhkR05oY0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGsxaGNEb2dJU0ZqWlN3S0lDQWdJQ0FnSUNBZ0lDQWdaVzUyVFdGd1RXOWtaVG9nWTJVZ0ppWWdZMlV1YldGd2NHbHVaeXdLSUNBZ0lDQWdJQ0FnSUNBZ1pXNTJUV0Z3Ulc1amIyUnBibWM2SUhBb1kyVXBMQW9nSUNBZ0lDQWdJQ0FnSUNCbGJuWk5ZWEJEZFdKbFZWWTZJQ0VoWTJVZ0ppWWdLR05sTG0xaGNIQnBibWNnUFQwOUlGQnlJSHg4SUdObExtMWhjSEJwYm1jZ1BUMDlJRmR6S1N3S0lDQWdJQ0FnSUNBZ0lDQWdiR2xuYUhSTllYQTZJQ0VoZHk1c2FXZG9kRTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiR2xuYUhSTllYQkZibU52WkdsdVp6b2djQ2gzTG14cFoyaDBUV0Z3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdZVzlOWVhBNklDRWhkeTVoYjAxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnWlcxcGMzTnBkbVZOWVhBNklDRWhkeTVsYldsemMybDJaVTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdaVzFwYzNOcGRtVk5ZWEJGYm1OdlpHbHVaem9nY0NoM0xtVnRhWE56YVhabFRXRndLU3dLSUNBZ0lDQWdJQ0FnSUNBZ1luVnRjRTFoY0RvZ0lTRjNMbUoxYlhCTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUc1dmNtMWhiRTFoY0RvZ0lTRjNMbTV2Y20xaGJFMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2IySnFaV04wVTNCaFkyVk9iM0p0WVd4TllYQTZJSGN1Ym05eWJXRnNUV0Z3Vkhsd1pTQTlQVDBnZW1Rc0NpQWdJQ0FnSUNBZ0lDQWdJSFJoYm1kbGJuUlRjR0ZqWlU1dmNtMWhiRTFoY0RvZ2R5NXViM0p0WVd4TllYQlVlWEJsSUQwOVBTQklhU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpqYjJGME9pQjVaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpqYjJGMFRXRndPaUI1WlNBbUppQWhJWGN1WTJ4bFlYSmpiMkYwVFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBNklIbGxJQ1ltSUNFaGR5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNEb2dlV1VnSmlZZ0lTRjNMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoWTJWdFpXNTBUV0Z3T2lBaElYY3VaR2x6Y0d4aFkyVnRaVzUwVFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J5YjNWbmFHNWxjM05OWVhBNklDRWhkeTV5YjNWbmFHNWxjM05OWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGc2JtVnpjMDFoY0RvZ0lTRjNMbTFsZEdGc2JtVnpjMDFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdjM0JsWTNWc1lYSk5ZWEE2SUNFaGR5NXpjR1ZqZFd4aGNrMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQTZJQ0VoZHk1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYzNCbFkzVnNZWEpEYjJ4dmNrMWhjRG9nSVNGM0xuTndaV04xYkdGeVEyOXNiM0pOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJSE53WldOMWJHRnlRMjlzYjNKTllYQkZibU52WkdsdVp6b2djQ2gzTG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmhiSEJvWVUxaGNEb2dJU0YzTG1Gc2NHaGhUV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQmhiSEJvWVZSbGMzUTZJRU5sTEFvZ0lDQWdJQ0FnSUNBZ0lDQm5jbUZrYVdWdWRFMWhjRG9nSVNGM0xtZHlZV1JwWlc1MFRXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCemFHVmxiam9nZHk1emFHVmxiaUErSURBc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWldWdVEyOXNiM0pOWVhBNklDRWhkeTV6YUdWbGJrTnZiRzl5VFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdWbGJrTnZiRzl5VFdGd1JXNWpiMlJwYm1jNklIQW9keTV6YUdWbGJrTnZiRzl5VFdGd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEE2SUNFaGR5NXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTnRhWE56YVc5dU9pQjNMblJ5WVc1emJXbHpjMmx2YmlBK0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpiV2x6YzJsdmJrMWhjRG9nSVNGM0xuUnlZVzV6YldsemMybHZiazFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdkR2hwWTJ0dVpYTnpUV0Z3T2lBaElYY3VkR2hwWTJ0dVpYTnpUV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjFpYVc1bE9pQjNMbU52YldKcGJtVXNDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRlJoYm1kbGJuUnpPaUFoSVhjdWJtOXliV0ZzVFdGd0lDWW1JQ0VoUmk1blpXOXRaWFJ5ZVNBbUppQWhJVVl1WjJWdmJXVjBjbmt1WVhSMGNtbGlkWFJsY3k1MFlXNW5aVzUwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoRGIyeHZjbk02SUhjdWRtVnlkR1Y0UTI5c2IzSnpMQW9nSUNBZ0lDQWdJQ0FnSUNCMlpYSjBaWGhCYkhCb1lYTTZJSGN1ZG1WeWRHVjRRMjlzYjNKeklEMDlQU0FoTUNBbUppQWhJVVl1WjJWdmJXVjBjbmtnSmlZZ0lTRkdMbWRsYjIxbGRISjVMbUYwZEhKcFluVjBaWE11WTI5c2IzSWdKaVlnUmk1blpXOXRaWFJ5ZVM1aGRIUnlhV0oxZEdWekxtTnZiRzl5TG1sMFpXMVRhWHBsSUQwOVBTQTBMQW9nSUNBZ0lDQWdJQ0FnSUNCMlpYSjBaWGhWZG5NNklDRWhkeTV0WVhBZ2ZId2dJU0YzTG1KMWJYQk5ZWEFnZkh3Z0lTRjNMbTV2Y20xaGJFMWhjQ0I4ZkNBaElYY3VjM0JsWTNWc1lYSk5ZWEFnZkh3Z0lTRjNMbUZzY0doaFRXRndJSHg4SUNFaGR5NWxiV2x6YzJsMlpVMWhjQ0I4ZkNBaElYY3VjbTkxWjJodVpYTnpUV0Z3SUh4OElDRWhkeTV0WlhSaGJHNWxjM05OWVhBZ2ZId2dJU0YzTG1Oc1pXRnlZMjloZEUxaGNDQjhmQ0FoSVhjdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndJSHg4SUNFaGR5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdmSHdnSVNGM0xtUnBjM0JzWVdObGJXVnVkRTFoY0NCOGZDQWhJWGN1ZEhKaGJuTnRhWE56YVc5dVRXRndJSHg4SUNFaGR5NTBhR2xqYTI1bGMzTk5ZWEFnZkh3Z0lTRjNMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUh4OElDRWhkeTV6Y0dWamRXeGhja052Ykc5eVRXRndJSHg4SUNFaGR5NXphR1ZsYmtOdmJHOXlUV0Z3SUh4OElDRWhkeTV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RYWnpWbVZ5ZEdWNFQyNXNlVG9nSVNnaElYY3ViV0Z3SUh4OElDRWhkeTVpZFcxd1RXRndJSHg4SUNFaGR5NXViM0p0WVd4TllYQWdmSHdnSVNGM0xuTndaV04xYkdGeVRXRndJSHg4SUNFaGR5NWhiSEJvWVUxaGNDQjhmQ0FoSVhjdVpXMXBjM05wZG1WTllYQWdmSHdnSVNGM0xuSnZkV2RvYm1WemMwMWhjQ0I4ZkNBaElYY3ViV1YwWVd4dVpYTnpUV0Z3SUh4OElDRWhkeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnZkh3Z2R5NTBjbUZ1YzIxcGMzTnBiMjRnUGlBd0lIeDhJQ0VoZHk1MGNtRnVjMjFwYzNOcGIyNU5ZWEFnZkh3Z0lTRjNMblJvYVdOcmJtVnpjMDFoY0NCOGZDQWhJWGN1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBZ2ZId2dJU0YzTG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnZkh3Z2R5NXphR1ZsYmlBK0lEQWdmSHdnSVNGM0xuTm9aV1Z1UTI5c2IzSk5ZWEFnZkh3Z0lTRjNMbk5vWldWdVVtOTFaMmh1WlhOelRXRndLU0FtSmlBaElYY3VaR2x6Y0d4aFkyVnRaVzUwVFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JtYjJjNklDRWhUeXdLSUNBZ0lDQWdJQ0FnSUNBZ2RYTmxSbTluT2lCM0xtWnZaeXdLSUNBZ0lDQWdJQ0FnSUNBZ1ptOW5SWGh3TWpvZ1R5QW1KaUJQTG1selJtOW5SWGh3TWl3S0lDQWdJQ0FnSUNBZ0lDQWdabXhoZEZOb1lXUnBibWM2SUNFaGR5NW1iR0YwVTJoaFpHbHVaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2MybDZaVUYwZEdWdWRXRjBhVzl1T2lCM0xuTnBlbVZCZEhSbGJuVmhkR2x2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdiRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2pvZ2RTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJ0cGJtNXBibWM2SUVZdWFYTlRhMmx1Ym1Wa1RXVnphQ0E5UFQwZ0lUQWdKaVlnVnlBK0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUcxaGVFSnZibVZ6T2lCWExBb2dJQ0FnSUNBZ0lDQWdJQ0IxYzJWV1pYSjBaWGhVWlhoMGRYSmxPaUJrTEFvZ0lDQWdJQ0FnSUNBZ0lDQnRiM0p3YUZSaGNtZGxkSE02SUNFaFJpNW5aVzl0WlhSeWVTQW1KaUFoSVVZdVoyVnZiV1YwY25rdWJXOXljR2hCZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnRiM0p3YUU1dmNtMWhiSE02SUNFaFJpNW5aVzl0WlhSeWVTQW1KaUFoSVVZdVoyVnZiV1YwY25rdWJXOXljR2hCZEhSeWFXSjFkR1Z6TG01dmNtMWhiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXOXljR2hVWVhKblpYUnpRMjkxYm5RNklDRWhSaTVuWlc5dFpYUnllU0FtSmlBaElVWXVaMlZ2YldWMGNua3ViVzl5Y0doQmRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUlEOGdSaTVuWlc5dFpYUnllUzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHViR1Z1WjNSb0lEb2dNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRSR2x5VEdsbmFIUnpPaUJGTG1ScGNtVmpkR2x2Ym1Gc0xteGxibWQwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0VUc5cGJuUk1hV2RvZEhNNklFVXVjRzlwYm5RdWJHVnVaM1JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFUY0c5MFRHbG5hSFJ6T2lCRkxuTndiM1F1YkdWdVozUm9MQW9nSUNBZ0lDQWdJQ0FnSUNCdWRXMVNaV04wUVhKbFlVeHBaMmgwY3pvZ1JTNXlaV04wUVhKbFlTNXNaVzVuZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVobGJXbE1hV2RvZEhNNklFVXVhR1Z0YVM1c1pXNW5kR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVVJwY2t4cFoyaDBVMmhoWkc5M2N6b2dSUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoY0M1c1pXNW5kR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJ2YVc1MFRHbG5hSFJUYUdGa2IzZHpPaUJGTG5CdmFXNTBVMmhoWkc5M1RXRndMbXhsYm1kMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFUzQnZkRXhwWjJoMFUyaGhaRzkzY3pvZ1JTNXpjRzkwVTJoaFpHOTNUV0Z3TG14bGJtZDBhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRRMnhwY0hCcGJtZFFiR0Z1WlhNNklHOHViblZ0VUd4aGJtVnpMQW9nSUNBZ0lDQWdJQ0FnSUNCdWRXMURiR2x3U1c1MFpYSnpaV04wYVc5dU9pQnZMbTUxYlVsdWRHVnljMlZqZEdsdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eWJXRjBPaUIzTG1admNtMWhkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHbDBhR1Z5YVc1bk9pQjNMbVJwZEdobGNtbHVaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVFdGd1JXNWhZbXhsWkRvZ2N5NXphR0ZrYjNkTllYQXVaVzVoWW14bFpDQW1KaUJFTG14bGJtZDBhQ0ErSURBc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwMWhjRlI1Y0dVNklITXVjMmhoWkc5M1RXRndMblI1Y0dVc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ2Ym1WTllYQndhVzVuT2lCM0xuUnZibVZOWVhCd1pXUWdQeUJ6TG5SdmJtVk5ZWEJ3YVc1bklEb2dYMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQm9lWE5wWTJGc2JIbERiM0p5WldOMFRHbG5hSFJ6T2lCekxuQm9lWE5wWTJGc2JIbERiM0p5WldOMFRHbG5hSFJ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbVZ0ZFd4MGFYQnNhV1ZrUVd4d2FHRTZJSGN1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtiM1ZpYkdWVGFXUmxaRG9nZHk1emFXUmxJRDA5UFNCRGFTd0tJQ0FnSUNBZ0lDQWdJQ0FnWm14cGNGTnBaR1ZrT2lCM0xuTnBaR1VnUFQwOUlHbDBMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRkJoWTJ0cGJtYzZJSGN1WkdWd2RHaFFZV05yYVc1bklDRTlQU0IyYjJsa0lEQWdQeUIzTG1SbGNIUm9VR0ZqYTJsdVp5QTZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZURCQmRIUnlhV0oxZEdWT1lXMWxPaUIzTG1sdVpHVjRNRUYwZEhKcFluVjBaVTVoYldVc0NpQWdJQ0FnSUNBZ0lDQWdJR1Y0ZEdWdWMybHZia1JsY21sMllYUnBkbVZ6T2lCM0xtVjRkR1Z1YzJsdmJuTWdKaVlnZHk1bGVIUmxibk5wYjI1ekxtUmxjbWwyWVhScGRtVnpMQW9nSUNBZ0lDQWdJQ0FnSUNCbGVIUmxibk5wYjI1R2NtRm5SR1Z3ZEdnNklIY3VaWGgwWlc1emFXOXVjeUFtSmlCM0xtVjRkR1Z1YzJsdmJuTXVabkpoWjBSbGNIUm9MQW9nSUNBZ0lDQWdJQ0FnSUNCbGVIUmxibk5wYjI1RWNtRjNRblZtWm1WeWN6b2dkeTVsZUhSbGJuTnBiMjV6SUNZbUlIY3VaWGgwWlc1emFXOXVjeTVrY21GM1FuVm1abVZ5Y3l3S0lDQWdJQ0FnSUNBZ0lDQWdaWGgwWlc1emFXOXVVMmhoWkdWeVZHVjRkSFZ5WlV4UFJEb2dkeTVsZUhSbGJuTnBiMjV6SUNZbUlIY3VaWGgwWlc1emFXOXVjeTV6YUdGa1pYSlVaWGgwZFhKbFRFOUVMQW9nSUNBZ0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2tWNGRHVnVjMmx2YmtaeVlXZEVaWEIwYURvZ2FDQjhmQ0J1TG1oaGN5Z2lSVmhVWDJaeVlXZGZaR1Z3ZEdnaUtTd0tJQ0FnSUNBZ0lDQWdJQ0FnY21WdVpHVnlaWEpGZUhSbGJuTnBiMjVFY21GM1FuVm1abVZ5Y3pvZ2FDQjhmQ0J1TG1oaGN5Z2lWMFZDUjB4ZlpISmhkMTlpZFdabVpYSnpJaWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmxibVJsY21WeVJYaDBaVzV6YVc5dVUyaGhaR1Z5VkdWNGRIVnlaVXh2WkRvZ2FDQjhmQ0J1TG1oaGN5Z2lSVmhVWDNOb1lXUmxjbDkwWlhoMGRYSmxYMnh2WkNJcExBb2dJQ0FnSUNBZ0lDQWdJQ0JqZFhOMGIyMVFjbTluY21GdFEyRmphR1ZMWlhrNklIY3VZM1Z6ZEc5dFVISnZaM0poYlVOaFkyaGxTMlY1S0NrS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlU2gzS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCYlhUc0tJQ0FnSUNBZ0lDQnBaaUFvZHk1emFHRmtaWEpKUkNBL0lFVXVjSFZ6YUNoM0xuTm9ZV1JsY2tsRUtTQTZJQ2hGTG5CMWMyZ29keTVqZFhOMGIyMVdaWEowWlhoVGFHRmtaWEpKUkNrc0lFVXVjSFZ6YUNoM0xtTjFjM1J2YlVaeVlXZHRaVzUwVTJoaFpHVnlTVVFwS1N3Z2R5NWtaV1pwYm1WeklDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdSQ0JwYmlCM0xtUmxabWx1WlhNcFJTNXdkWE5vS0VRcExDQkZMbkIxYzJnb2R5NWtaV1pwYm1WelcwUmRLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkeTVwYzFKaGQxTm9ZV1JsY2sxaGRHVnlhV0ZzSUQwOVBTQWhNU0FtSmlBb1lpaEZMQ0IzS1N3Z1FTaEZMQ0IzS1N3Z1JTNXdkWE5vS0hNdWIzVjBjSFYwUlc1amIyUnBibWNwS1N3Z1JTNXdkWE5vS0hjdVkzVnpkRzl0VUhKdlozSmhiVU5oWTJobFMyVjVLU3dnUlM1cWIybHVLQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaUtIY3NJRVVwSUhzS0lDQWdJQ0FnSUNCM0xuQjFjMmdvUlM1d2NtVmphWE5wYjI0cExDQjNMbkIxYzJnb1JTNXZkWFJ3ZFhSRmJtTnZaR2x1Wnlrc0lIY3VjSFZ6YUNoRkxtMWhjRVZ1WTI5a2FXNW5LU3dnZHk1d2RYTm9LRVV1YldGMFkyRndSVzVqYjJScGJtY3BMQ0IzTG5CMWMyZ29SUzVsYm5aTllYQk5iMlJsS1N3Z2R5NXdkWE5vS0VVdVpXNTJUV0Z3Ulc1amIyUnBibWNwTENCM0xuQjFjMmdvUlM1c2FXZG9kRTFoY0VWdVkyOWthVzVuS1N3Z2R5NXdkWE5vS0VVdVpXMXBjM05wZG1WTllYQkZibU52WkdsdVp5a3NJSGN1Y0hWemFDaEZMbU52YldKcGJtVXBMQ0IzTG5CMWMyZ29SUzUyWlhKMFpYaFZkbk1wTENCM0xuQjFjMmdvUlM1bWIyZEZlSEF5S1N3Z2R5NXdkWE5vS0VVdWMybDZaVUYwZEdWdWRXRjBhVzl1S1N3Z2R5NXdkWE5vS0VVdWJXRjRRbTl1WlhNcExDQjNMbkIxYzJnb1JTNXRiM0p3YUZSaGNtZGxkSE5EYjNWdWRDa3NJSGN1Y0hWemFDaEZMbTUxYlVScGNreHBaMmgwY3lrc0lIY3VjSFZ6YUNoRkxtNTFiVkJ2YVc1MFRHbG5hSFJ6S1N3Z2R5NXdkWE5vS0VVdWJuVnRVM0J2ZEV4cFoyaDBjeWtzSUhjdWNIVnphQ2hGTG01MWJVaGxiV2xNYVdkb2RITXBMQ0IzTG5CMWMyZ29SUzV1ZFcxU1pXTjBRWEpsWVV4cFoyaDBjeWtzSUhjdWNIVnphQ2hGTG01MWJVUnBja3hwWjJoMFUyaGhaRzkzY3lrc0lIY3VjSFZ6YUNoRkxtNTFiVkJ2YVc1MFRHbG5hSFJUYUdGa2IzZHpLU3dnZHk1d2RYTm9LRVV1Ym5WdFUzQnZkRXhwWjJoMFUyaGhaRzkzY3lrc0lIY3VjSFZ6YUNoRkxuTm9ZV1J2ZDAxaGNGUjVjR1VwTENCM0xuQjFjMmdvUlM1MGIyNWxUV0Z3Y0dsdVp5a3NJSGN1Y0hWemFDaEZMbTUxYlVOc2FYQndhVzVuVUd4aGJtVnpLU3dnZHk1d2RYTm9LRVV1Ym5WdFEyeHBjRWx1ZEdWeWMyVmpkR2x2Ymlrc0lIY3VjSFZ6YUNoRkxtWnZjbTFoZENrc0lIY3VjSFZ6YUNoRkxuTndaV04xYkdGeVEyOXNiM0pOWVhCRmJtTnZaR2x1Wnlrc0lIY3VjSFZ6YUNoRkxuTm9aV1Z1UTI5c2IzSk5ZWEJGYm1OdlpHbHVaeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCQktIY3NJRVVwSUhzS0lDQWdJQ0FnSUNCaExtUnBjMkZpYkdWQmJHd29LU3dnUlM1cGMxZGxZa2RNTWlBbUppQmhMbVZ1WVdKc1pTZ3dLU3dnUlM1emRYQndiM0owYzFabGNuUmxlRlJsZUhSMWNtVnpJQ1ltSUdFdVpXNWhZbXhsS0RFcExDQkZMbWx1YzNSaGJtTnBibWNnSmlZZ1lTNWxibUZpYkdVb01pa3NJRVV1YVc1emRHRnVZMmx1WjBOdmJHOXlJQ1ltSUdFdVpXNWhZbXhsS0RNcExDQkZMbTFoY0NBbUppQmhMbVZ1WVdKc1pTZzBLU3dnUlM1dFlYUmpZWEFnSmlZZ1lTNWxibUZpYkdVb05Ta3NJRVV1Wlc1MlRXRndJQ1ltSUdFdVpXNWhZbXhsS0RZcExDQkZMbVZ1ZGsxaGNFTjFZbVZWVmlBbUppQmhMbVZ1WVdKc1pTZzNLU3dnUlM1c2FXZG9kRTFoY0NBbUppQmhMbVZ1WVdKc1pTZzRLU3dnUlM1aGIwMWhjQ0FtSmlCaExtVnVZV0pzWlNnNUtTd2dSUzVsYldsemMybDJaVTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hNQ2tzSUVVdVluVnRjRTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hNU2tzSUVVdWJtOXliV0ZzVFdGd0lDWW1JR0V1Wlc1aFlteGxLREV5S1N3Z1JTNXZZbXBsWTNSVGNHRmpaVTV2Y20xaGJFMWhjQ0FtSmlCaExtVnVZV0pzWlNneE15a3NJRVV1ZEdGdVoyVnVkRk53WVdObFRtOXliV0ZzVFdGd0lDWW1JR0V1Wlc1aFlteGxLREUwS1N3Z1JTNWpiR1ZoY21OdllYUWdKaVlnWVM1bGJtRmliR1VvTVRVcExDQkZMbU5zWldGeVkyOWhkRTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hOaWtzSUVVdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndJQ1ltSUdFdVpXNWhZbXhsS0RFM0tTd2dSUzVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnSmlZZ1lTNWxibUZpYkdVb01UZ3BMQ0JGTG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlCaExtVnVZV0pzWlNneE9Ta3NJRVV1YzNCbFkzVnNZWEpOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NakFwTENCRkxuSnZkV2RvYm1WemMwMWhjQ0FtSmlCaExtVnVZV0pzWlNneU1Ta3NJRVV1YldWMFlXeHVaWE56VFdGd0lDWW1JR0V1Wlc1aFlteGxLREl5S1N3Z1JTNW5jbUZrYVdWdWRFMWhjQ0FtSmlCaExtVnVZV0pzWlNneU15a3NJRVV1WVd4d2FHRk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01qUXBMQ0JGTG1Gc2NHaGhWR1Z6ZENBbUppQmhMbVZ1WVdKc1pTZ3lOU2tzSUVVdWRtVnlkR1Y0UTI5c2IzSnpJQ1ltSUdFdVpXNWhZbXhsS0RJMktTd2dSUzUyWlhKMFpYaEJiSEJvWVhNZ0ppWWdZUzVsYm1GaWJHVW9NamNwTENCRkxuWmxjblJsZUZWMmN5QW1KaUJoTG1WdVlXSnNaU2d5T0Nrc0lFVXVkbVZ5ZEdWNFZHRnVaMlZ1ZEhNZ0ppWWdZUzVsYm1GaWJHVW9NamtwTENCRkxuVjJjMVpsY25SbGVFOXViSGtnSmlZZ1lTNWxibUZpYkdVb016QXBMQ0JGTG1adlp5QW1KaUJoTG1WdVlXSnNaU2d6TVNrc0lIY3VjSFZ6YUNoaExtMWhjMnNwTENCaExtUnBjMkZpYkdWQmJHd29LU3dnUlM1MWMyVkdiMmNnSmlZZ1lTNWxibUZpYkdVb01Da3NJRVV1Wm14aGRGTm9ZV1JwYm1jZ0ppWWdZUzVsYm1GaWJHVW9NU2tzSUVVdWJHOW5ZWEpwZEdodGFXTkVaWEIwYUVKMVptWmxjaUFtSmlCaExtVnVZV0pzWlNneUtTd2dSUzV6YTJsdWJtbHVaeUFtSmlCaExtVnVZV0pzWlNnektTd2dSUzUxYzJWV1pYSjBaWGhVWlhoMGRYSmxJQ1ltSUdFdVpXNWhZbXhsS0RRcExDQkZMbTF2Y25Cb1ZHRnlaMlYwY3lBbUppQmhMbVZ1WVdKc1pTZzFLU3dnUlM1dGIzSndhRTV2Y20xaGJITWdKaVlnWVM1bGJtRmliR1VvTmlrc0lFVXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhJQ1ltSUdFdVpXNWhZbXhsS0RjcExDQkZMbk5vWVdSdmQwMWhjRVZ1WVdKc1pXUWdKaVlnWVM1bGJtRmliR1VvT0Nrc0lFVXVjR2g1YzJsallXeHNlVU52Y25KbFkzUk1hV2RvZEhNZ0ppWWdZUzVsYm1GaWJHVW9PU2tzSUVVdVpHOTFZbXhsVTJsa1pXUWdKaVlnWVM1bGJtRmliR1VvTVRBcExDQkZMbVpzYVhCVGFXUmxaQ0FtSmlCaExtVnVZV0pzWlNneE1Ta3NJRVV1WkdWd2RHaFFZV05yYVc1bklDWW1JR0V1Wlc1aFlteGxLREV5S1N3Z1JTNWthWFJvWlhKcGJtY2dKaVlnWVM1bGJtRmliR1VvTVRNcExDQkZMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUNZbUlHRXVaVzVoWW14bEtERTBLU3dnUlM1emNHVmpkV3hoY2tOdmJHOXlUV0Z3SUNZbUlHRXVaVzVoWW14bEtERTFLU3dnUlM1MGNtRnVjMjFwYzNOcGIyNGdKaVlnWVM1bGJtRmliR1VvTVRZcExDQkZMblJ5WVc1emJXbHpjMmx2YmsxaGNDQW1KaUJoTG1WdVlXSnNaU2d4Tnlrc0lFVXVkR2hwWTJ0dVpYTnpUV0Z3SUNZbUlHRXVaVzVoWW14bEtERTRLU3dnUlM1emFHVmxiaUFtSmlCaExtVnVZV0pzWlNneE9Ta3NJRVV1YzJobFpXNURiMnh2Y2sxaGNDQW1KaUJoTG1WdVlXSnNaU2d5TUNrc0lFVXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQWdKaVlnWVM1bGJtRmliR1VvTWpFcExDQjNMbkIxYzJnb1lTNXRZWE5yS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFd29keWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQkZJRDBnZGx0M0xuUjVjR1ZkTENCRU93b2dJQ0FnSUNBZ0lHbG1JQ2hGS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVklEMGdjWFJiUlYwN0NpQWdJQ0FnSUNBZ0lDQWdJRVFnUFNCMVppNWpiRzl1WlNoVkxuVnVhV1p2Y20xektUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1JDQTlJSGN1ZFc1cFptOXliWE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRVE3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCSktIY3NJRVVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdSRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRlVnUFNBd0xDQkdJRDBnWXk1c1pXNW5kR2c3SUZVZ1BDQkdPeUJWS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1R5QTlJR05iVlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoUExtTmhZMmhsUzJWNUlEMDlQU0JGS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRUlEMGdUeXdnS3l0RUxuVnpaV1JVYVcxbGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQkVJRDA5UFNCMmIybGtJREFnSmlZZ0tFUWdQU0J1WlhjZ2FIZ29jeXdnUlN3Z2R5d2djaWtzSUdNdWNIVnphQ2hFS1Nrc0lFUTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJyS0hjcElIc0tJQ0FnSUNBZ0lDQnBaaUFvTFMxM0xuVnpaV1JVYVcxbGN5QTlQVDBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJR011YVc1a1pYaFBaaWgzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZMXRGWFNBOUlHTmJZeTVzWlc1bmRHZ2dMU0F4WFN3Z1l5NXdiM0FvS1N3Z2R5NWtaWE4wY205NUtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUWloM0tTQjdDaUFnSUNBZ0lDQWdiQzV5WlcxdmRtVW9keWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCUUtDa2dld29nSUNBZ0lDQWdJR3d1WkdsemNHOXpaU2dwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCblpYUlFZWEpoYldWMFpYSnpPaUJmTEFvZ0lDQWdJQ0FnSUdkbGRGQnliMmR5WVcxRFlXTm9aVXRsZVRvZ2VTd0tJQ0FnSUNBZ0lDQm5aWFJWYm1sbWIzSnRjem9nVEN3S0lDQWdJQ0FnSUNCaFkzRjFhWEpsVUhKdlozSmhiVG9nU1N3S0lDQWdJQ0FnSUNCeVpXeGxZWE5sVUhKdlozSmhiVG9nYXl3S0lDQWdJQ0FnSUNCeVpXeGxZWE5sVTJoaFpHVnlRMkZqYUdVNklFSXNDaUFnSUNBZ0lDQWdjSEp2WjNKaGJYTTZJR01zQ2lBZ0lDQWdJQ0FnWkdsemNHOXpaVG9nVUFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCbWVDZ3BJSHNLSUNBZ0lHeGxkQ0J6SUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCbWRXNWpkR2x2YmlCbEtISXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSE11WjJWMEtISXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnZJRDA5UFNCMmIybGtJREFnSmlZZ0tHOGdQU0I3ZlN3Z2N5NXpaWFFvY2l3Z2J5a3BMQ0J2T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2RDaHlLU0I3Q2lBZ0lDQWdJQ0FnY3k1a1pXeGxkR1VvY2lrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnVLSElzSUc4c0lHRXBJSHNLSUNBZ0lDQWdJQ0J6TG1kbGRDaHlLVnR2WFNBOUlHRTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJwS0NrZ2V3b2dJQ0FnSUNBZ0lITWdQU0J1WlhjZ1YyVmhhMDFoY0RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJsTEFvZ0lDQWdJQ0FnSUhKbGJXOTJaVG9nZEN3S0lDQWdJQ0FnSUNCMWNHUmhkR1U2SUc0c0NpQWdJQ0FnSUNBZ1pHbHpjRzl6WlRvZ2FRb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQndlQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3k1bmNtOTFjRTl5WkdWeUlDRTlQU0JsTG1keWIzVndUM0prWlhJZ1B5QnpMbWR5YjNWd1QzSmtaWElnTFNCbExtZHliM1Z3VDNKa1pYSWdPaUJ6TG5KbGJtUmxjazl5WkdWeUlDRTlQU0JsTG5KbGJtUmxjazl5WkdWeUlEOGdjeTV5Wlc1a1pYSlBjbVJsY2lBdElHVXVjbVZ1WkdWeVQzSmtaWElnT2lCekxtMWhkR1Z5YVdGc0xtbGtJQ0U5UFNCbExtMWhkR1Z5YVdGc0xtbGtJRDhnY3k1dFlYUmxjbWxoYkM1cFpDQXRJR1V1YldGMFpYSnBZV3d1YVdRZ09pQnpMbm9nSVQwOUlHVXVlaUEvSUhNdWVpQXRJR1V1ZWlBNklITXVhV1FnTFNCbExtbGtPd3A5Q21aMWJtTjBhVzl1SUZsc0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnpMbWR5YjNWd1QzSmtaWElnSVQwOUlHVXVaM0p2ZFhCUGNtUmxjaUEvSUhNdVozSnZkWEJQY21SbGNpQXRJR1V1WjNKdmRYQlBjbVJsY2lBNklITXVjbVZ1WkdWeVQzSmtaWElnSVQwOUlHVXVjbVZ1WkdWeVQzSmtaWElnUHlCekxuSmxibVJsY2s5eVpHVnlJQzBnWlM1eVpXNWtaWEpQY21SbGNpQTZJSE11ZWlBaFBUMGdaUzU2SUQ4Z1pTNTZJQzBnY3k1NklEb2djeTVwWkNBdElHVXVhV1E3Q24wS1puVnVZM1JwYjI0Z1dtd29LU0I3Q2lBZ0lDQnNaWFFnY3lBOUlGdGRMQ0JsSUQwZ01Dd2dkQ0E5SUZ0ZExDQnVJRDBnVzEwc0lHa2dQU0JiWFRzS0lDQWdJR1oxYm1OMGFXOXVJSElvS1NCN0NpQWdJQ0FnSUNBZ1pTQTlJREFzSUhRdWJHVnVaM1JvSUQwZ01Dd2diaTVzWlc1bmRHZ2dQU0F3TENCcExteGxibWQwYUNBOUlEQTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ2S0hVc0lHUXNJR1lzSUcwc0lIZ3NJSFlwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUhOYlpWMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHY2dQVDA5SUhadmFXUWdNQ0EvSUNobklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCcFpEb2dkUzVwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOME9pQjFMQW9nSUNBZ0lDQWdJQ0FnSUNCblpXOXRaWFJ5ZVRvZ1pDd0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMFpYSnBZV3c2SUdZc0NpQWdJQ0FnSUNBZ0lDQWdJR2R5YjNWd1QzSmtaWEk2SUcwc0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNrOXlaR1Z5T2lCMUxuSmxibVJsY2s5eVpHVnlMQW9nSUNBZ0lDQWdJQ0FnSUNCNk9pQjRMQW9nSUNBZ0lDQWdJQ0FnSUNCbmNtOTFjRG9nZGdvZ0lDQWdJQ0FnSUgwc0lITmJaVjBnUFNCbktTQTZJQ2huTG1sa0lEMGdkUzVwWkN3Z1p5NXZZbXBsWTNRZ1BTQjFMQ0JuTG1kbGIyMWxkSEo1SUQwZ1pDd2daeTV0WVhSbGNtbGhiQ0E5SUdZc0lHY3VaM0p2ZFhCUGNtUmxjaUE5SUcwc0lHY3VjbVZ1WkdWeVQzSmtaWElnUFNCMUxuSmxibVJsY2s5eVpHVnlMQ0JuTG5vZ1BTQjRMQ0JuTG1keWIzVndJRDBnZGlrc0lHVXJLeXdnWnpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHRW9kU3dnWkN3Z1ppd2diU3dnZUN3Z2Rpa2dld29nSUNBZ0lDQWdJR3hsZENCbklEMGdieWgxTENCa0xDQm1MQ0J0TENCNExDQjJLVHNLSUNBZ0lDQWdJQ0JtTG5SeVlXNXpiV2x6YzJsdmJpQStJREFnUHlCdUxuQjFjMmdvWnlrZ09pQm1MblJ5WVc1emNHRnlaVzUwSUQwOVBTQWhNQ0EvSUdrdWNIVnphQ2huS1NBNklIUXVjSFZ6YUNobktUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR3dvZFN3Z1pDd2daaXdnYlN3Z2VDd2dkaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnYnloMUxDQmtMQ0JtTENCdExDQjRMQ0IyS1RzS0lDQWdJQ0FnSUNCbUxuUnlZVzV6YldsemMybHZiaUErSURBZ1B5QnVMblZ1YzJocFpuUW9aeWtnT2lCbUxuUnlZVzV6Y0dGeVpXNTBJRDA5UFNBaE1DQS9JR2t1ZFc1emFHbG1kQ2huS1NBNklIUXVkVzV6YUdsbWRDaG5LVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdNb2RTd2daQ2tnZXdvZ0lDQWdJQ0FnSUhRdWJHVnVaM1JvSUQ0Z01TQW1KaUIwTG5OdmNuUW9kU0I4ZkNCd2VDa3NJRzR1YkdWdVozUm9JRDRnTVNBbUppQnVMbk52Y25Rb1pDQjhmQ0JaYkNrc0lHa3ViR1Z1WjNSb0lENGdNU0FtSmlCcExuTnZjblFvWkNCOGZDQlpiQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCb0tDa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkU0E5SUdVc0lHUWdQU0J6TG14bGJtZDBhRHNnZFNBOElHUTdJSFVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdjMXQxWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dZdWFXUWdQVDA5SUc1MWJHd3BJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JtTG1sa0lEMGdiblZzYkN3Z1ppNXZZbXBsWTNRZ1BTQnVkV3hzTENCbUxtZGxiMjFsZEhKNUlEMGdiblZzYkN3Z1ppNXRZWFJsY21saGJDQTlJRzUxYkd3c0lHWXVaM0p2ZFhBZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ2IzQmhjWFZsT2lCMExBb2dJQ0FnSUNBZ0lIUnlZVzV6YldsemMybDJaVG9nYml3S0lDQWdJQ0FnSUNCMGNtRnVjM0JoY21WdWREb2dhU3dLSUNBZ0lDQWdJQ0JwYm1sME9pQnlMQW9nSUNBZ0lDQWdJSEIxYzJnNklHRXNDaUFnSUNBZ0lDQWdkVzV6YUdsbWREb2diQ3dLSUNBZ0lDQWdJQ0JtYVc1cGMyZzZJR2dzQ2lBZ0lDQWdJQ0FnYzI5eWREb2dZd29nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJ0ZUNncElIc0tJQ0FnSUd4bGRDQnpJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0JtZFc1amRHbHZiaUJsS0c0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2Nqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2N5NW9ZWE1vYmlrZ1BUMDlJQ0V4SUQ4Z0tISWdQU0J1WlhjZ1dtd3NJSE11YzJWMEtHNHNJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2Nnb2dJQ0FnSUNBZ0lGMHBLU0E2SUdrZ1BqMGdjeTVuWlhRb2Jpa3ViR1Z1WjNSb0lEOGdLSElnUFNCdVpYY2dXbXdzSUhNdVoyVjBLRzRwTG5CMWMyZ29jaWtwSURvZ2NpQTlJSE11WjJWMEtHNHBXMmxkTENCeU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkQ2dwSUhzS0lDQWdJQ0FnSUNCeklEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdkbGREb2daU3dLSUNBZ0lDQWdJQ0JrYVhOd2IzTmxPaUIwQ2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUdkNEtDa2dld29nSUNBZ2JHVjBJSE1nUFNCN2ZUc0tJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6VzJVdWFXUmRJQ0U5UFNCMmIybGtJREFwSUhKbGRIVnliaUJ6VzJVdWFXUmRPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ2MzZHBkR05vS0dVdWRIbHdaU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSkVhWEpsWTNScGIyNWhiRXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI0NklHNWxkeUJOTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dibVYzSUdGbENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsTndiM1JNYVdkb2RDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHNWxkeUJOTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjQ2SUc1bGR5Qk5MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2JtVjNJR0ZsTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaVG9nTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVpVTnZjem9nTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dWdWRXMWljbUZEYjNNNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxZMkY1T2lBd0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsQnZhVzUwVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnVaWGNnVFN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJRzVsZHlCaFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxZMkY1T2lBd0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lraGxiV2x6Y0dobGNtVk1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1T2lCdVpYY2dUU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMnQ1UTI5c2IzSTZJRzVsZHlCaFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ozSnZkVzVrUTI5c2IzSTZJRzVsZHlCaFpRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlNaV04wUVhKbFlVeHBaMmgwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dibVYzSUdGbExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2JtVjNJRTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2hoYkdaWGFXUjBhRG9nYm1WM0lFMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGhiR1pJWldsbmFIUTZJRzVsZHlCTkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjMXRsTG1sa1hTQTlJSFFzSUhRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQjRlQ2dwSUhzS0lDQWdJR3hsZENCeklEMGdlMzA3Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MxdGxMbWxrWFNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2MxdGxMbWxrWFRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRN0NpQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFDaGxMblI1Y0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpUkdseVpXTjBhVzl1WVd4TWFXZG9kQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1FtbGhjem9nTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNUbTl5YldGc1FtbGhjem9nTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNVbUZrYVhWek9pQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkTllYQlRhWHBsT2lCdVpYY2dXQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pUY0c5MFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwSnBZWE02SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE02SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMUpoWkdsMWN6b2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1RXRndVMmw2WlRvZ2JtVjNJRmdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVUc5cGJuUk1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRbWxoY3pvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVG05eWJXRnNRbWxoY3pvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVW1Ga2FYVnpPaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE5ZWEJUYVhwbE9pQnVaWGNnV0N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRMkZ0WlhKaFRtVmhjam9nTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRMkZ0WlhKaFJtRnlPaUF4WlRNS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnpXMlV1YVdSZElEMGdkQ3dnZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5T3dwOUNuWmhjaUI1ZUNBOUlEQTdDbVoxYm1OMGFXOXVJSFo0S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlBb1pTNWpZWE4wVTJoaFpHOTNJRDhnTVNBNklEQXBJQzBnS0hNdVkyRnpkRk5vWVdSdmR5QS9JREVnT2lBd0tUc0tmUXBtZFc1amRHbHZiaUJmZUNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlHNWxkeUJuZUN3Z2JpQTlJSGg0S0Nrc0lHa2dQU0I3Q2lBZ0lDQWdJQ0FnZG1WeWMybHZiam9nTUN3S0lDQWdJQ0FnSUNCb1lYTm9PaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJtRnNUR1Z1WjNSb09pQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXBiblJNWlc1bmRHZzZJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpjRzkwVEdWdVozUm9PaUF0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdjbVZqZEVGeVpXRk1aVzVuZEdnNklDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXMXBUR1Z1WjNSb09pQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRSR2x5WldOMGFXOXVZV3hUYUdGa2IzZHpPaUF0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0VUc5cGJuUlRhR0ZrYjNkek9pQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVM0J2ZEZOb1lXUnZkM002SUMweENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmhiV0pwWlc1ME9pQmJDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQmRMQW9nSUNBZ0lDQWdJSEJ5YjJKbE9pQmJYU3dLSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjVoYkRvZ1cxMHNDaUFnSUNBZ0lDQWdaR2x5WldOMGFXOXVZV3hUYUdGa2IzYzZJRnRkTEFvZ0lDQWdJQ0FnSUdScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGd09pQmJYU3dLSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoZEhKcGVEb2dXMTBzQ2lBZ0lDQWdJQ0FnYzNCdmREb2dXMTBzQ2lBZ0lDQWdJQ0FnYzNCdmRGTm9ZV1J2ZHpvZ1cxMHNDaUFnSUNBZ0lDQWdjM0J2ZEZOb1lXUnZkMDFoY0RvZ1cxMHNDaUFnSUNBZ0lDQWdjM0J2ZEZOb1lXUnZkMDFoZEhKcGVEb2dXMTBzQ2lBZ0lDQWdJQ0FnY21WamRFRnlaV0U2SUZ0ZExBb2dJQ0FnSUNBZ0lISmxZM1JCY21WaFRGUkRNVG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQnlaV04wUVhKbFlVeFVRekk2SUc1MWJHd3NDaUFnSUNBZ0lDQWdjRzlwYm5RNklGdGRMQW9nSUNBZ0lDQWdJSEJ2YVc1MFUyaGhaRzkzT2lCYlhTd0tJQ0FnSUNBZ0lDQndiMmx1ZEZOb1lXUnZkMDFoY0RvZ1cxMHNDaUFnSUNBZ0lDQWdjRzlwYm5SVGFHRmtiM2ROWVhSeWFYZzZJRnRkTEFvZ0lDQWdJQ0FnSUdobGJXazZJRnRkQ2lBZ0lDQjlPd29nSUNBZ1ptOXlLR3hsZENCb0lEMGdNRHNnYUNBOElEazdJR2dyS3lscExuQnliMkpsTG5CMWMyZ29ibVYzSUUwcE93b2dJQ0FnYkdWMElISWdQU0J1WlhjZ1RTd2dieUE5SUc1bGR5QndaU3dnWVNBOUlHNWxkeUJ3WlRzS0lDQWdJR1oxYm1OMGFXOXVJR3dvYUN3Z2RTa2dld29nSUNBZ0lDQWdJR3hsZENCa0lEMGdNQ3dnWmlBOUlEQXNJRzBnUFNBd093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2F5QTlJREE3SUdzZ1BDQTVPeUJyS3lzcGFTNXdjbTlpWlZ0clhTNXpaWFFvTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElIZ2dQU0F3TENCMklEMGdNQ3dnWnlBOUlEQXNJSEFnUFNBd0xDQmZJRDBnTUN3Z2VTQTlJREFzSUdJZ1BTQXdMQ0JCSUQwZ01Ec0tJQ0FnSUNBZ0lDQm9Mbk52Y25Rb2RuZ3BPd29nSUNBZ0lDQWdJR3hsZENCTUlEMGdkU0FoUFQwZ0lUQWdQeUJOWVhSb0xsQkpJRG9nTVRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdzZ1BTQXdMQ0JDSUQwZ2FDNXNaVzVuZEdnN0lHc2dQQ0JDT3lCckt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdVQ0E5SUdoYmExMHNJSGNnUFNCUUxtTnZiRzl5TENCRklEMGdVQzVwYm5SbGJuTnBkSGtzSUVRZ1BTQlFMbVJwYzNSaGJtTmxMQ0JWSUQwZ1VDNXphR0ZrYjNjZ0ppWWdVQzV6YUdGa2IzY3ViV0Z3SUQ4Z1VDNXphR0ZrYjNjdWJXRndMblJsZUhSMWNtVWdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1VDNXBjMEZ0WW1sbGJuUk1hV2RvZENrZ1pDQXJQU0IzTG5JZ0tpQkZJQ29nVEN3Z1ppQXJQU0IzTG1jZ0tpQkZJQ29nVEN3Z2JTQXJQU0IzTG1JZ0tpQkZJQ29nVERzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCcFppQW9VQzVwYzB4cFoyaDBVSEp2WW1VcElHWnZjaWhzWlhRZ1JpQTlJREE3SUVZZ1BDQTVPeUJHS3lzcGFTNXdjbTlpWlZ0R1hTNWhaR1JUWTJGc1pXUldaV04wYjNJb1VDNXphQzVqYjJWbVptbGphV1Z1ZEhOYlJsMHNJRVVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFFMbWx6UkdseVpXTjBhVzl1WVd4TWFXZG9kQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0IwTG1kbGRDaFFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoR0xtTnZiRzl5TG1OdmNIa29VQzVqYjJ4dmNpa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1VDNXBiblJsYm5OcGRIa2dLaUJNS1N3Z1VDNWpZWE4wVTJoaFpHOTNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRThnUFNCUUxuTm9ZV1J2ZHl3Z2JtVWdQU0J1TG1kbGRDaFFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpTNXphR0ZrYjNkQ2FXRnpJRDBnVHk1aWFXRnpMQ0J1WlM1emFHRmtiM2RPYjNKdFlXeENhV0Z6SUQwZ1R5NXViM0p0WVd4Q2FXRnpMQ0J1WlM1emFHRmtiM2RTWVdScGRYTWdQU0JQTG5KaFpHbDFjeXdnYm1VdWMyaGhaRzkzVFdGd1UybDZaU0E5SUU4dWJXRndVMmw2WlN3Z2FTNWthWEpsWTNScGIyNWhiRk5vWVdSdmQxdDRYU0E5SUc1bExDQnBMbVJwY21WamRHbHZibUZzVTJoaFpHOTNUV0Z3VzNoZElEMGdWU3dnYVM1a2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGRISnBlRnQ0WFNBOUlGQXVjMmhoWkc5M0xtMWhkSEpwZUN3Z2VTc3JPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzVrYVhKbFkzUnBiMjVoYkZ0NFhTQTlJRVlzSUhnckt6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoUUxtbHpVM0J2ZEV4cFoyaDBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJSFF1WjJWMEtGQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VZdWNHOXphWFJwYjI0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLRkF1YldGMGNtbDRWMjl5YkdRcExDQkdMbU52Ykc5eUxtTnZjSGtvZHlrdWJYVnNkR2x3YkhsVFkyRnNZWElvUlNBcUlFd3BMQ0JHTG1ScGMzUmhibU5sSUQwZ1JDd2dSaTVqYjI1bFEyOXpJRDBnVFdGMGFDNWpiM01vVUM1aGJtZHNaU2tzSUVZdWNHVnVkVzFpY21GRGIzTWdQU0JOWVhSb0xtTnZjeWhRTG1GdVoyeGxJQ29nS0RFZ0xTQlFMbkJsYm5WdFluSmhLU2tzSUVZdVpHVmpZWGtnUFNCUUxtUmxZMkY1TENCUUxtTmhjM1JUYUdGa2IzY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUeUE5SUZBdWMyaGhaRzkzTENCdVpTQTlJRzR1WjJWMEtGQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1bExuTm9ZV1J2ZDBKcFlYTWdQU0JQTG1KcFlYTXNJRzVsTG5Ob1lXUnZkMDV2Y20xaGJFSnBZWE1nUFNCUExtNXZjbTFoYkVKcFlYTXNJRzVsTG5Ob1lXUnZkMUpoWkdsMWN5QTlJRTh1Y21Ga2FYVnpMQ0J1WlM1emFHRmtiM2ROWVhCVGFYcGxJRDBnVHk1dFlYQlRhWHBsTENCcExuTndiM1JUYUdGa2IzZGJaMTBnUFNCdVpTd2dhUzV6Y0c5MFUyaGhaRzkzVFdGd1cyZGRJRDBnVlN3Z2FTNXpjRzkwVTJoaFpHOTNUV0YwY21sNFcyZGRJRDBnVUM1emFHRmtiM2N1YldGMGNtbDRMQ0JCS3lzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcExuTndiM1JiWjEwZ1BTQkdMQ0JuS3lzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvVUM1cGMxSmxZM1JCY21WaFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkdJRDBnZEM1blpYUW9VQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JHTG1OdmJHOXlMbU52Y0hrb2R5a3ViWFZzZEdsd2JIbFRZMkZzWVhJb1JTa3NJRVl1YUdGc1psZHBaSFJvTG5ObGRDaFFMbmRwWkhSb0lDb2dMalVzSURBc0lEQXBMQ0JHTG1oaGJHWklaV2xuYUhRdWMyVjBLREFzSUZBdWFHVnBaMmgwSUNvZ0xqVXNJREFwTENCcExuSmxZM1JCY21WaFczQmRJRDBnUml3Z2NDc3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tGQXVhWE5RYjJsdWRFeHBaMmgwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUhRdVoyVjBLRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFWXVZMjlzYjNJdVkyOXdlU2hRTG1OdmJHOXlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaFFMbWx1ZEdWdWMybDBlU0FxSUV3cExDQkdMbVJwYzNSaGJtTmxJRDBnVUM1a2FYTjBZVzVqWlN3Z1JpNWtaV05oZVNBOUlGQXVaR1ZqWVhrc0lGQXVZMkZ6ZEZOb1lXUnZkeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JQSUQwZ1VDNXphR0ZrYjNjc0lHNWxJRDBnYmk1blpYUW9VQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVXVjMmhoWkc5M1FtbGhjeUE5SUU4dVltbGhjeXdnYm1VdWMyaGhaRzkzVG05eWJXRnNRbWxoY3lBOUlFOHVibTl5YldGc1FtbGhjeXdnYm1VdWMyaGhaRzkzVW1Ga2FYVnpJRDBnVHk1eVlXUnBkWE1zSUc1bExuTm9ZV1J2ZDAxaGNGTnBlbVVnUFNCUExtMWhjRk5wZW1Vc0lHNWxMbk5vWVdSdmQwTmhiV1Z5WVU1bFlYSWdQU0JQTG1OaGJXVnlZUzV1WldGeUxDQnVaUzV6YUdGa2IzZERZVzFsY21GR1lYSWdQU0JQTG1OaGJXVnlZUzVtWVhJc0lHa3VjRzlwYm5SVGFHRmtiM2RiZGwwZ1BTQnVaU3dnYVM1d2IybHVkRk5vWVdSdmQwMWhjRnQyWFNBOUlGVXNJR2t1Y0c5cGJuUlRhR0ZrYjNkTllYUnlhWGhiZGwwZ1BTQlFMbk5vWVdSdmR5NXRZWFJ5YVhnc0lHSXJLenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1Y0c5cGJuUmJkbDBnUFNCR0xDQjJLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9VQzVwYzBobGJXbHpjR2hsY21WTWFXZG9kQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0IwTG1kbGRDaFFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRVl1YzJ0NVEyOXNiM0l1WTI5d2VTaFFMbU52Ykc5eUtTNXRkV3gwYVhCc2VWTmpZV3hoY2loRklDb2dUQ2tzSUVZdVozSnZkVzVrUTI5c2IzSXVZMjl3ZVNoUUxtZHliM1Z1WkVOdmJHOXlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaEZJQ29nVENrc0lHa3VhR1Z0YVZ0ZlhTQTlJRVlzSUY4ckt6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCd0lENGdNQ0FtSmlBb1pTNXBjMWRsWWtkTU1pQjhmQ0J6TG1oaGN5Z2lUMFZUWDNSbGVIUjFjbVZmWm14dllYUmZiR2x1WldGeUlpa2dQVDA5SUNFd0lEOGdLR2t1Y21WamRFRnlaV0ZNVkVNeElEMGdhV1V1VEZSRFgwWk1UMEZVWHpFc0lHa3VjbVZqZEVGeVpXRk1WRU15SUQwZ2FXVXVURlJEWDBaTVQwRlVYeklwSURvZ2N5NW9ZWE1vSWs5RlUxOTBaWGgwZFhKbFgyaGhiR1pmWm14dllYUmZiR2x1WldGeUlpa2dQVDA5SUNFd0lEOGdLR2t1Y21WamRFRnlaV0ZNVkVNeElEMGdhV1V1VEZSRFgwaEJURVpmTVN3Z2FTNXlaV04wUVhKbFlVeFVReklnUFNCcFpTNU1WRU5mU0VGTVJsOHlLU0E2SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUZWdVlXSnNaU0IwYnlCMWMyVWdVbVZqZEVGeVpXRk1hV2RvZEM0Z1RXbHpjMmx1WnlCWFpXSkhUQ0JsZUhSbGJuTnBiMjV6TGlJcEtTd2dhUzVoYldKcFpXNTBXekJkSUQwZ1pDd2dhUzVoYldKcFpXNTBXekZkSUQwZ1ppd2dhUzVoYldKcFpXNTBXekpkSUQwZ2JUc0tJQ0FnSUNBZ0lDQnNaWFFnU1NBOUlHa3VhR0Z6YURzS0lDQWdJQ0FnSUNBb1NTNWthWEpsWTNScGIyNWhiRXhsYm1kMGFDQWhQVDBnZUNCOGZDQkpMbkJ2YVc1MFRHVnVaM1JvSUNFOVBTQjJJSHg4SUVrdWMzQnZkRXhsYm1kMGFDQWhQVDBnWnlCOGZDQkpMbkpsWTNSQmNtVmhUR1Z1WjNSb0lDRTlQU0J3SUh4OElFa3VhR1Z0YVV4bGJtZDBhQ0FoUFQwZ1h5QjhmQ0JKTG01MWJVUnBjbVZqZEdsdmJtRnNVMmhoWkc5M2N5QWhQVDBnZVNCOGZDQkpMbTUxYlZCdmFXNTBVMmhoWkc5M2N5QWhQVDBnWWlCOGZDQkpMbTUxYlZOd2IzUlRhR0ZrYjNkeklDRTlQU0JCS1NBbUppQW9hUzVrYVhKbFkzUnBiMjVoYkM1c1pXNW5kR2dnUFNCNExDQnBMbk53YjNRdWJHVnVaM1JvSUQwZ1p5d2dhUzV5WldOMFFYSmxZUzVzWlc1bmRHZ2dQU0J3TENCcExuQnZhVzUwTG14bGJtZDBhQ0E5SUhZc0lHa3VhR1Z0YVM1c1pXNW5kR2dnUFNCZkxDQnBMbVJwY21WamRHbHZibUZzVTJoaFpHOTNMbXhsYm1kMGFDQTlJSGtzSUdrdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYQXViR1Z1WjNSb0lEMGdlU3dnYVM1d2IybHVkRk5vWVdSdmR5NXNaVzVuZEdnZ1BTQmlMQ0JwTG5CdmFXNTBVMmhoWkc5M1RXRndMbXhsYm1kMGFDQTlJR0lzSUdrdWMzQnZkRk5vWVdSdmR5NXNaVzVuZEdnZ1BTQkJMQ0JwTG5Od2IzUlRhR0ZrYjNkTllYQXViR1Z1WjNSb0lEMGdRU3dnYVM1a2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGRISnBlQzVzWlc1bmRHZ2dQU0I1TENCcExuQnZhVzUwVTJoaFpHOTNUV0YwY21sNExteGxibWQwYUNBOUlHSXNJR2t1YzNCdmRGTm9ZV1J2ZDAxaGRISnBlQzVzWlc1bmRHZ2dQU0JCTENCSkxtUnBjbVZqZEdsdmJtRnNUR1Z1WjNSb0lEMGdlQ3dnU1M1d2IybHVkRXhsYm1kMGFDQTlJSFlzSUVrdWMzQnZkRXhsYm1kMGFDQTlJR2NzSUVrdWNtVmpkRUZ5WldGTVpXNW5kR2dnUFNCd0xDQkpMbWhsYldsTVpXNW5kR2dnUFNCZkxDQkpMbTUxYlVScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzY3lBOUlIa3NJRWt1Ym5WdFVHOXBiblJUYUdGa2IzZHpJRDBnWWl3Z1NTNXVkVzFUY0c5MFUyaGhaRzkzY3lBOUlFRXNJR2t1ZG1WeWMybHZiaUE5SUhsNEt5c3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWXlob0xDQjFLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0F3TENCbUlEMGdNQ3dnYlNBOUlEQXNJSGdnUFNBd0xDQjJJRDBnTUN3Z1p5QTlJSFV1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY0NBOUlEQXNJRjhnUFNCb0xteGxibWQwYURzZ2NDQThJRjg3SUhBckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnYUZ0d1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIa3VhWE5FYVhKbFkzUnBiMjVoYkV4cFoyaDBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJR2t1WkdseVpXTjBhVzl1WVd4YlpGMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlMbVJwY21WamRHbHZiaTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2VTNXRZWFJ5YVhoWGIzSnNaQ2tzSUhJdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSGt1ZEdGeVoyVjBMbTFoZEhKcGVGZHZjbXhrS1N3Z1lpNWthWEpsWTNScGIyNHVjM1ZpS0hJcExDQmlMbVJwY21WamRHbHZiaTUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvWnlrc0lHUXJLenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDVMbWx6VTNCdmRFeHBaMmgwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZaUE5SUdrdWMzQnZkRnR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJdWNHOXphWFJwYjI0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSGt1YldGMGNtbDRWMjl5YkdRcExDQmlMbkJ2YzJsMGFXOXVMbUZ3Y0d4NVRXRjBjbWw0TkNobktTd2dZaTVrYVhKbFkzUnBiMjR1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIa3ViV0YwY21sNFYyOXliR1FwTENCeUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWg1TG5SaGNtZGxkQzV0WVhSeWFYaFhiM0pzWkNrc0lHSXVaR2x5WldOMGFXOXVMbk4xWWloeUtTd2dZaTVrYVhKbFkzUnBiMjR1ZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0djcExDQnRLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9lUzVwYzFKbFkzUkJjbVZoVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdhUzV5WldOMFFYSmxZVnQ0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJdWNHOXphWFJwYjI0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSGt1YldGMGNtbDRWMjl5YkdRcExDQmlMbkJ2YzJsMGFXOXVMbUZ3Y0d4NVRXRjBjbWw0TkNobktTd2dZUzVwWkdWdWRHbDBlU2dwTENCdkxtTnZjSGtvZVM1dFlYUnlhWGhYYjNKc1pDa3NJRzh1Y0hKbGJYVnNkR2x3Ykhrb1p5a3NJR0V1WlhoMGNtRmpkRkp2ZEdGMGFXOXVLRzhwTENCaUxtaGhiR1pYYVdSMGFDNXpaWFFvZVM1M2FXUjBhQ0FxSUM0MUxDQXdMQ0F3S1N3Z1lpNW9ZV3htU0dWcFoyaDBMbk5sZENnd0xDQjVMbWhsYVdkb2RDQXFJQzQxTENBd0tTd2dZaTVvWVd4bVYybGtkR2d1WVhCd2JIbE5ZWFJ5YVhnMEtHRXBMQ0JpTG1oaGJHWklaV2xuYUhRdVlYQndiSGxOWVhSeWFYZzBLR0VwTENCNEt5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2VTNXBjMUJ2YVc1MFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnYVM1d2IybHVkRnRtWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJdWNHOXphWFJwYjI0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSGt1YldGMGNtbDRWMjl5YkdRcExDQmlMbkJ2YzJsMGFXOXVMbUZ3Y0d4NVRXRjBjbWw0TkNobktTd2daaXNyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSGt1YVhOSVpXMXBjM0JvWlhKbFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnYVM1b1pXMXBXM1pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWk1a2FYSmxZM1JwYjI0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSGt1YldGMGNtbDRWMjl5YkdRcExDQmlMbVJwY21WamRHbHZiaTUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvWnlrc0lHSXVaR2x5WldOMGFXOXVMbTV2Y20xaGJHbDZaU2dwTENCMkt5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lITmxkSFZ3T2lCc0xBb2dJQ0FnSUNBZ0lITmxkSFZ3Vm1sbGR6b2dZeXdLSUNBZ0lDQWdJQ0J6ZEdGMFpUb2dhUW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUFrYkNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlHNWxkeUJmZUNoekxDQmxLU3dnYmlBOUlGdGRMQ0JwSUQwZ1cxMDdDaUFnSUNCbWRXNWpkR2x2YmlCeUtDa2dld29nSUNBZ0lDQWdJRzR1YkdWdVozUm9JRDBnTUN3Z2FTNXNaVzVuZEdnZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYnloMUtTQjdDaUFnSUNBZ0lDQWdiaTV3ZFhOb0tIVXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWVNoMUtTQjdDaUFnSUNBZ0lDQWdhUzV3ZFhOb0tIVXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYkNoMUtTQjdDaUFnSUNBZ0lDQWdkQzV6WlhSMWNDaHVMQ0IxS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHTW9kU2tnZXdvZ0lDQWdJQ0FnSUhRdWMyVjBkWEJXYVdWM0tHNHNJSFVwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCcGJtbDBPaUJ5TEFvZ0lDQWdJQ0FnSUhOMFlYUmxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeHBaMmgwYzBGeWNtRjVPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkelFYSnlZWGs2SUdrc0NpQWdJQ0FnSUNBZ0lDQWdJR3hwWjJoMGN6b2dkQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWMGRYQk1hV2RvZEhNNklHd3NDaUFnSUNBZ0lDQWdjMlYwZFhCTWFXZG9kSE5XYVdWM09pQmpMQW9nSUNBZ0lDQWdJSEIxYzJoTWFXZG9kRG9nYnl3S0lDQWdJQ0FnSUNCd2RYTm9VMmhoWkc5M09pQmhDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJRTE0S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCbWRXNWpkR2x2YmlCdUtISXNJRzhnUFNBd0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdFN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdWFHRnpLSElwSUQwOVBTQWhNU0EvSUNoaElEMGdibVYzSUNSc0tITXNJR1VwTENCMExuTmxkQ2h5TENCYkNpQWdJQ0FnSUNBZ0lDQWdJR0VLSUNBZ0lDQWdJQ0JkS1NrZ09pQnZJRDQ5SUhRdVoyVjBLSElwTG14bGJtZDBhQ0EvSUNoaElEMGdibVYzSUNSc0tITXNJR1VwTENCMExtZGxkQ2h5S1M1d2RYTm9LR0VwS1NBNklHRWdQU0IwTG1kbGRDaHlLVnR2WFN3Z1lUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR2tvS1NCN0NpQWdJQ0FnSUNBZ2RDQTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCblpYUTZJRzRzQ2lBZ0lDQWdJQ0FnWkdsemNHOXpaVG9nYVFvZ0lDQWdmVHNLZlFwMllYSWdaVzhnUFNCamJHRnpjeUJsZUhSbGJtUnpJR1IwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJazFsYzJoRVpYQjBhRTFoZEdWeWFXRnNJaXdnZEdocGN5NWtaWEIwYUZCaFkydHBibWNnUFNCT1pDd2dkR2hwY3k1dFlYQWdQU0J1ZFd4c0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnTVN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnTUN3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNBaE1Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxtWnZaeUE5SUNFeExDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbVJsY0hSb1VHRmphMmx1WnlBOUlHVXVaR1Z3ZEdoUVlXTnJhVzVuTENCMGFHbHpMbTFoY0NBOUlHVXViV0Z3TENCMGFHbHpMbUZzY0doaFRXRndJRDBnWlM1aGJIQm9ZVTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0JsTG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeXdnZEdocGN5NTNhWEpsWm5KaGJXVWdQU0JsTG5kcGNtVm1jbUZ0WlN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNCbExuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1pXOHVjSEp2ZEc5MGVYQmxMbWx6VFdWemFFUmxjSFJvVFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUhSdklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9SR2x6ZEdGdVkyVk5ZWFJsY21saGJDSXNJSFJvYVhNdWNtVm1aWEpsYm1ObFVHOXphWFJwYjI0Z1BTQnVaWGNnVFN3Z2RHaHBjeTV1WldGeVJHbHpkR0Z1WTJVZ1BTQXhMQ0IwYUdsekxtWmhja1JwYzNSaGJtTmxJRDBnTVdVekxDQjBhR2x6TG0xaGNDQTlJRzUxYkd3c0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0F4TENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0F3TENCMGFHbHpMbVp2WnlBOUlDRXhMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5KbFptVnlaVzVqWlZCdmMybDBhVzl1TG1OdmNIa29aUzV5WldabGNtVnVZMlZRYjNOcGRHbHZiaWtzSUhSb2FYTXVibVZoY2tScGMzUmhibU5sSUQwZ1pTNXVaV0Z5UkdsemRHRnVZMlVzSUhSb2FYTXVabUZ5UkdsemRHRnVZMlVnUFNCbExtWmhja1JwYzNSaGJtTmxMQ0IwYUdsekxtMWhjQ0E5SUdVdWJXRndMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdaUzVoYkhCb1lVMWhjQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5d2dkR2hwY3pzS0lDQWdJSDBLZlRzS2RHOHVjSEp2ZEc5MGVYQmxMbWx6VFdWemFFUnBjM1JoYm1ObFRXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlHSjRJRDBnWUhadmFXUWdiV0ZwYmlncElIc0tDV2RzWDFCdmMybDBhVzl1SUQwZ2RtVmpOQ2dnY0c5emFYUnBiMjRzSURFdU1DQXBPd3A5WUN3Z2QzZ2dQU0JnZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYzJoaFpHOTNYM0JoYzNNN0NuVnVhV1p2Y20wZ2RtVmpNaUJ5WlhOdmJIVjBhVzl1T3dwMWJtbG1iM0p0SUdac2IyRjBJSEpoWkdsMWN6c0tJMmx1WTJ4MVpHVWdQSEJoWTJ0cGJtYytDblp2YVdRZ2JXRnBiaWdwSUhzS0NXTnZibk4wSUdac2IyRjBJSE5oYlhCc1pYTWdQU0JtYkc5aGRDZ2dWbE5OWDFOQlRWQk1SVk1nS1RzS0NXWnNiMkYwSUcxbFlXNGdQU0F3TGpBN0NnbG1iRzloZENCemNYVmhjbVZrWDIxbFlXNGdQU0F3TGpBN0NnbG1iRzloZENCMWRsTjBjbWxrWlNBOUlITmhiWEJzWlhNZ1BEMGdNUzR3SUQ4Z01DNHdJRG9nTWk0d0lDOGdLQ0J6WVcxd2JHVnpJQzBnTVM0d0lDazdDZ2xtYkc5aGRDQjFkbE4wWVhKMElEMGdjMkZ0Y0d4bGN5QThQU0F4TGpBZ1B5QXdMakFnT2lBdElERXVNRHNLQ1dadmNpQW9JR1pzYjJGMElHa2dQU0F3TGpBN0lHa2dQQ0J6WVcxd2JHVnpPeUJwSUNzcklDa2dld29KQ1dac2IyRjBJSFYyVDJabWMyVjBJRDBnZFhaVGRHRnlkQ0FySUdrZ0tpQjFkbE4wY21sa1pUc0tDUWtqYVdaa1pXWWdTRTlTU1ZwUFRsUkJURjlRUVZOVENna0pDWFpsWXpJZ1pHbHpkSEpwWW5WMGFXOXVJRDBnZFc1d1lXTnJVa2RDUVZSdk1raGhiR1lvSUhSbGVIUjFjbVV5UkNnZ2MyaGhaRzkzWDNCaGMzTXNJQ2dnWjJ4ZlJuSmhaME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2dkWFpQWm1aelpYUXNJREF1TUNBcElDb2djbUZrYVhWeklDa2dMeUJ5WlhOdmJIVjBhVzl1SUNrZ0tUc0tDUWtKYldWaGJpQXJQU0JrYVhOMGNtbGlkWFJwYjI0dWVEc0tDUWtKYzNGMVlYSmxaRjl0WldGdUlDczlJR1JwYzNSeWFXSjFkR2x2Ymk1NUlDb2daR2x6ZEhKcFluVjBhVzl1TG5rZ0t5QmthWE4wY21saWRYUnBiMjR1ZUNBcUlHUnBjM1J5YVdKMWRHbHZiaTU0T3dvSkNTTmxiSE5sQ2drSkNXWnNiMkYwSUdSbGNIUm9JRDBnZFc1d1lXTnJVa2RDUVZSdlJHVndkR2dvSUhSbGVIUjFjbVV5UkNnZ2MyaGhaRzkzWDNCaGMzTXNJQ2dnWjJ4ZlJuSmhaME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2dNQzR3TENCMWRrOW1abk5sZENBcElDb2djbUZrYVhWeklDa2dMeUJ5WlhOdmJIVjBhVzl1SUNrZ0tUc0tDUWtKYldWaGJpQXJQU0JrWlhCMGFEc0tDUWtKYzNGMVlYSmxaRjl0WldGdUlDczlJR1JsY0hSb0lDb2daR1Z3ZEdnN0Nna0pJMlZ1WkdsbUNnbDlDZ2x0WldGdUlEMGdiV1ZoYmlBdklITmhiWEJzWlhNN0NnbHpjWFZoY21Wa1gyMWxZVzRnUFNCemNYVmhjbVZrWDIxbFlXNGdMeUJ6WVcxd2JHVnpPd29KWm14dllYUWdjM1JrWDJSbGRpQTlJSE54Y25Rb0lITnhkV0Z5WldSZmJXVmhiaUF0SUcxbFlXNGdLaUJ0WldGdUlDazdDZ2xuYkY5R2NtRm5RMjlzYjNJZ1BTQndZV05yTWtoaGJHWlViMUpIUWtFb0lIWmxZeklvSUcxbFlXNHNJSE4wWkY5a1pYWWdLU0FwT3dwOVlEc0tablZ1WTNScGIyNGdlV2dvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnUkhJc0lHa2dQU0J1WlhjZ1dDd2djaUE5SUc1bGR5QllMQ0J2SUQwZ2JtVjNJRlpsTENCaElEMGdibVYzSUdWdktIc0tJQ0FnSUNBZ0lDQmtaWEIwYUZCaFkydHBibWM2SUVKa0NpQWdJQ0I5S1N3Z2JDQTlJRzVsZHlCMGJ5d2dZeUE5SUh0OUxDQm9JRDBnZEM1dFlYaFVaWGgwZFhKbFUybDZaU3dnZFNBOUlIc0tJQ0FnSUNBZ0lDQXdPaUJwZEN3S0lDQWdJQ0FnSUNBeE9pQkJhU3dLSUNBZ0lDQWdJQ0F5T2lCRGFRb2dJQ0FnZlN3Z1pDQTlJRzVsZHlCemJpaDdDaUFnSUNBZ0lDQWdaR1ZtYVc1bGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCV1UwMWZVMEZOVUV4RlV6b2dPQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1gzQmhjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmxjMjlzZFhScGIyNDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnV0FvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBkWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUEwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1luZ3NDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklIZDRDaUFnSUNCOUtTd2daaUE5SUdRdVkyeHZibVVvS1RzS0lDQWdJR1l1WkdWbWFXNWxjeTVJVDFKSldrOU9WRUZNWDFCQlUxTWdQU0F4T3dvZ0lDQWdiR1YwSUcwZ1BTQnVaWGNnWDJVN0NpQWdJQ0J0TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1ZXVW9ibVYzSUVac2IyRjBNekpCY25KaGVTaGJDaUFnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0xqVXNDaUFnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBdU5Td0tJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUM0MUNpQWdJQ0JkS1N3Z015a3BPd29nSUNBZ2JHVjBJSGdnUFNCdVpYY2djM1FvYlN3Z1pDa3NJSFlnUFNCMGFHbHpPd29nSUNBZ2RHaHBjeTVsYm1GaWJHVmtJRDBnSVRFc0lIUm9hWE11WVhWMGIxVndaR0YwWlNBOUlDRXdMQ0IwYUdsekxtNWxaV1J6VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11ZEhsd1pTQTlJRWhqTENCMGFHbHpMbkpsYm1SbGNpQTlJR1oxYm1OMGFXOXVLSGtzSUdJc0lFRXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RpNWxibUZpYkdWa0lEMDlQU0FoTVNCOGZDQjJMbUYxZEc5VmNHUmhkR1VnUFQwOUlDRXhJQ1ltSUhZdWJtVmxaSE5WY0dSaGRHVWdQVDA5SUNFeElIeDhJSGt1YkdWdVozUm9JRDA5UFNBd0tTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJRXdnUFNCekxtZGxkRkpsYm1SbGNsUmhjbWRsZENncExDQkpJRDBnY3k1blpYUkJZM1JwZG1WRGRXSmxSbUZqWlNncExDQnJJRDBnY3k1blpYUkJZM1JwZG1WTmFYQnRZWEJNWlhabGJDZ3BMQ0JDSUQwZ2N5NXpkR0YwWlRzS0lDQWdJQ0FnSUNCQ0xuTmxkRUpzWlc1a2FXNW5LSFp1S1N3Z1FpNWlkV1ptWlhKekxtTnZiRzl5TG5ObGRFTnNaV0Z5S0RFc0lERXNJREVzSURFcExDQkNMbUoxWm1abGNuTXVaR1Z3ZEdndWMyVjBWR1Z6ZENnaE1Da3NJRUl1YzJWMFUyTnBjM052Y2xSbGMzUW9JVEVwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVUNBOUlEQXNJSGNnUFNCNUxteGxibWQwYURzZ1VDQThJSGM3SUZBckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkZJRDBnZVZ0UVhTd2dSQ0E5SUVVdWMyaGhaRzkzT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUkNBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVUyaGhaRzkzVFdGd09pSXNJRVVzSUNKb1lYTWdibThnYzJoaFpHOTNMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFUXVZWFYwYjFWd1pHRjBaU0E5UFQwZ0lURWdKaVlnUkM1dVpXVmtjMVZ3WkdGMFpTQTlQVDBnSVRFcElHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0JwTG1OdmNIa29SQzV0WVhCVGFYcGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRlVnUFNCRUxtZGxkRVp5WVcxbFJYaDBaVzUwY3lncE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTNXRkV3gwYVhCc2VTaFZLU3dnY2k1amIzQjVLRVF1YldGd1UybDZaU2tzSUNocExuZ2dQaUJvSUh4OElHa3VlU0ErSUdncElDWW1JQ2hwTG5nZ1BpQm9JQ1ltSUNoeUxuZ2dQU0JOWVhSb0xtWnNiMjl5S0dnZ0x5QlZMbmdwTENCcExuZ2dQU0J5TG5nZ0tpQlZMbmdzSUVRdWJXRndVMmw2WlM1NElEMGdjaTU0S1N3Z2FTNTVJRDRnYUNBbUppQW9jaTU1SUQwZ1RXRjBhQzVtYkc5dmNpaG9JQzhnVlM1NUtTd2dhUzU1SUQwZ2NpNTVJQ29nVlM1NUxDQkVMbTFoY0ZOcGVtVXVlU0E5SUhJdWVTa3BMQ0JFTG0xaGNDQTlQVDBnYm5Wc2JDQW1KaUFoUkM1cGMxQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ0ppWWdkR2hwY3k1MGVYQmxJRDA5UFNCcGNpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUU4Z1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldsdVJtbHNkR1Z5T2lCMGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVdkR2FXeDBaWEk2SUhSMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGREb2dZM1FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JFTG0xaGNDQTlJRzVsZHlCQmRDaHBMbmdzSUdrdWVTd2dUeWtzSUVRdWJXRndMblJsZUhSMWNtVXVibUZ0WlNBOUlFVXVibUZ0WlNBcklDSXVjMmhoWkc5M1RXRndJaXdnUkM1dFlYQlFZWE56SUQwZ2JtVjNJRUYwS0drdWVDd2dhUzU1TENCUEtTd2dSQzVqWVcxbGNtRXVkWEJrWVhSbFVISnZhbVZqZEdsdmJrMWhkSEpwZUNncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hFTG0xaGNDQTlQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUU4Z1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldsdVJtbHNkR1Z5T2lCeWRDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVdkR2FXeDBaWEk2SUhKMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGREb2dZM1FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JFTG0xaGNDQTlJRzVsZHlCQmRDaHBMbmdzSUdrdWVTd2dUeWtzSUVRdWJXRndMblJsZUhSMWNtVXVibUZ0WlNBOUlFVXVibUZ0WlNBcklDSXVjMmhoWkc5M1RXRndJaXdnUkM1allXMWxjbUV1ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRVF1YldGd0tTd2djeTVqYkdWaGNpZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUVRdVoyVjBWbWxsZDNCdmNuUkRiM1Z1ZENncE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRThnUFNBd095QlBJRHdnUmpzZ1R5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdVpTQTlJRVF1WjJWMFZtbGxkM0J2Y25Rb1R5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZMbk5sZENoeUxuZ2dLaUJ1WlM1NExDQnlMbmtnS2lCdVpTNTVMQ0J5TG5nZ0tpQnVaUzU2TENCeUxua2dLaUJ1WlM1M0tTd2dRaTUyYVdWM2NHOXlkQ2h2S1N3Z1JDNTFjR1JoZEdWTllYUnlhV05sY3loRkxDQlBLU3dnYmlBOUlFUXVaMlYwUm5KMWMzUjFiU2dwTENCZktHSXNJRUVzSUVRdVkyRnRaWEpoTENCRkxDQjBhR2x6TG5SNWNHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0ZFTG1selVHOXBiblJNYVdkb2RGTm9ZV1J2ZHlBbUppQjBhR2x6TG5SNWNHVWdQVDA5SUdseUlDWW1JR2NvUkN3Z1FTa3NJRVF1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZGk1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V4TENCekxuTmxkRkpsYm1SbGNsUmhjbWRsZENoTUxDQkpMQ0JyS1RzS0lDQWdJSDA3Q2lBZ0lDQm1kVzVqZEdsdmJpQm5LSGtzSUdJcElIc0tJQ0FnSUNBZ0lDQnNaWFFnUVNBOUlHVXVkWEJrWVhSbEtIZ3BPd29nSUNBZ0lDQWdJR1F1WkdWbWFXNWxjeTVXVTAxZlUwRk5VRXhGVXlBaFBUMGdlUzVpYkhWeVUyRnRjR3hsY3lBbUppQW9aQzVrWldacGJtVnpMbFpUVFY5VFFVMVFURVZUSUQwZ2VTNWliSFZ5VTJGdGNHeGxjeXdnWmk1a1pXWnBibVZ6TGxaVFRWOVRRVTFRVEVWVElEMGdlUzVpYkhWeVUyRnRjR3hsY3l3Z1pDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQm1MbTVsWldSelZYQmtZWFJsSUQwZ0lUQXBMQ0JrTG5WdWFXWnZjbTF6TG5Ob1lXUnZkMTl3WVhOekxuWmhiSFZsSUQwZ2VTNXRZWEF1ZEdWNGRIVnlaU3dnWkM1MWJtbG1iM0p0Y3k1eVpYTnZiSFYwYVc5dUxuWmhiSFZsSUQwZ2VTNXRZWEJUYVhwbExDQmtMblZ1YVdadmNtMXpMbkpoWkdsMWN5NTJZV3gxWlNBOUlIa3VjbUZrYVhWekxDQnpMbk5sZEZKbGJtUmxjbFJoY21kbGRDaDVMbTFoY0ZCaGMzTXBMQ0J6TG1Oc1pXRnlLQ2tzSUhNdWNtVnVaR1Z5UW5WbVptVnlSR2x5WldOMEtHSXNJRzUxYkd3c0lFRXNJR1FzSUhnc0lHNTFiR3dwTENCbUxuVnVhV1p2Y20xekxuTm9ZV1J2ZDE5d1lYTnpMblpoYkhWbElEMGdlUzV0WVhCUVlYTnpMblJsZUhSMWNtVXNJR1l1ZFc1cFptOXliWE11Y21WemIyeDFkR2x2Ymk1MllXeDFaU0E5SUhrdWJXRndVMmw2WlN3Z1ppNTFibWxtYjNKdGN5NXlZV1JwZFhNdWRtRnNkV1VnUFNCNUxuSmhaR2wxY3l3Z2N5NXpaWFJTWlc1a1pYSlVZWEpuWlhRb2VTNXRZWEFwTENCekxtTnNaV0Z5S0Nrc0lITXVjbVZ1WkdWeVFuVm1abVZ5UkdseVpXTjBLR0lzSUc1MWJHd3NJRUVzSUdZc0lIZ3NJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdjQ2g1TENCaUxDQkJMQ0JNTENCSkxDQnJMQ0JDS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRkFnUFNCdWRXeHNMQ0IzSUQwZ1RDNXBjMUJ2YVc1MFRHbG5hSFFnUFQwOUlDRXdJRDhnZVM1amRYTjBiMjFFYVhOMFlXNWpaVTFoZEdWeWFXRnNJRG9nZVM1amRYTjBiMjFFWlhCMGFFMWhkR1Z5YVdGc093b2dJQ0FnSUNBZ0lHbG1JQ2gzSUNFOVBTQjJiMmxrSURBZ1B5QlFJRDBnZHlBNklGQWdQU0JNTG1selVHOXBiblJNYVdkb2RDQTlQVDBnSVRBZ1B5QnNJRG9nWVN3Z2N5NXNiMk5oYkVOc2FYQndhVzVuUlc1aFlteGxaQ0FtSmlCQkxtTnNhWEJUYUdGa2IzZHpJRDA5UFNBaE1DQW1KaUJCTG1Oc2FYQndhVzVuVUd4aGJtVnpMbXhsYm1kMGFDQWhQVDBnTUNCOGZDQkJMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQW1KaUJCTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUNFOVBTQXdJSHg4SUVFdVlXeHdhR0ZOWVhBZ0ppWWdRUzVoYkhCb1lWUmxjM1FnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkZJRDBnVUM1MWRXbGtMQ0JFSUQwZ1FTNTFkV2xrTENCVklEMGdZMXRGWFRzS0lDQWdJQ0FnSUNBZ0lDQWdWU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaFZJRDBnZTMwc0lHTmJSVjBnUFNCVktUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0JWVzBSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JHSUQwOVBTQjJiMmxrSURBZ0ppWWdLRVlnUFNCUUxtTnNiMjVsS0Nrc0lGVmJSRjBnUFNCR0tTd2dVQ0E5SUVZN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCUUxuWnBjMmxpYkdVZ1BTQkJMblpwYzJsaWJHVXNJRkF1ZDJseVpXWnlZVzFsSUQwZ1FTNTNhWEpsWm5KaGJXVXNJRUlnUFQwOUlHbHlJRDhnVUM1emFXUmxJRDBnUVM1emFHRmtiM2RUYVdSbElDRTlQU0J1ZFd4c0lEOGdRUzV6YUdGa2IzZFRhV1JsSURvZ1FTNXphV1JsSURvZ1VDNXphV1JsSUQwZ1FTNXphR0ZrYjNkVGFXUmxJQ0U5UFNCdWRXeHNJRDhnUVM1emFHRmtiM2RUYVdSbElEb2dkVnRCTG5OcFpHVmRMQ0JRTG1Gc2NHaGhUV0Z3SUQwZ1FTNWhiSEJvWVUxaGNDd2dVQzVoYkhCb1lWUmxjM1FnUFNCQkxtRnNjR2hoVkdWemRDd2dVQzVqYkdsd1UyaGhaRzkzY3lBOUlFRXVZMnhwY0ZOb1lXUnZkM01zSUZBdVkyeHBjSEJwYm1kUWJHRnVaWE1nUFNCQkxtTnNhWEJ3YVc1blVHeGhibVZ6TENCUUxtTnNhWEJKYm5SbGNuTmxZM1JwYjI0Z1BTQkJMbU5zYVhCSmJuUmxjbk5sWTNScGIyNHNJRkF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnUVM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUZBdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQkJMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0JRTG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCQkxtUnBjM0JzWVdObGJXVnVkRUpwWVhNc0lGQXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnUVM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lGQXViR2x1WlhkcFpIUm9JRDBnUVM1c2FXNWxkMmxrZEdnc0lFd3VhWE5RYjJsdWRFeHBaMmgwSUQwOVBTQWhNQ0FtSmlCUUxtbHpUV1Z6YUVScGMzUmhibU5sVFdGMFpYSnBZV3dnUFQwOUlDRXdJQ1ltSUNoUUxuSmxabVZ5Wlc1alpWQnZjMmwwYVc5dUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhNTG0xaGRISnBlRmR2Y214a0tTd2dVQzV1WldGeVJHbHpkR0Z1WTJVZ1BTQkpMQ0JRTG1aaGNrUnBjM1JoYm1ObElEMGdheWtzSUZBN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmZLSGtzSUdJc0lFRXNJRXdzSUVrcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZVM1MmFYTnBZbXhsSUQwOVBTQWhNU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR2xtSUNoNUxteGhlV1Z5Y3k1MFpYTjBLR0l1YkdGNVpYSnpLU0FtSmlBb2VTNXBjMDFsYzJnZ2ZId2dlUzVwYzB4cGJtVWdmSHdnZVM1cGMxQnZhVzUwY3lrZ0ppWWdLSGt1WTJGemRGTm9ZV1J2ZHlCOGZDQjVMbkpsWTJWcGRtVlRhR0ZrYjNjZ0ppWWdTU0E5UFQwZ2FYSXBJQ1ltSUNnaGVTNW1jblZ6ZEhWdFEzVnNiR1ZrSUh4OElHNHVhVzUwWlhKelpXTjBjMDlpYW1WamRDaDVLU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdlUzV0YjJSbGJGWnBaWGROWVhSeWFYZ3ViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aEJMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaU3dnZVM1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlFJRDBnWlM1MWNHUmhkR1VvZVNrc0lIY2dQU0I1TG0xaGRHVnlhV0ZzT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaDNLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JRTG1keWIzVndjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdSQ0E5SURBc0lGVWdQU0JGTG14bGJtZDBhRHNnUkNBOElGVTdJRVFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVZZ1BTQkZXMFJkTENCUElEMGdkMXRHTG0xaGRHVnlhV0ZzU1c1a1pYaGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaFBJQ1ltSUU4dWRtbHphV0pzWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdibVVnUFNCd0tIa3NJRkFzSUU4c0lFd3NJRUV1Ym1WaGNpd2dRUzVtWVhJc0lFa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbkpsYm1SbGNrSjFabVpsY2tScGNtVmpkQ2hCTENCdWRXeHNMQ0JRTENCdVpTd2dlU3dnUmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIY3VkbWx6YVdKc1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVVZ1BTQndLSGtzSUZBc0lIY3NJRXdzSUVFdWJtVmhjaXdnUVM1bVlYSXNJRWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1eVpXNWtaWEpDZFdabVpYSkVhWEpsWTNRb1FTd2diblZzYkN3Z1VDd2dSU3dnZVN3Z2JuVnNiQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUVJZ1BTQjVMbU5vYVd4a2NtVnVPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdVQ0E5SURBc0lIY2dQU0JDTG14bGJtZDBhRHNnVUNBOElIYzdJRkFyS3lsZktFSmJVRjBzSUdJc0lFRXNJRXdzSUVrcE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlGTjRLSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2RDNXBjMWRsWWtkTU1qc0tJQ0FnSUdaMWJtTjBhVzl1SUdrb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUZJZ1BTQWhNU3dnWldVZ1BTQnVaWGNnVm1Vc0lGRWdQU0J1ZFd4c0xDQkZaU0E5SUc1bGR5QldaU2d3TENBd0xDQXdMQ0F3S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJOWVhOck9pQm1kVzVqZEdsdmJpaHRaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVVNBaFBUMGdiV1VnSmlZZ0lWSWdKaVlnS0hNdVkyOXNiM0pOWVhOcktHMWxMQ0J0WlN3Z2JXVXNJRzFsS1N3Z1VTQTlJRzFsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBURzlqYTJWa09pQm1kVzVqZEdsdmJpaHRaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVWlBOUlHMWxPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSRGJHVmhjam9nWm5WdVkzUnBiMjRvYldVc0lGSmxMQ0J2WlN3Z1RHVXNJRmhsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCWVpTQTlQVDBnSVRBZ0ppWWdLRzFsSUNvOUlFeGxMQ0JTWlNBcVBTQk1aU3dnYjJVZ0tqMGdUR1VwTENCbFpTNXpaWFFvYldVc0lGSmxMQ0J2WlN3Z1RHVXBMQ0JGWlM1bGNYVmhiSE1vWldVcElEMDlQU0FoTVNBbUppQW9jeTVqYkdWaGNrTnZiRzl5S0cxbExDQlNaU3dnYjJVc0lFeGxLU3dnUldVdVkyOXdlU2hsWlNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlNJRDBnSVRFc0lGRWdQU0J1ZFd4c0xDQkZaUzV6WlhRb0xURXNJREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSElvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRklnUFNBaE1Td2daV1VnUFNCdWRXeHNMQ0JSSUQwZ2JuVnNiQ3dnUldVZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRlJsYzNRNklHWjFibU4wYVc5dUtHMWxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WlNBL0lHeGxLREk1TWprcElEb2dabVVvTWpreU9TazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEUxaGMyczZJR1oxYm1OMGFXOXVLRzFsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbFpTQWhQVDBnYldVZ0ppWWdJVklnSmlZZ0tITXVaR1Z3ZEdoTllYTnJLRzFsS1N3Z1pXVWdQU0J0WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRVoxYm1NNklHWjFibU4wYVc5dUtHMWxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1VTQWhQVDBnYldVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JXVXBJSE4zYVhSamFDaHRaU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1JYVTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1SbGNIUm9SblZ1WXlnMU1USXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnUVhVNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbVJsY0hSb1JuVnVZeWcxTVRrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdRM1U2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtUmxjSFJvUm5WdVl5ZzFNVE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1pXRTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1SbGNIUm9SblZ1WXlnMU1UVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnVEhVNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbVJsY0hSb1JuVnVZeWcxTVRRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdVblU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtUmxjSFJvUm5WdVl5ZzFNVGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1VIVTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1SbGNIUm9SblZ1WXlnMU1UWXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnU1hVNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbVJsY0hSb1JuVnVZeWcxTVRjcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtUmxjSFJvUm5WdVl5ZzFNVFVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElITXVaR1Z3ZEdoR2RXNWpLRFV4TlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVU0E5SUcxbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJNYjJOclpXUTZJR1oxYm1OMGFXOXVLRzFsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCU0lEMGdiV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGRFTnNaV0Z5T2lCbWRXNWpkR2x2YmlodFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSV1VnSVQwOUlHMWxJQ1ltSUNoekxtTnNaV0Z5UkdWd2RHZ29iV1VwTENCRlpTQTlJRzFsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VpQTlJQ0V4TENCbFpTQTlJRzUxYkd3c0lGRWdQU0J1ZFd4c0xDQkZaU0E5SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdieWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdVaUE5SUNFeExDQmxaU0E5SUc1MWJHd3NJRkVnUFNCdWRXeHNMQ0JGWlNBOUlHNTFiR3dzSUcxbElEMGdiblZzYkN3Z1VtVWdQU0J1ZFd4c0xDQnZaU0E5SUc1MWJHd3NJRXhsSUQwZ2JuVnNiQ3dnV0dVZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRlJsYzNRNklHWjFibU4wYVc5dUtGZGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JTSUh4OElDaFhaU0EvSUd4bEtESTVOakFwSURvZ1ptVW9NamsyTUNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJOWVhOck9pQm1kVzVqZEdsdmJpaFhaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWldVZ0lUMDlJRmRsSUNZbUlDRlNJQ1ltSUNoekxuTjBaVzVqYVd4TllYTnJLRmRsS1N3Z1pXVWdQU0JYWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRVoxYm1NNklHWjFibU4wYVc5dUtGZGxMQ0JWZEN3Z1QzUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2hSSUNFOVBTQlhaU0I4ZkNCRlpTQWhQVDBnVlhRZ2ZId2diV1VnSVQwOUlFOTBLU0FtSmlBb2N5NXpkR1Z1WTJsc1JuVnVZeWhYWlN3Z1ZYUXNJRTkwS1N3Z1VTQTlJRmRsTENCRlpTQTlJRlYwTENCdFpTQTlJRTkwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBUM0E2SUdaMWJtTjBhVzl1S0ZkbExDQlZkQ3dnVDNRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDaFNaU0FoUFQwZ1YyVWdmSHdnYjJVZ0lUMDlJRlYwSUh4OElFeGxJQ0U5UFNCUGRDa2dKaVlnS0hNdWMzUmxibU5wYkU5d0tGZGxMQ0JWZEN3Z1QzUXBMQ0JTWlNBOUlGZGxMQ0J2WlNBOUlGVjBMQ0JNWlNBOUlFOTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFRHOWphMlZrT2lCbWRXNWpkR2x2YmloWFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVaUE5SUZkbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJEYkdWaGNqb2dablZ1WTNScGIyNG9WMlVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZobElDRTlQU0JYWlNBbUppQW9jeTVqYkdWaGNsTjBaVzVqYVd3b1YyVXBMQ0JZWlNBOUlGZGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnY21WelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVWlBOUlDRXhMQ0JsWlNBOUlHNTFiR3dzSUZFZ1BTQnVkV3hzTENCRlpTQTlJRzUxYkd3c0lHMWxJRDBnYm5Wc2JDd2dVbVVnUFNCdWRXeHNMQ0J2WlNBOUlHNTFiR3dzSUV4bElEMGdiblZzYkN3Z1dHVWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lHeGxkQ0JoSUQwZ2JtVjNJR2tzSUd3Z1BTQnVaWGNnY2l3Z1l5QTlJRzVsZHlCdkxDQm9JRDBnZTMwc0lIVWdQU0I3ZlN3Z1pDQTlJRzUxYkd3c0lHWWdQU0FoTVN3Z2JTQTlJRzUxYkd3c0lIZ2dQU0J1ZFd4c0xDQjJJRDBnYm5Wc2JDd2daeUE5SUc1MWJHd3NJSEFnUFNCdWRXeHNMQ0JmSUQwZ2JuVnNiQ3dnZVNBOUlHNTFiR3dzSUdJZ1BTQWhNU3dnUVNBOUlHNTFiR3dzSUV3Z1BTQnVkV3hzTENCSklEMGdiblZzYkN3Z2F5QTlJRzUxYkd3c0lFSWdQU0J1ZFd4c0xDQlFJRDBnY3k1blpYUlFZWEpoYldWMFpYSW9NelUyTmpFcExDQjNJRDBnSVRFc0lFVWdQU0F3TENCRUlEMGdjeTVuWlhSUVlYSmhiV1YwWlhJb056a3pPQ2s3Q2lBZ0lDQkVMbWx1WkdWNFQyWW9JbGRsWWtkTUlpa2dJVDA5SUMweElEOGdLRVVnUFNCd1lYSnpaVVpzYjJGMEtDOWVWMlZpUjB3Z0tGeGtLUzh1WlhobFl5aEVLVnN4WFNrc0lIY2dQU0JGSUQ0OUlERXBJRG9nUkM1cGJtUmxlRTltS0NKUGNHVnVSMHdnUlZNaUtTQWhQVDBnTFRFZ0ppWWdLRVVnUFNCd1lYSnpaVVpzYjJGMEtDOWVUM0JsYmtkTUlFVlRJQ2hjWkNrdkxtVjRaV01vUkNsYk1WMHBMQ0IzSUQwZ1JTQStQU0F5S1RzS0lDQWdJR3hsZENCVklEMGdiblZzYkN3Z1JpQTlJSHQ5TENCUElEMGdjeTVuWlhSUVlYSmhiV1YwWlhJb016QTRPQ2tzSUc1bElEMGdjeTVuWlhSUVlYSmhiV1YwWlhJb01qazNPQ2tzSUdObElEMGdibVYzSUZabEtDa3Vabkp2YlVGeWNtRjVLRThwTENCV0lEMGdibVYzSUZabEtDa3Vabkp2YlVGeWNtRjVLRzVsS1RzS0lDQWdJR1oxYm1OMGFXOXVJRmNvVWl3Z1pXVXNJRkVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdSV1VnUFNCdVpYY2dWV2x1ZERoQmNuSmhlU2cwS1N3Z2JXVWdQU0J6TG1OeVpXRjBaVlJsZUhSMWNtVW9LVHNLSUNBZ0lDQWdJQ0J6TG1KcGJtUlVaWGgwZFhKbEtGSXNJRzFsS1N3Z2N5NTBaWGhRWVhKaGJXVjBaWEpwS0ZJc0lERXdNalF4TENBNU56STRLU3dnY3k1MFpYaFFZWEpoYldWMFpYSnBLRklzSURFd01qUXdMQ0E1TnpJNEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGSmxJRDBnTURzZ1VtVWdQQ0JST3lCU1pTc3JLWE11ZEdWNFNXMWhaMlV5UkNobFpTQXJJRkpsTENBd0xDQTJOREE0TENBeExDQXhMQ0F3TENBMk5EQTRMQ0ExTVRJeExDQkZaU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzFsT3dvZ0lDQWdmUW9nSUNBZ2JHVjBJR2hsSUQwZ2UzMDdDaUFnSUNCb1pWc3pOVFV6WFNBOUlGY29NelUxTXl3Z016VTFNeXdnTVNrc0lHaGxXek0wTURZM1hTQTlJRmNvTXpRd05qY3NJRE0wTURZNUxDQTJLU3dnWVM1elpYUkRiR1ZoY2lnd0xDQXdMQ0F3TENBeEtTd2diQzV6WlhSRGJHVmhjaWd4S1N3Z1l5NXpaWFJEYkdWaGNpZ3dLU3dnYkdVb01qa3lPU2tzSUd3dWMyVjBSblZ1WXlobFlTa3NJRTlsS0NFeEtTd2dSeWgwYkNrc0lHeGxLREk0T0RRcExDQm5aU2gyYmlrN0NpQWdJQ0JtZFc1amRHbHZiaUJzWlNoU0tTQjdDaUFnSUNBZ0lDQWdhRnRTWFNBaFBUMGdJVEFnSmlZZ0tITXVaVzVoWW14bEtGSXBMQ0JvVzFKZElEMGdJVEFwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1ptVW9VaWtnZXdvZ0lDQWdJQ0FnSUdoYlVsMGdJVDA5SUNFeElDWW1JQ2h6TG1ScGMyRmliR1VvVWlrc0lHaGJVbDBnUFNBaE1TazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJDWlNoU0xDQmxaU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIxVzFKZElDRTlQU0JsWlNBL0lDaHpMbUpwYm1SR2NtRnRaV0oxWm1abGNpaFNMQ0JsWlNrc0lIVmJVbDBnUFNCbFpTd2diaUFtSmlBb1VpQTlQVDBnTXpZd01Ea2dKaVlnS0hWYk16WXhOakJkSUQwZ1pXVXBMQ0JTSUQwOVBTQXpOakUyTUNBbUppQW9kVnN6TmpBd09WMGdQU0JsWlNrcExDQWhNQ2tnT2lBaE1Uc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRmtvVWlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCa0lDRTlQU0JTSUQ4Z0tITXVkWE5sVUhKdlozSmhiU2hTS1N3Z1pDQTlJRklzSUNFd0tTQTZJQ0V4T3dvZ0lDQWdmUW9nSUNBZ2JHVjBJRU5sSUQwZ2V3b2dJQ0FnSUNBZ0lGdGZhVjA2SURNeU56YzBMQW9nSUNBZ0lDQWdJRnR0ZFYwNklETXlOemM0TEFvZ0lDQWdJQ0FnSUZ0bmRWMDZJRE15TnpjNUNpQWdJQ0I5T3dvZ0lDQWdhV1lnS0c0cElFTmxXM05zWFNBOUlETXlOemMxTENCRFpWdHZiRjBnUFNBek1qYzNOanNLSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUd4bGRDQlNJRDBnWlM1blpYUW9Ja1ZZVkY5aWJHVnVaRjl0YVc1dFlYZ2lLVHNLSUNBZ0lDQWdJQ0JTSUNFOVBTQnVkV3hzSUNZbUlDaERaVnR6YkYwZ1BTQlNMazFKVGw5RldGUXNJRU5sVzI5c1hTQTlJRkl1VFVGWVgwVllWQ2s3Q2lBZ0lDQjlDaUFnSUNCc1pYUWdlV1VnUFNCN0NpQWdJQ0FnSUNBZ1czaDFYVG9nTUN3S0lDQWdJQ0FnSUNCYmVYVmRPaUF4TEFvZ0lDQWdJQ0FnSUZ0MmRWMDZJRGMyT0N3S0lDQWdJQ0FnSUNCYlIyTmRPaUEzTnpBc0NpQWdJQ0FnSUNBZ1cxUjFYVG9nTnpjMkxBb2dJQ0FnSUNBZ0lGdDNkVjA2SURjM05Dd0tJQ0FnSUNBZ0lDQmJUWFZkT2lBM056SXNDaUFnSUNBZ0lDQWdXMTkxWFRvZ056WTVMQW9nSUNBZ0lDQWdJRnRXWTEwNklEYzNNU3dLSUNBZ0lDQWdJQ0JiVTNWZE9pQTNOelVzQ2lBZ0lDQWdJQ0FnVzJKMVhUb2dOemN6Q2lBZ0lDQjlPd29nSUNBZ1puVnVZM1JwYjI0Z1oyVW9VaXdnWldVc0lGRXNJRVZsTENCdFpTd2dVbVVzSUc5bExDQk1aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaFNJRDA5UFNCMmJpa2dld29nSUNBZ0lDQWdJQ0FnSUNCbUlEMDlQU0FoTUNBbUppQW9abVVvTXpBME1pa3NJR1lnUFNBaE1TazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHWWdQVDA5SUNFeElDWW1JQ2hzWlNnek1EUXlLU3dnWmlBOUlDRXdLU3dnVWlBaFBUMGdjSFVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0ZJZ0lUMDlJRzBnZkh3Z1RHVWdJVDA5SUdJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2dvZUNBaFBUMGdYMmtnZkh3Z2NDQWhQVDBnWDJrcElDWW1JQ2h6TG1Kc1pXNWtSWEYxWVhScGIyNG9NekkzTnpRcExDQjRJRDBnWDJrc0lIQWdQU0JmYVNrc0lFeGxLU0J6ZDJsMFkyZ29VaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0J6Y2pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1aWJHVnVaRVoxYm1OVFpYQmhjbUYwWlNneExDQTNOekVzSURFc0lEYzNNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2JtdzZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVZbXhsYm1SR2RXNWpLREVzSURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJR2xzT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1Kc1pXNWtSblZ1WTFObGNHRnlZWFJsS0RBc0lEQXNJRGMyT1N3Z056Y3hLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCeWJEb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWliR1Z1WkVaMWJtTlRaWEJoY21GMFpTZ3dMQ0EzTmpnc0lEQXNJRGMzTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VM1JoZEdVNklFbHVkbUZzYVdRZ1lteGxibVJwYm1jNklDSXNJRklwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYzNkcGRHTm9LRklwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnYzNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdVlteGxibVJHZFc1alUyVndZWEpoZEdVb056Y3dMQ0EzTnpFc0lERXNJRGMzTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdibXc2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11WW14bGJtUkdkVzVqS0RjM01Dd2dNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2FXdzZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVZbXhsYm1SR2RXNWpLREFzSURjMk9TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnY213NkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdVlteGxibVJHZFc1aktEQXNJRGMyT0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VM1JoZEdVNklFbHVkbUZzYVdRZ1lteGxibVJwYm1jNklDSXNJRklwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWWdQU0J1ZFd4c0xDQm5JRDBnYm5Wc2JDd2dYeUE5SUc1MWJHd3NJSGtnUFNCdWRXeHNMQ0J0SUQwZ1Vpd2dZaUE5SUV4bE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JXVWdQU0J0WlNCOGZDQmxaU3dnVW1VZ1BTQlNaU0I4ZkNCUkxDQnZaU0E5SUc5bElIeDhJRVZsTENBb1pXVWdJVDA5SUhnZ2ZId2diV1VnSVQwOUlIQXBJQ1ltSUNoekxtSnNaVzVrUlhGMVlYUnBiMjVUWlhCaGNtRjBaU2hEWlZ0bFpWMHNJRU5sVzIxbFhTa3NJSGdnUFNCbFpTd2djQ0E5SUcxbEtTd2dLRkVnSVQwOUlIWWdmSHdnUldVZ0lUMDlJR2NnZkh3Z1VtVWdJVDA5SUY4Z2ZId2diMlVnSVQwOUlIa3BJQ1ltSUNoekxtSnNaVzVrUm5WdVkxTmxjR0Z5WVhSbEtIbGxXMUZkTENCNVpWdEZaVjBzSUhsbFcxSmxYU3dnZVdWYmIyVmRLU3dnZGlBOUlGRXNJR2NnUFNCRlpTd2dYeUE5SUZKbExDQjVJRDBnYjJVcExDQnRJRDBnVWl3Z1lpQTlJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjRaU2hTTENCbFpTa2dld29nSUNBZ0lDQWdJRkl1YzJsa1pTQTlQVDBnUTJrZ1B5Qm1aU2d5T0RnMEtTQTZJR3hsS0RJNE9EUXBPd29nSUNBZ0lDQWdJR3hsZENCUklEMGdVaTV6YVdSbElEMDlQU0JwZERzS0lDQWdJQ0FnSUNCbFpTQW1KaUFvVVNBOUlDRlJLU3dnVDJVb1VTa3NJRkl1WW14bGJtUnBibWNnUFQwOUlITnlJQ1ltSUZJdWRISmhibk53WVhKbGJuUWdQVDA5SUNFeElEOGdaMlVvZG00cElEb2daMlVvVWk1aWJHVnVaR2x1Wnl3Z1VpNWliR1Z1WkVWeGRXRjBhVzl1TENCU0xtSnNaVzVrVTNKakxDQlNMbUpzWlc1a1JITjBMQ0JTTG1Kc1pXNWtSWEYxWVhScGIyNUJiSEJvWVN3Z1VpNWliR1Z1WkZOeVkwRnNjR2hoTENCU0xtSnNaVzVrUkhOMFFXeHdhR0VzSUZJdWNISmxiWFZzZEdsd2JHbGxaRUZzY0doaEtTd2diQzV6WlhSR2RXNWpLRkl1WkdWd2RHaEdkVzVqS1N3Z2JDNXpaWFJVWlhOMEtGSXVaR1Z3ZEdoVVpYTjBLU3dnYkM1elpYUk5ZWE5yS0ZJdVpHVndkR2hYY21sMFpTa3NJR0V1YzJWMFRXRnpheWhTTG1OdmJHOXlWM0pwZEdVcE93b2dJQ0FnSUNBZ0lHeGxkQ0JGWlNBOUlGSXVjM1JsYm1OcGJGZHlhWFJsT3dvZ0lDQWdJQ0FnSUdNdWMyVjBWR1Z6ZENoRlpTa3NJRVZsSUNZbUlDaGpMbk5sZEUxaGMyc29VaTV6ZEdWdVkybHNWM0pwZEdWTllYTnJLU3dnWXk1elpYUkdkVzVqS0ZJdWMzUmxibU5wYkVaMWJtTXNJRkl1YzNSbGJtTnBiRkpsWml3Z1VpNXpkR1Z1WTJsc1JuVnVZMDFoYzJzcExDQmpMbk5sZEU5d0tGSXVjM1JsYm1OcGJFWmhhV3dzSUZJdWMzUmxibU5wYkZwR1lXbHNMQ0JTTG5OMFpXNWphV3hhVUdGemN5a3BMQ0JMS0ZJdWNHOXNlV2R2Yms5bVpuTmxkQ3dnVWk1d2IyeDVaMjl1VDJabWMyVjBSbUZqZEc5eUxDQlNMbkJ2YkhsbmIyNVBabVp6WlhSVmJtbDBjeWtzSUZJdVlXeHdhR0ZVYjBOdmRtVnlZV2RsSUQwOVBTQWhNQ0EvSUd4bEtETXlPVEkyS1NBNklHWmxLRE15T1RJMktUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRTlsS0ZJcElIc0tJQ0FnSUNBZ0lDQkJJQ0U5UFNCU0lDWW1JQ2hTSUQ4Z2N5NW1jbTl1ZEVaaFkyVW9Nak13TkNrZ09pQnpMbVp5YjI1MFJtRmpaU2d5TXpBMUtTd2dRU0E5SUZJcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdSeWhTS1NCN0NpQWdJQ0FnSUNBZ1VpQWhQVDBnZFhVZ1B5QW9iR1VvTWpnNE5Da3NJRklnSVQwOUlFd2dKaVlnS0ZJZ1BUMDlJSFJzSUQ4Z2N5NWpkV3hzUm1GalpTZ3hNREk1S1NBNklGSWdQVDA5SUdSMUlEOGdjeTVqZFd4c1JtRmpaU2d4TURJNEtTQTZJSE11WTNWc2JFWmhZMlVvTVRBek1pa3BLU0E2SUdabEtESTRPRFFwTENCTUlEMGdVanNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdvb1Vpa2dld29nSUNBZ0lDQWdJRklnSVQwOUlFa2dKaVlnS0hjZ0ppWWdjeTVzYVc1bFYybGtkR2dvVWlrc0lFa2dQU0JTS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFc29VaXdnWldVc0lGRXBJSHNLSUNBZ0lDQWdJQ0JTSUQ4Z0tHeGxLRE15T0RJektTd2dLR3NnSVQwOUlHVmxJSHg4SUVJZ0lUMDlJRkVwSUNZbUlDaHpMbkJ2YkhsbmIyNVBabVp6WlhRb1pXVXNJRkVwTENCcklEMGdaV1VzSUVJZ1BTQlJLU2tnT2lCbVpTZ3pNamd5TXlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjFaU2hTS1NCN0NpQWdJQ0FnSUNBZ1VpQS9JR3hsS0RNd09Ea3BJRG9nWm1Vb016QTRPU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCelpTaFNLU0I3Q2lBZ0lDQWdJQ0FnVWlBOVBUMGdkbTlwWkNBd0lDWW1JQ2hTSUQwZ016TTVPRFFnS3lCUUlDMGdNU2tzSUZVZ0lUMDlJRklnSmlZZ0tITXVZV04wYVhabFZHVjRkSFZ5WlNoU0tTd2dWU0E5SUZJcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdVMlVvVWl3Z1pXVXBJSHNLSUNBZ0lDQWdJQ0JWSUQwOVBTQnVkV3hzSUNZbUlITmxLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElGRWdQU0JHVzFWZE93b2dJQ0FnSUNBZ0lGRWdQVDA5SUhadmFXUWdNQ0FtSmlBb1VTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nZG05cFpDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCMFpYaDBkWEpsT2lCMmIybGtJREFLSUNBZ0lDQWdJQ0I5TENCR1cxVmRJRDBnVVNrc0lDaFJMblI1Y0dVZ0lUMDlJRklnZkh3Z1VTNTBaWGgwZFhKbElDRTlQU0JsWlNrZ0ppWWdLSE11WW1sdVpGUmxlSFIxY21Vb1Vpd2daV1VnZkh3Z2FHVmJVbDBwTENCUkxuUjVjR1VnUFNCU0xDQlJMblJsZUhSMWNtVWdQU0JsWlNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlVaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdVaUE5SUVaYlZWMDdDaUFnSUNBZ0lDQWdVaUFoUFQwZ2RtOXBaQ0F3SUNZbUlGSXVkSGx3WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h6TG1KcGJtUlVaWGgwZFhKbEtGSXVkSGx3WlN3Z2JuVnNiQ2tzSUZJdWRIbHdaU0E5SUhadmFXUWdNQ3dnVWk1MFpYaDBkWEpsSUQwZ2RtOXBaQ0F3S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGQmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdVkyOXRjSEpsYzNObFpGUmxlRWx0WVdkbE1rUXVZWEJ3Ykhrb2N5d2dZWEpuZFcxbGJuUnpLVHNLSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hTS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VM1JoZEdVNklpd2dVaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1dXVW9LU0I3Q2lBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1MFpYaFRkV0pKYldGblpUSkVMbUZ3Y0d4NUtITXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQWdJQ0FnZlNCallYUmphQ0FvVWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pSXNJRklwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFTW9LU0I3Q2lBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1MFpYaFRkV0pKYldGblpUTkVMbUZ3Y0d4NUtITXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQWdJQ0FnZlNCallYUmphQ0FvVWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pSXNJRklwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGUW9LU0I3Q2lBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1amIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXlSQzVoY0hCc2VTaHpMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JTS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQktLQ2tnZXdvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdWRHVjRVM1J2Y21GblpUSkVMbUZ3Y0d4NUtITXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQWdJQ0FnZlNCallYUmphQ0FvVWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pSXNJRklwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlDUW9LU0I3Q2lBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1MFpYaFRkRzl5WVdkbE0wUXVZWEJ3Ykhrb2N5d2dZWEpuZFcxbGJuUnpLVHNLSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hTS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VM1JoZEdVNklpd2dVaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2NtVW9LU0I3Q2lBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1MFpYaEpiV0ZuWlRKRUxtRndjR3g1S0hNc0lHRnlaM1Z0Wlc1MGN5azdDaUFnSUNBZ0lDQWdmU0JqWVhSamFDQW9VaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGTjBZWFJsT2lJc0lGSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZvb0tTQjdDaUFnSUNBZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjeTUwWlhoSmJXRm5aVE5FTG1Gd2NHeDVLSE1zSUdGeVozVnRaVzUwY3lrN0NpQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1Vpa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZOMFlYUmxPaUlzSUZJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRTFsS0ZJcElIc0tJQ0FnSUNBZ0lDQmpaUzVsY1hWaGJITW9VaWtnUFQwOUlDRXhJQ1ltSUNoekxuTmphWE56YjNJb1VpNTRMQ0JTTG5rc0lGSXVlaXdnVWk1M0tTd2dZMlV1WTI5d2VTaFNLU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCMlpTaFNLU0I3Q2lBZ0lDQWdJQ0FnVmk1bGNYVmhiSE1vVWlrZ1BUMDlJQ0V4SUNZbUlDaHpMblpwWlhkd2IzSjBLRkl1ZUN3Z1VpNTVMQ0JTTG5vc0lGSXVkeWtzSUZZdVkyOXdlU2hTS1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjBaU2dwSUhzS0lDQWdJQ0FnSUNCekxtUnBjMkZpYkdVb016QTBNaWtzSUhNdVpHbHpZV0pzWlNneU9EZzBLU3dnY3k1a2FYTmhZbXhsS0RJNU1qa3BMQ0J6TG1ScGMyRmliR1VvTXpJNE1qTXBMQ0J6TG1ScGMyRmliR1VvTXpBNE9Ta3NJSE11WkdsellXSnNaU2d5T1RZd0tTd2djeTVrYVhOaFlteGxLRE15T1RJMktTd2djeTVpYkdWdVpFVnhkV0YwYVc5dUtETXlOemMwS1N3Z2N5NWliR1Z1WkVaMWJtTW9NU3dnTUNrc0lITXVZbXhsYm1SR2RXNWpVMlZ3WVhKaGRHVW9NU3dnTUN3Z01Td2dNQ2tzSUhNdVkyOXNiM0pOWVhOcktDRXdMQ0FoTUN3Z0lUQXNJQ0V3S1N3Z2N5NWpiR1ZoY2tOdmJHOXlLREFzSURBc0lEQXNJREFwTENCekxtUmxjSFJvVFdGemF5Z2hNQ2tzSUhNdVpHVndkR2hHZFc1aktEVXhNeWtzSUhNdVkyeGxZWEpFWlhCMGFDZ3hLU3dnY3k1emRHVnVZMmxzVFdGemF5ZzBNamswT1RZM01qazFLU3dnY3k1emRHVnVZMmxzUm5WdVl5ZzFNVGtzSURBc0lEUXlPVFE1TmpjeU9UVXBMQ0J6TG5OMFpXNWphV3hQY0NnM05qZ3dMQ0EzTmpnd0xDQTNOamd3S1N3Z2N5NWpiR1ZoY2xOMFpXNWphV3dvTUNrc0lITXVZM1ZzYkVaaFkyVW9NVEF5T1Nrc0lITXVabkp2Ym5SR1lXTmxLREl6TURVcExDQnpMbkJ2YkhsbmIyNVBabVp6WlhRb01Dd2dNQ2tzSUhNdVlXTjBhWFpsVkdWNGRIVnlaU2d6TXprNE5Da3NJSE11WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTVRZd0xDQnVkV3hzS1N3Z2JpQTlQVDBnSVRBZ0ppWWdLSE11WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTURBNUxDQnVkV3hzS1N3Z2N5NWlhVzVrUm5KaGJXVmlkV1ptWlhJb016WXdNRGdzSUc1MWJHd3BLU3dnY3k1MWMyVlFjbTluY21GdEtHNTFiR3dwTENCekxteHBibVZYYVdSMGFDZ3hLU3dnY3k1elkybHpjMjl5S0RBc0lEQXNJSE11WTJGdWRtRnpMbmRwWkhSb0xDQnpMbU5oYm5aaGN5NW9aV2xuYUhRcExDQnpMblpwWlhkd2IzSjBLREFzSURBc0lITXVZMkZ1ZG1GekxuZHBaSFJvTENCekxtTmhiblpoY3k1b1pXbG5hSFFwTENCb0lEMGdlMzBzSUZVZ1BTQnVkV3hzTENCR0lEMGdlMzBzSUhVZ1BTQjdmU3dnWkNBOUlHNTFiR3dzSUdZZ1BTQWhNU3dnYlNBOUlHNTFiR3dzSUhnZ1BTQnVkV3hzTENCMklEMGdiblZzYkN3Z1p5QTlJRzUxYkd3c0lIQWdQU0J1ZFd4c0xDQmZJRDBnYm5Wc2JDd2dlU0E5SUc1MWJHd3NJR0lnUFNBaE1Td2dRU0E5SUc1MWJHd3NJRXdnUFNCdWRXeHNMQ0JKSUQwZ2JuVnNiQ3dnYXlBOUlHNTFiR3dzSUVJZ1BTQnVkV3hzTENCalpTNXpaWFFvTUN3Z01Dd2djeTVqWVc1MllYTXVkMmxrZEdnc0lITXVZMkZ1ZG1GekxtaGxhV2RvZENrc0lGWXVjMlYwS0RBc0lEQXNJSE11WTJGdWRtRnpMbmRwWkhSb0xDQnpMbU5oYm5aaGN5NW9aV2xuYUhRcExDQmhMbkpsYzJWMEtDa3NJR3d1Y21WelpYUW9LU3dnWXk1eVpYTmxkQ2dwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCaWRXWm1aWEp6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQmhMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRG9nYkN3S0lDQWdJQ0FnSUNBZ0lDQWdjM1JsYm1OcGJEb2dZd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWlc1aFlteGxPaUJzWlN3S0lDQWdJQ0FnSUNCa2FYTmhZbXhsT2lCbVpTd0tJQ0FnSUNBZ0lDQmlhVzVrUm5KaGJXVmlkV1ptWlhJNklFSmxMQW9nSUNBZ0lDQWdJSFZ6WlZCeWIyZHlZVzA2SUZrc0NpQWdJQ0FnSUNBZ2MyVjBRbXhsYm1ScGJtYzZJR2RsTEFvZ0lDQWdJQ0FnSUhObGRFMWhkR1Z5YVdGc09pQjRaU3dLSUNBZ0lDQWdJQ0J6WlhSR2JHbHdVMmxrWldRNklFOWxMQW9nSUNBZ0lDQWdJSE5sZEVOMWJHeEdZV05sT2lCSExBb2dJQ0FnSUNBZ0lITmxkRXhwYm1WWGFXUjBhRG9nYWl3S0lDQWdJQ0FnSUNCelpYUlFiMng1WjI5dVQyWm1jMlYwT2lCTExBb2dJQ0FnSUNBZ0lITmxkRk5qYVhOemIzSlVaWE4wT2lCMVpTd0tJQ0FnSUNBZ0lDQmhZM1JwZG1WVVpYaDBkWEpsT2lCelpTd0tJQ0FnSUNBZ0lDQmlhVzVrVkdWNGRIVnlaVG9nVTJVc0NpQWdJQ0FnSUNBZ2RXNWlhVzVrVkdWNGRIVnlaVG9nVkdVc0NpQWdJQ0FnSUNBZ1kyOXRjSEpsYzNObFpGUmxlRWx0WVdkbE1rUTZJRkJsTEFvZ0lDQWdJQ0FnSUhSbGVFbHRZV2RsTWtRNklISmxMQW9nSUNBZ0lDQWdJSFJsZUVsdFlXZGxNMFE2SUZvc0NpQWdJQ0FnSUNBZ2RHVjRVM1J2Y21GblpUSkVPaUJLTEFvZ0lDQWdJQ0FnSUhSbGVGTjBiM0poWjJVelJEb2dKQ3dLSUNBZ0lDQWdJQ0IwWlhoVGRXSkpiV0ZuWlRKRU9pQlpaU3dLSUNBZ0lDQWdJQ0IwWlhoVGRXSkpiV0ZuWlRORU9pQkRMQW9nSUNBZ0lDQWdJR052YlhCeVpYTnpaV1JVWlhoVGRXSkpiV0ZuWlRKRU9pQlVMQW9nSUNBZ0lDQWdJSE5qYVhOemIzSTZJRTFsTEFvZ0lDQWdJQ0FnSUhacFpYZHdiM0owT2lCMlpTd0tJQ0FnSUNBZ0lDQnlaWE5sZERvZ2RHVUtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdWSGdvY3l3Z1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnYkdWMElHRWdQU0JwTG1selYyVmlSMHd5TENCc0lEMGdhUzV0WVhoVVpYaDBkWEpsY3l3Z1l5QTlJR2t1YldGNFEzVmlaVzFoY0ZOcGVtVXNJR2dnUFNCcExtMWhlRlJsZUhSMWNtVlRhWHBsTENCMUlEMGdhUzV0WVhoVFlXMXdiR1Z6TENCbUlEMGdaUzVvWVhNb0lsZEZRa2RNWDIxMWJIUnBjMkZ0Y0d4bFpGOXlaVzVrWlhKZmRHOWZkR1Y0ZEhWeVpTSXBJRDhnWlM1blpYUW9JbGRGUWtkTVgyMTFiSFJwYzJGdGNHeGxaRjl5Wlc1a1pYSmZkRzlmZEdWNGRIVnlaU0lwSURvZ2RtOXBaQ0F3TENCdElEMGdibVYzSUZkbFlXdE5ZWEFzSUhnc0lIWWdQU0FoTVRzS0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ2RpQTlJSFI1Y0dWdlppQlBabVp6WTNKbFpXNURZVzUyWVhNZ1BDQWlkU0lnSmlZZ2JtVjNJRTltWm5OamNtVmxia05oYm5aaGN5Z3hMQ0F4S1M1blpYUkRiMjUwWlhoMEtDSXlaQ0lwSUNFOVBTQnVkV3hzT3dvZ0lDQWdmU0JqWVhSamFDQWdlMzBLSUNBZ0lHWjFibU4wYVc5dUlHY29ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMklEOGdibVYzSUU5bVpuTmpjbVZsYmtOaGJuWmhjeWhETENCVUtTQTZJSEZ6S0NKallXNTJZWE1pS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIQW9ReXdnVkN3Z1Npd2dKQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlaU0E5SURFN0NpQWdJQ0FnSUNBZ2FXWWdLQ2hETG5kcFpIUm9JRDRnSkNCOGZDQkRMbWhsYVdkb2RDQStJQ1FwSUNZbUlDaHlaU0E5SUNRZ0x5Qk5ZWFJvTG0xaGVDaERMbmRwWkhSb0xDQkRMbWhsYVdkb2RDa3BMQ0J5WlNBOElERWdmSHdnVkNBOVBUMGdJVEFwSUdsbUlDaDBlWEJsYjJZZ1NGUk5URWx0WVdkbFJXeGxiV1Z1ZENBOElDSjFJaUFtSmlCRElHbHVjM1JoYm1ObGIyWWdTRlJOVEVsdFlXZGxSV3hsYldWdWRDQjhmQ0IwZVhCbGIyWWdTRlJOVEVOaGJuWmhjMFZzWlcxbGJuUWdQQ0FpZFNJZ0ppWWdReUJwYm5OMFlXNWpaVzltSUVoVVRVeERZVzUyWVhORmJHVnRaVzUwSUh4OElIUjVjR1Z2WmlCSmJXRm5aVUpwZEcxaGNDQThJQ0oxSWlBbUppQkRJR2x1YzNSaGJtTmxiMllnU1cxaFoyVkNhWFJ0WVhBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGb2dQU0JVSUQ4Z1NtTWdPaUJOWVhSb0xtWnNiMjl5TENCTlpTQTlJRm9vY21VZ0tpQkRMbmRwWkhSb0tTd2dkbVVnUFNCYUtISmxJQ29nUXk1b1pXbG5hSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjRJRDA5UFNCMmIybGtJREFnSmlZZ0tIZ2dQU0JuS0UxbExDQjJaU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZEdVZ1BTQktJRDhnWnloTlpTd2dkbVVwSURvZ2VEc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJsTG5kcFpIUm9JRDBnVFdVc0lIUmxMbWhsYVdkb2RDQTlJSFpsTENCMFpTNW5aWFJEYjI1MFpYaDBLQ0l5WkNJcExtUnlZWGRKYldGblpTaERMQ0F3TENBd0xDQk5aU3dnZG1VcExDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklGUmxlSFIxY21VZ2FHRnpJR0psWlc0Z2NtVnphWHBsWkNCbWNtOXRJQ2dpSUNzZ1F5NTNhV1IwYUNBcklDSjRJaUFySUVNdWFHVnBaMmgwSUNzZ0lpa2dkRzhnS0NJZ0t5Qk5aU0FySUNKNElpQXJJSFpsSUNzZ0lpa3VJaWtzSUhSbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnSW1SaGRHRWlJR2x1SUVNZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQkpiV0ZuWlNCcGJpQkVZWFJoVkdWNGRIVnlaU0JwY3lCMGIyOGdZbWxuSUNnaUlDc2dReTUzYVdSMGFDQXJJQ0o0SWlBcklFTXVhR1ZwWjJoMElDc2dJaWt1SWlrc0lFTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFTTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJmS0VNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXRW9ReTUzYVdSMGFDa2dKaVlnYVdFb1F5NW9aV2xuYUhRcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlU2hES1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ1B5QWhNU0E2SUVNdWQzSmhjRk1nSVQwOUlIWjBJSHg4SUVNdWQzSmhjRlFnSVQwOUlIWjBJSHg4SUVNdWJXbHVSbWxzZEdWeUlDRTlQU0J5ZENBbUppQkRMbTFwYmtacGJIUmxjaUFoUFQwZ2RIUTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJpS0VNc0lGUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdReTVuWlc1bGNtRjBaVTFwY0cxaGNITWdKaVlnVkNBbUppQkRMbTFwYmtacGJIUmxjaUFoUFQwZ2NuUWdKaVlnUXk1dGFXNUdhV3gwWlhJZ0lUMDlJSFIwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1FTaERLU0I3Q2lBZ0lDQWdJQ0FnY3k1blpXNWxjbUYwWlUxcGNHMWhjQ2hES1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFd29ReXdnVkN3Z1Npd2dKQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGhJRDA5UFNBaE1Ta2djbVYwZFhKdUlGUTdDaUFnSUNBZ0lDQWdhV1lnS0VNZ0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmJRMTBnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUhOYlExMDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nUVhSMFpXMXdkQ0IwYnlCMWMyVWdibTl1TFdWNGFYTjBhVzVuSUZkbFlrZE1JR2x1ZEdWeWJtRnNJR1p2Y20xaGRDQW5JaUFySUVNZ0t5QWlKeUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdjbVVnUFNCVU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVUlEMDlQU0EyTkRBeklDWW1JQ2hLSUQwOVBTQTFNVEkySUNZbUlDaHlaU0E5SURNek16STJLU3dnU2lBOVBUMGdOVEV6TVNBbUppQW9jbVVnUFNBek16TXlOU2tzSUVvZ1BUMDlJRFV4TWpFZ0ppWWdLSEpsSUQwZ016TXpNakVwS1N3Z1ZDQTlQVDBnTmpRd055QW1KaUFvU2lBOVBUMGdOVEV5TmlBbUppQW9jbVVnUFNBek5EZ3pOeWtzSUVvZ1BUMDlJRFV4TXpFZ0ppWWdLSEpsSUQwZ016UTRORE1wTENCS0lEMDlQU0ExTVRJeElDWW1JQ2h5WlNBOUlETXlPRFE1S1Nrc0lGUWdQVDA5SURZME1EZ2dKaVlnS0VvZ1BUMDlJRFV4TWpZZ0ppWWdLSEpsSUQwZ016UTRNellwTENCS0lEMDlQU0ExTVRNeElDWW1JQ2h5WlNBOUlETTBPRFF5S1N3Z1NpQTlQVDBnTlRFeU1TQW1KaUFvY21VZ1BTQWtJRDA5UFNCUGFTQS9JRE0xT1RBM0lEb2dNekk0TlRZcEtTd2dLSEpsSUQwOVBTQXpNek15TlNCOGZDQnlaU0E5UFQwZ016TXpNallnZkh3Z2NtVWdQVDA5SURNME9EUXlJSHg4SUhKbElEMDlQU0F6TkRnek5pa2dKaVlnWlM1blpYUW9Ja1ZZVkY5amIyeHZjbDlpZFdabVpYSmZabXh2WVhRaUtTd2djbVU3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCSktFTXNJRlFzSUVvcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1lpaERMQ0JLS1NBOVBUMGdJVEFnZkh3Z1F5NXBjMFp5WVcxbFluVm1abVZ5VkdWNGRIVnlaU0FtSmlCRExtMXBia1pwYkhSbGNpQWhQVDBnY25RZ0ppWWdReTV0YVc1R2FXeDBaWElnSVQwOUlIUjBJRDhnVFdGMGFDNXNiMmN5S0UxaGRHZ3ViV0Y0S0ZRdWQybGtkR2dzSUZRdWFHVnBaMmgwS1NrZ0t5QXhJRG9nUXk1dGFYQnRZWEJ6SUNFOVBTQjJiMmxrSURBZ0ppWWdReTV0YVhCdFlYQnpMbXhsYm1kMGFDQStJREFnUHlCRExtMXBjRzFoY0hNdWJHVnVaM1JvSURvZ1F5NXBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxJQ1ltSUVGeWNtRjVMbWx6UVhKeVlYa29ReTVwYldGblpTa2dQeUJVTG0xcGNHMWhjSE11YkdWdVozUm9JRG9nTVRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHc29ReWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJESUQwOVBTQnlkQ0I4ZkNCRElEMDlQU0IwWVNCOGZDQkRJRDA5UFNCdVlTQS9JRGszTWpnZ09pQTVOekk1T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1FpaERLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGUWdQU0JETG5SaGNtZGxkRHNLSUNBZ0lDQWdJQ0JVTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQkNLU3dnZHloVUtTd2dWQzVwYzFacFpHVnZWR1Y0ZEhWeVpTQW1KaUJ0TG1SbGJHVjBaU2hVS1N3Z2J5NXRaVzF2Y25rdWRHVjRkSFZ5WlhNdExUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRkFvUXlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JVSUQwZ1F5NTBZWEpuWlhRN0NpQWdJQ0FnSUNBZ1ZDNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnVUNrc0lFVW9WQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCM0tFTXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRzR1WjJWMEtFTXBPd29nSUNBZ0lDQWdJRlF1WDE5M1pXSm5iRWx1YVhRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvY3k1a1pXeGxkR1ZVWlhoMGRYSmxLRlF1WDE5M1pXSm5iRlJsZUhSMWNtVXBMQ0J1TG5KbGJXOTJaU2hES1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkZLRU1wSUhzS0lDQWdJQ0FnSUNCc1pYUWdWQ0E5SUVNdWRHVjRkSFZ5WlN3Z1NpQTlJRzR1WjJWMEtFTXBMQ0FrSUQwZ2JpNW5aWFFvVkNrN0NpQWdJQ0FnSUNBZ2FXWWdLQ0VoUXlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0pDNWZYM2RsWW1kc1ZHVjRkSFZ5WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h6TG1SbGJHVjBaVlJsZUhSMWNtVW9KQzVmWDNkbFltZHNWR1Y0ZEhWeVpTa3NJRzh1YldWdGIzSjVMblJsZUhSMWNtVnpMUzBwTENCRExtUmxjSFJvVkdWNGRIVnlaU0FtSmlCRExtUmxjSFJvVkdWNGRIVnlaUzVrYVhOd2IzTmxLQ2tzSUVNdWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFwSUdadmNpaHNaWFFnY21VZ1BTQXdPeUJ5WlNBOElEWTdJSEpsS3lzcGN5NWtaV3hsZEdWR2NtRnRaV0oxWm1abGNpaEtMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjbHR5WlYwcExDQktMbDlmZDJWaVoyeEVaWEIwYUdKMVptWmxjaUFtSmlCekxtUmxiR1YwWlZKbGJtUmxjbUoxWm1abGNpaEtMbDlmZDJWaVoyeEVaWEIwYUdKMVptWmxjbHR5WlYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElITXVaR1ZzWlhSbFJuSmhiV1ZpZFdabVpYSW9TaTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElwTENCS0xsOWZkMlZpWjJ4RVpYQjBhR0oxWm1abGNpQW1KaUJ6TG1SbGJHVjBaVkpsYm1SbGNtSjFabVpsY2loS0xsOWZkMlZpWjJ4RVpYQjBhR0oxWm1abGNpa3NJRW91WDE5M1pXSm5iRTExYkhScGMyRnRjR3hsWkVaeVlXMWxZblZtWm1WeUlDWW1JSE11WkdWc1pYUmxSbkpoYldWaWRXWm1aWElvU2k1ZlgzZGxZbWRzVFhWc2RHbHpZVzF3YkdWa1JuSmhiV1ZpZFdabVpYSXBMQ0JLTGw5ZmQyVmlaMnhEYjJ4dmNsSmxibVJsY21KMVptWmxjaUFtSmlCekxtUmxiR1YwWlZKbGJtUmxjbUoxWm1abGNpaEtMbDlmZDJWaVoyeERiMnh2Y2xKbGJtUmxjbUoxWm1abGNpa3NJRW91WDE5M1pXSm5iRVJsY0hSb1VtVnVaR1Z5WW5WbVptVnlJQ1ltSUhNdVpHVnNaWFJsVW1WdVpHVnlZblZtWm1WeUtFb3VYMTkzWldKbmJFUmxjSFJvVW1WdVpHVnlZblZtWm1WeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFTXVhWE5YWldKSFRFMTFiSFJwY0d4bFVtVnVaR1Z5VkdGeVoyVjBjeWtnWm05eUtHeGxkQ0J5WlNBOUlEQXNJRm9nUFNCVUxteGxibWQwYURzZ2NtVWdQQ0JhT3lCeVpTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTlpTQTlJRzR1WjJWMEtGUmJjbVZkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUUxbExsOWZkMlZpWjJ4VVpYaDBkWEpsSUNZbUlDaHpMbVJsYkdWMFpWUmxlSFIxY21Vb1RXVXVYMTkzWldKbmJGUmxlSFIxY21VcExDQnZMbTFsYlc5eWVTNTBaWGgwZFhKbGN5MHRLU3dnYmk1eVpXMXZkbVVvVkZ0eVpWMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRzR1Y21WdGIzWmxLRlFwTENCdUxuSmxiVzkyWlNoREtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JzWlhRZ1JDQTlJREE3Q2lBZ0lDQm1kVzVqZEdsdmJpQlZLQ2tnZXdvZ0lDQWdJQ0FnSUVRZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUmlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnUXlBOUlFUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFTWdQajBnYkNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVZHVjRkSFZ5WlhNNklGUnllV2x1WnlCMGJ5QjFjMlVnSWlBcklFTWdLeUFpSUhSbGVIUjFjbVVnZFc1cGRITWdkMmhwYkdVZ2RHaHBjeUJIVUZVZ2MzVndjRzl5ZEhNZ2IyNXNlU0FpSUNzZ2JDa3NJRVFnS3owZ01Td2dRenNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUU4b1F5d2dWQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQktJRDBnYmk1blpYUW9ReWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tFTXVhWE5XYVdSbGIxUmxlSFIxY21VZ0ppWWdjMlVvUXlrc0lFTXVkbVZ5YzJsdmJpQStJREFnSmlZZ1NpNWZYM1psY25OcGIyNGdJVDA5SUVNdWRtVnljMmx2YmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ0pDQTlJRU11YVcxaFoyVTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2tJRDA5UFNCMmIybGtJREFwSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVkdWNGRIVnlaU0J0WVhKclpXUWdabTl5SUhWd1pHRjBaU0JpZFhRZ2FXMWhaMlVnYVhNZ2RXNWtaV1pwYm1Wa0lpazdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0NRdVkyOXRjR3hsZEdVZ1BUMDlJQ0V4S1NCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUZSbGVIUjFjbVVnYldGeWEyVmtJR1p2Y2lCMWNHUmhkR1VnWW5WMElHbHRZV2RsSUdseklHbHVZMjl0Y0d4bGRHVWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JDWlNoS0xDQkRMQ0JVS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFnS3lCVUtTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNnek5UVXpMQ0JLTGw5ZmQyVmlaMnhVWlhoMGRYSmxLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc1bEtFTXNJRlFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdTaUE5SUc0dVoyVjBLRU1wT3dvZ0lDQWdJQ0FnSUdsbUlDaERMblpsY25OcGIyNGdQaUF3SUNZbUlFb3VYMTkyWlhKemFXOXVJQ0U5UFNCRExuWmxjbk5wYjI0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnUW1Vb1Npd2dReXdnVkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkQzVoWTNScGRtVlVaWGgwZFhKbEtETXpPVGcwSUNzZ1ZDa3NJSFF1WW1sdVpGUmxlSFIxY21Vb016VTROallzSUVvdVgxOTNaV0puYkZSbGVIUjFjbVVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1kyVW9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JLSUQwZ2JpNW5aWFFvUXlrN0NpQWdJQ0FnSUNBZ2FXWWdLRU11ZG1WeWMybHZiaUErSURBZ0ppWWdTaTVmWDNabGNuTnBiMjRnSVQwOUlFTXVkbVZ5YzJsdmJpa2dld29nSUNBZ0lDQWdJQ0FnSUNCQ1pTaEtMQ0JETENCVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QlVLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pNamczT1N3Z1NpNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQldLRU1zSUZRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnU2lBOUlHNHVaMlYwS0VNcE93b2dJQ0FnSUNBZ0lHbG1JQ2hETG5abGNuTnBiMjRnUGlBd0lDWW1JRW91WDE5MlpYSnphVzl1SUNFOVBTQkRMblpsY25OcGIyNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1dTaEtMQ0JETENCVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QlVLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pOREEyTnl3Z1NpNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrN0NpQWdJQ0I5Q2lBZ0lDQnNaWFFnVnlBOUlIc0tJQ0FnSUNBZ0lDQmJUbk5kT2lBeE1EUTVOeXdLSUNBZ0lDQWdJQ0JiZG5SZE9pQXpNekEzTVN3S0lDQWdJQ0FnSUNCYlFuTmRPaUF6TXpZME9Bb2dJQ0FnZlN3Z2FHVWdQU0I3Q2lBZ0lDQWdJQ0FnVzNKMFhUb2dPVGN5T0N3S0lDQWdJQ0FnSUNCYmRHRmRPaUE1T1RnMExBb2dJQ0FnSUNBZ0lGdHVZVjA2SURrNU9EWXNDaUFnSUNBZ0lDQWdXM1IwWFRvZ09UY3lPU3dLSUNBZ0lDQWdJQ0JiVjJOZE9pQTVPVGcxTEFvZ0lDQWdJQ0FnSUZ0VmFWMDZJRGs1T0RjS0lDQWdJSDA3Q2lBZ0lDQm1kVzVqZEdsdmJpQnNaU2hETENCVUxDQktLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFb2dQeUFvY3k1MFpYaFFZWEpoYldWMFpYSnBLRU1zSURFd01qUXlMQ0JYVzFRdWQzSmhjRk5kS1N3Z2N5NTBaWGhRWVhKaGJXVjBaWEpwS0VNc0lERXdNalF6TENCWFcxUXVkM0poY0ZSZEtTd2dLRU1nUFQwOUlETXlPRGM1SUh4OElFTWdQVDA5SURNMU9EWTJLU0FtSmlCekxuUmxlRkJoY21GdFpYUmxjbWtvUXl3Z016STRPRElzSUZkYlZDNTNjbUZ3VWwwcExDQnpMblJsZUZCaGNtRnRaWFJsY21rb1F5d2dNVEF5TkRBc0lHaGxXMVF1YldGblJtbHNkR1Z5WFNrc0lITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoRExDQXhNREkwTVN3Z2FHVmJWQzV0YVc1R2FXeDBaWEpkS1NrZ09pQW9jeTUwWlhoUVlYSmhiV1YwWlhKcEtFTXNJREV3TWpReUxDQXpNekEzTVNrc0lITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoRExDQXhNREkwTXl3Z016TXdOekVwTENBb1F5QTlQVDBnTXpJNE56a2dmSHdnUXlBOVBUMGdNelU0TmpZcElDWW1JSE11ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0F6TWpnNE1pd2dNek13TnpFcExDQW9WQzUzY21Gd1V5QWhQVDBnZG5RZ2ZId2dWQzUzY21Gd1ZDQWhQVDBnZG5RcElDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dWR1Y0ZEhWeVpTQnBjeUJ1YjNRZ2NHOTNaWElnYjJZZ2RIZHZMaUJVWlhoMGRYSmxMbmR5WVhCVElHRnVaQ0JVWlhoMGRYSmxMbmR5WVhCVUlITm9iM1ZzWkNCaVpTQnpaWFFnZEc4Z1ZFaFNSVVV1UTJ4aGJYQlViMFZrWjJWWGNtRndjR2x1Wnk0aUtTd2djeTUwWlhoUVlYSmhiV1YwWlhKcEtFTXNJREV3TWpRd0xDQnJLRlF1YldGblJtbHNkR1Z5S1Nrc0lITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoRExDQXhNREkwTVN3Z2F5aFVMbTFwYmtacGJIUmxjaWtwTENCVUxtMXBia1pwYkhSbGNpQWhQVDBnY25RZ0ppWWdWQzV0YVc1R2FXeDBaWElnSVQwOUlIUjBJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVkdWNGRIVnlaU0JwY3lCdWIzUWdjRzkzWlhJZ2IyWWdkSGR2TGlCVVpYaDBkWEpsTG0xcGJrWnBiSFJsY2lCemFHOTFiR1FnWW1VZ2MyVjBJSFJ2SUZSSVVrVkZMazVsWVhKbGMzUkdhV3gwWlhJZ2IzSWdWRWhTUlVVdVRHbHVaV0Z5Um1sc2RHVnlMaUlwS1N3Z1pTNW9ZWE1vSWtWWVZGOTBaWGgwZFhKbFgyWnBiSFJsY2w5aGJtbHpiM1J5YjNCcFl5SXBJRDA5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdKQ0E5SUdVdVoyVjBLQ0pGV0ZSZmRHVjRkSFZ5WlY5bWFXeDBaWEpmWVc1cGMyOTBjbTl3YVdNaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGUXVkSGx3WlNBOVBUMGdibTRnSmlZZ1pTNW9ZWE1vSWs5RlUxOTBaWGgwZFhKbFgyWnNiMkYwWDJ4cGJtVmhjaUlwSUQwOVBTQWhNU0I4ZkNCaElEMDlQU0FoTVNBbUppQlVMblI1Y0dVZ1BUMDlJR3R1SUNZbUlHVXVhR0Z6S0NKUFJWTmZkR1Y0ZEhWeVpWOW9ZV3htWDJac2IyRjBYMnhwYm1WaGNpSXBJRDA5UFNBaE1Ta2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FvVkM1aGJtbHpiM1J5YjNCNUlENGdNU0I4ZkNCdUxtZGxkQ2hVS1M1ZlgyTjFjbkpsYm5SQmJtbHpiM1J5YjNCNUtTQW1KaUFvY3k1MFpYaFFZWEpoYldWMFpYSm1LRU1zSUNRdVZFVllWRlZTUlY5TlFWaGZRVTVKVTA5VVVrOVFXVjlGV0ZRc0lFMWhkR2d1YldsdUtGUXVZVzVwYzI5MGNtOXdlU3dnYVM1blpYUk5ZWGhCYm1semIzUnliM0I1S0NrcEtTd2diaTVuWlhRb1ZDa3VYMTlqZFhKeVpXNTBRVzVwYzI5MGNtOXdlU0E5SUZRdVlXNXBjMjkwY205d2VTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWm1Vb1F5d2dWQ2tnZXdvZ0lDQWdJQ0FnSUVNdVgxOTNaV0puYkVsdWFYUWdQVDA5SUhadmFXUWdNQ0FtSmlBb1F5NWZYM2RsWW1kc1NXNXBkQ0E5SUNFd0xDQlVMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0JDS1N3Z1F5NWZYM2RsWW1kc1ZHVjRkSFZ5WlNBOUlITXVZM0psWVhSbFZHVjRkSFZ5WlNncExDQnZMbTFsYlc5eWVTNTBaWGgwZFhKbGN5c3JLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVKbEtFTXNJRlFzSUVvcElIc0tJQ0FnSUNBZ0lDQnNaWFFnSkNBOUlETTFOVE03Q2lBZ0lDQWdJQ0FnVkM1cGMwUmhkR0ZVWlhoMGRYSmxNa1JCY25KaGVTQW1KaUFvSkNBOUlETTFPRFkyS1N3Z1ZDNXBjMFJoZEdGVVpYaDBkWEpsTTBRZ0ppWWdLQ1FnUFNBek1qZzNPU2tzSUdabEtFTXNJRlFwTENCMExtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUWdLeUJLS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2drTENCRExsOWZkMlZpWjJ4VVpYaDBkWEpsS1N3Z2N5NXdhWGhsYkZOMGIzSmxhU2d6TnpRME1Dd2dWQzVtYkdsd1dTa3NJSE11Y0dsNFpXeFRkRzl5Wldrb016YzBOREVzSUZRdWNISmxiWFZzZEdsd2JIbEJiSEJvWVNrc0lITXVjR2w0Wld4VGRHOXlaV2tvTXpNeE55d2dWQzUxYm5CaFkydEJiR2xuYm0xbGJuUXBMQ0J6TG5CcGVHVnNVM1J2Y21WcEtETTNORFF6TENBd0tUc0tJQ0FnSUNBZ0lDQnNaWFFnY21VZ1BTQjVLRlFwSUNZbUlGOG9WQzVwYldGblpTa2dQVDA5SUNFeExDQmFJRDBnY0NoVUxtbHRZV2RsTENCeVpTd2dJVEVzSUdncExDQk5aU0E5SUY4b1dpa2dmSHdnWVN3Z2RtVWdQU0J5TG1OdmJuWmxjblFvVkM1bWIzSnRZWFFwTENCMFpTQTlJSEl1WTI5dWRtVnlkQ2hVTG5SNWNHVXBMQ0JTSUQwZ1RDaFVMbWx1ZEdWeWJtRnNSbTl5YldGMExDQjJaU3dnZEdVc0lGUXVaVzVqYjJScGJtY3BPd29nSUNBZ0lDQWdJR3hsS0NRc0lGUXNJRTFsS1RzS0lDQWdJQ0FnSUNCc1pYUWdaV1VzSUZFZ1BTQlVMbTFwY0cxaGNITXNJRVZsSUQwZ1lTQW1KaUJVTG1selZtbGtaVzlVWlhoMGRYSmxJQ0U5UFNBaE1Dd2diV1VnUFNCRExsOWZkbVZ5YzJsdmJpQTlQVDBnZG05cFpDQXdMQ0JTWlNBOUlFa29WQ3dnV2l3Z1RXVXBPd29nSUNBZ0lDQWdJR2xtSUNoVUxtbHpSR1Z3ZEdoVVpYaDBkWEpsS1NCU0lEMGdOalF3TWl3Z1lTQS9JRlF1ZEhsd1pTQTlQVDBnYm00Z1B5QlNJRDBnTXpZd01USWdPaUJVTG5SNWNHVWdQVDA5SUZCeklEOGdVaUE5SURNek1Ua3dJRG9nVkM1MGVYQmxJRDA5UFNCVWFTQS9JRklnUFNBek5UQTFOaUE2SUZJZ1BTQXpNekU0T1NBNklGUXVkSGx3WlNBOVBUMGdibTRnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVjJWaVIweFNaVzVrWlhKbGNqb2dSbXh2WVhScGJtY2djRzlwYm5RZ1pHVndkR2dnZEdWNGRIVnlaU0J5WlhGMWFYSmxjeUJYWldKSFRESXVJaWtzSUZRdVptOXliV0YwSUQwOVBTQldiaUFtSmlCU0lEMDlQU0EyTkRBeUlDWW1JRlF1ZEhsd1pTQWhQVDBnWTNJZ0ppWWdWQzUwZVhCbElDRTlQU0JRY3lBbUppQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlZjMlVnVlc1emFXZHVaV1JUYUc5eWRGUjVjR1VnYjNJZ1ZXNXphV2R1WldSSmJuUlVlWEJsSUdadmNpQkVaWEIwYUVadmNtMWhkQ0JFWlhCMGFGUmxlSFIxY21VdUlpa3NJRlF1ZEhsd1pTQTlJR055TENCMFpTQTlJSEl1WTI5dWRtVnlkQ2hVTG5SNWNHVXBLU3dnVkM1bWIzSnRZWFFnUFQwOUlFeHBJQ1ltSUZJZ1BUMDlJRFkwTURJZ0ppWWdLRklnUFNBek5EQTBNU3dnVkM1MGVYQmxJQ0U5UFNCVWFTQW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJWYzJVZ1ZXNXphV2R1WldSSmJuUXlORGhVZVhCbElHWnZjaUJFWlhCMGFGTjBaVzVqYVd4R2IzSnRZWFFnUkdWd2RHaFVaWGgwZFhKbExpSXBMQ0JVTG5SNWNHVWdQU0JVYVN3Z2RHVWdQU0J5TG1OdmJuWmxjblFvVkM1MGVYQmxLU2twTENCRlpTQW1KaUJ0WlNBL0lIUXVkR1Y0VTNSdmNtRm5aVEpFS0RNMU5UTXNJREVzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNnek5UVXpMQ0F3TENCU0xDQmFMbmRwWkhSb0xDQmFMbWhsYVdkb2RDd2dNQ3dnZG1Vc0lIUmxMQ0J1ZFd4c0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFVMbWx6UkdGMFlWUmxlSFIxY21VcElHbG1JQ2hSTG14bGJtZDBhQ0ErSURBZ0ppWWdUV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdSV1VnSmlZZ2JXVWdKaVlnZEM1MFpYaFRkRzl5WVdkbE1rUW9NelUxTXl3Z1VtVXNJRklzSUZGYk1GMHVkMmxrZEdnc0lGRmJNRjB1YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdlpTQTlJREFzSUV4bElEMGdVUzVzWlc1bmRHZzdJRzlsSUR3Z1RHVTdJRzlsS3lzcFpXVWdQU0JSVzI5bFhTd2dSV1VnUHlCMExuUmxlRk4xWWtsdFlXZGxNa1FvTXpVMU15d2dNQ3dnTUN3Z01Dd2daV1V1ZDJsa2RHZ3NJR1ZsTG1obGFXZG9kQ3dnZG1Vc0lIUmxMQ0JsWlM1a1lYUmhLU0E2SUhRdWRHVjRTVzFoWjJVeVJDZ3pOVFV6TENCdlpTd2dVaXdnWldVdWQybGtkR2dzSUdWbExtaGxhV2RvZEN3Z01Dd2dkbVVzSUhSbExDQmxaUzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnVkM1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Uc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1JXVWdQeUFvYldVZ0ppWWdkQzUwWlhoVGRHOXlZV2RsTWtRb016VTFNeXdnVW1Vc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBLU3dnZEM1MFpYaFRkV0pKYldGblpUSkVLRE0xTlRNc0lEQXNJREFzSURBc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMExDQjJaU3dnZEdVc0lGb3VaR0YwWVNrcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNMU5UTXNJREFzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMExDQXdMQ0IyWlN3Z2RHVXNJRm91WkdGMFlTazdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9WQzVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRVZsSUNZbUlHMWxJQ1ltSUhRdWRHVjRVM1J2Y21GblpUSkVLRE0xTlRNc0lGSmxMQ0JTTENCUld6QmRMbmRwWkhSb0xDQlJXekJkTG1obGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2IyVWdQU0F3TENCTVpTQTlJRkV1YkdWdVozUm9PeUJ2WlNBOElFeGxPeUJ2WlNzcktXVmxJRDBnVVZ0dlpWMHNJRlF1Wm05eWJXRjBJQ0U5UFNCamRDQW1KaUJVTG1admNtMWhkQ0FoUFQwZ1IyNGdQeUIyWlNBaFBUMGdiblZzYkNBL0lFVmxJRDhnZEM1amIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXlSQ2d6TlRVekxDQnZaU3dnTUN3Z01Dd2daV1V1ZDJsa2RHZ3NJR1ZsTG1obGFXZG9kQ3dnZG1Vc0lHVmxMbVJoZEdFcElEb2dkQzVqYjIxd2NtVnpjMlZrVkdWNFNXMWhaMlV5UkNnek5UVXpMQ0J2WlN3Z1Vpd2daV1V1ZDJsa2RHZ3NJR1ZsTG1obGFXZG9kQ3dnTUN3Z1pXVXVaR0YwWVNrZ09pQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklFRjBkR1Z0Y0hRZ2RHOGdiRzloWkNCMWJuTjFjSEJ2Y25SbFpDQmpiMjF3Y21WemMyVmtJSFJsZUhSMWNtVWdabTl5YldGMElHbHVJQzUxY0d4dllXUlVaWGgwZFhKbEtDa2lLU0E2SUVWbElEOGdkQzUwWlhoVGRXSkpiV0ZuWlRKRUtETTFOVE1zSUc5bExDQXdMQ0F3TENCbFpTNTNhV1IwYUN3Z1pXVXVhR1ZwWjJoMExDQjJaU3dnZEdVc0lHVmxMbVJoZEdFcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNMU5UTXNJRzlsTENCU0xDQmxaUzUzYVdSMGFDd2daV1V1YUdWcFoyaDBMQ0F3TENCMlpTd2dkR1VzSUdWbExtUmhkR0VwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1ZDNXBjMFJoZEdGVVpYaDBkWEpsTWtSQmNuSmhlU2tnUldVZ1B5QW9iV1VnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNMFFvTXpVNE5qWXNJRkpsTENCU0xDQmFMbmRwWkhSb0xDQmFMbWhsYVdkb2RDd2dXaTVrWlhCMGFDa3NJSFF1ZEdWNFUzVmlTVzFoWjJVelJDZ3pOVGcyTml3Z01Dd2dNQ3dnTUN3Z01Dd2dXaTUzYVdSMGFDd2dXaTVvWldsbmFIUXNJRm91WkdWd2RHZ3NJSFpsTENCMFpTd2dXaTVrWVhSaEtTa2dPaUIwTG5SbGVFbHRZV2RsTTBRb016VTROallzSURBc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBMQ0JhTG1SbGNIUm9MQ0F3TENCMlpTd2dkR1VzSUZvdVpHRjBZU2s3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvVkM1cGMwUmhkR0ZVWlhoMGRYSmxNMFFwSUVWbElEOGdLRzFsSUNZbUlIUXVkR1Y0VTNSdmNtRm5aVE5FS0RNeU9EYzVMQ0JTWlN3Z1Vpd2dXaTUzYVdSMGFDd2dXaTVvWldsbmFIUXNJRm91WkdWd2RHZ3BMQ0IwTG5SbGVGTjFZa2x0WVdkbE0wUW9Nekk0Tnprc0lEQXNJREFzSURBc0lEQXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBMQ0JhTG1SbGNIUm9MQ0IyWlN3Z2RHVXNJRm91WkdGMFlTa3BJRG9nZEM1MFpYaEpiV0ZuWlRORUtETXlPRGM1TENBd0xDQlNMQ0JhTG5kcFpIUm9MQ0JhTG1obGFXZG9kQ3dnV2k1a1pYQjBhQ3dnTUN3Z2RtVXNJSFJsTENCYUxtUmhkR0VwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0ZRdWFYTkdjbUZ0WldKMVptWmxjbFJsZUhSMWNtVXBJRVZsSUNZbUlHMWxJRDhnZEM1MFpYaFRkRzl5WVdkbE1rUW9NelUxTXl3Z1VtVXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwS1NBNklIUXVkR1Y0U1cxaFoyVXlSQ2d6TlRVekxDQXdMQ0JTTENCYUxuZHBaSFJvTENCYUxtaGxhV2RvZEN3Z01Dd2dkbVVzSUhSbExDQnVkV3hzS1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoUkxteGxibWQwYUNBK0lEQWdKaVlnVFdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnUldVZ0ppWWdiV1VnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNa1FvTXpVMU15d2dVbVVzSUZJc0lGRmJNRjB1ZDJsa2RHZ3NJRkZiTUYwdWFHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnZaU0E5SURBc0lFeGxJRDBnVVM1c1pXNW5kR2c3SUc5bElEd2dUR1U3SUc5bEt5c3BaV1VnUFNCUlcyOWxYU3dnUldVZ1B5QjBMblJsZUZOMVlrbHRZV2RsTWtRb016VTFNeXdnYjJVc0lEQXNJREFzSUhabExDQjBaU3dnWldVcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNMU5UTXNJRzlsTENCU0xDQjJaU3dnZEdVc0lHVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZDNW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdSV1VnUHlBb2JXVWdKaVlnZEM1MFpYaFRkRzl5WVdkbE1rUW9NelUxTXl3Z1VtVXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwS1N3Z2RDNTBaWGhUZFdKSmJXRm5aVEpFS0RNMU5UTXNJREFzSURBc0lEQXNJSFpsTENCMFpTd2dXaWtwSURvZ2RDNTBaWGhKYldGblpUSkVLRE0xTlRNc0lEQXNJRklzSUhabExDQjBaU3dnV2lrN0NpQWdJQ0FnSUNBZ1lpaFVMQ0JOWlNrZ0ppWWdRU2drS1N3Z1F5NWZYM1psY25OcGIyNGdQU0JVTG5abGNuTnBiMjRzSUZRdWIyNVZjR1JoZEdVZ0ppWWdWQzV2YmxWd1pHRjBaU2hVS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGa29ReXdnVkN3Z1Npa2dld29nSUNBZ0lDQWdJR2xtSUNoVUxtbHRZV2RsTG14bGJtZDBhQ0FoUFQwZ05pa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHWmxLRU1zSUZRcExDQjBMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFnS3lCS0tTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNnek5EQTJOeXdnUXk1ZlgzZGxZbWRzVkdWNGRIVnlaU2tzSUhNdWNHbDRaV3hUZEc5eVpXa29NemMwTkRBc0lGUXVabXhwY0ZrcExDQnpMbkJwZUdWc1UzUnZjbVZwS0RNM05EUXhMQ0JVTG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VwTENCekxuQnBlR1ZzVTNSdmNtVnBLRE16TVRjc0lGUXVkVzV3WVdOclFXeHBaMjV0Wlc1MEtTd2djeTV3YVhobGJGTjBiM0psYVNnek56UTBNeXdnTUNrN0NpQWdJQ0FnSUNBZ2JHVjBJQ1FnUFNCVUlDWW1JQ2hVTG1selEyOXRjSEpsYzNObFpGUmxlSFIxY21VZ2ZId2dWQzVwYldGblpWc3dYUzVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsS1N3Z2NtVWdQU0JVTG1sdFlXZGxXekJkSUNZbUlGUXVhVzFoWjJWYk1GMHVhWE5FWVhSaFZHVjRkSFZ5WlN3Z1dpQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYjJVZ1BTQXdPeUJ2WlNBOElEWTdJRzlsS3lzcElTUWdKaVlnSVhKbElEOGdXbHR2WlYwZ1BTQndLRlF1YVcxaFoyVmJiMlZkTENBaE1Td2dJVEFzSUdNcElEb2dXbHR2WlYwZ1BTQnlaU0EvSUZRdWFXMWhaMlZiYjJWZExtbHRZV2RsSURvZ1ZDNXBiV0ZuWlZ0dlpWMDdDaUFnSUNBZ0lDQWdiR1YwSUUxbElEMGdXbHN3WFN3Z2RtVWdQU0JmS0UxbEtTQjhmQ0JoTENCMFpTQTlJSEl1WTI5dWRtVnlkQ2hVTG1admNtMWhkQ2tzSUZJZ1BTQnlMbU52Ym5abGNuUW9WQzUwZVhCbEtTd2daV1VnUFNCTUtGUXVhVzUwWlhKdVlXeEdiM0p0WVhRc0lIUmxMQ0JTTENCVUxtVnVZMjlrYVc1bktTd2dVU0E5SUdFZ0ppWWdWQzVwYzFacFpHVnZWR1Y0ZEhWeVpTQWhQVDBnSVRBc0lFVmxJRDBnUXk1ZlgzWmxjbk5wYjI0Z1BUMDlJSFp2YVdRZ01Dd2diV1VnUFNCSktGUXNJRTFsTENCMlpTazdDaUFnSUNBZ0lDQWdiR1VvTXpRd05qY3NJRlFzSUhabEtUc0tJQ0FnSUNBZ0lDQnNaWFFnVW1VN0NpQWdJQ0FnSUNBZ2FXWWdLQ1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdVU0FtSmlCRlpTQW1KaUIwTG5SbGVGTjBiM0poWjJVeVJDZ3pOREEyTnl3Z2JXVXNJR1ZsTENCTlpTNTNhV1IwYUN3Z1RXVXVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2WlNBOUlEQTdJRzlsSUR3Z05qc2diMlVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCU1pTQTlJRnBiYjJWZExtMXBjRzFoY0hNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUV4bElEMGdNRHNnVEdVZ1BDQlNaUzVzWlc1bmRHZzdJRXhsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWVpTQTlJRkpsVzB4bFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JVTG1admNtMWhkQ0FoUFQwZ1kzUWdKaVlnVkM1bWIzSnRZWFFnSVQwOUlFZHVJRDhnZEdVZ0lUMDlJRzUxYkd3Z1B5QlJJRDhnZEM1amIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTENCTVpTd2dNQ3dnTUN3Z1dHVXVkMmxrZEdnc0lGaGxMbWhsYVdkb2RDd2dkR1VzSUZobExtUmhkR0VwSURvZ2RDNWpiMjF3Y21WemMyVmtWR1Y0U1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTENCTVpTd2daV1VzSUZobExuZHBaSFJvTENCWVpTNW9aV2xuYUhRc0lEQXNJRmhsTG1SaGRHRXBJRG9nWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJCZEhSbGJYQjBJSFJ2SUd4dllXUWdkVzV6ZFhCd2IzSjBaV1FnWTI5dGNISmxjM05sWkNCMFpYaDBkWEpsSUdadmNtMWhkQ0JwYmlBdWMyVjBWR1Y0ZEhWeVpVTjFZbVVvS1NJcElEb2dVU0EvSUhRdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTENCTVpTd2dNQ3dnTUN3Z1dHVXVkMmxrZEdnc0lGaGxMbWhsYVdkb2RDd2dkR1VzSUZJc0lGaGxMbVJoZEdFcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNME1EWTVJQ3NnYjJVc0lFeGxMQ0JsWlN3Z1dHVXVkMmxrZEdnc0lGaGxMbWhsYVdkb2RDd2dNQ3dnZEdVc0lGSXNJRmhsTG1SaGRHRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdVbVVnUFNCVUxtMXBjRzFoY0hNc0lGRWdKaVlnUldVZ0ppWWdLRkpsTG14bGJtZDBhQ0ErSURBZ0ppWWdiV1VyS3l3Z2RDNTBaWGhUZEc5eVlXZGxNa1FvTXpRd05qY3NJRzFsTENCbFpTd2dXbHN3WFM1M2FXUjBhQ3dnV2xzd1hTNW9aV2xuYUhRcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2WlNBOUlEQTdJRzlsSUR3Z05qc2diMlVyS3lscFppQW9jbVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZFZ1B5QjBMblJsZUZOMVlrbHRZV2RsTWtRb016UXdOamtnS3lCdlpTd2dNQ3dnTUN3Z01Dd2dXbHR2WlYwdWQybGtkR2dzSUZwYmIyVmRMbWhsYVdkb2RDd2dkR1VzSUZJc0lGcGJiMlZkTG1SaGRHRXBJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTBNRFk1SUNzZ2IyVXNJREFzSUdWbExDQmFXMjlsWFM1M2FXUjBhQ3dnV2x0dlpWMHVhR1ZwWjJoMExDQXdMQ0IwWlN3Z1Vpd2dXbHR2WlYwdVpHRjBZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRXhsSUQwZ01Ec2dUR1VnUENCU1pTNXNaVzVuZEdnN0lFeGxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYWlNBOUlGSmxXMHhsWFM1cGJXRm5aVnR2WlYwdWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VTQS9JSFF1ZEdWNFUzVmlTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxMQ0JNWlNBcklERXNJREFzSURBc0lGZGxMbmRwWkhSb0xDQlhaUzVvWldsbmFIUXNJSFJsTENCU0xDQlhaUzVrWVhSaEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNnek5EQTJPU0FySUc5bExDQk1aU0FySURFc0lHVmxMQ0JYWlM1M2FXUjBhQ3dnVjJVdWFHVnBaMmgwTENBd0xDQjBaU3dnVWl3Z1YyVXVaR0YwWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlJJRDhnZEM1MFpYaFRkV0pKYldGblpUSkVLRE0wTURZNUlDc2diMlVzSURBc0lEQXNJREFzSUhSbExDQlNMQ0JhVzI5bFhTa2dPaUIwTG5SbGVFbHRZV2RsTWtRb016UXdOamtnS3lCdlpTd2dNQ3dnWldVc0lIUmxMQ0JTTENCYVcyOWxYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRXhsSUQwZ01Ec2dUR1VnUENCU1pTNXNaVzVuZEdnN0lFeGxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JZWlNBOUlGSmxXMHhsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlJJRDhnZEM1MFpYaFRkV0pKYldGblpUSkVLRE0wTURZNUlDc2diMlVzSUV4bElDc2dNU3dnTUN3Z01Dd2dkR1VzSUZJc0lGaGxMbWx0WVdkbFcyOWxYU2tnT2lCMExuUmxlRWx0WVdkbE1rUW9NelF3TmprZ0t5QnZaU3dnVEdVZ0t5QXhMQ0JsWlN3Z2RHVXNJRklzSUZobExtbHRZV2RsVzI5bFhTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1lpaFVMQ0IyWlNrZ0ppWWdRU2d6TkRBMk55a3NJRU11WDE5MlpYSnphVzl1SUQwZ1ZDNTJaWEp6YVc5dUxDQlVMbTl1VlhCa1lYUmxJQ1ltSUZRdWIyNVZjR1JoZEdVb1ZDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJEWlNoRExDQlVMQ0JLTENBa0xDQnlaU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmFJRDBnY2k1amIyNTJaWEowS0VvdVptOXliV0YwS1N3Z1RXVWdQU0J5TG1OdmJuWmxjblFvU2k1MGVYQmxLU3dnZG1VZ1BTQk1LRW91YVc1MFpYSnVZV3hHYjNKdFlYUXNJRm9zSUUxbExDQktMbVZ1WTI5a2FXNW5LVHNLSUNBZ0lDQWdJQ0J1TG1kbGRDaFVLUzVmWDJoaGMwVjRkR1Z5Ym1Gc1ZHVjRkSFZ5WlhNZ2ZId2dLSEpsSUQwOVBTQXpNamczT1NCOGZDQnlaU0E5UFQwZ016VTROallnUHlCMExuUmxlRWx0WVdkbE0wUW9jbVVzSURBc0lIWmxMQ0JVTG5kcFpIUm9MQ0JVTG1obGFXZG9kQ3dnVkM1a1pYQjBhQ3dnTUN3Z1dpd2dUV1VzSUc1MWJHd3BJRG9nZEM1MFpYaEpiV0ZuWlRKRUtISmxMQ0F3TENCMlpTd2dWQzUzYVdSMGFDd2dWQzVvWldsbmFIUXNJREFzSUZvc0lFMWxMQ0J1ZFd4c0tTa3NJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTVRZd0xDQkRLU3dnVkM1MWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VZ1B5Qm1MbVp5WVcxbFluVm1abVZ5VkdWNGRIVnlaVEpFVFhWc2RHbHpZVzF3YkdWRldGUW9Nell4TmpBc0lDUXNJSEpsTENCdUxtZGxkQ2hLS1M1ZlgzZGxZbWRzVkdWNGRIVnlaU3dnTUN3Z2RXVW9WQ2twSURvZ2N5NW1jbUZ0WldKMVptWmxjbFJsZUhSMWNtVXlSQ2d6TmpFMk1Dd2dKQ3dnY21Vc0lHNHVaMlYwS0VvcExsOWZkMlZpWjJ4VVpYaDBkWEpsTENBd0tTd2dkQzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell4TmpBc0lHNTFiR3dwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VXVW9ReXdnVkN3Z1Npa2dld29nSUNBZ0lDQWdJR2xtSUNoekxtSnBibVJTWlc1a1pYSmlkV1ptWlhJb016WXhOakVzSUVNcExDQlVMbVJsY0hSb1FuVm1abVZ5SUNZbUlDRlVMbk4wWlc1amFXeENkV1ptWlhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElDUWdQU0F6TXpFNE9Uc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFb2dmSHdnVkM1MWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5WlNBOUlGUXVaR1Z3ZEdoVVpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21VZ0ppWWdjbVV1YVhORVpYQjBhRlJsZUhSMWNtVWdKaVlnS0hKbExuUjVjR1VnUFQwOUlHNXVJRDhnSkNBOUlETTJNREV5SURvZ2NtVXVkSGx3WlNBOVBUMGdVSE1nSmlZZ0tDUWdQU0F6TXpFNU1Da3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZvZ1BTQjFaU2hVS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZRdWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbElEOGdaaTV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsVFhWc2RHbHpZVzF3YkdWRldGUW9Nell4TmpFc0lGb3NJQ1FzSUZRdWQybGtkR2dzSUZRdWFHVnBaMmgwS1NBNklITXVjbVZ1WkdWeVluVm1abVZ5VTNSdmNtRm5aVTExYkhScGMyRnRjR3hsS0RNMk1UWXhMQ0JhTENBa0xDQlVMbmRwWkhSb0xDQlVMbWhsYVdkb2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J6TG5KbGJtUmxjbUoxWm1abGNsTjBiM0poWjJVb016WXhOakVzSUNRc0lGUXVkMmxrZEdnc0lGUXVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1bWNtRnRaV0oxWm1abGNsSmxibVJsY21KMVptWmxjaWd6TmpFMk1Dd2dNell3T1RZc0lETTJNVFl4TENCREtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRlF1WkdWd2RHaENkV1ptWlhJZ0ppWWdWQzV6ZEdWdVkybHNRblZtWm1WeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQWtJRDBnZFdVb1ZDazdDaUFnSUNBZ0lDQWdJQ0FnSUVvZ0ppWWdWQzUxYzJWU1pXNWtaWEppZFdabVpYSWdQeUJ6TG5KbGJtUmxjbUoxWm1abGNsTjBiM0poWjJWTmRXeDBhWE5oYlhCc1pTZ3pOakUyTVN3Z0pDd2dNelV3TlRZc0lGUXVkMmxrZEdnc0lGUXVhR1ZwWjJoMEtTQTZJRlF1ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUQ4Z1ppNXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxUWFZzZEdsellXMXdiR1ZGV0ZRb016WXhOakVzSUNRc0lETTFNRFUyTENCVUxuZHBaSFJvTENCVUxtaGxhV2RvZENrZ09pQnpMbkpsYm1SbGNtSjFabVpsY2xOMGIzSmhaMlVvTXpZeE5qRXNJRE0wTURReExDQlVMbmRwWkhSb0xDQlVMbWhsYVdkb2RDa3NJSE11Wm5KaGJXVmlkV1ptWlhKU1pXNWtaWEppZFdabVpYSW9Nell4TmpBc0lETXpNekEyTENBek5qRTJNU3dnUXlrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUNRZ1BTQlVMbWx6VjJWaVIweE5kV3gwYVhCc1pWSmxibVJsY2xSaGNtZGxkSE1nUFQwOUlDRXdJRDhnVkM1MFpYaDBkWEpsV3pCZElEb2dWQzUwWlhoMGRYSmxMQ0J5WlNBOUlISXVZMjl1ZG1WeWRDZ2tMbVp2Y20xaGRDa3NJRm9nUFNCeUxtTnZiblpsY25Rb0pDNTBlWEJsS1N3Z1RXVWdQU0JNS0NRdWFXNTBaWEp1WVd4R2IzSnRZWFFzSUhKbExDQmFMQ0FrTG1WdVkyOWthVzVuS1N3Z2RtVWdQU0IxWlNoVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnU2lBbUppQlVMblZ6WlZKbGJtUmxjbUoxWm1abGNpQS9JSE11Y21WdVpHVnlZblZtWm1WeVUzUnZjbUZuWlUxMWJIUnBjMkZ0Y0d4bEtETTJNVFl4TENCMlpTd2dUV1VzSUZRdWQybGtkR2dzSUZRdWFHVnBaMmgwS1NBNklGUXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJRDhnWmk1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbFRYVnNkR2x6WVcxd2JHVkZXRlFvTXpZeE5qRXNJSFpsTENCTlpTd2dWQzUzYVdSMGFDd2dWQzVvWldsbmFIUXBJRG9nY3k1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbEtETTJNVFl4TENCTlpTd2dWQzUzYVdSMGFDd2dWQzVvWldsbmFIUXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J6TG1KcGJtUlNaVzVrWlhKaWRXWm1aWElvTXpZeE5qRXNJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdaMlVvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJR2xtSUNoVUlDWW1JRlF1YVhOWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUXBJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lSR1Z3ZEdnZ1ZHVjRkSFZ5WlNCM2FYUm9JR04xWW1VZ2NtVnVaR1Z5SUhSaGNtZGxkSE1nYVhNZ2JtOTBJSE4xY0hCdmNuUmxaQ0lwT3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z1F5a3NJQ0VvVkM1a1pYQjBhRlJsZUhSMWNtVWdKaVlnVkM1a1pYQjBhRlJsZUhSMWNtVXVhWE5FWlhCMGFGUmxlSFIxY21VcEtTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0luSmxibVJsY2xSaGNtZGxkQzVrWlhCMGFGUmxlSFIxY21VZ2JYVnpkQ0JpWlNCaGJpQnBibk4wWVc1alpTQnZaaUJVU0ZKRlJTNUVaWEIwYUZSbGVIUjFjbVVpS1RzS0lDQWdJQ0FnSUNBb0lXNHVaMlYwS0ZRdVpHVndkR2hVWlhoMGRYSmxLUzVmWDNkbFltZHNWR1Y0ZEhWeVpTQjhmQ0JVTG1SbGNIUm9WR1Y0ZEhWeVpTNXBiV0ZuWlM1M2FXUjBhQ0FoUFQwZ1ZDNTNhV1IwYUNCOGZDQlVMbVJsY0hSb1ZHVjRkSFZ5WlM1cGJXRm5aUzVvWldsbmFIUWdJVDA5SUZRdWFHVnBaMmgwS1NBbUppQW9WQzVrWlhCMGFGUmxlSFIxY21VdWFXMWhaMlV1ZDJsa2RHZ2dQU0JVTG5kcFpIUm9MQ0JVTG1SbGNIUm9WR1Y0ZEhWeVpTNXBiV0ZuWlM1b1pXbG5hSFFnUFNCVUxtaGxhV2RvZEN3Z1ZDNWtaWEIwYUZSbGVIUjFjbVV1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2tzSUU4b1ZDNWtaWEIwYUZSbGVIUjFjbVVzSURBcE93b2dJQ0FnSUNBZ0lHeGxkQ0FrSUQwZ2JpNW5aWFFvVkM1a1pYQjBhRlJsZUhSMWNtVXBMbDlmZDJWaVoyeFVaWGgwZFhKbExDQnlaU0E5SUhWbEtGUXBPd29nSUNBZ0lDQWdJR2xtSUNoVUxtUmxjSFJvVkdWNGRIVnlaUzVtYjNKdFlYUWdQVDA5SUZadUtTQlVMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0EvSUdZdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUk5kV3gwYVhOaGJYQnNaVVZZVkNnek5qRTJNQ3dnTXpZd09UWXNJRE0xTlRNc0lDUXNJREFzSUhKbEtTQTZJSE11Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtRb016WXhOakFzSURNMk1EazJMQ0F6TlRVekxDQWtMQ0F3S1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoVUxtUmxjSFJvVkdWNGRIVnlaUzVtYjNKdFlYUWdQVDA5SUV4cEtTQlVMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0EvSUdZdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUk5kV3gwYVhOaGJYQnNaVVZZVkNnek5qRTJNQ3dnTXpNek1EWXNJRE0xTlRNc0lDUXNJREFzSUhKbEtTQTZJSE11Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtRb016WXhOakFzSURNek16QTJMQ0F6TlRVekxDQWtMQ0F3S1RzS0lDQWdJQ0FnSUNCbGJITmxJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lWVzVyYm05M2JpQmtaWEIwYUZSbGVIUjFjbVVnWm05eWJXRjBJaWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCNFpTaERLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGUWdQU0J1TG1kbGRDaERLU3dnU2lBOUlFTXVhWE5YWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRZ1BUMDlJQ0V3T3dvZ0lDQWdJQ0FnSUdsbUlDaERMbVJsY0hSb1ZHVjRkSFZ5WlNBbUppQWhWQzVmWDJGMWRHOUJiR3h2WTJGMFpVUmxjSFJvUW5WbVptVnlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hLS1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW5SaGNtZGxkQzVrWlhCMGFGUmxlSFIxY21VZ2JtOTBJSE4xY0hCdmNuUmxaQ0JwYmlCRGRXSmxJSEpsYm1SbGNpQjBZWEpuWlhSeklpazdDaUFnSUNBZ0lDQWdJQ0FnSUdkbEtGUXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlMQ0JES1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tFb3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZDNWZYM2RsWW1kc1JHVndkR2hpZFdabVpYSWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQWtJRDBnTURzZ0pDQThJRFk3SUNRckt5bDBMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z1ZDNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSmJKRjBwTENCVUxsOWZkMlZpWjJ4RVpYQjBhR0oxWm1abGNsc2tYU0E5SUhNdVkzSmxZWFJsVW1WdVpHVnlZblZtWm1WeUtDa3NJSGxsS0ZRdVgxOTNaV0puYkVSbGNIUm9ZblZtWm1WeVd5UmRMQ0JETENBaE1TazdDaUFnSUNBZ0lDQWdmU0JsYkhObElIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNVFl3TENCVUxsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNpa3NJRlF1WDE5M1pXSm5iRVJsY0hSb1luVm1abVZ5SUQwZ2N5NWpjbVZoZEdWU1pXNWtaWEppZFdabVpYSW9LU3dnZVdVb1ZDNWZYM2RsWW1kc1JHVndkR2hpZFdabVpYSXNJRU1zSUNFeEtUc0tJQ0FnSUNBZ0lDQjBMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z2JuVnNiQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCUFpTaERMQ0JVTENCS0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUNRZ1BTQnVMbWRsZENoREtUc0tJQ0FnSUNBZ0lDQlVJQ0U5UFNCMmIybGtJREFnSmlZZ1EyVW9KQzVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElzSUVNc0lFTXVkR1Y0ZEhWeVpTd2dNell3TmpRc0lETTFOVE1wTENCS0lDRTlQU0IyYjJsa0lEQWdKaVlnZUdVb1F5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJIS0VNcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlFTXVkR1Y0ZEhWeVpTd2dTaUE5SUc0dVoyVjBLRU1wTENBa0lEMGdiaTVuWlhRb1ZDazdDaUFnSUNBZ0lDQWdReTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnVUNrc0lFTXVhWE5YWldKSFRFMTFiSFJwY0d4bFVtVnVaR1Z5VkdGeVoyVjBjeUFoUFQwZ0lUQWdKaVlnS0NRdVgxOTNaV0puYkZSbGVIUjFjbVVnUFQwOUlIWnZhV1FnTUNBbUppQW9KQzVmWDNkbFltZHNWR1Y0ZEhWeVpTQTlJSE11WTNKbFlYUmxWR1Y0ZEhWeVpTZ3BLU3dnSkM1ZlgzWmxjbk5wYjI0Z1BTQlVMblpsY25OcGIyNHNJRzh1YldWdGIzSjVMblJsZUhSMWNtVnpLeXNwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlaU0E5SUVNdWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFnUFQwOUlDRXdMQ0JhSUQwZ1F5NXBjMWRsWWtkTVRYVnNkR2x3YkdWU1pXNWtaWEpVWVhKblpYUnpJRDA5UFNBaE1Dd2dUV1VnUFNCVUxtbHpSR0YwWVZSbGVIUjFjbVV6UkNCOGZDQlVMbWx6UkdGMFlWUmxlSFIxY21VeVJFRnljbUY1TENCMlpTQTlJRjhvUXlrZ2ZId2dZVHNLSUNBZ0lDQWdJQ0JwWmlBb1lTQW1KaUJVTG1admNtMWhkQ0E5UFQwZ1IyNGdKaVlnS0ZRdWRIbHdaU0E5UFQwZ2JtNGdmSHdnVkM1MGVYQmxJRDA5UFNCcmJpa2dKaVlnS0ZRdVptOXliV0YwSUQwZ1kzUXNJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dVbVZ1WkdWeWFXNW5JSFJ2SUhSbGVIUjFjbVZ6SUhkcGRHZ2dVa2RDSUdadmNtMWhkQ0JwY3lCdWIzUWdjM1Z3Y0c5eWRHVmtMaUJWYzJsdVp5QlNSMEpCSUdadmNtMWhkQ0JwYm5OMFpXRmtMaUlwS1N3Z2NtVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1NpNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjBaU0E5SURBN0lIUmxJRHdnTmpzZ2RHVXJLeWxLTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2x0MFpWMGdQU0J6TG1OeVpXRjBaVVp5WVcxbFluVm1abVZ5S0NrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaEtMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjaUE5SUhNdVkzSmxZWFJsUm5KaGJXVmlkV1ptWlhJb0tTd2dXaWtnYVdZZ0tHa3VaSEpoZDBKMVptWmxjbk1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhSbElEMGdReTUwWlhoMGRYSmxPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZJZ1BTQXdMQ0JsWlNBOUlIUmxMbXhsYm1kMGFEc2dVaUE4SUdWbE95QlNLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGRWdQU0J1TG1kbGRDaDBaVnRTWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCUkxsOWZkMlZpWjJ4VVpYaDBkWEpsSUQwOVBTQjJiMmxrSURBZ0ppWWdLRkV1WDE5M1pXSm5iRlJsZUhSMWNtVWdQU0J6TG1OeVpXRjBaVlJsZUhSMWNtVW9LU3dnYnk1dFpXMXZjbmt1ZEdWNGRIVnlaWE1yS3lrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlhaV0pIVEUxMWJIUnBjR3hsVW1WdVpHVnlWR0Z5WjJWMGN5QmpZVzRnYjI1c2VTQmlaU0IxYzJWa0lIZHBkR2dnVjJWaVIwd3lJRzl5SUZkRlFrZE1YMlJ5WVhkZlluVm1abVZ5Y3lCbGVIUmxibk5wYjI0dUlpazdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9ReTUxYzJWU1pXNWtaWEppZFdabVpYSXBJR2xtSUNoaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUVvdVgxOTNaV0puYkUxMWJIUnBjMkZ0Y0d4bFpFWnlZVzFsWW5WbVptVnlJRDBnY3k1amNtVmhkR1ZHY21GdFpXSjFabVpsY2lncExDQktMbDlmZDJWaVoyeERiMnh2Y2xKbGJtUmxjbUoxWm1abGNpQTlJSE11WTNKbFlYUmxVbVZ1WkdWeVluVm1abVZ5S0Nrc0lITXVZbWx1WkZKbGJtUmxjbUoxWm1abGNpZ3pOakUyTVN3Z1NpNWZYM2RsWW1kc1EyOXNiM0pTWlc1a1pYSmlkV1ptWlhJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RHVWdQU0J5TG1OdmJuWmxjblFvVkM1bWIzSnRZWFFwTENCU0lEMGdjaTVqYjI1MlpYSjBLRlF1ZEhsd1pTa3NJR1ZsSUQwZ1RDaFVMbWx1ZEdWeWJtRnNSbTl5YldGMExDQjBaU3dnVWl3Z1ZDNWxibU52WkdsdVp5a3NJRkVnUFNCMVpTaERLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxUWFZzZEdsellXMXdiR1VvTXpZeE5qRXNJRkVzSUdWbExDQkRMbmRwWkhSb0xDQkRMbWhsYVdkb2RDa3NJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTVRZd0xDQktMbDlmZDJWaVoyeE5kV3gwYVhOaGJYQnNaV1JHY21GdFpXSjFabVpsY2lrc0lITXVabkpoYldWaWRXWm1aWEpTWlc1a1pYSmlkV1ptWlhJb016WXhOakFzSURNMk1EWTBMQ0F6TmpFMk1Td2dTaTVmWDNkbFltZHNRMjlzYjNKU1pXNWtaWEppZFdabVpYSXBMQ0J6TG1KcGJtUlNaVzVrWlhKaWRXWm1aWElvTXpZeE5qRXNJRzUxYkd3cExDQkRMbVJsY0hSb1FuVm1abVZ5SUNZbUlDaEtMbDlmZDJWaVoyeEVaWEIwYUZKbGJtUmxjbUoxWm1abGNpQTlJSE11WTNKbFlYUmxVbVZ1WkdWeVluVm1abVZ5S0Nrc0lIbGxLRW91WDE5M1pXSm5iRVJsY0hSb1VtVnVaR1Z5WW5WbVptVnlMQ0JETENBaE1Da3BMQ0IwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2diblZzYkNrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVjJWaVIweE5kV3gwYVhOaGJYQnNaVkpsYm1SbGNsUmhjbWRsZENCallXNGdiMjVzZVNCaVpTQjFjMlZrSUhkcGRHZ2dWMlZpUjB3eUxpSXBPd29nSUNBZ0lDQWdJR2xtSUNoeVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNCMExtSnBibVJVWlhoMGRYSmxLRE0wTURZM0xDQWtMbDlmZDJWaVoyeFVaWGgwZFhKbEtTd2diR1VvTXpRd05qY3NJRlFzSUhabEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwWlNBOUlEQTdJSFJsSUR3Z05qc2dkR1VyS3lsRFpTaEtMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjbHQwWlYwc0lFTXNJRlFzSURNMk1EWTBMQ0F6TkRBMk9TQXJJSFJsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZaWhVTENCMlpTa2dKaVlnUVNnek5EQTJOeWtzSUhRdWRXNWlhVzVrVkdWNGRIVnlaU2dwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1dpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkR1VnUFNCRExuUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdVaUE5SURBc0lHVmxJRDBnZEdVdWJHVnVaM1JvT3lCU0lEd2daV1U3SUZJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVVNBOUlIUmxXMUpkTENCRlpTQTlJRzR1WjJWMEtGRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQzVpYVc1a1ZHVjRkSFZ5WlNnek5UVXpMQ0JGWlM1ZlgzZGxZbWRzVkdWNGRIVnlaU2tzSUd4bEtETTFOVE1zSUZFc0lIWmxLU3dnUTJVb1NpNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSXNJRU1zSUZFc0lETTJNRFkwSUNzZ1Vpd2dNelUxTXlrc0lHSW9VU3dnZG1VcElDWW1JRUVvTXpVMU15azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdkQzUxYm1KcGJtUlVaWGgwZFhKbEtDazdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUmxJRDBnTXpVMU16c0tJQ0FnSUNBZ0lDQWdJQ0FnVFdVZ0ppWWdLR0VnUHlCMFpTQTlJRlF1YVhORVlYUmhWR1Y0ZEhWeVpUTkVJRDhnTXpJNE56a2dPaUF6TlRnMk5pQTZJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UkdGMFlWUmxlSFIxY21VelJDQmhibVFnVkVoU1JVVXVSR0YwWVZSbGVIUjFjbVV5UkVGeWNtRjVJRzl1YkhrZ2MzVndjRzl5ZEdWa0lIZHBkR2dnVjJWaVIwd3lMaUlwS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2gwWlN3Z0pDNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrc0lHeGxLSFJsTENCVUxDQjJaU2tzSUVObEtFb3VYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlMQ0JETENCVUxDQXpOakEyTkN3Z2RHVXBMQ0JpS0ZRc0lIWmxLU0FtSmlCQktIUmxLU3dnZEM1MWJtSnBibVJVWlhoMGRYSmxLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUVNdVpHVndkR2hDZFdabVpYSWdKaVlnZUdVb1F5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJxS0VNcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlGOG9ReWtnZkh3Z1lTd2dTaUE5SUVNdWFYTlhaV0pIVEUxMWJIUnBjR3hsVW1WdVpHVnlWR0Z5WjJWMGN5QTlQVDBnSVRBZ1B5QkRMblJsZUhSMWNtVWdPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lFTXVkR1Y0ZEhWeVpRb2dJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQWtJRDBnTUN3Z2NtVWdQU0JLTG14bGJtZDBhRHNnSkNBOElISmxPeUFrS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1dpQTlJRXBiSkYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaUtGb3NJRlFwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUV1VnUFNCRExtbHpWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwSUQ4Z016UXdOamNnT2lBek5UVXpMQ0IyWlNBOUlHNHVaMlYwS0ZvcExsOWZkMlZpWjJ4VVpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEM1aWFXNWtWR1Y0ZEhWeVpTaE5aU3dnZG1VcExDQkJLRTFsS1N3Z2RDNTFibUpwYm1SVVpYaDBkWEpsS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTEtFTXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1F5NTFjMlZTWlc1a1pYSmlkV1ptWlhJcElHbG1JQ2hoS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVUlEMGdReTUzYVdSMGFDd2dTaUE5SUVNdWFHVnBaMmgwTENBa0lEMGdNVFl6T0RRc0lISmxJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTXpZd05qUUtJQ0FnSUNBZ0lDQWdJQ0FnWFN3Z1dpQTlJRU11YzNSbGJtTnBiRUoxWm1abGNpQS9JRE16TXpBMklEb2dNell3T1RZN0NpQWdJQ0FnSUNBZ0lDQWdJRU11WkdWd2RHaENkV1ptWlhJZ0ppWWdjbVV1Y0hWemFDaGFLU3dnUXk1cFoyNXZjbVZFWlhCMGFFWnZjazExYkhScGMyRnRjR3hsUTI5d2VTQjhmQ0FvUXk1a1pYQjBhRUoxWm1abGNpQW1KaUFvSkNCOFBTQXlOVFlwTENCRExuTjBaVzVqYVd4Q2RXWm1aWElnSmlZZ0tDUWdmRDBnTVRBeU5Da3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUV1VnUFNCdUxtZGxkQ2hES1RzS0lDQWdJQ0FnSUNBZ0lDQWdkQzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell3TURnc0lFMWxMbDlmZDJWaVoyeE5kV3gwYVhOaGJYQnNaV1JHY21GdFpXSjFabVpsY2lrc0lIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNREE1TENCTlpTNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSXBMQ0JETG1sbmJtOXlaVVJsY0hSb1JtOXlUWFZzZEdsellXMXdiR1ZEYjNCNUlDWW1JQ2h6TG1sdWRtRnNhV1JoZEdWR2NtRnRaV0oxWm1abGNpZ3pOakF3T0N3Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1dnb2dJQ0FnSUNBZ0lDQWdJQ0JkS1N3Z2N5NXBiblpoYkdsa1lYUmxSbkpoYldWaWRXWm1aWElvTXpZd01Ea3NJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRm9LSUNBZ0lDQWdJQ0FnSUNBZ1hTa3BMQ0J6TG1Kc2FYUkdjbUZ0WldKMVptWmxjaWd3TENBd0xDQlVMQ0JLTENBd0xDQXdMQ0JVTENCS0xDQWtMQ0E1TnpJNEtTd2djeTVwYm5aaGJHbGtZWFJsUm5KaGJXVmlkV1ptWlhJb016WXdNRGdzSUhKbEtTd2dkQzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell3TURnc0lHNTFiR3dwTENCMExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qQXdPU3dnVFdVdVgxOTNaV0puYkUxMWJIUnBjMkZ0Y0d4bFpFWnlZVzFsWW5WbVptVnlLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlhaV0pIVEUxMWJIUnBjMkZ0Y0d4bFVtVnVaR1Z5VkdGeVoyVjBJR05oYmlCdmJteDVJR0psSUhWelpXUWdkMmwwYUNCWFpXSkhUREl1SWlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjFaU2hES1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ0ppWWdLRU11ZFhObFVtVnVaR1Z5WW5WbVptVnlJSHg4SUVNdWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbEtTQS9JRTFoZEdndWJXbHVLSFVzSUVNdWMyRnRjR3hsY3lrZ09pQXdPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYzJVb1F5a2dld29nSUNBZ0lDQWdJR3hsZENCVUlEMGdieTV5Wlc1a1pYSXVabkpoYldVN0NpQWdJQ0FnSUNBZ2JTNW5aWFFvUXlrZ0lUMDlJRlFnSmlZZ0tHMHVjMlYwS0VNc0lGUXBMQ0JETG5Wd1pHRjBaU2dwS1RzS0lDQWdJSDBLSUNBZ0lHeGxkQ0JUWlNBOUlDRXhMQ0JVWlNBOUlDRXhPd29nSUNBZ1puVnVZM1JwYjI0Z1VHVW9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lFTWdKaVlnUXk1cGMxZGxZa2RNVW1WdVpHVnlWR0Z5WjJWMElDWW1JQ2hUWlNBOVBUMGdJVEVnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4VVpYaDBkWEpsY3k1ellXWmxVMlYwVkdWNGRIVnlaVEpFT2lCa2IyNG5kQ0IxYzJVZ2NtVnVaR1Z5SUhSaGNtZGxkSE1nWVhNZ2RHVjRkSFZ5WlhNdUlGVnpaU0IwYUdWcGNpQXVkR1Y0ZEhWeVpTQndjbTl3WlhKMGVTQnBibk4wWldGa0xpSXBMQ0JUWlNBOUlDRXdLU3dnUXlBOUlFTXVkR1Y0ZEhWeVpTa3NJRThvUXl3Z1ZDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJaWlNoRExDQlVLU0I3Q2lBZ0lDQWdJQ0FnUXlBbUppQkRMbWx6VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMElDWW1JQ2hVWlNBOVBUMGdJVEVnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4VVpYaDBkWEpsY3k1ellXWmxVMlYwVkdWNGRIVnlaVU4xWW1VNklHUnZiaWQwSUhWelpTQmpkV0psSUhKbGJtUmxjaUIwWVhKblpYUnpJR0Z6SUhSbGVIUjFjbVZ6TGlCVmMyVWdkR2hsYVhJZ0xuUmxlSFIxY21VZ2NISnZjR1Z5ZEhrZ2FXNXpkR1ZoWkM0aUtTd2dWR1VnUFNBaE1Da3NJRU1nUFNCRExuUmxlSFIxY21VcExDQldLRU1zSUZRcE93b2dJQ0FnZlFvZ0lDQWdkR2hwY3k1aGJHeHZZMkYwWlZSbGVIUjFjbVZWYm1sMElEMGdSaXdnZEdocGN5NXlaWE5sZEZSbGVIUjFjbVZWYm1sMGN5QTlJRlVzSUhSb2FYTXVjMlYwVkdWNGRIVnlaVEpFSUQwZ1R5d2dkR2hwY3k1elpYUlVaWGgwZFhKbE1rUkJjbkpoZVNBOUlHNWxMQ0IwYUdsekxuTmxkRlJsZUhSMWNtVXpSQ0E5SUdObExDQjBhR2x6TG5ObGRGUmxlSFIxY21WRGRXSmxJRDBnVml3Z2RHaHBjeTV5WldKcGJtUlVaWGgwZFhKbGN5QTlJRTlsTENCMGFHbHpMbk5sZEhWd1VtVnVaR1Z5VkdGeVoyVjBJRDBnUnl3Z2RHaHBjeTUxY0dSaGRHVlNaVzVrWlhKVVlYSm5aWFJOYVhCdFlYQWdQU0JxTENCMGFHbHpMblZ3WkdGMFpVMTFiSFJwYzJGdGNHeGxVbVZ1WkdWeVZHRnlaMlYwSUQwZ1N5d2dkR2hwY3k1elpYUjFjRVJsY0hSb1VtVnVaR1Z5WW5WbVptVnlJRDBnZUdVc0lIUm9hWE11YzJWMGRYQkdjbUZ0WlVKMVptWmxjbFJsZUhSMWNtVWdQU0JEWlN3Z2RHaHBjeTV6WVdabFUyVjBWR1Y0ZEhWeVpUSkVJRDBnVUdVc0lIUm9hWE11YzJGbVpWTmxkRlJsZUhSMWNtVkRkV0psSUQwZ1dXVTdDbjBLWm5WdVkzUnBiMjRnUlhnb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0IwTG1selYyVmlSMHd5T3dvZ0lDQWdablZ1WTNScGIyNGdhU2h5S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzg3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUhKdUtTQnlaWFIxY200Z05URXlNVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVm5VcElISmxkSFZ5YmlBek1qZ3hPVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVjNVcElISmxkSFZ5YmlBek1qZ3lNRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnY1hVcElISmxkSFZ5YmlBek16WXpOVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnU0hVcElISmxkSFZ5YmlBMU1USXdPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JyZFNrZ2NtVjBkWEp1SURVeE1qSTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJR055S1NCeVpYUjFjbTRnTlRFeU16c0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdSM1VwSUhKbGRIVnliaUExTVRJME93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQlFjeWtnY21WMGRYSnVJRFV4TWpVN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHNXVLU0J5WlhSMWNtNGdOVEV5TmpzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2EyNHBJSEpsZEhWeWJpQnVJRDhnTlRFek1TQTZJQ2h2SUQwZ1pTNW5aWFFvSWs5RlUxOTBaWGgwZFhKbFgyaGhiR1pmWm14dllYUWlLU3dnYnlBaFBUMGdiblZzYkNBL0lHOHVTRUZNUmw5R1RFOUJWRjlQUlZNZ09pQnVkV3hzS1RzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1dIVXBJSEpsZEhWeWJpQTJOREEyT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCSGJpa2djbVYwZFhKdUlEWTBNRGM3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUdOMEtTQnlaWFIxY200Z05qUXdPRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnU25VcElISmxkSFZ5YmlBMk5EQTVPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JaZFNrZ2NtVjBkWEp1SURZME1UQTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRlp1S1NCeVpYUjFjbTRnTmpRd01qc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdUR2twSUhKbGRIVnliaUF6TkRBME1Uc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdXblVwSUhKbGRIVnliaUEyTkRBek93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQWtkU2tnY21WMGRYSnVJRE0yTWpRME93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQnFkU2tnY21WMGRYSnVJRE16TXpFNU93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQlJkU2tnY21WMGRYSnVJRE16TXpJd093b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQkxkU2tnY21WMGRYSnVJRE0yTWpRNE93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQmxaQ2tnY21WMGRYSnVJRE0yTWpRNU93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQmhiQ0I4ZkNCeUlEMDlQU0JzYkNCOGZDQnlJRDA5UFNCamJDQjhmQ0J5SUQwOVBTQm9iQ2tnYVdZZ0tHOGdQU0JsTG1kbGRDZ2lWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzTXpkR01pS1N3Z2J5QWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1lXd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1gxTXpWRU5mUkZoVU1WOUZXRlE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQnNiQ2tnY21WMGRYSnVJRzh1UTA5TlVGSkZVMU5GUkY5U1IwSkJYMU16VkVOZlJGaFVNVjlGV0ZRN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JqYkNrZ2NtVjBkWEp1SUc4dVEwOU5VRkpGVTFORlJGOVNSMEpCWDFNelZFTmZSRmhVTTE5RldGUTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCb2JDa2djbVYwZFhKdUlHOHVRMDlOVUZKRlUxTkZSRjlTUjBKQlgxTXpWRU5mUkZoVU5WOUZXRlE3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCMWJDQjhmQ0J5SUQwOVBTQmtiQ0I4ZkNCeUlEMDlQU0JtYkNCOGZDQnlJRDA5UFNCd2JDa2dhV1lnS0c4Z1BTQmxMbWRsZENnaVYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNCMmNuUmpJaWtzSUc4Z0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUhWc0tTQnlaWFIxY200Z2J5NURUMDFRVWtWVFUwVkVYMUpIUWw5UVZsSlVRMTgwUWxCUVZqRmZTVTFIT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdaR3dwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENYMUJXVWxSRFh6SkNVRkJXTVY5SlRVYzdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCbWJDa2djbVYwZFhKdUlHOHVRMDlOVUZKRlUxTkZSRjlTUjBKQlgxQldVbFJEWHpSQ1VGQldNVjlKVFVjN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0J3YkNrZ2NtVjBkWEp1SUc4dVEwOU5VRkpGVTFORlJGOVNSMEpCWDFCV1VsUkRYekpDVUZCV01WOUpUVWM3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCMFpDa2djbVYwZFhKdUlHOGdQU0JsTG1kbGRDZ2lWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgyVjBZekVpS1N3Z2J5QWhQVDBnYm5Wc2JDQS9JRzh1UTA5TlVGSkZVMU5GUkY5U1IwSmZSVlJETVY5WFJVSkhUQ0E2SUc1MWJHdzdDaUFnSUNBZ0lDQWdhV1lnS0NoeUlEMDlQU0J0YkNCOGZDQnlJRDA5UFNCbmJDa2dKaVlnS0c4Z1BTQmxMbWRsZENnaVYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDJWMFl5SXBMQ0J2SUNFOVBTQnVkV3hzS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnYld3cElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDT0Y5RlZFTXlPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1oyd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FUaGZSVlJETWw5RlFVTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0J1WkNCOGZDQnlJRDA5UFNCcFpDQjhmQ0J5SUQwOVBTQnlaQ0I4ZkNCeUlEMDlQU0J6WkNCOGZDQnlJRDA5UFNCdlpDQjhmQ0J5SUQwOVBTQmhaQ0I4ZkNCeUlEMDlQU0JzWkNCOGZDQnlJRDA5UFNCalpDQjhmQ0J5SUQwOVBTQm9aQ0I4ZkNCeUlEMDlQU0IxWkNCOGZDQnlJRDA5UFNCa1pDQjhmQ0J5SUQwOVBTQm1aQ0I4ZkNCeUlEMDlQU0J3WkNCOGZDQnlJRDA5UFNCdFpDQjhmQ0J5SUQwOVBTQjRaQ0I4ZkNCeUlEMDlQU0I1WkNCOGZDQnlJRDA5UFNCMlpDQjhmQ0J5SUQwOVBTQmZaQ0I4ZkNCeUlEMDlQU0JOWkNCOGZDQnlJRDA5UFNCaVpDQjhmQ0J5SUQwOVBTQjNaQ0I4ZkNCeUlEMDlQU0JUWkNCOGZDQnlJRDA5UFNCVVpDQjhmQ0J5SUQwOVBTQkZaQ0I4ZkNCeUlEMDlQU0JCWkNCOGZDQnlJRDA5UFNCRFpDQjhmQ0J5SUQwOVBTQk1aQ0I4ZkNCeUlEMDlQU0JTWkNrZ2NtVjBkWEp1SUc4Z1BTQmxMbWRsZENnaVYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDJGemRHTWlLU3dnYnlBaFBUMGdiblZzYkNBL0lISWdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQm5aQ2tnY21WMGRYSnVJRzhnUFNCbExtZGxkQ2dpUlZoVVgzUmxlSFIxY21WZlkyOXRjSEpsYzNOcGIyNWZZbkIwWXlJcExDQnZJQ0U5UFNCdWRXeHNJRDhnY2lBNklHNTFiR3c3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUZScEtTQnlaWFIxY200Z2JpQS9JRE0wTURReUlEb2dLRzhnUFNCbExtZGxkQ2dpVjBWQ1IweGZaR1Z3ZEdoZmRHVjRkSFZ5WlNJcExDQnZJQ0U5UFNCdWRXeHNJRDhnYnk1VlRsTkpSMDVGUkY5SlRsUmZNalJmT0Y5WFJVSkhUQ0E2SUc1MWJHd3BPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JqYjI1MlpYSjBPaUJwQ2lBZ0lDQjlPd3A5Q25aaGNpQm5ZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdkWFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlGdGRLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdVkyRnRaWEpoY3lBOUlHVTdDaUFnSUNCOUNuMDdDbWRoTG5CeWIzUnZkSGx3WlM1cGMwRnljbUY1UTJGdFpYSmhJRDBnSVRBN0NuWmhjaUJJYmlBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pIY205MWNDSTdDaUFnSUNCOUNuMDdDa2h1TG5CeWIzUnZkSGx3WlM1cGMwZHliM1Z3SUQwZ0lUQTdDblpoY2lCQmVDQTlJSHNLSUNBZ0lIUjVjR1U2SUNKdGIzWmxJZ3A5TENCSmN5QTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmRHRnlaMlYwVW1GNUlEMGdiblZzYkN3Z2RHaHBjeTVmWjNKcGNDQTlJRzUxYkd3c0lIUm9hWE11WDJoaGJtUWdQU0J1ZFd4c093b2dJQ0FnZlFvZ0lDQWdaMlYwU0dGdVpGTndZV05sS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlvWVc1a0lEMDlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxsOW9ZVzVrSUQwZ2JtVjNJRWh1TENCMGFHbHpMbDlvWVc1a0xtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NWZhR0Z1WkM1MmFYTnBZbXhsSUQwZ0lURXNJSFJvYVhNdVgyaGhibVF1YW05cGJuUnpJRDBnZTMwc0lIUm9hWE11WDJoaGJtUXVhVzV3ZFhSVGRHRjBaU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjR2x1WTJocGJtYzZJQ0V4Q2lBZ0lDQWdJQ0FnZlNrc0lIUm9hWE11WDJoaGJtUTdDaUFnSUNCOUNpQWdJQ0JuWlhSVVlYSm5aWFJTWVhsVGNHRmpaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZkR0Z5WjJWMFVtRjVJRDA5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDkwWVhKblpYUlNZWGtnUFNCdVpYY2dTRzRzSUhSb2FYTXVYM1JoY21kbGRGSmhlUzV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11WDNSaGNtZGxkRkpoZVM1MmFYTnBZbXhsSUQwZ0lURXNJSFJvYVhNdVgzUmhjbWRsZEZKaGVTNW9ZWE5NYVc1bFlYSldaV3h2WTJsMGVTQTlJQ0V4TENCMGFHbHpMbDkwWVhKblpYUlNZWGt1YkdsdVpXRnlWbVZzYjJOcGRIa2dQU0J1WlhjZ1RTd2dkR2hwY3k1ZmRHRnlaMlYwVW1GNUxtaGhjMEZ1WjNWc1lYSldaV3h2WTJsMGVTQTlJQ0V4TENCMGFHbHpMbDkwWVhKblpYUlNZWGt1WVc1bmRXeGhjbFpsYkc5amFYUjVJRDBnYm1WM0lFMHBMQ0IwYUdsekxsOTBZWEpuWlhSU1lYazdDaUFnSUNCOUNpQWdJQ0JuWlhSSGNtbHdVM0JoWTJVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJkeWFYQWdQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYMmR5YVhBZ1BTQnVaWGNnU0c0c0lIUm9hWE11WDJkeWFYQXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMbDluY21sd0xuWnBjMmxpYkdVZ1BTQWhNU3dnZEdocGN5NWZaM0pwY0M1b1lYTk1hVzVsWVhKV1pXeHZZMmwwZVNBOUlDRXhMQ0IwYUdsekxsOW5jbWx3TG14cGJtVmhjbFpsYkc5amFYUjVJRDBnYm1WM0lFMHNJSFJvYVhNdVgyZHlhWEF1YUdGelFXNW5kV3hoY2xabGJHOWphWFI1SUQwZ0lURXNJSFJvYVhNdVgyZHlhWEF1WVc1bmRXeGhjbFpsYkc5amFYUjVJRDBnYm1WM0lFMHBMQ0IwYUdsekxsOW5jbWx3T3dvZ0lDQWdmUW9nSUNBZ1pHbHpjR0YwWTJoRmRtVnVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM1JoY21kbGRGSmhlU0FoUFQwZ2JuVnNiQ0FtSmlCMGFHbHpMbDkwWVhKblpYUlNZWGt1WkdsemNHRjBZMmhGZG1WdWRDaGxLU3dnZEdocGN5NWZaM0pwY0NBaFBUMGdiblZzYkNBbUppQjBhR2x6TGw5bmNtbHdMbVJwYzNCaGRHTm9SWFpsYm5Rb1pTa3NJSFJvYVhNdVgyaGhibVFnSVQwOUlHNTFiR3dnSmlZZ2RHaHBjeTVmYUdGdVpDNWthWE53WVhSamFFVjJaVzUwS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHbHpZMjl1Ym1WamRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKa2FYTmpiMjV1WldOMFpXUWlMQW9nSUNBZ0lDQWdJQ0FnSUNCa1lYUmhPaUJsQ2lBZ0lDQWdJQ0FnZlNrc0lIUm9hWE11WDNSaGNtZGxkRkpoZVNBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1ZmRHRnlaMlYwVW1GNUxuWnBjMmxpYkdVZ1BTQWhNU2tzSUhSb2FYTXVYMmR5YVhBZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVgyZHlhWEF1ZG1semFXSnNaU0E5SUNFeEtTd2dkR2hwY3k1ZmFHRnVaQ0FoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmYUdGdVpDNTJhWE5wWW14bElEMGdJVEVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzUxYkd3c0lISWdQU0J1ZFd4c0xDQnZJRDBnYm5Wc2JDd2dZU0E5SUhSb2FYTXVYM1JoY21kbGRGSmhlU3dnYkNBOUlIUm9hWE11WDJkeWFYQXNJR01nUFNCMGFHbHpMbDlvWVc1a093b2dJQ0FnSUNBZ0lHbG1JQ2hsSUNZbUlIUXVjMlZ6YzJsdmJpNTJhWE5wWW1sc2FYUjVVM1JoZEdVZ0lUMDlJQ0oyYVhOcFlteGxMV0pzZFhKeVpXUWlLU0JwWmlBb1lTQWhQVDBnYm5Wc2JDQW1KaUFvYVNBOUlIUXVaMlYwVUc5elpTaGxMblJoY21kbGRGSmhlVk53WVdObExDQnVLU3dnYVNBaFBUMGdiblZzYkNBbUppQW9ZUzV0WVhSeWFYZ3Vabkp2YlVGeWNtRjVLR2t1ZEhKaGJuTm1iM0p0TG0xaGRISnBlQ2tzSUdFdWJXRjBjbWw0TG1SbFkyOXRjRzl6WlNoaExuQnZjMmwwYVc5dUxDQmhMbkp2ZEdGMGFXOXVMQ0JoTG5OallXeGxLU3dnYVM1c2FXNWxZWEpXWld4dlkybDBlU0EvSUNoaExtaGhjMHhwYm1WaGNsWmxiRzlqYVhSNUlEMGdJVEFzSUdFdWJHbHVaV0Z5Vm1Wc2IyTnBkSGt1WTI5d2VTaHBMbXhwYm1WaGNsWmxiRzlqYVhSNUtTa2dPaUJoTG1oaGMweHBibVZoY2xabGJHOWphWFI1SUQwZ0lURXNJR2t1WVc1bmRXeGhjbFpsYkc5amFYUjVJRDhnS0dFdWFHRnpRVzVuZFd4aGNsWmxiRzlqYVhSNUlEMGdJVEFzSUdFdVlXNW5kV3hoY2xabGJHOWphWFI1TG1OdmNIa29hUzVoYm1kMWJHRnlWbVZzYjJOcGRIa3BLU0E2SUdFdWFHRnpRVzVuZFd4aGNsWmxiRzlqYVhSNUlEMGdJVEVzSUhSb2FYTXVaR2x6Y0dGMFkyaEZkbVZ1ZENoQmVDa3BLU3dnWXlBbUppQmxMbWhoYm1RcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlDRXdPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLR3hsZENCNElHOW1JR1V1YUdGdVpDNTJZV3gxWlhNb0tTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlIUXVaMlYwU205cGJuUlFiM05sS0hnc0lHNHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dNdWFtOXBiblJ6VzNndWFtOXBiblJPWVcxbFhTQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCdVpYY2dTRzQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NDNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhBdWRtbHphV0pzWlNBOUlDRXhMQ0JqTG1wdmFXNTBjMXQ0TG1wdmFXNTBUbUZ0WlYwZ1BTQndMQ0JqTG1Ga1pDaHdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbklEMGdZeTVxYjJsdWRITmJlQzVxYjJsdWRFNWhiV1ZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGlBaFBUMGdiblZzYkNBbUppQW9aeTV0WVhSeWFYZ3Vabkp2YlVGeWNtRjVLSFl1ZEhKaGJuTm1iM0p0TG0xaGRISnBlQ2tzSUdjdWJXRjBjbWw0TG1SbFkyOXRjRzl6WlNobkxuQnZjMmwwYVc5dUxDQm5Mbkp2ZEdGMGFXOXVMQ0JuTG5OallXeGxLU3dnWnk1cWIybHVkRkpoWkdsMWN5QTlJSFl1Y21Ga2FYVnpLU3dnWnk1MmFYTnBZbXhsSUQwZ2RpQWhQVDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHTXVhbTlwYm5Seld5SnBibVJsZUMxbWFXNW5aWEl0ZEdsd0lsMHNJSFVnUFNCakxtcHZhVzUwYzFzaWRHaDFiV0l0ZEdsd0lsMHNJR1FnUFNCb0xuQnZjMmwwYVc5dUxtUnBjM1JoYm1ObFZHOG9kUzV3YjNOcGRHbHZiaWtzSUdZZ1BTQXVNRElzSUcwZ1BTQXVNREExT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpMbWx1Y0hWMFUzUmhkR1V1Y0dsdVkyaHBibWNnSmlZZ1pDQStJR1lnS3lCdElEOGdLR011YVc1d2RYUlRkR0YwWlM1d2FXNWphR2x1WnlBOUlDRXhMQ0IwYUdsekxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbkJwYm1Ob1pXNWtJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2hoYm1SbFpHNWxjM002SUdVdWFHRnVaR1ZrYm1WemN5d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmhjbWRsZERvZ2RHaHBjd29nSUNBZ0lDQWdJQ0FnSUNCOUtTa2dPaUFoWXk1cGJuQjFkRk4wWVhSbExuQnBibU5vYVc1bklDWW1JR1FnUEQwZ1ppQXRJRzBnSmlZZ0tHTXVhVzV3ZFhSVGRHRjBaUzV3YVc1amFHbHVaeUE5SUNFd0xDQjBhR2x6TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0luQnBibU5vYzNSaGNuUWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR0Z1WkdWa2JtVnpjem9nWlM1b1lXNWtaV1J1WlhOekxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHRnlaMlYwT2lCMGFHbHpDaUFnSUNBZ0lDQWdJQ0FnSUgwcEtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2JDQWhQVDBnYm5Wc2JDQW1KaUJsTG1keWFYQlRjR0ZqWlNBbUppQW9jaUE5SUhRdVoyVjBVRzl6WlNobExtZHlhWEJUY0dGalpTd2diaWtzSUhJZ0lUMDlJRzUxYkd3Z0ppWWdLR3d1YldGMGNtbDRMbVp5YjIxQmNuSmhlU2h5TG5SeVlXNXpabTl5YlM1dFlYUnlhWGdwTENCc0xtMWhkSEpwZUM1a1pXTnZiWEJ2YzJVb2JDNXdiM05wZEdsdmJpd2diQzV5YjNSaGRHbHZiaXdnYkM1elkyRnNaU2tzSUhJdWJHbHVaV0Z5Vm1Wc2IyTnBkSGtnUHlBb2JDNW9ZWE5NYVc1bFlYSldaV3h2WTJsMGVTQTlJQ0V3TENCc0xteHBibVZoY2xabGJHOWphWFI1TG1OdmNIa29jaTVzYVc1bFlYSldaV3h2WTJsMGVTa3BJRG9nYkM1b1lYTk1hVzVsWVhKV1pXeHZZMmwwZVNBOUlDRXhMQ0J5TG1GdVozVnNZWEpXWld4dlkybDBlU0EvSUNoc0xtaGhjMEZ1WjNWc1lYSldaV3h2WTJsMGVTQTlJQ0V3TENCc0xtRnVaM1ZzWVhKV1pXeHZZMmwwZVM1amIzQjVLSEl1WVc1bmRXeGhjbFpsYkc5amFYUjVLU2tnT2lCc0xtaGhjMEZ1WjNWc1lYSldaV3h2WTJsMGVTQTlJQ0V4S1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ0lUMDlJRzUxYkd3Z0ppWWdLR0V1ZG1semFXSnNaU0E5SUdrZ0lUMDlJRzUxYkd3cExDQnNJQ0U5UFNCdWRXeHNJQ1ltSUNoc0xuWnBjMmxpYkdVZ1BTQnlJQ0U5UFNCdWRXeHNLU3dnWXlBaFBUMGdiblZzYkNBbUppQW9ZeTUyYVhOcFlteGxJRDBnYnlBaFBUMGdiblZzYkNrc0lIUm9hWE03Q2lBZ0lDQjlDbjBzSUd0eklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCdmRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhMQ0JzTENCakxDQm9LWHNLSUNBZ0lDQWdJQ0JwWmlBb2FDQTlJR2dnSVQwOUlIWnZhV1FnTUNBL0lHZ2dPaUJXYml3Z2FDQWhQVDBnVm00Z0ppWWdhQ0FoUFQwZ1RHa3BJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lSR1Z3ZEdoVVpYaDBkWEpsSUdadmNtMWhkQ0J0ZFhOMElHSmxJR1ZwZEdobGNpQlVTRkpGUlM1RVpYQjBhRVp2Y20xaGRDQnZjaUJVU0ZKRlJTNUVaWEIwYUZOMFpXNWphV3hHYjNKdFlYUWlLVHNLSUNBZ0lDQWdJQ0J1SUQwOVBTQjJiMmxrSURBZ0ppWWdhQ0E5UFQwZ1ZtNGdKaVlnS0c0Z1BTQmpjaWtzSUc0Z1BUMDlJSFp2YVdRZ01DQW1KaUJvSUQwOVBTQk1hU0FtSmlBb2JpQTlJRlJwS1RzS0lDQWdJQ0FnSUNCemRYQmxjaWh1ZFd4c0xDQnBMQ0J5TENCdkxDQmhMQ0JzTENCb0xDQnVMQ0JqS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbWx0WVdkbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQjBDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXRZV2RHYVd4MFpYSWdQU0JoSUNFOVBTQjJiMmxrSURBZ1B5QmhJRG9nY25Rc0lIUm9hWE11YldsdVJtbHNkR1Z5SUQwZ2JDQWhQVDBnZG05cFpDQXdJRDhnYkNBNklISjBMQ0IwYUdsekxtWnNhWEJaSUQwZ0lURXNJSFJvYVhNdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ0lURTdDaUFnSUNCOUNuMDdDbXR6TG5CeWIzUnZkSGx3WlM1cGMwUmxjSFJvVkdWNGRIVnlaU0E5SUNFd093cDJZWElnZG1nZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVWdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxDQnBJRDBnYm5Wc2JDd2djaUE5SURFc0lHOGdQU0J1ZFd4c0xDQmhJRDBnSW14dlkyRnNMV1pzYjI5eUlpd2diQ0E5SUdVdVpYaDBaVzV6YVc5dWN5NW9ZWE1vSWxkRlFrZE1YMjExYkhScGMyRnRjR3hsWkY5eVpXNWtaWEpmZEc5ZmRHVjRkSFZ5WlNJcExDQmpJRDBnYm5Wc2JDd2dhQ0E5SUc1MWJHd3NJSFVnUFNCdWRXeHNMQ0JrSUQwZ2JuVnNiQ3dnWmlBOUlDRXhMQ0J0SUQwZ2JuVnNiQ3dnZUNBOUlIUXVaMlYwUTI5dWRHVjRkRUYwZEhKcFluVjBaWE1vS1N3Z2RpQTlJRzUxYkd3c0lHY2dQU0J1ZFd4c0xDQndJRDBnVzEwc0lGOGdQU0J1WlhjZ1RXRndMQ0I1SUQwZ2JtVjNJSFYwT3dvZ0lDQWdJQ0FnSUhrdWJHRjVaWEp6TG1WdVlXSnNaU2d4S1N3Z2VTNTJhV1YzY0c5eWRDQTlJRzVsZHlCV1pUc0tJQ0FnSUNBZ0lDQnNaWFFnWWlBOUlHNWxkeUIxZERzS0lDQWdJQ0FnSUNCaUxteGhlV1Z5Y3k1bGJtRmliR1VvTWlrc0lHSXVkbWxsZDNCdmNuUWdQU0J1WlhjZ1ZtVTdDaUFnSUNBZ0lDQWdiR1YwSUVFZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUhrc0NpQWdJQ0FnSUNBZ0lDQWdJR0lLSUNBZ0lDQWdJQ0JkTENCTUlEMGdibVYzSUdkaE93b2dJQ0FnSUNBZ0lFd3ViR0Y1WlhKekxtVnVZV0pzWlNneEtTd2dUQzVzWVhsbGNuTXVaVzVoWW14bEtESXBPd29nSUNBZ0lDQWdJR3hsZENCSklEMGdiblZzYkN3Z2F5QTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2RHaHBjeTVqWVcxbGNtRkJkWFJ2VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE11Wlc1aFlteGxaQ0E5SUNFeExDQjBhR2x6TG1selVISmxjMlZ1ZEdsdVp5QTlJQ0V4TENCMGFHbHpMbWRsZEVOdmJuUnliMnhzWlhJZ1BTQm1kVzVqZEdsdmJpaFdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYSUQwZ2NGdFdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZjZ1BUMDlJSFp2YVdRZ01DQW1KaUFvVnlBOUlHNWxkeUJKY3l3Z2NGdFdYU0E5SUZjcExDQlhMbWRsZEZSaGNtZGxkRkpoZVZOd1lXTmxLQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSRGIyNTBjbTlzYkdWeVIzSnBjQ0E5SUdaMWJtTjBhVzl1S0ZZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGY2dQU0J3VzFaZE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdWeUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaFhJRDBnYm1WM0lFbHpMQ0J3VzFaZElEMGdWeWtzSUZjdVoyVjBSM0pwY0ZOd1lXTmxLQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSSVlXNWtJRDBnWm5WdVkzUnBiMjRvVmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1Z5QTlJSEJiVmwwN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlhJRDA5UFNCMmIybGtJREFnSmlZZ0tGY2dQU0J1WlhjZ1NYTXNJSEJiVmwwZ1BTQlhLU3dnVnk1blpYUklZVzVrVTNCaFkyVW9LVHNLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUVJb1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWeUE5SUY4dVoyVjBLRll1YVc1d2RYUlRiM1Z5WTJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JYSUNZbUlGY3VaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUJXTG5SNWNHVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoT2lCV0xtbHVjSFYwVTI5MWNtTmxDaUFnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQlFLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmZMbVp2Y2tWaFkyZ29ablZ1WTNScGIyNG9WaXdnVnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ZpNWthWE5qYjI1dVpXTjBLRmNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlLU3dnWHk1amJHVmhjaWdwTENCSklEMGdiblZzYkN3Z2F5QTlJRzUxYkd3c0lHVXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIWXBMQ0JrSUQwZ2JuVnNiQ3dnZFNBOUlHNTFiR3dzSUdnZ1BTQnVkV3hzTENCcElEMGdiblZzYkN3Z1p5QTlJRzUxYkd3c0lHTmxMbk4wYjNBb0tTd2diaTVwYzFCeVpYTmxiblJwYm1jZ1BTQWhNU3dnYmk1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSnpaWE56YVc5dVpXNWtJZ29nSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1elpYUkdjbUZ0WldKMVptWmxjbE5qWVd4bFJtRmpkRzl5SUQwZ1puVnVZM1JwYjI0b1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeUlEMGdWaXdnYmk1cGMxQnlaWE5sYm5ScGJtY2dQVDA5SUNFd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVdGSk5ZVzVoWjJWeU9pQkRZVzV1YjNRZ1kyaGhibWRsSUdaeVlXMWxZblZtWm1WeUlITmpZV3hsSUhkb2FXeGxJSEJ5WlhObGJuUnBibWN1SWlrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1elpYUlNaV1psY21WdVkyVlRjR0ZqWlZSNWNHVWdQU0JtZFc1amRHbHZiaWhXS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR0VnUFNCV0xDQnVMbWx6VUhKbGMyVnVkR2x1WnlBOVBUMGdJVEFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pZVWsxaGJtRm5aWEk2SUVOaGJtNXZkQ0JqYUdGdVoyVWdjbVZtWlhKbGJtTmxJSE53WVdObElIUjVjR1VnZDJocGJHVWdjSEpsYzJWdWRHbHVaeTRpS1RzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1kbGRGSmxabVZ5Wlc1alpWTndZV05sSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2T3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFFtRnpaVXhoZVdWeUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMUlDRTlQU0J1ZFd4c0lEOGdkU0E2SUdRN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUkNhVzVrYVc1bklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCb093b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBSbkpoYldVZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUcwN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUlRaWE56YVc5dUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcE93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWMyVjBVMlZ6YzJsdmJpQTlJR0Z6ZVc1aklHWjFibU4wYVc5dUtGWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUFNCV0xDQnBJQ0U5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RpQTlJR1V1WjJWMFVtVnVaR1Z5VkdGeVoyVjBLQ2tzSUdrdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWMyVnNaV04wSWl3Z1Fpa3NJR2t1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYzJWc1pXTjBjM1JoY25RaUxDQkNLU3dnYVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKelpXeGxZM1JsYm1RaUxDQkNLU3dnYVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKemNYVmxaWHBsSWl3Z1Fpa3NJR2t1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYzNGMVpXVjZaWE4wWVhKMElpd2dRaWtzSUdrdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWMzRjFaV1Y2WldWdVpDSXNJRUlwTENCcExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltVnVaQ0lzSUZBcExDQnBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbWx1Y0hWMGMyOTFjbU5sYzJOb1lXNW5aU0lzSUhjcExDQjRMbmh5UTI5dGNHRjBhV0pzWlNBaFBUMGdJVEFnSmlZZ1lYZGhhWFFnZEM1dFlXdGxXRkpEYjIxd1lYUnBZbXhsS0Nrc0lHa3VjbVZ1WkdWeVUzUmhkR1V1YkdGNVpYSnpJRDA5UFNCMmIybGtJREFnZkh3Z1pTNWpZWEJoWW1sc2FYUnBaWE11YVhOWFpXSkhURElnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmNnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGdWRHbGhiR2xoY3pvZ2FTNXlaVzVrWlhKVGRHRjBaUzVzWVhsbGNuTWdQVDA5SUhadmFXUWdNQ0EvSUhndVlXNTBhV0ZzYVdGeklEb2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZzY0doaE9pQjRMbUZzY0doaExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRG9nZUM1a1pYQjBhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM1JsYm1OcGJEb2dlQzV6ZEdWdVkybHNMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1jbUZ0WldKMVptWmxjbE5qWVd4bFJtRmpkRzl5T2lCeUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa0lEMGdibVYzSUZoU1YyVmlSMHhNWVhsbGNpaHBMQ0IwTENCWEtTd2dhUzUxY0dSaGRHVlNaVzVrWlhKVGRHRjBaU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0poYzJWTVlYbGxjam9nWkFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBMQ0JuSUQwZ2JtVjNJRUYwS0dRdVpuSmhiV1ZpZFdabVpYSlhhV1IwYUN3Z1pDNW1jbUZ0WldKMVptWmxja2hsYVdkb2RDd2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0p0WVhRNklHTjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lCeWJpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNWpiMlJwYm1jNklHVXViM1YwY0hWMFJXNWpiMlJwYm1jS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWmlBOUlIZ3VZVzUwYVdGc2FXRnpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlhJRDBnYm5Wc2JDd2dhR1VnUFNCdWRXeHNMQ0JzWlNBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDNWtaWEIwYUNBbUppQW9iR1VnUFNCNExuTjBaVzVqYVd3Z1B5QXpOVEExTmlBNklETXpNVGt3TENCWElEMGdlQzV6ZEdWdVkybHNJRDhnVEdrZ09pQldiaXdnYUdVZ1BTQjRMbk4wWlc1amFXd2dQeUJVYVNBNklHTnlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdabVVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlSbTl5YldGME9pQjRMbUZzY0doaElIeDhJR1lnUHlBek1qZzFOaUE2SURNeU9EUTVMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUVadmNtMWhkRG9nYkdVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOallXeGxSbUZqZEc5eU9pQnlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9JRDBnYm1WM0lGaFNWMlZpUjB4Q2FXNWthVzVuS0drc0lIUXBMQ0IxSUQwZ2FDNWpjbVZoZEdWUWNtOXFaV04wYVc5dVRHRjVaWElvWm1VcExDQnBMblZ3WkdGMFpWSmxibVJsY2xOMFlYUmxLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR0Y1WlhKek9pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtTd2daaUEvSUdjZ1BTQnVaWGNnV0hNb2RTNTBaWGgwZFhKbFYybGtkR2dzSUhVdWRHVjRkSFZ5WlVobGFXZG9kQ3dnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNKdFlYUTZJR04wTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQnliaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVVpYaDBkWEpsT2lCdVpYY2dhM01vZFM1MFpYaDBkWEpsVjJsa2RHZ3NJSFV1ZEdWNGRIVnlaVWhsYVdkb2RDd2dhR1VzSUhadmFXUWdNQ3dnZG05cFpDQXdMQ0IyYjJsa0lEQXNJSFp2YVdRZ01Dd2dkbTlwWkNBd0xDQjJiMmxrSURBc0lGY3BMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR1Z1WTJsc1FuVm1abVZ5T2lCNExuTjBaVzVqYVd3c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbmJtOXlaVVJsY0hSb09pQjFMbWxuYm05eVpVUmxjSFJvVm1Gc2RXVnpMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVTZJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1WTI5a2FXNW5PaUJsTG05MWRIQjFkRVZ1WTI5a2FXNW5DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrZ09pQm5JRDBnYm1WM0lFRjBLSFV1ZEdWNGRIVnlaVmRwWkhSb0xDQjFMblJsZUhSMWNtVklaV2xuYUhRc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXliV0YwT2lCNExtRnNjR2hoSUQ4Z1kzUWdPaUJIYml3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2djbTRzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb1ZHVjRkSFZ5WlRvZ2JtVjNJR3R6S0hVdWRHVjRkSFZ5WlZkcFpIUm9MQ0IxTG5SbGVIUjFjbVZJWldsbmFIUXNJR2hsTENCMmIybGtJREFzSUhadmFXUWdNQ3dnZG05cFpDQXdMQ0IyYjJsa0lEQXNJSFp2YVdRZ01Dd2dkbTlwWkNBd0xDQlhLU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM1JsYm1OcGJFSjFabVpsY2pvZ2VDNXpkR1Z1WTJsc0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFoyNXZjbVZFWlhCMGFEb2dkUzVwWjI1dmNtVkVaWEIwYUZaaGJIVmxjeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzVqYjJScGJtYzZJR1V1YjNWMGNIVjBSVzVqYjJScGJtY0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMlYwUm05MlpXRjBhVzl1S0RFcExDQnZJRDBnWVhkaGFYUWdhUzV5WlhGMVpYTjBVbVZtWlhKbGJtTmxVM0JoWTJVb1lTa3NJR05sTG5ObGRFTnZiblJsZUhRb2FTa3NJR05sTG5OMFlYSjBLQ2tzSUc0dWFYTlFjbVZ6Wlc1MGFXNW5JRDBnSVRBc0lHNHVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0luTmxjM05wYjI1emRHRnlkQ0lLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUIzS0ZZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGY2dQU0JwTG1sdWNIVjBVMjkxY21ObGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvWlNBOUlEQTdJR2hsSUR3Z2NDNXNaVzVuZEdnN0lHaGxLeXNwWHk1elpYUW9WMXRvWlYwc0lIQmJhR1ZkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm9aU0E5SURBN0lHaGxJRHdnVmk1eVpXMXZkbVZrTG14bGJtZDBhRHNnYUdVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkdVZ1BTQldMbkpsYlc5MlpXUmJhR1ZkTENCbVpTQTlJRjh1WjJWMEtHeGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1psSUNZbUlDaG1aUzVrYVhOd1lYUmphRVYyWlc1MEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlaR2x6WTI5dWJtVmpkR1ZrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoT2lCc1pRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3NJRjh1WkdWc1pYUmxLR3hsS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCb1pTQTlJREE3SUdobElEd2dWaTVoWkdSbFpDNXNaVzVuZEdnN0lHaGxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHeGxJRDBnVmk1aFpHUmxaRnRvWlYwc0lHWmxJRDBnWHk1blpYUW9iR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm1VZ0ppWWdabVV1WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbU52Ym01bFkzUmxaQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVG9nYkdVS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQkZJRDBnYm1WM0lFMHNJRVFnUFNCdVpYY2dUVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJWS0ZZc0lGY3NJR2hsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRVV1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtGY3ViV0YwY21sNFYyOXliR1FwTENCRUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhvWlM1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaU0E5SUVVdVpHbHpkR0Z1WTJWVWJ5aEVLU3dnWm1VZ1BTQlhMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3VaV3hsYldWdWRITXNJRUpsSUQwZ2FHVXVjSEp2YW1WamRHbHZiazFoZEhKcGVDNWxiR1Z0Wlc1MGN5d2dXU0E5SUdabFd6RTBYU0F2SUNobVpWc3hNRjBnTFNBeEtTd2dRMlVnUFNCbVpWc3hORjBnTHlBb1ptVmJNVEJkSUNzZ01Ta3NJSGxsSUQwZ0tHWmxXemxkSUNzZ01Ta2dMeUJtWlZzMVhTd2daMlVnUFNBb1ptVmJPVjBnTFNBeEtTQXZJR1psV3pWZExDQjRaU0E5SUNobVpWczRYU0F0SURFcElDOGdabVZiTUYwc0lFOWxJRDBnS0VKbFd6aGRJQ3NnTVNrZ0x5QkNaVnN3WFN3Z1J5QTlJRmtnS2lCNFpTd2dhaUE5SUZrZ0tpQlBaU3dnU3lBOUlHeGxJQzhnS0MxNFpTQXJJRTlsS1N3Z2RXVWdQU0JMSUNvZ0xYaGxPd29nSUNBZ0lDQWdJQ0FnSUNCWExtMWhkSEpwZUZkdmNteGtMbVJsWTI5dGNHOXpaU2hXTG5CdmMybDBhVzl1TENCV0xuRjFZWFJsY201cGIyNHNJRll1YzJOaGJHVXBMQ0JXTG5SeVlXNXpiR0YwWlZnb2RXVXBMQ0JXTG5SeVlXNXpiR0YwWlZvb1N5a3NJRll1YldGMGNtbDRWMjl5YkdRdVkyOXRjRzl6WlNoV0xuQnZjMmwwYVc5dUxDQldMbkYxWVhSbGNtNXBiMjRzSUZZdWMyTmhiR1VwTENCV0xtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTNWpiM0I1S0ZZdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjMlVnUFNCWklDc2dTeXdnVTJVZ1BTQkRaU0FySUVzc0lGUmxJRDBnUnlBdElIVmxMQ0JRWlNBOUlHb2dLeUFvYkdVZ0xTQjFaU2tzSUZsbElEMGdlV1VnS2lCRFpTQXZJRk5sSUNvZ2MyVXNJRU1nUFNCblpTQXFJRU5sSUM4Z1UyVWdLaUJ6WlRzS0lDQWdJQ0FnSUNBZ0lDQWdWaTV3Y205cVpXTjBhVzl1VFdGMGNtbDRMbTFoYTJWUVpYSnpjR1ZqZEdsMlpTaFVaU3dnVUdVc0lGbGxMQ0JETENCelpTd2dVMlVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCR0tGWXNJRmNwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdWeUE5UFQwZ2JuVnNiQ0EvSUZZdWJXRjBjbWw0VjI5eWJHUXVZMjl3ZVNoV0xtMWhkSEpwZUNrZ09pQldMbTFoZEhKcGVGZHZjbXhrTG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vVnk1dFlYUnlhWGhYYjNKc1pDd2dWaTV0WVhSeWFYZ3BMQ0JXTG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlM1amIzQjVLRll1YldGMGNtbDRWMjl5YkdRcExtbHVkbVZ5ZENncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5Wd1pHRjBaVU5oYldWeVlTQTlJR1oxYm1OMGFXOXVLRllwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJRzUxYkd3cElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdUQzV1WldGeUlEMGdZaTV1WldGeUlEMGdlUzV1WldGeUlEMGdWaTV1WldGeUxDQk1MbVpoY2lBOUlHSXVabUZ5SUQwZ2VTNW1ZWElnUFNCV0xtWmhjaXdnS0VrZ0lUMDlJRXd1Ym1WaGNpQjhmQ0JySUNFOVBTQk1MbVpoY2lrZ0ppWWdLR2t1ZFhCa1lYUmxVbVZ1WkdWeVUzUmhkR1VvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaE9aV0Z5T2lCTUxtNWxZWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFFWmhjam9nVEM1bVlYSUtJQ0FnSUNBZ0lDQWdJQ0FnZlNrc0lFa2dQU0JNTG01bFlYSXNJR3NnUFNCTUxtWmhjaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYSUQwZ1ZpNXdZWEpsYm5Rc0lHaGxJRDBnVEM1allXMWxjbUZ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQkdLRXdzSUZjcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1psSUQwZ01Ec2dabVVnUENCb1pTNXNaVzVuZEdnN0lHWmxLeXNwUmlob1pWdG1aVjBzSUZjcE93b2dJQ0FnSUNBZ0lDQWdJQ0JNTG0xaGRISnBlRmR2Y214a0xtUmxZMjl0Y0c5elpTaE1MbkJ2YzJsMGFXOXVMQ0JNTG5GMVlYUmxjbTVwYjI0c0lFd3VjMk5oYkdVcExDQldMbkJ2YzJsMGFXOXVMbU52Y0hrb1RDNXdiM05wZEdsdmJpa3NJRll1Y1hWaGRHVnlibWx2Ymk1amIzQjVLRXd1Y1hWaGRHVnlibWx2Ymlrc0lGWXVjMk5oYkdVdVkyOXdlU2hNTG5OallXeGxLU3dnVmk1dFlYUnlhWGd1WTI5d2VTaE1MbTFoZEhKcGVDa3NJRll1YldGMGNtbDRWMjl5YkdRdVkyOXdlU2hNTG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHeGxJRDBnVmk1amFHbHNaSEpsYmpzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm1aU0E5SURBc0lFSmxJRDBnYkdVdWJHVnVaM1JvT3lCbVpTQThJRUpsT3lCbVpTc3JLV3hsVzJabFhTNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDZ2hNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHaGxMbXhsYm1kMGFDQTlQVDBnTWlBL0lGVW9UQ3dnZVN3Z1lpa2dPaUJNTG5CeWIycGxZM1JwYjI1TllYUnlhWGd1WTI5d2VTaDVMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwUTJGdFpYSmhJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQk1Pd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwUm05MlpXRjBhVzl1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDFJQ0U5UFNCdWRXeHNLU0J5WlhSMWNtNGdkUzVtYVhobFpFWnZkbVZoZEdsdmJqc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUWdJVDA5SUc1MWJHd3BJSEpsZEhWeWJpQmtMbVpwZUdWa1JtOTJaV0YwYVc5dU93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWMyVjBSbTkyWldGMGFXOXVJRDBnWm5WdVkzUnBiMjRvVmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IxSUNFOVBTQnVkV3hzSUNZbUlDaDFMbVpwZUdWa1JtOTJaV0YwYVc5dUlEMGdWaWtzSUdRZ0lUMDlJRzUxYkd3Z0ppWWdaQzVtYVhobFpFWnZkbVZoZEdsdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUNoa0xtWnBlR1ZrUm05MlpXRjBhVzl1SUQwZ1ZpazdDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JzWlhRZ1R5QTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2JtVW9WaXdnVnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1l5QTlJRmN1WjJWMFZtbGxkMlZ5VUc5elpTaHZLU3dnYlNBOUlGY3NJR01nSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaU0E5SUdNdWRtbGxkM003Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrSUNFOVBTQnVkV3hzSUNZbUlDaGxMbk5sZEZKbGJtUmxjbFJoY21kbGRFWnlZVzFsWW5WbVptVnlLR2NzSUdRdVpuSmhiV1ZpZFdabVpYSXBMQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2huS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdabVVnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxMbXhsYm1kMGFDQWhQVDBnVEM1allXMWxjbUZ6TG14bGJtZDBhQ0FtSmlBb1RDNWpZVzFsY21GekxteGxibWQwYUNBOUlEQXNJR1psSUQwZ0lUQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkNaU0E5SURBN0lFSmxJRHdnYkdVdWJHVnVaM1JvT3lCQ1pTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdXU0E5SUd4bFcwSmxYU3dnUTJVZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrSUNFOVBTQnVkV3hzS1NCRFpTQTlJR1F1WjJWMFZtbGxkM0J2Y25Rb1dTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JuWlNBOUlHZ3VaMlYwVm1sbGQxTjFZa2x0WVdkbEtIVXNJRmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JEWlNBOUlHZGxMblpwWlhkd2IzSjBMQ0JDWlNBOVBUMGdNQ0FtSmlBb1pTNXpaWFJTWlc1a1pYSlVZWEpuWlhSVVpYaDBkWEpsY3lobkxDQm5aUzVqYjJ4dmNsUmxlSFIxY21Vc0lIVXVhV2R1YjNKbFJHVndkR2hXWVd4MVpYTWdQeUIyYjJsa0lEQWdPaUJuWlM1a1pYQjBhRk4wWlc1amFXeFVaWGgwZFhKbEtTd2daUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9aeWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VXVWdQU0JCVzBKbFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1WlM1dFlYUnlhWGd1Wm5KdmJVRnljbUY1S0ZrdWRISmhibk5tYjNKdExtMWhkSEpwZUNrc0lIbGxMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3Vabkp2YlVGeWNtRjVLRmt1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQ2tzSUhsbExuWnBaWGR3YjNKMExuTmxkQ2hEWlM1NExDQkRaUzU1TENCRFpTNTNhV1IwYUN3Z1EyVXVhR1ZwWjJoMEtTd2dRbVVnUFQwOUlEQWdKaVlnVEM1dFlYUnlhWGd1WTI5d2VTaDVaUzV0WVhSeWFYZ3BMQ0JtWlNBOVBUMGdJVEFnSmlZZ1RDNWpZVzFsY21GekxuQjFjMmdvZVdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvWlNBOUlHa3VhVzV3ZFhSVGIzVnlZMlZ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHeGxJRDBnTURzZ2JHVWdQQ0J3TG14bGJtZDBhRHNnYkdVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWm1VZ1BTQndXMnhsWFN3Z1FtVWdQU0JvWlZ0c1pWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1aUzUxY0dSaGRHVW9RbVVzSUZjc0lHOHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRThnSmlZZ1R5aFdMQ0JYS1N3Z2JTQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JqWlNBOUlHNWxkeUJ5YURzS0lDQWdJQ0FnSUNCalpTNXpaWFJCYm1sdFlYUnBiMjVNYjI5d0tHNWxLU3dnZEdocGN5NXpaWFJCYm1sdFlYUnBiMjVNYjI5d0lEMGdablZ1WTNScGIyNG9WaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQlBJRDBnVmpzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1ScGMzQnZjMlVnUFNCbWRXNWpkR2x2YmlncElIdDlPd29nSUNBZ2ZRcDlPd3BtZFc1amRHbHZiaUJEZUNoektTQjdDaUFnSUNCbWRXNWpkR2x2YmlCbEtHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCbkxtWnZaME52Ykc5eUxuWmhiSFZsTG1OdmNIa29jQzVqYjJ4dmNpa3NJSEF1YVhOR2IyY2dQeUFvWnk1bWIyZE9aV0Z5TG5aaGJIVmxJRDBnY0M1dVpXRnlMQ0JuTG1adlowWmhjaTUyWVd4MVpTQTlJSEF1Wm1GeUtTQTZJSEF1YVhOR2IyZEZlSEF5SUNZbUlDaG5MbVp2WjBSbGJuTnBkSGt1ZG1Gc2RXVWdQU0J3TG1SbGJuTnBkSGtwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2RDaG5MQ0J3TENCZkxDQjVMQ0JpS1NCN0NpQWdJQ0FnSUNBZ2NDNXBjMDFsYzJoQ1lYTnBZMDFoZEdWeWFXRnNJRDhnYmlobkxDQndLU0E2SUhBdWFYTk5aWE5vVEdGdFltVnlkRTFoZEdWeWFXRnNJRDhnS0c0b1p5d2djQ2tzSUd3b1p5d2djQ2twSURvZ2NDNXBjMDFsYzJoVWIyOXVUV0YwWlhKcFlXd2dQeUFvYmlobkxDQndLU3dnYUNobkxDQndLU2tnT2lCd0xtbHpUV1Z6YUZCb2IyNW5UV0YwWlhKcFlXd2dQeUFvYmlobkxDQndLU3dnWXlobkxDQndLU2tnT2lCd0xtbHpUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dnUHlBb2JpaG5MQ0J3S1N3Z2NDNXBjMDFsYzJoUWFIbHphV05oYkUxaGRHVnlhV0ZzSUQ4Z1pDaG5MQ0J3TENCaUtTQTZJSFVvWnl3Z2NDa3BJRG9nY0M1cGMwMWxjMmhOWVhSallYQk5ZWFJsY21saGJDQS9JQ2h1S0djc0lIQXBMQ0JtS0djc0lIQXBLU0E2SUhBdWFYTk5aWE5vUkdWd2RHaE5ZWFJsY21saGJDQS9JQ2h1S0djc0lIQXBMQ0J0S0djc0lIQXBLU0E2SUhBdWFYTk5aWE5vUkdsemRHRnVZMlZOWVhSbGNtbGhiQ0EvSUNodUtHY3NJSEFwTENCNEtHY3NJSEFwS1NBNklIQXVhWE5OWlhOb1RtOXliV0ZzVFdGMFpYSnBZV3dnUHlBb2JpaG5MQ0J3S1N3Z2RpaG5MQ0J3S1NrZ09pQndMbWx6VEdsdVpVSmhjMmxqVFdGMFpYSnBZV3dnUHlBb2FTaG5MQ0J3S1N3Z2NDNXBjMHhwYm1WRVlYTm9aV1JOWVhSbGNtbGhiQ0FtSmlCeUtHY3NJSEFwS1NBNklIQXVhWE5RYjJsdWRITk5ZWFJsY21saGJDQS9JRzhvWnl3Z2NDd2dYeXdnZVNrZ09pQndMbWx6VTNCeWFYUmxUV0YwWlhKcFlXd2dQeUJoS0djc0lIQXBJRG9nY0M1cGMxTm9ZV1J2ZDAxaGRHVnlhV0ZzSUQ4Z0tHY3VZMjlzYjNJdWRtRnNkV1V1WTI5d2VTaHdMbU52Ykc5eUtTd2daeTV2Y0dGamFYUjVMblpoYkhWbElEMGdjQzV2Y0dGamFYUjVLU0E2SUhBdWFYTlRhR0ZrWlhKTllYUmxjbWxoYkNBbUppQW9jQzUxYm1sbWIzSnRjMDVsWldSVmNHUmhkR1VnUFNBaE1TazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ1S0djc0lIQXBJSHNLSUNBZ0lDQWdJQ0JuTG05d1lXTnBkSGt1ZG1Gc2RXVWdQU0J3TG05d1lXTnBkSGtzSUhBdVkyOXNiM0lnSmlZZ1p5NWthV1ptZFhObExuWmhiSFZsTG1OdmNIa29jQzVqYjJ4dmNpa3NJSEF1WlcxcGMzTnBkbVVnSmlZZ1p5NWxiV2x6YzJsMlpTNTJZV3gxWlM1amIzQjVLSEF1WlcxcGMzTnBkbVVwTG0xMWJIUnBjR3g1VTJOaGJHRnlLSEF1WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtwTENCd0xtMWhjQ0FtSmlBb1p5NXRZWEF1ZG1Gc2RXVWdQU0J3TG0xaGNDa3NJSEF1WVd4d2FHRk5ZWEFnSmlZZ0tHY3VZV3h3YUdGTllYQXVkbUZzZFdVZ1BTQndMbUZzY0doaFRXRndLU3dnY0M1emNHVmpkV3hoY2sxaGNDQW1KaUFvWnk1emNHVmpkV3hoY2sxaGNDNTJZV3gxWlNBOUlIQXVjM0JsWTNWc1lYSk5ZWEFwTENCd0xtRnNjR2hoVkdWemRDQStJREFnSmlZZ0tHY3VZV3h3YUdGVVpYTjBMblpoYkhWbElEMGdjQzVoYkhCb1lWUmxjM1FwT3dvZ0lDQWdJQ0FnSUd4bGRDQmZJRDBnY3k1blpYUW9jQ2t1Wlc1MlRXRndPd29nSUNBZ0lDQWdJRjhnSmlZZ0tHY3VaVzUyVFdGd0xuWmhiSFZsSUQwZ1h5d2daeTVtYkdsd1JXNTJUV0Z3TG5aaGJIVmxJRDBnWHk1cGMwTjFZbVZVWlhoMGRYSmxJQ1ltSUY4dWFYTlNaVzVrWlhKVVlYSm5aWFJVWlhoMGRYSmxJRDA5UFNBaE1TQS9JQzB4SURvZ01Td2daeTV5Wldac1pXTjBhWFpwZEhrdWRtRnNkV1VnUFNCd0xuSmxabXhsWTNScGRtbDBlU3dnWnk1cGIzSXVkbUZzZFdVZ1BTQndMbWx2Y2l3Z1p5NXlaV1p5WVdOMGFXOXVVbUYwYVc4dWRtRnNkV1VnUFNCd0xuSmxabkpoWTNScGIyNVNZWFJwYnlrc0lIQXViR2xuYUhSTllYQWdKaVlnS0djdWJHbG5hSFJOWVhBdWRtRnNkV1VnUFNCd0xteHBaMmgwVFdGd0xDQm5MbXhwWjJoMFRXRndTVzUwWlc1emFYUjVMblpoYkhWbElEMGdjQzVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU2tzSUhBdVlXOU5ZWEFnSmlZZ0tHY3VZVzlOWVhBdWRtRnNkV1VnUFNCd0xtRnZUV0Z3TENCbkxtRnZUV0Z3U1c1MFpXNXphWFI1TG5aaGJIVmxJRDBnY0M1aGIwMWhjRWx1ZEdWdWMybDBlU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIazdDaUFnSUNBZ0lDQWdjQzV0WVhBZ1B5QjVJRDBnY0M1dFlYQWdPaUJ3TG5Od1pXTjFiR0Z5VFdGd0lEOGdlU0E5SUhBdWMzQmxZM1ZzWVhKTllYQWdPaUJ3TG1ScGMzQnNZV05sYldWdWRFMWhjQ0EvSUhrZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTZJSEF1Ym05eWJXRnNUV0Z3SUQ4Z2VTQTlJSEF1Ym05eWJXRnNUV0Z3SURvZ2NDNWlkVzF3VFdGd0lEOGdlU0E5SUhBdVluVnRjRTFoY0NBNklIQXVjbTkxWjJodVpYTnpUV0Z3SUQ4Z2VTQTlJSEF1Y205MVoyaHVaWE56VFdGd0lEb2djQzV0WlhSaGJHNWxjM05OWVhBZ1B5QjVJRDBnY0M1dFpYUmhiRzVsYzNOTllYQWdPaUJ3TG1Gc2NHaGhUV0Z3SUQ4Z2VTQTlJSEF1WVd4d2FHRk5ZWEFnT2lCd0xtVnRhWE56YVhabFRXRndJRDhnZVNBOUlIQXVaVzFwYzNOcGRtVk5ZWEFnT2lCd0xtTnNaV0Z5WTI5aGRFMWhjQ0EvSUhrZ1BTQndMbU5zWldGeVkyOWhkRTFoY0NBNklIQXVZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJRDhnZVNBOUlIQXVZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJRG9nY0M1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQWdQeUI1SUQwZ2NDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnT2lCd0xuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndJRDhnZVNBOUlIQXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEFnT2lCd0xuTndaV04xYkdGeVEyOXNiM0pOWVhBZ1B5QjVJRDBnY0M1emNHVmpkV3hoY2tOdmJHOXlUV0Z3SURvZ2NDNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ1B5QjVJRDBnY0M1MGNtRnVjMjFwYzNOcGIyNU5ZWEFnT2lCd0xuUm9hV05yYm1WemMwMWhjQ0EvSUhrZ1BTQndMblJvYVdOcmJtVnpjMDFoY0NBNklIQXVjMmhsWlc1RGIyeHZjazFoY0NBL0lIa2dQU0J3TG5Ob1pXVnVRMjlzYjNKTllYQWdPaUJ3TG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3SUNZbUlDaDVJRDBnY0M1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0Nrc0lIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2VTNXBjMWRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBJQ1ltSUNoNUlEMGdlUzUwWlhoMGRYSmxLU3dnZVM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwOVBTQWhNQ0FtSmlCNUxuVndaR0YwWlUxaGRISnBlQ2dwTENCbkxuVjJWSEpoYm5ObWIzSnRMblpoYkhWbExtTnZjSGtvZVM1dFlYUnlhWGdwS1RzS0lDQWdJQ0FnSUNCc1pYUWdZanNLSUNBZ0lDQWdJQ0J3TG1GdlRXRndJRDhnWWlBOUlIQXVZVzlOWVhBZ09pQndMbXhwWjJoMFRXRndJQ1ltSUNoaUlEMGdjQzVzYVdkb2RFMWhjQ2tzSUdJZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWWk1cGMxZGxZa2RNVW1WdVpHVnlWR0Z5WjJWMElDWW1JQ2hpSUQwZ1lpNTBaWGgwZFhKbEtTd2dZaTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDA5UFNBaE1DQW1KaUJpTG5Wd1pHRjBaVTFoZEhKcGVDZ3BMQ0JuTG5WMk1sUnlZVzV6Wm05eWJTNTJZV3gxWlM1amIzQjVLR0l1YldGMGNtbDRLU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcEtHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCbkxtUnBabVoxYzJVdWRtRnNkV1V1WTI5d2VTaHdMbU52Ykc5eUtTd2daeTV2Y0dGamFYUjVMblpoYkhWbElEMGdjQzV2Y0dGamFYUjVPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnY2lobkxDQndLU0I3Q2lBZ0lDQWdJQ0FnWnk1a1lYTm9VMmw2WlM1MllXeDFaU0E5SUhBdVpHRnphRk5wZW1Vc0lHY3VkRzkwWVd4VGFYcGxMblpoYkhWbElEMGdjQzVrWVhOb1UybDZaU0FySUhBdVoyRndVMmw2WlN3Z1p5NXpZMkZzWlM1MllXeDFaU0E5SUhBdWMyTmhiR1U3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCdktHY3NJSEFzSUY4c0lIa3BJSHNLSUNBZ0lDQWdJQ0JuTG1ScFptWjFjMlV1ZG1Gc2RXVXVZMjl3ZVNod0xtTnZiRzl5S1N3Z1p5NXZjR0ZqYVhSNUxuWmhiSFZsSUQwZ2NDNXZjR0ZqYVhSNUxDQm5Mbk5wZW1VdWRtRnNkV1VnUFNCd0xuTnBlbVVnS2lCZkxDQm5Mbk5qWVd4bExuWmhiSFZsSUQwZ2VTQXFJQzQxTENCd0xtMWhjQ0FtSmlBb1p5NXRZWEF1ZG1Gc2RXVWdQU0J3TG0xaGNDa3NJSEF1WVd4d2FHRk5ZWEFnSmlZZ0tHY3VZV3h3YUdGTllYQXVkbUZzZFdVZ1BTQndMbUZzY0doaFRXRndLU3dnY0M1aGJIQm9ZVlJsYzNRZ1BpQXdJQ1ltSUNobkxtRnNjR2hoVkdWemRDNTJZV3gxWlNBOUlIQXVZV3h3YUdGVVpYTjBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lqc0tJQ0FnSUNBZ0lDQndMbTFoY0NBL0lHSWdQU0J3TG0xaGNDQTZJSEF1WVd4d2FHRk5ZWEFnSmlZZ0tHSWdQU0J3TG1Gc2NHaGhUV0Z3S1N3Z1lpQWhQVDBnZG05cFpDQXdJQ1ltSUNoaUxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BUMDlJQ0V3SUNZbUlHSXVkWEJrWVhSbFRXRjBjbWw0S0Nrc0lHY3VkWFpVY21GdWMyWnZjbTB1ZG1Gc2RXVXVZMjl3ZVNoaUxtMWhkSEpwZUNrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZU2huTENCd0tTQjdDaUFnSUNBZ0lDQWdaeTVrYVdabWRYTmxMblpoYkhWbExtTnZjSGtvY0M1amIyeHZjaWtzSUdjdWIzQmhZMmwwZVM1MllXeDFaU0E5SUhBdWIzQmhZMmwwZVN3Z1p5NXliM1JoZEdsdmJpNTJZV3gxWlNBOUlIQXVjbTkwWVhScGIyNHNJSEF1YldGd0lDWW1JQ2huTG0xaGNDNTJZV3gxWlNBOUlIQXViV0Z3S1N3Z2NDNWhiSEJvWVUxaGNDQW1KaUFvWnk1aGJIQm9ZVTFoY0M1MllXeDFaU0E5SUhBdVlXeHdhR0ZOWVhBcExDQndMbUZzY0doaFZHVnpkQ0ErSURBZ0ppWWdLR2N1WVd4d2FHRlVaWE4wTG5aaGJIVmxJRDBnY0M1aGJIQm9ZVlJsYzNRcE93b2dJQ0FnSUNBZ0lHeGxkQ0JmT3dvZ0lDQWdJQ0FnSUhBdWJXRndJRDhnWHlBOUlIQXViV0Z3SURvZ2NDNWhiSEJvWVUxaGNDQW1KaUFvWHlBOUlIQXVZV3h3YUdGTllYQXBMQ0JmSUNFOVBTQjJiMmxrSURBZ0ppWWdLRjh1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5UFQwZ0lUQWdKaVlnWHk1MWNHUmhkR1ZOWVhSeWFYZ29LU3dnWnk1MWRsUnlZVzV6Wm05eWJTNTJZV3gxWlM1amIzQjVLRjh1YldGMGNtbDRLU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCc0tHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCd0xtVnRhWE56YVhabFRXRndJQ1ltSUNobkxtVnRhWE56YVhabFRXRndMblpoYkhWbElEMGdjQzVsYldsemMybDJaVTFoY0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmpLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQm5Mbk53WldOMWJHRnlMblpoYkhWbExtTnZjSGtvY0M1emNHVmpkV3hoY2lrc0lHY3VjMmhwYm1sdVpYTnpMblpoYkhWbElEMGdUV0YwYUM1dFlYZ29jQzV6YUdsdWFXNWxjM01zSURGbExUUXBMQ0J3TG1WdGFYTnphWFpsVFdGd0lDWW1JQ2huTG1WdGFYTnphWFpsVFdGd0xuWmhiSFZsSUQwZ2NDNWxiV2x6YzJsMlpVMWhjQ2tzSUhBdVluVnRjRTFoY0NBbUppQW9aeTVpZFcxd1RXRndMblpoYkhWbElEMGdjQzVpZFcxd1RXRndMQ0JuTG1KMWJYQlRZMkZzWlM1MllXeDFaU0E5SUhBdVluVnRjRk5qWVd4bExDQndMbk5wWkdVZ1BUMDlJR2wwSUNZbUlDaG5MbUoxYlhCVFkyRnNaUzUyWVd4MVpTQXFQU0F0TVNrcExDQndMbTV2Y20xaGJFMWhjQ0FtSmlBb1p5NXViM0p0WVd4TllYQXVkbUZzZFdVZ1BTQndMbTV2Y20xaGJFMWhjQ3dnWnk1dWIzSnRZV3hUWTJGc1pTNTJZV3gxWlM1amIzQjVLSEF1Ym05eWJXRnNVMk5oYkdVcExDQndMbk5wWkdVZ1BUMDlJR2wwSUNZbUlHY3VibTl5YldGc1UyTmhiR1V1ZG1Gc2RXVXVibVZuWVhSbEtDa3BMQ0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlBb1p5NWthWE53YkdGalpXMWxiblJOWVhBdWRtRnNkV1VnUFNCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z1p5NWthWE53YkdGalpXMWxiblJUWTJGc1pTNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJR2N1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeTUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCb0tHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCd0xtZHlZV1JwWlc1MFRXRndJQ1ltSUNobkxtZHlZV1JwWlc1MFRXRndMblpoYkhWbElEMGdjQzVuY21Ga2FXVnVkRTFoY0Nrc0lIQXVaVzFwYzNOcGRtVk5ZWEFnSmlZZ0tHY3VaVzFwYzNOcGRtVk5ZWEF1ZG1Gc2RXVWdQU0J3TG1WdGFYTnphWFpsVFdGd0tTd2djQzVpZFcxd1RXRndJQ1ltSUNobkxtSjFiWEJOWVhBdWRtRnNkV1VnUFNCd0xtSjFiWEJOWVhBc0lHY3VZblZ0Y0ZOallXeGxMblpoYkhWbElEMGdjQzVpZFcxd1UyTmhiR1VzSUhBdWMybGtaU0E5UFQwZ2FYUWdKaVlnS0djdVluVnRjRk5qWVd4bExuWmhiSFZsSUNvOUlDMHhLU2tzSUhBdWJtOXliV0ZzVFdGd0lDWW1JQ2huTG01dmNtMWhiRTFoY0M1MllXeDFaU0E5SUhBdWJtOXliV0ZzVFdGd0xDQm5MbTV2Y20xaGJGTmpZV3hsTG5aaGJIVmxMbU52Y0hrb2NDNXViM0p0WVd4VFkyRnNaU2tzSUhBdWMybGtaU0E5UFQwZ2FYUWdKaVlnWnk1dWIzSnRZV3hUWTJGc1pTNTJZV3gxWlM1dVpXZGhkR1VvS1Nrc0lIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDWW1JQ2huTG1ScGMzQnNZV05sYldWdWRFMWhjQzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0JuTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z1p5NWthWE53YkdGalpXMWxiblJDYVdGekxuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJDYVdGektUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSFVvWnl3Z2NDa2dld29nSUNBZ0lDQWdJR2N1Y205MVoyaHVaWE56TG5aaGJIVmxJRDBnY0M1eWIzVm5hRzVsYzNNc0lHY3ViV1YwWVd4dVpYTnpMblpoYkhWbElEMGdjQzV0WlhSaGJHNWxjM01zSUhBdWNtOTFaMmh1WlhOelRXRndJQ1ltSUNobkxuSnZkV2RvYm1WemMwMWhjQzUyWVd4MVpTQTlJSEF1Y205MVoyaHVaWE56VFdGd0tTd2djQzV0WlhSaGJHNWxjM05OWVhBZ0ppWWdLR2N1YldWMFlXeHVaWE56VFdGd0xuWmhiSFZsSUQwZ2NDNXRaWFJoYkc1bGMzTk5ZWEFwTENCd0xtVnRhWE56YVhabFRXRndJQ1ltSUNobkxtVnRhWE56YVhabFRXRndMblpoYkhWbElEMGdjQzVsYldsemMybDJaVTFoY0Nrc0lIQXVZblZ0Y0UxaGNDQW1KaUFvWnk1aWRXMXdUV0Z3TG5aaGJIVmxJRDBnY0M1aWRXMXdUV0Z3TENCbkxtSjFiWEJUWTJGc1pTNTJZV3gxWlNBOUlIQXVZblZ0Y0ZOallXeGxMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JQ2huTG1KMWJYQlRZMkZzWlM1MllXeDFaU0FxUFNBdE1Ta3BMQ0J3TG01dmNtMWhiRTFoY0NBbUppQW9aeTV1YjNKdFlXeE5ZWEF1ZG1Gc2RXVWdQU0J3TG01dmNtMWhiRTFoY0N3Z1p5NXViM0p0WVd4VFkyRnNaUzUyWVd4MVpTNWpiM0I1S0hBdWJtOXliV0ZzVTJOaGJHVXBMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JR2N1Ym05eWJXRnNVMk5oYkdVdWRtRnNkV1V1Ym1WbllYUmxLQ2twTENCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQW9aeTVrYVhOd2JHRmpaVzFsYm5STllYQXVkbUZzZFdVZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2daeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaUzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUdjdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3k1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lrc0lITXVaMlYwS0hBcExtVnVkazFoY0NBbUppQW9aeTVsYm5aTllYQkpiblJsYm5OcGRIa3VkbUZzZFdVZ1BTQndMbVZ1ZGsxaGNFbHVkR1Z1YzJsMGVTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJrS0djc0lIQXNJRjhwSUhzS0lDQWdJQ0FnSUNCMUtHY3NJSEFwTENCbkxtbHZjaTUyWVd4MVpTQTlJSEF1YVc5eUxDQndMbk5vWldWdUlENGdNQ0FtSmlBb1p5NXphR1ZsYmtOdmJHOXlMblpoYkhWbExtTnZjSGtvY0M1emFHVmxia052Ykc5eUtTNXRkV3gwYVhCc2VWTmpZV3hoY2lod0xuTm9aV1Z1S1N3Z1p5NXphR1ZsYmxKdmRXZG9ibVZ6Y3k1MllXeDFaU0E5SUhBdWMyaGxaVzVTYjNWbmFHNWxjM01zSUhBdWMyaGxaVzVEYjJ4dmNrMWhjQ0FtSmlBb1p5NXphR1ZsYmtOdmJHOXlUV0Z3TG5aaGJIVmxJRDBnY0M1emFHVmxia052Ykc5eVRXRndLU3dnY0M1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NBbUppQW9aeTV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQzUyWVd4MVpTQTlJSEF1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFwS1N3Z2NDNWpiR1ZoY21OdllYUWdQaUF3SUNZbUlDaG5MbU5zWldGeVkyOWhkQzUyWVd4MVpTQTlJSEF1WTJ4bFlYSmpiMkYwTENCbkxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5NTJZV3gxWlNBOUlIQXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpMQ0J3TG1Oc1pXRnlZMjloZEUxaGNDQW1KaUFvWnk1amJHVmhjbU52WVhSTllYQXVkbUZzZFdVZ1BTQndMbU5zWldGeVkyOWhkRTFoY0Nrc0lIQXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUNZbUlDaG5MbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0M1MllXeDFaU0E5SUhBdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndLU3dnY0M1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ0ppWWdLR2N1WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVdWRtRnNkV1V1WTI5d2VTaHdMbU5zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsS1N3Z1p5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQXVkbUZzZFdVZ1BTQndMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ3dnY0M1emFXUmxJRDA5UFNCcGRDQW1KaUJuTG1Oc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bExuWmhiSFZsTG01bFoyRjBaU2dwS1Nrc0lIQXVkSEpoYm5OdGFYTnphVzl1SUQ0Z01DQW1KaUFvWnk1MGNtRnVjMjFwYzNOcGIyNHVkbUZzZFdVZ1BTQndMblJ5WVc1emJXbHpjMmx2Yml3Z1p5NTBjbUZ1YzIxcGMzTnBiMjVUWVcxd2JHVnlUV0Z3TG5aaGJIVmxJRDBnWHk1MFpYaDBkWEpsTENCbkxuUnlZVzV6YldsemMybHZibE5oYlhCc1pYSlRhWHBsTG5aaGJIVmxMbk5sZENoZkxuZHBaSFJvTENCZkxtaGxhV2RvZENrc0lIQXVkSEpoYm5OdGFYTnphVzl1VFdGd0lDWW1JQ2huTG5SeVlXNXpiV2x6YzJsdmJrMWhjQzUyWVd4MVpTQTlJSEF1ZEhKaGJuTnRhWE56YVc5dVRXRndLU3dnWnk1MGFHbGphMjVsYzNNdWRtRnNkV1VnUFNCd0xuUm9hV05yYm1WemN5d2djQzUwYUdsamEyNWxjM05OWVhBZ0ppWWdLR2N1ZEdocFkydHVaWE56VFdGd0xuWmhiSFZsSUQwZ2NDNTBhR2xqYTI1bGMzTk5ZWEFwTENCbkxtRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVXVkbUZzZFdVZ1BTQndMbUYwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlVzSUdjdVlYUjBaVzUxWVhScGIyNURiMnh2Y2k1MllXeDFaUzVqYjNCNUtIQXVZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpa3BMQ0JuTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1TG5aaGJIVmxJRDBnY0M1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVN3Z1p5NXpjR1ZqZFd4aGNrTnZiRzl5TG5aaGJIVmxMbU52Y0hrb2NDNXpjR1ZqZFd4aGNrTnZiRzl5S1N3Z2NDNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0FtSmlBb1p5NXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQzUyWVd4MVpTQTlJSEF1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBcExDQndMbk53WldOMWJHRnlRMjlzYjNKTllYQWdKaVlnS0djdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0M1MllXeDFaU0E5SUhBdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQm1LR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQndMbTFoZEdOaGNDQW1KaUFvWnk1dFlYUmpZWEF1ZG1Gc2RXVWdQU0J3TG0xaGRHTmhjQ2tzSUhBdVluVnRjRTFoY0NBbUppQW9aeTVpZFcxd1RXRndMblpoYkhWbElEMGdjQzVpZFcxd1RXRndMQ0JuTG1KMWJYQlRZMkZzWlM1MllXeDFaU0E5SUhBdVluVnRjRk5qWVd4bExDQndMbk5wWkdVZ1BUMDlJR2wwSUNZbUlDaG5MbUoxYlhCVFkyRnNaUzUyWVd4MVpTQXFQU0F0TVNrcExDQndMbTV2Y20xaGJFMWhjQ0FtSmlBb1p5NXViM0p0WVd4TllYQXVkbUZzZFdVZ1BTQndMbTV2Y20xaGJFMWhjQ3dnWnk1dWIzSnRZV3hUWTJGc1pTNTJZV3gxWlM1amIzQjVLSEF1Ym05eWJXRnNVMk5oYkdVcExDQndMbk5wWkdVZ1BUMDlJR2wwSUNZbUlHY3VibTl5YldGc1UyTmhiR1V1ZG1Gc2RXVXVibVZuWVhSbEtDa3BMQ0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlBb1p5NWthWE53YkdGalpXMWxiblJOWVhBdWRtRnNkV1VnUFNCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z1p5NWthWE53YkdGalpXMWxiblJUWTJGc1pTNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJR2N1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeTUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCdEtHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQW9aeTVrYVhOd2JHRmpaVzFsYm5STllYQXVkbUZzZFdVZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2daeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaUzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUdjdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3k1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjRLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQW1KaUFvWnk1a2FYTndiR0ZqWlcxbGJuUk5ZWEF1ZG1Gc2RXVWdQU0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnWnk1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlM1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lHY3VaR2x6Y0d4aFkyVnRaVzUwUW1saGN5NTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5a3NJR2N1Y21WbVpYSmxibU5sVUc5emFYUnBiMjR1ZG1Gc2RXVXVZMjl3ZVNod0xuSmxabVZ5Wlc1alpWQnZjMmwwYVc5dUtTd2daeTV1WldGeVJHbHpkR0Z1WTJVdWRtRnNkV1VnUFNCd0xtNWxZWEpFYVhOMFlXNWpaU3dnWnk1bVlYSkVhWE4wWVc1alpTNTJZV3gxWlNBOUlIQXVabUZ5UkdsemRHRnVZMlU3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCMktHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCd0xtSjFiWEJOWVhBZ0ppWWdLR2N1WW5WdGNFMWhjQzUyWVd4MVpTQTlJSEF1WW5WdGNFMWhjQ3dnWnk1aWRXMXdVMk5oYkdVdWRtRnNkV1VnUFNCd0xtSjFiWEJUWTJGc1pTd2djQzV6YVdSbElEMDlQU0JwZENBbUppQW9aeTVpZFcxd1UyTmhiR1V1ZG1Gc2RXVWdLajBnTFRFcEtTd2djQzV1YjNKdFlXeE5ZWEFnSmlZZ0tHY3VibTl5YldGc1RXRndMblpoYkhWbElEMGdjQzV1YjNKdFlXeE5ZWEFzSUdjdWJtOXliV0ZzVTJOaGJHVXVkbUZzZFdVdVkyOXdlU2h3TG01dmNtMWhiRk5qWVd4bEtTd2djQzV6YVdSbElEMDlQU0JwZENBbUppQm5MbTV2Y20xaGJGTmpZV3hsTG5aaGJIVmxMbTVsWjJGMFpTZ3BLU3dnY0M1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnSmlZZ0tHY3VaR2x6Y0d4aFkyVnRaVzUwVFdGd0xuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJOWVhBc0lHY3VaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXVkbUZzZFdVZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0JuTG1ScGMzQnNZV05sYldWdWRFSnBZWE11ZG1Gc2RXVWdQU0J3TG1ScGMzQnNZV05sYldWdWRFSnBZWE1wT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCeVpXWnlaWE5vUm05blZXNXBabTl5YlhNNklHVXNDaUFnSUNBZ0lDQWdjbVZtY21WemFFMWhkR1Z5YVdGc1ZXNXBabTl5YlhNNklIUUtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdUSGdvS1NCN0NpQWdJQ0JzWlhRZ2N5QTlJSEZ6S0NKallXNTJZWE1pS1RzS0lDQWdJSEpsZEhWeWJpQnpMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQWlZbXh2WTJzaUxDQnpPd3A5Q21aMWJtTjBhVzl1SUhGbEtITWdQU0I3ZlNrZ2V3b2dJQ0FnYkdWMElHVWdQU0J6TG1OaGJuWmhjeUFoUFQwZ2RtOXBaQ0F3SUQ4Z2N5NWpZVzUyWVhNZ09pQk1lQ2dwTENCMElEMGdjeTVqYjI1MFpYaDBJQ0U5UFNCMmIybGtJREFnUHlCekxtTnZiblJsZUhRZ09pQnVkV3hzTENCdUlEMGdjeTVoYkhCb1lTQWhQVDBnZG05cFpDQXdJRDhnY3k1aGJIQm9ZU0E2SUNFeExDQnBJRDBnY3k1a1pYQjBhQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2N5NWtaWEIwYUNBNklDRXdMQ0J5SUQwZ2N5NXpkR1Z1WTJsc0lDRTlQU0IyYjJsa0lEQWdQeUJ6TG5OMFpXNWphV3dnT2lBaE1Dd2dieUE5SUhNdVlXNTBhV0ZzYVdGeklDRTlQU0IyYjJsa0lEQWdQeUJ6TG1GdWRHbGhiR2xoY3lBNklDRXhMQ0JoSUQwZ2N5NXdjbVZ0ZFd4MGFYQnNhV1ZrUVd4d2FHRWdJVDA5SUhadmFXUWdNQ0EvSUhNdWNISmxiWFZzZEdsd2JHbGxaRUZzY0doaElEb2dJVEFzSUd3Z1BTQnpMbkJ5WlhObGNuWmxSSEpoZDJsdVowSjFabVpsY2lBaFBUMGdkbTlwWkNBd0lEOGdjeTV3Y21WelpYSjJaVVJ5WVhkcGJtZENkV1ptWlhJZ09pQWhNU3dnWXlBOUlITXVjRzkzWlhKUWNtVm1aWEpsYm1ObElDRTlQU0IyYjJsa0lEQWdQeUJ6TG5CdmQyVnlVSEpsWm1WeVpXNWpaU0E2SUNKa1pXWmhkV3gwSWl3Z2FDQTlJSE11Wm1GcGJFbG1UV0ZxYjNKUVpYSm1iM0p0WVc1alpVTmhkbVZoZENBaFBUMGdkbTlwWkNBd0lEOGdjeTVtWVdsc1NXWk5ZV3B2Y2xCbGNtWnZjbTFoYm1ObFEyRjJaV0YwSURvZ0lURXNJSFVnUFNCdWRXeHNMQ0JrSUQwZ2JuVnNiQ3dnWmlBOUlGdGRMQ0J0SUQwZ1cxMDdDaUFnSUNCMGFHbHpMbVJ2YlVWc1pXMWxiblFnUFNCbExDQjBhR2x6TG1SbFluVm5JRDBnZXdvZ0lDQWdJQ0FnSUdOb1pXTnJVMmhoWkdWeVJYSnliM0p6T2lBaE1Bb2dJQ0FnZlN3Z2RHaHBjeTVoZFhSdlEyeGxZWElnUFNBaE1Dd2dkR2hwY3k1aGRYUnZRMnhsWVhKRGIyeHZjaUE5SUNFd0xDQjBhR2x6TG1GMWRHOURiR1ZoY2tSbGNIUm9JRDBnSVRBc0lIUm9hWE11WVhWMGIwTnNaV0Z5VTNSbGJtTnBiQ0E5SUNFd0xDQjBhR2x6TG5OdmNuUlBZbXBsWTNSeklEMGdJVEFzSUhSb2FYTXVZMnhwY0hCcGJtZFFiR0Z1WlhNZ1BTQmJYU3dnZEdocGN5NXNiMk5oYkVOc2FYQndhVzVuUlc1aFlteGxaQ0E5SUNFeExDQjBhR2x6TG05MWRIQjFkRVZ1WTI5a2FXNW5JRDBnVG5Rc0lIUm9hWE11Y0doNWMybGpZV3hzZVVOdmNuSmxZM1JNYVdkb2RITWdQU0FoTVN3Z2RHaHBjeTUwYjI1bFRXRndjR2x1WnlBOUlGOXVMQ0IwYUdsekxuUnZibVZOWVhCd2FXNW5SWGh3YjNOMWNtVWdQU0F4T3dvZ0lDQWdiR1YwSUhnZ1BTQjBhR2x6TENCMklEMGdJVEVzSUdjZ1BTQXdMQ0J3SUQwZ01Dd2dYeUE5SUc1MWJHd3NJSGtnUFNBdE1Td2dZaUE5SUc1MWJHd3NJRUVnUFNCdVpYY2dWbVVzSUV3Z1BTQnVaWGNnVm1Vc0lFa2dQU0J1ZFd4c0xDQnJJRDBnWlM1M2FXUjBhQ3dnUWlBOUlHVXVhR1ZwWjJoMExDQlFJRDBnTVN3Z2R5QTlJRzUxYkd3c0lFVWdQU0J1ZFd4c0xDQkVJRDBnYm1WM0lGWmxLREFzSURBc0lHc3NJRUlwTENCVklEMGdibVYzSUZabEtEQXNJREFzSUdzc0lFSXBMQ0JHSUQwZ0lURXNJRThnUFNCYlhTd2dibVVnUFNCdVpYY2dSSElzSUdObElEMGdJVEVzSUZZZ1BTQWhNU3dnVnlBOUlHNTFiR3dzSUdobElEMGdibVYzSUhCbExDQnNaU0E5SUc1bGR5Qk5MQ0JtWlNBOUlIc0tJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lHWnZaem9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQmxiblpwY205dWJXVnVkRG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQnZkbVZ5Y21sa1pVMWhkR1Z5YVdGc09pQnVkV3hzTEFvZ0lDQWdJQ0FnSUdselUyTmxibVU2SUNFd0NpQWdJQ0I5T3dvZ0lDQWdablZ1WTNScGIyNGdRbVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUY4Z1BUMDlJRzUxYkd3Z1B5QlFJRG9nTVRzS0lDQWdJSDBLSUNBZ0lHeGxkQ0JaSUQwZ2REc0tJQ0FnSUdaMWJtTjBhVzl1SUVObEtGTXNJRTRwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVnZ1BTQXdPeUJJSUR3Z1V5NXNaVzVuZEdnN0lFZ3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ1UxdElYU3dnY1NBOUlHVXVaMlYwUTI5dWRHVjRkQ2g2TENCT0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIRWdJVDA5SUc1MWJHd3BJSEpsZEhWeWJpQnhPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRnNjR2hoT2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFEb2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzUmxibU5wYkRvZ2Npd0tJQ0FnSUNBZ0lDQWdJQ0FnWVc1MGFXRnNhV0Z6T2lCdkxBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0U2SUdFc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5WlhObGNuWmxSSEpoZDJsdVowSjFabVpsY2pvZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnY0c5M1pYSlFjbVZtWlhKbGJtTmxPaUJqTEFvZ0lDQWdJQ0FnSUNBZ0lDQm1ZV2xzU1daTllXcHZjbEJsY21admNtMWhibU5sUTJGMlpXRjBPaUJvQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCcFppQW9Jbk5sZEVGMGRISnBZblYwWlNJZ2FXNGdaU0FtSmlCbExuTmxkRUYwZEhKcFluVjBaU2dpWkdGMFlTMWxibWRwYm1VaUxDQmdkR2h5WldVdWFuTWdjaVI3WTJGOVlDa3NJR1V1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpZDJWaVoyeGpiMjUwWlhoMGJHOXpkQ0lzSUVWbExDQWhNU2tzSUdVdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWQyVmlaMnhqYjI1MFpYaDBjbVZ6ZEc5eVpXUWlMQ0J0WlN3Z0lURXBMQ0JaSUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCT0lEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJbmRsWW1kc01pSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlkMlZpWjJ3aUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0ltVjRjR1Z5YVcxbGJuUmhiQzEzWldKbmJDSUtJQ0FnSUNBZ0lDQWdJQ0FnWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hndWFYTlhaV0pIVERGU1pXNWtaWEpsY2lBOVBUMGdJVEFnSmlZZ1RpNXphR2xtZENncExDQlpJRDBnUTJVb1Rpd2dVeWtzSUZrZ1BUMDlJRzUxYkd3cElIUm9jbTkzSUVObEtFNHBJRDhnYm1WM0lFVnljbTl5S0NKRmNuSnZjaUJqY21WaGRHbHVaeUJYWldKSFRDQmpiMjUwWlhoMElIZHBkR2dnZVc5MWNpQnpaV3hsWTNSbFpDQmhkSFJ5YVdKMWRHVnpMaUlwSURvZ2JtVjNJRVZ5Y205eUtDSkZjbkp2Y2lCamNtVmhkR2x1WnlCWFpXSkhUQ0JqYjI1MFpYaDBMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCWkxtZGxkRk5vWVdSbGNsQnlaV05wYzJsdmJrWnZjbTFoZENBOVBUMGdkbTlwWkNBd0lDWW1JQ2haTG1kbGRGTm9ZV1JsY2xCeVpXTnBjMmx2YmtadmNtMWhkQ0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbUZ1WjJWTmFXNDZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WVc1blpVMWhlRG9nTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCeVpXTnBjMmx2YmpvZ01Rb2dJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnZlNCallYUmphQ0FvVXlrZ2V3b2dJQ0FnSUNBZ0lIUm9jbTkzSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUNJZ0t5QlRMbTFsYzNOaFoyVXBMQ0JUT3dvZ0lDQWdmUW9nSUNBZ2JHVjBJSGxsTENCblpTd2dlR1VzSUU5bExDQkhMQ0JxTENCTExDQjFaU3dnYzJVc0lGTmxMQ0JVWlN3Z1VHVXNJRmxsTENCRExDQlVMQ0JLTENBa0xDQnlaU3dnV2l3Z1RXVXNJSFpsTENCMFpTd2dVanNLSUNBZ0lHWjFibU4wYVc5dUlHVmxLQ2tnZXdvZ0lDQWdJQ0FnSUhsbElEMGdibVYzSUZGdEtGa3BMQ0JuWlNBOUlHNWxkeUJZYlNoWkxDQjVaU3dnY3lrc0lIbGxMbWx1YVhRb1oyVXBMQ0IwWlNBOUlHNWxkeUJGZUNoWkxDQjVaU3dnWjJVcExDQjRaU0E5SUc1bGR5QlRlQ2haTENCNVpTd2daMlVwTENCUFd6QmRJRDBnTVRBeU9Td2dUMlVnUFNCdVpYY2dkR2NvV1Nrc0lFY2dQU0J1WlhjZ1puZ3NJR29nUFNCdVpYY2dWSGdvV1N3Z2VXVXNJSGhsTENCSExDQm5aU3dnZEdVc0lFOWxLU3dnU3lBOUlHNWxkeUJaYlNoNEtTd2dkV1VnUFNCdVpYY2dhbTBvZUNrc0lITmxJRDBnYm1WM0lHZG1LRmtzSUdkbEtTd2dVaUE5SUc1bGR5QlhiU2haTENCNVpTd2djMlVzSUdkbEtTd2dVMlVnUFNCdVpYY2dTMjBvV1N3Z2MyVXNJRTlsTENCU0tTd2dWR1VnUFNCdVpYY2djMmNvV1N3Z1UyVXNJSE5sTENCUFpTa3NJRm9nUFNCdVpYY2djbWNvV1N3Z1oyVXNJR29wTENCS0lEMGdibVYzSUVwdEtFY3BMQ0JRWlNBOUlHNWxkeUJrZUNoNExDQkxMQ0IxWlN3Z2VXVXNJR2RsTENCU0xDQktLU3dnV1dVZ1BTQnVaWGNnUTNnb1J5a3NJRU1nUFNCdVpYY2diWGdzSUZRZ1BTQnVaWGNnVFhnb2VXVXNJR2RsS1N3Z2NtVWdQU0J1WlhjZ1ZtMG9lQ3dnU3l3Z2VHVXNJRlJsTENCaEtTd2dKQ0E5SUc1bGR5QjVhQ2g0TENCVVpTd2daMlVwTENCTlpTQTlJRzVsZHlCeGJTaFpMQ0I1WlN3Z1QyVXNJR2RsS1N3Z2RtVWdQU0J1WlhjZ1pXY29XU3dnZVdVc0lFOWxMQ0JuWlNrc0lFOWxMbkJ5YjJkeVlXMXpJRDBnVUdVdWNISnZaM0poYlhNc0lIZ3VZMkZ3WVdKcGJHbDBhV1Z6SUQwZ1oyVXNJSGd1WlhoMFpXNXphVzl1Y3lBOUlIbGxMQ0I0TG5CeWIzQmxjblJwWlhNZ1BTQkhMQ0I0TG5KbGJtUmxja3hwYzNSeklEMGdReXdnZUM1emFHRmtiM2ROWVhBZ1BTQWtMQ0I0TG5OMFlYUmxJRDBnZUdVc0lIZ3VhVzVtYnlBOUlFOWxPd29nSUNBZ2ZRb2dJQ0FnWldVb0tUc0tJQ0FnSUd4bGRDQlJJRDBnYm1WM0lIWm9LSGdzSUZrcE93b2dJQ0FnZEdocGN5NTRjaUE5SUZFc0lIUm9hWE11WjJWMFEyOXVkR1Y0ZENBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlpPd29nSUNBZ2ZTd2dkR2hwY3k1blpYUkRiMjUwWlhoMFFYUjBjbWxpZFhSbGN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJaTG1kbGRFTnZiblJsZUhSQmRIUnlhV0oxZEdWektDazdDaUFnSUNCOUxDQjBhR2x6TG1admNtTmxRMjl1ZEdWNGRFeHZjM01nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnVXlBOUlIbGxMbWRsZENnaVYwVkNSMHhmYkc5elpWOWpiMjUwWlhoMElpazdDaUFnSUNBZ0lDQWdVeUFtSmlCVExteHZjMlZEYjI1MFpYaDBLQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxtWnZjbU5sUTI5dWRHVjRkRkpsYzNSdmNtVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdVeUE5SUhsbExtZGxkQ2dpVjBWQ1IweGZiRzl6WlY5amIyNTBaWGgwSWlrN0NpQWdJQ0FnSUNBZ1V5QW1KaUJUTG5KbGMzUnZjbVZEYjI1MFpYaDBLQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxtZGxkRkJwZUdWc1VtRjBhVzhnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1VEc0tJQ0FnSUgwc0lIUm9hWE11YzJWMFVHbDRaV3hTWVhScGJ5QTlJR1oxYm1OMGFXOXVLRk1wSUhzS0lDQWdJQ0FnSUNCVElDRTlQU0IyYjJsa0lEQWdKaVlnS0ZBZ1BTQlRMQ0IwYUdsekxuTmxkRk5wZW1Vb2F5d2dRaXdnSVRFcEtUc0tJQ0FnSUgwc0lIUm9hWE11WjJWMFUybDZaU0E5SUdaMWJtTjBhVzl1S0ZNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1V5NXpaWFFvYXl3Z1FpazdDaUFnSUNCOUxDQjBhR2x6TG5ObGRGTnBlbVVnUFNCbWRXNWpkR2x2YmloVExDQk9MQ0JJS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRkV1YVhOUWNtVnpaVzUwYVc1bktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nUTJGdUozUWdZMmhoYm1kbElITnBlbVVnZDJocGJHVWdWbElnWkdWMmFXTmxJR2x6SUhCeVpYTmxiblJwYm1jdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYXlBOUlGTXNJRUlnUFNCT0xDQmxMbmRwWkhSb0lEMGdUV0YwYUM1bWJHOXZjaWhUSUNvZ1VDa3NJR1V1YUdWcFoyaDBJRDBnVFdGMGFDNW1iRzl2Y2loT0lDb2dVQ2tzSUVnZ0lUMDlJQ0V4SUNZbUlDaGxMbk4wZVd4bExuZHBaSFJvSUQwZ1V5QXJJQ0p3ZUNJc0lHVXVjM1I1YkdVdWFHVnBaMmgwSUQwZ1RpQXJJQ0p3ZUNJcExDQjBhR2x6TG5ObGRGWnBaWGR3YjNKMEtEQXNJREFzSUZNc0lFNHBPd29nSUNBZ2ZTd2dkR2hwY3k1blpYUkVjbUYzYVc1blFuVm1abVZ5VTJsNlpTQTlJR1oxYm1OMGFXOXVLRk1wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVXk1elpYUW9heUFxSUZBc0lFSWdLaUJRS1M1bWJHOXZjaWdwT3dvZ0lDQWdmU3dnZEdocGN5NXpaWFJFY21GM2FXNW5RblZtWm1WeVUybDZaU0E5SUdaMWJtTjBhVzl1S0ZNc0lFNHNJRWdwSUhzS0lDQWdJQ0FnSUNCcklEMGdVeXdnUWlBOUlFNHNJRkFnUFNCSUxDQmxMbmRwWkhSb0lEMGdUV0YwYUM1bWJHOXZjaWhUSUNvZ1NDa3NJR1V1YUdWcFoyaDBJRDBnVFdGMGFDNW1iRzl2Y2loT0lDb2dTQ2tzSUhSb2FYTXVjMlYwVm1sbGQzQnZjblFvTUN3Z01Dd2dVeXdnVGlrN0NpQWdJQ0I5TENCMGFHbHpMbWRsZEVOMWNuSmxiblJXYVdWM2NHOXlkQ0E5SUdaMWJtTjBhVzl1S0ZNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1V5NWpiM0I1S0VFcE93b2dJQ0FnZlN3Z2RHaHBjeTVuWlhSV2FXVjNjRzl5ZENBOUlHWjFibU4wYVc5dUtGTXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVeTVqYjNCNUtFUXBPd29nSUNBZ2ZTd2dkR2hwY3k1elpYUldhV1YzY0c5eWRDQTlJR1oxYm1OMGFXOXVLRk1zSUU0c0lFZ3NJSG9wSUhzS0lDQWdJQ0FnSUNCVExtbHpWbVZqZEc5eU5DQS9JRVF1YzJWMEtGTXVlQ3dnVXk1NUxDQlRMbm9zSUZNdWR5a2dPaUJFTG5ObGRDaFRMQ0JPTENCSUxDQjZLU3dnZUdVdWRtbGxkM0J2Y25Rb1FTNWpiM0I1S0VRcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0ZBcExtWnNiMjl5S0NrcE93b2dJQ0FnZlN3Z2RHaHBjeTVuWlhSVFkybHpjMjl5SUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRMbU52Y0hrb1ZTazdDaUFnSUNCOUxDQjBhR2x6TG5ObGRGTmphWE56YjNJZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUxDQjZLU0I3Q2lBZ0lDQWdJQ0FnVXk1cGMxWmxZM1J2Y2pRZ1B5QlZMbk5sZENoVExuZ3NJRk11ZVN3Z1V5NTZMQ0JUTG5jcElEb2dWUzV6WlhRb1V5d2dUaXdnU0N3Z2Vpa3NJSGhsTG5OamFYTnpiM0lvVEM1amIzQjVLRlVwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRkFwTG1ac2IyOXlLQ2twT3dvZ0lDQWdmU3dnZEdocGN5NW5aWFJUWTJsemMyOXlWR1Z6ZENBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQkdPd29nSUNBZ2ZTd2dkR2hwY3k1elpYUlRZMmx6YzI5eVZHVnpkQ0E5SUdaMWJtTjBhVzl1S0ZNcElIc0tJQ0FnSUNBZ0lDQjRaUzV6WlhSVFkybHpjMjl5VkdWemRDaEdJRDBnVXlrN0NpQWdJQ0I5TENCMGFHbHpMbk5sZEU5d1lYRjFaVk52Y25RZ1BTQm1kVzVqZEdsdmJpaFRLU0I3Q2lBZ0lDQWdJQ0FnZHlBOUlGTTdDaUFnSUNCOUxDQjBhR2x6TG5ObGRGUnlZVzV6Y0dGeVpXNTBVMjl5ZENBOUlHWjFibU4wYVc5dUtGTXBJSHNLSUNBZ0lDQWdJQ0JGSUQwZ1V6c0tJQ0FnSUgwc0lIUm9hWE11WjJWMFEyeGxZWEpEYjJ4dmNpQTlJR1oxYm1OMGFXOXVLRk1wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVXk1amIzQjVLSEpsTG1kbGRFTnNaV0Z5UTI5c2IzSW9LU2s3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRU5zWldGeVEyOXNiM0lnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnlaUzV6WlhSRGJHVmhja052Ykc5eUxtRndjR3g1S0hKbExDQmhjbWQxYldWdWRITXBPd29nSUNBZ2ZTd2dkR2hwY3k1blpYUkRiR1ZoY2tGc2NHaGhJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbExtZGxkRU5zWldGeVFXeHdhR0VvS1RzS0lDQWdJSDBzSUhSb2FYTXVjMlYwUTJ4bFlYSkJiSEJvWVNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsTG5ObGRFTnNaV0Z5UVd4d2FHRXVZWEJ3Ykhrb2NtVXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQjlMQ0IwYUdsekxtTnNaV0Z5SUQwZ1puVnVZM1JwYjI0b1V5d2dUaXdnU0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ01Ec0tJQ0FnSUNBZ0lDQW9VeUE5UFQwZ2RtOXBaQ0F3SUh4OElGTXBJQ1ltSUNoNklIdzlJREUyTXpnMEtTd2dLRTRnUFQwOUlIWnZhV1FnTUNCOGZDQk9LU0FtSmlBb2VpQjhQU0F5TlRZcExDQW9TQ0E5UFQwZ2RtOXBaQ0F3SUh4OElFZ3BJQ1ltSUNoNklIdzlJREV3TWpRcExDQlpMbU5zWldGeUtIb3BPd29nSUNBZ2ZTd2dkR2hwY3k1amJHVmhja052Ykc5eUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpiR1ZoY2lnaE1Dd2dJVEVzSUNFeEtUc0tJQ0FnSUgwc0lIUm9hWE11WTJ4bFlYSkVaWEIwYUNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVkyeGxZWElvSVRFc0lDRXdMQ0FoTVNrN0NpQWdJQ0I5TENCMGFHbHpMbU5zWldGeVUzUmxibU5wYkNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVkyeGxZWElvSVRFc0lDRXhMQ0FoTUNrN0NpQWdJQ0I5TENCMGFHbHpMbVJwYzNCdmMyVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCbExuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9JbmRsWW1kc1kyOXVkR1Y0ZEd4dmMzUWlMQ0JGWlN3Z0lURXBMQ0JsTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0luZGxZbWRzWTI5dWRHVjRkSEpsYzNSdmNtVmtJaXdnYldVc0lDRXhLU3dnUXk1a2FYTndiM05sS0Nrc0lGUXVaR2x6Y0c5elpTZ3BMQ0JITG1ScGMzQnZjMlVvS1N3Z1N5NWthWE53YjNObEtDa3NJSFZsTG1ScGMzQnZjMlVvS1N3Z1ZHVXVaR2x6Y0c5elpTZ3BMQ0JTTG1ScGMzQnZjMlVvS1N3Z1VHVXVaR2x6Y0c5elpTZ3BMQ0JSTG1ScGMzQnZjMlVvS1N3Z1VTNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0p6WlhOemFXOXVjM1JoY25RaUxDQlZkQ2tzSUZFdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2ljMlZ6YzJsdmJtVnVaQ0lzSUU5MEtTd2dWeUFtSmlBb1Z5NWthWE53YjNObEtDa3NJRmNnUFNCdWRXeHNLU3dnVEc0dWMzUnZjQ2dwT3dvZ0lDQWdmVHNLSUNBZ0lHWjFibU4wYVc5dUlFVmxLRk1wSUhzS0lDQWdJQ0FnSUNCVExuQnlaWFpsYm5SRVpXWmhkV3gwS0Nrc0lHTnZibk52YkdVdWJHOW5LQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCRGIyNTBaWGgwSUV4dmMzUXVJaWtzSUhZZ1BTQWhNRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUcxbEtDa2dld29nSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQkRiMjUwWlhoMElGSmxjM1J2Y21Wa0xpSXBMQ0IySUQwZ0lURTdDaUFnSUNBZ0lDQWdiR1YwSUZNZ1BTQlBaUzVoZFhSdlVtVnpaWFFzSUU0Z1BTQWtMbVZ1WVdKc1pXUXNJRWdnUFNBa0xtRjFkRzlWY0dSaGRHVXNJSG9nUFNBa0xtNWxaV1J6VlhCa1lYUmxMQ0J4SUQwZ0pDNTBlWEJsT3dvZ0lDQWdJQ0FnSUdWbEtDa3NJRTlsTG1GMWRHOVNaWE5sZENBOUlGTXNJQ1F1Wlc1aFlteGxaQ0E5SUU0c0lDUXVZWFYwYjFWd1pHRjBaU0E5SUVnc0lDUXVibVZsWkhOVmNHUmhkR1VnUFNCNkxDQWtMblI1Y0dVZ1BTQnhPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnVW1Vb1V5a2dld29nSUNBZ0lDQWdJR3hsZENCT0lEMGdVeTUwWVhKblpYUTdDaUFnSUNBZ0lDQWdUaTV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z1VtVXBMQ0J2WlNoT0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzlsS0ZNcElIc0tJQ0FnSUNBZ0lDQk1aU2hUS1N3Z1J5NXlaVzF2ZG1Vb1V5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJNWlNoVEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUU0Z1BTQkhMbWRsZENoVEtTNXdjbTluY21GdGN6c0tJQ0FnSUNBZ0lDQk9JQ0U5UFNCMmIybGtJREFnSmlZZ0tFNHVabTl5UldGamFDaG1kVzVqZEdsdmJpaElLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lGQmxMbkpsYkdWaGMyVlFjbTluY21GdEtFZ3BPd29nSUNBZ0lDQWdJSDBwTENCVExtbHpVMmhoWkdWeVRXRjBaWEpwWVd3Z0ppWWdVR1V1Y21Wc1pXRnpaVk5vWVdSbGNrTmhZMmhsS0ZNcEtUc0tJQ0FnSUgwS0lDQWdJSFJvYVhNdWNtVnVaR1Z5UW5WbVptVnlSR2x5WldOMElEMGdablZ1WTNScGIyNG9VeXdnVGl3Z1NDd2dlaXdnY1N3Z1ltVXBJSHNLSUNBZ0lDQWdJQ0JPSUQwOVBTQnVkV3hzSUNZbUlDaE9JRDBnWm1VcE93b2dJQ0FnSUNBZ0lHeGxkQ0JCWlNBOUlIRXVhWE5OWlhOb0lDWW1JSEV1YldGMGNtbDRWMjl5YkdRdVpHVjBaWEp0YVc1aGJuUW9LU0E4SURBc0lFbGxJRDBnYkhVb1V5d2dUaXdnU0N3Z2Vpd2djU2s3Q2lBZ0lDQWdJQ0FnZUdVdWMyVjBUV0YwWlhKcFlXd29laXdnUVdVcE93b2dJQ0FnSUNBZ0lHeGxkQ0IzWlNBOUlFZ3VhVzVrWlhnc0lFaGxJRDBnU0M1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dU93b2dJQ0FnSUNBZ0lHbG1JQ2gzWlNBOVBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1NHVWdQVDA5SUhadmFXUWdNQ0I4ZkNCSVpTNWpiM1Z1ZENBOVBUMGdNQ2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvZDJVdVkyOTFiblFnUFQwOUlEQXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnNaWFFnUkdVZ1BTQXhPd29nSUNBZ0lDQWdJSG91ZDJseVpXWnlZVzFsSUQwOVBTQWhNQ0FtSmlBb2QyVWdQU0JUWlM1blpYUlhhWEpsWm5KaGJXVkJkSFJ5YVdKMWRHVW9TQ2tzSUVSbElEMGdNaWtzSUZJdWMyVjBkWEFvY1N3Z2Vpd2dTV1VzSUVnc0lIZGxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2VtVXNJR3BsSUQwZ1RXVTdDaUFnSUNBZ0lDQWdkMlVnSVQwOUlHNTFiR3dnSmlZZ0tIcGxJRDBnYzJVdVoyVjBLSGRsS1N3Z2FtVWdQU0IyWlN3Z2FtVXVjMlYwU1c1a1pYZ29lbVVwS1RzS0lDQWdJQ0FnSUNCc1pYUWdVbTRnUFNCM1pTQWhQVDBnYm5Wc2JDQS9JSGRsTG1OdmRXNTBJRG9nU0dVdVkyOTFiblFzSUdWcElEMGdTQzVrY21GM1VtRnVaMlV1YzNSaGNuUWdLaUJFWlN3Z1IyVWdQU0JJTG1SeVlYZFNZVzVuWlM1amIzVnVkQ0FxSUVSbExDQklkQ0E5SUdKbElDRTlQU0J1ZFd4c0lEOGdZbVV1YzNSaGNuUWdLaUJFWlNBNklEQXNJR0YwSUQwZ1ltVWdJVDA5SUc1MWJHd2dQeUJpWlM1amIzVnVkQ0FxSUVSbElEb2dNU0F2SURBc0lHdDBJRDBnVFdGMGFDNXRZWGdvWldrc0lFaDBLU3dnUjNJZ1BTQk5ZWFJvTG0xcGJpaFNiaXdnWldrZ0t5QkhaU3dnU0hRZ0t5QmhkQ2tnTFNBeExDQkhkQ0E5SUUxaGRHZ3ViV0Y0S0RBc0lFZHlJQzBnYTNRZ0t5QXhLVHNLSUNBZ0lDQWdJQ0JwWmlBb1IzUWdJVDA5SURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIRXVhWE5OWlhOb0tTQjZMbmRwY21WbWNtRnRaU0E5UFQwZ0lUQWdQeUFvZUdVdWMyVjBUR2x1WlZkcFpIUm9LSG91ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUNvZ1FtVW9LU2tzSUdwbExuTmxkRTF2WkdVb01Ta3BJRG9nYW1VdWMyVjBUVzlrWlNnMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnBaaUFvY1M1cGMweHBibVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmFkQ0E5SUhvdWJHbHVaWGRwWkhSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1duUWdQVDA5SUhadmFXUWdNQ0FtSmlBb1duUWdQU0F4S1N3Z2VHVXVjMlYwVEdsdVpWZHBaSFJvS0ZwMElDb2dRbVVvS1Nrc0lIRXVhWE5NYVc1bFUyVm5iV1Z1ZEhNZ1B5QnFaUzV6WlhSTmIyUmxLREVwSURvZ2NTNXBjMHhwYm1WTWIyOXdJRDhnYW1VdWMyVjBUVzlrWlNneUtTQTZJR3BsTG5ObGRFMXZaR1VvTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnhMbWx6VUc5cGJuUnpJRDhnYW1VdWMyVjBUVzlrWlNnd0tTQTZJSEV1YVhOVGNISnBkR1VnSmlZZ2FtVXVjMlYwVFc5a1pTZzBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEV1YVhOSmJuTjBZVzVqWldSTlpYTm9LU0JxWlM1eVpXNWtaWEpKYm5OMFlXNWpaWE1vYTNRc0lFZDBMQ0J4TG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1NDNXBjMGx1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnV25RZ1BTQk5ZWFJvTG0xcGJpaElMbWx1YzNSaGJtTmxRMjkxYm5Rc0lFZ3VYMjFoZUVsdWMzUmhibU5sUTI5MWJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhbVV1Y21WdVpHVnlTVzV6ZEdGdVkyVnpLR3QwTENCSGRDd2dXblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FtVXVjbVZ1WkdWeUtHdDBMQ0JIZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3Z2RHaHBjeTVqYjIxd2FXeGxJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpa2dld29nSUNBZ0lDQWdJR1FnUFNCVUxtZGxkQ2hUS1N3Z1pDNXBibWwwS0Nrc0lHMHVjSFZ6YUNoa0tTd2dVeTUwY21GMlpYSnpaVlpwYzJsaWJHVW9ablZ1WTNScGIyNG9TQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQklMbWx6VEdsbmFIUWdKaVlnU0M1c1lYbGxjbk11ZEdWemRDaE9MbXhoZVdWeWN5a2dKaVlnS0dRdWNIVnphRXhwWjJoMEtFZ3BMQ0JJTG1OaGMzUlRhR0ZrYjNjZ0ppWWdaQzV3ZFhOb1UyaGhaRzkzS0VncEtUc0tJQ0FnSUNBZ0lDQjlLU3dnWkM1elpYUjFjRXhwWjJoMGN5aDRMbkJvZVhOcFkyRnNiSGxEYjNKeVpXTjBUR2xuYUhSektTd2dVeTUwY21GMlpYSnpaU2htZFc1amRHbHZiaWhJS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNklEMGdTQzV0WVhSbGNtbGhiRHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSG9wSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0hvcEtTQm1iM0lvYkdWMElIRWdQU0F3T3lCeElEd2dlaTVzWlc1bmRHZzdJSEVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZbVVnUFNCNlczRmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlRzhvWW1Vc0lGTXNJRWdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdlRzhvZWl3Z1V5d2dTQ2s3Q2lBZ0lDQWdJQ0FnZlNrc0lHMHVjRzl3S0Nrc0lHUWdQU0J1ZFd4c093b2dJQ0FnZlRzS0lDQWdJR3hsZENCWVpTQTlJRzUxYkd3N0NpQWdJQ0JtZFc1amRHbHZiaUJYWlNoVEtTQjdDaUFnSUNBZ0lDQWdXR1VnSmlZZ1dHVW9VeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCVmRDZ3BJSHNLSUNBZ0lDQWdJQ0JNYmk1emRHOXdLQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCUGRDZ3BJSHNLSUNBZ0lDQWdJQ0JNYmk1emRHRnlkQ2dwT3dvZ0lDQWdmUW9nSUNBZ2JHVjBJRXh1SUQwZ2JtVjNJSEpvT3dvZ0lDQWdURzR1YzJWMFFXNXBiV0YwYVc5dVRHOXZjQ2hYWlNrc0lIUjVjR1Z2WmlCM2FXNWtiM2NnUENBaWRTSWdKaVlnVEc0dWMyVjBRMjl1ZEdWNGRDaDNhVzVrYjNjcExDQjBhR2x6TG5ObGRFRnVhVzFoZEdsdmJreHZiM0FnUFNCbWRXNWpkR2x2YmloVEtTQjdDaUFnSUNBZ0lDQWdXR1VnUFNCVExDQlJMbk5sZEVGdWFXMWhkR2x2Ymt4dmIzQW9VeWtzSUZNZ1BUMDlJRzUxYkd3Z1B5Qk1iaTV6ZEc5d0tDa2dPaUJNYmk1emRHRnlkQ2dwT3dvZ0lDQWdmU3dnVVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKelpYTnphVzl1YzNSaGNuUWlMQ0JWZENrc0lGRXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljMlZ6YzJsdmJtVnVaQ0lzSUU5MEtTd2dkR2hwY3k1eVpXNWtaWElnUFNCbWRXNWpkR2x2YmloVExDQk9LU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFNGdJVDA5SUhadmFXUWdNQ0FtSmlCT0xtbHpRMkZ0WlhKaElDRTlQU0FoTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlMbkpsYm1SbGNqb2dZMkZ0WlhKaElHbHpJRzV2ZENCaGJpQnBibk4wWVc1alpTQnZaaUJVU0ZKRlJTNURZVzFsY21FdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIWWdQVDA5SUNFd0tTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ1V5NWhkWFJ2VlhCa1lYUmxJRDA5UFNBaE1DQW1KaUJUTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0Nrc0lFNHVjR0Z5Wlc1MElEMDlQU0J1ZFd4c0lDWW1JRTR1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1N3Z1VTNWxibUZpYkdWa0lEMDlQU0FoTUNBbUppQlJMbWx6VUhKbGMyVnVkR2x1WnlBOVBUMGdJVEFnSmlZZ0tGRXVZMkZ0WlhKaFFYVjBiMVZ3WkdGMFpTQTlQVDBnSVRBZ0ppWWdVUzUxY0dSaGRHVkRZVzFsY21Fb1Rpa3NJRTRnUFNCUkxtZGxkRU5oYldWeVlTZ3BLU3dnVXk1cGMxTmpaVzVsSUQwOVBTQWhNQ0FtSmlCVExtOXVRbVZtYjNKbFVtVnVaR1Z5S0hnc0lGTXNJRTRzSUY4cExDQmtJRDBnVkM1blpYUW9VeXdnYlM1c1pXNW5kR2dwTENCa0xtbHVhWFFvS1N3Z2JTNXdkWE5vS0dRcExDQm9aUzV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLRTR1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQ3dnVGk1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVcExDQnVaUzV6WlhSR2NtOXRVSEp2YW1WamRHbHZiazFoZEhKcGVDaG9aU2tzSUZZZ1BTQjBhR2x6TG14dlkyRnNRMnhwY0hCcGJtZEZibUZpYkdWa0xDQmpaU0E5SUVvdWFXNXBkQ2gwYUdsekxtTnNhWEJ3YVc1blVHeGhibVZ6TENCV0xDQk9LU3dnZFNBOUlFTXVaMlYwS0ZNc0lHWXViR1Z1WjNSb0tTd2dkUzVwYm1sMEtDa3NJR1l1Y0hWemFDaDFLU3dnVVdFb1V5d2dUaXdnTUN3Z2VDNXpiM0owVDJKcVpXTjBjeWtzSUhVdVptbHVhWE5vS0Nrc0lIZ3VjMjl5ZEU5aWFtVmpkSE1nUFQwOUlDRXdJQ1ltSUhVdWMyOXlkQ2gzTENCRktTd2dZMlVnUFQwOUlDRXdJQ1ltSUVvdVltVm5hVzVUYUdGa2IzZHpLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElFZ2dQU0JrTG5OMFlYUmxMbk5vWVdSdmQzTkJjbkpoZVRzS0lDQWdJQ0FnSUNCcFppQW9KQzV5Wlc1a1pYSW9TQ3dnVXl3Z1Rpa3NJR05sSUQwOVBTQWhNQ0FtSmlCS0xtVnVaRk5vWVdSdmQzTW9LU3dnZEdocGN5NXBibVp2TG1GMWRHOVNaWE5sZENBOVBUMGdJVEFnSmlZZ2RHaHBjeTVwYm1adkxuSmxjMlYwS0Nrc0lISmxMbkpsYm1SbGNpaDFMQ0JUS1N3Z1pDNXpaWFIxY0V4cFoyaDBjeWg0TG5Cb2VYTnBZMkZzYkhsRGIzSnlaV04wVEdsbmFIUnpLU3dnVGk1cGMwRnljbUY1UTJGdFpYSmhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ1RpNWpZVzFsY21Gek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSEVnUFNBd0xDQmlaU0E5SUhvdWJHVnVaM1JvT3lCeElEd2dZbVU3SUhFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUVdVZ1BTQjZXM0ZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUzJFb2RTd2dVeXdnUVdVc0lFRmxMblpwWlhkd2IzSjBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMGdaV3h6WlNCTFlTaDFMQ0JUTENCT0tUc0tJQ0FnSUNBZ0lDQmZJQ0U5UFNCdWRXeHNJQ1ltSUNocUxuVndaR0YwWlUxMWJIUnBjMkZ0Y0d4bFVtVnVaR1Z5VkdGeVoyVjBLRjhwTENCcUxuVndaR0YwWlZKbGJtUmxjbFJoY21kbGRFMXBjRzFoY0NoZktTa3NJRk11YVhOVFkyVnVaU0E5UFQwZ0lUQWdKaVlnVXk1dmJrRm1kR1Z5VW1WdVpHVnlLSGdzSUZNc0lFNHBMQ0I0WlM1aWRXWm1aWEp6TG1SbGNIUm9Mbk5sZEZSbGMzUW9JVEFwTENCNFpTNWlkV1ptWlhKekxtUmxjSFJvTG5ObGRFMWhjMnNvSVRBcExDQjRaUzVpZFdabVpYSnpMbU52Ykc5eUxuTmxkRTFoYzJzb0lUQXBMQ0I0WlM1elpYUlFiMng1WjI5dVQyWm1jMlYwS0NFeEtTd2dVaTV5WlhObGRFUmxabUYxYkhSVGRHRjBaU2dwTENCNUlEMGdMVEVzSUdJZ1BTQnVkV3hzTENCdExuQnZjQ2dwTENCdExteGxibWQwYUNBK0lEQWdQeUJrSUQwZ2JWdHRMbXhsYm1kMGFDQXRJREZkSURvZ1pDQTlJRzUxYkd3c0lHWXVjRzl3S0Nrc0lHWXViR1Z1WjNSb0lENGdNQ0EvSUhVZ1BTQm1XMll1YkdWdVozUm9JQzBnTVYwZ09pQjFJRDBnYm5Wc2JEc0tJQ0FnSUgwN0NpQWdJQ0JtZFc1amRHbHZiaUJSWVNoVExDQk9MQ0JJTENCNktTQjdDaUFnSUNBZ0lDQWdhV1lnS0ZNdWRtbHphV0pzWlNBOVBUMGdJVEVwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JwWmlBb1V5NXNZWGxsY25NdWRHVnpkQ2hPTG14aGVXVnljeWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0ZNdWFYTkhjbTkxY0NrZ1NDQTlJRk11Y21WdVpHVnlUM0prWlhJN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLRk11YVhOTVQwUXBJRk11WVhWMGIxVndaR0YwWlNBOVBUMGdJVEFnSmlZZ1V5NTFjR1JoZEdVb1RpazdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0ZNdWFYTk1hV2RvZENrZ1pDNXdkWE5vVEdsbmFIUW9VeWtzSUZNdVkyRnpkRk5vWVdSdmR5QW1KaUJrTG5CMWMyaFRhR0ZrYjNjb1V5azdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0ZNdWFYTlRjSEpwZEdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doVXk1bWNuVnpkSFZ0UTNWc2JHVmtJSHg4SUc1bExtbHVkR1Z5YzJWamRITlRjSEpwZEdVb1V5a3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNklDWW1JR3hsTG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaFRMbTFoZEhKcGVGZHZjbXhrS1M1aGNIQnNlVTFoZEhKcGVEUW9hR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JCWlNBOUlGUmxMblZ3WkdGMFpTaFRLU3dnU1dVZ1BTQlRMbTFoZEdWeWFXRnNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVsbExuWnBjMmxpYkdVZ0ppWWdkUzV3ZFhOb0tGTXNJRUZsTENCSlpTd2dTQ3dnYkdVdWVpd2diblZzYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvS0ZNdWFYTk5aWE5vSUh4OElGTXVhWE5NYVc1bElIeDhJRk11YVhOUWIybHVkSE1wSUNZbUlDaFRMbWx6VTJ0cGJtNWxaRTFsYzJnZ0ppWWdVeTV6YTJWc1pYUnZiaTVtY21GdFpTQWhQVDBnVDJVdWNtVnVaR1Z5TG1aeVlXMWxJQ1ltSUNoVExuTnJaV3hsZEc5dUxuVndaR0YwWlNncExDQlRMbk5yWld4bGRHOXVMbVp5WVcxbElEMGdUMlV1Y21WdVpHVnlMbVp5WVcxbEtTd2dJVk11Wm5KMWMzUjFiVU4xYkd4bFpDQjhmQ0J1WlM1cGJuUmxjbk5sWTNSelQySnFaV04wS0ZNcEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlaUFtSmlCc1pTNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvVXk1dFlYUnlhWGhYYjNKc1pDa3VZWEJ3YkhsTllYUnlhWGcwS0dobEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JCWlNBOUlGUmxMblZ3WkdGMFpTaFRLU3dnU1dVZ1BTQlRMbTFoZEdWeWFXRnNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29TV1VwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhkbElEMGdRV1V1WjNKdmRYQnpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU0dVZ1BTQXdMQ0JFWlNBOUlIZGxMbXhsYm1kMGFEc2dTR1VnUENCRVpUc2dTR1VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjZaU0E5SUhkbFcwaGxYU3dnYW1VZ1BTQkpaVnQ2WlM1dFlYUmxjbWxoYkVsdVpHVjRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhbVVnSmlZZ2FtVXVkbWx6YVdKc1pTQW1KaUIxTG5CMWMyZ29VeXdnUVdVc0lHcGxMQ0JJTENCc1pTNTZMQ0I2WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElFbGxMblpwYzJsaWJHVWdKaVlnZFM1d2RYTm9LRk1zSUVGbExDQkpaU3dnU0N3Z2JHVXVlaXdnYm5Wc2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR0psSUQwZ1V5NWphR2xzWkhKbGJqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFRmxJRDBnTUN3Z1NXVWdQU0JpWlM1c1pXNW5kR2c3SUVGbElEd2dTV1U3SUVGbEt5c3BVV0VvWW1WYlFXVmRMQ0JPTENCSUxDQjZLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUV0aEtGTXNJRTRzSUVnc0lIb3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NTQTlJRk11YjNCaGNYVmxMQ0JpWlNBOUlGTXVkSEpoYm5OdGFYTnphWFpsTENCQlpTQTlJRk11ZEhKaGJuTndZWEpsYm5RN0NpQWdJQ0FnSUNBZ1pDNXpaWFIxY0V4cFoyaDBjMVpwWlhjb1NDa3NJR0psTG14bGJtZDBhQ0ErSURBZ0ppWWdiM1VvY1N3Z1Rpd2dTQ2tzSUhvZ0ppWWdlR1V1ZG1sbGQzQnZjblFvUVM1amIzQjVLSG9wS1N3Z2NTNXNaVzVuZEdnZ1BpQXdJQ1ltSUd0eUtIRXNJRTRzSUVncExDQmlaUzVzWlc1bmRHZ2dQaUF3SUNZbUlHdHlLR0psTENCT0xDQklLU3dnUVdVdWJHVnVaM1JvSUQ0Z01DQW1KaUJyY2loQlpTd2dUaXdnU0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnZkU2hUTENCT0xDQklLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tGY2dQVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUZsSUQwZ2J5QTlQVDBnSVRBZ0ppWWdaMlV1YVhOWFpXSkhURElnUFQwOUlDRXdJRDhnV0hNZ09pQkJkRHNLSUNBZ0lDQWdJQ0FnSUNBZ1Z5QTlJRzVsZHlCQlpTZ3hNREkwTENBeE1ESTBMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlc1bGNtRjBaVTFwY0cxaGNITTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dkR1V1WTI5dWRtVnlkQ2hyYmlrZ0lUMDlJRzUxYkd3Z1B5QnJiaUE2SUhKdUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXbHVSbWxzZEdWeU9pQlZhU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoWjBacGJIUmxjam9nY25Rc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2NtRndVem9nZG5Rc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2NtRndWRG9nZG5Rc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VNklIbGxMbWhoY3lnaVYwVkNSMHhmYlhWc2RHbHpZVzF3YkdWa1gzSmxibVJsY2w5MGIxOTBaWGgwZFhKbElpa0tJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ2VDNW5aWFJTWlc1a1pYSlVZWEpuWlhRb0tUc0tJQ0FnSUNBZ0lDQjRMbk5sZEZKbGJtUmxjbFJoY21kbGRDaFhLU3dnZUM1amJHVmhjaWdwT3dvZ0lDQWdJQ0FnSUd4bGRDQnhJRDBnZUM1MGIyNWxUV0Z3Y0dsdVp6c0tJQ0FnSUNBZ0lDQjRMblJ2Ym1WTllYQndhVzVuSUQwZ1gyNHNJR3R5S0ZNc0lFNHNJRWdwTENCNExuUnZibVZOWVhCd2FXNW5JRDBnY1N3Z2FpNTFjR1JoZEdWTmRXeDBhWE5oYlhCc1pWSmxibVJsY2xSaGNtZGxkQ2hYS1N3Z2FpNTFjR1JoZEdWU1pXNWtaWEpVWVhKblpYUk5hWEJ0WVhBb1Z5a3NJSGd1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLSG9wT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2EzSW9VeXdnVGl3Z1NDa2dld29nSUNBZ0lDQWdJR3hsZENCNklEMGdUaTVwYzFOalpXNWxJRDA5UFNBaE1DQS9JRTR1YjNabGNuSnBaR1ZOWVhSbGNtbGhiQ0E2SUc1MWJHdzdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnhJRDBnTUN3Z1ltVWdQU0JUTG14bGJtZDBhRHNnY1NBOElHSmxPeUJ4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FXVWdQU0JUVzNGZExDQkpaU0E5SUVGbExtOWlhbVZqZEN3Z2QyVWdQU0JCWlM1blpXOXRaWFJ5ZVN3Z1NHVWdQU0I2SUQwOVBTQnVkV3hzSUQ4Z1FXVXViV0YwWlhKcFlXd2dPaUI2TENCRVpTQTlJRUZsTG1keWIzVndPd29nSUNBZ0lDQWdJQ0FnSUNCSlpTNXNZWGxsY25NdWRHVnpkQ2hJTG14aGVXVnljeWtnSmlZZ1lYVW9TV1VzSUU0c0lFZ3NJSGRsTENCSVpTd2dSR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHRjFLRk1zSUU0c0lFZ3NJSG9zSUhFc0lHSmxLU0I3Q2lBZ0lDQWdJQ0FnVXk1dmJrSmxabTl5WlZKbGJtUmxjaWg0TENCT0xDQklMQ0I2TENCeExDQmlaU2tzSUZNdWJXOWtaV3hXYVdWM1RXRjBjbWw0TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vU0M1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVc0lGTXViV0YwY21sNFYyOXliR1FwTENCVExtNXZjbTFoYkUxaGRISnBlQzVuWlhST2IzSnRZV3hOWVhSeWFYZ29VeTV0YjJSbGJGWnBaWGROWVhSeWFYZ3BMQ0J4TG05dVFtVm1iM0psVW1WdVpHVnlLSGdzSUU0c0lFZ3NJSG9zSUZNc0lHSmxLU3dnY1M1MGNtRnVjM0JoY21WdWRDQTlQVDBnSVRBZ0ppWWdjUzV6YVdSbElEMDlQU0JEYVNBL0lDaHhMbk5wWkdVZ1BTQnBkQ3dnY1M1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCNExuSmxibVJsY2tKMVptWmxja1JwY21WamRDaElMQ0JPTENCNkxDQnhMQ0JUTENCaVpTa3NJSEV1YzJsa1pTQTlJRUZwTENCeExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIZ3VjbVZ1WkdWeVFuVm1abVZ5UkdseVpXTjBLRWdzSUU0c0lIb3NJSEVzSUZNc0lHSmxLU3dnY1M1emFXUmxJRDBnUTJrcElEb2dlQzV5Wlc1a1pYSkNkV1ptWlhKRWFYSmxZM1FvU0N3Z1Rpd2dlaXdnY1N3Z1V5d2dZbVVwTENCVExtOXVRV1owWlhKU1pXNWtaWElvZUN3Z1Rpd2dTQ3dnZWl3Z2NTd2dZbVVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VHOG9VeXdnVGl3Z1NDa2dld29nSUNBZ0lDQWdJRTR1YVhOVFkyVnVaU0FoUFQwZ0lUQWdKaVlnS0U0Z1BTQm1aU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIb2dQU0JITG1kbGRDaFRLU3dnY1NBOUlHUXVjM1JoZEdVdWJHbG5hSFJ6TENCaVpTQTlJR1F1YzNSaGRHVXVjMmhoWkc5M2MwRnljbUY1TENCQlpTQTlJSEV1YzNSaGRHVXVkbVZ5YzJsdmJpd2dTV1VnUFNCUVpTNW5aWFJRWVhKaGJXVjBaWEp6S0ZNc0lIRXVjM1JoZEdVc0lHSmxMQ0JPTENCSUtTd2dkMlVnUFNCUVpTNW5aWFJRY205bmNtRnRRMkZqYUdWTFpYa29TV1VwTENCSVpTQTlJSG91Y0hKdlozSmhiWE03Q2lBZ0lDQWdJQ0FnZWk1bGJuWnBjbTl1YldWdWRDQTlJRk11YVhOTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJDQS9JRTR1Wlc1MmFYSnZibTFsYm5RZ09pQnVkV3hzTENCNkxtWnZaeUE5SUU0dVptOW5MQ0I2TG1WdWRrMWhjQ0E5SUNoVExtbHpUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dnUHlCMVpTQTZJRXNwTG1kbGRDaFRMbVZ1ZGsxaGNDQjhmQ0I2TG1WdWRtbHliMjV0Wlc1MEtTd2dTR1VnUFQwOUlIWnZhV1FnTUNBbUppQW9VeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnVW1VcExDQklaU0E5SUc1bGR5Qk5ZWEFzSUhvdWNISnZaM0poYlhNZ1BTQklaU2s3Q2lBZ0lDQWdJQ0FnYkdWMElFUmxJRDBnU0dVdVoyVjBLSGRsS1RzS0lDQWdJQ0FnSUNCcFppQW9SR1VnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2VpNWpkWEp5Wlc1MFVISnZaM0poYlNBOVBUMGdSR1VnSmlZZ2VpNXNhV2RvZEhOVGRHRjBaVlpsY25OcGIyNGdQVDA5SUVGbEtTQnlaWFIxY200Z1pXd29VeXdnU1dVcExDQkVaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdTV1V1ZFc1cFptOXliWE1nUFNCUVpTNW5aWFJWYm1sbWIzSnRjeWhUS1N3Z1V5NXZia0oxYVd4a0tFZ3NJRWxsTENCNEtTd2dVeTV2YmtKbFptOXlaVU52YlhCcGJHVW9TV1VzSUhncExDQkVaU0E5SUZCbExtRmpjWFZwY21WUWNtOW5jbUZ0S0VsbExDQjNaU2tzSUVobExuTmxkQ2gzWlN3Z1JHVXBMQ0I2TG5WdWFXWnZjbTF6SUQwZ1NXVXVkVzVwWm05eWJYTTdDaUFnSUNBZ0lDQWdiR1YwSUhwbElEMGdlaTUxYm1sbWIzSnRjenNLSUNBZ0lDQWdJQ0FvSVZNdWFYTlRhR0ZrWlhKTllYUmxjbWxoYkNBbUppQWhVeTVwYzFKaGQxTm9ZV1JsY2sxaGRHVnlhV0ZzSUh4OElGTXVZMnhwY0hCcGJtY2dQVDA5SUNFd0tTQW1KaUFvZW1VdVkyeHBjSEJwYm1kUWJHRnVaWE1nUFNCS0xuVnVhV1p2Y20wcExDQmxiQ2hUTENCSlpTa3NJSG91Ym1WbFpITk1hV2RvZEhNZ1BTQm9kU2hUS1N3Z2VpNXNhV2RvZEhOVGRHRjBaVlpsY25OcGIyNGdQU0JCWlN3Z2VpNXVaV1ZrYzB4cFoyaDBjeUFtSmlBb2VtVXVZVzFpYVdWdWRFeHBaMmgwUTI5c2IzSXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExtRnRZbWxsYm5Rc0lIcGxMbXhwWjJoMFVISnZZbVV1ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbkJ5YjJKbExDQjZaUzVrYVhKbFkzUnBiMjVoYkV4cFoyaDBjeTUyWVd4MVpTQTlJSEV1YzNSaGRHVXVaR2x5WldOMGFXOXVZV3dzSUhwbExtUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2R6TG5aaGJIVmxJRDBnY1M1emRHRjBaUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkeXdnZW1VdWMzQnZkRXhwWjJoMGN5NTJZV3gxWlNBOUlIRXVjM1JoZEdVdWMzQnZkQ3dnZW1VdWMzQnZkRXhwWjJoMFUyaGhaRzkzY3k1MllXeDFaU0E5SUhFdWMzUmhkR1V1YzNCdmRGTm9ZV1J2ZHl3Z2VtVXVjbVZqZEVGeVpXRk1hV2RvZEhNdWRtRnNkV1VnUFNCeExuTjBZWFJsTG5KbFkzUkJjbVZoTENCNlpTNXNkR05mTVM1MllXeDFaU0E5SUhFdWMzUmhkR1V1Y21WamRFRnlaV0ZNVkVNeExDQjZaUzVzZEdOZk1pNTJZV3gxWlNBOUlIRXVjM1JoZEdVdWNtVmpkRUZ5WldGTVZFTXlMQ0I2WlM1d2IybHVkRXhwWjJoMGN5NTJZV3gxWlNBOUlIRXVjM1JoZEdVdWNHOXBiblFzSUhwbExuQnZhVzUwVEdsbmFIUlRhR0ZrYjNkekxuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1d2IybHVkRk5vWVdSdmR5d2dlbVV1YUdWdGFYTndhR1Z5WlV4cFoyaDBjeTUyWVd4MVpTQTlJSEV1YzNSaGRHVXVhR1Z0YVN3Z2VtVXVaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWEF1ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbVJwY21WamRHbHZibUZzVTJoaFpHOTNUV0Z3TENCNlpTNWthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhkSEpwZUM1MllXeDFaU0E5SUhFdWMzUmhkR1V1WkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhSeWFYZ3NJSHBsTG5Od2IzUlRhR0ZrYjNkTllYQXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExuTndiM1JUYUdGa2IzZE5ZWEFzSUhwbExuTndiM1JUYUdGa2IzZE5ZWFJ5YVhndWRtRnNkV1VnUFNCeExuTjBZWFJsTG5Od2IzUlRhR0ZrYjNkTllYUnlhWGdzSUhwbExuQnZhVzUwVTJoaFpHOTNUV0Z3TG5aaGJIVmxJRDBnY1M1emRHRjBaUzV3YjJsdWRGTm9ZV1J2ZDAxaGNDd2dlbVV1Y0c5cGJuUlRhR0ZrYjNkTllYUnlhWGd1ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbkJ2YVc1MFUyaGhaRzkzVFdGMGNtbDRLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FtVWdQU0JFWlM1blpYUlZibWxtYjNKdGN5Z3BMQ0JTYmlBOUlHSnVMbk5sY1ZkcGRHaFdZV3gxWlNocVpTNXpaWEVzSUhwbEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2VpNWpkWEp5Wlc1MFVISnZaM0poYlNBOUlFUmxMQ0I2TG5WdWFXWnZjbTF6VEdsemRDQTlJRkp1TENCRVpUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR1ZzS0ZNc0lFNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1NDQTlJRWN1WjJWMEtGTXBPd29nSUNBZ0lDQWdJRWd1YjNWMGNIVjBSVzVqYjJScGJtY2dQU0JPTG05MWRIQjFkRVZ1WTI5a2FXNW5MQ0JJTG1sdWMzUmhibU5wYm1jZ1BTQk9MbWx1YzNSaGJtTnBibWNzSUVndWMydHBibTVwYm1jZ1BTQk9Mbk5yYVc1dWFXNW5MQ0JJTG0xdmNuQm9WR0Z5WjJWMGN5QTlJRTR1Ylc5eWNHaFVZWEpuWlhSekxDQklMbTF2Y25Cb1RtOXliV0ZzY3lBOUlFNHViVzl5Y0doT2IzSnRZV3h6TENCSUxtMXZjbkJvVkdGeVoyVjBjME52ZFc1MElEMGdUaTV0YjNKd2FGUmhjbWRsZEhORGIzVnVkQ3dnU0M1dWRXMURiR2x3Y0dsdVoxQnNZVzVsY3lBOUlFNHViblZ0UTJ4cGNIQnBibWRRYkdGdVpYTXNJRWd1Ym5WdFNXNTBaWEp6WldOMGFXOXVJRDBnVGk1dWRXMURiR2x3U1c1MFpYSnpaV04wYVc5dUxDQklMblpsY25SbGVFRnNjR2hoY3lBOUlFNHVkbVZ5ZEdWNFFXeHdhR0Z6TENCSUxuWmxjblJsZUZSaGJtZGxiblJ6SUQwZ1RpNTJaWEowWlhoVVlXNW5aVzUwY3l3Z1NDNTBiMjVsVFdGd2NHbHVaeUE5SUU0dWRHOXVaVTFoY0hCcGJtYzdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJzZFNoVExDQk9MQ0JJTENCNkxDQnhLU0I3Q2lBZ0lDQWdJQ0FnVGk1cGMxTmpaVzVsSUNFOVBTQWhNQ0FtSmlBb1RpQTlJR1psS1N3Z2FpNXlaWE5sZEZSbGVIUjFjbVZWYm1sMGN5Z3BPd29nSUNBZ0lDQWdJR3hsZENCaVpTQTlJRTR1Wm05bkxDQkJaU0E5SUhvdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0EvSUU0dVpXNTJhWEp2Ym0xbGJuUWdPaUJ1ZFd4c0xDQkpaU0E5SUY4Z1BUMDlJRzUxYkd3Z1B5QjRMbTkxZEhCMWRFVnVZMjlrYVc1bklEb2dYeTUwWlhoMGRYSmxMbVZ1WTI5a2FXNW5MQ0IzWlNBOUlDaDZMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z1B5QjFaU0E2SUVzcExtZGxkQ2g2TG1WdWRrMWhjQ0I4ZkNCQlpTa3NJRWhsSUQwZ2VpNTJaWEowWlhoRGIyeHZjbk1nUFQwOUlDRXdJQ1ltSUNFaFNDNWhkSFJ5YVdKMWRHVnpMbU52Ykc5eUlDWW1JRWd1WVhSMGNtbGlkWFJsY3k1amIyeHZjaTVwZEdWdFUybDZaU0E5UFQwZ05Dd2dSR1VnUFNBaElYb3VibTl5YldGc1RXRndJQ1ltSUNFaFNDNWhkSFJ5YVdKMWRHVnpMblJoYm1kbGJuUXNJSHBsSUQwZ0lTRklMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpd2dhbVVnUFNBaElVZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxtNXZjbTFoYkN3Z1VtNGdQU0JJTG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaUEvSUVndWJXOXljR2hCZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TG14bGJtZDBhQ0E2SURBc0lHVnBJRDBnZWk1MGIyNWxUV0Z3Y0dWa0lEOGdlQzUwYjI1bFRXRndjR2x1WnlBNklGOXVMQ0JIWlNBOUlFY3VaMlYwS0hvcExDQklkQ0E5SUdRdWMzUmhkR1V1YkdsbmFIUnpPd29nSUNBZ0lDQWdJR2xtSUNoalpTQTlQVDBnSVRBZ0ppWWdLRllnUFQwOUlDRXdJSHg4SUZNZ0lUMDlJR0lwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUWRDQTlJRk1nUFQwOUlHSWdKaVlnZWk1cFpDQTlQVDBnZVRzS0lDQWdJQ0FnSUNBZ0lDQWdTaTV6WlhSVGRHRjBaU2g2TENCVExDQlFkQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmhkQ0E5SUNFeE93b2dJQ0FnSUNBZ0lIb3VkbVZ5YzJsdmJpQTlQVDBnUjJVdVgxOTJaWEp6YVc5dUlEOGdLRWRsTG01bFpXUnpUR2xuYUhSeklDWW1JRWRsTG14cFoyaDBjMU4wWVhSbFZtVnljMmx2YmlBaFBUMGdTSFF1YzNSaGRHVXVkbVZ5YzJsdmJpQjhmQ0JIWlM1dmRYUndkWFJGYm1OdlpHbHVaeUFoUFQwZ1NXVWdmSHdnY1M1cGMwbHVjM1JoYm1ObFpFMWxjMmdnSmlZZ1IyVXVhVzV6ZEdGdVkybHVaeUE5UFQwZ0lURWdmSHdnSVhFdWFYTkpibk4wWVc1alpXUk5aWE5vSUNZbUlFZGxMbWx1YzNSaGJtTnBibWNnUFQwOUlDRXdJSHg4SUhFdWFYTlRhMmx1Ym1Wa1RXVnphQ0FtSmlCSFpTNXphMmx1Ym1sdVp5QTlQVDBnSVRFZ2ZId2dJWEV1YVhOVGEybHVibVZrVFdWemFDQW1KaUJIWlM1emEybHVibWx1WnlBOVBUMGdJVEFnZkh3Z1IyVXVaVzUyVFdGd0lDRTlQU0IzWlNCOGZDQjZMbVp2WnlBbUppQkhaUzVtYjJjZ0lUMDlJR0psSUh4OElFZGxMbTUxYlVOc2FYQndhVzVuVUd4aGJtVnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tFZGxMbTUxYlVOc2FYQndhVzVuVUd4aGJtVnpJQ0U5UFNCS0xtNTFiVkJzWVc1bGN5QjhmQ0JIWlM1dWRXMUpiblJsY25ObFkzUnBiMjRnSVQwOUlFb3ViblZ0U1c1MFpYSnpaV04wYVc5dUtTQjhmQ0JIWlM1MlpYSjBaWGhCYkhCb1lYTWdJVDA5SUVobElIeDhJRWRsTG5abGNuUmxlRlJoYm1kbGJuUnpJQ0U5UFNCRVpTQjhmQ0JIWlM1dGIzSndhRlJoY21kbGRITWdJVDA5SUhwbElIeDhJRWRsTG0xdmNuQm9UbTl5YldGc2N5QWhQVDBnYW1VZ2ZId2dSMlV1ZEc5dVpVMWhjSEJwYm1jZ0lUMDlJR1ZwSUh4OElHZGxMbWx6VjJWaVIwd3lJRDA5UFNBaE1DQW1KaUJIWlM1dGIzSndhRlJoY21kbGRITkRiM1Z1ZENBaFBUMGdVbTRwSUNZbUlDaGhkQ0E5SUNFd0tTQTZJQ2hoZENBOUlDRXdMQ0JIWlM1ZlgzWmxjbk5wYjI0Z1BTQjZMblpsY25OcGIyNHBPd29nSUNBZ0lDQWdJR3hsZENCcmRDQTlJRWRsTG1OMWNuSmxiblJRY205bmNtRnRPd29nSUNBZ0lDQWdJR0YwSUQwOVBTQWhNQ0FtSmlBb2EzUWdQU0I0YnloNkxDQk9MQ0J4S1NrN0NpQWdJQ0FnSUNBZ2JHVjBJRWR5SUQwZ0lURXNJRWQwSUQwZ0lURXNJRnAwSUQwZ0lURXNJSGgwSUQwZ2EzUXVaMlYwVlc1cFptOXliWE1vS1N3Z1dHa2dQU0JIWlM1MWJtbG1iM0p0Y3pzS0lDQWdJQ0FnSUNCcFppQW9lR1V1ZFhObFVISnZaM0poYlNocmRDNXdjbTluY21GdEtTQW1KaUFvUjNJZ1BTQWhNQ3dnUjNRZ1BTQWhNQ3dnV25RZ1BTQWhNQ2tzSUhvdWFXUWdJVDA5SUhrZ0ppWWdLSGtnUFNCNkxtbGtMQ0JIZENBOUlDRXdLU3dnUjNJZ2ZId2dZaUFoUFQwZ1V5a2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9lSFF1YzJWMFZtRnNkV1VvV1N3Z0luQnliMnBsWTNScGIyNU5ZWFJ5YVhnaUxDQlRMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BMQ0JuWlM1c2IyZGhjbWwwYUcxcFkwUmxjSFJvUW5WbVptVnlJQ1ltSUhoMExuTmxkRlpoYkhWbEtGa3NJQ0pzYjJkRVpYQjBhRUoxWmtaRElpd2dNaUF2SUNoTllYUm9MbXh2WnloVExtWmhjaUFySURFcElDOGdUV0YwYUM1TVRqSXBLU3dnWWlBaFBUMGdVeUFtSmlBb1lpQTlJRk1zSUVkMElEMGdJVEFzSUZwMElEMGdJVEFwTENCNkxtbHpVMmhoWkdWeVRXRjBaWEpwWVd3Z2ZId2dlaTVwYzAxbGMyaFFhRzl1WjAxaGRHVnlhV0ZzSUh4OElIb3VhWE5OWlhOb1ZHOXZiazFoZEdWeWFXRnNJSHg4SUhvdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0I4ZkNCNkxtVnVkazFoY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkIwSUQwZ2VIUXViV0Z3TG1OaGJXVnlZVkJ2YzJsMGFXOXVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVSFFnSVQwOUlIWnZhV1FnTUNBbUppQlFkQzV6WlhSV1lXeDFaU2haTENCc1pTNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvVXk1dFlYUnlhWGhYYjNKc1pDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ2g2TG1selRXVnphRkJvYjI1blRXRjBaWEpwWVd3Z2ZId2dlaTVwYzAxbGMyaFViMjl1VFdGMFpYSnBZV3dnZkh3Z2VpNXBjMDFsYzJoTVlXMWlaWEowVFdGMFpYSnBZV3dnZkh3Z2VpNXBjMDFsYzJoQ1lYTnBZMDFoZEdWeWFXRnNJSHg4SUhvdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0I4ZkNCNkxtbHpVMmhoWkdWeVRXRjBaWEpwWVd3cElDWW1JSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSnBjMDl5ZEdodlozSmhjR2hwWXlJc0lGTXVhWE5QY25Sb2IyZHlZWEJvYVdORFlXMWxjbUVnUFQwOUlDRXdLU3dnS0hvdWFYTk5aWE5vVUdodmJtZE5ZWFJsY21saGJDQjhmQ0I2TG1selRXVnphRlJ2YjI1TllYUmxjbWxoYkNCOGZDQjZMbWx6VFdWemFFeGhiV0psY25STllYUmxjbWxoYkNCOGZDQjZMbWx6VFdWemFFSmhjMmxqVFdGMFpYSnBZV3dnZkh3Z2VpNXBjMDFsYzJoVGRHRnVaR0Z5WkUxaGRHVnlhV0ZzSUh4OElIb3VhWE5UYUdGa1pYSk5ZWFJsY21saGJDQjhmQ0I2TG1selUyaGhaRzkzVFdGMFpYSnBZV3dnZkh3Z2NTNXBjMU5yYVc1dVpXUk5aWE5vS1NBbUppQjRkQzV6WlhSV1lXeDFaU2haTENBaWRtbGxkMDFoZEhKcGVDSXNJRk11YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSEV1YVhOVGEybHVibVZrVFdWemFDa2dld29nSUNBZ0lDQWdJQ0FnSUNCNGRDNXpaWFJQY0hScGIyNWhiQ2haTENCeExDQWlZbWx1WkUxaGRISnBlQ0lwTENCNGRDNXpaWFJQY0hScGIyNWhiQ2haTENCeExDQWlZbWx1WkUxaGRISnBlRWx1ZG1WeWMyVWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkIwSUQwZ2NTNXphMlZzWlhSdmJqc0tJQ0FnSUNBZ0lDQWdJQ0FnVUhRZ0ppWWdLR2RsTG1ac2IyRjBWbVZ5ZEdWNFZHVjRkSFZ5WlhNZ1B5QW9VSFF1WW05dVpWUmxlSFIxY21VZ1BUMDlJRzUxYkd3Z0ppWWdVSFF1WTI5dGNIVjBaVUp2Ym1WVVpYaDBkWEpsS0Nrc0lIaDBMbk5sZEZaaGJIVmxLRmtzSUNKaWIyNWxWR1Y0ZEhWeVpTSXNJRkIwTG1KdmJtVlVaWGgwZFhKbExDQnFLU3dnZUhRdWMyVjBWbUZzZFdVb1dTd2dJbUp2Ym1WVVpYaDBkWEpsVTJsNlpTSXNJRkIwTG1KdmJtVlVaWGgwZFhKbFUybDZaU2twSURvZ2VIUXVjMlYwVDNCMGFXOXVZV3dvV1N3Z1VIUXNJQ0ppYjI1bFRXRjBjbWxqWlhNaUtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQWhJVWdnSmlZZ0tFZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUlDRTlQU0IyYjJsa0lEQWdmSHdnU0M1dGIzSndhRUYwZEhKcFluVjBaWE11Ym05eWJXRnNJQ0U5UFNCMmIybGtJREFwSUNZbUlGb3VkWEJrWVhSbEtIRXNJRWdzSUhvc0lHdDBLU3dnS0VkMElIeDhJRWRsTG5KbFkyVnBkbVZUYUdGa2IzY2dJVDA5SUhFdWNtVmpaV2wyWlZOb1lXUnZkeWtnSmlZZ0tFZGxMbkpsWTJWcGRtVlRhR0ZrYjNjZ1BTQnhMbkpsWTJWcGRtVlRhR0ZrYjNjc0lIaDBMbk5sZEZaaGJIVmxLRmtzSUNKeVpXTmxhWFpsVTJoaFpHOTNJaXdnY1M1eVpXTmxhWFpsVTJoaFpHOTNLU2tzSUVkMElDWW1JQ2g0ZEM1elpYUldZV3gxWlNoWkxDQWlkRzl1WlUxaGNIQnBibWRGZUhCdmMzVnlaU0lzSUhndWRHOXVaVTFoY0hCcGJtZEZlSEJ2YzNWeVpTa3NJRWRsTG01bFpXUnpUR2xuYUhSeklDWW1JR04xS0ZocExDQmFkQ2tzSUdKbElDWW1JSG91Wm05bklDWW1JRmxsTG5KbFpuSmxjMmhHYjJkVmJtbG1iM0p0Y3loWWFTd2dZbVVwTENCWlpTNXlaV1p5WlhOb1RXRjBaWEpwWVd4VmJtbG1iM0p0Y3loWWFTd2dlaXdnVUN3Z1Fpd2dWeWtzSUdKdUxuVndiRzloWkNoWkxDQkhaUzUxYm1sbWIzSnRjMHhwYzNRc0lGaHBMQ0JxS1Nrc0lIb3VhWE5UYUdGa1pYSk5ZWFJsY21saGJDQW1KaUI2TG5WdWFXWnZjbTF6VG1WbFpGVndaR0YwWlNBOVBUMGdJVEFnSmlZZ0tHSnVMblZ3Ykc5aFpDaFpMQ0JIWlM1MWJtbG1iM0p0YzB4cGMzUXNJRmhwTENCcUtTd2dlaTUxYm1sbWIzSnRjMDVsWldSVmNHUmhkR1VnUFNBaE1Ta3NJSG91YVhOVGNISnBkR1ZOWVhSbGNtbGhiQ0FtSmlCNGRDNXpaWFJXWVd4MVpTaFpMQ0FpWTJWdWRHVnlJaXdnY1M1alpXNTBaWElwTENCNGRDNXpaWFJXWVd4MVpTaFpMQ0FpYlc5a1pXeFdhV1YzVFdGMGNtbDRJaXdnY1M1dGIyUmxiRlpwWlhkTllYUnlhWGdwTENCNGRDNXpaWFJXWVd4MVpTaFpMQ0FpYm05eWJXRnNUV0YwY21sNElpd2djUzV1YjNKdFlXeE5ZWFJ5YVhncExDQjRkQzV6WlhSV1lXeDFaU2haTENBaWJXOWtaV3hOWVhSeWFYZ2lMQ0J4TG0xaGRISnBlRmR2Y214a0tTd2dhM1E3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCamRTaFRMQ0JPS1NCN0NpQWdJQ0FnSUNBZ1V5NWhiV0pwWlc1MFRHbG5hSFJEYjJ4dmNpNXVaV1ZrYzFWd1pHRjBaU0E5SUU0c0lGTXViR2xuYUhSUWNtOWlaUzV1WldWa2MxVndaR0YwWlNBOUlFNHNJRk11WkdseVpXTjBhVzl1WVd4TWFXZG9kSE11Ym1WbFpITlZjR1JoZEdVZ1BTQk9MQ0JUTG1ScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzZHpMbTVsWldSelZYQmtZWFJsSUQwZ1Rpd2dVeTV3YjJsdWRFeHBaMmgwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJRTRzSUZNdWNHOXBiblJNYVdkb2RGTm9ZV1J2ZDNNdWJtVmxaSE5WY0dSaGRHVWdQU0JPTENCVExuTndiM1JNYVdkb2RITXVibVZsWkhOVmNHUmhkR1VnUFNCT0xDQlRMbk53YjNSTWFXZG9kRk5vWVdSdmQzTXVibVZsWkhOVmNHUmhkR1VnUFNCT0xDQlRMbkpsWTNSQmNtVmhUR2xuYUhSekxtNWxaV1J6VlhCa1lYUmxJRDBnVGl3Z1V5NW9aVzFwYzNCb1pYSmxUR2xuYUhSekxtNWxaV1J6VlhCa1lYUmxJRDBnVGpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHaDFLRk1wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVXk1cGMwMWxjMmhNWVcxaVpYSjBUV0YwWlhKcFlXd2dmSHdnVXk1cGMwMWxjMmhVYjI5dVRXRjBaWEpwWVd3Z2ZId2dVeTVwYzAxbGMyaFFhRzl1WjAxaGRHVnlhV0ZzSUh4OElGTXVhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNCOGZDQlRMbWx6VTJoaFpHOTNUV0YwWlhKcFlXd2dmSHdnVXk1cGMxTm9ZV1JsY2sxaGRHVnlhV0ZzSUNZbUlGTXViR2xuYUhSeklEMDlQU0FoTURzS0lDQWdJSDBLSUNBZ0lIUm9hWE11WjJWMFFXTjBhWFpsUTNWaVpVWmhZMlVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1p6c0tJQ0FnSUgwc0lIUm9hWE11WjJWMFFXTjBhWFpsVFdsd2JXRndUR1YyWld3Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjRHNLSUNBZ0lIMHNJSFJvYVhNdVoyVjBVbVZ1WkdWeVZHRnlaMlYwSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGODdDaUFnSUNCOUxDQjBhR2x6TG5ObGRGSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVnpJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpd2dTQ2tnZXdvZ0lDQWdJQ0FnSUVjdVoyVjBLRk11ZEdWNGRIVnlaU2t1WDE5M1pXSm5iRlJsZUhSMWNtVWdQU0JPTENCSExtZGxkQ2hUTG1SbGNIUm9WR1Y0ZEhWeVpTa3VYMTkzWldKbmJGUmxlSFIxY21VZ1BTQklPd29nSUNBZ0lDQWdJR3hsZENCNklEMGdSeTVuWlhRb1V5azdDaUFnSUNBZ0lDQWdlaTVmWDJoaGMwVjRkR1Z5Ym1Gc1ZHVjRkSFZ5WlhNZ1BTQWhNQ3dnZWk1ZlgyaGhjMFY0ZEdWeWJtRnNWR1Y0ZEhWeVpYTWdKaVlnS0hvdVgxOWhkWFJ2UVd4c2IyTmhkR1ZFWlhCMGFFSjFabVpsY2lBOUlFZ2dQVDA5SUhadmFXUWdNQ3dnZWk1ZlgyRjFkRzlCYkd4dlkyRjBaVVJsY0hSb1FuVm1abVZ5SUh4OElGTXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbkpsYm1SbGNpMTBieTEwWlhoMGRYSmxJR1Y0ZEdWdWMybHZiaUIzWVhNZ1pHbHpZV0pzWldRZ1ltVmpZWFZ6WlNCaGJpQmxlSFJsY201aGJDQjBaWGgwZFhKbElIZGhjeUJ3Y205MmFXUmxaQ0lwTENCVExuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTQTlJQ0V4TENCVExuVnpaVkpsYm1SbGNtSjFabVpsY2lBOUlDRXdLU2s3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRkpsYm1SbGNsUmhjbWRsZEVaeVlXMWxZblZtWm1WeUlEMGdablZ1WTNScGIyNG9VeXdnVGlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JJSUQwZ1J5NW5aWFFvVXlrN0NpQWdJQ0FnSUNBZ1NDNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSWdQU0JPTENCSUxsOWZkWE5sUkdWbVlYVnNkRVp5WVcxbFluVm1abVZ5SUQwZ1RpQTlQVDBnZG05cFpDQXdPd29nSUNBZ2ZTd2dkR2hwY3k1elpYUlNaVzVrWlhKVVlYSm5aWFFnUFNCbWRXNWpkR2x2YmloVExDQk9JRDBnTUN3Z1NDQTlJREFwSUhzS0lDQWdJQ0FnSUNCZklEMGdVeXdnWnlBOUlFNHNJSEFnUFNCSU93b2dJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ0lUQTdDaUFnSUNBZ0lDQWdhV1lnS0ZNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZGxJRDBnUnk1blpYUW9VeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZGxMbDlmZFhObFJHVm1ZWFZzZEVaeVlXMWxZblZtWm1WeUlDRTlQU0IyYjJsa0lEQWdQeUFvZUdVdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1UWXdMQ0J1ZFd4c0tTd2dlaUE5SUNFeEtTQTZJSGRsTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2lBOVBUMGdkbTlwWkNBd0lEOGdhaTV6WlhSMWNGSmxibVJsY2xSaGNtZGxkQ2hUS1NBNklIZGxMbDlmYUdGelJYaDBaWEp1WVd4VVpYaDBkWEpsY3lBbUppQnFMbkpsWW1sdVpGUmxlSFIxY21WektGTXNJRWN1WjJWMEtGTXVkR1Y0ZEhWeVpTa3VYMTkzWldKbmJGUmxlSFIxY21Vc0lFY3VaMlYwS0ZNdVpHVndkR2hVWlhoMGRYSmxLUzVmWDNkbFltZHNWR1Y0ZEhWeVpTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCeElEMGdiblZzYkN3Z1ltVWdQU0FoTVN3Z1FXVWdQU0FoTVRzS0lDQWdJQ0FnSUNCcFppQW9VeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZDJVZ1BTQlRMblJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNoM1pTNXBjMFJoZEdGVVpYaDBkWEpsTTBRZ2ZId2dkMlV1YVhORVlYUmhWR1Y0ZEhWeVpUSkVRWEp5WVhrcElDWW1JQ2hCWlNBOUlDRXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRWhsSUQwZ1J5NW5aWFFvVXlrdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeU93b2dJQ0FnSUNBZ0lDQWdJQ0JUTG1selYyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBJRDhnS0hFZ1BTQklaVnRPWFN3Z1ltVWdQU0FoTUNrZ09pQlRMblZ6WlZKbGJtUmxjbUoxWm1abGNpQS9JSEVnUFNCSExtZGxkQ2hUS1M1ZlgzZGxZbWRzVFhWc2RHbHpZVzF3YkdWa1JuSmhiV1ZpZFdabVpYSWdPaUJ4SUQwZ1NHVXNJRUV1WTI5d2VTaFRMblpwWlhkd2IzSjBLU3dnVEM1amIzQjVLRk11YzJOcGMzTnZjaWtzSUVrZ1BTQlRMbk5qYVhOemIzSlVaWE4wT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JCTG1OdmNIa29SQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9VQ2t1Wm14dmIzSW9LU3dnVEM1amIzQjVLRlVwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRkFwTG1ac2IyOXlLQ2tzSUVrZ1BTQkdPd29nSUNBZ0lDQWdJR2xtSUNoNFpTNWlhVzVrUm5KaGJXVmlkV1ptWlhJb016WXhOakFzSUhFcElDWW1JR2RsTG1SeVlYZENkV1ptWlhKeklDWW1JSG9wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhkbElEMGdJVEU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hUS1NCcFppQW9VeTVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTR1VnUFNCVExuUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9UeTVzWlc1bmRHZ2dJVDA5SUVobExteGxibWQwYUNCOGZDQlBXekJkSUNFOVBTQXpOakEyTkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdSR1VnUFNBd0xDQjZaU0E5SUVobExteGxibWQwYURzZ1JHVWdQQ0I2WlRzZ1JHVXJLeWxQVzBSbFhTQTlJRE0yTURZMElDc2dSR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1R5NXNaVzVuZEdnZ1BTQklaUzVzWlc1bmRHZ3NJSGRsSUQwZ0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0FvVHk1c1pXNW5kR2dnSVQwOUlERWdmSHdnVDFzd1hTQWhQVDBnTXpZd05qUXBJQ1ltSUNoUFd6QmRJRDBnTXpZd05qUXNJRTh1YkdWdVozUm9JRDBnTVN3Z2QyVWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ0tFOHViR1Z1WjNSb0lDRTlQU0F4SUh4OElFOWJNRjBnSVQwOUlERXdNamtwSUNZbUlDaFBXekJkSUQwZ01UQXlPU3dnVHk1c1pXNW5kR2dnUFNBeExDQjNaU0E5SUNFd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJVZ0ppWWdLR2RsTG1selYyVmlSMHd5SUQ4Z1dTNWtjbUYzUW5WbVptVnljeWhQS1NBNklIbGxMbWRsZENnaVYwVkNSMHhmWkhKaGQxOWlkV1ptWlhKeklpa3VaSEpoZDBKMVptWmxjbk5YUlVKSFRDaFBLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDRaUzUyYVdWM2NHOXlkQ2hCS1N3Z2VHVXVjMk5wYzNOdmNpaE1LU3dnZUdVdWMyVjBVMk5wYzNOdmNsUmxjM1FvU1Nrc0lHSmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IzWlNBOUlFY3VaMlYwS0ZNdWRHVjRkSFZ5WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJRmt1Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtRb016WXhOakFzSURNMk1EWTBMQ0F6TkRBMk9TQXJJRTRzSUhkbExsOWZkMlZpWjJ4VVpYaDBkWEpsTENCSUtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRUZsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCM1pTQTlJRWN1WjJWMEtGTXVkR1Y0ZEhWeVpTa3NJRWhsSUQwZ1RpQjhmQ0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQlpMbVp5WVcxbFluVm1abVZ5VkdWNGRIVnlaVXhoZVdWeUtETTJNVFl3TENBek5qQTJOQ3dnZDJVdVgxOTNaV0puYkZSbGVIUjFjbVVzSUVnZ2ZId2dNQ3dnU0dVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjVJRDBnTFRFN0NpQWdJQ0I5TENCMGFHbHpMbkpsWVdSU1pXNWtaWEpVWVhKblpYUlFhWGhsYkhNZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUxDQjZMQ0J4TENCaVpTd2dRV1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9JU2hUSUNZbUlGTXVhWE5YWldKSFRGSmxibVJsY2xSaGNtZGxkQ2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNpNXlaV0ZrVW1WdVpHVnlWR0Z5WjJWMFVHbDRaV3h6T2lCeVpXNWtaWEpVWVhKblpYUWdhWE1nYm05MElGUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCSlpTQTlJRWN1WjJWMEtGTXBMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjanNLSUNBZ0lDQWdJQ0JwWmlBb1V5NXBjMWRsWWtkTVEzVmlaVkpsYm1SbGNsUmhjbWRsZENBbUppQkJaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaEpaU0E5SUVsbFcwRmxYU2tzSUVsbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhobExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnU1dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwY25rZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGRsSUQwZ1V5NTBaWGgwZFhKbExDQklaU0E5SUhkbExtWnZjbTFoZEN3Z1JHVWdQU0IzWlM1MGVYQmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VobElDRTlQU0JqZENBbUppQjBaUzVqYjI1MlpYSjBLRWhsS1NBaFBUMGdXUzVuWlhSUVlYSmhiV1YwWlhJb016VTNNemtwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNpNXlaV0ZrVW1WdVpHVnlWR0Z5WjJWMFVHbDRaV3h6T2lCeVpXNWtaWEpVWVhKblpYUWdhWE1nYm05MElHbHVJRkpIUWtFZ2IzSWdhVzF3YkdWdFpXNTBZWFJwYjI0Z1pHVm1hVzVsWkNCbWIzSnRZWFF1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSHBsSUQwZ1JHVWdQVDA5SUd0dUlDWW1JQ2g1WlM1b1lYTW9Ja1ZZVkY5amIyeHZjbDlpZFdabVpYSmZhR0ZzWmw5bWJHOWhkQ0lwSUh4OElHZGxMbWx6VjJWaVIwd3lJQ1ltSUhsbExtaGhjeWdpUlZoVVgyTnZiRzl5WDJKMVptWmxjbDltYkc5aGRDSXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoRVpTQWhQVDBnY200Z0ppWWdkR1V1WTI5dWRtVnlkQ2hFWlNrZ0lUMDlJRmt1WjJWMFVHRnlZVzFsZEdWeUtETTFOek00S1NBbUppQWhLRVJsSUQwOVBTQnViaUFtSmlBb1oyVXVhWE5YWldKSFRESWdmSHdnZVdVdWFHRnpLQ0pQUlZOZmRHVjRkSFZ5WlY5bWJHOWhkQ0lwSUh4OElIbGxMbWhoY3lnaVYwVkNSMHhmWTI5c2IzSmZZblZtWm1WeVgyWnNiMkYwSWlrcEtTQW1KaUFoZW1VcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlMbkpsWVdSU1pXNWtaWEpVWVhKblpYUlFhWGhsYkhNNklISmxibVJsY2xSaGNtZGxkQ0JwY3lCdWIzUWdhVzRnVlc1emFXZHVaV1JDZVhSbFZIbHdaU0J2Y2lCcGJYQnNaVzFsYm5SaGRHbHZiaUJrWldacGJtVmtJSFI1Y0dVdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdXUzVqYUdWamEwWnlZVzFsWW5WbVptVnlVM1JoZEhWektETTJNVFl3S1NBOVBUMGdNell3TlRNZ1B5Qk9JRDQ5SURBZ0ppWWdUaUE4UFNCVExuZHBaSFJvSUMwZ2VpQW1KaUJJSUQ0OUlEQWdKaVlnU0NBOFBTQlRMbWhsYVdkb2RDQXRJSEVnSmlZZ1dTNXlaV0ZrVUdsNFpXeHpLRTRzSUVnc0lIb3NJSEVzSUhSbExtTnZiblpsY25Rb1NHVXBMQ0IwWlM1amIyNTJaWEowS0VSbEtTd2dZbVVwSURvZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2k1eVpXRmtVbVZ1WkdWeVZHRnlaMlYwVUdsNFpXeHpPaUJ5WldGa1VHbDRaV3h6SUdaeWIyMGdjbVZ1WkdWeVZHRnlaMlYwSUdaaGFXeGxaQzRnUm5KaGJXVmlkV1ptWlhJZ2JtOTBJR052YlhCc1pYUmxMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1pwYm1Gc2JIbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZDJVZ1BTQmZJQ0U5UFNCdWRXeHNJRDhnUnk1blpYUW9YeWt1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5SURvZ2JuVnNiRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGhsTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2dkMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd2dkR2hwY3k1amIzQjVSbkpoYldWaWRXWm1aWEpVYjFSbGVIUjFjbVVnUFNCbWRXNWpkR2x2YmloVExDQk9MQ0JJSUQwZ01Da2dld29nSUNBZ0lDQWdJR2xtSUNoT0xtbHpSbkpoYldWaWRXWm1aWEpVWlhoMGRYSmxJQ0U5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCamIzQjVSbkpoYldWaWRXWm1aWEpVYjFSbGVIUjFjbVVvS1NCallXNGdiMjVzZVNCaVpTQjFjMlZrSUhkcGRHZ2dSbkpoYldWaWRXWm1aWEpVWlhoMGRYSmxMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ1RXRjBhQzV3YjNjb01pd2dMVWdwTENCeElEMGdUV0YwYUM1bWJHOXZjaWhPTG1sdFlXZGxMbmRwWkhSb0lDb2dlaWtzSUdKbElEMGdUV0YwYUM1bWJHOXZjaWhPTG1sdFlXZGxMbWhsYVdkb2RDQXFJSG9wT3dvZ0lDQWdJQ0FnSUdvdWMyVjBWR1Y0ZEhWeVpUSkVLRTRzSURBcExDQlpMbU52Y0hsVVpYaFRkV0pKYldGblpUSkVLRE0xTlRNc0lFZ3NJREFzSURBc0lGTXVlQ3dnVXk1NUxDQnhMQ0JpWlNrc0lIaGxMblZ1WW1sdVpGUmxlSFIxY21Vb0tUc0tJQ0FnSUgwc0lIUm9hWE11WTI5d2VWUmxlSFIxY21WVWIxUmxlSFIxY21VZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUxDQjZJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J4SUQwZ1RpNXBiV0ZuWlM1M2FXUjBhQ3dnWW1VZ1BTQk9MbWx0WVdkbExtaGxhV2RvZEN3Z1FXVWdQU0IwWlM1amIyNTJaWEowS0VndVptOXliV0YwS1N3Z1NXVWdQU0IwWlM1amIyNTJaWEowS0VndWRIbHdaU2s3Q2lBZ0lDQWdJQ0FnYWk1elpYUlVaWGgwZFhKbE1rUW9TQ3dnTUNrc0lGa3VjR2w0Wld4VGRHOXlaV2tvTXpjME5EQXNJRWd1Wm14cGNGa3BMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETTNORFF4TENCSUxuQnlaVzExYkhScGNHeDVRV3h3YUdFcExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNek1UY3NJRWd1ZFc1d1lXTnJRV3hwWjI1dFpXNTBLU3dnVGk1cGMwUmhkR0ZVWlhoMGRYSmxJRDhnV1M1MFpYaFRkV0pKYldGblpUSkVLRE0xTlRNc0lIb3NJRk11ZUN3Z1V5NTVMQ0J4TENCaVpTd2dRV1VzSUVsbExDQk9MbWx0WVdkbExtUmhkR0VwSURvZ1RpNXBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxJRDhnV1M1amIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXlSQ2d6TlRVekxDQjZMQ0JUTG5nc0lGTXVlU3dnVGk1dGFYQnRZWEJ6V3pCZExuZHBaSFJvTENCT0xtMXBjRzFoY0hOYk1GMHVhR1ZwWjJoMExDQkJaU3dnVGk1dGFYQnRZWEJ6V3pCZExtUmhkR0VwSURvZ1dTNTBaWGhUZFdKSmJXRm5aVEpFS0RNMU5UTXNJSG9zSUZNdWVDd2dVeTU1TENCQlpTd2dTV1VzSUU0dWFXMWhaMlVwTENCNklEMDlQU0F3SUNZbUlFZ3VaMlZ1WlhKaGRHVk5hWEJ0WVhCeklDWW1JRmt1WjJWdVpYSmhkR1ZOYVhCdFlYQW9NelUxTXlrc0lIaGxMblZ1WW1sdVpGUmxlSFIxY21Vb0tUc0tJQ0FnSUgwc0lIUm9hWE11WTI5d2VWUmxlSFIxY21WVWIxUmxlSFIxY21VelJDQTlJR1oxYm1OMGFXOXVLRk1zSUU0c0lFZ3NJSG9zSUhFZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIZ3VhWE5YWldKSFRERlNaVzVrWlhKbGNpa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEl1WTI5d2VWUmxlSFIxY21WVWIxUmxlSFIxY21VelJEb2dZMkZ1SUc5dWJIa2dZbVVnZFhObFpDQjNhWFJvSUZkbFlrZE1NaTRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWW1VZ1BTQlRMbTFoZUM1NElDMGdVeTV0YVc0dWVDQXJJREVzSUVGbElEMGdVeTV0WVhndWVTQXRJRk11YldsdUxua2dLeUF4TENCSlpTQTlJRk11YldGNExub2dMU0JUTG0xcGJpNTZJQ3NnTVN3Z2QyVWdQU0IwWlM1amIyNTJaWEowS0hvdVptOXliV0YwS1N3Z1NHVWdQU0IwWlM1amIyNTJaWEowS0hvdWRIbHdaU2tzSUVSbE93b2dJQ0FnSUNBZ0lHbG1JQ2g2TG1selJHRjBZVlJsZUhSMWNtVXpSQ2tnYWk1elpYUlVaWGgwZFhKbE0wUW9laXdnTUNrc0lFUmxJRDBnTXpJNE56azdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9laTVwYzBSaGRHRlVaWGgwZFhKbE1rUkJjbkpoZVNrZ2FpNXpaWFJVWlhoMGRYSmxNa1JCY25KaGVTaDZMQ0F3S1N3Z1JHVWdQU0F6TlRnMk5qc0tJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeUxtTnZjSGxVWlhoMGRYSmxWRzlVWlhoMGRYSmxNMFE2SUc5dWJIa2djM1Z3Y0c5eWRITWdWRWhTUlVVdVJHRjBZVlJsZUhSMWNtVXpSQ0JoYm1RZ1ZFaFNSVVV1UkdGMFlWUmxlSFIxY21VeVJFRnljbUY1TGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRmt1Y0dsNFpXeFRkRzl5Wldrb016YzBOREFzSUhvdVpteHBjRmtwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE0zTkRReExDQjZMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRXBMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXpNVGNzSUhvdWRXNXdZV05yUVd4cFoyNXRaVzUwS1RzS0lDQWdJQ0FnSUNCc1pYUWdlbVVnUFNCWkxtZGxkRkJoY21GdFpYUmxjaWd6TXpFMEtTd2dhbVVnUFNCWkxtZGxkRkJoY21GdFpYUmxjaWd6TWpnM09Da3NJRkp1SUQwZ1dTNW5aWFJRWVhKaGJXVjBaWElvTXpNeE5pa3NJR1ZwSUQwZ1dTNW5aWFJRWVhKaGJXVjBaWElvTXpNeE5Ta3NJRWRsSUQwZ1dTNW5aWFJRWVhKaGJXVjBaWElvTXpJNE56Y3BMQ0JJZENBOUlFZ3VhWE5EYjIxd2NtVnpjMlZrVkdWNGRIVnlaU0EvSUVndWJXbHdiV0Z3YzFzd1hTQTZJRWd1YVcxaFoyVTdDaUFnSUNBZ0lDQWdXUzV3YVhobGJGTjBiM0psYVNnek16RTBMQ0JJZEM1M2FXUjBhQ2tzSUZrdWNHbDRaV3hUZEc5eVpXa29Nekk0Tnpnc0lFaDBMbWhsYVdkb2RDa3NJRmt1Y0dsNFpXeFRkRzl5Wldrb016TXhOaXdnVXk1dGFXNHVlQ2tzSUZrdWNHbDRaV3hUZEc5eVpXa29Nek14TlN3Z1V5NXRhVzR1ZVNrc0lGa3VjR2w0Wld4VGRHOXlaV2tvTXpJNE56Y3NJRk11YldsdUxub3BMQ0JJTG1selJHRjBZVlJsZUhSMWNtVWdmSHdnU0M1cGMwUmhkR0ZVWlhoMGRYSmxNMFFnUHlCWkxuUmxlRk4xWWtsdFlXZGxNMFFvUkdVc0lIRXNJRTR1ZUN3Z1RpNTVMQ0JPTG5vc0lHSmxMQ0JCWlN3Z1NXVXNJSGRsTENCSVpTd2dTSFF1WkdGMFlTa2dPaUJJTG1selEyOXRjSEpsYzNObFpGUmxlSFIxY21VZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeUxtTnZjSGxVWlhoMGRYSmxWRzlVWlhoMGRYSmxNMFE2SUhWdWRHVnpkR1ZrSUhOMWNIQnZjblFnWm05eUlHTnZiWEJ5WlhOelpXUWdjM0pqVkdWNGRIVnlaUzRpS1N3Z1dTNWpiMjF3Y21WemMyVmtWR1Y0VTNWaVNXMWhaMlV6UkNoRVpTd2djU3dnVGk1NExDQk9MbmtzSUU0dWVpd2dZbVVzSUVGbExDQkpaU3dnZDJVc0lFaDBMbVJoZEdFcEtTQTZJRmt1ZEdWNFUzVmlTVzFoWjJVelJDaEVaU3dnY1N3Z1RpNTRMQ0JPTG5rc0lFNHVlaXdnWW1Vc0lFRmxMQ0JKWlN3Z2QyVXNJRWhsTENCSWRDa3NJRmt1Y0dsNFpXeFRkRzl5Wldrb016TXhOQ3dnZW1VcExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNeU9EYzRMQ0JxWlNrc0lGa3VjR2w0Wld4VGRHOXlaV2tvTXpNeE5pd2dVbTRwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE16TVRVc0lHVnBLU3dnV1M1d2FYaGxiRk4wYjNKbGFTZ3pNamczTnl3Z1IyVXBMQ0J4SUQwOVBTQXdJQ1ltSUhvdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUNZbUlGa3VaMlZ1WlhKaGRHVk5hWEJ0WVhBb1JHVXBMQ0I0WlM1MWJtSnBibVJVWlhoMGRYSmxLQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxtbHVhWFJVWlhoMGRYSmxJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lHb3VjMlYwVkdWNGRIVnlaVEpFS0ZNc0lEQXBMQ0I0WlM1MWJtSnBibVJVWlhoMGRYSmxLQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxuSmxjMlYwVTNSaGRHVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCbklEMGdNQ3dnY0NBOUlEQXNJRjhnUFNCdWRXeHNMQ0I0WlM1eVpYTmxkQ2dwTENCU0xuSmxjMlYwS0NrN0NpQWdJQ0I5TENCMGVYQmxiMllnWDE5VVNGSkZSVjlFUlZaVVQwOU1VMTlmSUR3Z0luVWlJQ1ltSUY5ZlZFaFNSVVZmUkVWV1ZFOVBURk5mWHk1a2FYTndZWFJqYUVWMlpXNTBLRzVsZHlCRGRYTjBiMjFGZG1WdWRDZ2liMkp6WlhKMlpTSXNJSHNLSUNBZ0lDQWdJQ0JrWlhSaGFXdzZJSFJvYVhNS0lDQWdJSDBwS1RzS2ZRcHhaUzV3Y205MGIzUjVjR1V1YVhOWFpXSkhURkpsYm1SbGNtVnlJRDBnSVRBN0NuWmhjaUJmYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nY1dVZ2V3cDlPd3BmYUM1d2NtOTBiM1I1Y0dVdWFYTlhaV0pIVERGU1pXNWtaWEpsY2lBOUlDRXdPd3AyWVhJZ1RuSWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwSUQwZ01qVmxMVFVwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVibUZ0WlNBOUlDSWlMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0dVcExDQjBhR2x6TG1SbGJuTnBkSGtnUFNCME93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJPY2loMGFHbHpMbU52Ykc5eUxDQjBhR2x6TG1SbGJuTnBkSGtwT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSkdiMmRGZUhBeUlpd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJSFJvYVhNdVkyOXNiM0l1WjJWMFNHVjRLQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxibk5wZEhrNklIUm9hWE11WkdWdWMybDBlUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDbjA3Q2s1eUxuQnliM1J2ZEhsd1pTNXBjMFp2WjBWNGNESWdQU0FoTURzS2RtRnlJRUp5SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDQTlJREVzSUc0Z1BTQXhaVE1wZXdvZ0lDQWdJQ0FnSUhSb2FYTXVibUZ0WlNBOUlDSWlMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0dVcExDQjBhR2x6TG01bFlYSWdQU0IwTENCMGFHbHpMbVpoY2lBOUlHNDdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVKeUtIUm9hWE11WTI5c2IzSXNJSFJvYVhNdWJtVmhjaXdnZEdocGN5NW1ZWElwT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSkdiMmNpTEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2RHaHBjeTVqYjJ4dmNpNW5aWFJJWlhnb0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WaGNqb2dkR2hwY3k1dVpXRnlMQW9nSUNBZ0lDQWdJQ0FnSUNCbVlYSTZJSFJvYVhNdVptRnlDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtmVHNLUW5JdWNISnZkRzkwZVhCbExtbHpSbTluSUQwZ0lUQTdDblpoY2lCdWJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKVFkyVnVaU0lzSUhSb2FYTXVZbUZqYTJkeWIzVnVaQ0E5SUc1MWJHd3NJSFJvYVhNdVpXNTJhWEp2Ym0xbGJuUWdQU0J1ZFd4c0xDQjBhR2x6TG1adlp5QTlJRzUxYkd3c0lIUm9hWE11YjNabGNuSnBaR1ZOWVhSbGNtbGhiQ0E5SUc1MWJHd3NJSFJvYVhNdVlYVjBiMVZ3WkdGMFpTQTlJQ0V3TENCMGVYQmxiMllnWDE5VVNGSkZSVjlFUlZaVVQwOU1VMTlmSUR3Z0luVWlJQ1ltSUY5ZlZFaFNSVVZmUkVWV1ZFOVBURk5mWHk1a2FYTndZWFJqYUVWMlpXNTBLRzVsZHlCRGRYTjBiMjFGZG1WdWRDZ2liMkp6WlhKMlpTSXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVjBZV2xzT2lCMGFHbHpDaUFnSUNBZ0lDQWdmU2twT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU3dnZENrc0lHVXVZbUZqYTJkeWIzVnVaQ0FoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVpWVdOclozSnZkVzVrSUQwZ1pTNWlZV05yWjNKdmRXNWtMbU5zYjI1bEtDa3BMQ0JsTG1WdWRtbHliMjV0Wlc1MElDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxtVnVkbWx5YjI1dFpXNTBJRDBnWlM1bGJuWnBjbTl1YldWdWRDNWpiRzl1WlNncEtTd2daUzVtYjJjZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVptOW5JRDBnWlM1bWIyY3VZMnh2Ym1Vb0tTa3NJR1V1YjNabGNuSnBaR1ZOWVhSbGNtbGhiQ0FoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTV2ZG1WeWNtbGtaVTFoZEdWeWFXRnNJRDBnWlM1dmRtVnljbWxrWlUxaGRHVnlhV0ZzTG1Oc2IyNWxLQ2twTENCMGFHbHpMbUYxZEc5VmNHUmhkR1VnUFNCbExtRjFkRzlWY0dSaGRHVXNJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlHVXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnpkWEJsY2k1MGIwcFRUMDRvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabTluSUNFOVBTQnVkV3hzSUNZbUlDaDBMbTlpYW1WamRDNW1iMmNnUFNCMGFHbHpMbVp2Wnk1MGIwcFRUMDRvS1Nrc0lIUTdDaUFnSUNCOUNuMDdDbTV2TG5CeWIzUnZkSGx3WlM1cGMxTmpaVzVsSUQwZ0lUQTdDblpoY2lBa2JpQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZWEp5WVhrZ1BTQmxMQ0IwYUdsekxuTjBjbWxrWlNBOUlIUXNJSFJvYVhNdVkyOTFiblFnUFNCbElDRTlQU0IyYjJsa0lEQWdQeUJsTG14bGJtZDBhQ0F2SUhRZ09pQXdMQ0IwYUdsekxuVnpZV2RsSUQwZ2FISXNJSFJvYVhNdWRYQmtZWFJsVW1GdVoyVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOW1abk5sZERvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5MWJuUTZJQzB4Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTUyWlhKemFXOXVJRDBnTUN3Z2RHaHBjeTUxZFdsa0lEMGdSWFFvS1RzS0lDQWdJSDBLSUNBZ0lHOXVWWEJzYjJGa1EyRnNiR0poWTJzb0tTQjdmUW9nSUNBZ2MyVjBJRzVsWldSelZYQmtZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQmxJRDA5UFNBaE1DQW1KaUIwYUdsekxuWmxjbk5wYjI0ckt6c0tJQ0FnSUgwS0lDQWdJSE5sZEZWellXZGxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTFjMkZuWlNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVTQTlJRzVsZHlCbExtRnljbUY1TG1OdmJuTjBjblZqZEc5eUtHVXVZWEp5WVhrcExDQjBhR2x6TG1OdmRXNTBJRDBnWlM1amIzVnVkQ3dnZEdocGN5NXpkSEpwWkdVZ1BTQmxMbk4wY21sa1pTd2dkR2hwY3k1MWMyRm5aU0E5SUdVdWRYTmhaMlVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVFYUW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR1VnS2owZ2RHaHBjeTV6ZEhKcFpHVXNJRzRnS2owZ2RDNXpkSEpwWkdVN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlIUm9hWE11YzNSeWFXUmxPeUJwSUR3Z2Nqc2dhU3NyS1hSb2FYTXVZWEp5WVhsYlpTQXJJR2xkSUQwZ2RDNWhjbkpoZVZ0dUlDc2dhVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjbkpoZVM1elpYUW9aU3dnZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2hsS1NCN0NpQWdJQ0FnSUNBZ1pTNWhjbkpoZVVKMVptWmxjbk1nUFQwOUlIWnZhV1FnTUNBbUppQW9aUzVoY25KaGVVSjFabVpsY25NZ1BTQjdmU2tzSUhSb2FYTXVZWEp5WVhrdVluVm1abVZ5TGw5MWRXbGtJRDA5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11WVhKeVlYa3VZblZtWm1WeUxsOTFkV2xrSUQwZ1JYUW9LU2tzSUdVdVlYSnlZWGxDZFdabVpYSnpXM1JvYVhNdVlYSnlZWGt1WW5WbVptVnlMbDkxZFdsa1hTQTlQVDBnZG05cFpDQXdJQ1ltSUNobExtRnljbUY1UW5WbVptVnljMXQwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpGMGdQU0IwYUdsekxtRnljbUY1TG5Oc2FXTmxLREFwTG1KMVptWmxjaWs3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J1WlhjZ2RHaHBjeTVoY25KaGVTNWpiMjV6ZEhKMVkzUnZjaWhsTG1GeWNtRjVRblZtWm1WeWMxdDBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkYwcExDQnVJRDBnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb2RDd2dkR2hwY3k1emRISnBaR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG5ObGRGVnpZV2RsS0hSb2FYTXVkWE5oWjJVcExDQnVPd29nSUNBZ2ZRb2dJQ0FnYjI1VmNHeHZZV1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTl1VlhCc2IyRmtRMkZzYkdKaFkyc2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1aGNuSmhlVUoxWm1abGNuTWdQVDA5SUhadmFXUWdNQ0FtSmlBb1pTNWhjbkpoZVVKMVptWmxjbk1nUFNCN2ZTa3NJSFJvYVhNdVlYSnlZWGt1WW5WbVptVnlMbDkxZFdsa0lEMDlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXVZWEp5WVhrdVluVm1abVZ5TGw5MWRXbGtJRDBnUlhRb0tTa3NJR1V1WVhKeVlYbENkV1ptWlhKelczUm9hWE11WVhKeVlYa3VZblZtWm1WeUxsOTFkV2xrWFNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hsTG1GeWNtRjVRblZtWm1WeWMxdDBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkYwZ1BTQkJjbkpoZVM1d2NtOTBiM1I1Y0dVdWMyeHBZMlV1WTJGc2JDaHVaWGNnVldsdWRETXlRWEp5WVhrb2RHaHBjeTVoY25KaGVTNWlkV1ptWlhJcEtTa3NJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RYVnBaRG9nZEdocGN5NTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQmlkV1ptWlhJNklIUm9hWE11WVhKeVlYa3VZblZtWm1WeUxsOTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lCMGFHbHpMbUZ5Y21GNUxtTnZibk4wY25WamRHOXlMbTVoYldVc0NpQWdJQ0FnSUNBZ0lDQWdJSE4wY21sa1pUb2dkR2hwY3k1emRISnBaR1VLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUXA5T3dva2JpNXdjbTkwYjNSNWNHVXVhWE5KYm5SbGNteGxZWFpsWkVKMVptWmxjaUE5SUNFd093cDJZWElnUzJVZ1BTQnVaWGNnVFN3Z1UyNGdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBJRDBnSVRFcGV3b2dJQ0FnSUNBZ0lIUm9hWE11Ym1GdFpTQTlJQ0lpTENCMGFHbHpMbVJoZEdFZ1BTQmxMQ0IwYUdsekxtbDBaVzFUYVhwbElEMGdkQ3dnZEdocGN5NXZabVp6WlhRZ1BTQnVMQ0IwYUdsekxtNXZjbTFoYkdsNlpXUWdQU0JwSUQwOVBTQWhNRHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQmpiM1Z1ZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWVhSaExtTnZkVzUwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJR0Z5Y21GNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1SaGRHRXVZWEp5WVhrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnYm1WbFpITlZjR1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdVpHRjBZUzV1WldWa2MxVndaR0YwWlNBOUlHVTdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVMWhkSEpwZURRb1pTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxtUmhkR0V1WTI5MWJuUTdJSFFnUENCdU95QjBLeXNwUzJVdWVDQTlJSFJvYVhNdVoyVjBXQ2gwS1N3Z1MyVXVlU0E5SUhSb2FYTXVaMlYwV1NoMEtTd2dTMlV1ZWlBOUlIUm9hWE11WjJWMFdpaDBLU3dnUzJVdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCMGFHbHpMbk5sZEZoWldpaDBMQ0JMWlM1NExDQkxaUzU1TENCTFpTNTZLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VG05eWJXRnNUV0YwY21sNEtHVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NWpiM1Z1ZERzZ2RDQThJRzQ3SUhRckt5bExaUzU0SUQwZ2RHaHBjeTVuWlhSWUtIUXBMQ0JMWlM1NUlEMGdkR2hwY3k1blpYUlpLSFFwTENCTFpTNTZJRDBnZEdocGN5NW5aWFJhS0hRcExDQkxaUzVoY0hCc2VVNXZjbTFoYkUxaGRISnBlQ2hsS1N3Z2RHaHBjeTV6WlhSWVdWb29kQ3dnUzJVdWVDd2dTMlV1ZVN3Z1MyVXVlaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbU52ZFc1ME95QjBJRHdnYmpzZ2RDc3JLVXRsTG5nZ1BTQjBhR2x6TG1kbGRGZ29kQ2tzSUV0bExua2dQU0IwYUdsekxtZGxkRmtvZENrc0lFdGxMbm9nUFNCMGFHbHpMbWRsZEZvb2RDa3NJRXRsTG5SeVlXNXpabTl5YlVScGNtVmpkR2x2YmlobEtTd2dkR2hwY3k1elpYUllXVm9vZEN3Z1MyVXVlQ3dnUzJVdWVTd2dTMlV1ZWlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUmRJRDBnZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGa29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkQ0FySURGZElEMGdkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZvb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGRDQXJJREpkSUQwZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmNvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZENBcklETmRJRDBnZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRGZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGRGMDdDaUFnSUNCOUNpQWdJQ0JuWlhSWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhRZ0t5QXhYVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGb29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGRDQXJJREpkT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBJQ3NnTTEwN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1NobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ1BTQmxJQ29nZEdocGN5NWtZWFJoTG5OMGNtbGtaU0FySUhSb2FYTXViMlptYzJWMExDQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXJJREJkSUQwZ2RDd2dkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLeUF4WFNBOUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1Zvb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDBnWlNBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkQ3dnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS3lBd1hTQTlJSFFzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNzZ01WMGdQU0J1TENCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcklESmRJRDBnYVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGaFpXbGNvWlN3Z2RDd2diaXdnYVN3Z2Npa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDBnWlNBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkQ3dnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS3lBd1hTQTlJSFFzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNzZ01WMGdQU0J1TENCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcklESmRJRDBnYVN3Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0t5QXpYU0E5SUhJc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbXh2WnlnaVZFaFNSVVV1U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1V1WTJ4dmJtVW9LVG9nUTJ4dmJtbHVaeUJoYmlCcGJuUmxjbXhoZG1Wa0lHSjFabVpsY2lCaGRIUnlhV0oxZEdVZ2QybHNiQ0JrWldsdWRHVnliR1ZoZG1VZ1luVm1abVZ5SUdSaGRHRXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENCMGFHbHpMbU52ZFc1ME95QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1SUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTURzZ2NpQThJSFJvYVhNdWFYUmxiVk5wZW1VN0lISXJLeWwwTG5CMWMyZ29kR2hwY3k1a1lYUmhMbUZ5Y21GNVcya2dLeUJ5WFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QlZaU2h1WlhjZ2RHaHBjeTVoY25KaGVTNWpiMjV6ZEhKMVkzUnZjaWgwS1N3Z2RHaHBjeTVwZEdWdFUybDZaU3dnZEdocGN5NXViM0p0WVd4cGVtVmtLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdjbVYwZFhKdUlHVXVhVzUwWlhKc1pXRjJaV1JDZFdabVpYSnpJRDA5UFNCMmIybGtJREFnSmlZZ0tHVXVhVzUwWlhKc1pXRjJaV1JDZFdabVpYSnpJRDBnZTMwcExDQmxMbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljMXQwYUdsekxtUmhkR0V1ZFhWcFpGMGdQVDA5SUhadmFXUWdNQ0FtSmlBb1pTNXBiblJsY214bFlYWmxaRUoxWm1abGNuTmJkR2hwY3k1a1lYUmhMblYxYVdSZElEMGdkR2hwY3k1a1lYUmhMbU5zYjI1bEtHVXBLU3dnYm1WM0lGTnVLR1V1YVc1MFpYSnNaV0YyWldSQ2RXWm1aWEp6VzNSb2FYTXVaR0YwWVM1MWRXbGtYU3dnZEdocGN5NXBkR1Z0VTJsNlpTd2dkR2hwY3k1dlptWnpaWFFzSUhSb2FYTXVibTl5YldGc2FYcGxaQ2s3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hsSUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0lsUklVa1ZGTGtsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsTG5SdlNsTlBUaWdwT2lCVFpYSnBZV3hwZW1sdVp5QmhiaUJwYm5SbGNteGhkbVZrSUdKMVptWmxjaUJoZEhSeWFXSjFkR1VnZDJsc2JDQmtaV2x1ZEdWeWJHVmhkbVVnWW5WbVptVnlJR1JoZEdFdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0IwYUdsekxtTnZkVzUwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVJQ29nZEdocGN5NWtZWFJoTG5OMGNtbGtaU0FySUhSb2FYTXViMlptYzJWME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNRHNnY2lBOElIUm9hWE11YVhSbGJWTnBlbVU3SUhJckt5bDBMbkIxYzJnb2RHaHBjeTVrWVhSaExtRnljbUY1VzJrZ0t5QnlYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2wwWlcxVGFYcGxPaUIwYUdsekxtbDBaVzFUYVhwbExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nZEdocGN5NWhjbkpoZVM1amIyNXpkSEoxWTNSdmNpNXVZVzFsTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVhKeVlYazZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeHBlbVZrT2lCMGFHbHpMbTV2Y20xaGJHbDZaV1FLSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NtVjBkWEp1SUdVdWFXNTBaWEpzWldGMlpXUkNkV1ptWlhKeklEMDlQU0IyYjJsa0lEQWdKaVlnS0dVdWFXNTBaWEpzWldGMlpXUkNkV1ptWlhKeklEMGdlMzBwTENCbExtbHVkR1Z5YkdWaGRtVmtRblZtWm1WeWMxdDBhR2x6TG1SaGRHRXVkWFZwWkYwZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWlM1cGJuUmxjbXhsWVhabFpFSjFabVpsY25OYmRHaHBjeTVrWVhSaExuVjFhV1JkSUQwZ2RHaHBjeTVrWVhSaExuUnZTbE5QVGlobEtTa3NJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FYTkpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpUb2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbDBaVzFUYVhwbE9pQjBhR2x6TG1sMFpXMVRhWHBsTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoT2lCMGFHbHpMbVJoZEdFdWRYVnBaQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2IyWm1jMlYwT2lCMGFHbHpMbTltWm5ObGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnYm05eWJXRnNhWHBsWkRvZ2RHaHBjeTV1YjNKdFlXeHBlbVZrQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLZlRzS1UyNHVjSEp2ZEc5MGVYQmxMbWx6U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VnUFNBaE1Ec0tkbUZ5SUdsdklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKVGNISnBkR1ZOWVhSbGNtbGhiQ0lzSUhSb2FYTXVZMjlzYjNJZ1BTQnVaWGNnWVdVb01UWTNOemN5TVRVcExDQjBhR2x6TG0xaGNDQTlJRzUxYkd3c0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxuSnZkR0YwYVc5dUlEMGdNQ3dnZEdocGN5NXphWHBsUVhSMFpXNTFZWFJwYjI0Z1BTQWhNQ3dnZEdocGN5NTBjbUZ1YzNCaGNtVnVkQ0E5SUNFd0xDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTXViV0Z3SUQwZ1pTNXRZWEFzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0JsTG1Gc2NHaGhUV0Z3TENCMGFHbHpMbkp2ZEdGMGFXOXVJRDBnWlM1eWIzUmhkR2x2Yml3Z2RHaHBjeTV6YVhwbFFYUjBaVzUxWVhScGIyNGdQU0JsTG5OcGVtVkJkSFJsYm5WaGRHbHZiaXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0thVzh1Y0hKdmRHOTBlWEJsTG1selUzQnlhWFJsVFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUdkcExDQlJhU0E5SUc1bGR5Qk5MQ0I0YVNBOUlHNWxkeUJOTENCNWFTQTlJRzVsZHlCTkxDQjJhU0E5SUc1bGR5QllMQ0JMYVNBOUlHNWxkeUJZTENCTmFDQTlJRzVsZHlCd1pTd2dhSE1nUFNCdVpYY2dUU3dnWlhJZ1BTQnVaWGNnVFN3Z2RYTWdQU0J1WlhjZ1RTd2dhbXdnUFNCdVpYY2dXQ3dnY1c4Z1BTQnVaWGNnV0N3Z1VXd2dQU0J1WlhjZ1dDd2djbThnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWRIbHdaU0E5SUNKVGNISnBkR1VpTENCbmFTQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZHBJRDBnYm1WM0lGOWxPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTFM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xTNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdExqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1TlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMUzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQWdJQ0FnWFNrc0lHNGdQU0J1WlhjZ0pHNG9kQ3dnTlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR2RwTG5ObGRFbHVaR1Y0S0ZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNd29nSUNBZ0lDQWdJQ0FnSUNCZEtTd2daMmt1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCVGJpaHVMQ0F6TENBd0xDQWhNU2twTENCbmFTNXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUZOdUtHNHNJRElzSURNc0lDRXhLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVaMlZ2YldWMGNua2dQU0JuYVN3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUdVZ0lUMDlJSFp2YVdRZ01DQS9JR1VnT2lCdVpYY2dhVzhzSUhSb2FYTXVZMlZ1ZEdWeUlEMGdibVYzSUZnb0xqVXNJQzQxS1RzS0lDQWdJSDBLSUNBZ0lISmhlV05oYzNRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUdVdVkyRnRaWEpoSUQwOVBTQnVkV3hzSUNZbUlHTnZibk52YkdVdVpYSnliM0lvSjFSSVVrVkZMbE53Y21sMFpUb2dJbEpoZVdOaGMzUmxjaTVqWVcxbGNtRWlJRzVsWldSeklIUnZJR0psSUhObGRDQnBiaUJ2Y21SbGNpQjBieUJ5WVhsallYTjBJR0ZuWVdsdWMzUWdjM0J5YVhSbGN5NG5LU3dnZUdrdWMyVjBSbkp2YlUxaGRISnBlRk5qWVd4bEtIUm9hWE11YldGMGNtbDRWMjl5YkdRcExDQk5hQzVqYjNCNUtHVXVZMkZ0WlhKaExtMWhkSEpwZUZkdmNteGtLU3dnZEdocGN5NXRiMlJsYkZacFpYZE5ZWFJ5YVhndWJYVnNkR2x3YkhsTllYUnlhV05sY3lobExtTmhiV1Z5WVM1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVc0lIUm9hWE11YldGMGNtbDRWMjl5YkdRcExDQjVhUzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTV0YjJSbGJGWnBaWGROWVhSeWFYZ3BMQ0JsTG1OaGJXVnlZUzVwYzFCbGNuTndaV04wYVhabFEyRnRaWEpoSUNZbUlIUm9hWE11YldGMFpYSnBZV3d1YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDA5UFNBaE1TQW1KaUI0YVM1dGRXeDBhWEJzZVZOallXeGhjaWd0ZVdrdWVpazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG0xaGRHVnlhV0ZzTG5KdmRHRjBhVzl1TENCcExDQnlPd29nSUNBZ0lDQWdJRzRnSVQwOUlEQWdKaVlnS0hJZ1BTQk5ZWFJvTG1OdmN5aHVLU3dnYVNBOUlFMWhkR2d1YzJsdUtHNHBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVkyVnVkR1Z5T3dvZ0lDQWdJQ0FnSUdSektHaHpMbk5sZENndExqVXNJQzB1TlN3Z01Da3NJSGxwTENCdkxDQjRhU3dnYVN3Z2Npa3NJR1J6S0dWeUxuTmxkQ2d1TlN3Z0xTNDFMQ0F3S1N3Z2VXa3NJRzhzSUhocExDQnBMQ0J5S1N3Z1pITW9kWE11YzJWMEtDNDFMQ0F1TlN3Z01Da3NJSGxwTENCdkxDQjRhU3dnYVN3Z2Npa3NJR3BzTG5ObGRDZ3dMQ0F3S1N3Z2NXOHVjMlYwS0RFc0lEQXBMQ0JSYkM1elpYUW9NU3dnTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCbExuSmhlUzVwYm5SbGNuTmxZM1JVY21saGJtZHNaU2hvY3l3Z1pYSXNJSFZ6TENBaE1Td2dVV2twT3dvZ0lDQWdJQ0FnSUdsbUlDaGhJRDA5UFNCdWRXeHNJQ1ltSUNoa2N5aGxjaTV6WlhRb0xTNDFMQ0F1TlN3Z01Da3NJSGxwTENCdkxDQjRhU3dnYVN3Z2Npa3NJSEZ2TG5ObGRDZ3dMQ0F4S1N3Z1lTQTlJR1V1Y21GNUxtbHVkR1Z5YzJWamRGUnlhV0Z1WjJ4bEtHaHpMQ0IxY3l3Z1pYSXNJQ0V4TENCUmFTa3NJR0VnUFQwOUlHNTFiR3dwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JsTG5KaGVTNXZjbWxuYVc0dVpHbHpkR0Z1WTJWVWJ5aFJhU2s3Q2lBZ0lDQWdJQ0FnYkNBOElHVXVibVZoY2lCOGZDQnNJRDRnWlM1bVlYSWdmSHdnZEM1d2RYTm9LSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklHd3NDaUFnSUNBZ0lDQWdJQ0FnSUhCdmFXNTBPaUJSYVM1amJHOXVaU2dwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFkam9nYm5RdVoyVjBWVllvVVdrc0lHaHpMQ0JsY2l3Z2RYTXNJR3BzTENCeGJ5d2dVV3dzSUc1bGR5QllLU3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptRmpaVG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVpXTjBPaUIwYUdsekNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z1pTNWpaVzUwWlhJZ0lUMDlJSFp2YVdRZ01DQW1KaUIwYUdsekxtTmxiblJsY2k1amIzQjVLR1V1WTJWdWRHVnlLU3dnZEdocGN5NXRZWFJsY21saGJDQTlJR1V1YldGMFpYSnBZV3dzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbkp2TG5CeWIzUnZkSGx3WlM1cGMxTndjbWwwWlNBOUlDRXdPd3BtZFc1amRHbHZiaUJrY3loekxDQmxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0IyYVM1emRXSldaV04wYjNKektITXNJSFFwTG1Ga1pGTmpZV3hoY2lndU5Ta3ViWFZzZEdsd2JIa29iaWtzSUdrZ0lUMDlJSFp2YVdRZ01DQS9JQ2hMYVM1NElEMGdjaUFxSUhacExuZ2dMU0JwSUNvZ2Rta3VlU3dnUzJrdWVTQTlJR2tnS2lCMmFTNTRJQ3NnY2lBcUlIWnBMbmtwSURvZ1Mya3VZMjl3ZVNoMmFTa3NJSE11WTI5d2VTaGxLU3dnY3k1NElDczlJRXRwTG5nc0lITXVlU0FyUFNCTGFTNTVMQ0J6TG1Gd2NHeDVUV0YwY21sNE5DaE5hQ2s3Q24wS2RtRnlJR1p6SUQwZ2JtVjNJRTBzSUV0c0lEMGdibVYzSUUwc0lHSm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk9aU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZZM1Z5Y21WdWRFeGxkbVZzSUQwZ01Dd2dkR2hwY3k1MGVYQmxJRDBnSWt4UFJDSXNJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowYVdWektIUm9hWE1zSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YyWld4ek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiblZ0WlhKaFlteGxPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCcGMweFBSRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJQ0V3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NWhkWFJ2VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnpkWEJsY2k1amIzQjVLR1VzSUNFeEtUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXViR1YyWld4ek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUE4SUdrN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RGdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoWkdSTVpYWmxiQ2h5TG05aWFtVmpkQzVqYkc5dVpTZ3BMQ0J5TG1ScGMzUmhibU5sS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWFYwYjFWd1pHRjBaU0E5SUdVdVlYVjBiMVZ3WkdGMFpTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaRXhsZG1Wc0tHVXNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdkQ0E5SUUxaGRHZ3VZV0p6S0hRcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVzWlhabGJITXNJR2s3Q2lBZ0lDQWdJQ0FnWm05eUtHa2dQU0F3T3lCcElEd2diaTVzWlc1bmRHZ2dKaVlnSVNoMElEd2dibHRwWFM1a2FYTjBZVzVqWlNrN0lHa3JLeWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzNCc2FXTmxLR2tzSURBc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamREb2daUW9nSUNBZ0lDQWdJSDBwTENCMGFHbHpMbUZrWkNobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRU4xY25KbGJuUk1aWFpsYkNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWTNWeWNtVnVkRXhsZG1Wc093b2dJQ0FnZlFvZ0lDQWdaMlYwVDJKcVpXTjBSbTl5UkdsemRHRnVZMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVzWlhabGJITTdDaUFnSUNBZ0lDQWdhV1lnS0hRdWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaXdnYVRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0c0Z1BTQXhMQ0JwSUQwZ2RDNXNaVzVuZEdnN0lHNGdQQ0JwSUNZbUlDRW9aU0E4SUhSYmJsMHVaR2x6ZEdGdVkyVXBPeUJ1S3lzcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRnR1SUMwZ01WMHViMkpxWldOME93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUhKaGVXTmhjM1FvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbXhsZG1Wc2N5NXNaVzVuZEdnZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnpMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQmxMbkpoZVM1dmNtbG5hVzR1WkdsemRHRnVZMlZVYnlobWN5azdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMlYwVDJKcVpXTjBSbTl5UkdsemRHRnVZMlVvYVNrdWNtRjVZMkZ6ZENobExDQjBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVzWlhabGJITTdDaUFnSUNBZ0lDQWdhV1lnS0hRdWJHVnVaM1JvSUQ0Z01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCbWN5NXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvWlM1dFlYUnlhWGhYYjNKc1pDa3NJRXRzTG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDBhR2x6TG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0JtY3k1a2FYTjBZVzVqWlZSdktFdHNLU0F2SUdVdWVtOXZiVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RGc3dYUzV2WW1wbFkzUXVkbWx6YVdKc1pTQTlJQ0V3T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVN3Z2Nqc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHa2dQU0F4TENCeUlEMGdkQzVzWlc1bmRHZzdJR2tnUENCeUlDWW1JRzRnUGowZ2RGdHBYUzVrYVhOMFlXNWpaVHNnYVNzcktYUmJhU0F0SURGZExtOWlhbVZqZEM1MmFYTnBZbXhsSUQwZ0lURXNJSFJiYVYwdWIySnFaV04wTG5acGMybGliR1VnUFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtIUm9hWE11WDJOMWNuSmxiblJNWlhabGJDQTlJR2tnTFNBeE95QnBJRHdnY2pzZ2FTc3JLWFJiYVYwdWIySnFaV04wTG5acGMybGliR1VnUFNBaE1Uc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSFJvYVhNdVlYVjBiMVZ3WkdGMFpTQTlQVDBnSVRFZ0ppWWdLSFF1YjJKcVpXTjBMbUYxZEc5VmNHUmhkR1VnUFNBaE1Ta3NJSFF1YjJKcVpXTjBMbXhsZG1Wc2N5QTlJRnRkT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXNaWFpsYkhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb095QnBJRHdnY2pzZ2FTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCdVcybGRPd29nSUNBZ0lDQWdJQ0FnSUNCMExtOWlhbVZqZEM1c1pYWmxiSE11Y0hWemFDaDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNRNklHOHViMkpxWldOMExuVjFhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaVG9nYnk1a2FYTjBZVzVqWlFvZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFE3Q2lBZ0lDQjlDbjBzSUdWaklEMGdibVYzSUUwc0lIUmpJRDBnYm1WM0lGWmxMQ0J1WXlBOUlHNWxkeUJXWlN3Z1VuZ2dQU0J1WlhjZ1RTd2dhV01nUFNCdVpYY2djR1VzSUhOdklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCemRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTJ0cGJtNWxaRTFsYzJnaUxDQjBhR2x6TG1KcGJtUk5iMlJsSUQwZ0ltRjBkR0ZqYUdWa0lpd2dkR2hwY3k1aWFXNWtUV0YwY21sNElEMGdibVYzSUhCbExDQjBhR2x6TG1KcGJtUk5ZWFJ5YVhoSmJuWmxjbk5sSUQwZ2JtVjNJSEJsT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVltbHVaRTF2WkdVZ1BTQmxMbUpwYm1STmIyUmxMQ0IwYUdsekxtSnBibVJOWVhSeWFYZ3VZMjl3ZVNobExtSnBibVJOWVhSeWFYZ3BMQ0IwYUdsekxtSnBibVJOWVhSeWFYaEpiblpsY25ObExtTnZjSGtvWlM1aWFXNWtUV0YwY21sNFNXNTJaWEp6WlNrc0lIUm9hWE11YzJ0bGJHVjBiMjRnUFNCbExuTnJaV3hsZEc5dUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1ltbHVaQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1emEyVnNaWFJ2YmlBOUlHVXNJSFFnUFQwOUlIWnZhV1FnTUNBbUppQW9kR2hwY3k1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNnaE1Da3NJSFJvYVhNdWMydGxiR1YwYjI0dVkyRnNZM1ZzWVhSbFNXNTJaWEp6WlhNb0tTd2dkQ0E5SUhSb2FYTXViV0YwY21sNFYyOXliR1FwTENCMGFHbHpMbUpwYm1STllYUnlhWGd1WTI5d2VTaDBLU3dnZEdocGN5NWlhVzVrVFdGMGNtbDRTVzUyWlhKelpTNWpiM0I1S0hRcExtbHVkbVZ5ZENncE93b2dJQ0FnZlFvZ0lDQWdjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5OclpXeGxkRzl1TG5CdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUc1dmNtMWhiR2w2WlZOcmFXNVhaV2xuYUhSektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdibVYzSUZabExDQjBJRDBnZEdocGN5NW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpMbk5yYVc1WFpXbG5hSFE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUhRdVkyOTFiblE3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5nZ1BTQjBMbWRsZEZnb2Jpa3NJR1V1ZVNBOUlIUXVaMlYwV1NodUtTd2daUzU2SUQwZ2RDNW5aWFJhS0c0cExDQmxMbmNnUFNCMExtZGxkRmNvYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdNU0F2SUdVdWJXRnVhR0YwZEdGdVRHVnVaM1JvS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSElnSVQwOUlERWdMeUF3SUQ4Z1pTNXRkV3gwYVhCc2VWTmpZV3hoY2loeUtTQTZJR1V1YzJWMEtERXNJREFzSURBc0lEQXBMQ0IwTG5ObGRGaFpXbGNvYml3Z1pTNTRMQ0JsTG5rc0lHVXVlaXdnWlM1M0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrc0lIUm9hWE11WW1sdVpFMXZaR1VnUFQwOUlDSmhkSFJoWTJobFpDSWdQeUIwYUdsekxtSnBibVJOWVhSeWFYaEpiblpsY25ObExtTnZjSGtvZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ2t1YVc1MlpYSjBLQ2tnT2lCMGFHbHpMbUpwYm1STmIyUmxJRDA5UFNBaVpHVjBZV05vWldRaUlEOGdkR2hwY3k1aWFXNWtUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLSFJvYVhNdVltbHVaRTFoZEhKcGVDa3VhVzUyWlhKMEtDa2dPaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxOcmFXNXVaV1JOWlhOb09pQlZibkpsWTI5bmJtbDZaV1FnWW1sdVpFMXZaR1U2SUNJZ0t5QjBhR2x6TG1KcGJtUk5iMlJsS1RzS0lDQWdJSDBLSUNBZ0lHSnZibVZVY21GdWMyWnZjbTBvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1emEyVnNaWFJ2Yml3Z2FTQTlJSFJvYVhNdVoyVnZiV1YwY25rN0NpQWdJQ0FnSUNBZ2RHTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hwTG1GMGRISnBZblYwWlhNdWMydHBia2x1WkdWNExDQmxLU3dnYm1NdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHBMbUYwZEhKcFluVjBaWE11YzJ0cGJsZGxhV2RvZEN3Z1pTa3NJR1ZqTG1OdmNIa29kQ2t1WVhCd2JIbE5ZWFJ5YVhnMEtIUm9hWE11WW1sdVpFMWhkSEpwZUNrc0lIUXVjMlYwS0RBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnUENBME95QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHNWpMbWRsZEVOdmJYQnZibVZ1ZENoeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHOGdJVDA5SURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RHTXVaMlYwUTI5dGNHOXVaVzUwS0hJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aHVMbUp2Ym1WelcyRmRMbTFoZEhKcGVGZHZjbXhrTENCdUxtSnZibVZKYm5abGNuTmxjMXRoWFNrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtGSjRMbU52Y0hrb1pXTXBMbUZ3Y0d4NVRXRjBjbWw0TkNocFl5a3NJRzhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbUZ3Y0d4NVRXRjBjbWw0TkNoMGFHbHpMbUpwYm1STllYUnlhWGhKYm5abGNuTmxLVHNLSUNBZ0lIMEtmVHNLYzI4dWNISnZkRzkwZVhCbExtbHpVMnRwYm01bFpFMWxjMmdnUFNBaE1Ec0tkbUZ5SUc5dklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtKdmJtVWlPd29nSUNBZ2ZRcDlPd3B2Ynk1d2NtOTBiM1I1Y0dVdWFYTkNiMjVsSUQwZ0lUQTdDblpoY2lCeGJpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2IzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1MWJHd3NJSFFnUFNBeExDQnVJRDBnTVN3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXlBOUlISjBMQ0JvSUQwZ2NuUXNJSFVzSUdRcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1MWJHd3NJRzhzSUdFc0lHd3NJR01zSUdnc0lHa3NJSElzSUhVc0lHUXBPd29nSUNBZ0lDQWdJSFJvYVhNdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHNEtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtMWhaMFpwYkhSbGNpQTlJR01zSUhSb2FYTXViV2x1Um1sc2RHVnlJRDBnYUN3Z2RHaHBjeTVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0FoTVN3Z2RHaHBjeTVtYkdsd1dTQTlJQ0V4TENCMGFHbHpMblZ1Y0dGamEwRnNhV2R1YldWdWRDQTlJREU3Q2lBZ0lDQjlDbjA3Q25GdUxuQnliM1J2ZEhsd1pTNXBjMFJoZEdGVVpYaDBkWEpsSUQwZ0lUQTdDblpoY2lCeVl5QTlJRzVsZHlCd1pTd2dVSGdnUFNCdVpYY2djR1VzSUdGdklEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRnRkTENCMElEMGdXMTBwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkWFZwWkNBOUlFVjBLQ2tzSUhSb2FYTXVZbTl1WlhNZ1BTQmxMbk5zYVdObEtEQXBMQ0IwYUdsekxtSnZibVZKYm5abGNuTmxjeUE5SUhRc0lIUm9hWE11WW05dVpVMWhkSEpwWTJWeklEMGdiblZzYkN3Z2RHaHBjeTVpYjI1bFZHVjRkSFZ5WlNBOUlHNTFiR3dzSUhSb2FYTXVZbTl1WlZSbGVIUjFjbVZUYVhwbElEMGdNQ3dnZEdocGN5NW1jbUZ0WlNBOUlDMHhMQ0IwYUdsekxtbHVhWFFvS1RzS0lDQWdJSDBLSUNBZ0lHbHVhWFFvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbUp2Ym1WekxDQjBJRDBnZEdocGN5NWliMjVsU1c1MlpYSnpaWE03Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WW05dVpVMWhkSEpwWTJWeklEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaGxMbXhsYm1kMGFDQXFJREUyS1N3Z2RDNXNaVzVuZEdnZ1BUMDlJREFwSUhSb2FYTXVZMkZzWTNWc1lYUmxTVzUyWlhKelpYTW9LVHNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hsTG14bGJtZDBhQ0FoUFQwZ2RDNXNaVzVuZEdncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VGEyVnNaWFJ2YmpvZ1RuVnRZbVZ5SUc5bUlHbHVkbVZ5YzJVZ1ltOXVaU0J0WVhSeWFXTmxjeUJrYjJWeklHNXZkQ0J0WVhSamFDQmhiVzkxYm5RZ2IyWWdZbTl1WlhNdUlpa3NJSFJvYVhNdVltOXVaVWx1ZG1WeWMyVnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwYUdsekxtSnZibVZ6TG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3k1d2RYTm9LRzVsZHlCd1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWTJGc1kzVnNZWFJsU1c1MlpYSnpaWE1vS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYjI1bFNXNTJaWEp6WlhNdWJHVnVaM1JvSUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHVWdQU0F3TENCMElEMGdkR2hwY3k1aWIyNWxjeTVzWlc1bmRHZzdJR1VnUENCME95QmxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHNWxkeUJ3WlRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aWIyNWxjMXRsWFNBbUppQnVMbU52Y0hrb2RHaHBjeTVpYjI1bGMxdGxYUzV0WVhSeWFYaFhiM0pzWkNrdWFXNTJaWEowS0Nrc0lIUm9hWE11WW05dVpVbHVkbVZ5YzJWekxuQjFjMmdvYmlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHVWdQU0F3TENCMElEMGdkR2hwY3k1aWIyNWxjeTVzWlc1bmRHZzdJR1VnUENCME95QmxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WW05dVpYTmJaVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNGdKaVlnYmk1dFlYUnlhWGhYYjNKc1pDNWpiM0I1S0hSb2FYTXVZbTl1WlVsdWRtVnljMlZ6VzJWZEtTNXBiblpsY25Rb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTUN3Z2RDQTlJSFJvYVhNdVltOXVaWE11YkdWdVozUm9PeUJsSUR3Z2REc2daU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1KdmJtVnpXMlZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVJQ1ltSUNodUxuQmhjbVZ1ZENBbUppQnVMbkJoY21WdWRDNXBjMEp2Ym1VZ1B5QW9iaTV0WVhSeWFYZ3VZMjl3ZVNodUxuQmhjbVZ1ZEM1dFlYUnlhWGhYYjNKc1pDa3VhVzUyWlhKMEtDa3NJRzR1YldGMGNtbDRMbTExYkhScGNHeDVLRzR1YldGMGNtbDRWMjl5YkdRcEtTQTZJRzR1YldGMGNtbDRMbU52Y0hrb2JpNXRZWFJ5YVhoWGIzSnNaQ2tzSUc0dWJXRjBjbWw0TG1SbFkyOXRjRzl6WlNodUxuQnZjMmwwYVc5dUxDQnVMbkYxWVhSbGNtNXBiMjRzSUc0dWMyTmhiR1VwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1KdmJtVnpMQ0IwSUQwZ2RHaHBjeTVpYjI1bFNXNTJaWEp6WlhNc0lHNGdQU0IwYUdsekxtSnZibVZOWVhSeWFXTmxjeXdnYVNBOUlIUm9hWE11WW05dVpWUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHVXViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCbFczSmRJRDhnWlZ0eVhTNXRZWFJ5YVhoWGIzSnNaQ0E2SUZCNE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WXk1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0dFc0lIUmJjbDBwTENCeVl5NTBiMEZ5Y21GNUtHNHNJSElnS2lBeE5pazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2tnSVQwOUlHNTFiR3dnSmlZZ0tHa3VibVZsWkhOVmNHUmhkR1VnUFNBaE1DazdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUdGdktIUm9hWE11WW05dVpYTXNJSFJvYVhNdVltOXVaVWx1ZG1WeWMyVnpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJYQjFkR1ZDYjI1bFZHVjRkSFZ5WlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlFMWhkR2d1YzNGeWRDaDBhR2x6TG1KdmJtVnpMbXhsYm1kMGFDQXFJRFFwT3dvZ0lDQWdJQ0FnSUdVZ1BTQllZeWhsS1N3Z1pTQTlJRTFoZEdndWJXRjRLR1VzSURRcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNobElDb2daU0FxSURRcE93b2dJQ0FnSUNBZ0lIUXVjMlYwS0hSb2FYTXVZbTl1WlUxaGRISnBZMlZ6S1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUc1bGR5QnhiaWgwTENCbExDQmxMQ0JqZEN3Z2JtNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSFJvYVhNdVltOXVaVTFoZEhKcFkyVnpJRDBnZEN3Z2RHaHBjeTVpYjI1bFZHVjRkSFZ5WlNBOUlHNHNJSFJvYVhNdVltOXVaVlJsZUhSMWNtVlRhWHBsSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRUp2Ym1WQ2VVNWhiV1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQjBhR2x6TG1KdmJtVnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVpYjI1bGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2t1Ym1GdFpTQTlQVDBnWlNrZ2NtVjBkWEp1SUdrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtSnZibVZVWlhoMGRYSmxJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbUp2Ym1WVVpYaDBkWEpsTG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTVpYjI1bFZHVjRkSFZ5WlNBOUlHNTFiR3dwT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkWFZwWkNBOUlHVXVkWFZwWkRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ1pTNWliMjVsY3k1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJR1V1WW05dVpYTmJibDBzSUc4Z1BTQjBXM0pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZJRDA5UFNCMmIybGtJREFnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVMnRsYkdWMGIyNDZJRTV2SUdKdmJtVWdabTkxYm1RZ2QybDBhQ0JWVlVsRU9pSXNJSElwTENCdklEMGdibVYzSUc5dktTd2dkR2hwY3k1aWIyNWxjeTV3ZFhOb0tHOHBMQ0IwYUdsekxtSnZibVZKYm5abGNuTmxjeTV3ZFhOb0tHNWxkeUJ3WlNncExtWnliMjFCY25KaGVTaGxMbUp2Ym1WSmJuWmxjbk5sYzF0dVhTa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJtbDBLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMWxkR0ZrWVhSaE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaWEp6YVc5dU9pQTBMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlVMnRsYkdWMGIyNGlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlZ1WlhKaGRHOXlPaUFpVTJ0bGJHVjBiMjR1ZEc5S1UwOU9JZ29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JpYjI1bGN6b2dXMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHSnZibVZKYm5abGNuTmxjem9nVzEwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHVXVkWFZwWkNBOUlIUm9hWE11ZFhWcFpEc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WW05dVpYTXNJRzRnUFNCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ2RDNXNaVzVuZEdnN0lHa2dQQ0J5T3lCcEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSYmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdVdVltOXVaWE11Y0hWemFDaHZMblYxYVdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzViYVYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1WW05dVpVbHVkbVZ5YzJWekxuQjFjMmdvWVM1MGIwRnljbUY1S0NrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pUc0tJQ0FnSUgwS2ZTd2dXRzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrZ1BTQXhLWHNLSUNBZ0lDQWdJQ0IwZVhCbGIyWWdiaUE5UFNBaWJuVnRZbVZ5SWlBbUppQW9hU0E5SUc0c0lHNGdQU0FoTVN3Z1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVTVzV6ZEdGdVkyVmtRblZtWm1WeVFYUjBjbWxpZFhSbE9pQlVhR1VnWTI5dWMzUnlkV04wYjNJZ2JtOTNJR1Y0Y0dWamRITWdibTl5YldGc2FYcGxaQ0JoY3lCMGFHVWdkR2hwY21RZ1lYSm5kVzFsYm5RdUlpa3BPd29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFzSUc0cE93b2dJQ0FnSUNBZ0lIUm9hWE11YldWemFGQmxja0YwZEhKcFluVjBaU0E5SUdrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXRaWE5vVUdWeVFYUjBjbWxpZFhSbElEMGdaUzV0WlhOb1VHVnlRWFIwY21saWRYUmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWJXVnphRkJsY2tGMGRISnBZblYwWlNBOUlIUm9hWE11YldWemFGQmxja0YwZEhKcFluVjBaU3dnWlM1cGMwbHVjM1JoYm1ObFpFSjFabVpsY2tGMGRISnBZblYwWlNBOUlDRXdMQ0JsT3dvZ0lDQWdmUXA5T3dwWWJpNXdjbTkwYjNSNWNHVXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVWdQU0FoTURzS2RtRnlJSE5qSUQwZ2JtVjNJSEJsTENCdll5QTlJRzVsZHlCd1pTd2djSE1nUFNCYlhTd2dkSElnUFNCdVpYY2djM1FzSUhoaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCemRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHVjM1JoYm1ObFRXRjBjbWw0SUQwZ2JtVjNJRmh1S0c1bGR5QkdiRzloZERNeVFYSnlZWGtvYmlBcUlERTJLU3dnTVRZcExDQjBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSWdQU0J1ZFd4c0xDQjBhR2x6TG1OdmRXNTBJRDBnYml3Z2RHaHBjeTVtY25WemRIVnRRM1ZzYkdWa0lEMGdJVEU3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1cGJuTjBZVzVqWlUxaGRISnBlQzVqYjNCNUtHVXVhVzV6ZEdGdVkyVk5ZWFJ5YVhncExDQmxMbWx1YzNSaGJtTmxRMjlzYjNJZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdWFXNXpkR0Z1WTJWRGIyeHZjaUE5SUdVdWFXNXpkR0Z1WTJWRGIyeHZjaTVqYkc5dVpTZ3BLU3dnZEdocGN5NWpiM1Z1ZENBOUlHVXVZMjkxYm5Rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkRiMnh2Y2tGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMExtWnliMjFCY25KaGVTaDBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSXVZWEp5WVhrc0lHVWdLaUF6S1RzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoZEhKcGVFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBMbVp5YjIxQmNuSmhlU2gwYUdsekxtbHVjM1JoYm1ObFRXRjBjbWw0TG1GeWNtRjVMQ0JsSUNvZ01UWXBPd29nSUNBZ2ZRb2dJQ0FnY21GNVkyRnpkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG0xaGRISnBlRmR2Y214a0xDQnBJRDBnZEdocGN5NWpiM1Z1ZERzS0lDQWdJQ0FnSUNCcFppQW9kSEl1WjJWdmJXVjBjbmtnUFNCMGFHbHpMbWRsYjIxbGRISjVMQ0IwY2k1dFlYUmxjbWxoYkNBOUlIUm9hWE11YldGMFpYSnBZV3dzSUhSeUxtMWhkR1Z5YVdGc0lDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdQQ0JwT3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRsZEUxaGRISnBlRUYwS0hJc0lITmpLU3dnYjJNdWJYVnNkR2x3YkhsTllYUnlhV05sY3lodUxDQnpZeWtzSUhSeUxtMWhkSEpwZUZkdmNteGtJRDBnYjJNc0lIUnlMbkpoZVdOaGMzUW9aU3dnY0hNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd0xDQmhJRDBnY0hNdWJHVnVaM1JvT3lCdklEd2dZVHNnYnlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2NITmJiMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzTG1sdWMzUmhibU5sU1dRZ1BTQnlMQ0JzTG05aWFtVmpkQ0E5SUhSb2FYTXNJSFF1Y0hWemFDaHNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J3Y3k1c1pXNW5kR2dnUFNBd093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSE5sZEVOdmJHOXlRWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWFXNXpkR0Z1WTJWRGIyeHZjaUE5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVwYm5OMFlXNWpaVU52Ykc5eUlEMGdibVYzSUZodUtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb2RHaHBjeTVwYm5OMFlXNWpaVTFoZEhKcGVDNWpiM1Z1ZENBcUlETXBMQ0F6S1Nrc0lIUXVkRzlCY25KaGVTaDBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSXVZWEp5WVhrc0lHVWdLaUF6S1RzS0lDQWdJSDBLSUNBZ0lITmxkRTFoZEhKcGVFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBMblJ2UVhKeVlYa29kR2hwY3k1cGJuTjBZVzVqWlUxaGRISnBlQzVoY25KaGVTd2daU0FxSURFMktUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMXZjbkJvVkdGeVoyVjBjeWdwSUh0OUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSmthWE53YjNObElnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRcDlPd3A0WVM1d2NtOTBiM1I1Y0dVdWFYTkpibk4wWVc1alpXUk5aWE5vSUQwZ0lUQTdDblpoY2lCbWRDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1pIUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRHbHVaVUpoYzJsalRXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lHRmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXNhVzVsZDJsa2RHZ2dQU0F4TENCMGFHbHpMbXhwYm1WallYQWdQU0FpY205MWJtUWlMQ0IwYUdsekxteHBibVZxYjJsdUlEMGdJbkp2ZFc1a0lpd2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjJ4dmNpNWpiM0I1S0dVdVkyOXNiM0lwTENCMGFHbHpMbXhwYm1WM2FXUjBhQ0E5SUdVdWJHbHVaWGRwWkhSb0xDQjBhR2x6TG14cGJtVmpZWEFnUFNCbExteHBibVZqWVhBc0lIUm9hWE11YkdsdVpXcHZhVzRnUFNCbExteHBibVZxYjJsdUxDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwbWRDNXdjbTkwYjNSNWNHVXVhWE5NYVc1bFFtRnphV05OWVhSbGNtbGhiQ0E5SUNFd093cDJZWElnWVdNZ1BTQnVaWGNnVFN3Z2JHTWdQU0J1WlhjZ1RTd2dZMk1nUFNCdVpYY2djR1VzSUZodklEMGdibVYzSUVOdUxDQnRjeUE5SUc1bGR5QkJiaXdnYjI0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1gyVXNJSFFnUFNCdVpYY2dablFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lreHBibVVpTENCMGFHbHpMbWRsYjIxbGRISjVJRDBnWlN3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUhRc0lIUm9hWE11ZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXRZWFJsY21saGJDQTlJR1V1YldGMFpYSnBZV3dzSUhSb2FYTXVaMlZ2YldWMGNua2dQU0JsTG1kbGIyMWxkSEo1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVXhwYm1WRWFYTjBZVzVqWlhNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1kbGIyMWxkSEo1T3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbWx6UW5WbVptVnlSMlZ2YldWMGNua3BJR2xtSUNobExtbHVaR1Y0SUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCdUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQW9nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBeExDQnlJRDBnZEM1amIzVnVkRHNnYVNBOElISTdJR2tyS3lsaFl5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFFzSUdrZ0xTQXhLU3dnYkdNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBMQ0JwS1N3Z2JsdHBYU0E5SUc1YmFTQXRJREZkTENCdVcybGRJQ3M5SUdGakxtUnBjM1JoYm1ObFZHOG9iR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbk5sZEVGMGRISnBZblYwWlNnaWJHbHVaVVJwYzNSaGJtTmxJaXdnYm1WM0lHUmxLRzRzSURFcEtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hVzVsTG1OdmJYQjFkR1ZNYVc1bFJHbHpkR0Z1WTJWektDazZJRU52YlhCMWRHRjBhVzl1SUc5dWJIa2djRzl6YzJsaWJHVWdkMmwwYUNCdWIyNHRhVzVrWlhobFpDQkNkV1ptWlhKSFpXOXRaWFJ5ZVM0aUtUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdVdWFYTkhaVzl0WlhSeWVTQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TWFXNWxMbU52YlhCMWRHVk1hVzVsUkdsemRHRnVZMlZ6S0NrZ2JtOGdiRzl1WjJWeUlITjFjSEJ2Y25SeklGUklVa1ZGTGtkbGIyMWxkSEo1TGlCVmMyVWdWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbmtnYVc1emRHVmhaQzRpS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEpoZVdOaGMzUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVuWlc5dFpYUnllU3dnYVNBOUlIUm9hWE11YldGMGNtbDRWMjl5YkdRc0lISWdQU0JsTG5CaGNtRnRjeTVNYVc1bExuUm9jbVZ6YUc5c1pDd2dieUE5SUc0dVpISmhkMUpoYm1kbE93b2dJQ0FnSUNBZ0lHbG1JQ2h1TG1KdmRXNWthVzVuVTNCb1pYSmxJRDA5UFNCdWRXeHNJQ1ltSUc0dVkyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2tzSUcxekxtTnZjSGtvYmk1aWIzVnVaR2x1WjFOd2FHVnlaU2tzSUcxekxtRndjR3g1VFdGMGNtbDROQ2hwS1N3Z2JYTXVjbUZrYVhWeklDczlJSElzSUdVdWNtRjVMbWx1ZEdWeWMyVmpkSE5UY0dobGNtVW9iWE1wSUQwOVBTQWhNU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR05qTG1OdmNIa29hU2t1YVc1MlpYSjBLQ2tzSUZodkxtTnZjSGtvWlM1eVlYa3BMbUZ3Y0d4NVRXRjBjbWw0TkNoall5azdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnlJQzhnS0NoMGFHbHpMbk5qWVd4bExuZ2dLeUIwYUdsekxuTmpZV3hsTG5rZ0t5QjBhR2x6TG5OallXeGxMbm9wSUM4Z015a3NJR3dnUFNCaElDb2dZU3dnWXlBOUlHNWxkeUJOTENCb0lEMGdibVYzSUUwc0lIVWdQU0J1WlhjZ1RTd2daQ0E5SUc1bGR5Qk5MQ0JtSUQwZ2RHaHBjeTVwYzB4cGJtVlRaV2R0Wlc1MGN5QS9JRElnT2lBeE93b2dJQ0FnSUNBZ0lHbG1JQ2h1TG1selFuVm1abVZ5UjJWdmJXVjBjbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQnVMbWx1WkdWNExDQjJJRDBnYmk1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JTQWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQk5ZWFJvTG0xaGVDZ3dMQ0J2TG5OMFlYSjBLU3dnY0NBOUlFMWhkR2d1YldsdUtHMHVZMjkxYm5Rc0lHOHVjM1JoY25RZ0t5QnZMbU52ZFc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1h5QTlJR2NzSUhrZ1BTQndJQzBnTVRzZ1h5QThJSGs3SUY4Z0t6MGdaaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0lnUFNCdExtZGxkRmdvWHlrc0lFRWdQU0J0TG1kbGRGZ29YeUFySURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoakxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kaXdnWWlrc0lHZ3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gyTENCQktTd2dXRzh1WkdsemRHRnVZMlZUY1ZSdlUyVm5iV1Z1ZENoakxDQm9MQ0JrTENCMUtTQStJR3dwSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUXVZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JKSUQwZ1pTNXlZWGt1YjNKcFoybHVMbVJwYzNSaGJtTmxWRzhvWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdTU0E4SUdVdWJtVmhjaUI4ZkNCSklENGdaUzVtWVhJZ2ZId2dkQzV3ZFhOb0tIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklFa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZhVzUwT2lCMUxtTnNiMjVsS0NrdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZURvZ1h5d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptRmpaVG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptRmpaVWx1WkdWNE9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUTZJSFJvYVhNS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnVFdGMGFDNXRZWGdvTUN3Z2J5NXpkR0Z5ZENrc0lIQWdQU0JOWVhSb0xtMXBiaWgyTG1OdmRXNTBMQ0J2TG5OMFlYSjBJQ3NnYnk1amIzVnVkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjhnUFNCbkxDQjVJRDBnY0NBdElERTdJRjhnUENCNU95QmZJQ3M5SUdZcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoakxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kaXdnWHlrc0lHZ3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gyTENCZklDc2dNU2tzSUZodkxtUnBjM1JoYm1ObFUzRlViMU5sWjIxbGJuUW9ZeXdnYUN3Z1pDd2dkU2tnUGlCc0tTQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrTG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6TG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FTQTlJR1V1Y21GNUxtOXlhV2RwYmk1a2FYTjBZVzVqWlZSdktHUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVFZ1BDQmxMbTVsWVhJZ2ZId2dRU0ErSUdVdVptRnlJSHg4SUhRdWNIVnphQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNSaGJtTmxPaUJCTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWREb2dkUzVqYkc5dVpTZ3BMbUZ3Y0d4NVRXRjBjbWw0TkNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZzZJRjhzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1poWTJVNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1poWTJWSmJtUmxlRG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IySnFaV04wT2lCMGFHbHpDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdiaTVwYzBkbGIyMWxkSEo1SUNZbUlHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa3hwYm1VdWNtRjVZMkZ6ZENncElHNXZJR3h2Ym1kbGNpQnpkWEJ3YjNKMGN5QlVTRkpGUlM1SFpXOXRaWFJ5ZVM0Z1ZYTmxJRlJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1SUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWTmIzSndhRlJoY21kbGRITW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1selFuVm1abVZ5UjJWdmJXVjBjbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5d2diaUE5SUU5aWFtVmpkQzVyWlhsektIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaTVzWlc1bmRHZ2dQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSYmJsc3dYVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNZ1BTQmJYU3dnZEdocGN5NXRiM0p3YUZSaGNtZGxkRVJwWTNScGIyNWhjbmtnUFNCN2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd0xDQnZJRDBnYVM1c1pXNW5kR2c3SUhJZ1BDQnZPeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUdsYmNsMHVibUZ0WlNCOGZDQlRkSEpwYm1jb2NpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWekxuQjFjMmdvTUNrc0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNVcyRmRJRDBnY2pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXViVzl5Y0doVVlYSm5aWFJ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQjBJQ0U5UFNCMmIybGtJREFnSmlZZ2RDNXNaVzVuZEdnZ1BpQXdJQ1ltSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxreHBibVV1ZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrZ1pHOWxjeUJ1YjNRZ2MzVndjRzl5ZENCVVNGSkZSUzVIWlc5dFpYUnllUzRnVlhObElGUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5T3dwdmJpNXdjbTkwYjNSNWNHVXVhWE5NYVc1bElEMGdJVEE3Q25aaGNpQm9ZeUE5SUc1bGR5Qk5MQ0IxWXlBOUlHNWxkeUJOTENCM2RDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2IyNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWt4cGJtVlRaV2R0Wlc1MGN5STdDaUFnSUNCOUNpQWdJQ0JqYjIxd2RYUmxUR2x1WlVScGMzUmhibU5sY3lncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WjJWdmJXVjBjbms3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVhWE5DZFdabVpYSkhaVzl0WlhSeWVTa2dhV1lnS0dVdWFXNWtaWGdnUFQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMbUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRzSUc0Z1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlIUXVZMjkxYm5RN0lHa2dQQ0J5T3lCcElDczlJRElwYUdNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBMQ0JwS1N3Z2RXTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCcElDc2dNU2tzSUc1YmFWMGdQU0JwSUQwOVBTQXdJRDhnTUNBNklHNWJhU0F0SURGZExDQnVXMmtnS3lBeFhTQTlJRzViYVYwZ0t5Qm9ZeTVrYVhOMFlXNWpaVlJ2S0hWaktUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1elpYUkJkSFJ5YVdKMWRHVW9JbXhwYm1WRWFYTjBZVzVqWlNJc0lHNWxkeUJrWlNodUxDQXhLU2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEdsdVpWTmxaMjFsYm5SekxtTnZiWEIxZEdWTWFXNWxSR2x6ZEdGdVkyVnpLQ2s2SUVOdmJYQjFkR0YwYVc5dUlHOXViSGtnY0c5emMybGliR1VnZDJsMGFDQnViMjR0YVc1a1pYaGxaQ0JDZFdabVpYSkhaVzl0WlhSeWVTNGlLVHNLSUNBZ0lDQWdJQ0JsYkhObElHVXVhWE5IWlc5dFpYUnllU0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU1hVzVsVTJWbmJXVnVkSE11WTI5dGNIVjBaVXhwYm1WRWFYTjBZVzVqWlhNb0tTQnVieUJzYjI1blpYSWdjM1Z3Y0c5eWRITWdWRWhTUlVVdVIyVnZiV1YwY25rdUlGVnpaU0JVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRcDlPd3AzZEM1d2NtOTBiM1I1Y0dVdWFYTk1hVzVsVTJWbmJXVnVkSE1nUFNBaE1Ec0tkbUZ5SUhsaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCdmJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVEdsdVpVeHZiM0FpT3dvZ0lDQWdmUXA5T3dwNVlTNXdjbTkwYjNSNWNHVXVhWE5NYVc1bFRHOXZjQ0E5SUNFd093cDJZWElnYW00Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxCdmFXNTBjMDFoZEdWeWFXRnNJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJoWlNneE5qYzNOekl4TlNrc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWMybDZaU0E5SURFc0lIUm9hWE11YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDBnSVRBc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZMjlzYjNJdVkyOXdlU2hsTG1OdmJHOXlLU3dnZEdocGN5NXRZWEFnUFNCbExtMWhjQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJR1V1WVd4d2FHRk5ZWEFzSUhSb2FYTXVjMmw2WlNBOUlHVXVjMmw2WlN3Z2RHaHBjeTV6YVhwbFFYUjBaVzUxWVhScGIyNGdQU0JsTG5OcGVtVkJkSFJsYm5WaGRHbHZiaXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0thbTR1Y0hKdmRHOTBlWEJsTG1selVHOXBiblJ6VFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUdSaklEMGdibVYzSUhCbExDQnpZU0E5SUc1bGR5QkRiaXdnWjNNZ1BTQnVaWGNnUVc0c0lIaHpJRDBnYm1WM0lFMHNJSHB5SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJPWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUY5bExDQjBJRDBnYm1WM0lHcHVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKUWIybHVkSE1pTENCMGFHbHpMbWRsYjIxbGRISjVJRDBnWlN3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUhRc0lIUm9hWE11ZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXRZWFJsY21saGJDQTlJR1V1YldGMFpYSnBZV3dzSUhSb2FYTXVaMlZ2YldWMGNua2dQU0JsTG1kbGIyMWxkSEo1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY21GNVkyRnpkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1kbGIyMWxkSEo1TENCcElEMGdkR2hwY3k1dFlYUnlhWGhYYjNKc1pDd2djaUE5SUdVdWNHRnlZVzF6TGxCdmFXNTBjeTUwYUhKbGMyaHZiR1FzSUc4Z1BTQnVMbVJ5WVhkU1lXNW5aVHNLSUNBZ0lDQWdJQ0JwWmlBb2JpNWliM1Z1WkdsdVoxTndhR1Z5WlNBOVBUMGdiblZzYkNBbUppQnVMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncExDQm5jeTVqYjNCNUtHNHVZbTkxYm1ScGJtZFRjR2hsY21VcExDQm5jeTVoY0hCc2VVMWhkSEpwZURRb2FTa3NJR2R6TG5KaFpHbDFjeUFyUFNCeUxDQmxMbkpoZVM1cGJuUmxjbk5sWTNSelUzQm9aWEpsS0dkektTQTlQVDBnSVRFcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCa1l5NWpiM0I1S0drcExtbHVkbVZ5ZENncExDQnpZUzVqYjNCNUtHVXVjbUY1S1M1aGNIQnNlVTFoZEhKcGVEUW9aR01wT3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnY2lBdklDZ29kR2hwY3k1elkyRnNaUzU0SUNzZ2RHaHBjeTV6WTJGc1pTNTVJQ3NnZEdocGN5NXpZMkZzWlM1NktTQXZJRE1wTENCc0lEMGdZU0FxSUdFN0NpQWdJQ0FnSUNBZ2FXWWdLRzR1YVhOQ2RXWm1aWEpIWlc5dFpYUnllU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHNHVhVzVrWlhnc0lIVWdQU0J1TG1GMGRISnBZblYwWlhNdWNHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaklDRTlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlFMWhkR2d1YldGNEtEQXNJRzh1YzNSaGNuUXBMQ0JtSUQwZ1RXRjBhQzV0YVc0b1l5NWpiM1Z1ZEN3Z2J5NXpkR0Z5ZENBcklHOHVZMjkxYm5RcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdaQ3dnZUNBOUlHWTdJRzBnUENCNE95QnRLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ1l5NW5aWFJZS0cwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGh6TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RTd2dkaWtzSUdaaktIaHpMQ0IyTENCc0xDQnBMQ0JsTENCMExDQjBhR2x6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1RXRjBhQzV0WVhnb01Dd2dieTV6ZEdGeWRDa3NJR1lnUFNCTllYUm9MbTFwYmloMUxtTnZkVzUwTENCdkxuTjBZWEowSUNzZ2J5NWpiM1Z1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUcwZ1BTQmtMQ0I0SUQwZ1pqc2diU0E4SUhnN0lHMHJLeWw0Y3k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIVXNJRzBwTENCbVl5aDRjeXdnYlN3Z2JDd2dhU3dnWlN3Z2RDd2dkR2hwY3lrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUc5cGJuUnpMbkpoZVdOaGMzUW9LU0J1YnlCc2IyNW5aWElnYzNWd2NHOXlkSE1nVkVoU1JVVXVSMlZ2YldWMGNua3VJRlZ6WlNCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVuWlc5dFpYUnllVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNXBjMEoxWm1abGNrZGxiMjFsZEhKNUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1dGIzSndhRUYwZEhKcFluVjBaWE1zSUc0Z1BTQlBZbXBsWTNRdWEyVjVjeWgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c0dWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBXMjViTUYxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJRDBnVzEwc0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNUlEMGdlMzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHa3ViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnBXM0pkTG01aGJXVWdmSHdnVTNSeWFXNW5LSElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeTV3ZFhOb0tEQXBMQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBSR2xqZEdsdmJtRnllVnRoWFNBOUlISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG0xdmNuQm9WR0Z5WjJWMGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnZENBaFBUMGdkbTlwWkNBd0lDWW1JSFF1YkdWdVozUm9JRDRnTUNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRYjJsdWRITXVkWEJrWVhSbFRXOXljR2hVWVhKblpYUnpLQ2tnWkc5bGN5QnViM1FnYzNWd2NHOXlkQ0JVU0ZKRlJTNUhaVzl0WlhSeWVTNGdWWE5sSUZSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUlHbHVjM1JsWVdRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlPd3A2Y2k1d2NtOTBiM1I1Y0dVdWFYTlFiMmx1ZEhNZ1BTQWhNRHNLWm5WdVkzUnBiMjRnWm1Nb2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ2JHVjBJR0VnUFNCellTNWthWE4wWVc1alpWTnhWRzlRYjJsdWRDaHpLVHNLSUNBZ0lHbG1JQ2hoSUR3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCc0lEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ2MyRXVZMnh2YzJWemRGQnZhVzUwVkc5UWIybHVkQ2h6TENCc0tTd2diQzVoY0hCc2VVMWhkSEpwZURRb2JpazdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQnBMbkpoZVM1dmNtbG5hVzR1WkdsemRHRnVZMlZVYnloc0tUc0tJQ0FnSUNBZ0lDQnBaaUFvWXlBOElHa3VibVZoY2lCOGZDQmpJRDRnYVM1bVlYSXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnlMbkIxYzJnb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaVG9nWXl3S0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVlViMUpoZVRvZ1RXRjBhQzV6Y1hKMEtHRXBMQW9nSUNBZ0lDQWdJQ0FnSUNCd2IybHVkRG9nYkN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdaaFkyVTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamREb2did29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUXA5Q25aaGNpQjNhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDd2dZeWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5azdDaUFnSUNBZ0lDQWdkR2hwY3k1bWIzSnRZWFFnUFNCaElDRTlQU0IyYjJsa0lEQWdQeUJoSURvZ1IyNHNJSFJvYVhNdWJXbHVSbWxzZEdWeUlEMGdieUFoUFQwZ2RtOXBaQ0F3SUQ4Z2J5QTZJSFIwTENCMGFHbHpMbTFoWjBacGJIUmxjaUE5SUhJZ0lUMDlJSFp2YVdRZ01DQS9JSElnT2lCMGRDd2dkR2hwY3k1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlIUm9hWE03Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZFNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYUM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCbExuSmxjWFZsYzNSV2FXUmxiMFp5WVcxbFEyRnNiR0poWTJzb2RTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0p5WlhGMVpYTjBWbWxrWlc5R2NtRnRaVU5oYkd4aVlXTnJJaUJwYmlCbElDWW1JR1V1Y21WeGRXVnpkRlpwWkdWdlJuSmhiV1ZEWVd4c1ltRmpheWgxS1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG1sdFlXZGxLUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVwYldGblpUc0tJQ0FnSUNBZ0lDQWljbVZ4ZFdWemRGWnBaR1Z2Um5KaGJXVkRZV3hzWW1GamF5SWdhVzRnWlNBOVBUMGdJVEVnSmlZZ1pTNXlaV0ZrZVZOMFlYUmxJRDQ5SUdVdVNFRldSVjlEVlZKU1JVNVVYMFJCVkVFZ0ppWWdLSFJvYVhNdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrN0NpQWdJQ0I5Q24wN0NuZG9MbkJ5YjNSdmRIbHdaUzVwYzFacFpHVnZWR1Y0ZEhWeVpTQTlJQ0V3T3dwMllYSWdVMmdnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzkwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dkQW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVabTl5YldGMElEMGdiaXdnZEdocGN5NXRZV2RHYVd4MFpYSWdQU0J5ZEN3Z2RHaHBjeTV0YVc1R2FXeDBaWElnUFNCeWRDd2dkR2hwY3k1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Td2dkR2hwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUXA5T3dwVGFDNXdjbTkwYjNSNWNHVXVhWE5HY21GdFpXSjFabVpsY2xSbGVIUjFjbVVnUFNBaE1Ec0tkbUZ5SUhaaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCdmRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhMQ0JzTENCakxDQm9MQ0IxTENCa0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodWRXeHNMQ0J2TENCaExDQnNMQ0JqTENCb0xDQnBMQ0J5TENCMUxDQmtLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHRZV2RsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCdUNpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1dGFYQnRZWEJ6SUQwZ1pTd2dkR2hwY3k1bWJHbHdXU0E5SUNFeExDQjBhR2x6TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUNFeE93b2dJQ0FnZlFwOU93cDJZUzV3Y205MGIzUjVjR1V1YVhORGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlNBOUlDRXdPd3AyWVhJZ1ZHZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklHOTBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNcE93b2dJQ0FnSUNBZ0lIUm9hWE11Ym1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtmVHNLVkdndWNISnZkRzkwZVhCbExtbHpRMkZ1ZG1GelZHVjRkSFZ5WlNBOUlDRXdPd3AyWVhJZ1puSWdQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnT0N3Z2JpQTlJREFzSUdrZ1BTQk5ZWFJvTGxCSklDb2dNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEybHlZMnhsUjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVm5iV1Z1ZEhNNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhVM1JoY25RNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhUR1Z1WjNSb09pQnBDaUFnSUNBZ0lDQWdmU3dnZENBOUlFMWhkR2d1YldGNEtETXNJSFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnVzEwc0lHOGdQU0JiWFN3Z1lTQTlJRnRkTENCc0lEMGdXMTBzSUdNZ1BTQnVaWGNnVFN3Z2FDQTlJRzVsZHlCWU93b2dJQ0FnSUNBZ0lHOHVjSFZ6YUNnd0xDQXdMQ0F3S1N3Z1lTNXdkWE5vS0RBc0lEQXNJREVwTENCc0xuQjFjMmdvTGpVc0lDNDFLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnTXpzZ2RTQThQU0IwT3lCMUt5c3NJR1FnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnYmlBcklIVWdMeUIwSUNvZ2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnWXk1NElEMGdaU0FxSUUxaGRHZ3VZMjl6S0dZcExDQmpMbmtnUFNCbElDb2dUV0YwYUM1emFXNG9aaWtzSUc4dWNIVnphQ2hqTG5nc0lHTXVlU3dnWXk1NktTd2dZUzV3ZFhOb0tEQXNJREFzSURFcExDQm9MbmdnUFNBb2IxdGtYU0F2SUdVZ0t5QXhLU0F2SURJc0lHZ3VlU0E5SUNodlcyUWdLeUF4WFNBdklHVWdLeUF4S1NBdklESXNJR3d1Y0hWemFDaG9MbmdzSUdndWVTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkU0E5SURFN0lIVWdQRDBnZERzZ2RTc3JLWEl1Y0hWemFDaDFMQ0IxSUNzZ01Td2dNQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXpaWFJKYm1SbGVDaHlLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0c4c0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QmtaU2hoTENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJrWlNoc0xDQXlLU2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dabklvWlM1eVlXUnBkWE1zSUdVdWMyVm5iV1Z1ZEhNc0lHVXVkR2hsZEdGVGRHRnlkQ3dnWlM1MGFHVjBZVXhsYm1kMGFDazdDaUFnSUNCOUNuMHNJRXB1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJmWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNU3dnZENBOUlERXNJRzRnUFNBeExDQnBJRDBnT0N3Z2NpQTlJREVzSUc4Z1BTQWhNU3dnWVNBOUlEQXNJR3dnUFNCTllYUm9MbEJKSUNvZ01pbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUTNsc2FXNWtaWEpIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWelZHOXdPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhOQ2IzUjBiMjA2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthV0ZzVTJWbmJXVnVkSE02SUdrc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2RGTmxaMjFsYm5Sek9pQnlMQW9nSUNBZ0lDQWdJQ0FnSUNCdmNHVnVSVzVrWldRNklHOHNDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhVM1JoY25RNklHRXNDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhUR1Z1WjNSb09pQnNDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJSFJvYVhNN0NpQWdJQ0FnSUNBZ2FTQTlJRTFoZEdndVpteHZiM0lvYVNrc0lISWdQU0JOWVhSb0xtWnNiMjl5S0hJcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ1cxMHNJSFVnUFNCYlhTd2daQ0E5SUZ0ZExDQm1JRDBnVzEwc0lHMGdQU0F3TENCNElEMGdXMTBzSUhZZ1BTQnVJQzhnTWl3Z1p5QTlJREE3Q2lBZ0lDQWdJQ0FnY0NncExDQnZJRDA5UFNBaE1TQW1KaUFvWlNBK0lEQWdKaVlnWHlnaE1Da3NJSFFnUGlBd0lDWW1JRjhvSVRFcEtTd2dkR2hwY3k1elpYUkpibVJsZUNob0tTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLSFVzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCa1pTaGtMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QmtaU2htTENBeUtTazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdjQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhrZ1BTQnVaWGNnVFN3Z1lpQTlJRzVsZHlCTkxDQkJJRDBnTUN3Z1RDQTlJQ2gwSUMwZ1pTa2dMeUJ1T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFa2dQU0F3T3lCSklEdzlJSEk3SUVrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYXlBOUlGdGRMQ0JDSUQwZ1NTQXZJSElzSUZBZ1BTQkNJQ29nS0hRZ0xTQmxLU0FySUdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhjZ1BTQXdPeUIzSUR3OUlHazdJSGNyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVVZ1BTQjNJQzhnYVN3Z1JDQTlJRVVnS2lCc0lDc2dZU3dnVlNBOUlFMWhkR2d1YzJsdUtFUXBMQ0JHSUQwZ1RXRjBhQzVqYjNNb1JDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWk1NElEMGdVQ0FxSUZVc0lHSXVlU0E5SUMxQ0lDb2diaUFySUhZc0lHSXVlaUE5SUZBZ0tpQkdMQ0IxTG5CMWMyZ29ZaTU0TENCaUxua3NJR0l1ZWlrc0lIa3VjMlYwS0ZVc0lFd3NJRVlwTG01dmNtMWhiR2w2WlNncExDQmtMbkIxYzJnb2VTNTRMQ0I1TG5rc0lIa3VlaWtzSUdZdWNIVnphQ2hGTENBeElDMGdRaWtzSUdzdWNIVnphQ2h0S3lzcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDNXdkWE5vS0dzcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1NTQTlJREE3SUVrZ1BDQnBPeUJKS3lzcFptOXlLR3hsZENCcklEMGdNRHNnYXlBOElISTdJR3NyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRaUE5SUhoYmExMWJTVjBzSUZBZ1BTQjRXMnNnS3lBeFhWdEpYU3dnZHlBOUlIaGJheUFySURGZFcwa2dLeUF4WFN3Z1JTQTlJSGhiYTExYlNTQXJJREZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUM1d2RYTm9LRUlzSUZBc0lFVXBMQ0JvTG5CMWMyZ29VQ3dnZHl3Z1JTa3NJRUVnS3owZ05qc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmpMbUZrWkVkeWIzVndLR2NzSUVFc0lEQXBMQ0JuSUNzOUlFRTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRjhvZVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJRzBzSUVFZ1BTQnVaWGNnV0N3Z1RDQTlJRzVsZHlCTkxDQkpJRDBnTUN3Z2F5QTlJSGtnUFQwOUlDRXdJRDhnWlNBNklIUXNJRUlnUFNCNUlEMDlQU0FoTUNBL0lERWdPaUF0TVRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjNJRDBnTVRzZ2R5QThQU0JwT3lCM0t5c3BkUzV3ZFhOb0tEQXNJSFlnS2lCQ0xDQXdLU3dnWkM1d2RYTm9LREFzSUVJc0lEQXBMQ0JtTG5CMWMyZ29MalVzSUM0MUtTd2diU3NyT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVUNBOUlHMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZHlBOUlEQTdJSGNnUEQwZ2FUc2dkeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkVJRDBnZHlBdklHa2dLaUJzSUNzZ1lTd2dWU0E5SUUxaGRHZ3VZMjl6S0VRcExDQkdJRDBnVFdGMGFDNXphVzRvUkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCTUxuZ2dQU0JySUNvZ1Jpd2dUQzU1SUQwZ2RpQXFJRUlzSUV3dWVpQTlJR3NnS2lCVkxDQjFMbkIxYzJnb1RDNTRMQ0JNTG5rc0lFd3VlaWtzSUdRdWNIVnphQ2d3TENCQ0xDQXdLU3dnUVM1NElEMGdWU0FxSUM0MUlDc2dMalVzSUVFdWVTQTlJRVlnS2lBdU5TQXFJRUlnS3lBdU5Td2daaTV3ZFhOb0tFRXVlQ3dnUVM1NUtTd2diU3NyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZHlBOUlEQTdJSGNnUENCcE95QjNLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JpSUNzZ2R5d2dSQ0E5SUZBZ0t5QjNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlU0E5UFQwZ0lUQWdQeUJvTG5CMWMyZ29SQ3dnUkNBcklERXNJRVVwSURvZ2FDNXdkWE5vS0VRZ0t5QXhMQ0JFTENCRktTd2dTU0FyUFNBek93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHTXVZV1JrUjNKdmRYQW9aeXdnU1N3Z2VTQTlQVDBnSVRBZ1B5QXhJRG9nTWlrc0lHY2dLejBnU1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnU200b1pTNXlZV1JwZFhOVWIzQXNJR1V1Y21Ga2FYVnpRbTkwZEc5dExDQmxMbWhsYVdkb2RDd2daUzV5WVdScFlXeFRaV2R0Wlc1MGN5d2daUzVvWldsbmFIUlRaV2R0Wlc1MGN5d2daUzV2Y0dWdVJXNWtaV1FzSUdVdWRHaGxkR0ZUZEdGeWRDd2daUzUwYUdWMFlVeGxibWQwYUNrN0NpQWdJQ0I5Q24wc0lIQnlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QktiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Td2dkQ0E5SURFc0lHNGdQU0E0TENCcElEMGdNU3dnY2lBOUlDRXhMQ0J2SUQwZ01Dd2dZU0E5SUUxaGRHZ3VVRWtnS2lBeUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lnd0xDQmxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEyOXVaVWRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVdGc1UyVm5iV1Z1ZEhNNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRk5sWjIxbGJuUnpPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZjR1Z1Ulc1a1pXUTZJSElzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVTNSaGNuUTZJRzhzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVEdWdVozUm9PaUJoQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJ3Y2lobExuSmhaR2wxY3l3Z1pTNW9aV2xuYUhRc0lHVXVjbUZrYVdGc1UyVm5iV1Z1ZEhNc0lHVXVhR1ZwWjJoMFUyVm5iV1Z1ZEhNc0lHVXViM0JsYmtWdVpHVmtMQ0JsTG5Sb1pYUmhVM1JoY25Rc0lHVXVkR2hsZEdGTVpXNW5kR2dwT3dvZ0lDQWdmUXA5TENCaGJpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1gyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUZ0ZExDQjBJRDBnVzEwc0lHNGdQU0F4TENCcElEMGdNQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVHOXNlV2hsWkhKdmJrZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCMlpYSjBhV05sY3pvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1a2FXTmxjem9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYUmhhV3c2SUdrS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ1cxMHNJRzhnUFNCYlhUc0tJQ0FnSUNBZ0lDQmhLR2twTENCaktHNHBMQ0JvS0Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaHlMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUxDQnVaWGNnWkdVb2NpNXpiR2xqWlNncExDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCa1pTaHZMQ0F5S1Nrc0lHa2dQVDA5SURBZ1B5QjBhR2x6TG1OdmJYQjFkR1ZXWlhKMFpYaE9iM0p0WVd4ektDa2dPaUIwYUdsekxtNXZjbTFoYkdsNlpVNXZjbTFoYkhNb0tUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmhLSEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQnVaWGNnVFN3Z2VTQTlJRzVsZHlCTkxDQmlJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUVNBOUlEQTdJRUVnUENCMExteGxibWQwYURzZ1FTQXJQU0F6S1dZb2RGdEJJQ3NnTUYwc0lGOHBMQ0JtS0hSYlFTQXJJREZkTENCNUtTd2daaWgwVzBFZ0t5QXlYU3dnWWlrc0lHd29YeXdnZVN3Z1lpd2djQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUd3b2NDd2dYeXdnZVN3Z1lpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRU0E5SUdJZ0t5QXhMQ0JNSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU1NBOUlEQTdJRWtnUEQwZ1FUc2dTU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUV4YlNWMGdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnJJRDBnY0M1amJHOXVaU2dwTG14bGNuQW9lU3dnU1NBdklFRXBMQ0JDSUQwZ1h5NWpiRzl1WlNncExteGxjbkFvZVN3Z1NTQXZJRUVwTENCUUlEMGdRU0F0SUVrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhjZ1BTQXdPeUIzSUR3OUlGQTdJSGNyS3lsM0lEMDlQU0F3SUNZbUlFa2dQVDA5SUVFZ1B5Qk1XMGxkVzNkZElEMGdheUE2SUV4YlNWMWJkMTBnUFNCckxtTnNiMjVsS0NrdWJHVnljQ2hDTENCM0lDOGdVQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JKSUQwZ01Ec2dTU0E4SUVFN0lFa3JLeWxtYjNJb2JHVjBJR3NnUFNBd095QnJJRHdnTWlBcUlDaEJJQzBnU1NrZ0xTQXhPeUJyS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUlnUFNCTllYUm9MbVpzYjI5eUtHc2dMeUF5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdzZ0pTQXlJRDA5UFNBd0lEOGdLR1FvVEZ0SlhWdENJQ3NnTVYwcExDQmtLRXhiU1NBcklERmRXMEpkS1N3Z1pDaE1XMGxkVzBKZEtTa2dPaUFvWkNoTVcwbGRXMElnS3lBeFhTa3NJR1FvVEZ0SklDc2dNVjFiUWlBcklERmRLU3dnWkNoTVcwa2dLeUF4WFZ0Q1hTa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHTW9jQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlHNWxkeUJOT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIa2dQU0F3T3lCNUlEd2djaTVzWlc1bmRHZzdJSGtnS3owZ015bGZMbmdnUFNCeVcza2dLeUF3WFN3Z1h5NTVJRDBnY2x0NUlDc2dNVjBzSUY4dWVpQTlJSEpiZVNBcklESmRMQ0JmTG01dmNtMWhiR2w2WlNncExtMTFiSFJwY0d4NVUyTmhiR0Z5S0hBcExDQnlXM2tnS3lBd1hTQTlJRjh1ZUN3Z2NsdDVJQ3NnTVYwZ1BTQmZMbmtzSUhKYmVTQXJJREpkSUQwZ1h5NTZPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJvS0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJRzVsZHlCTk93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjhnUFNBd095QmZJRHdnY2k1c1pXNW5kR2c3SUY4Z0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3TG5nZ1BTQnlXMThnS3lBd1hTd2djQzU1SUQwZ2NsdGZJQ3NnTVYwc0lIQXVlaUE5SUhKYlh5QXJJREpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIa2dQU0IyS0hBcElDOGdNaUF2SUUxaGRHZ3VVRWtnS3lBdU5Td2dZaUE5SUdjb2NDa2dMeUJOWVhSb0xsQkpJQ3NnTGpVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdkxuQjFjMmdvZVN3Z01TQXRJR0lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUcwb0tTd2dkU2dwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCMUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhBZ1BTQXdPeUJ3SUR3Z2J5NXNaVzVuZEdnN0lIQWdLejBnTmlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUc5YmNDQXJJREJkTENCNUlEMGdiMXR3SUNzZ01sMHNJR0lnUFNCdlczQWdLeUEwWFN3Z1FTQTlJRTFoZEdndWJXRjRLRjhzSUhrc0lHSXBMQ0JNSUQwZ1RXRjBhQzV0YVc0b1h5d2dlU3dnWWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQklENGdMamtnSmlZZ1RDQThJQzR4SUNZbUlDaGZJRHdnTGpJZ0ppWWdLRzliY0NBcklEQmRJQ3M5SURFcExDQjVJRHdnTGpJZ0ppWWdLRzliY0NBcklESmRJQ3M5SURFcExDQmlJRHdnTGpJZ0ppWWdLRzliY0NBcklEUmRJQ3M5SURFcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCa0tIQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NpNXdkWE5vS0hBdWVDd2djQzU1TENCd0xub3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJtS0hBc0lGOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCd0lDb2dNenNLSUNBZ0lDQWdJQ0FnSUNBZ1h5NTRJRDBnWlZ0NUlDc2dNRjBzSUY4dWVTQTlJR1ZiZVNBcklERmRMQ0JmTG5vZ1BTQmxXM2tnS3lBeVhUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdiU2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQnVaWGNnVFN3Z1h5QTlJRzVsZHlCTkxDQjVJRDBnYm1WM0lFMHNJR0lnUFNCdVpYY2dUU3dnUVNBOUlHNWxkeUJZTENCTUlEMGdibVYzSUZnc0lFa2dQU0J1WlhjZ1dEc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JySUQwZ01Dd2dRaUE5SURBN0lHc2dQQ0J5TG14bGJtZDBhRHNnYXlBclBTQTVMQ0JDSUNzOUlEWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjQzV6WlhRb2NsdHJJQ3NnTUYwc0lISmJheUFySURGZExDQnlXMnNnS3lBeVhTa3NJRjh1YzJWMEtISmJheUFySUROZExDQnlXMnNnS3lBMFhTd2djbHRySUNzZ05WMHBMQ0I1TG5ObGRDaHlXMnNnS3lBMlhTd2djbHRySUNzZ04xMHNJSEpiYXlBcklEaGRLU3dnUVM1elpYUW9iMXRDSUNzZ01GMHNJRzliUWlBcklERmRLU3dnVEM1elpYUW9iMXRDSUNzZ01sMHNJRzliUWlBcklETmRLU3dnU1M1elpYUW9iMXRDSUNzZ05GMHNJRzliUWlBcklEVmRLU3dnWWk1amIzQjVLSEFwTG1Ga1pDaGZLUzVoWkdRb2VTa3VaR2wyYVdSbFUyTmhiR0Z5S0RNcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkFnUFNCMktHSXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ2hCTENCQ0lDc2dNQ3dnY0N3Z1VDa3NJSGdvVEN3Z1FpQXJJRElzSUY4c0lGQXBMQ0I0S0Vrc0lFSWdLeUEwTENCNUxDQlFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQjRLSEFzSUY4c0lIa3NJR0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZaUE4SURBZ0ppWWdjQzU0SUQwOVBTQXhJQ1ltSUNodlcxOWRJRDBnY0M1NElDMGdNU2tzSUhrdWVDQTlQVDBnTUNBbUppQjVMbm9nUFQwOUlEQWdKaVlnS0c5YlgxMGdQU0JpSUM4Z01pQXZJRTFoZEdndVVFa2dLeUF1TlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIWW9jQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoZEdGdU1paHdMbm9zSUMxd0xuZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJuS0hBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndVlYUmhiaklvTFhBdWVTd2dUV0YwYUM1emNYSjBLSEF1ZUNBcUlIQXVlQ0FySUhBdWVpQXFJSEF1ZWlrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCaGJpaGxMblpsY25ScFkyVnpMQ0JsTG1sdVpHbGpaWE1zSUdVdWNtRmthWFZ6TENCbExtUmxkR0ZwYkhNcE93b2dJQ0FnZlFwOUxDQnRjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZVzRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBd0tYc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlDZ3hJQ3NnVFdGMGFDNXpjWEowS0RVcEtTQXZJRElzSUdrZ1BTQXhJQzhnYml3Z2NpQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXa3NDaUFnSUNBZ0lDQWdJQ0FnSUMxdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdhU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSUMxcExBb2dJQ0FnSUNBZ0lDQWdJQ0F0Yml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXa3NDaUFnSUNBZ0lDQWdJQ0FnSUc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHa3NDaUFnSUNBZ0lDQWdJQ0FnSUMxdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFdrc0NpQWdJQ0FnSUNBZ0lDQWdJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMxcExBb2dJQ0FnSUNBZ0lDQWdJQ0F0Yml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnYml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FRb2dJQ0FnSUNBZ0lGMHNJRzhnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lERXhMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5Td0tJQ0FnSUNBZ0lDQWdJQ0FnTXl3S0lDQWdJQ0FnSUNBZ0lDQWdNVFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXpMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4T1N3S0lDQWdJQ0FnSUNBZ0lDQWdNVGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURFM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TlN3S0lDQWdJQ0FnSUNBZ0lDQWdNVGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJREUzTEFvZ0lDQWdJQ0FnSUNBZ0lDQTRMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRjc0NpQWdJQ0FnSUNBZ0lDQWdJREV3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBNExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOaXdLSUNBZ0lDQWdJQ0FnSUNBZ09Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRZc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJREV3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRnc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTRMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5pd0tJQ0FnSUNBZ0lDQWdJQ0FnTml3S0lDQWdJQ0FnSUNBZ0lDQWdNVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXpMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TXl3S0lDQWdJQ0FnSUNBZ0lDQWdNVFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURFMkxBb2dJQ0FnSUNBZ0lDQWdJQ0F4T0N3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UZ3NDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURFekxBb2dJQ0FnSUNBZ0lDQWdJQ0F4T0N3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ09Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRnc0NpQWdJQ0FnSUNBZ0lDQWdJRGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRFc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURFMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TWl3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01USXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJREV4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTVMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TVN3S0lDQWdJQ0FnSUNBZ0lDQWdOU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Ua3NDaUFnSUNBZ0lDQWdJQ0FnSURFeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4T1N3S0lDQWdJQ0FnSUNBZ0lDQWdOeXdLSUNBZ0lDQWdJQ0FnSUNBZ01Ua3NDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREUwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhPU3dLSUNBZ0lDQWdJQ0FnSUNBZ01UUXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeE55d0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNVElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TkN3S0lDQWdJQ0FnSUNBZ0lDQWdOU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdPUW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9jaXdnYnl3Z1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrUnZaR1ZqWVdobFpISnZia2RsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGRHRnBiRG9nZEFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnYlhJb1pTNXlZV1JwZFhNc0lHVXVaR1YwWVdsc0tUc0tJQ0FnSUgwS2ZTd2dlWE1nUFNCdVpYY2dUU3dnZG5NZ1BTQnVaWGNnVFN3Z1NtOGdQU0J1WlhjZ1RTd2dYM01nUFNCdVpYY2diblFzSUY5aElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCZlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm5Wc2JDd2dkQ0E5SURFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWRIbHdaU0E5SUNKRlpHZGxjMGRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm5aVzl0WlhSeWVUb2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHlaWE5vYjJ4a1FXNW5iR1U2SUhRS0lDQWdJQ0FnSUNCOUxDQmxJQ0U5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1RXRjBhQzV3YjNjb01UQXNJRFFwTENCeUlEMGdUV0YwYUM1amIzTW9WMjRnS2lCMEtTd2dieUE5SUdVdVoyVjBTVzVrWlhnb0tTd2dZU0E5SUdVdVoyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlwTENCc0lEMGdieUEvSUc4dVkyOTFiblFnT2lCaExtTnZkVzUwTENCaklEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnSUNBZ0lGMHNJR2dnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaVlTSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlZaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpWXlJS0lDQWdJQ0FnSUNBZ0lDQWdYU3dnZFNBOUlHNWxkeUJCY25KaGVTZ3pLU3dnWkNBOUlIdDlMQ0JtSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlEQTdJRzBnUENCc095QnRJQ3M5SURNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QS9JQ2hqV3pCZElEMGdieTVuWlhSWUtHMHBMQ0JqV3pGZElEMGdieTVuWlhSWUtHMGdLeUF4S1N3Z1kxc3lYU0E5SUc4dVoyVjBXQ2h0SUNzZ01pa3BJRG9nS0dOYk1GMGdQU0J0TENCald6RmRJRDBnYlNBcklERXNJR05iTWwwZ1BTQnRJQ3NnTWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdleUJoT2lCNElDd2dZam9nZGlBc0lHTTZJR2NnSUgwZ1BTQmZjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoNExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnWTFzd1hTa3NJSFl1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoaExDQmpXekZkS1N3Z1p5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR0VzSUdOYk1sMHBMQ0JmY3k1blpYUk9iM0p0WVd3b1NtOHBMQ0IxV3pCZElEMGdZQ1I3VFdGMGFDNXliM1Z1WkNoNExuZ2dLaUJwS1gwc0pIdE5ZWFJvTG5KdmRXNWtLSGd1ZVNBcUlHa3BmU3drZTAxaGRHZ3VjbTkxYm1Rb2VDNTZJQ29nYVNsOVlDd2dkVnN4WFNBOUlHQWtlMDFoZEdndWNtOTFibVFvZGk1NElDb2dhU2w5TENSN1RXRjBhQzV5YjNWdVpDaDJMbmtnS2lCcEtYMHNKSHROWVhSb0xuSnZkVzVrS0hZdWVpQXFJR2twZldBc0lIVmJNbDBnUFNCZ0pIdE5ZWFJvTG5KdmRXNWtLR2N1ZUNBcUlHa3BmU3drZTAxaGRHZ3VjbTkxYm1Rb1p5NTVJQ29nYVNsOUxDUjdUV0YwYUM1eWIzVnVaQ2huTG5vZ0tpQnBLWDFnTENBaEtIVmJNRjBnUFQwOUlIVmJNVjBnZkh3Z2RWc3hYU0E5UFQwZ2RWc3lYU0I4ZkNCMVd6SmRJRDA5UFNCMVd6QmRLU2tnWm05eUtHeGxkQ0J3SUQwZ01Ec2djQ0E4SURNN0lIQXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjhnUFNBb2NDQXJJREVwSUNVZ015d2dlU0E5SUhWYmNGMHNJR0lnUFNCMVcxOWRMQ0JCSUQwZ1gzTmJhRnR3WFYwc0lFd2dQU0JmYzF0b1cxOWRYU3dnU1NBOUlHQWtlM2w5WHlSN1luMWdMQ0JySUQwZ1lDUjdZbjFmSkh0NWZXQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYXlCcGJpQmtJQ1ltSUdSYmExMGdQeUFvU204dVpHOTBLR1JiYTEwdWJtOXliV0ZzS1NBOFBTQnlJQ1ltSUNobUxuQjFjMmdvUVM1NExDQkJMbmtzSUVFdWVpa3NJR1l1Y0hWemFDaE1MbmdzSUV3dWVTd2dUQzU2S1Nrc0lHUmJhMTBnUFNCdWRXeHNLU0E2SUVrZ2FXNGdaQ0I4ZkNBb1pGdEpYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZ3dPaUJqVzNCZExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlREU2SUdOYlgxMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNXZjbTFoYkRvZ1NtOHVZMnh2Ym1Vb0tRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNCcGJpQmtLV2xtSUNoa1cyMWRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2V5QnBibVJsZURBNklIZ2dMQ0JwYm1SbGVERTZJSFlnSUgwZ1BTQmtXMjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVhNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGhMQ0I0S1N3Z2RuTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hoTENCMktTd2daaTV3ZFhOb0tIbHpMbmdzSUhsekxua3NJSGx6TG5vcExDQm1MbkIxYzJnb2RuTXVlQ3dnZG5NdWVTd2dkbk11ZWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHWXNJRE1wS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wc0lFTjBJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEzVnlkbVVpTENCMGFHbHpMbUZ5WTB4bGJtZDBhRVJwZG1semFXOXVjeUE5SURJd01Ec0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtOMWNuWmxPaUF1WjJWMFVHOXBiblFvS1NCdWIzUWdhVzF3YkdWdFpXNTBaV1F1SWlrc0lHNTFiR3c3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZEVGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaMlYwVlhSdlZHMWhjSEJwYm1jb1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFVHOXBiblFvYml3Z2RDazdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkSE1vWlNBOUlEVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUEQwZ1pUc2diaXNyS1hRdWNIVnphQ2gwYUdsekxtZGxkRkJ2YVc1MEtHNGdMeUJsS1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJUY0dGalpXUlFiMmx1ZEhNb1pTQTlJRFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BEMGdaVHNnYmlzcktYUXVjSFZ6YUNoMGFHbHpMbWRsZEZCdmFXNTBRWFFvYmlBdklHVXBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFeGxibWQwYUNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WjJWMFRHVnVaM1JvY3lncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFcyVXViR1Z1WjNSb0lDMGdNVjA3Q2lBZ0lDQjlDaUFnSUNCblpYUk1aVzVuZEdoektHVWdQU0IwYUdsekxtRnlZMHhsYm1kMGFFUnBkbWx6YVc5dWN5a2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbU5oWTJobFFYSmpUR1Z1WjNSb2N5QW1KaUIwYUdsekxtTmhZMmhsUVhKalRHVnVaM1JvY3k1c1pXNW5kR2dnUFQwOUlHVWdLeUF4SUNZbUlDRjBhR2x6TG01bFpXUnpWWEJrWVhSbEtTQnlaWFIxY200Z2RHaHBjeTVqWVdOb1pVRnlZMHhsYm1kMGFITTdDaUFnSUNBZ0lDQWdkR2hwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVzEwc0lHNHNJR2tnUFNCMGFHbHpMbWRsZEZCdmFXNTBLREFwTENCeUlEMGdNRHNLSUNBZ0lDQWdJQ0IwTG5CMWMyZ29NQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUQwZ01Uc2dieUE4UFNCbE95QnZLeXNwYmlBOUlIUm9hWE11WjJWMFVHOXBiblFvYnlBdklHVXBMQ0J5SUNzOUlHNHVaR2x6ZEdGdVkyVlVieWhwS1N3Z2RDNXdkWE5vS0hJcExDQnBJRDBnYmpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpZV05vWlVGeVkweGxibWQwYUhNZ1BTQjBMQ0IwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsUVhKalRHVnVaM1JvY3lncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhSb2FYTXVaMlYwVEdWdVozUm9jeWdwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWWFJ2VkcxaGNIQnBibWNvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1blpYUk1aVzVuZEdoektDa3NJR2tnUFNBd0xDQnlJRDBnYmk1c1pXNW5kR2dzSUc4N0NpQWdJQ0FnSUNBZ2RDQS9JRzhnUFNCMElEb2dieUE5SUdVZ0tpQnVXM0lnTFNBeFhUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlEQXNJR3dnUFNCeUlDMGdNU3dnWXpzS0lDQWdJQ0FnSUNCbWIzSW9PeUJoSUR3OUlHdzdLV2xtSUNocElEMGdUV0YwYUM1bWJHOXZjaWhoSUNzZ0tHd2dMU0JoS1NBdklESXBMQ0JqSUQwZ2JsdHBYU0F0SUc4c0lHTWdQQ0F3S1NCaElEMGdhU0FySURFN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1l5QStJREFwSUd3Z1BTQnBJQzBnTVRzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JDQTlJR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9hU0E5SUd3c0lHNWJhVjBnUFQwOUlHOHBJSEpsZEhWeWJpQnBJQzhnS0hJZ0xTQXhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJRzViYVYwc0lHUWdQU0J1VzJrZ0t5QXhYU0F0SUdnc0lHWWdQU0FvYnlBdElHZ3BJQzhnWkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnS0drZ0t5Qm1LU0F2SUNoeUlDMGdNU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlVZVzVuWlc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVZ0xTQXhaUzAwTENCeUlEMGdaU0FySURGbExUUTdDaUFnSUNBZ0lDQWdhU0E4SURBZ0ppWWdLR2tnUFNBd0tTd2djaUErSURFZ0ppWWdLSElnUFNBeEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11WjJWMFVHOXBiblFvYVNrc0lHRWdQU0IwYUdsekxtZGxkRkJ2YVc1MEtISXBMQ0JzSUQwZ2RDQjhmQ0FvYnk1cGMxWmxZM1J2Y2pJZ1B5QnVaWGNnV0NBNklHNWxkeUJOS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkM1amIzQjVLR0VwTG5OMVlpaHZLUzV1YjNKdFlXeHBlbVVvS1N3Z2JEc0tJQ0FnSUgwS0lDQWdJR2RsZEZSaGJtZGxiblJCZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtZGxkRlYwYjFSdFlYQndhVzVuS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEZSaGJtZGxiblFvYml3Z2RDazdDaUFnSUNCOUNpQWdJQ0JqYjIxd2RYUmxSbkpsYm1WMFJuSmhiV1Z6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRzVsZHlCTkxDQnBJRDBnVzEwc0lISWdQU0JiWFN3Z2J5QTlJRnRkTENCaElEMGdibVYzSUUwc0lHd2dQU0J1WlhjZ2NHVTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQm1JRDBnTURzZ1ppQThQU0JsT3lCbUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUdZZ0x5QmxPd29nSUNBZ0lDQWdJQ0FnSUNCcFcyWmRJRDBnZEdocGN5NW5aWFJVWVc1blpXNTBRWFFvYlN3Z2JtVjNJRTBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVd6QmRJRDBnYm1WM0lFMHNJRzliTUYwZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUU1MWJXSmxjaTVOUVZoZlZrRk1WVVVzSUdnZ1BTQk5ZWFJvTG1GaWN5aHBXekJkTG5ncExDQjFJRDBnVFdGMGFDNWhZbk1vYVZzd1hTNTVLU3dnWkNBOUlFMWhkR2d1WVdKektHbGJNRjB1ZWlrN0NpQWdJQ0FnSUNBZ2FDQThQU0JqSUNZbUlDaGpJRDBnYUN3Z2JpNXpaWFFvTVN3Z01Dd2dNQ2twTENCMUlEdzlJR01nSmlZZ0tHTWdQU0IxTENCdUxuTmxkQ2d3TENBeExDQXdLU2tzSUdRZ1BEMGdZeUFtSmlCdUxuTmxkQ2d3TENBd0xDQXhLU3dnWVM1amNtOXpjMVpsWTNSdmNuTW9hVnN3WFN3Z2Jpa3VibTl5YldGc2FYcGxLQ2tzSUhKYk1GMHVZM0p2YzNOV1pXTjBiM0p6S0dsYk1GMHNJR0VwTENCdld6QmRMbU55YjNOelZtVmpkRzl5Y3locFd6QmRMQ0J5V3pCZEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWWdQU0F4T3lCbUlEdzlJR1U3SUdZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlXMlpkSUQwZ2NsdG1JQzBnTVYwdVkyeHZibVVvS1N3Z2IxdG1YU0E5SUc5YlppQXRJREZkTG1Oc2IyNWxLQ2tzSUdFdVkzSnZjM05XWldOMGIzSnpLR2xiWmlBdElERmRMQ0JwVzJaZEtTd2dZUzVzWlc1bmRHZ29LU0ErSUU1MWJXSmxjaTVGVUZOSlRFOU9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCTllYUm9MbUZqYjNNb2JYUW9hVnRtSUMwZ01WMHVaRzkwS0dsYlpsMHBMQ0F0TVN3Z01Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbHRtWFM1aGNIQnNlVTFoZEhKcGVEUW9iQzV0WVd0bFVtOTBZWFJwYjI1QmVHbHpLR0VzSUcwcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnZXMlpkTG1OeWIzTnpWbVZqZEc5eWN5aHBXMlpkTENCeVcyWmRLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdQVDA5SUNFd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnVFdGMGFDNWhZMjl6S0cxMEtISmJNRjB1Wkc5MEtISmJaVjBwTENBdE1Td2dNU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1JQzg5SUdVc0lHbGJNRjB1Wkc5MEtHRXVZM0p2YzNOV1pXTjBiM0p6S0hKYk1GMHNJSEpiWlYwcEtTQStJREFnSmlZZ0tHWWdQU0F0WmlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SURFN0lHMGdQRDBnWlRzZ2JTc3JLWEpiYlYwdVlYQndiSGxOWVhSeWFYZzBLR3d1YldGclpWSnZkR0YwYVc5dVFYaHBjeWhwVzIxZExDQm1JQ29nYlNrcExDQnZXMjFkTG1OeWIzTnpWbVZqZEc5eWN5aHBXMjFkTENCeVcyMWRLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHRnVaMlZ1ZEhNNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUc1dmNtMWhiSE02SUhJc0NpQWdJQ0FnSUNBZ0lDQWdJR0pwYm05eWJXRnNjem9nYndvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEpqVEdWdVozUm9SR2wyYVhOcGIyNXpJRDBnWlM1aGNtTk1aVzVuZEdoRWFYWnBjMmx2Ym5Nc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGa1lYUmhPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUEwTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpUTNWeWRtVWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlZ1WlhKaGRHOXlPaUFpUTNWeWRtVXVkRzlLVTA5T0lnb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1aGNtTk1aVzVuZEdoRWFYWnBjMmx2Ym5NZ1BTQjBhR2x6TG1GeVkweGxibWQwYUVScGRtbHphVzl1Y3l3Z1pTNTBlWEJsSUQwZ2RHaHBjeTUwZVhCbExDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5WTB4bGJtZDBhRVJwZG1semFXOXVjeUE5SUdVdVlYSmpUR1Z1WjNSb1JHbDJhWE5wYjI1ekxDQjBhR2x6T3dvZ0lDQWdmUXA5TENCVmNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1EzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURBc0lIUWdQU0F3TENCdUlEMGdNU3dnYVNBOUlERXNJSElnUFNBd0xDQnZJRDBnVFdGMGFDNVFTU0FxSURJc0lHRWdQU0FoTVN3Z2JDQTlJREFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrVnNiR2x3YzJWRGRYSjJaU0lzSUhSb2FYTXVZVmdnUFNCbExDQjBhR2x6TG1GWklEMGdkQ3dnZEdocGN5NTRVbUZrYVhWeklEMGdiaXdnZEdocGN5NTVVbUZrYVhWeklEMGdhU3dnZEdocGN5NWhVM1JoY25SQmJtZHNaU0E5SUhJc0lIUm9hWE11WVVWdVpFRnVaMnhsSUQwZ2J5d2dkR2hwY3k1aFEyeHZZMnQzYVhObElEMGdZU3dnZEdocGN5NWhVbTkwWVhScGIyNGdQU0JzT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZENCOGZDQnVaWGNnV0N3Z2FTQTlJRTFoZEdndVVFa2dLaUF5TENCeUlEMGdkR2hwY3k1aFJXNWtRVzVuYkdVZ0xTQjBhR2x6TG1GVGRHRnlkRUZ1WjJ4bExDQnZJRDBnVFdGMGFDNWhZbk1vY2lrZ1BDQk9kVzFpWlhJdVJWQlRTVXhQVGpzS0lDQWdJQ0FnSUNCbWIzSW9PeUJ5SUR3Z01Ec3BjaUFyUFNCcE93b2dJQ0FnSUNBZ0lHWnZjaWc3SUhJZ1BpQnBPeWx5SUMwOUlHazdDaUFnSUNBZ0lDQWdjaUE4SUU1MWJXSmxjaTVGVUZOSlRFOU9JQ1ltSUNodklEOGdjaUE5SURBZ09pQnlJRDBnYVNrc0lIUm9hWE11WVVOc2IyTnJkMmx6WlNBOVBUMGdJVEFnSmlZZ0lXOGdKaVlnS0hJZ1BUMDlJR2tnUHlCeUlEMGdMV2tnT2lCeUlEMGdjaUF0SUdrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RHaHBjeTVoVTNSaGNuUkJibWRzWlNBcklHVWdLaUJ5TENCc0lEMGdkR2hwY3k1aFdDQXJJSFJvYVhNdWVGSmhaR2wxY3lBcUlFMWhkR2d1WTI5ektHRXBMQ0JqSUQwZ2RHaHBjeTVoV1NBcklIUm9hWE11ZVZKaFpHbDFjeUFxSUUxaGRHZ3VjMmx1S0dFcE93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtRlNiM1JoZEdsdmJpQWhQVDBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJRTFoZEdndVkyOXpLSFJvYVhNdVlWSnZkR0YwYVc5dUtTd2dkU0E5SUUxaGRHZ3VjMmx1S0hSb2FYTXVZVkp2ZEdGMGFXOXVLU3dnWkNBOUlHd2dMU0IwYUdsekxtRllMQ0JtSUQwZ1l5QXRJSFJvYVhNdVlWazdDaUFnSUNBZ0lDQWdJQ0FnSUd3Z1BTQmtJQ29nYUNBdElHWWdLaUIxSUNzZ2RHaHBjeTVoV0N3Z1l5QTlJR1FnS2lCMUlDc2daaUFxSUdnZ0t5QjBhR2x6TG1GWk93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpaWFFvYkN3Z1l5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVoV0NBOUlHVXVZVmdzSUhSb2FYTXVZVmtnUFNCbExtRlpMQ0IwYUdsekxuaFNZV1JwZFhNZ1BTQmxMbmhTWVdScGRYTXNJSFJvYVhNdWVWSmhaR2wxY3lBOUlHVXVlVkpoWkdsMWN5d2dkR2hwY3k1aFUzUmhjblJCYm1kc1pTQTlJR1V1WVZOMFlYSjBRVzVuYkdVc0lIUm9hWE11WVVWdVpFRnVaMnhsSUQwZ1pTNWhSVzVrUVc1bmJHVXNJSFJvYVhNdVlVTnNiMk5yZDJselpTQTlJR1V1WVVOc2IyTnJkMmx6WlN3Z2RHaHBjeTVoVW05MFlYUnBiMjRnUFNCbExtRlNiM1JoZEdsdmJpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1GWUlEMGdkR2hwY3k1aFdDd2daUzVoV1NBOUlIUm9hWE11WVZrc0lHVXVlRkpoWkdsMWN5QTlJSFJvYVhNdWVGSmhaR2wxY3l3Z1pTNTVVbUZrYVhWeklEMGdkR2hwY3k1NVVtRmthWFZ6TENCbExtRlRkR0Z5ZEVGdVoyeGxJRDBnZEdocGN5NWhVM1JoY25SQmJtZHNaU3dnWlM1aFJXNWtRVzVuYkdVZ1BTQjBhR2x6TG1GRmJtUkJibWRzWlN3Z1pTNWhRMnh2WTJ0M2FYTmxJRDBnZEdocGN5NWhRMnh2WTJ0M2FYTmxMQ0JsTG1GU2IzUmhkR2x2YmlBOUlIUm9hWE11WVZKdmRHRjBhVzl1TENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNW1jbTl0U2xOUFRpaGxLU3dnZEdocGN5NWhXQ0E5SUdVdVlWZ3NJSFJvYVhNdVlWa2dQU0JsTG1GWkxDQjBhR2x6TG5oU1lXUnBkWE1nUFNCbExuaFNZV1JwZFhNc0lIUm9hWE11ZVZKaFpHbDFjeUE5SUdVdWVWSmhaR2wxY3l3Z2RHaHBjeTVoVTNSaGNuUkJibWRzWlNBOUlHVXVZVk4wWVhKMFFXNW5iR1VzSUhSb2FYTXVZVVZ1WkVGdVoyeGxJRDBnWlM1aFJXNWtRVzVuYkdVc0lIUm9hWE11WVVOc2IyTnJkMmx6WlNBOUlHVXVZVU5zYjJOcmQybHpaU3dnZEdocGN5NWhVbTkwWVhScGIyNGdQU0JsTG1GU2IzUmhkR2x2Yml3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLVlhJdWNISnZkRzkwZVhCbExtbHpSV3hzYVhCelpVTjFjblpsSUQwZ0lUQTdDblpoY2lCTllTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1ZYSWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5bDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ3dnYml3Z2Jpd2dhU3dnY2l3Z2J5azdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtGeVkwTjFjblpsSWpzS0lDQWdJSDBLZlRzS1RXRXVjSEp2ZEc5MGVYQmxMbWx6UVhKalEzVnlkbVVnUFNBaE1Ec0tablZ1WTNScGIyNGdZbUVvS1NCN0NpQWdJQ0JzWlhRZ2N5QTlJREFzSUdVZ1BTQXdMQ0IwSUQwZ01Dd2diaUE5SURBN0NpQWdJQ0JtZFc1amRHbHZiaUJwS0hJc0lHOHNJR0VzSUd3cElIc0tJQ0FnSUNBZ0lDQnpJRDBnY2l3Z1pTQTlJR0VzSUhRZ1BTQXRNeUFxSUhJZ0t5QXpJQ29nYnlBdElESWdLaUJoSUMwZ2JDd2diaUE5SURJZ0tpQnlJQzBnTWlBcUlHOGdLeUJoSUNzZ2JEc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdhVzVwZEVOaGRHMTFiR3hTYjIwNklHWjFibU4wYVc5dUtISXNJRzhzSUdFc0lHd3NJR01wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhU2h2TENCaExDQmpJQ29nS0dFZ0xTQnlLU3dnWXlBcUlDaHNJQzBnYnlrcE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdhVzVwZEU1dmJuVnVhV1p2Y20xRFlYUnRkV3hzVW05dE9pQm1kVzVqZEdsdmJpaHlMQ0J2TENCaExDQnNMQ0JqTENCb0xDQjFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ0tHOGdMU0J5S1NBdklHTWdMU0FvWVNBdElISXBJQzhnS0dNZ0t5Qm9LU0FySUNoaElDMGdieWtnTHlCb0xDQm1JRDBnS0dFZ0xTQnZLU0F2SUdnZ0xTQW9iQ0F0SUc4cElDOGdLR2dnS3lCMUtTQXJJQ2hzSUMwZ1lTa2dMeUIxT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtJQ285SUdnc0lHWWdLajBnYUN3Z2FTaHZMQ0JoTENCa0xDQm1LVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdOaGJHTTZJR1oxYm1OMGFXOXVLSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQnlJQ29nY2l3Z1lTQTlJRzhnS2lCeU93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjeUFySUdVZ0tpQnlJQ3NnZENBcUlHOGdLeUJ1SUNvZ1lUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOU93cDlDblpoY2lCTmN5QTlJRzVsZHlCTkxDQlpieUE5SUc1bGR5QmlZU3dnV204Z1BTQnVaWGNnWW1Fc0lDUnZJRDBnYm1WM0lHSmhMQ0IzWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nUTNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRnRkTENCMElEMGdJVEVzSUc0Z1BTQWlZMlZ1ZEhKcGNHVjBZV3dpTENCcElEMGdMalVwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrTmhkRzExYkd4U2IyMURkWEoyWlRNaUxDQjBhR2x6TG5CdmFXNTBjeUE5SUdVc0lIUm9hWE11WTJ4dmMyVmtJRDBnZEN3Z2RHaHBjeTVqZFhKMlpWUjVjR1VnUFNCdUxDQjBhR2x6TG5SbGJuTnBiMjRnUFNCcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUW9aU3dnZENBOUlHNWxkeUJOS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMExDQnBJRDBnZEdocGN5NXdiMmx1ZEhNc0lISWdQU0JwTG14bGJtZDBhQ3dnYnlBOUlDaHlJQzBnS0hSb2FYTXVZMnh2YzJWa0lEOGdNQ0E2SURFcEtTQXFJR1VzSUdFZ1BTQk5ZWFJvTG1ac2IyOXlLRzhwTENCc0lEMGdieUF0SUdFN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYkc5elpXUWdQeUJoSUNzOUlHRWdQaUF3SUQ4Z01DQTZJQ2hOWVhSb0xtWnNiMjl5S0UxaGRHZ3VZV0p6S0dFcElDOGdjaWtnS3lBeEtTQXFJSElnT2lCc0lEMDlQU0F3SUNZbUlHRWdQVDA5SUhJZ0xTQXhJQ1ltSUNoaElEMGdjaUF0SURJc0lHd2dQU0F4S1RzS0lDQWdJQ0FnSUNCc1pYUWdZeXdnYURzS0lDQWdJQ0FnSUNCMGFHbHpMbU5zYjNObFpDQjhmQ0JoSUQ0Z01DQS9JR01nUFNCcFd5aGhJQzBnTVNrZ0pTQnlYU0E2SUNoTmN5NXpkV0pXWldOMGIzSnpLR2xiTUYwc0lHbGJNVjBwTG1Ga1pDaHBXekJkS1N3Z1l5QTlJRTF6S1RzS0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUdsYllTQWxJSEpkTENCa0lEMGdhVnNvWVNBcklERXBJQ1VnY2wwN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkyeHZjMlZrSUh4OElHRWdLeUF5SUR3Z2NpQS9JR2dnUFNCcFd5aGhJQ3NnTWlrZ0pTQnlYU0E2SUNoTmN5NXpkV0pXWldOMGIzSnpLR2xiY2lBdElERmRMQ0JwVzNJZ0xTQXlYU2t1WVdSa0tHbGJjaUF0SURGZEtTd2dhQ0E5SUUxektTd2dkR2hwY3k1amRYSjJaVlI1Y0dVZ1BUMDlJQ0pqWlc1MGNtbHdaWFJoYkNJZ2ZId2dkR2hwY3k1amRYSjJaVlI1Y0dVZ1BUMDlJQ0pqYUc5eVpHRnNJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlIUm9hWE11WTNWeWRtVlVlWEJsSUQwOVBTQWlZMmh2Y21SaGJDSWdQeUF1TlNBNklDNHlOU3dnYlNBOUlFMWhkR2d1Y0c5M0tHTXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9kU2tzSUdZcExDQjRJRDBnVFdGMGFDNXdiM2NvZFM1a2FYTjBZVzVqWlZSdlUzRjFZWEpsWkNoa0tTd2daaWtzSUhZZ1BTQk5ZWFJvTG5CdmR5aGtMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLR2dwTENCbUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZUNBOElERmxMVFFnSmlZZ0tIZ2dQU0F4S1N3Z2JTQThJREZsTFRRZ0ppWWdLRzBnUFNCNEtTd2dkaUE4SURGbExUUWdKaVlnS0hZZ1BTQjRLU3dnV1c4dWFXNXBkRTV2Ym5WdWFXWnZjbTFEWVhSdGRXeHNVbTl0S0dNdWVDd2dkUzU0TENCa0xuZ3NJR2d1ZUN3Z2JTd2dlQ3dnZGlrc0lGcHZMbWx1YVhST2IyNTFibWxtYjNKdFEyRjBiWFZzYkZKdmJTaGpMbmtzSUhVdWVTd2daQzU1TENCb0xua3NJRzBzSUhnc0lIWXBMQ0FrYnk1cGJtbDBUbTl1ZFc1cFptOXliVU5oZEcxMWJHeFNiMjBvWXk1NkxDQjFMbm9zSUdRdWVpd2dhQzU2TENCdExDQjRMQ0IyS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZEdocGN5NWpkWEoyWlZSNWNHVWdQVDA5SUNKallYUnRkV3hzY205dElpQW1KaUFvV1c4dWFXNXBkRU5oZEcxMWJHeFNiMjBvWXk1NExDQjFMbmdzSUdRdWVDd2dhQzU0TENCMGFHbHpMblJsYm5OcGIyNHBMQ0JhYnk1cGJtbDBRMkYwYlhWc2JGSnZiU2hqTG5rc0lIVXVlU3dnWkM1NUxDQm9MbmtzSUhSb2FYTXVkR1Z1YzJsdmJpa3NJQ1J2TG1sdWFYUkRZWFJ0ZFd4c1VtOXRLR011ZWl3Z2RTNTZMQ0JrTG5vc0lHZ3VlaXdnZEdocGN5NTBaVzV6YVc5dUtTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjMlYwS0ZsdkxtTmhiR01vYkNrc0lGcHZMbU5oYkdNb2JDa3NJQ1J2TG1OaGJHTW9iQ2twTENCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV3YjJsdWRITWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNXdiMmx1ZEhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsTG5CdmFXNTBjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2IybHVkSE11Y0hWemFDaHBMbU5zYjI1bEtDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amJHOXpaV1FnUFNCbExtTnNiM05sWkN3Z2RHaHBjeTVqZFhKMlpWUjVjR1VnUFNCbExtTjFjblpsVkhsd1pTd2dkR2hwY3k1MFpXNXphVzl1SUQwZ1pTNTBaVzV6YVc5dUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnWlM1d2IybHVkSE1nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1d2IybHVkSE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TG5CdmFXNTBjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdaUzV3YjJsdWRITXVjSFZ6YUNocExuUnZRWEp5WVhrb0tTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbU5zYjNObFpDQTlJSFJvYVhNdVkyeHZjMlZrTENCbExtTjFjblpsVkhsd1pTQTlJSFJvYVhNdVkzVnlkbVZVZVhCbExDQmxMblJsYm5OcGIyNGdQU0IwYUdsekxuUmxibk5wYjI0c0lHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11Y0c5cGJuUnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVjRzlwYm5SekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1d2IybHVkSE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNHOXBiblJ6TG5CMWMyZ29ibVYzSUUwb0tTNW1jbTl0UVhKeVlYa29hU2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiRzl6WldRZ1BTQmxMbU5zYjNObFpDd2dkR2hwY3k1amRYSjJaVlI1Y0dVZ1BTQmxMbU4xY25abFZIbHdaU3dnZEdocGN5NTBaVzV6YVc5dUlEMGdaUzUwWlc1emFXOXVMQ0IwYUdsek93b2dJQ0FnZlFwOU93cDNZUzV3Y205MGIzUjVjR1V1YVhORFlYUnRkV3hzVW05dFEzVnlkbVV6SUQwZ0lUQTdDbVoxYm1OMGFXOXVJSEJqS0hNc0lHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lHeGxkQ0J5SUQwZ0tHNGdMU0JsS1NBcUlDNDFMQ0J2SUQwZ0tHa2dMU0IwS1NBcUlDNDFMQ0JoSUQwZ2N5QXFJSE1zSUd3Z1BTQnpJQ29nWVRzS0lDQWdJSEpsZEhWeWJpQW9NaUFxSUhRZ0xTQXlJQ29nYmlBcklISWdLeUJ2S1NBcUlHd2dLeUFvTFRNZ0tpQjBJQ3NnTXlBcUlHNGdMU0F5SUNvZ2NpQXRJRzhwSUNvZ1lTQXJJSElnS2lCeklDc2dkRHNLZlFwbWRXNWpkR2x2YmlCSmVDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJREVnTFNCek93b2dJQ0FnY21WMGRYSnVJSFFnS2lCMElDb2daVHNLZlFwbWRXNWpkR2x2YmlCRWVDaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdNaUFxSUNneElDMGdjeWtnS2lCeklDb2daVHNLZlFwbWRXNWpkR2x2YmlCR2VDaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdjeUFxSUhNZ0tpQmxPd3A5Q21aMWJtTjBhVzl1SUdGeUtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lISmxkSFZ5YmlCSmVDaHpMQ0JsS1NBcklFUjRLSE1zSUhRcElDc2dSbmdvY3l3Z2JpazdDbjBLWm5WdVkzUnBiMjRnVG5nb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQXhJQzBnY3pzS0lDQWdJSEpsZEhWeWJpQjBJQ29nZENBcUlIUWdLaUJsT3dwOUNtWjFibU4wYVc5dUlFSjRLSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnTVNBdElITTdDaUFnSUNCeVpYUjFjbTRnTXlBcUlIUWdLaUIwSUNvZ2N5QXFJR1U3Q24wS1puVnVZM1JwYjI0Z2VuZ29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJRE1nS2lBb01TQXRJSE1wSUNvZ2N5QXFJSE1nS2lCbE93cDlDbVoxYm1OMGFXOXVJRlY0S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCeklDb2djeUFxSUhNZ0tpQmxPd3A5Q21aMWJtTjBhVzl1SUd4eUtITXNJR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJSEpsZEhWeWJpQk9lQ2h6TENCbEtTQXJJRUo0S0hNc0lIUXBJQ3NnZW5nb2N5d2diaWtnS3lCVmVDaHpMQ0JwS1RzS2ZRcDJZWElnYkc4Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1dDd2dkQ0E5SUc1bGR5QllMQ0J1SUQwZ2JtVjNJRmdzSUdrZ1BTQnVaWGNnV0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRM1ZpYVdOQ1pYcHBaWEpEZFhKMlpTSXNJSFJvYVhNdWRqQWdQU0JsTENCMGFHbHpMbll4SUQwZ2RDd2dkR2hwY3k1Mk1pQTlJRzRzSUhSb2FYTXVkak1nUFNCcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUW9aU3dnZENBOUlHNWxkeUJZS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMExDQnBJRDBnZEdocGN5NTJNQ3dnY2lBOUlIUm9hWE11ZGpFc0lHOGdQU0IwYUdsekxuWXlMQ0JoSUQwZ2RHaHBjeTUyTXpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1elpYUW9iSElvWlN3Z2FTNTRMQ0J5TG5nc0lHOHVlQ3dnWVM1NEtTd2diSElvWlN3Z2FTNTVMQ0J5TG5rc0lHOHVlU3dnWVM1NUtTa3NJRzQ3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1Mk1DNWpiM0I1S0dVdWRqQXBMQ0IwYUdsekxuWXhMbU52Y0hrb1pTNTJNU2tzSUhSb2FYTXVkakl1WTI5d2VTaGxMbll5S1N3Z2RHaHBjeTUyTXk1amIzQjVLR1V1ZGpNcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1ZGpBZ1BTQjBhR2x6TG5Zd0xuUnZRWEp5WVhrb0tTd2daUzUyTVNBOUlIUm9hWE11ZGpFdWRHOUJjbkpoZVNncExDQmxMbll5SUQwZ2RHaHBjeTUyTWk1MGIwRnljbUY1S0Nrc0lHVXVkak1nUFNCMGFHbHpMbll6TG5SdlFYSnlZWGtvS1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVkakF1Wm5KdmJVRnljbUY1S0dVdWRqQXBMQ0IwYUdsekxuWXhMbVp5YjIxQmNuSmhlU2hsTG5ZeEtTd2dkR2hwY3k1Mk1pNW1jbTl0UVhKeVlYa29aUzUyTWlrc0lIUm9hWE11ZGpNdVpuSnZiVUZ5Y21GNUtHVXVkak1wTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BzYnk1d2NtOTBiM1I1Y0dVdWFYTkRkV0pwWTBKbGVtbGxja04xY25abElEMGdJVEE3Q25aaGNpQlRZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJOTENCMElEMGdibVYzSUUwc0lHNGdQU0J1WlhjZ1RTd2dhU0E5SUc1bGR5Qk5LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKRGRXSnBZMEpsZW1sbGNrTjFjblpsTXlJc0lIUm9hWE11ZGpBZ1BTQmxMQ0IwYUdsekxuWXhJRDBnZEN3Z2RHaHBjeTUyTWlBOUlHNHNJSFJvYVhNdWRqTWdQU0JwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVRzlwYm5Rb1pTd2dkQ0E5SUc1bGR5Qk5LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwTENCcElEMGdkR2hwY3k1Mk1Dd2djaUE5SUhSb2FYTXVkakVzSUc4Z1BTQjBhR2x6TG5ZeUxDQmhJRDBnZEdocGN5NTJNenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTV6WlhRb2JISW9aU3dnYVM1NExDQnlMbmdzSUc4dWVDd2dZUzU0S1N3Z2JISW9aU3dnYVM1NUxDQnlMbmtzSUc4dWVTd2dZUzU1S1N3Z2JISW9aU3dnYVM1NkxDQnlMbm9zSUc4dWVpd2dZUzU2S1Nrc0lHNDdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTUyTUM1amIzQjVLR1V1ZGpBcExDQjBhR2x6TG5ZeExtTnZjSGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVZMjl3ZVNobExuWXlLU3dnZEdocGN5NTJNeTVqYjNCNUtHVXVkak1wTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVkakFnUFNCMGFHbHpMbll3TG5SdlFYSnlZWGtvS1N3Z1pTNTJNU0E5SUhSb2FYTXVkakV1ZEc5QmNuSmhlU2dwTENCbExuWXlJRDBnZEdocGN5NTJNaTUwYjBGeWNtRjVLQ2tzSUdVdWRqTWdQU0IwYUdsekxuWXpMblJ2UVhKeVlYa29LU3dnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdWRqQXVabkp2YlVGeWNtRjVLR1V1ZGpBcExDQjBhR2x6TG5ZeExtWnliMjFCY25KaGVTaGxMbll4S1N3Z2RHaHBjeTUyTWk1bWNtOXRRWEp5WVhrb1pTNTJNaWtzSUhSb2FYTXVkak11Wm5KdmJVRnljbUY1S0dVdWRqTXBMQ0IwYUdsek93b2dJQ0FnZlFwOU93cFRZUzV3Y205MGIzUjVjR1V1YVhORGRXSnBZMEpsZW1sbGNrTjFjblpsTXlBOUlDRXdPd3AyWVhJZ1QzSWdQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dXQ3dnZENBOUlHNWxkeUJZS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk1hVzVsUTNWeWRtVWlMQ0IwYUdsekxuWXhJRDBnWlN3Z2RHaHBjeTUyTWlBOUlIUTdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkQ2hsTENCMElEMGdibVYzSUZncElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdQVDA5SURFZ1B5QnVMbU52Y0hrb2RHaHBjeTUyTWlrZ09pQW9iaTVqYjNCNUtIUm9hWE11ZGpJcExuTjFZaWgwYUdsekxuWXhLU3dnYmk1dGRXeDBhWEJzZVZOallXeGhjaWhsS1M1aFpHUW9kR2hwY3k1Mk1Ta3BMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1oyVjBVRzlwYm5SQmRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwVUc5cGJuUW9aU3dnZENrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJVWVc1blpXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUWdmSHdnYm1WM0lGZzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVZMjl3ZVNoMGFHbHpMbll5S1M1emRXSW9kR2hwY3k1Mk1Ta3VibTl5YldGc2FYcGxLQ2tzSUc0N0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NTJNUzVqYjNCNUtHVXVkakVwTENCMGFHbHpMbll5TG1OdmNIa29aUzUyTWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzUyTVNBOUlIUm9hWE11ZGpFdWRHOUJjbkpoZVNncExDQmxMbll5SUQwZ2RHaHBjeTUyTWk1MGIwRnljbUY1S0Nrc0lHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbVp5YjIxS1UwOU9LR1VwTENCMGFHbHpMbll4TG1aeWIyMUJjbkpoZVNobExuWXhLU3dnZEdocGN5NTJNaTVtY205dFFYSnlZWGtvWlM1Mk1pa3NJSFJvYVhNN0NpQWdJQ0I5Q24wN0NrOXlMbkJ5YjNSdmRIbHdaUzVwYzB4cGJtVkRkWEoyWlNBOUlDRXdPd3AyWVhJZ1JXZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dUU3dnZENBOUlHNWxkeUJOS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk1hVzVsUTNWeWRtVXpJaXdnZEdocGN5NXBjMHhwYm1WRGRYSjJaVE1nUFNBaE1Dd2dkR2hwY3k1Mk1TQTlJR1VzSUhSb2FYTXVkaklnUFNCME93b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUW9aU3dnZENBOUlHNWxkeUJOS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCME93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElEMDlQU0F4SUQ4Z2JpNWpiM0I1S0hSb2FYTXVkaklwSURvZ0tHNHVZMjl3ZVNoMGFHbHpMbll5S1M1emRXSW9kR2hwY3k1Mk1Ta3NJRzR1YlhWc2RHbHdiSGxUWTJGc1lYSW9aU2t1WVdSa0tIUm9hWE11ZGpFcEtTd2dianNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwUVhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRkJ2YVc1MEtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWRqRXVZMjl3ZVNobExuWXhLU3dnZEdocGN5NTJNaTVqYjNCNUtHVXVkaklwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVkakVnUFNCMGFHbHpMbll4TG5SdlFYSnlZWGtvS1N3Z1pTNTJNaUE5SUhSb2FYTXVkakl1ZEc5QmNuSmhlU2dwTENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNW1jbTl0U2xOUFRpaGxLU3dnZEdocGN5NTJNUzVtY205dFFYSnlZWGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVabkp2YlVGeWNtRjVLR1V1ZGpJcExDQjBhR2x6T3dvZ0lDQWdmUXA5TENCamJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1EzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5QllMQ0IwSUQwZ2JtVjNJRmdzSUc0Z1BTQnVaWGNnV0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVWFZoWkhKaGRHbGpRbVY2YVdWeVEzVnlkbVVpTENCMGFHbHpMbll3SUQwZ1pTd2dkR2hwY3k1Mk1TQTlJSFFzSUhSb2FYTXVkaklnUFNCdU93b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUW9aU3dnZENBOUlHNWxkeUJZS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMExDQnBJRDBnZEdocGN5NTJNQ3dnY2lBOUlIUm9hWE11ZGpFc0lHOGdQU0IwYUdsekxuWXlPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbk5sZENoaGNpaGxMQ0JwTG5nc0lISXVlQ3dnYnk1NEtTd2dZWElvWlN3Z2FTNTVMQ0J5TG5rc0lHOHVlU2twTENCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVkakF1WTI5d2VTaGxMbll3S1N3Z2RHaHBjeTUyTVM1amIzQjVLR1V1ZGpFcExDQjBhR2x6TG5ZeUxtTnZjSGtvWlM1Mk1pa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1Mk1DQTlJSFJvYVhNdWRqQXVkRzlCY25KaGVTZ3BMQ0JsTG5ZeElEMGdkR2hwY3k1Mk1TNTBiMEZ5Y21GNUtDa3NJR1V1ZGpJZ1BTQjBhR2x6TG5ZeUxuUnZRWEp5WVhrb0tTd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11ZGpBdVpuSnZiVUZ5Y21GNUtHVXVkakFwTENCMGFHbHpMbll4TG1aeWIyMUJjbkpoZVNobExuWXhLU3dnZEdocGN5NTJNaTVtY205dFFYSnlZWGtvWlM1Mk1pa3NJSFJvYVhNN0NpQWdJQ0I5Q24wN0NtTnZMbkJ5YjNSdmRIbHdaUzVwYzFGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abElEMGdJVEE3Q25aaGNpQm9ieUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJOTENCMElEMGdibVYzSUUwc0lHNGdQU0J1WlhjZ1RTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVVhWaFpISmhkR2xqUW1WNmFXVnlRM1Z5ZG1Veklpd2dkR2hwY3k1Mk1DQTlJR1VzSUhSb2FYTXVkakVnUFNCMExDQjBhR2x6TG5ZeUlEMGdianNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUWdQU0J1WlhjZ1RTa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ3dnYVNBOUlIUm9hWE11ZGpBc0lISWdQU0IwYUdsekxuWXhMQ0J2SUQwZ2RHaHBjeTUyTWpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1elpYUW9ZWElvWlN3Z2FTNTRMQ0J5TG5nc0lHOHVlQ2tzSUdGeUtHVXNJR2t1ZVN3Z2NpNTVMQ0J2TG5rcExDQmhjaWhsTENCcExub3NJSEl1ZWl3Z2J5NTZLU2tzSUc0N0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NTJNQzVqYjNCNUtHVXVkakFwTENCMGFHbHpMbll4TG1OdmNIa29aUzUyTVNrc0lIUm9hWE11ZGpJdVkyOXdlU2hsTG5ZeUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5Zd0lEMGdkR2hwY3k1Mk1DNTBiMEZ5Y21GNUtDa3NJR1V1ZGpFZ1BTQjBhR2x6TG5ZeExuUnZRWEp5WVhrb0tTd2daUzUyTWlBOUlIUm9hWE11ZGpJdWRHOUJjbkpoZVNncExDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVtY205dFNsTlBUaWhsS1N3Z2RHaHBjeTUyTUM1bWNtOXRRWEp5WVhrb1pTNTJNQ2tzSUhSb2FYTXVkakV1Wm5KdmJVRnljbUY1S0dVdWRqRXBMQ0IwYUdsekxuWXlMbVp5YjIxQmNuSmhlU2hsTG5ZeUtTd2dkR2hwY3pzS0lDQWdJSDBLZlRzS2FHOHVjSEp2ZEc5MGVYQmxMbWx6VVhWaFpISmhkR2xqUW1WNmFXVnlRM1Z5ZG1VeklEMGdJVEE3Q25aaGNpQjFieUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlGdGRLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKVGNHeHBibVZEZFhKMlpTSXNJSFJvYVhNdWNHOXBiblJ6SUQwZ1pUc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRZ1BTQnVaWGNnV0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RDd2dhU0E5SUhSb2FYTXVjRzlwYm5SekxDQnlJRDBnS0drdWJHVnVaM1JvSUMwZ01Ta2dLaUJsTENCdklEMGdUV0YwYUM1bWJHOXZjaWh5S1N3Z1lTQTlJSElnTFNCdkxDQnNJRDBnYVZ0dklEMDlQU0F3SUQ4Z2J5QTZJRzhnTFNBeFhTd2dZeUE5SUdsYmIxMHNJR2dnUFNCcFcyOGdQaUJwTG14bGJtZDBhQ0F0SURJZ1B5QnBMbXhsYm1kMGFDQXRJREVnT2lCdklDc2dNVjBzSUhVZ1BTQnBXMjhnUGlCcExteGxibWQwYUNBdElETWdQeUJwTG14bGJtZDBhQ0F0SURFZ09pQnZJQ3NnTWwwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWMyVjBLSEJqS0dFc0lHd3VlQ3dnWXk1NExDQm9MbmdzSUhVdWVDa3NJSEJqS0dFc0lHd3VlU3dnWXk1NUxDQm9MbmtzSUhVdWVTa3BMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXdiMmx1ZEhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnWlM1d2IybHVkSE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQmxMbkJ2YVc1MGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3YjJsdWRITXVjSFZ6YUNocExtTnNiMjVsS0NrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJR1V1Y0c5cGJuUnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlIUm9hWE11Y0c5cGJuUnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTV3YjJsdWRITmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVjRzlwYm5SekxuQjFjMmdvYVM1MGIwRnljbUY1S0NrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCemRYQmxjaTVtY205dFNsTlBUaWhsS1N3Z2RHaHBjeTV3YjJsdWRITWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNXdiMmx1ZEhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsTG5CdmFXNTBjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2IybHVkSE11Y0hWemFDaHVaWGNnV0NncExtWnliMjFCY25KaGVTaHBLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFwOU93cDFieTV3Y205MGIzUjVjR1V1YVhOVGNHeHBibVZEZFhKMlpTQTlJQ0V3T3dwMllYSWdWR0VnUFNCUFltcGxZM1F1Wm5KbFpYcGxLSHNLSUNBZ0lGOWZjSEp2ZEc5Zlh6b2diblZzYkN3S0lDQWdJRUZ5WTBOMWNuWmxPaUJOWVN3S0lDQWdJRU5oZEcxMWJHeFNiMjFEZFhKMlpUTTZJSGRoTEFvZ0lDQWdRM1ZpYVdOQ1pYcHBaWEpEZFhKMlpUb2diRzhzQ2lBZ0lDQkRkV0pwWTBKbGVtbGxja04xY25abE16b2dVMkVzQ2lBZ0lDQkZiR3hwY0hObFEzVnlkbVU2SUZWeUxBb2dJQ0FnVEdsdVpVTjFjblpsT2lCUGNpd0tJQ0FnSUV4cGJtVkRkWEoyWlRNNklFVm9MQW9nSUNBZ1VYVmhaSEpoZEdsalFtVjZhV1Z5UTNWeWRtVTZJR052TEFvZ0lDQWdVWFZoWkhKaGRHbGpRbVY2YVdWeVEzVnlkbVV6T2lCb2J5d0tJQ0FnSUZOd2JHbHVaVU4xY25abE9pQjFid3A5S1N3Z1FXZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEzVnlkbVZRWVhSb0lpd2dkR2hwY3k1amRYSjJaWE1nUFNCYlhTd2dkR2hwY3k1aGRYUnZRMnh2YzJVZ1BTQWhNVHNLSUNBZ0lIMEtJQ0FnSUdGa1pDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpkWEoyWlhNdWNIVnphQ2hsS1RzS0lDQWdJSDBLSUNBZ0lHTnNiM05sVUdGMGFDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVkzVnlkbVZ6V3pCZExtZGxkRkJ2YVc1MEtEQXBMQ0IwSUQwZ2RHaHBjeTVqZFhKMlpYTmJkR2hwY3k1amRYSjJaWE11YkdWdVozUm9JQzBnTVYwdVoyVjBVRzlwYm5Rb01TazdDaUFnSUNBZ0lDQWdaUzVsY1hWaGJITW9kQ2tnZkh3Z2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNodVpYY2dUM0lvZEN3Z1pTa3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaU0FxSUhSb2FYTXVaMlYwVEdWdVozUm9LQ2tzSUdrZ1BTQjBhR2x6TG1kbGRFTjFjblpsVEdWdVozUm9jeWdwTENCeUlEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb095QnlJRHdnYVM1c1pXNW5kR2c3S1hzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsYmNsMGdQajBnYmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCcFczSmRJQzBnYml3Z1lTQTlJSFJvYVhNdVkzVnlkbVZ6VzNKZExDQnNJRDBnWVM1blpYUk1aVzVuZEdnb0tTd2dZeUE5SUd3Z1BUMDlJREFnUHlBd0lEb2dNU0F0SUc4Z0x5QnNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHRXVaMlYwVUc5cGJuUkJkQ2hqTENCMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlLeXM3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnZlFvZ0lDQWdaMlYwVEdWdVozUm9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NW5aWFJEZFhKMlpVeGxibWQwYUhNb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pWdGxMbXhsYm1kMGFDQXRJREZkT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsUVhKalRHVnVaM1JvY3lncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhSb2FYTXVZMkZqYUdWTVpXNW5kR2h6SUQwZ2JuVnNiQ3dnZEdocGN5NW5aWFJEZFhKMlpVeGxibWQwYUhNb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZEVOMWNuWmxUR1Z1WjNSb2N5Z3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVqWVdOb1pVeGxibWQwYUhNZ0ppWWdkR2hwY3k1allXTm9aVXhsYm1kMGFITXViR1Z1WjNSb0lEMDlQU0IwYUdsekxtTjFjblpsY3k1c1pXNW5kR2dwSUhKbGRIVnliaUIwYUdsekxtTmhZMmhsVEdWdVozUm9jenNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJRnRkTENCMElEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEdocGN5NWpkWEoyWlhNdWJHVnVaM1JvT3lCdUlEd2dhVHNnYmlzcktYUWdLejBnZEdocGN5NWpkWEoyWlhOYmJsMHVaMlYwVEdWdVozUm9LQ2tzSUdVdWNIVnphQ2gwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpZV05vWlV4bGJtZDBhSE1nUFNCbExDQmxPd29nSUNBZ2ZRb2dJQ0FnWjJWMFUzQmhZMlZrVUc5cGJuUnpLR1VnUFNBME1Da2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4UFNCbE95QnVLeXNwZEM1d2RYTm9LSFJvYVhNdVoyVjBVRzlwYm5Rb2JpQXZJR1VwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhkWFJ2UTJ4dmMyVWdKaVlnZEM1d2RYTm9LSFJiTUYwcExDQjBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblJ6S0dVZ1BTQXhNaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVzEwc0lHNDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJSFJvYVhNdVkzVnlkbVZ6T3lCcElEd2djaTVzWlc1bmRHZzdJR2tyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdjbHRwWFN3Z1lTQTlJRzhnSmlZZ2J5NXBjMFZzYkdsd2MyVkRkWEoyWlNBL0lHVWdLaUF5SURvZ2J5QW1KaUFvYnk1cGMweHBibVZEZFhKMlpTQjhmQ0J2TG1selRHbHVaVU4xY25abE15a2dQeUF4SURvZ2J5QW1KaUJ2TG1selUzQnNhVzVsUTNWeWRtVWdQeUJsSUNvZ2J5NXdiMmx1ZEhNdWJHVnVaM1JvSURvZ1pTd2diQ0E5SUc4dVoyVjBVRzlwYm5SektHRXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdPeUJqSUR3Z2JDNXNaVzVuZEdnN0lHTXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJR3hiWTEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdUlDWW1JRzR1WlhGMVlXeHpLR2dwSUh4OElDaDBMbkIxYzJnb2FDa3NJRzRnUFNCb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhkWFJ2UTJ4dmMyVWdKaVlnZEM1c1pXNW5kR2dnUGlBeElDWW1JQ0YwVzNRdWJHVnVaM1JvSUMwZ01WMHVaWEYxWVd4ektIUmJNRjBwSUNZbUlIUXVjSFZ6YUNoMFd6QmRLU3dnZERzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZM1Z5ZG1WeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdVkzVnlkbVZ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaUzVqZFhKMlpYTmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTNWeWRtVnpMbkIxYzJnb2FTNWpiRzl1WlNncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhWMGIwTnNiM05sSUQwZ1pTNWhkWFJ2UTJ4dmMyVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCbExtRjFkRzlEYkc5elpTQTlJSFJvYVhNdVlYVjBiME5zYjNObExDQmxMbU4xY25abGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbU4xY25abGN5NXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVZM1Z5ZG1WelczUmRPd29nSUNBZ0lDQWdJQ0FnSUNCbExtTjFjblpsY3k1d2RYTm9LR2t1ZEc5S1UwOU9LQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNW1jbTl0U2xOUFRpaGxLU3dnZEdocGN5NWhkWFJ2UTJ4dmMyVWdQU0JsTG1GMWRHOURiRzl6WlN3Z2RHaHBjeTVqZFhKMlpYTWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNWpkWEoyWlhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsTG1OMWNuWmxjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amRYSjJaWE11Y0hWemFDaHVaWGNnVkdGYmFTNTBlWEJsWFNncExtWnliMjFLVTA5T0tHa3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q24wc0lHZHlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkJhQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlFZWFJvSWl3Z2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RZ1BTQnVaWGNnV0N3Z1pTQW1KaUIwYUdsekxuTmxkRVp5YjIxUWIybHVkSE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFVHOXBiblJ6S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xdmRtVlVieWhsV3pCZExuZ3NJR1ZiTUYwdWVTazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTVN3Z2JpQTlJR1V1YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hSb2FYTXViR2x1WlZSdktHVmJkRjB1ZUN3Z1pWdDBYUzU1S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzF2ZG1WVWJ5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG5ObGRDaGxMQ0IwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4cGJtVlVieWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnVDNJb2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdVkyeHZibVVvS1N3Z2JtVjNJRmdvWlN3Z2RDa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuWmxjeTV3ZFhOb0tHNHBMQ0IwYUdsekxtTjFjbkpsYm5SUWIybHVkQzV6WlhRb1pTd2dkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J4ZFdGa2NtRjBhV05EZFhKMlpWUnZLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc1bGR5QmpieWgwYUdsekxtTjFjbkpsYm5SUWIybHVkQzVqYkc5dVpTZ3BMQ0J1WlhjZ1dDaGxMQ0IwS1N3Z2JtVjNJRmdvYml3Z2FTa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuWmxjeTV3ZFhOb0tISXBMQ0IwYUdsekxtTjFjbkpsYm5SUWIybHVkQzV6WlhRb2Jpd2dhU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JpWlhwcFpYSkRkWEoyWlZSdktHVXNJSFFzSUc0c0lHa3NJSElzSUc4cElIc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHNWxkeUJzYnloMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1amJHOXVaU2dwTENCdVpYY2dXQ2hsTENCMEtTd2dibVYzSUZnb2Jpd2dhU2tzSUc1bGR5QllLSElzSUc4cEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNoaEtTd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVjMlYwS0hJc0lHOHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM0JzYVc1bFZHaHlkU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMbU5zYjI1bEtDa0tJQ0FnSUNBZ0lDQmRMbU52Ym1OaGRDaGxLU3dnYmlBOUlHNWxkeUIxYnloMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNodUtTd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVZMjl3ZVNobFcyVXViR1Z1WjNSb0lDMGdNVjBwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhKaktHVXNJSFFzSUc0c0lHa3NJSElzSUc4cElIc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExuZ3NJR3dnUFNCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1NU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZpYzJGeVl5aGxJQ3NnWVN3Z2RDQXJJR3dzSUc0c0lHa3NJSElzSUc4cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXSnpZWEpqS0dVc0lIUXNJRzRzSUdrc0lISXNJRzhwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhZbk5sYkd4cGNITmxLR1VzSUhRc0lHNHNJRzRzSUdrc0lISXNJRzhwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWld4c2FYQnpaU2hsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoTENCc0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQjBhR2x6TG1OMWNuSmxiblJRYjJsdWRDNTRMQ0JvSUQwZ2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdWVUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoWW5ObGJHeHBjSE5sS0dVZ0t5QmpMQ0IwSUNzZ2FDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhZbk5sYkd4cGNITmxLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3cElIc0tJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHNWxkeUJWY2lobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaExDQnNLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVqZFhKMlpYTXViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHTXVaMlYwVUc5cGJuUW9NQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVXVaWEYxWVd4ektIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MEtTQjhmQ0IwYUdsekxteHBibVZVYnloMUxuZ3NJSFV1ZVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11WTNWeWRtVnpMbkIxYzJnb1l5azdDaUFnSUNBZ0lDQWdiR1YwSUdnZ1BTQmpMbWRsZEZCdmFXNTBLREVwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjbkpsYm5SUWIybHVkQzVqYjNCNUtHZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG1OdmNIa29aUzVqZFhKeVpXNTBVRzlwYm5RcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WTNWeWNtVnVkRkJ2YVc1MElEMGdkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVkRzlCY25KaGVTZ3BMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1bWNtOXRTbE5QVGlobEtTd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVabkp2YlVGeWNtRjVLR1V1WTNWeWNtVnVkRkJ2YVc1MEtTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1dIUWdQU0JqYkdGemN5QmxlSFJsYm1SeklHZHlJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkWFZwWkNBOUlFVjBLQ2tzSUhSb2FYTXVkSGx3WlNBOUlDSlRhR0Z3WlNJc0lIUm9hWE11YUc5c1pYTWdQU0JiWFRzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MGMwaHZiR1Z6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwYUdsekxtaHZiR1Z6TG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsMFcyNWRJRDBnZEdocGN5NW9iMnhsYzF0dVhTNW5aWFJRYjJsdWRITW9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFE3Q2lBZ0lDQjlDaUFnSUNCbGVIUnlZV04wVUc5cGJuUnpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlRvZ2RHaHBjeTVuWlhSUWIybHVkSE1vWlNrc0NpQWdJQ0FnSUNBZ0lDQWdJR2h2YkdWek9pQjBhR2x6TG1kbGRGQnZhVzUwYzBodmJHVnpLR1VwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVhRzlzWlhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnWlM1b2IyeGxjeTVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVXVhRzlzWlhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhRzlzWlhNdWNIVnphQ2hwTG1Oc2IyNWxLQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lHVXVkWFZwWkNBOUlIUm9hWE11ZFhWcFpDd2daUzVvYjJ4bGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbWh2YkdWekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NW9iMnhsYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1b2IyeGxjeTV3ZFhOb0tHa3VkRzlLVTA5T0tDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnpkWEJsY2k1bWNtOXRTbE5QVGlobEtTd2dkR2hwY3k1MWRXbGtJRDBnWlM1MWRXbGtMQ0IwYUdsekxtaHZiR1Z6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1YUc5c1pYTXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExtaHZiR1Z6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtaHZiR1Z6TG5CMWMyZ29ibVYzSUdkeUtDa3Vabkp2YlVwVFQwNG9hU2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS2ZTd2dUM2dnUFNCN0NpQWdJQ0IwY21saGJtZDFiR0YwWlRvZ1puVnVZM1JwYjI0b2N5d2daU3dnZENBOUlESXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1VnSmlZZ1pTNXNaVzVuZEdnc0lHa2dQU0J1SUQ4Z1pWc3dYU0FxSUhRZ09pQnpMbXhsYm1kMGFDd2djaUE5SUVOb0tITXNJREFzSUdrc0lIUXNJQ0V3S1N3Z2J5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdsbUlDZ2hjaUI4ZkNCeUxtNWxlSFFnUFQwOUlISXVjSEpsZGlrZ2NtVjBkWEp1SUc4N0NpQWdJQ0FnSUNBZ2JHVjBJR0VzSUd3c0lHTXNJR2dzSUhVc0lHUXNJR1k3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNGdKaVlnS0hJZ1BTQlhlQ2h6TENCbExDQnlMQ0IwS1Nrc0lITXViR1Z1WjNSb0lENGdPREFnS2lCMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdFZ1BTQmpJRDBnYzFzd1hTd2diQ0E5SUdnZ1BTQnpXekZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMGdQU0IwT3lCdElEd2dhVHNnYlNBclBTQjBLWFVnUFNCelcyMWRMQ0JrSUQwZ2MxdHRJQ3NnTVYwc0lIVWdQQ0JoSUNZbUlDaGhJRDBnZFNrc0lHUWdQQ0JzSUNZbUlDaHNJRDBnWkNrc0lIVWdQaUJqSUNZbUlDaGpJRDBnZFNrc0lHUWdQaUJvSUNZbUlDaG9JRDBnWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1lnUFNCTllYUm9MbTFoZUNoaklDMGdZU3dnYUNBdElHd3BMQ0JtSUQwZ1ppQWhQVDBnTUNBL0lERWdMeUJtSURvZ01Ec0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIaHlLSElzSUc4c0lIUXNJR0VzSUd3c0lHWXBMQ0J2T3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCRGFDaHpMQ0JsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0JzWlhRZ2Npd2dienNLSUNBZ0lHbG1JQ2hwSUQwOVBTQjBlU2h6TENCbExDQjBMQ0J1S1NBK0lEQXBJR1p2Y2loeUlEMGdaVHNnY2lBOElIUTdJSElnS3owZ2JpbHZJRDBnYldNb2Npd2djMXR5WFN3Z2MxdHlJQ3NnTVYwc0lHOHBPd29nSUNBZ1pXeHpaU0JtYjNJb2NpQTlJSFFnTFNCdU95QnlJRDQ5SUdVN0lISWdMVDBnYmlsdklEMGdiV01vY2l3Z2MxdHlYU3dnYzF0eUlDc2dNVjBzSUc4cE93b2dJQ0FnY21WMGRYSnVJRzhnSmlZZ1ptOG9ieXdnYnk1dVpYaDBLU0FtSmlBb2RuSW9ieWtzSUc4Z1BTQnZMbTVsZUhRcExDQnZPd3A5Q21aMWJtTjBhVzl1SUZSdUtITXNJR1VwSUhzS0lDQWdJR2xtSUNnaGN5a2djbVYwZFhKdUlITTdDaUFnSUNCbElIeDhJQ2hsSUQwZ2N5azdDaUFnSUNCc1pYUWdkQ0E5SUhNc0lHNDdDaUFnSUNCa2J5QnBaaUFvYmlBOUlDRXhMQ0FoZEM1emRHVnBibVZ5SUNZbUlDaG1ieWgwTENCMExtNWxlSFFwSUh4OElDUmxLSFF1Y0hKbGRpd2dkQ3dnZEM1dVpYaDBLU0E5UFQwZ01Da3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RuSW9kQ2tzSUhRZ1BTQmxJRDBnZEM1d2NtVjJMQ0IwSUQwOVBTQjBMbTVsZUhRcElHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUc0Z1BTQWhNRHNLSUNBZ0lIMGdaV3h6WlNCMElEMGdkQzV1WlhoME93b2dJQ0FnZDJocGJHVWdLRzRnZkh3Z2RDQWhQVDBnWlNrS0lDQWdJSEpsZEhWeWJpQmxPd3A5Q21aMWJtTjBhVzl1SUhoeUtITXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBJSHNLSUNBZ0lHbG1JQ2doY3lrZ2NtVjBkWEp1T3dvZ0lDQWdJVzhnSmlZZ2NpQW1KaUJhZUNoekxDQnVMQ0JwTENCeUtUc0tJQ0FnSUd4bGRDQmhJRDBnY3l3Z2JDd2dZenNLSUNBZ0lHWnZjaWc3SUhNdWNISmxkaUFoUFQwZ2N5NXVaWGgwT3lsN0NpQWdJQ0FnSUNBZ2FXWWdLR3dnUFNCekxuQnlaWFlzSUdNZ1BTQnpMbTVsZUhRc0lISWdQeUJyZUNoekxDQnVMQ0JwTENCeUtTQTZJRWg0S0hNcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdVdWNIVnphQ2hzTG1rZ0x5QjBLU3dnWlM1d2RYTm9LSE11YVNBdklIUXBMQ0JsTG5CMWMyZ29ZeTVwSUM4Z2RDa3NJSFp5S0hNcExDQnpJRDBnWXk1dVpYaDBMQ0JoSUQwZ1l5NXVaWGgwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hNZ1BTQmpMQ0J6SUQwOVBTQmhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdQeUJ2SUQwOVBTQXhJRDhnS0hNZ1BTQkhlQ2hVYmloektTd2daU3dnZENrc0lIaHlLSE1zSUdVc0lIUXNJRzRzSUdrc0lISXNJRElwS1NBNklHOGdQVDA5SURJZ0ppWWdWbmdvY3l3Z1pTd2dkQ3dnYml3Z2FTd2djaWtnT2lCNGNpaFViaWh6S1N3Z1pTd2dkQ3dnYml3Z2FTd2djaXdnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQkllQ2h6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJSE11Y0hKbGRpd2dkQ0E5SUhNc0lHNGdQU0J6TG01bGVIUTdDaUFnSUNCcFppQW9KR1VvWlN3Z2RDd2diaWtnUGowZ01Da2djbVYwZFhKdUlDRXhPd29nSUNBZ2JHVjBJR2tnUFNCekxtNWxlSFF1Ym1WNGREc0tJQ0FnSUdadmNpZzdJR2tnSVQwOUlITXVjSEpsZGpzcGV3b2dJQ0FnSUNBZ0lHbG1JQ2hUYVNobExuZ3NJR1V1ZVN3Z2RDNTRMQ0IwTG5rc0lHNHVlQ3dnYmk1NUxDQnBMbmdzSUdrdWVTa2dKaVlnSkdVb2FTNXdjbVYyTENCcExDQnBMbTVsZUhRcElENDlJREFwSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCcElEMGdhUzV1WlhoME93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlDRXdPd3A5Q21aMWJtTjBhVzl1SUd0NEtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHeGxkQ0JwSUQwZ2N5NXdjbVYyTENCeUlEMGdjeXdnYnlBOUlITXVibVY0ZERzS0lDQWdJR2xtSUNna1pTaHBMQ0J5TENCdktTQStQU0F3S1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0JzWlhRZ1lTQTlJR2t1ZUNBOElISXVlQ0EvSUdrdWVDQThJRzh1ZUNBL0lHa3VlQ0E2SUc4dWVDQTZJSEl1ZUNBOElHOHVlQ0EvSUhJdWVDQTZJRzh1ZUN3Z2JDQTlJR2t1ZVNBOElISXVlU0EvSUdrdWVTQThJRzh1ZVNBL0lHa3VlU0E2SUc4dWVTQTZJSEl1ZVNBOElHOHVlU0EvSUhJdWVTQTZJRzh1ZVN3Z1l5QTlJR2t1ZUNBK0lISXVlQ0EvSUdrdWVDQStJRzh1ZUNBL0lHa3VlQ0E2SUc4dWVDQTZJSEl1ZUNBK0lHOHVlQ0EvSUhJdWVDQTZJRzh1ZUN3Z2FDQTlJR2t1ZVNBK0lISXVlU0EvSUdrdWVTQStJRzh1ZVNBL0lHa3VlU0E2SUc4dWVTQTZJSEl1ZVNBK0lHOHVlU0EvSUhJdWVTQTZJRzh1ZVN3Z2RTQTlJRzloS0dFc0lHd3NJR1VzSUhRc0lHNHBMQ0JrSUQwZ2IyRW9ZeXdnYUN3Z1pTd2dkQ3dnYmlrc0lHWWdQU0J6TG5CeVpYWmFMQ0J0SUQwZ2N5NXVaWGgwV2pzS0lDQWdJR1p2Y2lnN0lHWWdKaVlnWmk1NklENDlJSFVnSmlZZ2JTQW1KaUJ0TG5vZ1BEMGdaRHNwZXdvZ0lDQWdJQ0FnSUdsbUlDaG1JQ0U5UFNCekxuQnlaWFlnSmlZZ1ppQWhQVDBnY3k1dVpYaDBJQ1ltSUZOcEtHa3VlQ3dnYVM1NUxDQnlMbmdzSUhJdWVTd2dieTU0TENCdkxua3NJR1l1ZUN3Z1ppNTVLU0FtSmlBa1pTaG1MbkJ5WlhZc0lHWXNJR1l1Ym1WNGRDa2dQajBnTUNCOGZDQW9aaUE5SUdZdWNISmxkbG9zSUcwZ0lUMDlJSE11Y0hKbGRpQW1KaUJ0SUNFOVBTQnpMbTVsZUhRZ0ppWWdVMmtvYVM1NExDQnBMbmtzSUhJdWVDd2djaTU1TENCdkxuZ3NJRzh1ZVN3Z2JTNTRMQ0J0TG5rcElDWW1JQ1JsS0cwdWNISmxkaXdnYlN3Z2JTNXVaWGgwS1NBK1BTQXdLU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdJQ0FnSUcwZ1BTQnRMbTVsZUhSYU93b2dJQ0FnZlFvZ0lDQWdabTl5S0RzZ1ppQW1KaUJtTG5vZ1BqMGdkVHNwZXdvZ0lDQWdJQ0FnSUdsbUlDaG1JQ0U5UFNCekxuQnlaWFlnSmlZZ1ppQWhQVDBnY3k1dVpYaDBJQ1ltSUZOcEtHa3VlQ3dnYVM1NUxDQnlMbmdzSUhJdWVTd2dieTU0TENCdkxua3NJR1l1ZUN3Z1ppNTVLU0FtSmlBa1pTaG1MbkJ5WlhZc0lHWXNJR1l1Ym1WNGRDa2dQajBnTUNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lHWWdQU0JtTG5CeVpYWmFPd29nSUNBZ2ZRb2dJQ0FnWm05eUtEc2diU0FtSmlCdExub2dQRDBnWkRzcGV3b2dJQ0FnSUNBZ0lHbG1JQ2h0SUNFOVBTQnpMbkJ5WlhZZ0ppWWdiU0FoUFQwZ2N5NXVaWGgwSUNZbUlGTnBLR2t1ZUN3Z2FTNTVMQ0J5TG5nc0lISXVlU3dnYnk1NExDQnZMbmtzSUcwdWVDd2diUzU1S1NBbUppQWtaU2h0TG5CeVpYWXNJRzBzSUcwdWJtVjRkQ2tnUGowZ01Da2djbVYwZFhKdUlDRXhPd29nSUNBZ0lDQWdJRzBnUFNCdExtNWxlSFJhT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUNFd093cDlDbVoxYm1OMGFXOXVJRWQ0S0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdjenNLSUNBZ0lHUnZJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzR1Y0hKbGRpd2djaUE5SUc0dWJtVjRkQzV1WlhoME93b2dJQ0FnSUNBZ0lDRm1ieWhwTENCeUtTQW1KaUJNYUNocExDQnVMQ0J1TG01bGVIUXNJSElwSUNZbUlIbHlLR2tzSUhJcElDWW1JSGx5S0hJc0lHa3BJQ1ltSUNobExuQjFjMmdvYVM1cElDOGdkQ2tzSUdVdWNIVnphQ2h1TG1rZ0x5QjBLU3dnWlM1d2RYTm9LSEl1YVNBdklIUXBMQ0IyY2lodUtTd2dkbklvYmk1dVpYaDBLU3dnYmlBOUlITWdQU0J5S1N3Z2JpQTlJRzR1Ym1WNGREc0tJQ0FnSUgxM2FHbHNaU0FvYmlBaFBUMGdjeWtLSUNBZ0lISmxkSFZ5YmlCVWJpaHVLVHNLZlFwbWRXNWpkR2x2YmlCV2VDaHpMQ0JsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNCc1pYUWdieUE5SUhNN0NpQWdJQ0JrYnlCN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdkxtNWxlSFF1Ym1WNGREc0tJQ0FnSUNBZ0lDQm1iM0lvT3lCaElDRTlQU0J2TG5CeVpYWTdLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzh1YVNBaFBUMGdZUzVwSUNZbUlGRjRLRzhzSUdFcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlGSm9LRzhzSUdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRlJ1S0c4c0lHOHVibVY0ZENrc0lHd2dQU0JVYmloc0xDQnNMbTVsZUhRcExDQjRjaWh2TENCbExDQjBMQ0J1TENCcExDQnlLU3dnZUhJb2JDd2daU3dnZEN3Z2Jpd2dhU3dnY2lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWVNBOUlHRXVibVY0ZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2J5QTlJRzh1Ym1WNGREc0tJQ0FnSUgxM2FHbHNaU0FvYnlBaFBUMGdjeWtLZlFwbWRXNWpkR2x2YmlCWGVDaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlGdGRMQ0J5TENCdkxDQmhMQ0JzTENCak93b2dJQ0FnWm05eUtISWdQU0F3TENCdklEMGdaUzVzWlc1bmRHZzdJSElnUENCdk95QnlLeXNwWVNBOUlHVmJjbDBnS2lCdUxDQnNJRDBnY2lBOElHOGdMU0F4SUQ4Z1pWdHlJQ3NnTVYwZ0tpQnVJRG9nY3k1c1pXNW5kR2dzSUdNZ1BTQkRhQ2h6TENCaExDQnNMQ0J1TENBaE1Ta3NJR01nUFQwOUlHTXVibVY0ZENBbUppQW9ZeTV6ZEdWcGJtVnlJRDBnSVRBcExDQnBMbkIxYzJnb2FuZ29ZeWtwT3dvZ0lDQWdabTl5S0drdWMyOXlkQ2h4ZUNrc0lISWdQU0F3T3lCeUlEd2dhUzVzWlc1bmRHZzdJSElyS3lsWWVDaHBXM0pkTENCMEtTd2dkQ0E5SUZSdUtIUXNJSFF1Ym1WNGRDazdDaUFnSUNCeVpYUjFjbTRnZERzS2ZRcG1kVzVqZEdsdmJpQnhlQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3k1NElDMGdaUzU0T3dwOUNtWjFibU4wYVc5dUlGaDRLSE1zSUdVcElIc0tJQ0FnSUdsbUlDaGxJRDBnU25nb2N5d2daU2tzSUdVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGSm9LR1VzSUhNcE93b2dJQ0FnSUNBZ0lGUnVLR1VzSUdVdWJtVjRkQ2tzSUZSdUtIUXNJSFF1Ym1WNGRDazdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdTbmdvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCbExDQnVJRDBnY3k1NExDQnBJRDBnY3k1NUxDQnlJRDBnTFRFZ0x5QXdMQ0J2T3dvZ0lDQWdaRzhnZXdvZ0lDQWdJQ0FnSUdsbUlDaHBJRHc5SUhRdWVTQW1KaUJwSUQ0OUlIUXVibVY0ZEM1NUlDWW1JSFF1Ym1WNGRDNTVJQ0U5UFNCMExua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCMExuZ2dLeUFvYVNBdElIUXVlU2tnS2lBb2RDNXVaWGgwTG5nZ0xTQjBMbmdwSUM4Z0tIUXVibVY0ZEM1NUlDMGdkQzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dRZ1BEMGdiaUFtSmlCa0lENGdjaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQU0JrTENCa0lEMDlQU0J1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJSFF1ZVNrZ2NtVjBkWEp1SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJSFF1Ym1WNGRDNTVLU0J5WlhSMWNtNGdkQzV1WlhoME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJSFF1ZUNBOElIUXVibVY0ZEM1NElEOGdkQ0E2SUhRdWJtVjRkRHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBJRDBnZEM1dVpYaDBPd29nSUNBZ2ZYZG9hV3hsSUNoMElDRTlQU0JsS1FvZ0lDQWdhV1lnS0NGdktTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lHbG1JQ2h1SUQwOVBTQnlLU0J5WlhSMWNtNGdienNLSUNBZ0lHeGxkQ0JoSUQwZ2J5d2diQ0E5SUc4dWVDd2dZeUE5SUc4dWVTd2dhQ0E5SURFZ0x5QXdMQ0IxT3dvZ0lDQWdkQ0E5SUc4N0NpQWdJQ0JrYnlCdUlENDlJSFF1ZUNBbUppQjBMbmdnUGowZ2JDQW1KaUJ1SUNFOVBTQjBMbmdnSmlZZ1Uya29hU0E4SUdNZ1B5QnVJRG9nY2l3Z2FTd2diQ3dnWXl3Z2FTQThJR01nUHlCeUlEb2diaXdnYVN3Z2RDNTRMQ0IwTG5rcElDWW1JQ2gxSUQwZ1RXRjBhQzVoWW5Nb2FTQXRJSFF1ZVNrZ0x5QW9iaUF0SUhRdWVDa3NJSGx5S0hRc0lITXBJQ1ltSUNoMUlEd2dhQ0I4ZkNCMUlEMDlQU0JvSUNZbUlDaDBMbmdnUGlCdkxuZ2dmSHdnZEM1NElEMDlQU0J2TG5nZ0ppWWdXWGdvYnl3Z2RDa3BLU0FtSmlBb2J5QTlJSFFzSUdnZ1BTQjFLU2tzSUhRZ1BTQjBMbTVsZUhRN0NpQWdJQ0IzYUdsc1pTQW9kQ0FoUFQwZ1lTa0tJQ0FnSUhKbGRIVnliaUJ2T3dwOUNtWjFibU4wYVc5dUlGbDRLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUFrWlNoekxuQnlaWFlzSUhNc0lHVXVjSEpsZGlrZ1BDQXdJQ1ltSUNSbEtHVXVibVY0ZEN3Z2N5d2djeTV1WlhoMEtTQThJREE3Q24wS1puVnVZM1JwYjI0Z1duZ29jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdiR1YwSUdrZ1BTQnpPd29nSUNBZ1pHOGdhUzU2SUQwOVBTQnVkV3hzSUNZbUlDaHBMbm9nUFNCdllTaHBMbmdzSUdrdWVTd2daU3dnZEN3Z2Jpa3BMQ0JwTG5CeVpYWmFJRDBnYVM1d2NtVjJMQ0JwTG01bGVIUmFJRDBnYVM1dVpYaDBMQ0JwSUQwZ2FTNXVaWGgwT3dvZ0lDQWdkMmhwYkdVZ0tHa2dJVDA5SUhNcENpQWdJQ0JwTG5CeVpYWmFMbTVsZUhSYUlEMGdiblZzYkN3Z2FTNXdjbVYyV2lBOUlHNTFiR3dzSUNSNEtHa3BPd3A5Q21aMWJtTjBhVzl1SUNSNEtITXBJSHNLSUNBZ0lHeGxkQ0JsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoTENCc0xDQmpJRDBnTVRzS0lDQWdJR1J2SUhzS0lDQWdJQ0FnSUNCbWIzSW9kQ0E5SUhNc0lITWdQU0J1ZFd4c0xDQnlJRDBnYm5Wc2JDd2dieUE5SURBN0lIUTdLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLRzhyS3l3Z2JpQTlJSFFzSUdFZ1BTQXdMQ0JsSUQwZ01Ec2daU0E4SUdNZ0ppWWdLR0VyS3l3Z2JpQTlJRzR1Ym1WNGRGb3NJQ0VoYmlrN0lHVXJLeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzSUQwZ1l6c2dZU0ErSURBZ2ZId2diQ0ErSURBZ0ppWWdianNwWVNBaFBUMGdNQ0FtSmlBb2JDQTlQVDBnTUNCOGZDQWhiaUI4ZkNCMExub2dQRDBnYmk1NktTQS9JQ2hwSUQwZ2RDd2dkQ0E5SUhRdWJtVjRkRm9zSUdFdExTa2dPaUFvYVNBOUlHNHNJRzRnUFNCdUxtNWxlSFJhTENCc0xTMHBMQ0J5SUQ4Z2NpNXVaWGgwV2lBOUlHa2dPaUJ6SUQwZ2FTd2dhUzV3Y21WMldpQTlJSElzSUhJZ1BTQnBPd29nSUNBZ0lDQWdJQ0FnSUNCMElEMGdianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY2k1dVpYaDBXaUE5SUc1MWJHd3NJR01nS2owZ01qc0tJQ0FnSUgxM2FHbHNaU0FvYnlBK0lERXBDaUFnSUNCeVpYUjFjbTRnY3pzS2ZRcG1kVzVqZEdsdmJpQnZZU2h6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCeVpYUjFjbTRnY3lBOUlETXlOelkzSUNvZ0tITWdMU0IwS1NBcUlHa3NJR1VnUFNBek1qYzJOeUFxSUNobElDMGdiaWtnS2lCcExDQnpJRDBnS0hNZ2ZDQnpJRHc4SURncElDWWdNVFkzTVRFNU16VXNJSE1nUFNBb2N5QjhJSE1nUER3Z05Da2dKaUF5TlRJMk5EVXhNelVzSUhNZ1BTQW9jeUI4SUhNZ1BEd2dNaWtnSmlBNE5UZzVPVE0wTlRrc0lITWdQU0FvY3lCOElITWdQRHdnTVNrZ0ppQXhORE14TmpVMU56WTFMQ0JsSUQwZ0tHVWdmQ0JsSUR3OElEZ3BJQ1lnTVRZM01URTVNelVzSUdVZ1BTQW9aU0I4SUdVZ1BEd2dOQ2tnSmlBeU5USTJORFV4TXpVc0lHVWdQU0FvWlNCOElHVWdQRHdnTWlrZ0ppQTROVGc1T1RNME5Ua3NJR1VnUFNBb1pTQjhJR1VnUER3Z01Ta2dKaUF4TkRNeE5qVTFOelkxTENCeklId2daU0E4UENBeE93cDlDbVoxYm1OMGFXOXVJR3A0S0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnY3l3Z2RDQTlJSE03Q2lBZ0lDQmtieUFvWlM1NElEd2dkQzU0SUh4OElHVXVlQ0E5UFQwZ2RDNTRJQ1ltSUdVdWVTQThJSFF1ZVNrZ0ppWWdLSFFnUFNCbEtTd2daU0E5SUdVdWJtVjRkRHNLSUNBZ0lIZG9hV3hsSUNobElDRTlQU0J6S1FvZ0lDQWdjbVYwZFhKdUlIUTdDbjBLWm5WdVkzUnBiMjRnVTJrb2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU2tnZXdvZ0lDQWdjbVYwZFhKdUlDaHBJQzBnYnlrZ0tpQW9aU0F0SUdFcElDMGdLSE1nTFNCdktTQXFJQ2h5SUMwZ1lTa2dQajBnTUNBbUppQW9jeUF0SUc4cElDb2dLRzRnTFNCaEtTQXRJQ2gwSUMwZ2J5a2dLaUFvWlNBdElHRXBJRDQ5SURBZ0ppWWdLSFFnTFNCdktTQXFJQ2h5SUMwZ1lTa2dMU0FvYVNBdElHOHBJQ29nS0c0Z0xTQmhLU0ErUFNBd093cDlDbVoxYm1OMGFXOXVJRkY0S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCekxtNWxlSFF1YVNBaFBUMGdaUzVwSUNZbUlITXVjSEpsZGk1cElDRTlQU0JsTG1rZ0ppWWdJVXQ0S0hNc0lHVXBJQ1ltSUNoNWNpaHpMQ0JsS1NBbUppQjVjaWhsTENCektTQW1KaUJsZVNoekxDQmxLU0FtSmlBb0pHVW9jeTV3Y21WMkxDQnpMQ0JsTG5CeVpYWXBJSHg4SUNSbEtITXNJR1V1Y0hKbGRpd2daU2twSUh4OElHWnZLSE1zSUdVcElDWW1JQ1JsS0hNdWNISmxkaXdnY3l3Z2N5NXVaWGgwS1NBK0lEQWdKaVlnSkdVb1pTNXdjbVYyTENCbExDQmxMbTVsZUhRcElENGdNQ2s3Q24wS1puVnVZM1JwYjI0Z0pHVW9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUNobExua2dMU0J6TG5rcElDb2dLSFF1ZUNBdElHVXVlQ2tnTFNBb1pTNTRJQzBnY3k1NEtTQXFJQ2gwTG5rZ0xTQmxMbmtwT3dwOUNtWjFibU4wYVc5dUlHWnZLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJ6TG5nZ1BUMDlJR1V1ZUNBbUppQnpMbmtnUFQwOUlHVXVlVHNLZlFwbWRXNWpkR2x2YmlCTWFDaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlIZHpLQ1JsS0hNc0lHVXNJSFFwS1N3Z2NpQTlJSGR6S0NSbEtITXNJR1VzSUc0cEtTd2dieUE5SUhkektDUmxLSFFzSUc0c0lITXBLU3dnWVNBOUlIZHpLQ1JsS0hRc0lHNHNJR1VwS1RzS0lDQWdJSEpsZEhWeWJpQWhJU2hwSUNFOVBTQnlJQ1ltSUc4Z0lUMDlJR0VnZkh3Z2FTQTlQVDBnTUNBbUppQmljeWh6TENCMExDQmxLU0I4ZkNCeUlEMDlQU0F3SUNZbUlHSnpLSE1zSUc0c0lHVXBJSHg4SUc4Z1BUMDlJREFnSmlZZ1luTW9kQ3dnY3l3Z2Jpa2dmSHdnWVNBOVBUMGdNQ0FtSmlCaWN5aDBMQ0JsTENCdUtTazdDbjBLWm5WdVkzUnBiMjRnWW5Nb2N5d2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJR1V1ZUNBOFBTQk5ZWFJvTG0xaGVDaHpMbmdzSUhRdWVDa2dKaVlnWlM1NElENDlJRTFoZEdndWJXbHVLSE11ZUN3Z2RDNTRLU0FtSmlCbExua2dQRDBnVFdGMGFDNXRZWGdvY3k1NUxDQjBMbmtwSUNZbUlHVXVlU0ErUFNCTllYUm9MbTFwYmloekxua3NJSFF1ZVNrN0NuMEtablZ1WTNScGIyNGdkM01vY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nUGlBd0lEOGdNU0E2SUhNZ1BDQXdJRDhnTFRFZ09pQXdPd3A5Q21aMWJtTjBhVzl1SUV0NEtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdjenNLSUNBZ0lHUnZJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RDNXBJQ0U5UFNCekxta2dKaVlnZEM1dVpYaDBMbWtnSVQwOUlITXVhU0FtSmlCMExta2dJVDA5SUdVdWFTQW1KaUIwTG01bGVIUXVhU0FoUFQwZ1pTNXBJQ1ltSUV4b0tIUXNJSFF1Ym1WNGRDd2djeXdnWlNrcElISmxkSFZ5YmlBaE1Ec0tJQ0FnSUNBZ0lDQjBJRDBnZEM1dVpYaDBPd29nSUNBZ2ZYZG9hV3hsSUNoMElDRTlQU0J6S1FvZ0lDQWdjbVYwZFhKdUlDRXhPd3A5Q21aMWJtTjBhVzl1SUhseUtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQWtaU2h6TG5CeVpYWXNJSE1zSUhNdWJtVjRkQ2tnUENBd0lEOGdKR1VvY3l3Z1pTd2djeTV1WlhoMEtTQStQU0F3SUNZbUlDUmxLSE1zSUhNdWNISmxkaXdnWlNrZ1BqMGdNQ0E2SUNSbEtITXNJR1VzSUhNdWNISmxkaWtnUENBd0lIeDhJQ1JsS0hNc0lITXVibVY0ZEN3Z1pTa2dQQ0F3T3dwOUNtWjFibU4wYVc5dUlHVjVLSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnY3l3Z2JpQTlJQ0V4TENCcElEMGdLSE11ZUNBcklHVXVlQ2tnTHlBeUxDQnlJRDBnS0hNdWVTQXJJR1V1ZVNrZ0x5QXlPd29nSUNBZ1pHOGdkQzU1SUQ0Z2NpQWhQU0IwTG01bGVIUXVlU0ErSUhJZ0ppWWdkQzV1WlhoMExua2dJVDA5SUhRdWVTQW1KaUJwSUR3Z0tIUXVibVY0ZEM1NElDMGdkQzU0S1NBcUlDaHlJQzBnZEM1NUtTQXZJQ2gwTG01bGVIUXVlU0F0SUhRdWVTa2dLeUIwTG5nZ0ppWWdLRzRnUFNBaGJpa3NJSFFnUFNCMExtNWxlSFE3Q2lBZ0lDQjNhR2xzWlNBb2RDQWhQVDBnY3lrS0lDQWdJSEpsZEhWeWJpQnVPd3A5Q21aMWJtTjBhVzl1SUZKb0tITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdibVYzSUdGaEtITXVhU3dnY3k1NExDQnpMbmtwTENCdUlEMGdibVYzSUdGaEtHVXVhU3dnWlM1NExDQmxMbmtwTENCcElEMGdjeTV1WlhoMExDQnlJRDBnWlM1d2NtVjJPd29nSUNBZ2NtVjBkWEp1SUhNdWJtVjRkQ0E5SUdVc0lHVXVjSEpsZGlBOUlITXNJSFF1Ym1WNGRDQTlJR2tzSUdrdWNISmxkaUE5SUhRc0lHNHVibVY0ZENBOUlIUXNJSFF1Y0hKbGRpQTlJRzRzSUhJdWJtVjRkQ0E5SUc0c0lHNHVjSEpsZGlBOUlISXNJRzQ3Q24wS1puVnVZM1JwYjI0Z2JXTW9jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnWVdFb2N5d2daU3dnZENrN0NpQWdJQ0J5WlhSMWNtNGdiaUEvSUNocExtNWxlSFFnUFNCdUxtNWxlSFFzSUdrdWNISmxkaUE5SUc0c0lHNHVibVY0ZEM1d2NtVjJJRDBnYVN3Z2JpNXVaWGgwSUQwZ2FTa2dPaUFvYVM1d2NtVjJJRDBnYVN3Z2FTNXVaWGgwSUQwZ2FTa3NJR2s3Q24wS1puVnVZM1JwYjI0Z2RuSW9jeWtnZXdvZ0lDQWdjeTV1WlhoMExuQnlaWFlnUFNCekxuQnlaWFlzSUhNdWNISmxkaTV1WlhoMElEMGdjeTV1WlhoMExDQnpMbkJ5WlhaYUlDWW1JQ2h6TG5CeVpYWmFMbTVsZUhSYUlEMGdjeTV1WlhoMFdpa3NJSE11Ym1WNGRGb2dKaVlnS0hNdWJtVjRkRm91Y0hKbGRsb2dQU0J6TG5CeVpYWmFLVHNLZlFwbWRXNWpkR2x2YmlCaFlTaHpMQ0JsTENCMEtTQjdDaUFnSUNCMGFHbHpMbWtnUFNCekxDQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsekxua2dQU0IwTENCMGFHbHpMbkJ5WlhZZ1BTQnVkV3hzTENCMGFHbHpMbTVsZUhRZ1BTQnVkV3hzTENCMGFHbHpMbm9nUFNCdWRXeHNMQ0IwYUdsekxuQnlaWFphSUQwZ2JuVnNiQ3dnZEdocGN5NXVaWGgwV2lBOUlHNTFiR3dzSUhSb2FYTXVjM1JsYVc1bGNpQTlJQ0V4T3dwOUNtWjFibU4wYVc5dUlIUjVLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdNRHNLSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJR1VzSUc4Z1BTQjBJQzBnYmpzZ2NpQThJSFE3SUhJZ0t6MGdiaWxwSUNzOUlDaHpXMjlkSUMwZ2MxdHlYU2tnS2lBb2MxdHlJQ3NnTVYwZ0t5QnpXMjhnS3lBeFhTa3NJRzhnUFNCeU93b2dJQ0FnY21WMGRYSnVJR2s3Q24wS2RtRnlJRXAwSUQwZ1kyeGhjM01nZXdvZ0lDQWdjM1JoZEdsaklHRnlaV0VvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNXNaVzVuZEdnc0lHNGdQU0F3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlIUWdMU0F4TENCeUlEMGdNRHNnY2lBOElIUTdJR2tnUFNCeUt5c3BiaUFyUFNCbFcybGRMbmdnS2lCbFczSmRMbmtnTFNCbFczSmRMbmdnS2lCbFcybGRMbms3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzRnS2lBdU5Uc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QnBjME5zYjJOclYybHpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVwMExtRnlaV0VvWlNrZ1BDQXdPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJSFJ5YVdGdVozVnNZWFJsVTJoaGNHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1cxMHNJR2tnUFNCYlhTd2djaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHZGpLR1VwTENCNFl5aHVMQ0JsS1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdVdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUhRdVptOXlSV0ZqYUNobll5azdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNJRDBnTURzZ2JDQThJSFF1YkdWdVozUm9PeUJzS3lzcGFTNXdkWE5vS0c4cExDQnZJQ3M5SUhSYmJGMHViR1Z1WjNSb0xDQjRZeWh1TENCMFcyeGRLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRTk0TG5SeWFXRnVaM1ZzWVhSbEtHNHNJR2twT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlEQTdJR3dnUENCaExteGxibWQwYURzZ2JDQXJQU0F6S1hJdWNIVnphQ2hoTG5Oc2FXTmxLR3dzSUd3Z0t5QXpLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEk3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUdkaktITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2N5NXNaVzVuZEdnN0NpQWdJQ0JsSUQ0Z01pQW1KaUJ6VzJVZ0xTQXhYUzVsY1hWaGJITW9jMXN3WFNrZ0ppWWdjeTV3YjNBb0tUc0tmUXBtZFc1amRHbHZiaUI0WXloekxDQmxLU0I3Q2lBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2daUzVzWlc1bmRHZzdJSFFyS3lsekxuQjFjMmdvWlZ0MFhTNTRLU3dnY3k1d2RYTm9LR1ZiZEYwdWVTazdDbjBLZG1GeUlHeHVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRmgwS0ZzS0lDQWdJQ0FnSUNCdVpYY2dXQ2d1TlN3Z0xqVXBMQW9nSUNBZ0lDQWdJRzVsZHlCWUtDMHVOU3dnTGpVcExBb2dJQ0FnSUNBZ0lHNWxkeUJZS0MwdU5Td2dMUzQxS1N3S0lDQWdJQ0FnSUNCdVpYY2dXQ2d1TlN3Z0xTNDFLUW9nSUNBZ1hTa3NJSFFnUFNCN2ZTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUlhoMGNuVmtaVWRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUc5d2RHbHZibk02SUhRS0lDQWdJQ0FnSUNCOUxDQmxJRDBnUVhKeVlYa3VhWE5CY25KaGVTaGxLU0EvSUdVZ09pQmJDaUFnSUNBZ0lDQWdJQ0FnSUdVS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeXdnYVNBOUlGdGRMQ0J5SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmhJRDBnTUN3Z2JDQTlJR1V1YkdWdVozUm9PeUJoSUR3Z2JEc2dZU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQmxXMkZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZLR01wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2FTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ1pHVW9jaXdnTWlrcExDQjBhR2x6TG1OdmJYQjFkR1ZXWlhKMFpYaE9iM0p0WVd4ektDazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdieWhoS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdXMTBzSUdNZ1BTQjBMbU4xY25abFUyVm5iV1Z1ZEhNZ0lUMDlJSFp2YVdRZ01DQS9JSFF1WTNWeWRtVlRaV2R0Wlc1MGN5QTZJREV5TENCb0lEMGdkQzV6ZEdWd2N5QWhQVDBnZG05cFpDQXdJRDhnZEM1emRHVndjeUE2SURFc0lIVWdQU0IwTG1SbGNIUm9JQ0U5UFNCMmIybGtJREFnUHlCMExtUmxjSFJvSURvZ01Td2daQ0E5SUhRdVltVjJaV3hGYm1GaWJHVmtJQ0U5UFNCMmIybGtJREFnUHlCMExtSmxkbVZzUlc1aFlteGxaQ0E2SUNFd0xDQm1JRDBnZEM1aVpYWmxiRlJvYVdOcmJtVnpjeUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNWlaWFpsYkZSb2FXTnJibVZ6Y3lBNklDNHlMQ0J0SUQwZ2RDNWlaWFpsYkZOcGVtVWdJVDA5SUhadmFXUWdNQ0EvSUhRdVltVjJaV3hUYVhwbElEb2daaUF0SUM0eExDQjRJRDBnZEM1aVpYWmxiRTltWm5ObGRDQWhQVDBnZG05cFpDQXdJRDhnZEM1aVpYWmxiRTltWm5ObGRDQTZJREFzSUhZZ1BTQjBMbUpsZG1Wc1UyVm5iV1Z1ZEhNZ0lUMDlJSFp2YVdRZ01DQS9JSFF1WW1WMlpXeFRaV2R0Wlc1MGN5QTZJRE1zSUdjZ1BTQjBMbVY0ZEhKMVpHVlFZWFJvTENCd0lEMGdkQzVWVmtkbGJtVnlZWFJ2Y2lBaFBUMGdkbTlwWkNBd0lEOGdkQzVWVmtkbGJtVnlZWFJ2Y2lBNklHNTVPd29nSUNBZ0lDQWdJQ0FnSUNCMExtRnRiM1Z1ZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtWNGRISjFaR1ZDZFdabVpYSkhaVzl0WlhSeWVUb2dZVzF2ZFc1MElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdaR1Z3ZEdndUlpa3NJSFVnUFNCMExtRnRiM1Z1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZkxDQjVJRDBnSVRFc0lHSXNJRUVzSUV3c0lFazdDaUFnSUNBZ0lDQWdJQ0FnSUdjZ0ppWWdLRjhnUFNCbkxtZGxkRk53WVdObFpGQnZhVzUwY3lob0tTd2dlU0E5SUNFd0xDQmtJRDBnSVRFc0lHSWdQU0JuTG1OdmJYQjFkR1ZHY21WdVpYUkdjbUZ0WlhNb2FDd2dJVEVwTENCQklEMGdibVYzSUUwc0lFd2dQU0J1WlhjZ1RTd2dTU0E5SUc1bGR5Qk5LU3dnWkNCOGZDQW9kaUE5SURBc0lHWWdQU0F3TENCdElEMGdNQ3dnZUNBOUlEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdheUE5SUdFdVpYaDBjbUZqZEZCdmFXNTBjeWhqS1N3Z1FpQTlJR3N1YzJoaGNHVXNJRkFnUFNCckxtaHZiR1Z6T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVVwMExtbHpRMnh2WTJ0WGFYTmxLRUlwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQ0lEMGdRaTV5WlhabGNuTmxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRWNnUFNBd0xDQnFJRDBnVUM1c1pXNW5kR2c3SUVjZ1BDQnFPeUJIS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTElEMGdVRnRIWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQktkQzVwYzBOc2IyTnJWMmx6WlNoTEtTQW1KaUFvVUZ0SFhTQTlJRXN1Y21WMlpYSnpaU2dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUVwMExuUnlhV0Z1WjNWc1lYUmxVMmhoY0dVb1Fpd2dVQ2tzSUVRZ1BTQkNPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVjZ1BTQXdMQ0JxSUQwZ1VDNXNaVzVuZEdnN0lFY2dQQ0JxT3lCSEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVzZ1BTQlFXMGRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUWlBOUlFSXVZMjl1WTJGMEtFc3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRlVvUnl3Z2Fpd2dTeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR29nZkh3Z1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVSWGgwY25Wa1pVZGxiMjFsZEhKNU9pQjJaV01nWkc5bGN5QnViM1FnWlhocGMzUWlLU3dnYWk1amJHOXVaU2dwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRXNwTG1Ga1pDaEhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRUl1YkdWdVozUm9MQ0JQSUQwZ1JTNXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzVsS0Vjc0lHb3NJRXNwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFaU3dnYzJVc0lGTmxMQ0JVWlNBOUlFY3VlQ0F0SUdvdWVDd2dVR1VnUFNCSExua2dMU0JxTG5rc0lGbGxJRDBnU3k1NElDMGdSeTU0TENCRElEMGdTeTU1SUMwZ1J5NTVMQ0JVSUQwZ1ZHVWdLaUJVWlNBcklGQmxJQ29nVUdVc0lFb2dQU0JVWlNBcUlFTWdMU0JRWlNBcUlGbGxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0UxaGRHZ3VZV0p6S0VvcElENGdUblZ0WW1WeUxrVlFVMGxNVDA0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ0pDQTlJRTFoZEdndWMzRnlkQ2hVS1N3Z2NtVWdQU0JOWVhSb0xuTnhjblFvV1dVZ0tpQlpaU0FySUVNZ0tpQkRLU3dnV2lBOUlHb3VlQ0F0SUZCbElDOGdKQ3dnVFdVZ1BTQnFMbmtnS3lCVVpTQXZJQ1FzSUhabElEMGdTeTU0SUMwZ1F5QXZJSEpsTENCMFpTQTlJRXN1ZVNBcklGbGxJQzhnY21Vc0lGSWdQU0FvS0habElDMGdXaWtnS2lCRElDMGdLSFJsSUMwZ1RXVXBJQ29nV1dVcElDOGdLRlJsSUNvZ1F5QXRJRkJsSUNvZ1dXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhWbElEMGdXaUFySUZSbElDb2dVaUF0SUVjdWVDd2djMlVnUFNCTlpTQXJJRkJsSUNvZ1VpQXRJRWN1ZVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWldVZ1BTQjFaU0FxSUhWbElDc2djMlVnS2lCelpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pXVWdQRDBnTWlrZ2NtVjBkWEp1SUc1bGR5QllLSFZsTENCelpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVTJVZ1BTQk5ZWFJvTG5OeGNuUW9aV1VnTHlBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUNRZ1BTQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCVVpTQStJRTUxYldKbGNpNUZVRk5KVEU5T0lEOGdXV1VnUGlCT2RXMWlaWEl1UlZCVFNVeFBUaUFtSmlBb0pDQTlJQ0V3S1NBNklGUmxJRHdnTFU1MWJXSmxjaTVGVUZOSlRFOU9JRDhnV1dVZ1BDQXRUblZ0WW1WeUxrVlFVMGxNVDA0Z0ppWWdLQ1FnUFNBaE1Da2dPaUJOWVhSb0xuTnBaMjRvVUdVcElEMDlQU0JOWVhSb0xuTnBaMjRvUXlrZ0ppWWdLQ1FnUFNBaE1Da3NJQ1FnUHlBb2RXVWdQU0F0VUdVc0lITmxJRDBnVkdVc0lGTmxJRDBnVFdGMGFDNXpjWEowS0ZRcEtTQTZJQ2gxWlNBOUlGUmxMQ0J6WlNBOUlGQmxMQ0JUWlNBOUlFMWhkR2d1YzNGeWRDaFVJQzhnTWlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QllLSFZsSUM4Z1UyVXNJSE5sSUM4Z1UyVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCalpTQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFY2dQU0F3TENCcUlEMGdSQzVzWlc1bmRHZ3NJRXNnUFNCcUlDMGdNU3dnZFdVZ1BTQkhJQ3NnTVRzZ1J5QThJR283SUVjckt5d2dTeXNyTENCMVpTc3JLVXNnUFQwOUlHb2dKaVlnS0VzZ1BTQXdLU3dnZFdVZ1BUMDlJR29nSmlZZ0tIVmxJRDBnTUNrc0lHTmxXMGRkSUQwZ2JtVW9SRnRIWFN3Z1JGdExYU3dnUkZ0MVpWMHBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWaUE5SUZ0ZExDQlhMQ0JvWlNBOUlHTmxMbU52Ym1OaGRDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVjZ1BTQXdMQ0JxSUQwZ1VDNXNaVzVuZEdnN0lFY2dQQ0JxT3lCSEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVzZ1BTQlFXMGRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVnlBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjFaU0E5SURBc0lITmxJRDBnU3k1c1pXNW5kR2dzSUZObElEMGdjMlVnTFNBeExDQlVaU0E5SUhWbElDc2dNVHNnZFdVZ1BDQnpaVHNnZFdVckt5d2dVMlVyS3l3Z1ZHVXJLeWxUWlNBOVBUMGdjMlVnSmlZZ0tGTmxJRDBnTUNrc0lGUmxJRDA5UFNCelpTQW1KaUFvVkdVZ1BTQXdLU3dnVjF0MVpWMGdQU0J1WlNoTFczVmxYU3dnUzF0VFpWMHNJRXRiVkdWZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGWXVjSFZ6YUNoWEtTd2dhR1VnUFNCb1pTNWpiMjVqWVhRb1Z5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkhJRDBnTURzZ1J5QThJSFk3SUVjckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYWlBOUlFY2dMeUIyTENCTElEMGdaaUFxSUUxaGRHZ3VZMjl6S0dvZ0tpQk5ZWFJvTGxCSklDOGdNaWtzSUhWbElEMGdiU0FxSUUxaGRHZ3VjMmx1S0dvZ0tpQk5ZWFJvTGxCSklDOGdNaWtnS3lCNE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCelpTQTlJREFzSUZObElEMGdSQzVzWlc1bmRHZzdJSE5sSUR3Z1UyVTdJSE5sS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVVpTQTlJRlVvUkZ0elpWMHNJR05sVzNObFhTd2dkV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFTmxLRlJsTG5nc0lGUmxMbmtzSUMxTEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2MyVWdQU0F3TENCVFpTQTlJRkF1YkdWdVozUm9PeUJ6WlNBOElGTmxPeUJ6WlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZHVWdQU0JRVzNObFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JYSUQwZ1ZsdHpaVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCUVpTQTlJREFzSUZsbElEMGdWR1V1YkdWdVozUm9PeUJRWlNBOElGbGxPeUJRWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRU1nUFNCVktGUmxXMUJsWFN3Z1YxdFFaVjBzSUhWbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1EyVW9ReTU0TENCRExua3NJQzFMS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd4bElEMGdiU0FySUhnN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdSeUE5SURBN0lFY2dQQ0JHT3lCSEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdvZ1BTQmtJRDhnVlNoQ1cwZGRMQ0JvWlZ0SFhTd2diR1VwSURvZ1FsdEhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGtnUHlBb1RDNWpiM0I1S0dJdWJtOXliV0ZzYzFzd1hTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2FpNTRLU3dnUVM1amIzQjVLR0l1WW1sdWIzSnRZV3h6V3pCZEtTNXRkV3gwYVhCc2VWTmpZV3hoY2locUxua3BMQ0JKTG1OdmNIa29YMXN3WFNrdVlXUmtLRXdwTG1Ga1pDaEJLU3dnUTJVb1NTNTRMQ0JKTG5rc0lFa3VlaWtwSURvZ1EyVW9haTU0TENCcUxua3NJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUnlBOUlERTdJRWNnUEQwZ2FEc2dSeXNyS1dadmNpaHNaWFFnYWlBOUlEQTdJR29nUENCR095QnFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFc2dQU0JrSUQ4Z1ZTaENXMnBkTENCb1pWdHFYU3dnYkdVcElEb2dRbHRxWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhrZ1B5QW9UQzVqYjNCNUtHSXVibTl5YldGc2MxdEhYU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9TeTU0S1N3Z1FTNWpiM0I1S0dJdVltbHViM0p0WVd4elcwZGRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaExMbmtwTENCSkxtTnZjSGtvWDF0SFhTa3VZV1JrS0V3cExtRmtaQ2hCS1N3Z1EyVW9TUzU0TENCSkxua3NJRWt1ZWlrcElEb2dRMlVvU3k1NExDQkxMbmtzSUhVZ0x5Qm9JQ29nUnlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSElEMGdkaUF0SURFN0lFY2dQajBnTURzZ1J5MHRLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcUlEMGdSeUF2SUhZc0lFc2dQU0JtSUNvZ1RXRjBhQzVqYjNNb2FpQXFJRTFoZEdndVVFa2dMeUF5S1N3Z2RXVWdQU0J0SUNvZ1RXRjBhQzV6YVc0b2FpQXFJRTFoZEdndVVFa2dMeUF5S1NBcklIZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElITmxJRDBnTUN3Z1UyVWdQU0JFTG14bGJtZDBhRHNnYzJVZ1BDQlRaVHNnYzJVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGUmxJRDBnVlNoRVczTmxYU3dnWTJWYmMyVmRMQ0IxWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRMlVvVkdVdWVDd2dWR1V1ZVN3Z2RTQXJJRXNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J6WlNBOUlEQXNJRk5sSUQwZ1VDNXNaVzVuZEdnN0lITmxJRHdnVTJVN0lITmxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JVWlNBOUlGQmJjMlZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGY2dQU0JXVzNObFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRkJsSUQwZ01Dd2dXV1VnUFNCVVpTNXNaVzVuZEdnN0lGQmxJRHdnV1dVN0lGQmxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1F5QTlJRlVvVkdWYlVHVmRMQ0JYVzFCbFhTd2dkV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1SUQ4Z1EyVW9ReTU0TENCRExua2dLeUJmVzJnZ0xTQXhYUzU1TENCZlcyZ2dMU0F4WFM1NElDc2dTeWtnT2lCRFpTaERMbmdzSUVNdWVTd2dkU0FySUVzcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtWlNncExDQkNaU2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQm1aU2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkhJRDBnYVM1c1pXNW5kR2dnTHlBek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYWlBOUlEQXNJRXNnUFNCR0lDb2dhanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhWbElEMGdNRHNnZFdVZ1BDQlBPeUIxWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSE5sSUQwZ1JWdDFaVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGxsS0hObFd6SmRJQ3NnU3l3Z2MyVmJNVjBnS3lCTExDQnpaVnN3WFNBcklFc3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnFJRDBnYUNBcklIWWdLaUF5TENCTElEMGdSaUFxSUdvN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjFaU0E5SURBN0lIVmxJRHdnVHpzZ2RXVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCelpTQTlJRVZiZFdWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNVpTaHpaVnN3WFNBcklFc3NJSE5sV3pGZElDc2dTeXdnYzJWYk1sMGdLeUJMS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhaUE5SURBN0lHb2dQQ0JQT3lCcUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU3lBOUlFVmJhbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGxsS0V0Yk1sMHNJRXRiTVYwc0lFdGJNRjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR29nUFNBd095QnFJRHdnVHpzZ2Fpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVzZ1BTQkZXMnBkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1WlNoTFd6QmRJQ3NnUmlBcUlHZ3NJRXRiTVYwZ0t5QkdJQ29nYUN3Z1Mxc3lYU0FySUVZZ0tpQm9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdUxtRmtaRWR5YjNWd0tFY3NJR2t1YkdWdVozUm9JQzhnTXlBdElFY3NJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUVKbEtDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVjZ1BTQnBMbXhsYm1kMGFDQXZJRE1zSUdvZ1BTQXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdXU2hFTENCcUtTd2dhaUFyUFNCRUxteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU3lBOUlEQXNJSFZsSUQwZ1VDNXNaVzVuZEdnN0lFc2dQQ0IxWlRzZ1N5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjMlVnUFNCUVcwdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZrb2MyVXNJR29wTENCcUlDczlJSE5sTG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzR1WVdSa1IzSnZkWEFvUnl3Z2FTNXNaVzVuZEdnZ0x5QXpJQzBnUnl3Z01TazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdXU2hITENCcUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU3lBOUlFY3ViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLRHNnTFMxTElENDlJREE3S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFdVZ1BTQkxMQ0J6WlNBOUlFc2dMU0F4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmxJRHdnTUNBbUppQW9jMlVnUFNCSExteGxibWQwYUNBdElERXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVTJVZ1BTQXdMQ0JVWlNBOUlHZ2dLeUIySUNvZ01qc2dVMlVnUENCVVpUc2dVMlVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlFaU0E5SUVZZ0tpQlRaU3dnV1dVZ1BTQkdJQ29nS0ZObElDc2dNU2tzSUVNZ1BTQnFJQ3NnZFdVZ0t5QlFaU3dnVkNBOUlHb2dLeUJ6WlNBcklGQmxMQ0JLSUQwZ2FpQXJJSE5sSUNzZ1dXVXNJQ1FnUFNCcUlDc2dkV1VnS3lCWlpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVW9ReXdnVkN3Z1Npd2dKQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlFTmxLRWNzSUdvc0lFc3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3d1Y0hWemFDaEhLU3dnYkM1d2RYTm9LR29wTENCc0xuQjFjMmdvU3lrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2VXVW9SeXdnYWl3Z1N5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlR1VvUnlrc0lIaGxLR29wTENCNFpTaExLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMVpTQTlJR2t1YkdWdVozUm9JQzhnTXl3Z2MyVWdQU0J3TG1kbGJtVnlZWFJsVkc5d1ZWWW9iaXdnYVN3Z2RXVWdMU0F6TENCMVpTQXRJRElzSUhWbElDMGdNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JQWlNoelpWc3dYU2tzSUU5bEtITmxXekZkS1N3Z1QyVW9jMlZiTWwwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHZGxLRWNzSUdvc0lFc3NJSFZsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNFpTaEhLU3dnZUdVb2Fpa3NJSGhsS0hWbEtTd2dlR1VvYWlrc0lIaGxLRXNwTENCNFpTaDFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2MyVWdQU0JwTG14bGJtZDBhQ0F2SURNc0lGTmxJRDBnY0M1blpXNWxjbUYwWlZOcFpHVlhZV3hzVlZZb2Jpd2dhU3dnYzJVZ0xTQTJMQ0J6WlNBdElETXNJSE5sSUMwZ01pd2djMlVnTFNBeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFOWxLRk5sV3pCZEtTd2dUMlVvVTJWYk1WMHBMQ0JQWlNoVFpWc3pYU2tzSUU5bEtGTmxXekZkS1N3Z1QyVW9VMlZiTWwwcExDQlBaU2hUWlZzelhTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdlR1VvUnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNXdkWE5vS0d4YlJ5QXFJRE1nS3lBd1hTa3NJR2t1Y0hWemFDaHNXMGNnS2lBeklDc2dNVjBwTENCcExuQjFjMmdvYkZ0SElDb2dNeUFySURKZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQlBaU2hIS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeUxuQjFjMmdvUnk1NEtTd2djaTV3ZFhOb0tFY3VlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J6ZFhCbGNpNTBiMHBUVDA0b0tTd2dkQ0E5SUhSb2FYTXVjR0Z5WVcxbGRHVnljeTV6YUdGd1pYTXNJRzRnUFNCMGFHbHpMbkJoY21GdFpYUmxjbk11YjNCMGFXOXVjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhWGtvZEN3Z2Jpd2daU2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUdVdWMyaGhjR1Z6TG14bGJtZDBhRHNnY2lBOElHODdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdkRnRsTG5Ob1lYQmxjMXR5WFYwN0NpQWdJQ0FnSUNBZ0lDQWdJRzR1Y0hWemFDaGhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsTG05d2RHbHZibk11WlhoMGNuVmtaVkJoZEdnN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWlM1dmNIUnBiMjV6TG1WNGRISjFaR1ZRWVhSb0lEMGdibVYzSUZSaFcya3VkSGx3WlYwb0tTNW1jbTl0U2xOUFRpaHBLU2tzSUc1bGR5QnNiaWh1TENCbExtOXdkR2x2Ym5NcE93b2dJQ0FnZlFwOUxDQnVlU0E5SUhzS0lDQWdJR2RsYm1WeVlYUmxWRzl3VlZZNklHWjFibU4wYVc5dUtITXNJR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdWYmRDQXFJRE5kTENCdklEMGdaVnQwSUNvZ015QXJJREZkTENCaElEMGdaVnR1SUNvZ00xMHNJR3dnUFNCbFcyNGdLaUF6SUNzZ01WMHNJR01nUFNCbFcya2dLaUF6WFN3Z2FDQTlJR1ZiYVNBcUlETWdLeUF4WFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnV3dvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV0NoeUxDQnZLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRmdvWVN3Z2JDa3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QllLR01zSUdncENpQWdJQ0FnSUNBZ1hUc0tJQ0FnSUgwc0NpQWdJQ0JuWlc1bGNtRjBaVk5wWkdWWFlXeHNWVlk2SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdWYmRDQXFJRE5kTENCaElEMGdaVnQwSUNvZ015QXJJREZkTENCc0lEMGdaVnQwSUNvZ015QXJJREpkTENCaklEMGdaVnR1SUNvZ00xMHNJR2dnUFNCbFcyNGdLaUF6SUNzZ01WMHNJSFVnUFNCbFcyNGdLaUF6SUNzZ01sMHNJR1FnUFNCbFcya2dLaUF6WFN3Z1ppQTlJR1ZiYVNBcUlETWdLeUF4WFN3Z2JTQTlJR1ZiYVNBcUlETWdLeUF5WFN3Z2VDQTlJR1ZiY2lBcUlETmRMQ0IySUQwZ1pWdHlJQ29nTXlBcklERmRMQ0JuSUQwZ1pWdHlJQ29nTXlBcklESmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GaWN5aGhJQzBnYUNrZ1BDQk5ZWFJvTG1GaWN5aHZJQzBnWXlrZ1B5QmJDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QllLRzhzSURFZ0xTQnNLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRmdvWXl3Z01TQXRJSFVwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV0Noa0xDQXhJQzBnYlNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCWUtIZ3NJREVnTFNCbktRb2dJQ0FnSUNBZ0lGMGdPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJZS0dFc0lERWdMU0JzS1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZnb2FDd2dNU0F0SUhVcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dDaG1MQ0F4SUMwZ2JTa3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QllLSFlzSURFZ0xTQm5LUW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUdsNUtITXNJR1VzSUhRcElIc0tJQ0FnSUdsbUlDaDBMbk5vWVhCbGN5QTlJRnRkTENCQmNuSmhlUzVwYzBGeWNtRjVLSE1wS1NCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2N5NXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdjMXR1WFRzS0lDQWdJQ0FnSUNCMExuTm9ZWEJsY3k1d2RYTm9LSEl1ZFhWcFpDazdDaUFnSUNCOUNpQWdJQ0JsYkhObElIUXVjMmhoY0dWekxuQjFjMmdvY3k1MWRXbGtLVHNLSUNBZ0lISmxkSFZ5YmlCbExtVjRkSEoxWkdWUVlYUm9JQ0U5UFNCMmIybGtJREFnSmlZZ0tIUXViM0IwYVc5dWN5NWxlSFJ5ZFdSbFVHRjBhQ0E5SUdVdVpYaDBjblZrWlZCaGRHZ3VkRzlLVTA5T0tDa3BMQ0IwT3dwOUNuWmhjaUJmY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nWVc0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXdLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJQ2d4SUNzZ1RXRjBhQzV6Y1hKMEtEVXBLU0F2SURJc0lHa2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZExDQnlJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ05Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTnl3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ055d0tJQ0FnSUNBZ0lDQWdJQ0FnTVRBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdOU3dLSUNBZ0lDQWdJQ0FnSUNBZ09Td0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdNVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURFeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TUN3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UQXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURrc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJRGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURrc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREV4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TUN3S0lDQWdJQ0FnSUNBZ0lDQWdPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ05pd0tJQ0FnSUNBZ0lDQWdJQ0FnTnl3S0lDQWdJQ0FnSUNBZ0lDQWdPU3dLSUNBZ0lDQWdJQ0FnSUNBZ09Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVFvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0FnSUNBZ2MzVndaWElvYVN3Z2Npd2daU3dnZENrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa2xqYjNOaGFHVmtjbTl1UjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVjBZV2xzT2lCMENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCZmNpaGxMbkpoWkdsMWN5d2daUzVrWlhSaGFXd3BPd29nSUNBZ2ZRcDlMQ0JOY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRnNLSUNBZ0lDQWdJQ0J1WlhjZ1dDZ3dMQ0F1TlNrc0NpQWdJQ0FnSUNBZ2JtVjNJRmdvTGpVc0lEQXBMQW9nSUNBZ0lDQWdJRzVsZHlCWUtEQXNJQzB1TlNrS0lDQWdJRjBzSUhRZ1BTQXhNaXdnYmlBOUlEQXNJR2tnUFNCTllYUm9MbEJKSUNvZ01pbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVEdGMGFHVkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXBiblJ6T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0J6WldkdFpXNTBjem9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdjR2hwVTNSaGNuUTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQm9hVXhsYm1kMGFEb2dhUW9nSUNBZ0lDQWdJSDBzSUhRZ1BTQk5ZWFJvTG1ac2IyOXlLSFFwTENCcElEMGdiWFFvYVN3Z01Dd2dUV0YwYUM1UVNTQXFJRElwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnVzEwc0lHOGdQU0JiWFN3Z1lTQTlJRnRkTENCc0lEMGdXMTBzSUdNZ1BTQmJYU3dnYUNBOUlERWdMeUIwTENCMUlEMGdibVYzSUUwc0lHUWdQU0J1WlhjZ1dDd2daaUE5SUc1bGR5Qk5MQ0J0SUQwZ2JtVjNJRTBzSUhnZ1BTQnVaWGNnVFN3Z2RpQTlJREFzSUdjZ1BTQXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjQ0E5SURBN0lIQWdQRDBnWlM1c1pXNW5kR2dnTFNBeE95QndLeXNwYzNkcGRHTm9LSEFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURBNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMklEMGdaVnR3SUNzZ01WMHVlQ0F0SUdWYmNGMHVlQ3dnWnlBOUlHVmJjQ0FySURGZExua2dMU0JsVzNCZExua3NJR1l1ZUNBOUlHY2dLaUF4TENCbUxua2dQU0F0ZGl3Z1ppNTZJRDBnWnlBcUlEQXNJSGd1WTI5d2VTaG1LU3dnWmk1dWIzSnRZV3hwZW1Vb0tTd2diQzV3ZFhOb0tHWXVlQ3dnWmk1NUxDQm1Mbm9wT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdaUzVzWlc1bmRHZ2dMU0F4T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkM1d2RYTm9LSGd1ZUN3Z2VDNTVMQ0I0TG5vcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMklEMGdaVnR3SUNzZ01WMHVlQ0F0SUdWYmNGMHVlQ3dnWnlBOUlHVmJjQ0FySURGZExua2dMU0JsVzNCZExua3NJR1l1ZUNBOUlHY2dLaUF4TENCbUxua2dQU0F0ZGl3Z1ppNTZJRDBnWnlBcUlEQXNJRzB1WTI5d2VTaG1LU3dnWmk1NElDczlJSGd1ZUN3Z1ppNTVJQ3M5SUhndWVTd2daaTU2SUNzOUlIZ3VlaXdnWmk1dWIzSnRZV3hwZW1Vb0tTd2diQzV3ZFhOb0tHWXVlQ3dnWmk1NUxDQm1Mbm9wTENCNExtTnZjSGtvYlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREE3SUhBZ1BEMGdkRHNnY0NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0J1SUNzZ2NDQXFJR2dnS2lCcExDQjVJRDBnVFdGMGFDNXphVzRvWHlrc0lHSWdQU0JOWVhSb0xtTnZjeWhmS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkJJRDBnTURzZ1FTQThQU0JsTG14bGJtZDBhQ0F0SURFN0lFRXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTG5nZ1BTQmxXMEZkTG5nZ0tpQjVMQ0IxTG5rZ1BTQmxXMEZkTG5rc0lIVXVlaUE5SUdWYlFWMHVlQ0FxSUdJc0lHOHVjSFZ6YUNoMUxuZ3NJSFV1ZVN3Z2RTNTZLU3dnWkM1NElEMGdjQ0F2SUhRc0lHUXVlU0E5SUVFZ0x5QW9aUzVzWlc1bmRHZ2dMU0F4S1N3Z1lTNXdkWE5vS0dRdWVDd2daQzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQk1JRDBnYkZzeklDb2dRU0FySURCZElDb2dlU3dnU1NBOUlHeGJNeUFxSUVFZ0t5QXhYU3dnYXlBOUlHeGJNeUFxSUVFZ0t5QXdYU0FxSUdJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCakxuQjFjMmdvVEN3Z1NTd2dheWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQndJRDBnTURzZ2NDQThJSFE3SUhBckt5bG1iM0lvYkdWMElGOGdQU0F3T3lCZklEd2daUzVzWlc1bmRHZ2dMU0F4T3lCZkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUY4Z0t5QndJQ29nWlM1c1pXNW5kR2dzSUdJZ1BTQjVMQ0JCSUQwZ2VTQXJJR1V1YkdWdVozUm9MQ0JNSUQwZ2VTQXJJR1V1YkdWdVozUm9JQ3NnTVN3Z1NTQTlJSGtnS3lBeE93b2dJQ0FnSUNBZ0lDQWdJQ0J5TG5CMWMyZ29ZaXdnUVN3Z1NTa3NJSEl1Y0hWemFDaEJMQ0JNTENCSktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1elpYUkpibVJsZUNoeUtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLRzhzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0dFc0lESXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QmtaU2hqTENBektTazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1RYSW9aUzV3YjJsdWRITXNJR1V1YzJWbmJXVnVkSE1zSUdVdWNHaHBVM1JoY25Rc0lHVXVjR2hwVEdWdVozUm9LVHNLSUNBZ0lIMEtmU3dnU1drZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdGdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFS0lDQWdJQ0FnSUNCZExDQnBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F5Q2lBZ0lDQWdJQ0FnWFRzS0lDQWdJQ0FnSUNCemRYQmxjaWh1TENCcExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUMk4wWVdobFpISnZia2RsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGRHRnBiRG9nZEFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnU1drb1pTNXlZV1JwZFhNc0lHVXVaR1YwWVdsc0tUc0tJQ0FnSUgwS2ZTd2dZbklnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXVOU3dnZENBOUlERXNJRzRnUFNBNExDQnBJRDBnTVN3Z2NpQTlJREFzSUc4Z1BTQk5ZWFJvTGxCSklDb2dNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVtbHVaMGRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBibTVsY2xKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdiM1YwWlhKU1lXUnBkWE02SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFJvWlhSaFUyVm5iV1Z1ZEhNNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUhCb2FWTmxaMjFsYm5Sek9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHVjBZVk4wWVhKME9pQnlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHVjBZVXhsYm1kMGFEb2did29nSUNBZ0lDQWdJSDBzSUc0Z1BTQk5ZWFJvTG0xaGVDZ3pMQ0J1S1N3Z2FTQTlJRTFoZEdndWJXRjRLREVzSUdrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1cxMHNJR3dnUFNCYlhTd2dZeUE5SUZ0ZExDQm9JRDBnVzEwc0lIVWdQU0JsTENCa0lEMGdLSFFnTFNCbEtTQXZJR2tzSUdZZ1BTQnVaWGNnVFN3Z2JTQTlJRzVsZHlCWU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VDQTlJREE3SUhnZ1BEMGdhVHNnZUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IySUQwZ01Ec2dkaUE4UFNCdU95QjJLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHY2dQU0J5SUNzZ2RpQXZJRzRnS2lCdk93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ppNTRJRDBnZFNBcUlFMWhkR2d1WTI5ektHY3BMQ0JtTG5rZ1BTQjFJQ29nVFdGMGFDNXphVzRvWnlrc0lHd3VjSFZ6YUNobUxuZ3NJR1l1ZVN3Z1ppNTZLU3dnWXk1d2RYTm9LREFzSURBc0lERXBMQ0J0TG5nZ1BTQW9aaTU0SUM4Z2RDQXJJREVwSUM4Z01pd2diUzU1SUQwZ0tHWXVlU0F2SUhRZ0t5QXhLU0F2SURJc0lHZ3VjSFZ6YUNodExuZ3NJRzB1ZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RTQXJQU0JrT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhnZ1BTQXdPeUI0SUR3Z2FUc2dlQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQjRJQ29nS0c0Z0t5QXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbklEMGdNRHNnWnlBOElHNDdJR2NyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUdjZ0t5QjJMQ0JmSUQwZ2NDd2dlU0E5SUhBZ0t5QnVJQ3NnTVN3Z1lpQTlJSEFnS3lCdUlDc2dNaXdnUVNBOUlIQWdLeUF4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVM1d2RYTm9LRjhzSUhrc0lFRXBMQ0JoTG5CMWMyZ29lU3dnWWl3Z1FTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSSmJtUmxlQ2hoS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHd3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNWxkeUJrWlNoakxDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCa1pTaG9MQ0F5S1NrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnWW5Jb1pTNXBibTVsY2xKaFpHbDFjeXdnWlM1dmRYUmxjbEpoWkdsMWN5d2daUzUwYUdWMFlWTmxaMjFsYm5SekxDQmxMbkJvYVZObFoyMWxiblJ6TENCbExuUm9aWFJoVTNSaGNuUXNJR1V1ZEdobGRHRk1aVzVuZEdncE93b2dJQ0FnZlFwOUxDQkVhU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdYMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJZZENoYkNpQWdJQ0FnSUNBZ2JtVjNJRmdvTUN3Z0xqVXBMQW9nSUNBZ0lDQWdJRzVsZHlCWUtDMHVOU3dnTFM0MUtTd0tJQ0FnSUNBZ0lDQnVaWGNnV0NndU5Td2dMUzQxS1FvZ0lDQWdYU2tzSUhRZ1BTQXhNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUyaGhjR1ZIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCamRYSjJaVk5sWjIxbGJuUnpPaUIwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUZ0ZExDQnBJRDBnVzEwc0lISWdQU0JiWFN3Z2J5QTlJRnRkTENCaElEMGdNQ3dnYkNBOUlEQTdDaUFnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29aU2tnUFQwOUlDRXhLU0JqS0dVcE93b2dJQ0FnSUNBZ0lHVnNjMlVnWm05eUtHeGxkQ0JvSUQwZ01Ec2dhQ0E4SUdVdWJHVnVaM1JvT3lCb0t5c3BZeWhsVzJoZEtTd2dkR2hwY3k1aFpHUkhjbTkxY0NoaExDQnNMQ0JvS1N3Z1lTQXJQU0JzTENCc0lEMGdNRHNLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx1WkdWNEtHNHBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYVN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLSElzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0c4c0lESXBLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJqS0dncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0JwTG14bGJtZDBhQ0F2SURNc0lHUWdQU0JvTG1WNGRISmhZM1JRYjJsdWRITW9kQ2tzSUdZZ1BTQmtMbk5vWVhCbExDQnRJRDBnWkM1b2IyeGxjenNLSUNBZ0lDQWdJQ0FnSUNBZ1NuUXVhWE5EYkc5amExZHBjMlVvWmlrZ1BUMDlJQ0V4SUNZbUlDaG1JRDBnWmk1eVpYWmxjbk5sS0NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFlnUFNBd0xDQm5JRDBnYlM1c1pXNW5kR2c3SUhZZ1BDQm5PeUIyS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCdFczWmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdTblF1YVhORGJHOWphMWRwYzJVb2NDa2dQVDA5SUNFd0lDWW1JQ2h0VzNaZElEMGdjQzV5WlhabGNuTmxLQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnU25RdWRISnBZVzVuZFd4aGRHVlRhR0Z3WlNobUxDQnRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMklEMGdNQ3dnWnlBOUlHMHViR1Z1WjNSb095QjJJRHdnWnpzZ2Rpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdiVnQyWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdZZ1BTQm1MbU52Ym1OaGRDaHdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFlnUFNBd0xDQm5JRDBnWmk1c1pXNW5kR2c3SUhZZ1BDQm5PeUIyS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCbVczWmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzV3ZFhOb0tIQXVlQ3dnY0M1NUxDQXdLU3dnY2k1d2RYTm9LREFzSURBc0lERXBMQ0J2TG5CMWMyZ29jQzU0TENCd0xua3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkaUE5SURBc0lHY2dQU0I0TG14bGJtZDBhRHNnZGlBOElHYzdJSFlyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUhoYmRsMHNJRjhnUFNCd1d6QmRJQ3NnZFN3Z2VTQTlJSEJiTVYwZ0t5QjFMQ0JpSUQwZ2NGc3lYU0FySUhVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdUxuQjFjMmdvWHl3Z2VTd2dZaWtzSUd3Z0t6MGdNenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncExDQjBJRDBnZEdocGN5NXdZWEpoYldWMFpYSnpMbk5vWVhCbGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2Nua29kQ3dnWlNrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHVXVjMmhoY0dWekxteGxibWQwYURzZ2FTQThJSEk3SUdrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnZEZ0bExuTm9ZWEJsYzF0cFhWMDdDaUFnSUNBZ0lDQWdJQ0FnSUc0dWNIVnphQ2h2S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkVhU2h1TENCbExtTjFjblpsVTJWbmJXVnVkSE1wT3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCeWVTaHpMQ0JsS1NCN0NpQWdJQ0JwWmlBb1pTNXphR0Z3WlhNZ1BTQmJYU3dnUVhKeVlYa3VhWE5CY25KaGVTaHpLU2tnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlITmJkRjA3Q2lBZ0lDQWdJQ0FnWlM1emFHRndaWE11Y0hWemFDaHBMblYxYVdRcE93b2dJQ0FnZlFvZ0lDQWdaV3h6WlNCbExuTm9ZWEJsY3k1d2RYTm9LSE11ZFhWcFpDazdDaUFnSUNCeVpYUjFjbTRnWlRzS2ZRcDJZWElnUm1rZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNeklzSUc0Z1BTQXhOaXdnYVNBOUlEQXNJSElnUFNCTllYUm9MbEJKSUNvZ01pd2dieUE5SURBc0lHRWdQU0JOWVhSb0xsQkpLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKVGNHaGxjbVZIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRk5sWjIxbGJuUnpPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhSVFpXZHRaVzUwY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnY0docFUzUmhjblE2SUdrc0NpQWdJQ0FnSUNBZ0lDQWdJSEJvYVV4bGJtZDBhRG9nY2l3S0lDQWdJQ0FnSUNBZ0lDQWdkR2hsZEdGVGRHRnlkRG9nYnl3S0lDQWdJQ0FnSUNBZ0lDQWdkR2hsZEdGTVpXNW5kR2c2SUdFS0lDQWdJQ0FnSUNCOUxDQjBJRDBnVFdGMGFDNXRZWGdvTXl3Z1RXRjBhQzVtYkc5dmNpaDBLU2tzSUc0Z1BTQk5ZWFJvTG0xaGVDZ3lMQ0JOWVhSb0xtWnNiMjl5S0c0cEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlFMWhkR2d1YldsdUtHOGdLeUJoTENCTllYUm9MbEJKS1N3Z1l5QTlJREFzSUdnZ1BTQmJYU3dnZFNBOUlHNWxkeUJOTENCa0lEMGdibVYzSUUwc0lHWWdQU0JiWFN3Z2JTQTlJRnRkTENCNElEMGdXMTBzSUhZZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2NnUFNBd095Qm5JRHc5SUc0N0lHY3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ1cxMHNJRjhnUFNCbklDOGdiaXdnZVNBOUlEQTdDaUFnSUNBZ0lDQWdJQ0FnSUdjZ1BUMGdNQ0FtSmlCdklEMDlJREFnUHlCNUlEMGdMalVnTHlCMElEb2daeUE5UFNCdUlDWW1JR3dnUFQwZ1RXRjBhQzVRU1NBbUppQW9lU0E5SUMwdU5TQXZJSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHSWdQU0F3T3lCaUlEdzlJSFE3SUdJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUVNBOUlHSWdMeUIwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFM1NElEMGdMV1VnS2lCTllYUm9MbU52Y3locElDc2dRU0FxSUhJcElDb2dUV0YwYUM1emFXNG9ieUFySUY4Z0tpQmhLU3dnZFM1NUlEMGdaU0FxSUUxaGRHZ3VZMjl6S0c4Z0t5QmZJQ29nWVNrc0lIVXVlaUE5SUdVZ0tpQk5ZWFJvTG5OcGJpaHBJQ3NnUVNBcUlISXBJQ29nVFdGMGFDNXphVzRvYnlBcklGOGdLaUJoS1N3Z2JTNXdkWE5vS0hVdWVDd2dkUzU1TENCMUxub3BMQ0JrTG1OdmNIa29kU2t1Ym05eWJXRnNhWHBsS0Nrc0lIZ3VjSFZ6YUNoa0xuZ3NJR1F1ZVN3Z1pDNTZLU3dnZGk1d2RYTm9LRUVnS3lCNUxDQXhJQzBnWHlrc0lIQXVjSFZ6YUNoakt5c3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2d1Y0hWemFDaHdLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JuSUQwZ01Ec2daeUE4SUc0N0lHY3JLeWxtYjNJb2JHVjBJSEFnUFNBd095QndJRHdnZERzZ2NDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjhnUFNCb1cyZGRXM0FnS3lBeFhTd2dlU0E5SUdoYloxMWJjRjBzSUdJZ1BTQm9XMmNnS3lBeFhWdHdYU3dnUVNBOUlHaGJaeUFySURGZFczQWdLeUF4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdLR2NnSVQwOUlEQWdmSHdnYnlBK0lEQXBJQ1ltSUdZdWNIVnphQ2hmTENCNUxDQkJLU3dnS0djZ0lUMDlJRzRnTFNBeElIeDhJR3dnUENCTllYUm9MbEJKS1NBbUppQm1MbkIxYzJnb2VTd2dZaXdnUVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11YzJWMFNXNWtaWGdvWmlrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaHRMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUxDQnVaWGNnWkdVb2VDd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ1pHVW9kaXdnTWlrcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVacEtHVXVjbUZrYVhWekxDQmxMbmRwWkhSb1UyVm5iV1Z1ZEhNc0lHVXVhR1ZwWjJoMFUyVm5iV1Z1ZEhNc0lHVXVjR2hwVTNSaGNuUXNJR1V1Y0docFRHVnVaM1JvTENCbExuUm9aWFJoVTNSaGNuUXNJR1V1ZEdobGRHRk1aVzVuZEdncE93b2dJQ0FnZlFwOUxDQjNjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZVzRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBd0tYc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVFvZ0lDQWdJQ0FnSUYwc0lHa2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLRzRzSUdrc0lHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlVaWFJ5WVdobFpISnZia2RsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGRHRnBiRG9nZEFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZDNJb1pTNXlZV1JwZFhNc0lHVXVaR1YwWVdsc0tUc0tJQ0FnSUgwS2ZTd2dVM0lnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ0xqUXNJRzRnUFNBNExDQnBJRDBnTml3Z2NpQTlJRTFoZEdndVVFa2dLaUF5S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlViM0oxYzBkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUjFZbVU2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsaGJGTmxaMjFsYm5Sek9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCMGRXSjFiR0Z5VTJWbmJXVnVkSE02SUdrc0NpQWdJQ0FnSUNBZ0lDQWdJR0Z5WXpvZ2Nnb2dJQ0FnSUNBZ0lIMHNJRzRnUFNCTllYUm9MbVpzYjI5eUtHNHBMQ0JwSUQwZ1RXRjBhQzVtYkc5dmNpaHBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRnRkTENCaElEMGdXMTBzSUd3Z1BTQmJYU3dnWXlBOUlGdGRMQ0JvSUQwZ2JtVjNJRTBzSUhVZ1BTQnVaWGNnVFN3Z1pDQTlJRzVsZHlCTk93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ppQTlJREE3SUdZZ1BEMGdianNnWmlzcktXWnZjaWhzWlhRZ2JTQTlJREE3SUcwZ1BEMGdhVHNnYlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0J0SUM4Z2FTQXFJSElzSUhZZ1BTQm1JQzhnYmlBcUlFMWhkR2d1VUVrZ0tpQXlPd29nSUNBZ0lDQWdJQ0FnSUNCMUxuZ2dQU0FvWlNBcklIUWdLaUJOWVhSb0xtTnZjeWgyS1NrZ0tpQk5ZWFJvTG1OdmN5aDRLU3dnZFM1NUlEMGdLR1VnS3lCMElDb2dUV0YwYUM1amIzTW9kaWtwSUNvZ1RXRjBhQzV6YVc0b2VDa3NJSFV1ZWlBOUlIUWdLaUJOWVhSb0xuTnBiaWgyS1N3Z1lTNXdkWE5vS0hVdWVDd2dkUzU1TENCMUxub3BMQ0JvTG5nZ1BTQmxJQ29nVFdGMGFDNWpiM01vZUNrc0lHZ3VlU0E5SUdVZ0tpQk5ZWFJvTG5OcGJpaDRLU3dnWkM1emRXSldaV04wYjNKektIVXNJR2dwTG01dmNtMWhiR2w2WlNncExDQnNMbkIxYzJnb1pDNTRMQ0JrTG5rc0lHUXVlaWtzSUdNdWNIVnphQ2h0SUM4Z2FTa3NJR011Y0hWemFDaG1JQzhnYmlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ppQTlJREU3SUdZZ1BEMGdianNnWmlzcktXWnZjaWhzWlhRZ2JTQTlJREU3SUcwZ1BEMGdhVHNnYlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0FvYVNBcklERXBJQ29nWmlBcklHMGdMU0F4TENCMklEMGdLR2tnS3lBeEtTQXFJQ2htSUMwZ01Ta2dLeUJ0SUMwZ01Td2daeUE5SUNocElDc2dNU2tnS2lBb1ppQXRJREVwSUNzZ2JTd2djQ0E5SUNocElDc2dNU2tnS2lCbUlDc2diVHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5NXdkWE5vS0hnc0lIWXNJSEFwTENCdkxuQjFjMmdvZGl3Z1p5d2djQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVjMlYwU1c1a1pYZ29ieWtzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNoaExDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKdWIzSnRZV3dpTENCdVpYY2daR1VvYkN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpZFhZaUxDQnVaWGNnWkdVb1l5d2dNaWtwT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRk55S0dVdWNtRmthWFZ6TENCbExuUjFZbVVzSUdVdWNtRmthV0ZzVTJWbmJXVnVkSE1zSUdVdWRIVmlkV3hoY2xObFoyMWxiblJ6TENCbExtRnlZeWs3Q2lBZ0lDQjlDbjBzSUZSeUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCZlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJQzQwTENCdUlEMGdOalFzSUdrZ1BTQTRMQ0J5SUQwZ01pd2dieUE5SURNcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbFJ2Y25WelMyNXZkRWRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhSMVltVTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUjFZblZzWVhKVFpXZHRaVzUwY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FXRnNVMlZuYldWdWRITTZJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQTZJSElzQ2lBZ0lDQWdJQ0FnSUNBZ0lIRTZJRzhLSUNBZ0lDQWdJQ0I5TENCdUlEMGdUV0YwYUM1bWJHOXZjaWh1S1N3Z2FTQTlJRTFoZEdndVpteHZiM0lvYVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCYlhTd2diQ0E5SUZ0ZExDQmpJRDBnVzEwc0lHZ2dQU0JiWFN3Z2RTQTlJRzVsZHlCTkxDQmtJRDBnYm1WM0lFMHNJR1lnUFNCdVpYY2dUU3dnYlNBOUlHNWxkeUJOTENCNElEMGdibVYzSUUwc0lIWWdQU0J1WlhjZ1RTd2daeUE5SUc1bGR5Qk5Pd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdYeUE5SURBN0lGOGdQRDBnYmpzZ0t5dGZLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCZklDOGdiaUFxSUhJZ0tpQk5ZWFJvTGxCSklDb2dNanNLSUNBZ0lDQWdJQ0FnSUNBZ2NDaDVMQ0J5TENCdkxDQmxMQ0JtS1N3Z2NDaDVJQ3NnTGpBeExDQnlMQ0J2TENCbExDQnRLU3dnZGk1emRXSldaV04wYjNKektHMHNJR1lwTENCbkxtRmtaRlpsWTNSdmNuTW9iU3dnWmlrc0lIZ3VZM0p2YzNOV1pXTjBiM0p6S0hZc0lHY3BMQ0JuTG1OeWIzTnpWbVZqZEc5eWN5aDRMQ0IyS1N3Z2VDNXViM0p0WVd4cGVtVW9LU3dnWnk1dWIzSnRZV3hwZW1Vb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JpSUQwZ01Ec2dZaUE4UFNCcE95QXJLMklwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFRWdQU0JpSUM4Z2FTQXFJRTFoZEdndVVFa2dLaUF5TENCTUlEMGdMWFFnS2lCTllYUm9MbU52Y3loQktTd2dTU0E5SUhRZ0tpQk5ZWFJvTG5OcGJpaEJLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV1ZUNBOUlHWXVlQ0FySUNoTUlDb2daeTU0SUNzZ1NTQXFJSGd1ZUNrc0lIVXVlU0E5SUdZdWVTQXJJQ2hNSUNvZ1p5NTVJQ3NnU1NBcUlIZ3VlU2tzSUhVdWVpQTlJR1l1ZWlBcklDaE1JQ29nWnk1NklDc2dTU0FxSUhndWVpa3NJR3d1Y0hWemFDaDFMbmdzSUhVdWVTd2dkUzU2S1N3Z1pDNXpkV0pXWldOMGIzSnpLSFVzSUdZcExtNXZjbTFoYkdsNlpTZ3BMQ0JqTG5CMWMyZ29aQzU0TENCa0xua3NJR1F1ZWlrc0lHZ3VjSFZ6YUNoZklDOGdiaWtzSUdndWNIVnphQ2hpSUM4Z2FTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCZklEMGdNVHNnWHlBOFBTQnVPeUJmS3lzcFptOXlLR3hsZENCNUlEMGdNVHNnZVNBOFBTQnBPeUI1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJQ2hwSUNzZ01Ta2dLaUFvWHlBdElERXBJQ3NnS0hrZ0xTQXhLU3dnUVNBOUlDaHBJQ3NnTVNrZ0tpQmZJQ3NnS0hrZ0xTQXhLU3dnVENBOUlDaHBJQ3NnTVNrZ0tpQmZJQ3NnZVN3Z1NTQTlJQ2hwSUNzZ01Ta2dLaUFvWHlBdElERXBJQ3NnZVRzS0lDQWdJQ0FnSUNBZ0lDQWdZUzV3ZFhOb0tHSXNJRUVzSUVrcExDQmhMbkIxYzJnb1FTd2dUQ3dnU1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11YzJWMFNXNWtaWGdvWVNrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaHNMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUxDQnVaWGNnWkdVb1l5d2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ1pHVW9hQ3dnTWlrcE93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIQW9YeXdnZVN3Z1lpd2dRU3dnVENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1NTQTlJRTFoZEdndVkyOXpLRjhwTENCcklEMGdUV0YwYUM1emFXNG9YeWtzSUVJZ1BTQmlJQzhnZVNBcUlGOHNJRkFnUFNCTllYUm9MbU52Y3loQ0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnVEM1NElEMGdRU0FxSUNneUlDc2dVQ2tnS2lBdU5TQXFJRWtzSUV3dWVTQTlJRUVnS2lBb01pQXJJRkFwSUNvZ2F5QXFJQzQxTENCTUxub2dQU0JCSUNvZ1RXRjBhQzV6YVc0b1Fpa2dLaUF1TlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVkhJb1pTNXlZV1JwZFhNc0lHVXVkSFZpWlN3Z1pTNTBkV0oxYkdGeVUyVm5iV1Z1ZEhNc0lHVXVjbUZrYVdGc1UyVm5iV1Z1ZEhNc0lHVXVjQ3dnWlM1eEtUc0tJQ0FnSUgwS2ZTd2dSWElnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnYUc4b2JtVjNJRTBvTFRFc0lDMHhMQ0F3S1N3Z2JtVjNJRTBvTFRFc0lERXNJREFwTENCdVpYY2dUU2d4TENBeExDQXdLU2tzSUhRZ1BTQTJOQ3dnYmlBOUlERXNJR2tnUFNBNExDQnlJRDBnSVRFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbFIxWW1WSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY0dGMGFEb2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RIVmlkV3hoY2xObFoyMWxiblJ6T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2xoYkZObFoyMWxiblJ6T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkc5elpXUTZJSElLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWlM1amIyMXdkWFJsUm5KbGJtVjBSbkpoYldWektIUXNJSElwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkR0Z1WjJWdWRITWdQU0J2TG5SaGJtZGxiblJ6TENCMGFHbHpMbTV2Y20xaGJITWdQU0J2TG01dmNtMWhiSE1zSUhSb2FYTXVZbWx1YjNKdFlXeHpJRDBnYnk1aWFXNXZjbTFoYkhNN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVpYY2dUU3dnYkNBOUlHNWxkeUJOTENCaklEMGdibVYzSUZnc0lHZ2dQU0J1WlhjZ1RTd2dkU0E5SUZ0ZExDQmtJRDBnVzEwc0lHWWdQU0JiWFN3Z2JTQTlJRnRkT3dvZ0lDQWdJQ0FnSUhnb0tTd2dkR2hwY3k1elpYUkpibVJsZUNodEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLSFVzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCa1pTaGtMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QmtaU2htTENBeUtTazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdlQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmZJRDBnTURzZ1h5QThJSFE3SUY4ckt5bDJLRjhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjJLSElnUFQwOUlDRXhJRDhnZENBNklEQXBMQ0J3S0Nrc0lHY29LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZGloZktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdnZ1BTQmxMbWRsZEZCdmFXNTBRWFFvWHlBdklIUXNJR2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlHOHVibTl5YldGc2MxdGZYU3dnWWlBOUlHOHVZbWx1YjNKdFlXeHpXMTlkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFRWdQU0F3T3lCQklEdzlJR2s3SUVFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVENBOUlFRWdMeUJwSUNvZ1RXRjBhQzVRU1NBcUlESXNJRWtnUFNCTllYUm9Mbk5wYmloTUtTd2dheUE5SUMxTllYUm9MbU52Y3loTUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHd3VlQ0E5SUdzZ0tpQjVMbmdnS3lCSklDb2dZaTU0TENCc0xua2dQU0JySUNvZ2VTNTVJQ3NnU1NBcUlHSXVlU3dnYkM1NklEMGdheUFxSUhrdWVpQXJJRWtnS2lCaUxub3NJR3d1Ym05eWJXRnNhWHBsS0Nrc0lHUXVjSFZ6YUNoc0xuZ3NJR3d1ZVN3Z2JDNTZLU3dnWVM1NElEMGdhQzU0SUNzZ2JpQXFJR3d1ZUN3Z1lTNTVJRDBnYUM1NUlDc2diaUFxSUd3dWVTd2dZUzU2SUQwZ2FDNTZJQ3NnYmlBcUlHd3VlaXdnZFM1d2RYTm9LR0V1ZUN3Z1lTNTVMQ0JoTG5vcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdjb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWHlBOUlERTdJRjhnUEQwZ2REc2dYeXNyS1dadmNpaHNaWFFnZVNBOUlERTdJSGtnUEQwZ2FUc2dlU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnS0drZ0t5QXhLU0FxSUNoZklDMGdNU2tnS3lBb2VTQXRJREVwTENCQklEMGdLR2tnS3lBeEtTQXFJRjhnS3lBb2VTQXRJREVwTENCTUlEMGdLR2tnS3lBeEtTQXFJRjhnS3lCNUxDQkpJRDBnS0drZ0t5QXhLU0FxSUNoZklDMGdNU2tnS3lCNU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JTNXdkWE5vS0dJc0lFRXNJRWtwTENCdExuQjFjMmdvUVN3Z1RDd2dTU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdjQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmZJRDBnTURzZ1h5QThQU0IwT3lCZkt5c3BabTl5S0d4bGRDQjVJRDBnTURzZ2VTQThQU0JwT3lCNUt5c3BZeTU0SUQwZ1h5QXZJSFFzSUdNdWVTQTlJSGtnTHlCcExDQm1MbkIxYzJnb1l5NTRMQ0JqTG5rcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuQmhkR2dnUFNCMGFHbHpMbkJoY21GdFpYUmxjbk11Y0dGMGFDNTBiMHBUVDA0b0tTd2daVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkZjaWh1WlhjZ1ZHRmJaUzV3WVhSb0xuUjVjR1ZkS0NrdVpuSnZiVXBUVDA0b1pTNXdZWFJvS1N3Z1pTNTBkV0oxYkdGeVUyVm5iV1Z1ZEhNc0lHVXVjbUZrYVhWekxDQmxMbkpoWkdsaGJGTmxaMjFsYm5SekxDQmxMbU5zYjNObFpDazdDaUFnSUNCOUNuMHNJRVZoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJmWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdiblZzYkNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1MGVYQmxJRDBnSWxkcGNtVm1jbUZ0WlVkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JuWlc5dFpYUnllVG9nWlFvZ0lDQWdJQ0FnSUgwc0lHVWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYlhTd2diaUE5SUc1bGR5QlRaWFFzSUdrZ1BTQnVaWGNnVFN3Z2NpQTlJRzVsZHlCTk93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pTNXBibVJsZUNBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbExtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHNJR0VnUFNCbExtbHVaR1Y0TENCc0lEMGdaUzVuY205MWNITTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNMbXhsYm1kMGFDQTlQVDBnTUNBbUppQW9iQ0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBZWEowT2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIzVnVkRG9nWVM1amIzVnVkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0YwWlhKcFlXeEpibVJsZURvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Dd2dhQ0E5SUd3dWJHVnVaM1JvT3lCaklEd2dhRHNnS3l0aktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR3hiWTEwc0lHUWdQU0IxTG5OMFlYSjBMQ0JtSUQwZ2RTNWpiM1Z1ZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMGdQU0JrTENCNElEMGdaQ0FySUdZN0lHMGdQQ0I0T3lCdElDczlJRE1wWm05eUtHeGxkQ0IySUQwZ01Ec2dkaUE4SURNN0lIWXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbklEMGdZUzVuWlhSWUtHMGdLeUIyS1N3Z2NDQTlJR0V1WjJWMFdDaHRJQ3NnS0hZZ0t5QXhLU0FsSURNcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ieXdnWnlrc0lISXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h2TENCd0tTd2dlV01vYVN3Z2Npd2diaWtnUFQwOUlDRXdJQ1ltSUNoMExuQjFjMmdvYVM1NExDQnBMbmtzSUdrdWVpa3NJSFF1Y0hWemFDaHlMbmdzSUhJdWVTd2djaTU2S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsTG1GMGRISnBZblYwWlhNdWNHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ1BTQXdMQ0JzSUQwZ2J5NWpiM1Z1ZENBdklETTdJR0VnUENCc095QmhLeXNwWm05eUtHeGxkQ0JqSUQwZ01Ec2dZeUE4SURNN0lHTXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNBeklDb2dZU0FySUdNc0lIVWdQU0F6SUNvZ1lTQXJJQ2hqSUNzZ01Ta2dKU0F6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h2TENCb0tTd2djaTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0c4c0lIVXBMQ0I1WXlocExDQnlMQ0J1S1NBOVBUMGdJVEFnSmlZZ0tIUXVjSFZ6YUNocExuZ3NJR2t1ZVN3Z2FTNTZLU3dnZEM1d2RYTm9LSEl1ZUN3Z2NpNTVMQ0J5TG5vcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9kQ3dnTXlrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdlV01vY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQmdKSHR6TG5oOUxDUjdjeTU1ZlN3a2UzTXVlbjB0Skh0bExuaDlMQ1I3WlM1NWZTd2tlMlV1ZW4xZ0xDQnBJRDBnWUNSN1pTNTRmU3drZTJVdWVYMHNKSHRsTG5wOUxTUjdjeTU0ZlN3a2UzTXVlWDBzSkh0ekxucDlZRHNLSUNBZ0lISmxkSFZ5YmlCMExtaGhjeWh1S1NBOVBUMGdJVEFnZkh3Z2RDNW9ZWE1vYVNrZ1BUMDlJQ0V3SUQ4Z0lURWdPaUFvZEM1aFpHUW9iaXdnYVNrc0lDRXdLVHNLZlFwMllYSWdkbU1nUFNCUFltcGxZM1F1Wm5KbFpYcGxLSHNLSUNBZ0lGOWZjSEp2ZEc5Zlh6b2diblZzYkN3S0lDQWdJRUp2ZUVkbGIyMWxkSEo1T2lCM2Jpd0tJQ0FnSUVKdmVFSjFabVpsY2tkbGIyMWxkSEo1T2lCM2Jpd0tJQ0FnSUVOcGNtTnNaVWRsYjIxbGRISjVPaUJtY2l3S0lDQWdJRU5wY21Oc1pVSjFabVpsY2tkbGIyMWxkSEo1T2lCbWNpd0tJQ0FnSUVOdmJtVkhaVzl0WlhSeWVUb2djSElzQ2lBZ0lDQkRiMjVsUW5WbVptVnlSMlZ2YldWMGNuazZJSEJ5TEFvZ0lDQWdRM2xzYVc1a1pYSkhaVzl0WlhSeWVUb2dTbTRzQ2lBZ0lDQkRlV3hwYm1SbGNrSjFabVpsY2tkbGIyMWxkSEo1T2lCS2Jpd0tJQ0FnSUVSdlpHVmpZV2hsWkhKdmJrZGxiMjFsZEhKNU9pQnRjaXdLSUNBZ0lFUnZaR1ZqWVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQnRjaXdLSUNBZ0lFVmtaMlZ6UjJWdmJXVjBjbms2SUY5aExBb2dJQ0FnUlhoMGNuVmtaVWRsYjIxbGRISjVPaUJzYml3S0lDQWdJRVY0ZEhKMVpHVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ2JHNHNDaUFnSUNCSlkyOXpZV2hsWkhKdmJrZGxiMjFsZEhKNU9pQmZjaXdLSUNBZ0lFbGpiM05oYUdWa2NtOXVRblZtWm1WeVIyVnZiV1YwY25rNklGOXlMQW9nSUNBZ1RHRjBhR1ZIWlc5dFpYUnllVG9nVFhJc0NpQWdJQ0JNWVhSb1pVSjFabVpsY2tkbGIyMWxkSEo1T2lCTmNpd0tJQ0FnSUU5amRHRm9aV1J5YjI1SFpXOXRaWFJ5ZVRvZ1NXa3NDaUFnSUNCUFkzUmhhR1ZrY205dVFuVm1abVZ5UjJWdmJXVjBjbms2SUVscExBb2dJQ0FnVUd4aGJtVkhaVzl0WlhSeWVUb2dVR2tzQ2lBZ0lDQlFiR0Z1WlVKMVptWmxja2RsYjIxbGRISjVPaUJRYVN3S0lDQWdJRkJ2Ykhsb1pXUnliMjVIWlc5dFpYUnllVG9nWVc0c0NpQWdJQ0JRYjJ4NWFHVmtjbTl1UW5WbVptVnlSMlZ2YldWMGNuazZJR0Z1TEFvZ0lDQWdVbWx1WjBkbGIyMWxkSEo1T2lCaWNpd0tJQ0FnSUZKcGJtZENkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1luSXNDaUFnSUNCVGFHRndaVWRsYjIxbGRISjVPaUJFYVN3S0lDQWdJRk5vWVhCbFFuVm1abVZ5UjJWdmJXVjBjbms2SUVScExBb2dJQ0FnVTNCb1pYSmxSMlZ2YldWMGNuazZJRVpwTEFvZ0lDQWdVM0JvWlhKbFFuVm1abVZ5UjJWdmJXVjBjbms2SUVacExBb2dJQ0FnVkdWMGNtRm9aV1J5YjI1SFpXOXRaWFJ5ZVRvZ2QzSXNDaUFnSUNCVVpYUnlZV2hsWkhKdmJrSjFabVpsY2tkbGIyMWxkSEo1T2lCM2Npd0tJQ0FnSUZSdmNuVnpSMlZ2YldWMGNuazZJRk55TEFvZ0lDQWdWRzl5ZFhOQ2RXWm1aWEpIWlc5dFpYUnllVG9nVTNJc0NpQWdJQ0JVYjNKMWMwdHViM1JIWlc5dFpYUnllVG9nVkhJc0NpQWdJQ0JVYjNKMWMwdHViM1JDZFdabVpYSkhaVzl0WlhSeWVUb2dWSElzQ2lBZ0lDQlVkV0psUjJWdmJXVjBjbms2SUVWeUxBb2dJQ0FnVkhWaVpVSjFabVpsY2tkbGIyMWxkSEo1T2lCRmNpd0tJQ0FnSUZkcGNtVm1jbUZ0WlVkbGIyMWxkSEo1T2lCRllRcDlLU3dnUVdFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxOb1lXUnZkMDFoZEdWeWFXRnNJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJoWlNnd0tTd2dkR2hwY3k1MGNtRnVjM0JoY21WdWRDQTlJQ0V3TENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNN0NpQWdJQ0I5Q24wN0NrRmhMbkJ5YjNSdmRIbHdaUzVwYzFOb1lXUnZkMDFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJ3YnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nWkhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1SbFptbHVaWE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRk5VUVU1RVFWSkVPaUFpSWdvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9NVFkzTnpjeU1UVXBMQ0IwYUdsekxuSnZkV2RvYm1WemN5QTlJREVzSUhSb2FYTXViV1YwWVd4dVpYTnpJRDBnTUN3Z2RHaHBjeTV0WVhBZ1BTQnVkV3hzTENCMGFHbHpMbXhwWjJoMFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVlXOU5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ01Td2dkR2hwY3k1bGJXbHpjMmwyWlNBOUlHNWxkeUJoWlNnd0tTd2dkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1KMWJYQk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtSjFiWEJUWTJGc1pTQTlJREVzSUhSb2FYTXVibTl5YldGc1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxJRDBnU0drc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVZ1BTQnVaWGNnV0NneExDQXhLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnTVN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnTUN3Z2RHaHBjeTV5YjNWbmFHNWxjM05OWVhBZ1BTQnVkV3hzTENCMGFHbHpMbTFsZEdGc2JtVnpjMDFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1WdWRrMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpXNTJUV0Z3U1c1MFpXNXphWFI1SUQwZ01Td2dkR2hwY3k1eVpXWnlZV04wYVc5dVVtRjBhVzhnUFNBdU9UZ3NJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bFkyRndJRDBnSW5KdmRXNWtJaXdnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0FoTVN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWtaV1pwYm1WeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCVFZFRk9SRUZTUkRvZ0lpSUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNdWNtOTFaMmh1WlhOeklEMGdaUzV5YjNWbmFHNWxjM01zSUhSb2FYTXViV1YwWVd4dVpYTnpJRDBnWlM1dFpYUmhiRzVsYzNNc0lIUm9hWE11YldGd0lEMGdaUzV0WVhBc0lIUm9hWE11YkdsbmFIUk5ZWEFnUFNCbExteHBaMmgwVFdGd0xDQjBhR2x6TG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTd2dkR2hwY3k1aGIwMWhjQ0E5SUdVdVlXOU5ZWEFzSUhSb2FYTXVZVzlOWVhCSmJuUmxibk5wZEhrZ1BTQmxMbUZ2VFdGd1NXNTBaVzV6YVhSNUxDQjBhR2x6TG1WdGFYTnphWFpsTG1OdmNIa29aUzVsYldsemMybDJaU2tzSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEFnUFNCbExtVnRhWE56YVhabFRXRndMQ0IwYUdsekxtVnRhWE56YVhabFNXNTBaVzV6YVhSNUlEMGdaUzVsYldsemMybDJaVWx1ZEdWdWMybDBlU3dnZEdocGN5NWlkVzF3VFdGd0lEMGdaUzVpZFcxd1RXRndMQ0IwYUdsekxtSjFiWEJUWTJGc1pTQTlJR1V1WW5WdGNGTmpZV3hsTENCMGFHbHpMbTV2Y20xaGJFMWhjQ0E5SUdVdWJtOXliV0ZzVFdGd0xDQjBhR2x6TG01dmNtMWhiRTFoY0ZSNWNHVWdQU0JsTG01dmNtMWhiRTFoY0ZSNWNHVXNJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVXVZMjl3ZVNobExtNXZjbTFoYkZOallXeGxLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5d2dkR2hwY3k1eWIzVm5hRzVsYzNOTllYQWdQU0JsTG5KdmRXZG9ibVZ6YzAxaGNDd2dkR2hwY3k1dFpYUmhiRzVsYzNOTllYQWdQU0JsTG0xbGRHRnNibVZ6YzAxaGNDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHVXVZV3h3YUdGTllYQXNJSFJvYVhNdVpXNTJUV0Z3SUQwZ1pTNWxiblpOWVhBc0lIUm9hWE11Wlc1MlRXRndTVzUwWlc1emFYUjVJRDBnWlM1bGJuWk5ZWEJKYm5SbGJuTnBkSGtzSUhSb2FYTXVjbVZtY21GamRHbHZibEpoZEdsdklEMGdaUzV5WldaeVlXTjBhVzl1VW1GMGFXOHNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUdVdWQybHlaV1p5WVcxbFRHbHVaV05oY0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUdVdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0c0lIUm9hWE11Wm14aGRGTm9ZV1JwYm1jZ1BTQmxMbVpzWVhSVGFHRmthVzVuTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3B3Ynk1d2NtOTBiM1I1Y0dVdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0E5SUNFd093cDJZWElnUTJFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhCdklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1a1pXWnBibVZ6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JUVkVGT1JFRlNSRG9nSWlJc0NpQWdJQ0FnSUNBZ0lDQWdJRkJJV1ZOSlEwRk1PaUFpSWdvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb1VHaDVjMmxqWVd4TllYUmxjbWxoYkNJc0lIUm9hWE11WTJ4bFlYSmpiMkYwVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM01nUFNBd0xDQjBhR2x6TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDQTlJRzUxYkd3c0lIUm9hWE11WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVZ1BTQnVaWGNnV0NneExDQXhLU3dnZEdocGN5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1sdmNpQTlJREV1TlN3Z1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnlaV1pzWldOMGFYWnBkSGtpTENCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JYUW9NaTQxSUNvZ0tIUm9hWE11YVc5eUlDMGdNU2tnTHlBb2RHaHBjeTVwYjNJZ0t5QXhLU3dnTUN3Z01TazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2RDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cGIzSWdQU0FvTVNBcklDNDBJQ29nZENrZ0x5QW9NU0F0SUM0MElDb2dkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NXphR1ZsYmtOdmJHOXlJRDBnYm1WM0lHRmxLREFwTENCMGFHbHpMbk5vWldWdVEyOXNiM0pOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbk5vWldWdVVtOTFaMmh1WlhOeklEMGdNU3dnZEdocGN5NXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDQTlJRzUxYkd3c0lIUm9hWE11ZEhKaGJuTnRhWE56YVc5dVRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1MGFHbGphMjVsYzNNZ1BTQXdMQ0IwYUdsekxuUm9hV05yYm1WemMwMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTQTlJREFzSUhSb2FYTXVZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpQTlJRzVsZHlCaFpTZ3hMQ0F4TENBeEtTd2dkR2hwY3k1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSWdQU0J1WlhjZ1lXVW9NU3dnTVN3Z01Ta3NJSFJvYVhNdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NBOUlHNTFiR3dzSUhSb2FYTXVYM05vWldWdUlEMGdNQ3dnZEdocGN5NWZZMnhsWVhKamIyRjBJRDBnTUN3Z2RHaHBjeTVmZEhKaGJuTnRhWE56YVc5dUlEMGdNQ3dnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUWdjMmhsWlc0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNOb1pXVnVPd29nSUNBZ2ZRb2dJQ0FnYzJWMElITm9aV1Z1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5emFHVmxiaUErSURBZ0lUMGdaU0ErSURBZ0ppWWdkR2hwY3k1MlpYSnphVzl1S3lzc0lIUm9hWE11WDNOb1pXVnVJRDBnWlRzS0lDQWdJSDBLSUNBZ0lHZGxkQ0JqYkdWaGNtTnZZWFFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMk5zWldGeVkyOWhkRHNLSUNBZ0lIMEtJQ0FnSUhObGRDQmpiR1ZoY21OdllYUW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYMk5zWldGeVkyOWhkQ0ErSURBZ0lUMGdaU0ErSURBZ0ppWWdkR2hwY3k1MlpYSnphVzl1S3lzc0lIUm9hWE11WDJOc1pXRnlZMjloZENBOUlHVTdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2RISmhibk50YVhOemFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTBjbUZ1YzIxcGMzTnBiMjQ3Q2lBZ0lDQjlDaUFnSUNCelpYUWdkSEpoYm5OdGFYTnphVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5MGNtRnVjMjFwYzNOcGIyNGdQaUF3SUNFOUlHVWdQaUF3SUNZbUlIUm9hWE11ZG1WeWMybHZiaXNyTENCMGFHbHpMbDkwY21GdWMyMXBjM05wYjI0Z1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WkdWbWFXNWxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdVMVJCVGtSQlVrUTZJQ0lpTEFvZ0lDQWdJQ0FnSUNBZ0lDQlFTRmxUU1VOQlREb2dJaUlLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbU5zWldGeVkyOWhkQ0E5SUdVdVkyeGxZWEpqYjJGMExDQjBhR2x6TG1Oc1pXRnlZMjloZEUxaGNDQTlJR1V1WTJ4bFlYSmpiMkYwVFdGd0xDQjBhR2x6TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBOUlHVXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpMQ0IwYUdsekxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0E5SUdVdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndMQ0IwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDQTlJR1V1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3TENCMGFHbHpMbU5zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsTG1OdmNIa29aUzVqYkdWaGNtTnZZWFJPYjNKdFlXeFRZMkZzWlNrc0lIUm9hWE11YVc5eUlEMGdaUzVwYjNJc0lIUm9hWE11YzJobFpXNGdQU0JsTG5Ob1pXVnVMQ0IwYUdsekxuTm9aV1Z1UTI5c2IzSXVZMjl3ZVNobExuTm9aV1Z1UTI5c2IzSXBMQ0IwYUdsekxuTm9aV1Z1UTI5c2IzSk5ZWEFnUFNCbExuTm9aV1Z1UTI5c2IzSk5ZWEFzSUhSb2FYTXVjMmhsWlc1U2IzVm5hRzVsYzNNZ1BTQmxMbk5vWldWdVVtOTFaMmh1WlhOekxDQjBhR2x6TG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3SUQwZ1pTNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDd2dkR2hwY3k1MGNtRnVjMjFwYzNOcGIyNGdQU0JsTG5SeVlXNXpiV2x6YzJsdmJpd2dkR2hwY3k1MGNtRnVjMjFwYzNOcGIyNU5ZWEFnUFNCbExuUnlZVzV6YldsemMybHZiazFoY0N3Z2RHaHBjeTUwYUdsamEyNWxjM01nUFNCbExuUm9hV05yYm1WemN5d2dkR2hwY3k1MGFHbGphMjVsYzNOTllYQWdQU0JsTG5Sb2FXTnJibVZ6YzAxaGNDd2dkR2hwY3k1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElEMGdaUzVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sTENCMGFHbHpMbUYwZEdWdWRXRjBhVzl1UTI5c2IzSXVZMjl3ZVNobExtRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJcExDQjBhR2x6TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1SUQwZ1pTNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVTd2dkR2hwY3k1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQTlJR1V1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBc0lIUm9hWE11YzNCbFkzVnNZWEpEYjJ4dmNpNWpiM0I1S0dVdWMzQmxZM1ZzWVhKRGIyeHZjaWtzSUhSb2FYTXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQTlJR1V1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ3dnZEdocGN6c0tJQ0FnSUgwS2ZUc0tRMkV1Y0hKdmRHOTBlWEJsTG1selRXVnphRkJvZVhOcFkyRnNUV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJRXhoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb1VHaHZibWROWVhSbGNtbGhiQ0lzSUhSb2FYTXVZMjlzYjNJZ1BTQnVaWGNnWVdVb01UWTNOemN5TVRVcExDQjBhR2x6TG5Od1pXTjFiR0Z5SUQwZ2JtVjNJR0ZsS0RFeE1UZzBPREVwTENCMGFHbHpMbk5vYVc1cGJtVnpjeUE5SURNd0xDQjBhR2x6TG0xaGNDQTlJRzUxYkd3c0lIUm9hWE11YkdsbmFIUk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlEMGdNU3dnZEdocGN5NWhiMDFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZVzlOWVhCSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxtVnRhWE56YVhabElEMGdibVYzSUdGbEtEQXBMQ0IwYUdsekxtVnRhWE56YVhabFNXNTBaVzV6YVhSNUlEMGdNU3dnZEdocGN5NWxiV2x6YzJsMlpVMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVluVnRjRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZblZ0Y0ZOallXeGxJRDBnTVN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtNXZjbTFoYkUxaGNGUjVjR1VnUFNCSWFTd2dkR2hwY3k1dWIzSnRZV3hUWTJGc1pTQTlJRzVsZHlCWUtERXNJREVwTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNBeExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNBd0xDQjBhR2x6TG5Od1pXTjFiR0Z5VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpXNTJUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWpiMjFpYVc1bElEMGdWbk1zSUhSb2FYTXVjbVZtYkdWamRHbDJhWFI1SUQwZ01Td2dkR2hwY3k1eVpXWnlZV04wYVc5dVVtRjBhVzhnUFNBdU9UZ3NJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bFkyRndJRDBnSW5KdmRXNWtJaXdnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0FoTVN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWpiMnh2Y2k1amIzQjVLR1V1WTI5c2IzSXBMQ0IwYUdsekxuTndaV04xYkdGeUxtTnZjSGtvWlM1emNHVmpkV3hoY2lrc0lIUm9hWE11YzJocGJtbHVaWE56SUQwZ1pTNXphR2x1YVc1bGMzTXNJSFJvYVhNdWJXRndJRDBnWlM1dFlYQXNJSFJvYVhNdWJHbG5hSFJOWVhBZ1BTQmxMbXhwWjJoMFRXRndMQ0IwYUdsekxteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU3dnZEdocGN5NWhiMDFoY0NBOUlHVXVZVzlOWVhBc0lIUm9hWE11WVc5TllYQkpiblJsYm5OcGRIa2dQU0JsTG1GdlRXRndTVzUwWlc1emFYUjVMQ0IwYUdsekxtVnRhWE56YVhabExtTnZjSGtvWlM1bGJXbHpjMmwyWlNrc0lIUm9hWE11WlcxcGMzTnBkbVZOWVhBZ1BTQmxMbVZ0YVhOemFYWmxUV0Z3TENCMGFHbHpMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVJRDBnWlM1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVN3Z2RHaHBjeTVpZFcxd1RXRndJRDBnWlM1aWRXMXdUV0Z3TENCMGFHbHpMbUoxYlhCVFkyRnNaU0E5SUdVdVluVnRjRk5qWVd4bExDQjBhR2x6TG01dmNtMWhiRTFoY0NBOUlHVXVibTl5YldGc1RXRndMQ0IwYUdsekxtNXZjbTFoYkUxaGNGUjVjR1VnUFNCbExtNXZjbTFoYkUxaGNGUjVjR1VzSUhSb2FYTXVibTl5YldGc1UyTmhiR1V1WTI5d2VTaGxMbTV2Y20xaGJGTmpZV3hsS1N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0JsTG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeXdnZEdocGN5NXpjR1ZqZFd4aGNrMWhjQ0E5SUdVdWMzQmxZM1ZzWVhKTllYQXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQmxMbUZzY0doaFRXRndMQ0IwYUdsekxtVnVkazFoY0NBOUlHVXVaVzUyVFdGd0xDQjBhR2x6TG1OdmJXSnBibVVnUFNCbExtTnZiV0pwYm1Vc0lIUm9hWE11Y21WbWJHVmpkR2wyYVhSNUlEMGdaUzV5Wldac1pXTjBhWFpwZEhrc0lIUm9hWE11Y21WbWNtRmpkR2x2YmxKaGRHbHZJRDBnWlM1eVpXWnlZV04wYVc5dVVtRjBhVzhzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnWlM1M2FYSmxabkpoYldVc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldOaGNDd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxhbTlwYmlBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNHNJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0JsTG1ac1lYUlRhR0ZrYVc1bkxDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwTVlTNXdjbTkwYjNSNWNHVXVhWE5OWlhOb1VHaHZibWROWVhSbGNtbGhiQ0E5SUNFd093cDJZWElnVW1FZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1a1pXWnBibVZ6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JVVDA5T09pQWlJZ29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVkSGx3WlNBOUlDSk5aWE5vVkc5dmJrMWhkR1Z5YVdGc0lpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QmhaU2d4TmpjM056SXhOU2tzSUhSb2FYTXViV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NW5jbUZrYVdWdWRFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJHbG5hSFJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnTVN3Z2RHaHBjeTVoYjAxaGNDQTlJRzUxYkd3c0lIUm9hWE11WVc5TllYQkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbVZ0YVhOemFYWmxJRDBnYm1WM0lHRmxLREFwTENCMGFHbHpMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVJRDBnTVN3Z2RHaHBjeTVsYldsemMybDJaVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZblZ0Y0UxaGNDQTlJRzUxYkd3c0lIUm9hWE11WW5WdGNGTmpZV3hsSUQwZ01Td2dkR2hwY3k1dWIzSnRZV3hOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQklhU3dnZEdocGN5NXViM0p0WVd4VFkyRnNaU0E5SUc1bGR5QllLREVzSURFcExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQXhMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQXdMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNBaE1Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ1BTQWljbTkxYm1RaUxDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWpiMnh2Y2k1amIzQjVLR1V1WTI5c2IzSXBMQ0IwYUdsekxtMWhjQ0E5SUdVdWJXRndMQ0IwYUdsekxtZHlZV1JwWlc1MFRXRndJRDBnWlM1bmNtRmthV1Z1ZEUxaGNDd2dkR2hwY3k1c2FXZG9kRTFoY0NBOUlHVXViR2xuYUhSTllYQXNJSFJvYVhNdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQmxMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVMQ0IwYUdsekxtRnZUV0Z3SUQwZ1pTNWhiMDFoY0N3Z2RHaHBjeTVoYjAxaGNFbHVkR1Z1YzJsMGVTQTlJR1V1WVc5TllYQkpiblJsYm5OcGRIa3NJSFJvYVhNdVpXMXBjM05wZG1VdVkyOXdlU2hsTG1WdGFYTnphWFpsS1N3Z2RHaHBjeTVsYldsemMybDJaVTFoY0NBOUlHVXVaVzFwYzNOcGRtVk5ZWEFzSUhSb2FYTXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dQU0JsTG1WdGFYTnphWFpsU1c1MFpXNXphWFI1TENCMGFHbHpMbUoxYlhCTllYQWdQU0JsTG1KMWJYQk5ZWEFzSUhSb2FYTXVZblZ0Y0ZOallXeGxJRDBnWlM1aWRXMXdVMk5oYkdVc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUQwZ1pTNXViM0p0WVd4TllYQXNJSFJvYVhNdWJtOXliV0ZzVFdGd1ZIbHdaU0E5SUdVdWJtOXliV0ZzVFdGd1ZIbHdaU3dnZEdocGN5NXViM0p0WVd4VFkyRnNaUzVqYjNCNUtHVXVibTl5YldGc1UyTmhiR1VwTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElEMGdaUzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJDYVdGeklEMGdaUzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdaUzVoYkhCb1lVMWhjQ3dnZEdocGN5NTNhWEpsWm5KaGJXVWdQU0JsTG5kcGNtVm1jbUZ0WlN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNCbExuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxZMkZ3SUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsWTJGd0xDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1SUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1VtRXVjSEp2ZEc5MGVYQmxMbWx6VFdWemFGUnZiMjVOWVhSbGNtbGhiQ0E5SUNFd093cDJZWElnVUdFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWsxbGMyaE9iM0p0WVd4TllYUmxjbWxoYkNJc0lIUm9hWE11WW5WdGNFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVluVnRjRk5qWVd4bElEMGdNU3dnZEdocGN5NXViM0p0WVd4TllYQWdQU0J1ZFd4c0xDQjBhR2x6TG01dmNtMWhiRTFoY0ZSNWNHVWdQU0JJYVN3Z2RHaHBjeTV1YjNKdFlXeFRZMkZzWlNBOUlHNWxkeUJZS0RFc0lERXBMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0F4TENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0F3TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUNFeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlERXNJSFJvYVhNdVptOW5JRDBnSVRFc0lIUm9hWE11Wm14aGRGTm9ZV1JwYm1jZ1BTQWhNU3dnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1aWRXMXdUV0Z3SUQwZ1pTNWlkVzF3VFdGd0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlHVXVZblZ0Y0ZOallXeGxMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJR1V1Ym05eWJXRnNUV0Z3TENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQmxMbTV2Y20xaGJFMWhjRlI1Y0dVc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVdVkyOXdlU2hsTG01dmNtMWhiRk5qWVd4bEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNCbExuZHBjbVZtY21GdFpTd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ3dnZEdocGN5NW1iR0YwVTJoaFpHbHVaeUE5SUdVdVpteGhkRk5vWVdScGJtY3NJSFJvYVhNN0NpQWdJQ0I5Q24wN0NsQmhMbkJ5YjNSdmRIbHdaUzVwYzAxbGMyaE9iM0p0WVd4TllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1NXRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrMWxjMmhNWVcxaVpYSjBUV0YwWlhKcFlXd2lMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1N3Z2RHaHBjeTV0WVhBZ1BTQnVkV3hzTENCMGFHbHpMbXhwWjJoMFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVlXOU5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ01Td2dkR2hwY3k1bGJXbHpjMmwyWlNBOUlHNWxkeUJoWlNnd0tTd2dkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG5Od1pXTjFiR0Z5VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpXNTJUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWpiMjFpYVc1bElEMGdWbk1zSUhSb2FYTXVjbVZtYkdWamRHbDJhWFI1SUQwZ01Td2dkR2hwY3k1eVpXWnlZV04wYVc5dVVtRjBhVzhnUFNBdU9UZ3NJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bFkyRndJRDBnSW5KdmRXNWtJaXdnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WTI5c2IzSXVZMjl3ZVNobExtTnZiRzl5S1N3Z2RHaHBjeTV0WVhBZ1BTQmxMbTFoY0N3Z2RHaHBjeTVzYVdkb2RFMWhjQ0E5SUdVdWJHbG5hSFJOWVhBc0lIUm9hWE11YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNCbExteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUxDQjBhR2x6TG1GdlRXRndJRDBnWlM1aGIwMWhjQ3dnZEdocGN5NWhiMDFoY0VsdWRHVnVjMmwwZVNBOUlHVXVZVzlOWVhCSmJuUmxibk5wZEhrc0lIUm9hWE11WlcxcGMzTnBkbVV1WTI5d2VTaGxMbVZ0YVhOemFYWmxLU3dnZEdocGN5NWxiV2x6YzJsMlpVMWhjQ0E5SUdVdVpXMXBjM05wZG1WTllYQXNJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ1BTQmxMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVMQ0IwYUdsekxuTndaV04xYkdGeVRXRndJRDBnWlM1emNHVmpkV3hoY2sxaGNDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHVXVZV3h3YUdGTllYQXNJSFJvYVhNdVpXNTJUV0Z3SUQwZ1pTNWxiblpOWVhBc0lIUm9hWE11WTI5dFltbHVaU0E5SUdVdVkyOXRZbWx1WlN3Z2RHaHBjeTV5Wldac1pXTjBhWFpwZEhrZ1BTQmxMbkpsWm14bFkzUnBkbWwwZVN3Z2RHaHBjeTV5WldaeVlXTjBhVzl1VW1GMGFXOGdQU0JsTG5KbFpuSmhZM1JwYjI1U1lYUnBieXdnZEdocGN5NTNhWEpsWm5KaGJXVWdQU0JsTG5kcGNtVm1jbUZ0WlN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNCbExuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxZMkZ3SUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsWTJGd0xDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1SUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1NXRXVjSEp2ZEc5MGVYQmxMbWx6VFdWemFFeGhiV0psY25STllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1JHRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWtaV1pwYm1WeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCTlFWUkRRVkE2SUNJaUNpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1MGVYQmxJRDBnSWsxbGMyaE5ZWFJqWVhCTllYUmxjbWxoYkNJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9NVFkzTnpjeU1UVXBMQ0IwYUdsekxtMWhkR05oY0NBOUlHNTFiR3dzSUhSb2FYTXViV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWlkVzF3VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVpZFcxd1UyTmhiR1VnUFNBeExDQjBhR2x6TG01dmNtMWhiRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVibTl5YldGc1RXRndWSGx3WlNBOUlFaHBMQ0IwYUdsekxtNXZjbTFoYkZOallXeGxJRDBnYm1WM0lGZ29NU3dnTVNrc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlERXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlEQXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVpzWVhSVGFHRmthVzVuSUQwZ0lURXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WkdWbWFXNWxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdUVUZVUTBGUU9pQWlJZ29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVZMjlzYjNJdVkyOXdlU2hsTG1OdmJHOXlLU3dnZEdocGN5NXRZWFJqWVhBZ1BTQmxMbTFoZEdOaGNDd2dkR2hwY3k1dFlYQWdQU0JsTG0xaGNDd2dkR2hwY3k1aWRXMXdUV0Z3SUQwZ1pTNWlkVzF3VFdGd0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlHVXVZblZ0Y0ZOallXeGxMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJR1V1Ym05eWJXRnNUV0Z3TENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQmxMbTV2Y20xaGJFMWhjRlI1Y0dVc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVdVkyOXdlU2hsTG01dmNtMWhiRk5qWVd4bEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUdVdVlXeHdhR0ZOWVhBc0lIUm9hWE11Wm14aGRGTm9ZV1JwYm1jZ1BTQmxMbVpzWVhSVGFHRmthVzVuTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BFWVM1d2NtOTBiM1I1Y0dVdWFYTk5aWE5vVFdGMFkyRndUV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJRVpoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJtZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pNYVc1bFJHRnphR1ZrVFdGMFpYSnBZV3dpTENCMGFHbHpMbk5qWVd4bElEMGdNU3dnZEdocGN5NWtZWE5vVTJsNlpTQTlJRE1zSUhSb2FYTXVaMkZ3VTJsNlpTQTlJREVzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWMyTmhiR1VnUFNCbExuTmpZV3hsTENCMGFHbHpMbVJoYzJoVGFYcGxJRDBnWlM1a1lYTm9VMmw2WlN3Z2RHaHBjeTVuWVhCVGFYcGxJRDBnWlM1bllYQlRhWHBsTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BHWVM1d2NtOTBiM1I1Y0dVdWFYTk1hVzVsUkdGemFHVmtUV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJSE41SUQwZ1QySnFaV04wTG1aeVpXVjZaU2g3Q2lBZ0lDQmZYM0J5YjNSdlgxODZJRzUxYkd3c0NpQWdJQ0JUYUdGa2IzZE5ZWFJsY21saGJEb2dRV0VzQ2lBZ0lDQlRjSEpwZEdWTllYUmxjbWxoYkRvZ2FXOHNDaUFnSUNCU1lYZFRhR0ZrWlhKTllYUmxjbWxoYkRvZ1Iya3NDaUFnSUNCVGFHRmtaWEpOWVhSbGNtbGhiRG9nYzI0c0NpQWdJQ0JRYjJsdWRITk5ZWFJsY21saGJEb2dhbTRzQ2lBZ0lDQk5aWE5vVUdoNWMybGpZV3hOWVhSbGNtbGhiRG9nUTJFc0NpQWdJQ0JOWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkRvZ2NHOHNDaUFnSUNCTlpYTm9VR2h2Ym1kTllYUmxjbWxoYkRvZ1RHRXNDaUFnSUNCTlpYTm9WRzl2YmsxaGRHVnlhV0ZzT2lCU1lTd0tJQ0FnSUUxbGMyaE9iM0p0WVd4TllYUmxjbWxoYkRvZ1VHRXNDaUFnSUNCTlpYTm9UR0Z0WW1WeWRFMWhkR1Z5YVdGc09pQkpZU3dLSUNBZ0lFMWxjMmhFWlhCMGFFMWhkR1Z5YVdGc09pQmxieXdLSUNBZ0lFMWxjMmhFYVhOMFlXNWpaVTFoZEdWeWFXRnNPaUIwYnl3S0lDQWdJRTFsYzJoQ1lYTnBZMDFoZEdWeWFXRnNPaUJvYml3S0lDQWdJRTFsYzJoTllYUmpZWEJOWVhSbGNtbGhiRG9nUkdFc0NpQWdJQ0JNYVc1bFJHRnphR1ZrVFdGMFpYSnBZV3c2SUVaaExBb2dJQ0FnVEdsdVpVSmhjMmxqVFdGMFpYSnBZV3c2SUdaMExBb2dJQ0FnVFdGMFpYSnBZV3c2SUdSMENuMHBMQ0JhWlNBOUlIc0tJQ0FnSUdGeWNtRjVVMnhwWTJVNklHWjFibU4wYVc5dUtITXNJR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1dtVXVhWE5VZVhCbFpFRnljbUY1S0hNcElEOGdibVYzSUhNdVkyOXVjM1J5ZFdOMGIzSW9jeTV6ZFdKaGNuSmhlU2hsTENCMElDRTlQU0IyYjJsa0lEQWdQeUIwSURvZ2N5NXNaVzVuZEdncEtTQTZJSE11YzJ4cFkyVW9aU3dnZENrN0NpQWdJQ0I5TEFvZ0lDQWdZMjl1ZG1WeWRFRnljbUY1T2lCbWRXNWpkR2x2YmloekxDQmxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNGeklIeDhJQ0YwSUNZbUlITXVZMjl1YzNSeWRXTjBiM0lnUFQwOUlHVWdQeUJ6SURvZ2RIbHdaVzltSUdVdVFsbFVSVk5mVUVWU1gwVk1SVTFGVGxRZ1BUMGdJbTUxYldKbGNpSWdQeUJ1WlhjZ1pTaHpLU0E2SUVGeWNtRjVMbkJ5YjNSdmRIbHdaUzV6YkdsalpTNWpZV3hzS0hNcE93b2dJQ0FnZlN3S0lDQWdJR2x6Vkhsd1pXUkJjbkpoZVRvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQkJjbkpoZVVKMVptWmxjaTVwYzFacFpYY29jeWtnSmlZZ0lTaHpJR2x1YzNSaGJtTmxiMllnUkdGMFlWWnBaWGNwT3dvZ0lDQWdmU3dLSUNBZ0lHZGxkRXRsZVdaeVlXMWxUM0prWlhJNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJsS0drc0lISXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOYmFWMGdMU0J6VzNKZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnZENBOUlITXViR1Z1WjNSb0xDQnVJRDBnYm1WM0lFRnljbUY1S0hRcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREE3SUdrZ0lUMDlJSFE3SUNzcmFTbHVXMmxkSUQwZ2FUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpiM0owS0dVcExDQnVPd29nSUNBZ2ZTd0tJQ0FnSUhOdmNuUmxaRUZ5Y21GNU9pQm1kVzVqZEdsdmJpaHpMQ0JsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQnpMbXhsYm1kMGFDd2dhU0E5SUc1bGR5QnpMbU52Ym5OMGNuVmpkRzl5S0c0cE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQXdPeUJ2SUNFOVBTQnVPeUFySzNJcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJiY2wwZ0tpQmxPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUd3Z1BTQXdPeUJzSUNFOVBTQmxPeUFySzJ3cGFWdHZLeXRkSUQwZ2MxdGhJQ3NnYkYwN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcE93b2dJQ0FnZlN3S0lDQWdJR1pzWVhSMFpXNUtVMDlPT2lCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQXhMQ0J5SUQwZ2Mxc3dYVHNLSUNBZ0lDQWdJQ0JtYjNJb095QnlJQ0U5UFNCMmIybGtJREFnSmlZZ2NsdHVYU0E5UFQwZ2RtOXBaQ0F3T3lseUlEMGdjMXRwS3l0ZE93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhKYmJsMDdDaUFnSUNBZ0lDQWdhV1lnS0c4Z0lUMDlJSFp2YVdRZ01Da2dhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29ieWtwSUdSdklHOGdQU0J5VzI1ZExDQnZJQ0U5UFNCMmIybGtJREFnSmlZZ0tHVXVjSFZ6YUNoeUxuUnBiV1VwTENCMExuQjFjMmd1WVhCd2JIa29kQ3dnYnlrcExDQnlJRDBnYzF0cEt5dGRPd29nSUNBZ0lDQWdJSGRvYVd4bElDaHlJQ0U5UFNCMmIybGtJREFwQ2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvYnk1MGIwRnljbUY1SUNFOVBTQjJiMmxrSURBcElHUnZJRzhnUFNCeVcyNWRMQ0J2SUNFOVBTQjJiMmxrSURBZ0ppWWdLR1V1Y0hWemFDaHlMblJwYldVcExDQnZMblJ2UVhKeVlYa29kQ3dnZEM1c1pXNW5kR2dwS1N3Z2NpQTlJSE5iYVNzclhUc0tJQ0FnSUNBZ0lDQjNhR2xzWlNBb2NpQWhQVDBnZG05cFpDQXdLUW9nSUNBZ0lDQWdJR1ZzYzJVZ1pHOGdieUE5SUhKYmJsMHNJRzhnSVQwOUlIWnZhV1FnTUNBbUppQW9aUzV3ZFhOb0tISXVkR2x0WlNrc0lIUXVjSFZ6YUNodktTa3NJSElnUFNCelcya3JLMTA3Q2lBZ0lDQWdJQ0FnZDJocGJHVWdLSElnSVQwOUlIWnZhV1FnTUNrS0lDQWdJSDBzQ2lBZ0lDQnpkV0pqYkdsd09pQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVMQ0JwSUQwZ016QXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSE11WTJ4dmJtVW9LVHNLSUNBZ0lDQWdJQ0J5TG01aGJXVWdQU0JsT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc0lEMGdNRHNnYkNBOElISXVkSEpoWTJ0ekxteGxibWQwYURzZ0t5dHNLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCeUxuUnlZV05yYzF0c1hTd2dhQ0E5SUdNdVoyVjBWbUZzZFdWVGFYcGxLQ2tzSUhVZ1BTQmJYU3dnWkNBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdPeUJtSUR3Z1l5NTBhVzFsY3k1c1pXNW5kR2c3SUNzclppbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlHTXVkR2x0WlhOYlpsMGdLaUJwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRW9iU0E4SUhRZ2ZId2diU0ErUFNCdUtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhVdWNIVnphQ2hqTG5ScGJXVnpXMlpkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIZ2dQU0F3T3lCNElEd2dhRHNnS3l0NEtXUXVjSFZ6YUNoakxuWmhiSFZsYzF0bUlDb2dhQ0FySUhoZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjFMbXhsYm1kMGFDQWhQVDBnTUNBbUppQW9ZeTUwYVcxbGN5QTlJRnBsTG1OdmJuWmxjblJCY25KaGVTaDFMQ0JqTG5ScGJXVnpMbU52Ym5OMGNuVmpkRzl5S1N3Z1l5NTJZV3gxWlhNZ1BTQmFaUzVqYjI1MlpYSjBRWEp5WVhrb1pDd2dZeTUyWVd4MVpYTXVZMjl1YzNSeWRXTjBiM0lwTENCdkxuQjFjMmdvWXlrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlMblJ5WVdOcmN5QTlJRzg3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0F4SUM4Z01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHd2dQU0F3T3lCc0lEd2djaTUwY21GamEzTXViR1Z1WjNSb095QXJLMndwWVNBK0lISXVkSEpoWTJ0elcyeGRMblJwYldWeld6QmRJQ1ltSUNoaElEMGdjaTUwY21GamEzTmJiRjB1ZEdsdFpYTmJNRjBwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlEQTdJR3dnUENCeUxuUnlZV05yY3k1c1pXNW5kR2c3SUNzcmJDbHlMblJ5WVdOcmMxdHNYUzV6YUdsbWRDZ3RNU0FxSUdFcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeUxuSmxjMlYwUkhWeVlYUnBiMjRvS1N3Z2Nqc0tJQ0FnSUgwc0NpQWdJQ0J0WVd0bFEyeHBjRUZrWkdsMGFYWmxPaUJtZFc1amRHbHZiaWh6TENCbElEMGdNQ3dnZENBOUlITXNJRzRnUFNBek1Da2dld29nSUNBZ0lDQWdJRzRnUEQwZ01DQW1KaUFvYmlBOUlETXdLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFF1ZEhKaFkydHpMbXhsYm1kMGFDd2djaUE5SUdVZ0x5QnVPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBN0lHOGdQQ0JwT3lBcksyOHBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhRdWRISmhZMnR6VzI5ZExDQnNJRDBnWVM1V1lXeDFaVlI1Y0dWT1lXMWxPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQ0E5UFQwZ0ltSnZiMndpSUh4OElHd2dQVDA5SUNKemRISnBibWNpS1NCamIyNTBhVzUxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQnpMblJ5WVdOcmN5NW1hVzVrS0daMWJtTjBhVzl1S0djcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbkxtNWhiV1VnUFQwOUlHRXVibUZ0WlNBbUppQm5MbFpoYkhWbFZIbHdaVTVoYldVZ1BUMDlJR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZeUE5UFQwZ2RtOXBaQ0F3S1NCamIyNTBhVzUxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQXdMQ0IxSUQwZ1lTNW5aWFJXWVd4MVpWTnBlbVVvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZUzVqY21WaGRHVkpiblJsY25CdmJHRnVkQzVwYzBsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRWRNVkVaRGRXSnBZMU53YkdsdVpTQW1KaUFvYUNBOUlIVWdMeUF6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQXdMQ0JtSUQwZ1l5NW5aWFJXWVd4MVpWTnBlbVVvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZeTVqY21WaGRHVkpiblJsY25CdmJHRnVkQzVwYzBsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRWRNVkVaRGRXSnBZMU53YkdsdVpTQW1KaUFvWkNBOUlHWWdMeUF6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQmhMblJwYldWekxteGxibWQwYUNBdElERXNJSGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUR3OUlHRXVkR2x0WlhOYk1GMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbklEMGdhQ3dnY0NBOUlIVWdMU0JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUNBOUlGcGxMbUZ5Y21GNVUyeHBZMlVvWVM1MllXeDFaWE1zSUdjc0lIQXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tISWdQajBnWVM1MGFXMWxjMXR0WFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCdElDb2dkU0FySUdnc0lIQWdQU0JuSUNzZ2RTQXRJR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0SUQwZ1dtVXVZWEp5WVhsVGJHbGpaU2hoTG5aaGJIVmxjeXdnWnl3Z2NDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJR0V1WTNKbFlYUmxTVzUwWlhKd2IyeGhiblFvS1N3Z2NDQTlJR2dzSUY4Z1BTQjFJQzBnYURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdjdVpYWmhiSFZoZEdVb2Npa3NJSGdnUFNCYVpTNWhjbkpoZVZOc2FXTmxLR2N1Y21WemRXeDBRblZtWm1WeUxDQndMQ0JmS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc0lEMDlQU0FpY1hWaGRHVnlibWx2YmlJZ0ppWWdibVYzSUdkMEtDa3Vabkp2YlVGeWNtRjVLSGdwTG01dmNtMWhiR2w2WlNncExtTnZibXAxWjJGMFpTZ3BMblJ2UVhKeVlYa29lQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ1l5NTBhVzFsY3k1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p5QTlJREE3SUdjZ1BDQjJPeUFySzJjcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCbklDb2daaUFySUdRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQ0E5UFQwZ0luRjFZWFJsY201cGIyNGlLU0JuZEM1dGRXeDBhWEJzZVZGMVlYUmxjbTVwYjI1elJteGhkQ2hqTG5aaGJIVmxjeXdnY0N3Z2VDd2dNQ3dnWXk1MllXeDFaWE1zSUhBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjhnUFNCbUlDMGdaQ0FxSURJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjVJRDBnTURzZ2VTQThJRjg3SUNzcmVTbGpMblpoYkhWbGMxdHdJQ3NnZVYwZ0xUMGdlRnQ1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjeTVpYkdWdVpFMXZaR1VnUFNCeFl5d2djenNLSUNBZ0lIMEtmU3dnWTI0Z1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CaGNtRnRaWFJsY2xCdmMybDBhVzl1Y3lBOUlHVXNJSFJvYVhNdVgyTmhZMmhsWkVsdVpHVjRJRDBnTUN3Z2RHaHBjeTV5WlhOMWJIUkNkV1ptWlhJZ1BTQnBJQ0U5UFNCMmIybGtJREFnUHlCcElEb2dibVYzSUhRdVkyOXVjM1J5ZFdOMGIzSW9iaWtzSUhSb2FYTXVjMkZ0Y0d4bFZtRnNkV1Z6SUQwZ2RDd2dkR2hwY3k1MllXeDFaVk5wZW1VZ1BTQnVMQ0IwYUdsekxuTmxkSFJwYm1keklEMGdiblZzYkN3Z2RHaHBjeTVFWldaaGRXeDBVMlYwZEdsdVozTmZJRDBnZTMwN0NpQWdJQ0I5Q2lBZ0lDQmxkbUZzZFdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuQmhjbUZ0WlhSbGNsQnZjMmwwYVc5dWN5d2diaUE5SUhSb2FYTXVYMk5oWTJobFpFbHVaR1Y0TENCcElEMGdkRnR1WFN3Z2NpQTlJSFJiYmlBdElERmRPd29nSUNBZ0lDQWdJR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHODdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FUb2dhV1lnS0NFb1pTQThJR2twS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlHNGdLeUF5T3pzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsSUR3Z2Npa2dZbkpsWVdzZ2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmlBOUlIUXViR1Z1WjNSb0xDQjBhR2x6TGw5allXTm9aV1JKYm1SbGVDQTlJRzRzSUhSb2FYTXVZV1owWlhKRmJtUmZLRzRnTFNBeExDQmxMQ0J5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUlEMDlQU0JoS1NCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDBnYVN3Z2FTQTlJSFJiS3l0dVhTd2daU0E4SUdrcElHSnlaV0ZySUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlIUXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhheUJ1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lTaGxJRDQ5SUhJcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RGc3hYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaU0E4SUdFZ0ppWWdLRzRnUFNBeUxDQnlJRDBnWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlHNGdMU0F5T3pzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlIUm9hWE11WDJOaFkyaGxaRWx1WkdWNElEMGdNQ3dnZEdocGN5NWlaV1p2Y21WVGRHRnlkRjhvTUN3Z1pTd2dhU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ2JDa2dZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBOUlISXNJSElnUFNCMFd5MHRiaUF0SURGZExDQmxJRDQ5SUhJcElHSnlaV0ZySUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNHNJRzRnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhheUJ1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF5QmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0RzZ2JpQThJRzg3S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHNGdLeUJ2SUQ0K1BpQXhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVZ1BDQjBXMkZkSUQ4Z2J5QTlJR0VnT2lCdUlEMGdZU0FySURFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0E5SUhSYmJsMHNJSElnUFNCMFcyNGdMU0F4WFN3Z2NpQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdkR2hwY3k1ZlkyRmphR1ZrU1c1a1pYZ2dQU0F3TENCMGFHbHpMbUpsWm05eVpWTjBZWEowWHlnd0xDQmxMQ0JwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJRDA5UFNCMmIybGtJREFwSUhKbGRIVnliaUJ1SUQwZ2RDNXNaVzVuZEdnc0lIUm9hWE11WDJOaFkyaGxaRWx1WkdWNElEMGdiaXdnZEdocGN5NWhablJsY2tWdVpGOG9iaUF0SURFc0lISXNJR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMk5oWTJobFpFbHVaR1Y0SUQwZ2Jpd2dkR2hwY3k1cGJuUmxjblpoYkVOb1lXNW5aV1JmS0c0c0lISXNJR2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBiblJsY25CdmJHRjBaVjhvYml3Z2Npd2daU3dnYVNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJUWlhSMGFXNW5jMThvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwZEdsdVozTWdmSHdnZEdocGN5NUVaV1poZFd4MFUyVjBkR2x1WjNOZk93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVZOaGJYQnNaVlpoYkhWbFh5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuSmxjM1ZzZEVKMVptWmxjaXdnYmlBOUlIUm9hWE11YzJGdGNHeGxWbUZzZFdWekxDQnBJRDBnZEdocGN5NTJZV3gxWlZOcGVtVXNJSElnUFNCbElDb2dhVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd095QnZJQ0U5UFNCcE95QXJLMjhwZEZ0dlhTQTlJRzViY2lBcklHOWRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSndiMnhoZEdWZktDa2dld29nSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lZMkZzYkNCMGJ5QmhZbk4wY21GamRDQnRaWFJvYjJRaUtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWRtRnNRMmhoYm1kbFpGOG9LU0I3ZlFwOU93cGpiaTV3Y205MGIzUjVjR1V1WW1WbWIzSmxVM1JoY25SZklEMGdZMjR1Y0hKdmRHOTBlWEJsTG1OdmNIbFRZVzF3YkdWV1lXeDFaVjg3Q21OdUxuQnliM1J2ZEhsd1pTNWhablJsY2tWdVpGOGdQU0JqYmk1d2NtOTBiM1I1Y0dVdVkyOXdlVk5oYlhCc1pWWmhiSFZsWHpzS2RtRnlJRkJvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJqYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBMQ0J1TENCcEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5M1pXbG5hSFJRY21WMklEMGdMVEFzSUhSb2FYTXVYMjltWm5ObGRGQnlaWFlnUFNBdE1Dd2dkR2hwY3k1ZmQyVnBaMmgwVG1WNGRDQTlJQzB3TENCMGFHbHpMbDl2Wm1aelpYUk9aWGgwSUQwZ0xUQXNJSFJvYVhNdVJHVm1ZWFZzZEZObGRIUnBibWR6WHlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1a2FXNW5VM1JoY25RNklFMXBMQW9nSUNBZ0lDQWdJQ0FnSUNCbGJtUnBibWRGYm1RNklFMXBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnlkbUZzUTJoaGJtZGxaRjhvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NXdZWEpoYldWMFpYSlFiM05wZEdsdmJuTXNJSElnUFNCbElDMGdNaXdnYnlBOUlHVWdLeUF4TENCaElEMGdhVnR5WFN3Z2JDQTlJR2xiYjEwN0NpQWdJQ0FnSUNBZ2FXWWdLR0VnUFQwOUlIWnZhV1FnTUNrZ2MzZHBkR05vS0hSb2FYTXVaMlYwVTJWMGRHbHVaM05mS0NrdVpXNWthVzVuVTNSaGNuUXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJR0pwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY2lBOUlHVXNJR0VnUFNBeUlDb2dkQ0F0SUc0N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JQY3pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhJZ1BTQnBMbXhsYm1kMGFDQXRJRElzSUdFZ1BTQjBJQ3NnYVZ0eVhTQXRJR2xiY2lBcklERmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlJRDBnWlN3Z1lTQTlJRzQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHNJRDA5UFNCMmIybGtJREFwSUhOM2FYUmphQ2gwYUdsekxtZGxkRk5sZEhScGJtZHpYeWdwTG1WdVpHbHVaMFZ1WkNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1ltazZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnWlN3Z2JDQTlJRElnS2lCdUlDMGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFOXpPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SURFc0lHd2dQU0J1SUNzZ2FWc3hYU0F0SUdsYk1GMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0JsSUMwZ01Td2diQ0E5SUhRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ0tHNGdMU0IwS1NBcUlDNDFMQ0JvSUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVU3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZkMlZwWjJoMFVISmxkaUE5SUdNZ0x5QW9kQ0F0SUdFcExDQjBhR2x6TGw5M1pXbG5hSFJPWlhoMElEMGdZeUF2SUNoc0lDMGdiaWtzSUhSb2FYTXVYMjltWm5ObGRGQnlaWFlnUFNCeUlDb2dhQ3dnZEdocGN5NWZiMlptYzJWMFRtVjRkQ0E5SUc4Z0tpQm9Pd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSndiMnhoZEdWZktHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNdWNtVnpkV3gwUW5WbVptVnlMQ0J2SUQwZ2RHaHBjeTV6WVcxd2JHVldZV3gxWlhNc0lHRWdQU0IwYUdsekxuWmhiSFZsVTJsNlpTd2diQ0E5SUdVZ0tpQmhMQ0JqSUQwZ2JDQXRJR0VzSUdnZ1BTQjBhR2x6TGw5dlptWnpaWFJRY21WMkxDQjFJRDBnZEdocGN5NWZiMlptYzJWMFRtVjRkQ3dnWkNBOUlIUm9hWE11WDNkbGFXZG9kRkJ5WlhZc0lHWWdQU0IwYUdsekxsOTNaV2xuYUhST1pYaDBMQ0J0SUQwZ0tHNGdMU0IwS1NBdklDaHBJQzBnZENrc0lIZ2dQU0J0SUNvZ2JTd2dkaUE5SUhnZ0tpQnRMQ0JuSUQwZ0xXUWdLaUIySUNzZ01pQXFJR1FnS2lCNElDMGdaQ0FxSUcwc0lIQWdQU0FvTVNBcklHUXBJQ29nZGlBcklDZ3RNUzQxSUMwZ01pQXFJR1FwSUNvZ2VDQXJJQ2d0TGpVZ0t5QmtLU0FxSUcwZ0t5QXhMQ0JmSUQwZ0tDMHhJQzBnWmlrZ0tpQjJJQ3NnS0RFdU5TQXJJR1lwSUNvZ2VDQXJJQzQxSUNvZ2JTd2dlU0E5SUdZZ0tpQjJJQzBnWmlBcUlIZzdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmlJRDBnTURzZ1lpQWhQVDBnWVRzZ0t5dGlLWEpiWWwwZ1BTQm5JQ29nYjF0b0lDc2dZbDBnS3lCd0lDb2diMXRqSUNzZ1lsMGdLeUJmSUNvZ2IxdHNJQ3NnWWwwZ0t5QjVJQ29nYjF0MUlDc2dZbDA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEk3Q2lBZ0lDQjlDbjBzSUU1aElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCamJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUxDQnBLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljRzlzWVhSbFh5aGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0IwYUdsekxuSmxjM1ZzZEVKMVptWmxjaXdnYnlBOUlIUm9hWE11YzJGdGNHeGxWbUZzZFdWekxDQmhJRDBnZEdocGN5NTJZV3gxWlZOcGVtVXNJR3dnUFNCbElDb2dZU3dnWXlBOUlHd2dMU0JoTENCb0lEMGdLRzRnTFNCMEtTQXZJQ2hwSUMwZ2RDa3NJSFVnUFNBeElDMGdhRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1FnUFNBd095QmtJQ0U5UFNCaE95QXJLMlFwY2x0a1hTQTlJRzliWXlBcklHUmRJQ29nZFNBcklHOWJiQ0FySUdSZElDb2dhRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjanNLSUNBZ0lIMEtmU3dnU1dnZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdOdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0c0lHa3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFzSUc0c0lHa3BPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSndiMnhoZEdWZktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amIzQjVVMkZ0Y0d4bFZtRnNkV1ZmS0dVZ0xTQXhLVHNLSUNBZ0lIMEtmU3dnZW5RZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcEtYc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBOVBUMGdkbTlwWkNBd0tTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lsUklVa1ZGTGt0bGVXWnlZVzFsVkhKaFkyczZJSFJ5WVdOcklHNWhiV1VnYVhNZ2RXNWtaV1pwYm1Wa0lpazdDaUFnSUNBZ0lDQWdhV1lnS0hRZ1BUMDlJSFp2YVdRZ01DQjhmQ0IwTG14bGJtZDBhQ0E5UFQwZ01Da2dkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSlVTRkpGUlM1TFpYbG1jbUZ0WlZSeVlXTnJPaUJ1YnlCclpYbG1jbUZ0WlhNZ2FXNGdkSEpoWTJzZ2JtRnRaV1FnSWlBcklHVXBPd29nSUNBZ0lDQWdJSFJvYVhNdWJtRnRaU0E5SUdVc0lIUm9hWE11ZEdsdFpYTWdQU0JhWlM1amIyNTJaWEowUVhKeVlYa29kQ3dnZEdocGN5NVVhVzFsUW5WbVptVnlWSGx3WlNrc0lIUm9hWE11ZG1Gc2RXVnpJRDBnV21VdVkyOXVkbVZ5ZEVGeWNtRjVLRzRzSUhSb2FYTXVWbUZzZFdWQ2RXWm1aWEpVZVhCbEtTd2dkR2hwY3k1elpYUkpiblJsY25CdmJHRjBhVzl1S0drZ2ZId2dkR2hwY3k1RVpXWmhkV3gwU1c1MFpYSndiMnhoZEdsdmJpazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdkRzlLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WTI5dWMzUnlkV04wYjNJc0lHNDdDaUFnSUNBZ0lDQWdhV1lnS0hRdWRHOUtVMDlPSUNFOVBTQjBhR2x6TG5SdlNsTlBUaWtnYmlBOUlIUXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J1SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nWlM1dVlXMWxMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2x0WlhNNklGcGxMbU52Ym5abGNuUkJjbkpoZVNobExuUnBiV1Z6TENCQmNuSmhlU2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpYTTZJRnBsTG1OdmJuWmxjblJCY25KaGVTaGxMblpoYkhWbGN5d2dRWEp5WVhrcENpQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNW5aWFJKYm5SbGNuQnZiR0YwYVc5dUtDazdDaUFnSUNBZ0lDQWdJQ0FnSUdrZ0lUMDlJR1V1UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0Z0ppWWdLRzR1YVc1MFpYSndiMnhoZEdsdmJpQTlJR2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1MGVYQmxJRDBnWlM1V1lXeDFaVlI1Y0dWT1lXMWxMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1NXNTBaWEp3YjJ4aGJuUkdZV04wYjNKNVRXVjBhRzlrUkdselkzSmxkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dTV2dvZEdocGN5NTBhVzFsY3l3Z2RHaHBjeTUyWVd4MVpYTXNJSFJvYVhNdVoyVjBWbUZzZFdWVGFYcGxLQ2tzSUdVcE93b2dJQ0FnZlFvZ0lDQWdTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1RHbHVaV0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRTVoS0hSb2FYTXVkR2x0WlhNc0lIUm9hWE11ZG1Gc2RXVnpMQ0IwYUdsekxtZGxkRlpoYkhWbFUybDZaU2dwTENCbEtUc0tJQ0FnSUgwS0lDQWdJRWx1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpGTnRiMjkwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJRYUNoMGFHbHpMblJwYldWekxDQjBhR2x6TG5aaGJIVmxjeXdnZEdocGN5NW5aWFJXWVd4MVpWTnBlbVVvS1N3Z1pTazdDaUFnSUNCOUNpQWdJQ0J6WlhSSmJuUmxjbkJ2YkdGMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkRHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZW5NNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMElEMGdkR2hwY3k1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJFYVhOamNtVjBaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGVnpPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhSb2FYTXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1RHbHVaV0Z5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdlVzg2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2RHaHBjeTVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUlRiVzl2ZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlDSjFibk4xY0hCdmNuUmxaQ0JwYm5SbGNuQnZiR0YwYVc5dUlHWnZjaUFpSUNzZ2RHaHBjeTVXWVd4MVpWUjVjR1ZPWVcxbElDc2dJaUJyWlhsbWNtRnRaU0IwY21GamF5QnVZVzFsWkNBaUlDc2dkR2hwY3k1dVlXMWxPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZENBOVBUMGdkbTlwWkNBd0tTQnBaaUFvWlNBaFBUMGdkR2hwY3k1RVpXWmhkV3gwU1c1MFpYSndiMnhoZEdsdmJpa2dkR2hwY3k1elpYUkpiblJsY25CdmJHRjBhVzl1S0hSb2FYTXVSR1ZtWVhWc2RFbHVkR1Z5Y0c5c1lYUnBiMjRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWh1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVTMlY1Wm5KaGJXVlVjbUZqYXpvaUxDQnVLU3dnZEdocGN6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTNKbFlYUmxTVzUwWlhKd2IyeGhiblFnUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBTVzUwWlhKd2IyeGhkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb2RHaHBjeTVqY21WaGRHVkpiblJsY25CdmJHRnVkQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZEdocGN5NUpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSRWFYTmpjbVYwWlRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUI2Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCMGFHbHpMa2x1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpFeHBibVZoY2pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJWY3pzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCMGFHbHpMa2x1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpGTnRiMjkwYURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUI1YnpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm5aWFJXWVd4MVpWTnBlbVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkbUZzZFdWekxteGxibWQwYUNBdklIUm9hWE11ZEdsdFpYTXViR1Z1WjNSb093b2dJQ0FnZlFvZ0lDQWdjMmhwWm5Rb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1MGFXMWxjenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlIUXViR1Z1WjNSb095QnVJQ0U5UFNCcE95QXJLMjRwZEZ0dVhTQXJQU0JsT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5qWVd4bEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQWhQVDBnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWRHbHRaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUFoUFQwZ2FUc2dLeXR1S1hSYmJsMGdLajBnWlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwY21sdEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVkR2x0WlhNc0lHa2dQU0J1TG14bGJtZDBhQ3dnY2lBOUlEQXNJRzhnUFNCcElDMGdNVHNLSUNBZ0lDQWdJQ0JtYjNJb095QnlJQ0U5UFNCcElDWW1JRzViY2wwZ1BDQmxPeWtySzNJN0NpQWdJQ0FnSUNBZ1ptOXlLRHNnYnlBaFBUMGdMVEVnSmlZZ2JsdHZYU0ErSUhRN0tTMHRienNLSUNBZ0lDQWdJQ0JwWmlBb0t5dHZMQ0J5SUNFOVBTQXdJSHg4SUc4Z0lUMDlJR2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjaUErUFNCdklDWW1JQ2h2SUQwZ1RXRjBhQzV0WVhnb2J5d2dNU2tzSUhJZ1BTQnZJQzBnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdkR2hwY3k1blpYUldZV3gxWlZOcGVtVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwYVcxbGN5QTlJRnBsTG1GeWNtRjVVMnhwWTJVb2Jpd2djaXdnYnlrc0lIUm9hWE11ZG1Gc2RXVnpJRDBnV21VdVlYSnlZWGxUYkdsalpTaDBhR2x6TG5aaGJIVmxjeXdnY2lBcUlHRXNJRzhnS2lCaEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMllXeHBaR0YwWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlDRXdMQ0IwSUQwZ2RHaHBjeTVuWlhSV1lXeDFaVk5wZW1Vb0tUc0tJQ0FnSUNBZ0lDQjBJQzBnVFdGMGFDNW1iRzl2Y2loMEtTQWhQVDBnTUNBbUppQW9ZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dTVzUyWVd4cFpDQjJZV3gxWlNCemFYcGxJR2x1SUhSeVlXTnJMaUlzSUhSb2FYTXBMQ0JsSUQwZ0lURXBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1MGFXMWxjeXdnYVNBOUlIUm9hWE11ZG1Gc2RXVnpMQ0J5SUQwZ2JpNXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ2NpQTlQVDBnTUNBbUppQW9ZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dWSEpoWTJzZ2FYTWdaVzF3ZEhrdUlpd2dkR2hwY3lrc0lHVWdQU0FoTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCdWRXeHNPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBN0lHRWdJVDA5SUhJN0lHRXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2JsdGhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQnNJRDA5SUNKdWRXMWlaWElpSUNZbUlHbHpUbUZPS0d3cEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVMWlhsbWNtRnRaVlJ5WVdOck9pQlVhVzFsSUdseklHNXZkQ0JoSUhaaGJHbGtJRzUxYldKbGNpNGlMQ0IwYUdsekxDQmhMQ0JzS1N3Z1pTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c4Z0lUMDlJRzUxYkd3Z0ppWWdieUErSUd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa3RsZVdaeVlXMWxWSEpoWTJzNklFOTFkQ0J2WmlCdmNtUmxjaUJyWlhsekxpSXNJSFJvYVhNc0lHRXNJR3dzSUc4cExDQmxJRDBnSVRFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJSFp2YVdRZ01DQW1KaUJhWlM1cGMxUjVjR1ZrUVhKeVlYa29hU2twSUdadmNpaHNaWFFnWVNBOUlEQXNJR3dnUFNCcExteGxibWQwYURzZ1lTQWhQVDBnYkRzZ0t5dGhLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCcFcyRmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWE5PWVU0b1l5a3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGt0bGVXWnlZVzFsVkhKaFkyczZJRlpoYkhWbElHbHpJRzV2ZENCaElIWmhiR2xrSUc1MWJXSmxjaTRpTENCMGFHbHpMQ0JoTENCaktTd2daU0E5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVTdDaUFnSUNCOUNpQWdJQ0J2Y0hScGJXbDZaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUZwbExtRnljbUY1VTJ4cFkyVW9kR2hwY3k1MGFXMWxjeWtzSUhRZ1BTQmFaUzVoY25KaGVWTnNhV05sS0hSb2FYTXVkbUZzZFdWektTd2diaUE5SUhSb2FYTXVaMlYwVm1Gc2RXVlRhWHBsS0Nrc0lHa2dQU0IwYUdsekxtZGxkRWx1ZEdWeWNHOXNZWFJwYjI0b0tTQTlQVDBnZVc4c0lISWdQU0JsTG14bGJtZDBhQ0F0SURFc0lHOGdQU0F4T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlERTdJR0VnUENCeU95QXJLMkVwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlDRXhMQ0JqSUQwZ1pWdGhYU3dnYUNBOUlHVmJZU0FySURGZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1l5QWhQVDBnYUNBbUppQW9ZU0FoUFQwZ01TQjhmQ0JqSUNFOVBTQmxXekJkS1NrZ2FXWWdLR2twSUd3Z1BTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR0VnS2lCdUxDQmtJRDBnZFNBdElHNHNJR1lnUFNCMUlDc2dianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SURBN0lHMGdJVDA5SUc0N0lDc3JiU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCMFczVWdLeUJ0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZUNBaFBUMGdkRnRrSUNzZ2JWMGdmSHdnZUNBaFBUMGdkRnRtSUNzZ2JWMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiQ0E5SUNFd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhJQ0U5UFNCdktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlZ0dlhTQTlJR1ZiWVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQmhJQ29nYml3Z1pDQTlJRzhnS2lCdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaaUE5SURBN0lHWWdJVDA5SUc0N0lDc3JaaWwwVzJRZ0t5Qm1YU0E5SUhSYmRTQXJJR1pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS3l0dk93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHlJRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsVzI5ZElEMGdaVnR5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmhJRDBnY2lBcUlHNHNJR3dnUFNCdklDb2diaXdnWXlBOUlEQTdJR01nSVQwOUlHNDdJQ3NyWXlsMFcyd2dLeUJqWFNBOUlIUmJZU0FySUdOZE93b2dJQ0FnSUNBZ0lDQWdJQ0FySzI4N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdklDRTlQU0JsTG14bGJtZDBhQ0EvSUNoMGFHbHpMblJwYldWeklEMGdXbVV1WVhKeVlYbFRiR2xqWlNobExDQXdMQ0J2S1N3Z2RHaHBjeTUyWVd4MVpYTWdQU0JhWlM1aGNuSmhlVk5zYVdObEtIUXNJREFzSUc4Z0tpQnVLU2tnT2lBb2RHaHBjeTUwYVcxbGN5QTlJR1VzSUhSb2FYTXVkbUZzZFdWeklEMGdkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJRnBsTG1GeWNtRjVVMnhwWTJVb2RHaHBjeTUwYVcxbGN5d2dNQ2tzSUhRZ1BTQmFaUzVoY25KaGVWTnNhV05sS0hSb2FYTXVkbUZzZFdWekxDQXdLU3dnYmlBOUlIUm9hWE11WTI5dWMzUnlkV04wYjNJc0lHa2dQU0J1WlhjZ2JpaDBhR2x6TG01aGJXVXNJR1VzSUhRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcExtTnlaV0YwWlVsdWRHVnljRzlzWVc1MElEMGdkR2hwY3k1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZEN3Z2FUc0tJQ0FnSUgwS2ZUc0tlblF1Y0hKdmRHOTBlWEJsTGxScGJXVkNkV1ptWlhKVWVYQmxJRDBnUm14dllYUXpNa0Z5Y21GNU93cDZkQzV3Y205MGIzUjVjR1V1Vm1Gc2RXVkNkV1ptWlhKVWVYQmxJRDBnUm14dllYUXpNa0Z5Y21GNU93cDZkQzV3Y205MGIzUjVjR1V1UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0Z1BTQlZjenNLZG1GeUlGRnVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjZkQ0I3Q24wN0NsRnVMbkJ5YjNSdmRIbHdaUzVXWVd4MVpWUjVjR1ZPWVcxbElEMGdJbUp2YjJ3aU93cFJiaTV3Y205MGIzUjVjR1V1Vm1Gc2RXVkNkV1ptWlhKVWVYQmxJRDBnUVhKeVlYazdDbEZ1TG5CeWIzUnZkSGx3WlM1RVpXWmhkV3gwU1c1MFpYSndiMnhoZEdsdmJpQTlJSHB6T3dwUmJpNXdjbTkwYjNSNWNHVXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1RHbHVaV0Z5SUQwZ2RtOXBaQ0F3T3dwUmJpNXdjbTkwYjNSNWNHVXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1UyMXZiM1JvSUQwZ2RtOXBaQ0F3T3dwMllYSWdRbUVnUFNCamJHRnpjeUJsZUhSbGJtUnpJSHAwSUhzS2ZUc0tRbUV1Y0hKdmRHOTBlWEJsTGxaaGJIVmxWSGx3WlU1aGJXVWdQU0FpWTI5c2IzSWlPd3AyWVhJZ1FYSWdQU0JqYkdGemN5QmxlSFJsYm1SeklIcDBJSHNLZlRzS1FYSXVjSEp2ZEc5MGVYQmxMbFpoYkhWbFZIbHdaVTVoYldVZ1BTQWliblZ0WW1WeUlqc0tkbUZ5SUVSb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCamJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUxDQnBLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljRzlzWVhSbFh5aGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0IwYUdsekxuSmxjM1ZzZEVKMVptWmxjaXdnYnlBOUlIUm9hWE11YzJGdGNHeGxWbUZzZFdWekxDQmhJRDBnZEdocGN5NTJZV3gxWlZOcGVtVXNJR3dnUFNBb2JpQXRJSFFwSUM4Z0tHa2dMU0IwS1N3Z1l5QTlJR1VnS2lCaE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJR01nS3lCaE95QmpJQ0U5UFNCb095QmpJQ3M5SURRcFozUXVjMnhsY25CR2JHRjBLSElzSURBc0lHOHNJR01nTFNCaExDQnZMQ0JqTENCc0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2Nqc0tJQ0FnSUgwS2ZTd2dWMmtnUFNCamJHRnpjeUJsZUhSbGJtUnpJSHAwSUhzS0lDQWdJRWx1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpFeHBibVZoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJFYUNoMGFHbHpMblJwYldWekxDQjBhR2x6TG5aaGJIVmxjeXdnZEdocGN5NW5aWFJXWVd4MVpWTnBlbVVvS1N3Z1pTazdDaUFnSUNCOUNuMDdDbGRwTG5CeWIzUnZkSGx3WlM1V1lXeDFaVlI1Y0dWT1lXMWxJRDBnSW5GMVlYUmxjbTVwYjI0aU93cFhhUzV3Y205MGIzUjVjR1V1UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0Z1BTQlZjenNLVjJrdWNISnZkRzkwZVhCbExrbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkZOdGIyOTBhQ0E5SUhadmFXUWdNRHNLZG1GeUlFdHVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjZkQ0I3Q24wN0NrdHVMbkJ5YjNSdmRIbHdaUzVXWVd4MVpWUjVjR1ZPWVcxbElEMGdJbk4wY21sdVp5STdDa3R1TG5CeWIzUnZkSGx3WlM1V1lXeDFaVUoxWm1abGNsUjVjR1VnUFNCQmNuSmhlVHNLUzI0dWNISnZkRzkwZVhCbExrUmxabUYxYkhSSmJuUmxjbkJ2YkdGMGFXOXVJRDBnZW5NN0NrdHVMbkJ5YjNSdmRIbHdaUzVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUk1hVzVsWVhJZ1BTQjJiMmxrSURBN0NrdHVMbkJ5YjNSdmRIbHdaUzVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUlRiVzl2ZEdnZ1BTQjJiMmxrSURBN0NuWmhjaUJEY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nZW5RZ2V3cDlPd3BEY2k1d2NtOTBiM1I1Y0dVdVZtRnNkV1ZVZVhCbFRtRnRaU0E5SUNKMlpXTjBiM0lpT3dwMllYSWdUSElnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMElEMGdMVEVzSUc0c0lHa2dQU0IxWVNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTV1WVcxbElEMGdaU3dnZEdocGN5NTBjbUZqYTNNZ1BTQnVMQ0IwYUdsekxtUjFjbUYwYVc5dUlEMGdkQ3dnZEdocGN5NWliR1Z1WkUxdlpHVWdQU0JwTENCMGFHbHpMblYxYVdRZ1BTQkZkQ2dwTENCMGFHbHpMbVIxY21GMGFXOXVJRHdnTUNBbUppQjBhR2x6TG5KbGMyVjBSSFZ5WVhScGIyNG9LVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJ3WVhKelpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JiWFN3Z2JpQTlJR1V1ZEhKaFkydHpMQ0JwSUQwZ01TQXZJQ2hsTG1ad2N5QjhmQ0F4S1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdMQ0JoSUQwZ2JpNXNaVzVuZEdnN0lHOGdJVDA5SUdFN0lDc3JieWwwTG5CMWMyZ29ZWGtvYmx0dlhTa3VjMk5oYkdVb2FTa3BPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdibVYzSUhSb2FYTW9aUzV1WVcxbExDQmxMbVIxY21GMGFXOXVMQ0IwTENCbExtSnNaVzVrVFc5a1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISXVkWFZwWkNBOUlHVXVkWFZwWkN3Z2Nqc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdXMTBzSUc0Z1BTQmxMblJ5WVdOcmN5d2dhU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ1pTNXVZVzFsTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtkWEpoZEdsdmJqb2daUzVrZFhKaGRHbHZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RISmhZMnR6T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0IxZFdsa09pQmxMblYxYVdRc0NpQWdJQ0FnSUNBZ0lDQWdJR0pzWlc1a1RXOWtaVG9nWlM1aWJHVnVaRTF2WkdVS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQnVMbXhsYm1kMGFEc2djaUFoUFQwZ2J6c2dLeXR5S1hRdWNIVnphQ2g2ZEM1MGIwcFRUMDRvYmx0eVhTa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJRU55WldGMFpVWnliMjFOYjNKd2FGUmhjbWRsZEZObGNYVmxibU5sS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUXViR1Z1WjNSb0xDQnZJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaElEMGdNRHNnWVNBOElISTdJR0VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdXMTBzSUdNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JDNXdkWE5vS0NoaElDc2djaUF0SURFcElDVWdjaXdnWVN3Z0tHRWdLeUF4S1NBbElISXBMQ0JqTG5CMWMyZ29NQ3dnTVN3Z01DazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnV21VdVoyVjBTMlY1Wm5KaGJXVlBjbVJsY2loc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkNBOUlGcGxMbk52Y25SbFpFRnljbUY1S0d3c0lERXNJR2dwTENCaklEMGdXbVV1YzI5eWRHVmtRWEp5WVhrb1l5d2dNU3dnYUNrc0lDRnBJQ1ltSUd4Yk1GMGdQVDA5SURBZ0ppWWdLR3d1Y0hWemFDaHlLU3dnWXk1d2RYTm9LR05iTUYwcEtTd2dieTV3ZFhOb0tHNWxkeUJCY2lnaUxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNpSUNzZ2RGdGhYUzV1WVcxbElDc2dJbDBpTENCc0xDQmpLUzV6WTJGc1pTZ3hJQzhnYmlrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNb1pTd2dMVEVzSUc4cE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnBibVJDZVU1aGJXVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pUc0tJQ0FnSUNBZ0lDQnBaaUFvSVVGeWNtRjVMbWx6UVhKeVlYa29aU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQmxPd29nSUNBZ0lDQWdJQ0FnSUNCdUlEMGdhUzVuWlc5dFpYUnllU0FtSmlCcExtZGxiMjFsZEhKNUxtRnVhVzFoZEdsdmJuTWdmSHdnYVM1aGJtbHRZWFJwYjI1ek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3T3lCcElEd2diaTVzWlc1bmRHZzdJR2tyS3lscFppQW9ibHRwWFM1dVlXMWxJRDA5UFNCMEtTQnlaWFIxY200Z2JsdHBYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCRGNtVmhkR1ZEYkdsd2MwWnliMjFOYjNKd2FGUmhjbWRsZEZObGNYVmxibU5sY3lobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCN2ZTd2djaUE5SUM5ZUtGdGNkeTFkS2o4cEtGdGNaRjByS1NRdk93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJREFzSUd3Z1BTQmxMbXhsYm1kMGFEc2dZU0E4SUd3N0lHRXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ1pWdGhYU3dnYUNBOUlHTXVibUZ0WlM1dFlYUmphQ2h5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dnZ0ppWWdhQzVzWlc1bmRHZ2dQaUF4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUdoYk1WMHNJR1FnUFNCcFczVmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaQ0I4ZkNBb2FWdDFYU0E5SUdRZ1BTQmJYU2tzSUdRdWNIVnphQ2hqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNCcGJpQnBLVzh1Y0hWemFDaDBhR2x6TGtOeVpXRjBaVVp5YjIxTmIzSndhRlJoY21kbGRGTmxjWFZsYm1ObEtHRXNJR2xiWVYwc0lIUXNJRzRwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYnpzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCd1lYSnpaVUZ1YVcxaGRHbHZiaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0NGbEtTQnlaWFIxY200Z1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVRVzVwYldGMGFXOXVRMnhwY0RvZ1RtOGdZVzVwYldGMGFXOXVJR2x1SUVwVFQwNU1iMkZrWlhJZ1pHRjBZUzRpS1N3Z2JuVnNiRHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1oxYm1OMGFXOXVLSFVzSUdRc0lHWXNJRzBzSUhncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHWXViR1Z1WjNSb0lDRTlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUZ0ZExDQm5JRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCYVpTNW1iR0YwZEdWdVNsTlBUaWhtTENCMkxDQm5MQ0J0S1N3Z2RpNXNaVzVuZEdnZ0lUMDlJREFnSmlZZ2VDNXdkWE5vS0c1bGR5QjFLR1FzSUhZc0lHY3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNJR2tnUFNCYlhTd2djaUE5SUdVdWJtRnRaU0I4ZkNBaVpHVm1ZWFZzZENJc0lHOGdQU0JsTG1ad2N5QjhmQ0F6TUN3Z1lTQTlJR1V1WW14bGJtUk5iMlJsTENCc0lEMGdaUzVzWlc1bmRHZ2dmSHdnTFRFc0lHTWdQU0JsTG1ocFpYSmhjbU5vZVNCOGZDQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd095QjFJRHdnWXk1c1pXNW5kR2c3SUhVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWTF0MVhTNXJaWGx6T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVNnaFpDQjhmQ0JrTG14bGJtZDBhQ0E5UFQwZ01Da3BJR2xtSUNoa1d6QmRMbTF2Y25Cb1ZHRnlaMlYwY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCN2ZTd2diVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lodElEMGdNRHNnYlNBOElHUXViR1Z1WjNSb095QnRLeXNwYVdZZ0tHUmJiVjB1Ylc5eWNHaFVZWEpuWlhSektTQm1iM0lvYkdWMElIZ2dQU0F3T3lCNElEd2daRnR0WFM1dGIzSndhRlJoY21kbGRITXViR1Z1WjNSb095QjRLeXNwWmx0a1cyMWRMbTF2Y25Cb1ZHRnlaMlYwYzF0NFhWMGdQU0F0TVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZUNCcGJpQm1LWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUZ0ZExDQm5JRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQndJRDBnTURzZ2NDQWhQVDBnWkZ0dFhTNXRiM0p3YUZSaGNtZGxkSE11YkdWdVozUm9PeUFySzNBcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUdSYmJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWXVjSFZ6YUNoZkxuUnBiV1VwTENCbkxuQjFjMmdvWHk1dGIzSndhRlJoY21kbGRDQTlQVDBnZUNBL0lERWdPaUF3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1d2RYTm9LRzVsZHlCQmNpZ2lMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sV3lJZ0t5QjRJQ3NnSWwwaUxDQjJMQ0JuS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc0lEMGdaaTVzWlc1bmRHZ2dLaUFvYnlCOGZDQXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnSWk1aWIyNWxjMXNpSUNzZ2RGdDFYUzV1WVcxbElDc2dJbDBpT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmloRGNpd2daaUFySUNJdWNHOXphWFJwYjI0aUxDQmtMQ0FpY0c5eklpd2dhU2tzSUc0b1Yya3NJR1lnS3lBaUxuRjFZWFJsY201cGIyNGlMQ0JrTENBaWNtOTBJaXdnYVNrc0lHNG9RM0lzSUdZZ0t5QWlMbk5qWVd4bElpd2daQ3dnSW5OamJDSXNJR2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnBMbXhsYm1kMGFDQTlQVDBnTUNBL0lHNTFiR3dnT2lCdVpYY2dkR2hwY3loeUxDQnNMQ0JwTENCaEtUc0tJQ0FnSUgwS0lDQWdJSEpsYzJWMFJIVnlZWFJwYjI0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG5SeVlXTnJjeXdnZENBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJR1V1YkdWdVozUm9PeUJ1SUNFOVBTQnBPeUFySzI0cGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNdWRISmhZMnR6VzI1ZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ1RXRjBhQzV0WVhnb2RDd2djaTUwYVcxbGMxdHlMblJwYldWekxteGxibWQwYUNBdElERmRLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpIVnlZWFJwYjI0Z1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkSEpwYlNncElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHVWdQU0F3T3lCbElEd2dkR2hwY3k1MGNtRmphM011YkdWdVozUm9PeUJsS3lzcGRHaHBjeTUwY21GamEzTmJaVjB1ZEhKcGJTZ3dMQ0IwYUdsekxtUjFjbUYwYVc5dUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhaaGJHbGtZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ0lUQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTURzZ2RDQThJSFJvYVhNdWRISmhZMnR6TG14bGJtZDBhRHNnZENzcktXVWdQU0JsSUNZbUlIUm9hWE11ZEhKaFkydHpXM1JkTG5aaGJHbGtZWFJsS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVN0NpQWdJQ0I5Q2lBZ0lDQnZjSFJwYldsNlpTZ3BJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBd095QmxJRHdnZEdocGN5NTBjbUZqYTNNdWJHVnVaM1JvT3lCbEt5c3BkR2hwY3k1MGNtRmphM05iWlYwdWIzQjBhVzFwZW1Vb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNRHNnZENBOElIUm9hWE11ZEhKaFkydHpMbXhsYm1kMGFEc2dkQ3NyS1dVdWNIVnphQ2gwYUdsekxuUnlZV05yYzF0MFhTNWpiRzl1WlNncEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9kR2hwY3k1dVlXMWxMQ0IwYUdsekxtUjFjbUYwYVc5dUxDQmxMQ0IwYUdsekxtSnNaVzVrVFc5a1pTazdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSXVkRzlLVTA5T0tIUm9hWE1wT3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCdmVTaHpLU0I3Q2lBZ0lDQnpkMmwwWTJnb2N5NTBiMHh2ZDJWeVEyRnpaU2dwS1hzS0lDQWdJQ0FnSUNCallYTmxJQ0p6WTJGc1lYSWlPZ29nSUNBZ0lDQWdJR05oYzJVZ0ltUnZkV0pzWlNJNkNpQWdJQ0FnSUNBZ1kyRnpaU0FpWm14dllYUWlPZ29nSUNBZ0lDQWdJR05oYzJVZ0ltNTFiV0psY2lJNkNpQWdJQ0FnSUNBZ1kyRnpaU0FpYVc1MFpXZGxjaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCQmNqc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKMlpXTjBiM0lpT2dvZ0lDQWdJQ0FnSUdOaGMyVWdJblpsWTNSdmNqSWlPZ29nSUNBZ0lDQWdJR05oYzJVZ0luWmxZM1J2Y2pNaU9nb2dJQ0FnSUNBZ0lHTmhjMlVnSW5abFkzUnZjalFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1EzSTdDaUFnSUNBZ0lDQWdZMkZ6WlNBaVkyOXNiM0lpT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1FtRTdDaUFnSUNBZ0lDQWdZMkZ6WlNBaWNYVmhkR1Z5Ym1sdmJpSTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJYYVRzS0lDQWdJQ0FnSUNCallYTmxJQ0ppYjI5c0lqb0tJQ0FnSUNBZ0lDQmpZWE5sSUNKaWIyOXNaV0Z1SWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGRnVPd29nSUNBZ0lDQWdJR05oYzJVZ0luTjBjbWx1WnlJNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkxianNLSUNBZ0lIMEtJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVkVoU1JVVXVTMlY1Wm5KaGJXVlVjbUZqYXpvZ1ZXNXpkWEJ3YjNKMFpXUWdkSGx3WlU1aGJXVTZJQ0lnS3lCektUc0tmUXBtZFc1amRHbHZiaUJoZVNoektTQjdDaUFnSUNCcFppQW9jeTUwZVhCbElEMDlQU0IyYjJsa0lEQXBJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lWRWhTUlVVdVMyVjVabkpoYldWVWNtRmphem9nZEhKaFkyc2dkSGx3WlNCMWJtUmxabWx1WldRc0lHTmhiaUJ1YjNRZ2NHRnljMlVpS1RzS0lDQWdJR3hsZENCbElEMGdiM2tvY3k1MGVYQmxLVHNLSUNBZ0lHbG1JQ2h6TG5ScGJXVnpJRDA5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZExDQnVJRDBnVzEwN0NpQWdJQ0FnSUNBZ1dtVXVabXhoZEhSbGJrcFRUMDRvY3k1clpYbHpMQ0IwTENCdUxDQWlkbUZzZFdVaUtTd2djeTUwYVcxbGN5QTlJSFFzSUhNdWRtRnNkV1Z6SUQwZ2Jqc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQmxMbkJoY25ObElDRTlQU0IyYjJsa0lEQWdQeUJsTG5CaGNuTmxLSE1wSURvZ2JtVjNJR1VvY3k1dVlXMWxMQ0J6TG5ScGJXVnpMQ0J6TG5aaGJIVmxjeXdnY3k1cGJuUmxjbkJ2YkdGMGFXOXVLVHNLZlFwMllYSWdUbWtnUFNCN0NpQWdJQ0JsYm1GaWJHVmtPaUFoTVN3S0lDQWdJR1pwYkdWek9pQjdmU3dLSUNBZ0lHRmtaRG9nWm5WdVkzUnBiMjRvY3l3Z1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdVpXNWhZbXhsWkNBaFBUMGdJVEVnSmlZZ0tIUm9hWE11Wm1sc1pYTmJjMTBnUFNCbEtUc0tJQ0FnSUgwc0NpQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVsYm1GaWJHVmtJQ0U5UFNBaE1Ta2djbVYwZFhKdUlIUm9hWE11Wm1sc1pYTmJjMTA3Q2lBZ0lDQjlMQW9nSUNBZ2NtVnRiM1psT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdaR1ZzWlhSbElIUm9hWE11Wm1sc1pYTmJjMTA3Q2lBZ0lDQjlMQW9nSUNBZ1kyeGxZWEk2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Wm1sc1pYTWdQU0I3ZlRzS0lDQWdJSDBLZlN3Z2VtRWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE1zSUhJZ1BTQWhNU3dnYnlBOUlEQXNJR0VnUFNBd0xDQnNMQ0JqSUQwZ1cxMDdDaUFnSUNBZ0lDQWdkR2hwY3k1dmJsTjBZWEowSUQwZ2RtOXBaQ0F3TENCMGFHbHpMbTl1VEc5aFpDQTlJR1VzSUhSb2FYTXViMjVRY205bmNtVnpjeUE5SUhRc0lIUm9hWE11YjI1RmNuSnZjaUE5SUc0c0lIUm9hWE11YVhSbGJWTjBZWEowSUQwZ1puVnVZM1JwYjI0b2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNCaEt5c3NJSElnUFQwOUlDRXhJQ1ltSUdrdWIyNVRkR0Z5ZENBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YjI1VGRHRnlkQ2hvTENCdkxDQmhLU3dnY2lBOUlDRXdPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVhWFJsYlVWdVpDQTlJR1oxYm1OMGFXOXVLR2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdieXNyTENCcExtOXVVSEp2WjNKbGMzTWdJVDA5SUhadmFXUWdNQ0FtSmlCcExtOXVVSEp2WjNKbGMzTW9hQ3dnYnl3Z1lTa3NJRzhnUFQwOUlHRWdKaVlnS0hJZ1BTQWhNU3dnYVM1dmJreHZZV1FnSVQwOUlIWnZhV1FnTUNBbUppQnBMbTl1VEc5aFpDZ3BLVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbWwwWlcxRmNuSnZjaUE5SUdaMWJtTjBhVzl1S0dncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVM1dmJrVnljbTl5SUNFOVBTQjJiMmxrSURBZ0ppWWdhUzV2YmtWeWNtOXlLR2dwT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11Y21WemIyeDJaVlZTVENBOUlHWjFibU4wYVc5dUtHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUd3Z1B5QnNLR2dwSURvZ2FEc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuTmxkRlZTVEUxdlpHbG1hV1Z5SUQwZ1puVnVZM1JwYjI0b2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkNBOUlHZ3NJSFJvYVhNN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1aFpHUklZVzVrYkdWeUlEMGdablZ1WTNScGIyNG9hQ3dnZFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZeTV3ZFhOb0tHZ3NJSFVwTENCMGFHbHpPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVjbVZ0YjNabFNHRnVaR3hsY2lBOUlHWjFibU4wYVc5dUtHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCakxtbHVaR1Y0VDJZb2FDazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIxSUNFOVBTQXRNU0FtSmlCakxuTndiR2xqWlNoMUxDQXlLU3dnZEdocGN6c0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtZGxkRWhoYm1Sc1pYSWdQU0JtZFc1amRHbHZiaWhvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkU0E5SURBc0lHUWdQU0JqTG14bGJtZDBhRHNnZFNBOElHUTdJSFVnS3owZ01pbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlHTmJkVjBzSUcwZ1BTQmpXM1VnS3lBeFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2htTG1kc2IySmhiQ0FtSmlBb1ppNXNZWE4wU1c1a1pYZ2dQU0F3S1N3Z1ppNTBaWE4wS0dncEtTQnlaWFIxY200Z2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUXA5TENCc2VTQTlJRzVsZHlCNllTd2dZblFnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoYm1GblpYSWdQU0JsSUNFOVBTQjJiMmxrSURBZ1B5QmxJRG9nYkhrc0lIUm9hWE11WTNKdmMzTlBjbWxuYVc0Z1BTQWlZVzV2Ym5sdGIzVnpJaXdnZEdocGN5NTNhWFJvUTNKbFpHVnVkR2xoYkhNZ1BTQWhNU3dnZEdocGN5NXdZWFJvSUQwZ0lpSXNJSFJvYVhNdWNtVnpiM1Z5WTJWUVlYUm9JRDBnSWlJc0lIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpQTlJSHQ5T3dvZ0lDQWdmUW9nSUNBZ2JHOWhaQ2dwSUh0OUNpQWdJQ0JzYjJGa1FYTjVibU1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lGQnliMjFwYzJVb1puVnVZM1JwYjI0b2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnVMbXh2WVdRb1pTd2dhU3dnZEN3Z2NpazdDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaU2dwSUh0OUNpQWdJQ0J6WlhSRGNtOXpjMDl5YVdkcGJpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzSnZjM05QY21sbmFXNGdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFYybDBhRU55WldSbGJuUnBZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUzYVhSb1EzSmxaR1Z1ZEdsaGJITWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVHRjBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR0YwYUNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJTWlhOdmRYSmpaVkJoZEdnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KbGMyOTFjbU5sVUdGMGFDQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSU1pYRjFaWE4wU0dWaFpHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlaWEYxWlhOMFNHVmhaR1Z5SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z2RHNGdQU0I3ZlN3Z1dYUWdQU0JqYkdGemN5QmxlSFJsYm1SeklHSjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VwT3dvZ0lDQWdmUW9nSUNBZ2JHOWhaQ2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ1pTQTlQVDBnZG05cFpDQXdJQ1ltSUNobElEMGdJaUlwTENCMGFHbHpMbkJoZEdnZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWlNBOUlIUm9hWE11Y0dGMGFDQXJJR1VwTENCbElEMGdkR2hwY3k1dFlXNWhaMlZ5TG5KbGMyOXNkbVZWVWt3b1pTazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQk9hUzVuWlhRb1pTazdDaUFnSUNBZ0lDQWdhV1lnS0hJZ0lUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlIUm9hWE11YldGdVlXZGxjaTVwZEdWdFUzUmhjblFvWlNrc0lITmxkRlJwYldWdmRYUW9LQ2s5UG5zS0lDQWdJQ0FnSUNBZ0lDQWdkQ0FtSmlCMEtISXBMQ0IwYUdsekxtMWhibUZuWlhJdWFYUmxiVVZ1WkNobEtUc0tJQ0FnSUNBZ0lDQjlMQ0F3S1N3Z2Nqc0tJQ0FnSUNBZ0lDQnBaaUFvZEc1YlpWMGdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBibHRsWFM1d2RYTm9LSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzl1VEc5aFpEb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzl1VUhKdlozSmxjM002SUc0c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmJrVnljbTl5T2lCcENpQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUnVXMlZkSUQwZ1cxMHNJSFJ1VzJWZExuQjFjMmdvZXdvZ0lDQWdJQ0FnSUNBZ0lDQnZia3h2WVdRNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUc5dVVISnZaM0psYzNNNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUc5dVJYSnliM0k2SUdrS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHNWxkeUJTWlhGMVpYTjBLR1VzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhR1ZoWkdWeWN6b2dibVYzSUVobFlXUmxjbk1vZEdocGN5NXlaWEYxWlhOMFNHVmhaR1Z5S1N3S0lDQWdJQ0FnSUNBZ0lDQWdZM0psWkdWdWRHbGhiSE02SUhSb2FYTXVkMmwwYUVOeVpXUmxiblJwWVd4eklEOGdJbWx1WTJ4MVpHVWlJRG9nSW5OaGJXVXRiM0pwWjJsdUlnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR1psZEdOb0tHOHBMblJvWlc0b0tHRXBQVDU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoTG5OMFlYUjFjeUE5UFQwZ01qQXdJSHg4SUdFdWMzUmhkSFZ6SUQwOVBTQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1lTNXpkR0YwZFhNZ1BUMDlJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUdhV3hsVEc5aFpHVnlPaUJJVkZSUUlGTjBZWFIxY3lBd0lISmxZMlZwZG1Wa0xpSXBMQ0IwZVhCbGIyWWdVbVZoWkdGaWJHVlRkSEpsWVcwZ1BpQWlkU0lnZkh3Z1lTNWliMlI1TG1kbGRGSmxZV1JsY2lBOVBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z1lUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2RHNWJaVjBzSUdNZ1BTQmhMbUp2WkhrdVoyVjBVbVZoWkdWeUtDa3NJR2dnUFNCaExtaGxZV1JsY25NdVoyVjBLQ0pEYjI1MFpXNTBMVXhsYm1kMGFDSXBMQ0IxSUQwZ2FDQS9JSEJoY25ObFNXNTBLR2dwSURvZ01Dd2daQ0E5SUhVZ0lUMDlJREFzSUdZZ1BTQXdMQ0J0SUQwZ2JtVjNJRkpsWVdSaFlteGxVM1J5WldGdEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWRDQW9lQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhZb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqTG5KbFlXUW9LUzUwYUdWdUtDaDdJR1J2Ym1VNklHY2dMQ0IyWVd4MVpUb2djQ0FnZlNrOVBuc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aeWtnZUM1amJHOXpaU2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1JQ3M5SUhBdVlubDBaVXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQnVaWGNnVUhKdlozSmxjM05GZG1WdWRDZ2ljSEp2WjNKbGMzTWlMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaVzVuZEdoRGIyMXdkWFJoWW14bE9pQmtMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHOWhaR1ZrT2lCbUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEc5MFlXdzZJSFVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VTQTlJREFzSUdJZ1BTQnNMbXhsYm1kMGFEc2dlU0E4SUdJN0lIa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUVNBOUlHeGJlVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkJMbTl1VUhKdlozSmxjM01nSmlZZ1FTNXZibEJ5YjJkeVpYTnpLRjhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ3VaVzV4ZFdWMVpTaHdLU3dnZGlncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lGSmxjM0J2Ym5ObEtHMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZEdoeWIzY2dSWEp5YjNJb1lHWmxkR05vSUdadmNpQWlKSHRoTG5WeWJIMGlJSEpsYzNCdmJtUmxaQ0IzYVhSb0lDUjdZUzV6ZEdGMGRYTjlPaUFrZTJFdWMzUmhkSFZ6VkdWNGRIMWdLVHNLSUNBZ0lDQWdJQ0I5S1M1MGFHVnVLQ2hoS1QwK2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29kR2hwY3k1eVpYTndiMjV6WlZSNWNHVXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVlYSnlZWGxpZFdabVpYSWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJoTG1GeWNtRjVRblZtWm1WeUtDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKaWJHOWlJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVM1aWJHOWlLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSmtiMk4xYldWdWRDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0V1ZEdWNGRDZ3BMblJvWlc0b0tHd3BQVDV1WlhjZ1JFOU5VR0Z5YzJWeUtDa3VjR0Z5YzJWR2NtOXRVM1J5YVc1bktHd3NJSFJvYVhNdWJXbHRaVlI1Y0dVcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW1wemIyNGlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJoTG1wemIyNG9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0V1ZEdWNGRDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTa3VkR2hsYmlnb1lTazlQbnNLSUNBZ0lDQWdJQ0FnSUNBZ1Rta3VZV1JrS0dVc0lHRXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhSdVcyVmRPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXeGxkR1VnZEc1YlpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlBOUlEQXNJR2dnUFNCc0xteGxibWQwYURzZ1l5QThJR2c3SUdNckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHeGJZMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTG05dVRHOWhaQ0FtSmlCMUxtOXVURzloWkNoaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwcExtTmhkR05vS0NoaEtUMCtld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhSdVcyVmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQ0E5UFQwZ2RtOXBaQ0F3S1NCMGFISnZkeUIwYUdsekxtMWhibUZuWlhJdWFYUmxiVVZ5Y205eUtHVXBMQ0JoT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2RHNWJaVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QTlJREFzSUdnZ1BTQnNMbXhsYm1kMGFEc2dZeUE4SUdnN0lHTXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR3hiWTEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMUxtOXVSWEp5YjNJZ0ppWWdkUzV2YmtWeWNtOXlLR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViV0Z1WVdkbGNpNXBkR1Z0UlhKeWIzSW9aU2s3Q2lBZ0lDQWdJQ0FnZlNrdVptbHVZV3hzZVNnb0tUMCtld29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTV0WVc1aFoyVnlMbWwwWlcxVGRHRnlkQ2hsS1RzS0lDQWdJSDBLSUNBZ0lITmxkRkpsYzNCdmJuTmxWSGx3WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21WemNHOXVjMlZVZVhCbElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEUxcGJXVlVlWEJsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVcxbFZIbHdaU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDbjBzSUdONUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUc1bGR5QlpkQ2gwYUdsekxtMWhibUZuWlhJcE93b2dJQ0FnSUNBZ0lHOHVjMlYwVUdGMGFDaDBhR2x6TG5CaGRHZ3BMQ0J2TG5ObGRGSmxjWFZsYzNSSVpXRmtaWElvZEdocGN5NXlaWEYxWlhOMFNHVmhaR1Z5S1N3Z2J5NXpaWFJYYVhSb1EzSmxaR1Z1ZEdsaGJITW9kR2hwY3k1M2FYUm9RM0psWkdWdWRHbGhiSE1wTENCdkxteHZZV1FvWlN3Z1puVnVZM1JwYjI0b1lTa2dld29nSUNBZ0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ2h5TG5CaGNuTmxLRXBUVDA0dWNHRnljMlVvWVNrcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQS9JR2tvYkNrZ09pQmpiMjV6YjJ4bExtVnljbTl5S0d3cExDQnlMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dnYml3Z2FTazdDaUFnSUNCOUNpQWdJQ0J3WVhKelpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z1pTNXNaVzVuZEdnN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1RISXVjR0Z5YzJVb1pWdHVYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVjSFZ6YUNocEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNCOUNuMHNJR2g1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRnRkTENCaElEMGdibVYzSUhaaExDQnNJRDBnYm1WM0lGbDBLSFJvYVhNdWJXRnVZV2RsY2lrN0NpQWdJQ0FnSUNBZ2JDNXpaWFJRWVhSb0tIUm9hWE11Y0dGMGFDa3NJR3d1YzJWMFVtVnpjRzl1YzJWVWVYQmxLQ0poY25KaGVXSjFabVpsY2lJcExDQnNMbk5sZEZKbGNYVmxjM1JJWldGa1pYSW9kR2hwY3k1eVpYRjFaWE4wU0dWaFpHVnlLU3dnYkM1elpYUlhhWFJvUTNKbFpHVnVkR2xoYkhNb2NpNTNhWFJvUTNKbFpHVnVkR2xoYkhNcE93b2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ01Ec0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQm9LSFVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiQzVzYjJGa0tHVmJkVjBzSUdaMWJtTjBhVzl1S0dRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2NpNXdZWEp6WlNoa0xDQWhNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2VzNWZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUJtTG5kcFpIUm9MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nWmk1b1pXbG5hSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXliV0YwT2lCbUxtWnZjbTFoZEN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRhWEJ0WVhCek9pQm1MbTFwY0cxaGNITUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNJR01nS3owZ01Td2dZeUE5UFQwZ05pQW1KaUFvWmk1dGFYQnRZWEJEYjNWdWRDQTlQVDBnTVNBbUppQW9ZUzV0YVc1R2FXeDBaWElnUFNCMGRDa3NJR0V1YVcxaFoyVWdQU0J2TENCaExtWnZjbTFoZENBOUlHWXVabTl5YldGMExDQmhMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSFFnSmlZZ2RDaGhLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNJRzRzSUdrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGxLU2tnWm05eUtHeGxkQ0IxSUQwZ01Dd2daQ0E5SUdVdWJHVnVaM1JvT3lCMUlEd2daRHNnS3l0MUtXZ29kU2s3Q2lBZ0lDQWdJQ0FnWld4elpTQnNMbXh2WVdRb1pTd2dablZ1WTNScGIyNG9kU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlISXVjR0Z5YzJVb2RTd2dJVEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWkM1cGMwTjFZbVZ0WVhBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ1pDNXRhWEJ0WVhCekxteGxibWQwYUNBdklHUXViV2x3YldGd1EyOTFiblE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzBnUFNBd095QnRJRHdnWmpzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdlcyMWRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YVhCdFlYQnpPaUJiWFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I0SUQwZ01Ec2dlQ0E4SUdRdWJXbHdiV0Z3UTI5MWJuUTdJSGdyS3lsdlcyMWRMbTFwY0cxaGNITXVjSFZ6YUNoa0xtMXBjRzFoY0hOYmJTQXFJR1F1Yldsd2JXRndRMjkxYm5RZ0t5QjRYU2tzSUc5YmJWMHVabTl5YldGMElEMGdaQzVtYjNKdFlYUXNJRzliYlYwdWQybGtkR2dnUFNCa0xuZHBaSFJvTENCdlcyMWRMbWhsYVdkb2RDQTlJR1F1YUdWcFoyaDBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZUzVwYldGblpTQTlJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCaExtbHRZV2RsTG5kcFpIUm9JRDBnWkM1M2FXUjBhQ3dnWVM1cGJXRm5aUzVvWldsbmFIUWdQU0JrTG1obGFXZG9kQ3dnWVM1dGFYQnRZWEJ6SUQwZ1pDNXRhWEJ0WVhCek93b2dJQ0FnSUNBZ0lDQWdJQ0JrTG0xcGNHMWhjRU52ZFc1MElEMDlQU0F4SUNZbUlDaGhMbTFwYmtacGJIUmxjaUE5SUhSMEtTd2dZUzVtYjNKdFlYUWdQU0JrTG1admNtMWhkQ3dnWVM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMElDWW1JSFFvWVNrN0NpQWdJQ0FnSUNBZ2ZTd2diaXdnYVNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFN0NpQWdJQ0I5Q24wc0lGSnlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Y0dGMGFDQWhQVDBnZG05cFpDQXdJQ1ltSUNobElEMGdkR2hwY3k1d1lYUm9JQ3NnWlNrc0lHVWdQU0IwYUdsekxtMWhibUZuWlhJdWNtVnpiMngyWlZWU1RDaGxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNc0lHOGdQU0JPYVM1blpYUW9aU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tHOGdJVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJSEl1YldGdVlXZGxjaTVwZEdWdFUzUmhjblFvWlNrc0lITmxkRlJwYldWdmRYUW9ablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdKaVlnZENodktTd2djaTV0WVc1aFoyVnlMbWwwWlcxRmJtUW9aU2s3Q2lBZ0lDQWdJQ0FnZlN3Z01Da3NJRzg3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J4Y3lnaWFXMW5JaWs3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYkNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYUNncExDQk9hUzVoWkdRb1pTd2dkR2hwY3lrc0lIUWdKaVlnZENoMGFHbHpLU3dnY2k1dFlXNWhaMlZ5TG1sMFpXMUZibVFvWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHTW9kU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm9LQ2tzSUdrZ0ppWWdhU2gxS1N3Z2NpNXRZVzVoWjJWeUxtbDBaVzFGY25KdmNpaGxLU3dnY2k1dFlXNWhaMlZ5TG1sMFpXMUZibVFvWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHZ29LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpYkc5aFpDSXNJR3dzSUNFeEtTd2dZUzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKbGNuSnZjaUlzSUdNc0lDRXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0V1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYkc5aFpDSXNJR3dzSUNFeEtTd2dZUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0psY25KdmNpSXNJR01zSUNFeEtTd2daUzV6ZFdKemRISW9NQ3dnTlNrZ0lUMDlJQ0prWVhSaE9pSWdKaVlnZEdocGN5NWpjbTl6YzA5eWFXZHBiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaGhMbU55YjNOelQzSnBaMmx1SUQwZ2RHaHBjeTVqY205emMwOXlhV2RwYmlrc0lISXViV0Z1WVdkbGNpNXBkR1Z0VTNSaGNuUW9aU2tzSUdFdWMzSmpJRDBnWlN3Z1lUc0tJQ0FnSUgwS2ZTd2dSbWdnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVcE93b2dJQ0FnZlFvZ0lDQWdiRzloWkNobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnYTJrc0lHOGdQU0J1WlhjZ1VuSW9kR2hwY3k1dFlXNWhaMlZ5S1RzS0lDQWdJQ0FnSUNCdkxuTmxkRU55YjNOelQzSnBaMmx1S0hSb2FYTXVZM0p2YzNOUGNtbG5hVzRwTENCdkxuTmxkRkJoZEdnb2RHaHBjeTV3WVhSb0tUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlEQTdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdiQ2hqS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRzh1Ykc5aFpDaGxXMk5kTENCbWRXNWpkR2x2Ymlob0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlMbWx0WVdkbGMxdGpYU0E5SUdnc0lHRXJLeXdnWVNBOVBUMGdOaUFtSmlBb2NpNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjBJQ1ltSUhRb2Npa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUxDQjJiMmxrSURBc0lHa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nUFNBd095QmpJRHdnWlM1c1pXNW5kR2c3SUNzcll5bHNLR01wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5T3dvZ0lDQWdmUXA5TENCT2FDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1luUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc2IyRmtLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXNJRzhnUFNCdVpYY2djVzRzSUdFZ1BTQnVaWGNnV1hRb2RHaHBjeTV0WVc1aFoyVnlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZUzV6WlhSU1pYTndiMjV6WlZSNWNHVW9JbUZ5Y21GNVluVm1abVZ5SWlrc0lHRXVjMlYwVW1WeGRXVnpkRWhsWVdSbGNpaDBhR2x6TG5KbGNYVmxjM1JJWldGa1pYSXBMQ0JoTG5ObGRGQmhkR2dvZEdocGN5NXdZWFJvS1N3Z1lTNXpaWFJYYVhSb1EzSmxaR1Z1ZEdsaGJITW9jaTUzYVhSb1EzSmxaR1Z1ZEdsaGJITXBMQ0JoTG14dllXUW9aU3dnWm5WdVkzUnBiMjRvYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJSEl1Y0dGeWMyVW9iQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDRmpJSHg4SUNoakxtbHRZV2RsSUNFOVBTQjJiMmxrSURBZ1B5QnZMbWx0WVdkbElEMGdZeTVwYldGblpTQTZJR011WkdGMFlTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtbHRZV2RsTG5kcFpIUm9JRDBnWXk1M2FXUjBhQ3dnYnk1cGJXRm5aUzVvWldsbmFIUWdQU0JqTG1obGFXZG9kQ3dnYnk1cGJXRm5aUzVrWVhSaElEMGdZeTVrWVhSaEtTd2dieTUzY21Gd1V5QTlJR011ZDNKaGNGTWdJVDA5SUhadmFXUWdNQ0EvSUdNdWQzSmhjRk1nT2lCMmRDd2dieTUzY21Gd1ZDQTlJR011ZDNKaGNGUWdJVDA5SUhadmFXUWdNQ0EvSUdNdWQzSmhjRlFnT2lCMmRDd2dieTV0WVdkR2FXeDBaWElnUFNCakxtMWhaMFpwYkhSbGNpQWhQVDBnZG05cFpDQXdJRDhnWXk1dFlXZEdhV3gwWlhJZ09pQjBkQ3dnYnk1dGFXNUdhV3gwWlhJZ1BTQmpMbTFwYmtacGJIUmxjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z1l5NXRhVzVHYVd4MFpYSWdPaUIwZEN3Z2J5NWhibWx6YjNSeWIzQjVJRDBnWXk1aGJtbHpiM1J5YjNCNUlDRTlQU0IyYjJsa0lEQWdQeUJqTG1GdWFYTnZkSEp2Y0hrZ09pQXhMQ0JqTG1WdVkyOWthVzVuSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1Wlc1amIyUnBibWNnUFNCakxtVnVZMjlrYVc1bktTd2dZeTVtYkdsd1dTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtWnNhWEJaSUQwZ1l5NW1iR2x3V1Nrc0lHTXVabTl5YldGMElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVptOXliV0YwSUQwZ1l5NW1iM0p0WVhRcExDQmpMblI1Y0dVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1MGVYQmxJRDBnWXk1MGVYQmxLU3dnWXk1dGFYQnRZWEJ6SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1Yldsd2JXRndjeUE5SUdNdWJXbHdiV0Z3Y3l3Z2J5NXRhVzVHYVd4MFpYSWdQU0JWYVNrc0lHTXViV2x3YldGd1EyOTFiblFnUFQwOUlERWdKaVlnS0c4dWJXbHVSbWxzZEdWeUlEMGdkSFFwTENCakxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUdNdVoyVnVaWEpoZEdWTmFYQnRZWEJ6S1N3Z2J5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjBJQ1ltSUhRb2J5d2dZeWtwT3dvZ0lDQWdJQ0FnSUgwc0lHNHNJR2twTENCdk93b2dJQ0FnZlFwOUxDQkNhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNWxkeUJ2ZEN3Z2J5QTlJRzVsZHlCU2NpaDBhR2x6TG0xaGJtRm5aWElwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2TG5ObGRFTnliM056VDNKcFoybHVLSFJvYVhNdVkzSnZjM05QY21sbmFXNHBMQ0J2TG5ObGRGQmhkR2dvZEdocGN5NXdZWFJvS1N3Z2J5NXNiMkZrS0dVc0lHWjFibU4wYVc5dUtHRXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NpNXBiV0ZuWlNBOUlHRXNJSEl1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnZENBaFBUMGdkbTlwWkNBd0lDWW1JSFFvY2lrN0NpQWdJQ0FnSUNBZ2ZTd2diaXdnYVNrc0lISTdDaUFnSUNCOUNuMHNJRUowSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJPWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBJRDBnTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUR2xuYUhRaUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lHRmxLR1VwTENCMGFHbHpMbWx1ZEdWdWMybDBlU0E5SUhRN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dlMzBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNdWFXNTBaVzV6YVhSNUlEMGdaUzVwYm5SbGJuTnBkSGtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbTlpYW1WamRDNWpiMnh2Y2lBOUlIUm9hWE11WTI5c2IzSXVaMlYwU0dWNEtDa3NJSFF1YjJKcVpXTjBMbWx1ZEdWdWMybDBlU0E5SUhSb2FYTXVhVzUwWlc1emFYUjVMQ0IwYUdsekxtZHliM1Z1WkVOdmJHOXlJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUXViMkpxWldOMExtZHliM1Z1WkVOdmJHOXlJRDBnZEdocGN5NW5jbTkxYm1SRGIyeHZjaTVuWlhSSVpYZ29LU2tzSUhSb2FYTXVaR2x6ZEdGdVkyVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2RDNXZZbXBsWTNRdVpHbHpkR0Z1WTJVZ1BTQjBhR2x6TG1ScGMzUmhibU5sS1N3Z2RHaHBjeTVoYm1kc1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtOWlhbVZqZEM1aGJtZHNaU0E5SUhSb2FYTXVZVzVuYkdVcExDQjBhR2x6TG1SbFkyRjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUXViMkpxWldOMExtUmxZMkY1SUQwZ2RHaHBjeTVrWldOaGVTa3NJSFJvYVhNdWNHVnVkVzFpY21FZ0lUMDlJSFp2YVdRZ01DQW1KaUFvZEM1dlltcGxZM1F1Y0dWdWRXMWljbUVnUFNCMGFHbHpMbkJsYm5WdFluSmhLU3dnZEdocGN5NXphR0ZrYjNjZ0lUMDlJSFp2YVdRZ01DQW1KaUFvZEM1dlltcGxZM1F1YzJoaFpHOTNJRDBnZEdocGN5NXphR0ZrYjNjdWRHOUtVMDlPS0NrcExDQjBPd29nSUNBZ2ZRcDlPd3BDZEM1d2NtOTBiM1I1Y0dVdWFYTk1hV2RvZENBOUlDRXdPd3AyWVhJZ1ZXRWdQU0JqYkdGemN5QmxlSFJsYm1SeklFSjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJRzRwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSklaVzFwYzNCb1pYSmxUR2xuYUhRaUxDQjBhR2x6TG5CdmMybDBhVzl1TG1OdmNIa29UbVV1UkdWbVlYVnNkRlZ3S1N3Z2RHaHBjeTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2dkR2hwY3k1bmNtOTFibVJEYjJ4dmNpQTlJRzVsZHlCaFpTaDBLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJDZEM1d2NtOTBiM1I1Y0dVdVkyOXdlUzVqWVd4c0tIUm9hWE1zSUdVcExDQjBhR2x6TG1keWIzVnVaRU52Ykc5eUxtTnZjSGtvWlM1bmNtOTFibVJEYjJ4dmNpa3NJSFJvYVhNN0NpQWdJQ0I5Q24wN0NsVmhMbkJ5YjNSdmRIbHdaUzVwYzBobGJXbHpjR2hsY21WTWFXZG9kQ0E5SUNFd093cDJZWElnWDJNZ1BTQnVaWGNnY0dVc0lFMWpJRDBnYm1WM0lFMHNJR0pqSUQwZ2JtVjNJRTBzSUcxdklEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1allXMWxjbUVnUFNCbExDQjBhR2x6TG1KcFlYTWdQU0F3TENCMGFHbHpMbTV2Y20xaGJFSnBZWE1nUFNBd0xDQjBhR2x6TG5KaFpHbDFjeUE5SURFc0lIUm9hWE11WW14MWNsTmhiWEJzWlhNZ1BTQTRMQ0IwYUdsekxtMWhjRk5wZW1VZ1BTQnVaWGNnV0NnMU1USXNJRFV4TWlrc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTV0WVhCUVlYTnpJRDBnYm5Wc2JDd2dkR2hwY3k1dFlYUnlhWGdnUFNCdVpYY2djR1VzSUhSb2FYTXVZWFYwYjFWd1pHRjBaU0E5SUNFd0xDQjBhR2x6TG01bFpXUnpWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVYMlp5ZFhOMGRXMGdQU0J1WlhjZ1JISXNJSFJvYVhNdVgyWnlZVzFsUlhoMFpXNTBjeUE5SUc1bGR5QllLREVzSURFcExDQjBhR2x6TGw5MmFXVjNjRzl5ZEVOdmRXNTBJRDBnTVN3Z2RHaHBjeTVmZG1sbGQzQnZjblJ6SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1ZtVW9NQ3dnTUN3Z01Td2dNU2tLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWbWxsZDNCdmNuUkRiM1Z1ZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZG1sbGQzQnZjblJEYjNWdWREc0tJQ0FnSUgwS0lDQWdJR2RsZEVaeWRYTjBkVzBvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMlp5ZFhOMGRXMDdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVdObGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhiV1Z5WVN3Z2JpQTlJSFJvYVhNdWJXRjBjbWw0T3dvZ0lDQWdJQ0FnSUUxakxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhsTG0xaGRISnBlRmR2Y214a0tTd2dkQzV3YjNOcGRHbHZiaTVqYjNCNUtFMWpLU3dnWW1NdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLR1V1ZEdGeVoyVjBMbTFoZEhKcGVGZHZjbXhrS1N3Z2RDNXNiMjlyUVhRb1ltTXBMQ0IwTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0Nrc0lGOWpMbTExYkhScGNHeDVUV0YwY21salpYTW9kQzV3Y205cVpXTjBhVzl1VFdGMGNtbDRMQ0IwTG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlNrc0lIUm9hWE11WDJaeWRYTjBkVzB1YzJWMFJuSnZiVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29YMk1wTENCdUxuTmxkQ2d1TlN3Z01Dd2dNQ3dnTGpVc0lEQXNJQzQxTENBd0xDQXVOU3dnTUN3Z01Dd2dMalVzSUM0MUxDQXdMQ0F3TENBd0xDQXhLU3dnYmk1dGRXeDBhWEJzZVNoMExuQnliMnBsWTNScGIyNU5ZWFJ5YVhncExDQnVMbTExYkhScGNHeDVLSFF1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRlpwWlhkd2IzSjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZkbWxsZDNCdmNuUnpXMlZkT3dvZ0lDQWdmUW9nSUNBZ1oyVjBSbkpoYldWRmVIUmxiblJ6S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDltY21GdFpVVjRkR1Z1ZEhNN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJXRndJQ1ltSUhSb2FYTXViV0Z3TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTV0WVhCUVlYTnpJQ1ltSUhSb2FYTXViV0Z3VUdGemN5NWthWE53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1allXMWxjbUVnUFNCbExtTmhiV1Z5WVM1amJHOXVaU2dwTENCMGFHbHpMbUpwWVhNZ1BTQmxMbUpwWVhNc0lIUm9hWE11Y21Ga2FYVnpJRDBnWlM1eVlXUnBkWE1zSUhSb2FYTXViV0Z3VTJsNlpTNWpiM0I1S0dVdWJXRndVMmw2WlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZTMwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZbWxoY3lBaFBUMGdNQ0FtSmlBb1pTNWlhV0Z6SUQwZ2RHaHBjeTVpYVdGektTd2dkR2hwY3k1dWIzSnRZV3hDYVdGeklDRTlQU0F3SUNZbUlDaGxMbTV2Y20xaGJFSnBZWE1nUFNCMGFHbHpMbTV2Y20xaGJFSnBZWE1wTENCMGFHbHpMbkpoWkdsMWN5QWhQVDBnTVNBbUppQW9aUzV5WVdScGRYTWdQU0IwYUdsekxuSmhaR2wxY3lrc0lDaDBhR2x6TG0xaGNGTnBlbVV1ZUNBaFBUMGdOVEV5SUh4OElIUm9hWE11YldGd1UybDZaUzU1SUNFOVBTQTFNVElwSUNZbUlDaGxMbTFoY0ZOcGVtVWdQU0IwYUdsekxtMWhjRk5wZW1VdWRHOUJjbkpoZVNncEtTd2daUzVqWVcxbGNtRWdQU0IwYUdsekxtTmhiV1Z5WVM1MGIwcFRUMDRvSVRFcExtOWlhbVZqZEN3Z1pHVnNaWFJsSUdVdVkyRnRaWEpoTG0xaGRISnBlQ3dnWlRzS0lDQWdJSDBLZlN3Z1QyRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHMXZJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUhWMEtEVXdMQ0F4TENBdU5Td2dOVEF3S1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVtYjJOMWN5QTlJREU3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1ZOWVhSeWFXTmxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oYldWeVlTd2diaUE5SUdSeUlDb2dNaUFxSUdVdVlXNW5iR1VnS2lCMGFHbHpMbVp2WTNWekxDQnBJRDBnZEdocGN5NXRZWEJUYVhwbExuZHBaSFJvSUM4Z2RHaHBjeTV0WVhCVGFYcGxMbWhsYVdkb2RDd2djaUE5SUdVdVpHbHpkR0Z1WTJVZ2ZId2dkQzVtWVhJN0NpQWdJQ0FnSUNBZ0tHNGdJVDA5SUhRdVptOTJJSHg4SUdrZ0lUMDlJSFF1WVhOd1pXTjBJSHg4SUhJZ0lUMDlJSFF1Wm1GeUtTQW1KaUFvZEM1bWIzWWdQU0J1TENCMExtRnpjR1ZqZENBOUlHa3NJSFF1Wm1GeUlEMGdjaXdnZEM1MWNHUmhkR1ZRY205cVpXTjBhVzl1VFdGMGNtbDRLQ2twTENCemRYQmxjaTUxY0dSaGRHVk5ZWFJ5YVdObGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1adlkzVnpJRDBnWlM1bWIyTjFjeXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tUMkV1Y0hKdmRHOTBlWEJsTG1selUzQnZkRXhwWjJoMFUyaGhaRzkzSUQwZ0lUQTdDblpoY2lCSVlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FuUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpQTlJREFzSUdrZ1BTQk5ZWFJvTGxCSklDOGdNeXdnY2lBOUlEQXNJRzhnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUzQnZkRXhwWjJoMElpd2dkR2hwY3k1d2IzTnBkR2x2Ymk1amIzQjVLRTVsTGtSbFptRjFiSFJWY0Nrc0lIUm9hWE11ZFhCa1lYUmxUV0YwY21sNEtDa3NJSFJvYVhNdWRHRnlaMlYwSUQwZ2JtVjNJRTVsTENCMGFHbHpMbVJwYzNSaGJtTmxJRDBnYml3Z2RHaHBjeTVoYm1kc1pTQTlJR2tzSUhSb2FYTXVjR1Z1ZFcxaWNtRWdQU0J5TENCMGFHbHpMbVJsWTJGNUlEMGdieXdnZEdocGN5NXphR0ZrYjNjZ1BTQnVaWGNnVDJFN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnY0c5M1pYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFXNTBaVzV6YVhSNUlDb2dUV0YwYUM1UVNUc0tJQ0FnSUgwS0lDQWdJSE5sZENCd2IzZGxjaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVwYm5SbGJuTnBkSGtnUFNCbElDOGdUV0YwYUM1UVNUc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXphR0ZrYjNjdVpHbHpjRzl6WlNncE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVaR2x6ZEdGdVkyVWdQU0JsTG1ScGMzUmhibU5sTENCMGFHbHpMbUZ1WjJ4bElEMGdaUzVoYm1kc1pTd2dkR2hwY3k1d1pXNTFiV0p5WVNBOUlHVXVjR1Z1ZFcxaWNtRXNJSFJvYVhNdVpHVmpZWGtnUFNCbExtUmxZMkY1TENCMGFHbHpMblJoY21kbGRDQTlJR1V1ZEdGeVoyVjBMbU5zYjI1bEtDa3NJSFJvYVhNdWMyaGhaRzkzSUQwZ1pTNXphR0ZrYjNjdVkyeHZibVVvS1N3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLU0dFdWNISnZkRzkwZVhCbExtbHpVM0J2ZEV4cFoyaDBJRDBnSVRBN0NuWmhjaUIzWXlBOUlHNWxkeUJ3WlN3Z2JuSWdQU0J1WlhjZ1RTd2dhbThnUFNCdVpYY2dUU3dnYTJFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUcxdklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JtVjNJSFYwS0Rrd0xDQXhMQ0F1TlN3Z05UQXdLU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZabkpoYldWRmVIUmxiblJ6SUQwZ2JtVjNJRmdvTkN3Z01pa3NJSFJvYVhNdVgzWnBaWGR3YjNKMFEyOTFiblFnUFNBMkxDQjBhR2x6TGw5MmFXVjNjRzl5ZEhNZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QldaU2d5TENBeExDQXhMQ0F4S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZabEtEQXNJREVzSURFc0lERXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dWbVVvTXl3Z01Td2dNU3dnTVNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCV1pTZ3hMQ0F4TENBeExDQXhLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRlpsS0RNc0lEQXNJREVzSURFcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1ZtVW9NU3dnTUN3Z01Td2dNU2tLSUNBZ0lDQWdJQ0JkTENCMGFHbHpMbDlqZFdKbFJHbHlaV04wYVc5dWN5QTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRTBvTVN3Z01Dd2dNQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJOS0MweExDQXdMQ0F3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUUwb01Dd2dNQ3dnTVNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCTktEQXNJREFzSUMweEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9NQ3dnTVN3Z01Da3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5Qk5LREFzSUMweExDQXdLUW9nSUNBZ0lDQWdJRjBzSUhSb2FYTXVYMk4xWW1WVmNITWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJOS0RBc0lERXNJREFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVFNnd0xDQXhMQ0F3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUUwb01Dd2dNU3dnTUNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCTktEQXNJREVzSURBcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1RTZ3dMQ0F3TENBeEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9NQ3dnTUN3Z0xURXBDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcFkyVnpLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtTmhiV1Z5WVN3Z2FTQTlJSFJvYVhNdWJXRjBjbWw0TENCeUlEMGdaUzVrYVhOMFlXNWpaU0I4ZkNCdUxtWmhjanNLSUNBZ0lDQWdJQ0J5SUNFOVBTQnVMbVpoY2lBbUppQW9iaTVtWVhJZ1BTQnlMQ0J1TG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LU2tzSUc1eUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhsTG0xaGRISnBlRmR2Y214a0tTd2diaTV3YjNOcGRHbHZiaTVqYjNCNUtHNXlLU3dnYW04dVkyOXdlU2h1TG5CdmMybDBhVzl1S1N3Z2FtOHVZV1JrS0hSb2FYTXVYMk4xWW1WRWFYSmxZM1JwYjI1elczUmRLU3dnYmk1MWNDNWpiM0I1S0hSb2FYTXVYMk4xWW1WVmNITmJkRjBwTENCdUxteHZiMnRCZENocWJ5a3NJRzR1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1N3Z2FTNXRZV3RsVkhKaGJuTnNZWFJwYjI0b0xXNXlMbmdzSUMxdWNpNTVMQ0F0Ym5JdWVpa3NJSGRqTG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vYmk1d2NtOXFaV04wYVc5dVRXRjBjbWw0TENCdUxtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTa3NJSFJvYVhNdVgyWnlkWE4wZFcwdWMyVjBSbkp2YlZCeWIycGxZM1JwYjI1TllYUnlhWGdvZDJNcE93b2dJQ0FnZlFwOU93cHJZUzV3Y205MGIzUjVjR1V1YVhOUWIybHVkRXhwWjJoMFUyaGhaRzkzSUQwZ0lUQTdDblpoY2lCSFlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FuUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpQTlJREFzSUdrZ1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVRzlwYm5STWFXZG9kQ0lzSUhSb2FYTXVaR2x6ZEdGdVkyVWdQU0J1TENCMGFHbHpMbVJsWTJGNUlEMGdhU3dnZEdocGN5NXphR0ZrYjNjZ1BTQnVaWGNnYTJFN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnY0c5M1pYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFXNTBaVzV6YVhSNUlDb2dOQ0FxSUUxaGRHZ3VVRWs3Q2lBZ0lDQjlDaUFnSUNCelpYUWdjRzkzWlhJb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWFXNTBaVzV6YVhSNUlEMGdaU0F2SUNnMElDb2dUV0YwYUM1UVNTazdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjMmhoWkc5M0xtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbVJwYzNSaGJtTmxJRDBnWlM1a2FYTjBZVzVqWlN3Z2RHaHBjeTVrWldOaGVTQTlJR1V1WkdWallYa3NJSFJvYVhNdWMyaGhaRzkzSUQwZ1pTNXphR0ZrYjNjdVkyeHZibVVvS1N3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLUjJFdWNISnZkRzkwZVhCbExtbHpVRzlwYm5STWFXZG9kQ0E5SUNFd093cDJZWElnVm1FZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUcxdklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JtVjNJRVp5S0MwMUxDQTFMQ0ExTENBdE5Td2dMalVzSURVd01Da3BPd29nSUNBZ2ZRcDlPd3BXWVM1d2NtOTBiM1I1Y0dVdWFYTkVhWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzSUQwZ0lUQTdDblpoY2lCWFlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FuUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtScGNtVmpkR2x2Ym1Gc1RHbG5hSFFpTENCMGFHbHpMbkJ2YzJsMGFXOXVMbU52Y0hrb1RtVXVSR1ZtWVhWc2RGVndLU3dnZEdocGN5NTFjR1JoZEdWTllYUnlhWGdvS1N3Z2RHaHBjeTUwWVhKblpYUWdQU0J1WlhjZ1RtVXNJSFJvYVhNdWMyaGhaRzkzSUQwZ2JtVjNJRlpoT3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5Ob1lXUnZkeTVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1MFlYSm5aWFFnUFNCbExuUmhjbWRsZEM1amJHOXVaU2dwTENCMGFHbHpMbk5vWVdSdmR5QTlJR1V1YzJoaFpHOTNMbU5zYjI1bEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q24wN0NsZGhMbkJ5YjNSdmRIbHdaUzVwYzBScGNtVmpkR2x2Ym1Gc1RHbG5hSFFnUFNBaE1Ec0tkbUZ5SUhGaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCQ2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUVcxaWFXVnVkRXhwWjJoMElqc0tJQ0FnSUgwS2ZUc0tjV0V1Y0hKdmRHOTBlWEJsTG1selFXMWlhV1Z1ZEV4cFoyaDBJRDBnSVRBN0NuWmhjaUJZWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nUW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlBOUlERXdMQ0JwSUQwZ01UQXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlNaV04wUVhKbFlVeHBaMmgwSWl3Z2RHaHBjeTUzYVdSMGFDQTlJRzRzSUhSb2FYTXVhR1ZwWjJoMElEMGdhVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQndiM2RsY2lncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYm5SbGJuTnBkSGtnS2lCMGFHbHpMbmRwWkhSb0lDb2dkR2hwY3k1b1pXbG5hSFFnS2lCTllYUm9MbEJKT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSEJ2ZDJWeUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHVkR1Z1YzJsMGVTQTlJR1VnTHlBb2RHaHBjeTUzYVdSMGFDQXFJSFJvYVhNdWFHVnBaMmgwSUNvZ1RXRjBhQzVRU1NrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NTNhV1IwYUNBOUlHVXVkMmxrZEdnc0lIUm9hWE11YUdWcFoyaDBJRDBnWlM1b1pXbG5hSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbTlpYW1WamRDNTNhV1IwYUNBOUlIUm9hWE11ZDJsa2RHZ3NJSFF1YjJKcVpXTjBMbWhsYVdkb2RDQTlJSFJvYVhNdWFHVnBaMmgwTENCME93b2dJQ0FnZlFwOU93cFlZUzV3Y205MGIzUjVjR1V1YVhOU1pXTjBRWEpsWVV4cFoyaDBJRDBnSVRBN0NuWmhjaUJLWVNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYjJWbVptbGphV1Z1ZEhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBd095QmxJRHdnT1RzZ1pTc3JLWFJvYVhNdVkyOWxabVpwWTJsbGJuUnpMbkIxYzJnb2JtVjNJRTBwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z09Uc2dkQ3NyS1hSb2FYTXVZMjlsWm1acFkybGxiblJ6VzNSZExtTnZjSGtvWlZ0MFhTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCNlpYSnZLQ2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWlNBOUlEQTdJR1VnUENBNU95QmxLeXNwZEdocGN5NWpiMlZtWm1samFXVnVkSE5iWlYwdWMyVjBLREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBRWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzU0TENCcElEMGdaUzU1TENCeUlEMGdaUzU2TENCdklEMGdkR2hwY3k1amIyVm1abWxqYVdWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVZMjl3ZVNodld6QmRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3VNamd5TURrMUtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXN4WFN3Z0xqUTRPRFl3TXlBcUlHa3BMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2V3pKZExDQXVORGc0TmpBeklDb2djaWtzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk0xMHNJQzQwT0RnMk1ETWdLaUJ1S1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2IxczBYU3dnTVM0d09USTFORGdnS2lBb2JpQXFJR2twS1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2IxczFYU3dnTVM0d09USTFORGdnS2lBb2FTQXFJSElwS1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2IxczJYU3dnTGpNeE5UTTVNaUFxSUNneklDb2djaUFxSUhJZ0xTQXhLU2tzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk4xMHNJREV1TURreU5UUTRJQ29nS0c0Z0tpQnlLU2tzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk9GMHNJQzQxTkRZeU56UWdLaUFvYmlBcUlHNGdMU0JwSUNvZ2FTa3BMQ0IwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBTWEp5WVdScFlXNWpaVUYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1ZUN3Z2FTQTlJR1V1ZVN3Z2NpQTlJR1V1ZWl3Z2J5QTlJSFJvYVhNdVkyOWxabVpwWTJsbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbU52Y0hrb2Ixc3dYU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9Mamc0TmpJeU55a3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRzliTVYwc0lESWdLaUF1TlRFeE5qWTBJQ29nYVNrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHOWJNbDBzSURJZ0tpQXVOVEV4TmpZMElDb2djaWtzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk0xMHNJRElnS2lBdU5URXhOalkwSUNvZ2Jpa3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRzliTkYwc0lESWdLaUF1TkRJNU1EUXpJQ29nYmlBcUlHa3BMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2V3pWZExDQXlJQ29nTGpReU9UQTBNeUFxSUdrZ0tpQnlLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzMlhTd2dMamMwTXpFeU5TQXFJSElnS2lCeUlDMGdMakkwTnpjd09Da3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRzliTjEwc0lESWdLaUF1TkRJNU1EUXpJQ29nYmlBcUlISXBMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2V3poZExDQXVOREk1TURReklDb2dLRzRnS2lCdUlDMGdhU0FxSUdrcEtTd2dkRHNLSUNBZ0lIMEtJQ0FnSUdGa1pDaGxLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Ec2dkQ0E4SURrN0lIUXJLeWwwYUdsekxtTnZaV1ptYVdOcFpXNTBjMXQwWFM1aFpHUW9aUzVqYjJWbVptbGphV1Z1ZEhOYmRGMHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtVMk5oYkdWa1UwZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQTVPeUJ1S3lzcGRHaHBjeTVqYjJWbVptbGphV1Z1ZEhOYmJsMHVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHVXVZMjlsWm1acFkybGxiblJ6VzI1ZExDQjBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmpZV3hsS0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dPVHNnZENzcktYUm9hWE11WTI5bFptWnBZMmxsYm5SelczUmRMbTExYkhScGNHeDVVMk5oYkdGeUtHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JHVnljQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJRGs3SUc0ckt5bDBhR2x6TG1OdlpXWm1hV05wWlc1MGMxdHVYUzVzWlhKd0tHVXVZMjlsWm1acFkybGxiblJ6VzI1ZExDQjBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTURzZ2RDQThJRGs3SUhRckt5bHBaaUFvSVhSb2FYTXVZMjlsWm1acFkybGxiblJ6VzNSZExtVnhkV0ZzY3lobExtTnZaV1ptYVdOcFpXNTBjMXQwWFNrcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0lUQTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9aUzVqYjJWbVptbGphV1Z1ZEhNcE93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHWnliMjFCY25KaGVTaGxMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1amIyVm1abWxqYVdWdWRITTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTURzZ2FTQThJRGs3SUdrckt5bHVXMmxkTG1aeWIyMUJjbkpoZVNobExDQjBJQ3NnYVNBcUlETXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtTnZaV1ptYVdOcFpXNTBjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd095QnBJRHdnT1RzZ2FTc3JLVzViYVYwdWRHOUJjbkpoZVNobExDQjBJQ3NnYVNBcUlETXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR2RsZEVKaGMybHpRWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzU0TENCcElEMGdaUzU1TENCeUlEMGdaUzU2T3dvZ0lDQWdJQ0FnSUhSYk1GMGdQU0F1TWpneU1EazFMQ0IwV3pGZElEMGdMalE0T0RZd015QXFJR2tzSUhSYk1sMGdQU0F1TkRnNE5qQXpJQ29nY2l3Z2RGc3pYU0E5SUM0ME9EZzJNRE1nS2lCdUxDQjBXelJkSUQwZ01TNHdPVEkxTkRnZ0tpQnVJQ29nYVN3Z2RGczFYU0E5SURFdU1Ea3lOVFE0SUNvZ2FTQXFJSElzSUhSYk5sMGdQU0F1TXpFMU16a3lJQ29nS0RNZ0tpQnlJQ29nY2lBdElERXBMQ0IwV3pkZElEMGdNUzR3T1RJMU5EZ2dLaUJ1SUNvZ2Npd2dkRnM0WFNBOUlDNDFORFl5TnpRZ0tpQW9iaUFxSUc0Z0xTQnBJQ29nYVNrN0NpQWdJQ0I5Q24wN0NrcGhMbkJ5YjNSdmRIbHdaUzVwYzFOd2FHVnlhV05oYkVoaGNtMXZibWxqY3pNZ1BTQWhNRHNLZG1GeUlFaHlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRXBoTENCMElEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9kbTlwWkNBd0xDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuTm9JRDBnWlRzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuTm9MbU52Y0hrb1pTNXphQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhVzUwWlc1emFYUjVJRDBnWlM1cGJuUmxibk5wZEhrc0lIUm9hWE11YzJndVpuSnZiVUZ5Y21GNUtHVXVjMmdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhOMWNHVnlMblJ2U2xOUFRpaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzV2WW1wbFkzUXVjMmdnUFNCMGFHbHpMbk5vTG5SdlFYSnlZWGtvS1N3Z2REc0tJQ0FnSUgwS2ZUc0tTSEl1Y0hKdmRHOTBlWEJsTG1selRHbG5hSFJRY205aVpTQTlJQ0V3T3dwMllYSWdlbWdnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEdWNGRIVnlaWE1nUFNCN2ZUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRzVsZHlCWmRDaHlMbTFoYm1GblpYSXBPd29nSUNBZ0lDQWdJRzh1YzJWMFVHRjBhQ2h5TG5CaGRHZ3BMQ0J2TG5ObGRGSmxjWFZsYzNSSVpXRmtaWElvY2k1eVpYRjFaWE4wU0dWaFpHVnlLU3dnYnk1elpYUlhhWFJvUTNKbFpHVnVkR2xoYkhNb2NpNTNhWFJvUTNKbFpHVnVkR2xoYkhNcExDQnZMbXh2WVdRb1pTd2dablZ1WTNScGIyNG9ZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENoeUxuQmhjbk5sS0VwVFQwNHVjR0Z5YzJVb1lTa3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0EvSUdrb2JDa2dPaUJqYjI1emIyeGxMbVZ5Y205eUtHd3BMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3Z2Jpd2dhU2s3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMblJsZUhSMWNtVnpPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzRvY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRnR5WFNBOVBUMGdkbTlwWkNBd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMFpYSnBZV3hNYjJGa1pYSTZJRlZ1WkdWbWFXNWxaQ0IwWlhoMGRYSmxJaXdnY2lrc0lIUmJjbDA3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYm1WM0lITjVXMlV1ZEhsd1pWMDdDaUFnSUNBZ0lDQWdhV1lnS0dVdWRYVnBaQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMblYxYVdRZ1BTQmxMblYxYVdRcExDQmxMbTVoYldVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1dVlXMWxJRDBnWlM1dVlXMWxLU3dnWlM1amIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VZMjlzYjNJZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG1OdmJHOXlMbk5sZEVobGVDaGxMbU52Ykc5eUtTd2daUzV5YjNWbmFHNWxjM01nSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV5YjNWbmFHNWxjM01nUFNCbExuSnZkV2RvYm1WemN5a3NJR1V1YldWMFlXeHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YldWMFlXeHVaWE56SUQwZ1pTNXRaWFJoYkc1bGMzTXBMQ0JsTG5Ob1pXVnVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMmhsWlc0Z1BTQmxMbk5vWldWdUtTd2daUzV6YUdWbGJrTnZiRzl5SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzJobFpXNURiMnh2Y2lBOUlHNWxkeUJoWlNncExuTmxkRWhsZUNobExuTm9aV1Z1UTI5c2IzSXBLU3dnWlM1emFHVmxibEp2ZFdkb2JtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk5vWldWdVVtOTFaMmh1WlhOeklEMGdaUzV6YUdWbGJsSnZkV2RvYm1WemN5a3NJR1V1WlcxcGMzTnBkbVVnSVQwOUlIWnZhV1FnTUNBbUppQnBMbVZ0YVhOemFYWmxJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNWxiV2x6YzJsMlpTNXpaWFJJWlhnb1pTNWxiV2x6YzJsMlpTa3NJR1V1YzNCbFkzVnNZWElnSVQwOUlIWnZhV1FnTUNBbUppQnBMbk53WldOMWJHRnlJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNXpjR1ZqZFd4aGNpNXpaWFJJWlhnb1pTNXpjR1ZqZFd4aGNpa3NJR1V1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlU0E5SUdVdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhrcExDQmxMbk53WldOMWJHRnlRMjlzYjNJZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG5Od1pXTjFiR0Z5UTI5c2IzSWdJVDA5SUhadmFXUWdNQ0FtSmlCcExuTndaV04xYkdGeVEyOXNiM0l1YzJWMFNHVjRLR1V1YzNCbFkzVnNZWEpEYjJ4dmNpa3NJR1V1YzJocGJtbHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzJocGJtbHVaWE56SUQwZ1pTNXphR2x1YVc1bGMzTXBMQ0JsTG1Oc1pXRnlZMjloZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1Oc1pXRnlZMjloZENBOUlHVXVZMnhsWVhKamIyRjBLU3dnWlM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ1BTQmxMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeWtzSUdVdWRISmhibk50YVhOemFXOXVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkSEpoYm5OdGFYTnphVzl1SUQwZ1pTNTBjbUZ1YzIxcGMzTnBiMjRwTENCbExuUm9hV05yYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExuUm9hV05yYm1WemN5QTlJR1V1ZEdocFkydHVaWE56S1N3Z1pTNWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU0E5SUdVdVlYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTa3NJR1V1WVhSMFpXNTFZWFJwYjI1RGIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpQWhQVDBnZG05cFpDQXdJQ1ltSUdrdVlYUjBaVzUxWVhScGIyNURiMnh2Y2k1elpYUklaWGdvWlM1aGRIUmxiblZoZEdsdmJrTnZiRzl5S1N3Z1pTNW1iMmNnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVtYjJjZ1BTQmxMbVp2Wnlrc0lHVXVabXhoZEZOb1lXUnBibWNnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVtYkdGMFUyaGhaR2x1WnlBOUlHVXVabXhoZEZOb1lXUnBibWNwTENCbExtSnNaVzVrYVc1bklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVlteGxibVJwYm1jZ1BTQmxMbUpzWlc1a2FXNW5LU3dnWlM1amIyMWlhVzVsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WTI5dFltbHVaU0E5SUdVdVkyOXRZbWx1WlNrc0lHVXVjMmxrWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5OcFpHVWdQU0JsTG5OcFpHVXBMQ0JsTG5Ob1lXUnZkMU5wWkdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emFHRmtiM2RUYVdSbElEMGdaUzV6YUdGa2IzZFRhV1JsS1N3Z1pTNXZjR0ZqYVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWIzQmhZMmwwZVNBOUlHVXViM0JoWTJsMGVTa3NJR1V1Wm05eWJXRjBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VabTl5YldGMElEMGdaUzVtYjNKdFlYUXBMQ0JsTG5SeVlXNXpjR0Z5Wlc1MElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRISmhibk53WVhKbGJuUWdQU0JsTG5SeVlXNXpjR0Z5Wlc1MEtTd2daUzVoYkhCb1lWUmxjM1FnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVoYkhCb1lWUmxjM1FnUFNCbExtRnNjR2hoVkdWemRDa3NJR1V1WkdWd2RHaFVaWE4wSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WkdWd2RHaFVaWE4wSUQwZ1pTNWtaWEIwYUZSbGMzUXBMQ0JsTG1SbGNIUm9WM0pwZEdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1a1pYQjBhRmR5YVhSbElEMGdaUzVrWlhCMGFGZHlhWFJsS1N3Z1pTNWpiMnh2Y2xkeWFYUmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZMjlzYjNKWGNtbDBaU0E5SUdVdVkyOXNiM0pYY21sMFpTa3NJR1V1YzNSbGJtTnBiRmR5YVhSbElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzUmxibU5wYkZkeWFYUmxJRDBnWlM1emRHVnVZMmxzVjNKcGRHVXBMQ0JsTG5OMFpXNWphV3hYY21sMFpVMWhjMnNnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6ZEdWdVkybHNWM0pwZEdWTllYTnJJRDBnWlM1emRHVnVZMmxzVjNKcGRHVk5ZWE5yS1N3Z1pTNXpkR1Z1WTJsc1JuVnVZeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk4wWlc1amFXeEdkVzVqSUQwZ1pTNXpkR1Z1WTJsc1JuVnVZeWtzSUdVdWMzUmxibU5wYkZKbFppQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTjBaVzVqYVd4U1pXWWdQU0JsTG5OMFpXNWphV3hTWldZcExDQmxMbk4wWlc1amFXeEdkVzVqVFdGemF5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTjBaVzVqYVd4R2RXNWpUV0Z6YXlBOUlHVXVjM1JsYm1OcGJFWjFibU5OWVhOcktTd2daUzV6ZEdWdVkybHNSbUZwYkNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5OMFpXNWphV3hHWVdsc0lEMGdaUzV6ZEdWdVkybHNSbUZwYkNrc0lHVXVjM1JsYm1OcGJGcEdZV2xzSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzNSbGJtTnBiRnBHWVdsc0lEMGdaUzV6ZEdWdVkybHNXa1poYVd3cExDQmxMbk4wWlc1amFXeGFVR0Z6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5OMFpXNWphV3hhVUdGemN5QTlJR1V1YzNSbGJtTnBiRnBRWVhOektTd2daUzUzYVhKbFpuSmhiV1VnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUzYVhKbFpuSmhiV1VnUFNCbExuZHBjbVZtY21GdFpTa3NJR1V1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3BMQ0JsTG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUzYVhKbFpuSmhiV1ZNYVc1bFkyRndJRDBnWlM1M2FYSmxabkpoYldWTWFXNWxZMkZ3S1N3Z1pTNTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuZHBjbVZtY21GdFpVeHBibVZxYjJsdUlEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaWtzSUdVdWNtOTBZWFJwYjI0Z0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1eWIzUmhkR2x2YmlBOUlHVXVjbTkwWVhScGIyNHBMQ0JsTG14cGJtVjNhV1IwYUNBaFBUMGdNU0FtSmlBb2FTNXNhVzVsZDJsa2RHZ2dQU0JsTG14cGJtVjNhV1IwYUNrc0lHVXVaR0Z6YUZOcGVtVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWtZWE5vVTJsNlpTQTlJR1V1WkdGemFGTnBlbVVwTENCbExtZGhjRk5wZW1VZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bllYQlRhWHBsSUQwZ1pTNW5ZWEJUYVhwbEtTd2daUzV6WTJGc1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTmpZV3hsSUQwZ1pTNXpZMkZzWlNrc0lHVXVjRzlzZVdkdmJrOW1abk5sZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5CdmJIbG5iMjVQWm1aelpYUWdQU0JsTG5CdmJIbG5iMjVQWm1aelpYUXBMQ0JsTG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1d2IyeDVaMjl1VDJabWMyVjBSbUZqZEc5eUlEMGdaUzV3YjJ4NVoyOXVUMlptYzJWMFJtRmpkRzl5S1N3Z1pTNXdiMng1WjI5dVQyWm1jMlYwVlc1cGRITWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXdiMng1WjI5dVQyWm1jMlYwVlc1cGRITWdQU0JsTG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lrc0lHVXVaR2wwYUdWeWFXNW5JQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaR2wwYUdWeWFXNW5JRDBnWlM1a2FYUm9aWEpwYm1jcExDQmxMbUZzY0doaFZHOURiM1psY21GblpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtRnNjR2hoVkc5RGIzWmxjbUZuWlNBOUlHVXVZV3h3YUdGVWIwTnZkbVZ5WVdkbEtTd2daUzV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VnUFNCbExuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTa3NJR1V1ZG1semFXSnNaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMblpwYzJsaWJHVWdQU0JsTG5acGMybGliR1VwTENCbExuUnZibVZOWVhCd1pXUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTBiMjVsVFdGd2NHVmtJRDBnWlM1MGIyNWxUV0Z3Y0dWa0tTd2daUzUxYzJWeVJHRjBZU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMblZ6WlhKRVlYUmhJRDBnWlM1MWMyVnlSR0YwWVNrc0lHVXVkbVZ5ZEdWNFEyOXNiM0p6SUNFOVBTQjJiMmxrSURBZ0ppWWdLSFI1Y0dWdlppQmxMblpsY25SbGVFTnZiRzl5Y3lBOVBTQWliblZ0WW1WeUlpQS9JR2t1ZG1WeWRHVjRRMjlzYjNKeklEMGdaUzUyWlhKMFpYaERiMnh2Y25NZ1BpQXdJRG9nYVM1MlpYSjBaWGhEYjJ4dmNuTWdQU0JsTG5abGNuUmxlRU52Ykc5eWN5a3NJR1V1ZFc1cFptOXliWE1nSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCeUlHbHVJR1V1ZFc1cFptOXliWE1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHVXVkVzVwWm05eWJYTmJjbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNocExuVnVhV1p2Y20xelczSmRJRDBnZTMwc0lHOHVkSGx3WlNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0owSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMblZ1YVdadmNtMXpXM0pkTG5aaGJIVmxJRDBnYmlodkxuWmhiSFZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbU1pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VkVzVwWm05eWJYTmJjbDB1ZG1Gc2RXVWdQU0J1WlhjZ1lXVW9LUzV6WlhSSVpYZ29ieTUyWVd4MVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKMk1pSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1MWJtbG1iM0p0YzF0eVhTNTJZV3gxWlNBOUlHNWxkeUJZS0NrdVpuSnZiVUZ5Y21GNUtHOHVkbUZzZFdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpZGpNaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1ZFc1cFptOXliWE5iY2wwdWRtRnNkV1VnUFNCdVpYY2dUU2dwTG1aeWIyMUJjbkpoZVNodkxuWmhiSFZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJblkwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMblZ1YVdadmNtMXpXM0pkTG5aaGJIVmxJRDBnYm1WM0lGWmxLQ2t1Wm5KdmJVRnljbUY1S0c4dWRtRnNkV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWliVE1pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VkVzVwWm05eWJYTmJjbDB1ZG1Gc2RXVWdQU0J1WlhjZ2JIUW9LUzVtY205dFFYSnlZWGtvYnk1MllXeDFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSnROQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNTFibWxtYjNKdGMxdHlYUzUyWVd4MVpTQTlJRzVsZHlCd1pTZ3BMbVp5YjIxQmNuSmhlU2h2TG5aaGJIVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1MWJtbG1iM0p0YzF0eVhTNTJZV3gxWlNBOUlHOHVkbUZzZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVaR1ZtYVc1bGN5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExtUmxabWx1WlhNZ1BTQmxMbVJsWm1sdVpYTXBMQ0JsTG5abGNuUmxlRk5vWVdSbGNpQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuWmxjblJsZUZOb1lXUmxjaUE5SUdVdWRtVnlkR1Y0VTJoaFpHVnlLU3dnWlM1bWNtRm5iV1Z1ZEZOb1lXUmxjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVp5WVdkdFpXNTBVMmhoWkdWeUlEMGdaUzVtY21GbmJXVnVkRk5vWVdSbGNpa3NJR1V1WlhoMFpXNXphVzl1Y3lBaFBUMGdkbTlwWkNBd0tTQm1iM0lvYkdWMElISWdhVzRnWlM1bGVIUmxibk5wYjI1ektXa3VaWGgwWlc1emFXOXVjMXR5WFNBOUlHVXVaWGgwWlc1emFXOXVjMXR5WFRzS0lDQWdJQ0FnSUNCcFppQW9aUzV6YUdGa2FXNW5JQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VabXhoZEZOb1lXUnBibWNnUFNCbExuTm9ZV1JwYm1jZ1BUMDlJREVwTENCbExuTnBlbVVnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YVhwbElEMGdaUzV6YVhwbEtTd2daUzV6YVhwbFFYUjBaVzUxWVhScGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXphWHBsUVhSMFpXNTFZWFJwYjI0Z1BTQmxMbk5wZW1WQmRIUmxiblZoZEdsdmJpa3NJR1V1YldGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWJXRndJRDBnYmlobExtMWhjQ2twTENCbExtMWhkR05oY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG0xaGRHTmhjQ0E5SUc0b1pTNXRZWFJqWVhBcEtTd2daUzVoYkhCb1lVMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUZzY0doaFRXRndJRDBnYmlobExtRnNjR2hoVFdGd0tTa3NJR1V1WW5WdGNFMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUoxYlhCTllYQWdQU0J1S0dVdVluVnRjRTFoY0NrcExDQmxMbUoxYlhCVFkyRnNaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUoxYlhCVFkyRnNaU0E5SUdVdVluVnRjRk5qWVd4bEtTd2daUzV1YjNKdFlXeE5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV1YjNKdFlXeE5ZWEFnUFNCdUtHVXVibTl5YldGc1RXRndLU2tzSUdVdWJtOXliV0ZzVFdGd1ZIbHdaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQmxMbTV2Y20xaGJFMWhjRlI1Y0dVcExDQmxMbTV2Y20xaGJGTmpZV3hsSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISWdQU0JsTG01dmNtMWhiRk5qWVd4bE93b2dJQ0FnSUNBZ0lDQWdJQ0JCY25KaGVTNXBjMEZ5Y21GNUtISXBJRDA5UFNBaE1TQW1KaUFvY2lBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlDaUFnSUNBZ0lDQWdJQ0FnSUYwcExDQnBMbTV2Y20xaGJGTmpZV3hsSUQwZ2JtVjNJRmdvS1M1bWNtOXRRWEp5WVhrb2NpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtUnBjM0JzWVdObGJXVnVkRTFoY0NBOUlHNG9aUzVrYVhOd2JHRmpaVzFsYm5STllYQXBLU3dnWlM1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ1pTNWthWE53YkdGalpXMWxiblJUWTJGc1pTa3NJR1V1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0JsTG1ScGMzQnNZV05sYldWdWRFSnBZWE1wTENCbExuSnZkV2RvYm1WemMwMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkp2ZFdkb2JtVnpjMDFoY0NBOUlHNG9aUzV5YjNWbmFHNWxjM05OWVhBcEtTd2daUzV0WlhSaGJHNWxjM05OWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1dFpYUmhiRzVsYzNOTllYQWdQU0J1S0dVdWJXVjBZV3h1WlhOelRXRndLU2tzSUdVdVpXMXBjM05wZG1WTllYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWxiV2x6YzJsMlpVMWhjQ0E5SUc0b1pTNWxiV2x6YzJsMlpVMWhjQ2twTENCbExtVnRhWE56YVhabFNXNTBaVzV6YVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ1BTQmxMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVLU3dnWlM1emNHVmpkV3hoY2sxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTndaV04xYkdGeVRXRndJRDBnYmlobExuTndaV04xYkdGeVRXRndLU2tzSUdVdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0E5SUc0b1pTNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ2twTENCbExuTndaV04xYkdGeVEyOXNiM0pOWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emNHVmpkV3hoY2tOdmJHOXlUV0Z3SUQwZ2JpaGxMbk53WldOMWJHRnlRMjlzYjNKTllYQXBLU3dnWlM1bGJuWk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVsYm5aTllYQWdQU0J1S0dVdVpXNTJUV0Z3S1Nrc0lHVXVaVzUyVFdGd1NXNTBaVzV6YVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpXNTJUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNWxiblpOWVhCSmJuUmxibk5wZEhrcExDQmxMbkpsWm14bFkzUnBkbWwwZVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5KbFpteGxZM1JwZG1sMGVTQTlJR1V1Y21WbWJHVmpkR2wyYVhSNUtTd2daUzV5WldaeVlXTjBhVzl1VW1GMGFXOGdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXlaV1p5WVdOMGFXOXVVbUYwYVc4Z1BTQmxMbkpsWm5KaFkzUnBiMjVTWVhScGJ5a3NJR1V1YkdsbmFIUk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVzYVdkb2RFMWhjQ0E5SUc0b1pTNXNhV2RvZEUxaGNDa3BMQ0JsTG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNCbExteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUtTd2daUzVoYjAxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtRnZUV0Z3SUQwZ2JpaGxMbUZ2VFdGd0tTa3NJR1V1WVc5TllYQkpiblJsYm5OcGRIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWhiMDFoY0VsdWRHVnVjMmwwZVNBOUlHVXVZVzlOWVhCSmJuUmxibk5wZEhrcExDQmxMbWR5WVdScFpXNTBUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WjNKaFpHbGxiblJOWVhBZ1BTQnVLR1V1WjNKaFpHbGxiblJOWVhBcEtTd2daUzVqYkdWaGNtTnZZWFJOWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1amJHVmhjbU52WVhSTllYQWdQU0J1S0dVdVkyeGxZWEpqYjJGMFRXRndLU2tzSUdVdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUQwZ2JpaGxMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NrcExDQmxMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ0E5SUc0b1pTNWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQXBLU3dnWlM1amJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxJRDBnYm1WM0lGZ29LUzVtY205dFFYSnlZWGtvWlM1amJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pTa3BMQ0JsTG5SeVlXNXpiV2x6YzJsdmJrMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMblJ5WVc1emJXbHpjMmx2YmsxaGNDQTlJRzRvWlM1MGNtRnVjMjFwYzNOcGIyNU5ZWEFwS1N3Z1pTNTBhR2xqYTI1bGMzTk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUwYUdsamEyNWxjM05OWVhBZ1BTQnVLR1V1ZEdocFkydHVaWE56VFdGd0tTa3NJR1V1YzJobFpXNURiMnh2Y2sxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTm9aV1Z1UTI5c2IzSk5ZWEFnUFNCdUtHVXVjMmhsWlc1RGIyeHZjazFoY0NrcExDQmxMbk5vWldWdVVtOTFaMmh1WlhOelRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMmhsWlc1U2IzVm5hRzVsYzNOTllYQWdQU0J1S0dVdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBcEtTd2dhVHNLSUNBZ0lIMEtJQ0FnSUhObGRGUmxlSFIxY21WektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MFpYaDBkWEpsY3lBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q24wc0lFZHpJRDBnWTJ4aGMzTWdld29nSUNBZ2MzUmhkR2xqSUdSbFkyOWtaVlJsZUhRb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnVkdWNGRFUmxZMjlrWlhJZ1BDQWlkU0lwSUhKbGRIVnliaUJ1WlhjZ1ZHVjRkRVJsWTI5a1pYSW9LUzVrWldOdlpHVW9aU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0FpSWpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ1pTNXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3BkQ0FyUFNCVGRISnBibWN1Wm5KdmJVTm9ZWEpEYjJSbEtHVmJibDBwT3dvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJrWldOdlpHVlZVa2xEYjIxd2IyNWxiblFvWlhOallYQmxLSFFwS1RzS0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJsZUhSeVlXTjBWWEpzUW1GelpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG14aGMzUkpibVJsZUU5bUtDSXZJaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnUFQwOUlDMHhJRDhnSWk0dklpQTZJR1V1YzNWaWMzUnlLREFzSUhRZ0t5QXhLVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJ5WlhOdmJIWmxWVkpNS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSGx3Wlc5bUlHVWdJVDBnSW5OMGNtbHVaeUlnZkh3Z1pTQTlQVDBnSWlJZ1B5QWlJaUE2SUNndlhtaDBkSEJ6UHpwY0wxd3ZMMmt1ZEdWemRDaDBLU0FtSmlBdlhsd3ZMeTUwWlhOMEtHVXBJQ1ltSUNoMElEMGdkQzV5WlhCc1lXTmxLQzhvWG1oMGRIQnpQenBjTDF3dlcxNWNMMTByS1M0cUwya3NJQ0lrTVNJcEtTd2dMMTRvYUhSMGNITS9PaWsvWEM5Y0x5OXBMblJsYzNRb1pTa2dmSHdnTDE1a1lYUmhPaTRxTEM0cUpDOXBMblJsYzNRb1pTa2dmSHdnTDE1aWJHOWlPaTRxSkM5cExuUmxjM1FvWlNrZ1B5QmxJRG9nZENBcklHVXBPd29nSUNBZ2ZRcDlMQ0JaWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pKYm5OMFlXNWpaV1JDZFdabVpYSkhaVzl0WlhSeWVTSXNJSFJvYVhNdWFXNXpkR0Z1WTJWRGIzVnVkQ0E5SURFZ0x5QXdPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11YVc1emRHRnVZMlZEYjNWdWRDQTlJR1V1YVc1emRHRnVZMlZEYjNWdWRDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9kR2hwY3lrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWFXNXpkR0Z1WTJWRGIzVnVkQ0E5SUhSb2FYTXVhVzV6ZEdGdVkyVkRiM1Z1ZEN3Z1pTNXBjMGx1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUlEMGdJVEFzSUdVN0NpQWdJQ0I5Q24wN0NsbGhMbkJ5YjNSdmRIbHdaUzVwYzBsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVJRDBnSVRBN0NuWmhjaUJWYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzYjJGa0tHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNc0lHOGdQU0J1WlhjZ1dYUW9jaTV0WVc1aFoyVnlLVHNLSUNBZ0lDQWdJQ0J2TG5ObGRGQmhkR2dvY2k1d1lYUm9LU3dnYnk1elpYUlNaWEYxWlhOMFNHVmhaR1Z5S0hJdWNtVnhkV1Z6ZEVobFlXUmxjaWtzSUc4dWMyVjBWMmwwYUVOeVpXUmxiblJwWVd4ektISXVkMmwwYUVOeVpXUmxiblJwWVd4ektTd2dieTVzYjJGa0tHVXNJR1oxYm1OMGFXOXVLR0VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRb2NpNXdZWEp6WlNoS1UwOU9MbkJoY25ObEtHRXBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUHlCcEtHd3BJRG9nWTI5dWMyOXNaUzVsY25KdmNpaHNLU3dnY2k1dFlXNWhaMlZ5TG1sMFpXMUZjbkp2Y2lobEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0lHNHNJR2twT3dvZ0lDQWdmUW9nSUNBZ2NHRnljMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2UzMHNJRzRnUFNCN2ZUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnBLR1lzSUcwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUmJiVjBnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUhSYmJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnWmk1cGJuUmxjbXhsWVhabFpFSjFabVpsY25OYmJWMHNJR2NnUFNCeUtHWXNJSFl1WW5WbVptVnlLU3dnY0NBOUlIZHBLSFl1ZEhsd1pTd2daeWtzSUY4Z1BTQnVaWGNnSkc0b2NDd2dkaTV6ZEhKcFpHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWHk1MWRXbGtJRDBnZGk1MWRXbGtMQ0IwVzIxZElEMGdYeXdnWHpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2NpaG1MQ0J0S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodVcyMWRJQ0U5UFNCMmIybGtJREFwSUhKbGRIVnliaUJ1VzIxZE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJR1l1WVhKeVlYbENkV1ptWlhKelcyMWRMQ0JuSUQwZ2JtVjNJRlZwYm5Rek1rRnljbUY1S0hZcExtSjFabVpsY2pzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWJiVjBnUFNCbkxDQm5Pd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1V1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpIWlc5dFpYUnllU0EvSUc1bGR5QlpZU0E2SUc1bGR5QmZaU3dnWVNBOUlHVXVaR0YwWVM1cGJtUmxlRHNLSUNBZ0lDQWdJQ0JwWmlBb1lTQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2Qya29ZUzUwZVhCbExDQmhMbUZ5Y21GNUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYnk1elpYUkpibVJsZUNodVpYY2dWV1VvWml3Z01Ta3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR1V1WkdGMFlTNWhkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaaUJwYmlCc0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0JzVzJaZExDQjRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iUzVwYzBsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUdrb1pTNWtZWFJoTENCdExtUmhkR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUNBOUlHNWxkeUJUYmloMkxDQnRMbWwwWlcxVGFYcGxMQ0J0TG05bVpuTmxkQ3dnYlM1dWIzSnRZV3hwZW1Wa0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdkMmtvYlM1MGVYQmxMQ0J0TG1GeWNtRjVLU3dnWnlBOUlHMHVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVWdQeUJZYmlBNklGVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ0E5SUc1bGR5Qm5LSFlzSUcwdWFYUmxiVk5wZW1Vc0lHMHVibTl5YldGc2FYcGxaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYlM1dVlXMWxJQ0U5UFNCMmIybGtJREFnSmlZZ0tIZ3VibUZ0WlNBOUlHMHVibUZ0WlNrc0lHMHVkWE5oWjJVZ0lUMDlJSFp2YVdRZ01DQW1KaUI0TG5ObGRGVnpZV2RsS0cwdWRYTmhaMlVwTENCdExuVndaR0YwWlZKaGJtZGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tIZ3VkWEJrWVhSbFVtRnVaMlV1YjJabWMyVjBJRDBnYlM1MWNHUmhkR1ZTWVc1blpTNXZabVp6WlhRc0lIZ3VkWEJrWVhSbFVtRnVaMlV1WTI5MWJuUWdQU0J0TG5Wd1pHRjBaVkpoYm1kbExtTnZkVzUwS1N3Z2J5NXpaWFJCZEhSeWFXSjFkR1VvWml3Z2VDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCaklEMGdaUzVrWVhSaExtMXZjbkJvUVhSMGNtbGlkWFJsY3pzS0lDQWdJQ0FnSUNCcFppQW9ZeWtnWm05eUtHeGxkQ0JtSUdsdUlHTXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUdOYlpsMHNJSGdnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IySUQwZ01Dd2daeUE5SUcwdWJHVnVaM1JvT3lCMklEd2daenNnZGlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ2JWdDJYU3dnWHpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdMbWx6U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlHa29aUzVrWVhSaExDQndMbVJoZEdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjhnUFNCdVpYY2dVMjRvZVN3Z2NDNXBkR1Z0VTJsNlpTd2djQzV2Wm1aelpYUXNJSEF1Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ2Qya29jQzUwZVhCbExDQndMbUZ5Y21GNUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JmSUQwZ2JtVjNJRlZsS0hrc0lIQXVhWFJsYlZOcGVtVXNJSEF1Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd0xtNWhiV1VnSVQwOUlIWnZhV1FnTUNBbUppQW9YeTV1WVcxbElEMGdjQzV1WVcxbEtTd2dlQzV3ZFhOb0tGOHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRzh1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpXMlpkSUQwZ2VEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdaUzVrWVhSaExtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJQ1ltSUNodkxtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJRDBnSVRBcE93b2dJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ1pTNWtZWFJoTG1keWIzVndjeUI4ZkNCbExtUmhkR0V1WkhKaGQyTmhiR3h6SUh4OElHVXVaR0YwWVM1dlptWnpaWFJ6T3dvZ0lDQWdJQ0FnSUdsbUlDaDFJQ0U5UFNCMmIybGtJREFwSUdadmNpaHNaWFFnWmlBOUlEQXNJRzBnUFNCMUxteGxibWQwYURzZ1ppQWhQVDBnYlRzZ0t5dG1LWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCMVcyWmRPd29nSUNBZ0lDQWdJQ0FnSUNCdkxtRmtaRWR5YjNWd0tIZ3VjM1JoY25Rc0lIZ3VZMjkxYm5Rc0lIZ3ViV0YwWlhKcFlXeEpibVJsZUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1pTNWtZWFJoTG1KdmRXNWthVzVuVTNCb1pYSmxPd29nSUNBZ0lDQWdJR2xtSUNoa0lDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCdVpYY2dUVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pDNWpaVzUwWlhJZ0lUMDlJSFp2YVdRZ01DQW1KaUJtTG1aeWIyMUJjbkpoZVNoa0xtTmxiblJsY2lrc0lHOHVZbTkxYm1ScGJtZFRjR2hsY21VZ1BTQnVaWGNnUVc0b1ppd2daQzV5WVdScGRYTXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV1WVcxbElDWW1JQ2h2TG01aGJXVWdQU0JsTG01aGJXVXBMQ0JsTG5WelpYSkVZWFJoSUNZbUlDaHZMblZ6WlhKRVlYUmhJRDBnWlM1MWMyVnlSR0YwWVNrc0lHODdDaUFnSUNCOUNuMHNJSFY1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJSFJvYVhNdWNHRjBhQ0E5UFQwZ0lpSWdQeUJIY3k1bGVIUnlZV04wVlhKc1FtRnpaU2hsS1NBNklIUm9hWE11Y0dGMGFEc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyOTFjbU5sVUdGMGFDQTlJSFJvYVhNdWNtVnpiM1Z5WTJWUVlYUm9JSHg4SUc4N0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVpYY2dXWFFvZEdocGN5NXRZVzVoWjJWeUtUc0tJQ0FnSUNBZ0lDQmhMbk5sZEZCaGRHZ29kR2hwY3k1d1lYUm9LU3dnWVM1elpYUlNaWEYxWlhOMFNHVmhaR1Z5S0hSb2FYTXVjbVZ4ZFdWemRFaGxZV1JsY2lrc0lHRXVjMlYwVjJsMGFFTnlaV1JsYm5ScFlXeHpLSFJvYVhNdWQybDBhRU55WldSbGJuUnBZV3h6S1N3Z1lTNXNiMkZrS0dVc0lHWjFibU4wYVc5dUtHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZeUE5SUVwVFQwNHVjR0Z5YzJVb2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0hVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dJVDA5SUhadmFXUWdNQ0FtSmlCcEtIVXBMQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlRwUFltcGxZM1JNYjJGa1pYSTZJRU5oYmlkMElIQmhjbk5sSUNJZ0t5QmxJQ3NnSWk0aUxDQjFMbTFsYzNOaFoyVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ1l5NXRaWFJoWkdGMFlUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHZ2dQVDA5SUhadmFXUWdNQ0I4ZkNCb0xuUjVjR1VnUFQwOUlIWnZhV1FnTUNCOGZDQm9MblI1Y0dVdWRHOU1iM2RsY2tOaGMyVW9LU0E5UFQwZ0ltZGxiMjFsZEhKNUlpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQkRZVzRuZENCc2IyRmtJQ0lnS3lCbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeUxuQmhjbk5sS0dNc0lIUXBPd29nSUNBZ0lDQWdJSDBzSUc0c0lHa3BPd29nSUNBZ2ZRb2dJQ0FnWVhONWJtTWdiRzloWkVGemVXNWpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE1zSUdrZ1BTQjBhR2x6TG5CaGRHZ2dQVDA5SUNJaUlEOGdSM011WlhoMGNtRmpkRlZ5YkVKaGMyVW9aU2tnT2lCMGFHbHpMbkJoZEdnN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmRYSmpaVkJoZEdnZ1BTQjBhR2x6TG5KbGMyOTFjbU5sVUdGMGFDQjhmQ0JwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lGbDBLSFJvYVhNdWJXRnVZV2RsY2lrN0NpQWdJQ0FnSUNBZ2NpNXpaWFJRWVhSb0tIUm9hWE11Y0dGMGFDa3NJSEl1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWgwYUdsekxuSmxjWFZsYzNSSVpXRmtaWElwTENCeUxuTmxkRmRwZEdoRGNtVmtaVzUwYVdGc2N5aDBhR2x6TG5kcGRHaERjbVZrWlc1MGFXRnNjeWs3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JoZDJGcGRDQnlMbXh2WVdSQmMzbHVZeWhsTENCMEtTd2dZU0E5SUVwVFQwNHVjR0Z5YzJVb2J5a3NJR3dnUFNCaExtMWxkR0ZrWVhSaE93b2dJQ0FnSUNBZ0lHbG1JQ2hzSUQwOVBTQjJiMmxrSURBZ2ZId2diQzUwZVhCbElEMDlQU0IyYjJsa0lEQWdmSHdnYkM1MGVYQmxMblJ2VEc5M1pYSkRZWE5sS0NrZ1BUMDlJQ0puWlc5dFpYUnllU0lwSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5T2lCRFlXNG5kQ0JzYjJGa0lDSWdLeUJsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVhkaGFYUWdiaTV3WVhKelpVRnplVzVqS0dFcE93b2dJQ0FnZlFvZ0lDQWdjR0Z5YzJVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXdZWEp6WlVGdWFXMWhkR2x2Ym5Nb1pTNWhibWx0WVhScGIyNXpLU3dnYVNBOUlIUm9hWE11Y0dGeWMyVlRhR0Z3WlhNb1pTNXphR0Z3WlhNcExDQnlJRDBnZEdocGN5NXdZWEp6WlVkbGIyMWxkSEpwWlhNb1pTNW5aVzl0WlhSeWFXVnpMQ0JwS1N3Z2J5QTlJSFJvYVhNdWNHRnljMlZKYldGblpYTW9aUzVwYldGblpYTXNJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBJQ0U5UFNCMmIybGtJREFnSmlZZ2RDaGpLVHNLSUNBZ0lDQWdJQ0I5S1N3Z1lTQTlJSFJvYVhNdWNHRnljMlZVWlhoMGRYSmxjeWhsTG5SbGVIUjFjbVZ6TENCdktTd2diQ0E5SUhSb2FYTXVjR0Z5YzJWTllYUmxjbWxoYkhNb1pTNXRZWFJsY21saGJITXNJR0VwTENCaklEMGdkR2hwY3k1d1lYSnpaVTlpYW1WamRDaGxMbTlpYW1WamRDd2djaXdnYkN3Z1lTd2diaWtzSUdnZ1BTQjBhR2x6TG5CaGNuTmxVMnRsYkdWMGIyNXpLR1V1YzJ0bGJHVjBiMjV6TENCaktUc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWlhVzVrVTJ0bGJHVjBiMjV6S0dNc0lHZ3BMQ0IwSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0FoTVRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmtJR2x1SUc4cGFXWWdLRzliWkYwZ2FXNXpkR0Z1WTJWdlppQklWRTFNU1cxaFoyVkZiR1Z0Wlc1MEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFJRDBnSVRBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IxSUQwOVBTQWhNU0FtSmlCMEtHTXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZenNLSUNBZ0lIMEtJQ0FnSUdGemVXNWpJSEJoY25ObFFYTjVibU1vWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV3WVhKelpVRnVhVzFoZEdsdmJuTW9aUzVoYm1sdFlYUnBiMjV6S1N3Z2JpQTlJSFJvYVhNdWNHRnljMlZUYUdGd1pYTW9aUzV6YUdGd1pYTXBMQ0JwSUQwZ2RHaHBjeTV3WVhKelpVZGxiMjFsZEhKcFpYTW9aUzVuWlc5dFpYUnlhV1Z6TENCdUtTd2djaUE5SUdGM1lXbDBJSFJvYVhNdWNHRnljMlZKYldGblpYTkJjM2x1WXlobExtbHRZV2RsY3lrc0lHOGdQU0IwYUdsekxuQmhjbk5sVkdWNGRIVnlaWE1vWlM1MFpYaDBkWEpsY3l3Z2Npa3NJR0VnUFNCMGFHbHpMbkJoY25ObFRXRjBaWEpwWVd4ektHVXViV0YwWlhKcFlXeHpMQ0J2S1N3Z2JDQTlJSFJvYVhNdWNHRnljMlZQWW1wbFkzUW9aUzV2WW1wbFkzUXNJR2tzSUdFc0lHOHNJSFFwTENCaklEMGdkR2hwY3k1d1lYSnpaVk5yWld4bGRHOXVjeWhsTG5OclpXeGxkRzl1Y3l3Z2JDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WW1sdVpGTnJaV3hsZEc5dWN5aHNMQ0JqS1N3Z2JEc0tJQ0FnSUgwS0lDQWdJSEJoY25ObFUyaGhjR1Z6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIdDlPd29nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0JsTG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdibVYzSUZoMEtDa3Vabkp2YlVwVFQwNG9aVnR1WFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJiY2k1MWRXbGtYU0E5SUhJN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCME93b2dJQ0FnZlFvZ0lDQWdjR0Z5YzJWVGEyVnNaWFJ2Ym5Nb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZTMwc0lHa2dQU0I3ZlRzS0lDQWdJQ0FnSUNCcFppQW9kQzUwY21GMlpYSnpaU2htZFc1amRHbHZiaWh5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEl1YVhOQ2IyNWxJQ1ltSUNocFczSXVkWFZwWkYwZ1BTQnlLVHNLSUNBZ0lDQWdJQ0I5S1N3Z1pTQWhQVDBnZG05cFpDQXdLU0JtYjNJb2JHVjBJSElnUFNBd0xDQnZJRDBnWlM1c1pXNW5kR2c3SUhJZ1BDQnZPeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzVsZHlCaGJ5Z3BMbVp5YjIxS1UwOU9LR1ZiY2wwc0lHa3BPd29nSUNBZ0lDQWdJQ0FnSUNCdVcyRXVkWFZwWkYwZ1BTQmhPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdianNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxSMlZ2YldWMGNtbGxjeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjdmVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJRlZvT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3TENCdklEMGdaUzVzWlc1bmRHZzdJSElnUENCdk95QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRXNJR3dnUFNCbFczSmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM2RwZEdOb0tHd3VkSGx3WlNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVFuVm1abVZ5UjJWdmJXVjBjbmtpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWtsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZU0E5SUdrdWNHRnljMlVvYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa2RsYjIxbGRISjVJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQlVhR1VnYkdWbllXTjVJRWRsYjIxbGRISjVJSFI1Y0dVZ2FYTWdibThnYkc5dVoyVnlJSE4xY0hCdmNuUmxaQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiQzUwZVhCbElHbHVJSFpqSUQ4Z1lTQTlJSFpqVzJ3dWRIbHdaVjB1Wm5KdmJVcFRUMDRvYkN3Z2RDa2dPaUJqYjI1emIyeGxMbmRoY200b1lGUklVa1ZGTGs5aWFtVmpkRXh2WVdSbGNqb2dWVzV6ZFhCd2IzSjBaV1FnWjJWdmJXVjBjbmtnZEhsd1pTQWlKSHRzTG5SNWNHVjlJbUFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVM1MWRXbGtJRDBnYkM1MWRXbGtMQ0JzTG01aGJXVWdJVDA5SUhadmFXUWdNQ0FtSmlBb1lTNXVZVzFsSUQwZ2JDNXVZVzFsS1N3Z1lTNXBjMEoxWm1abGNrZGxiMjFsZEhKNUlEMDlQU0FoTUNBbUppQnNMblZ6WlhKRVlYUmhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHRXVkWE5sY2tSaGRHRWdQU0JzTG5WelpYSkVZWFJoS1N3Z2JsdHNMblYxYVdSZElEMGdZVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2Jqc0tJQ0FnSUgwS0lDQWdJSEJoY25ObFRXRjBaWEpwWVd4ektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUh0OUxDQnBJRDBnZTMwN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCNmFEc0tJQ0FnSUNBZ0lDQWdJQ0FnY2k1elpYUlVaWGgwZFhKbGN5aDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklEMGdNQ3dnWVNBOUlHVXViR1Z1WjNSb095QnZJRHdnWVRzZ2J5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdaVnR2WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHNMblI1Y0dVZ1BUMDlJQ0pOZFd4MGFVMWhkR1Z5YVdGc0lpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm9JRDBnTURzZ2FDQThJR3d1YldGMFpYSnBZV3h6TG14bGJtZDBhRHNnYUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCc0xtMWhkR1Z5YVdGc2MxdG9YVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibHQxTG5WMWFXUmRJRDA5UFNCMmIybGtJREFnSmlZZ0tHNWJkUzUxZFdsa1hTQTlJSEl1Y0dGeWMyVW9kU2twTENCakxuQjFjMmdvYmx0MUxuVjFhV1JkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVZ0c0xuVjFhV1JkSUQwZ1l6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCdVcyd3VkWFZwWkYwZ1BUMDlJSFp2YVdRZ01DQW1KaUFvYmx0c0xuVjFhV1JkSUQwZ2NpNXdZWEp6WlNoc0tTa3NJR2xiYkM1MWRXbGtYU0E5SUc1YmJDNTFkV2xrWFRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxRVzVwYldGMGFXOXVjeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCN2ZUc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBaFBUMGdkbTlwWkNBd0tTQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEd2daUzVzWlc1bmRHZzdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaVnR1WFN3Z2NpQTlJRXh5TG5CaGNuTmxLR2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBXM0l1ZFhWcFpGMGdQU0J5T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZERzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sU1cxaFoyVnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE1zSUdrZ1BTQjdmU3dnY2pzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdktHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWJXRnVZV2RsY2k1cGRHVnRVM1JoY25Rb2JDa3NJSEl1Ykc5aFpDaHNMQ0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc0dWJXRnVZV2RsY2k1cGRHVnRSVzVrS0d3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TENCMmIybGtJREFzSUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JpNXRZVzVoWjJWeUxtbDBaVzFGY25KdmNpaHNLU3dnYmk1dFlXNWhaMlZ5TG1sMFpXMUZibVFvYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCaEtHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQnNJRDA5SUNKemRISnBibWNpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUd3c0lHZ2dQU0F2WGloY0wxd3ZLWHdvVzJFdGVsMHJPaWhjTDF3dktUOHBMMmt1ZEdWemRDaGpLU0EvSUdNZ09pQnVMbkpsYzI5MWNtTmxVR0YwYUNBcklHTTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2J5aG9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhKbGRIVnliaUJzTG1SaGRHRWdQeUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaE9pQjNhU2hzTG5SNWNHVXNJR3d1WkdGMFlTa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ2JDNTNhV1IwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nYkM1b1pXbG5hSFFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQTZJRzUxYkd3N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hsSUNFOVBTQjJiMmxrSURBZ0ppWWdaUzVzWlc1bmRHZ2dQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdibVYzSUhwaEtIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCeUlEMGdibVYzSUZKeUtHd3BMQ0J5TG5ObGRFTnliM056VDNKcFoybHVLSFJvYVhNdVkzSnZjM05QY21sbmFXNHBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdMQ0JvSUQwZ1pTNXNaVzVuZEdnN0lHTWdQQ0JvT3lCakt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQmxXMk5kTENCa0lEMGdkUzUxY213N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoa0tTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsYmRTNTFkV2xrWFNBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWmlBOUlEQXNJRzBnUFNCa0xteGxibWQwYURzZ1ppQThJRzA3SUdZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ1pGdG1YU3dnZGlBOUlHRW9lQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFlnSVQwOUlHNTFiR3dnSmlZZ0tIWWdhVzV6ZEdGdVkyVnZaaUJJVkUxTVNXMWhaMlZGYkdWdFpXNTBJRDhnYVZ0MUxuVjFhV1JkTG5CMWMyZ29kaWtnT2lCcFczVXVkWFZwWkYwdWNIVnphQ2h1WlhjZ2NXNG9kaTVrWVhSaExDQjJMbmRwWkhSb0xDQjJMbWhsYVdkb2RDa3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ1lTaDFMblZ5YkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaaUFoUFQwZ2JuVnNiQ0FtSmlBb2FWdDFMblYxYVdSZElEMGdaaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHazdDaUFnSUNCOUNpQWdJQ0JoYzNsdVl5QndZWEp6WlVsdFlXZGxjMEZ6ZVc1aktHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNc0lHNGdQU0I3ZlN3Z2FUc0tJQ0FnSUNBZ0lDQmhjM2x1WXlCbWRXNWpkR2x2YmlCeUtHOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQnZJRDA5SUNKemRISnBibWNpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc4c0lHd2dQU0F2WGloY0wxd3ZLWHdvVzJFdGVsMHJPaWhjTDF3dktUOHBMMmt1ZEdWemRDaGhLU0EvSUdFZ09pQjBMbkpsYzI5MWNtTmxVR0YwYUNBcklHRTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lYZGhhWFFnYVM1c2IyRmtRWE41Ym1Nb2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J5WlhSMWNtNGdieTVrWVhSaElEOGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ2Qya29ieTUwZVhCbExDQnZMbVJoZEdFcExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUc4dWQybGtkR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJRzh1YUdWcFoyaDBDaUFnSUNBZ0lDQWdJQ0FnSUgwZ09pQnVkV3hzT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHVXViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBJRDBnYm1WM0lGSnlLSFJvYVhNdWJXRnVZV2RsY2lrc0lHa3VjMlYwUTNKdmMzTlBjbWxuYVc0b2RHaHBjeTVqY205emMwOXlhV2RwYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBc0lHRWdQU0JsTG14bGJtZDBhRHNnYnlBOElHRTdJRzhyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUdWYmIxMHNJR01nUFNCc0xuVnliRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLR01wS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibHRzTG5WMWFXUmRJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm9JRDBnTUN3Z2RTQTlJR011YkdWdVozUm9PeUJvSUR3Z2RUc2dhQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0JqVzJoZExDQm1JRDBnWVhkaGFYUWdjaWhrS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWmlBaFBUMGdiblZzYkNBbUppQW9aaUJwYm5OMFlXNWpaVzltSUVoVVRVeEpiV0ZuWlVWc1pXMWxiblFnUHlCdVcyd3VkWFZwWkYwdWNIVnphQ2htS1NBNklHNWJiQzUxZFdsa1hTNXdkWE5vS0c1bGR5QnhiaWhtTG1SaGRHRXNJR1l1ZDJsa2RHZ3NJR1l1YUdWcFoyaDBLU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQmhkMkZwZENCeUtHd3VkWEpzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9JQ0U5UFNCdWRXeHNJQ1ltSUNodVcyd3VkWFZwWkYwZ1BTQm9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2Jqc0tJQ0FnSUgwS0lDQWdJSEJoY25ObFZHVjRkSFZ5WlhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUc0b2Npd2dieWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RIbHdaVzltSUhJZ1BUMGdJbTUxYldKbGNpSWdQeUJ5SURvZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5TG5CaGNuTmxWR1Y0ZEhWeVpUb2dRMjl1YzNSaGJuUWdjMmh2ZFd4a0lHSmxJR2x1SUc1MWJXVnlhV01nWm05eWJTNGlMQ0J5S1N3Z2IxdHlYU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZTMwN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHVXViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCbFczSmRPd29nSUNBZ0lDQWdJQ0FnSUNCaExtbHRZV2RsSUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NkVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklFNXZJQ0pwYldGblpTSWdjM0JsWTJsbWFXVmtJR1p2Y2ljc0lHRXVkWFZwWkNrc0lIUmJZUzVwYldGblpWMGdQVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZEV4dllXUmxjam9nVlc1a1pXWnBibVZrSUdsdFlXZGxJaXdnWVM1cGJXRm5aU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzTENCaklEMGdkRnRoTG1sdFlXZGxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1FYSnlZWGt1YVhOQmNuSmhlU2hqS1NBL0lDaHNJRDBnYm1WM0lHdHBLR01wTENCakxteGxibWQwYUNBOVBUMGdOaUFtSmlBb2JDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0tTa2dPaUFvWXlBbUppQmpMbVJoZEdFZ1B5QnNJRDBnYm1WM0lIRnVLR011WkdGMFlTd2dZeTUzYVdSMGFDd2dZeTVvWldsbmFIUXBJRG9nYkNBOUlHNWxkeUJ2ZENoaktTd2dZeUFtSmlBb2JDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0tTa3NJR3d1ZFhWcFpDQTlJR0V1ZFhWcFpDd2dZUzV1WVcxbElDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dWJtRnRaU0E5SUdFdWJtRnRaU2tzSUdFdWJXRndjR2x1WnlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hzTG0xaGNIQnBibWNnUFNCdUtHRXViV0Z3Y0dsdVp5d2daSGtwS1N3Z1lTNXZabVp6WlhRZ0lUMDlJSFp2YVdRZ01DQW1KaUJzTG05bVpuTmxkQzVtY205dFFYSnlZWGtvWVM1dlptWnpaWFFwTENCaExuSmxjR1ZoZENBaFBUMGdkbTlwWkNBd0lDWW1JR3d1Y21Wd1pXRjBMbVp5YjIxQmNuSmhlU2hoTG5KbGNHVmhkQ2tzSUdFdVkyVnVkR1Z5SUNFOVBTQjJiMmxrSURBZ0ppWWdiQzVqWlc1MFpYSXVabkp2YlVGeWNtRjVLR0V1WTJWdWRHVnlLU3dnWVM1eWIzUmhkR2x2YmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hzTG5KdmRHRjBhVzl1SUQwZ1lTNXliM1JoZEdsdmJpa3NJR0V1ZDNKaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xuZHlZWEJUSUQwZ2JpaGhMbmR5WVhCYk1GMHNJRk5qS1N3Z2JDNTNjbUZ3VkNBOUlHNG9ZUzUzY21Gd1d6RmRMQ0JUWXlrcExDQmhMbVp2Y20xaGRDQWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xtWnZjbTFoZENBOUlHRXVabTl5YldGMEtTd2dZUzUwZVhCbElDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dWRIbHdaU0E5SUdFdWRIbHdaU2tzSUdFdVpXNWpiMlJwYm1jZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1bGJtTnZaR2x1WnlBOUlHRXVaVzVqYjJScGJtY3BMQ0JoTG0xcGJrWnBiSFJsY2lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hzTG0xcGJrWnBiSFJsY2lBOUlHNG9ZUzV0YVc1R2FXeDBaWElzSUZSaktTa3NJR0V1YldGblJtbHNkR1Z5SUNFOVBTQjJiMmxrSURBZ0ppWWdLR3d1YldGblJtbHNkR1Z5SUQwZ2JpaGhMbTFoWjBacGJIUmxjaXdnVkdNcEtTd2dZUzVoYm1semIzUnliM0I1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR3d1WVc1cGMyOTBjbTl3ZVNBOUlHRXVZVzVwYzI5MGNtOXdlU2tzSUdFdVpteHBjRmtnSVQwOUlIWnZhV1FnTUNBbUppQW9iQzVtYkdsd1dTQTlJR0V1Wm14cGNGa3BMQ0JoTG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VnSVQwOUlIWnZhV1FnTUNBbUppQW9iQzV3Y21WdGRXeDBhWEJzZVVGc2NHaGhJRDBnWVM1d2NtVnRkV3gwYVhCc2VVRnNjR2hoS1N3Z1lTNTFibkJoWTJ0QmJHbG5ibTFsYm5RZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1MWJuQmhZMnRCYkdsbmJtMWxiblFnUFNCaExuVnVjR0ZqYTBGc2FXZHViV1Z1ZENrc0lHRXVkWE5sY2tSaGRHRWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JDNTFjMlZ5UkdGMFlTQTlJR0V1ZFhObGNrUmhkR0VwTENCcFcyRXVkWFZwWkYwZ1BTQnNPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxUMkpxWldOMEtHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCc1pYUWdienNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJoS0dRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiWkYwZ1BUMDlJSFp2YVdRZ01DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGs5aWFtVmpkRXh2WVdSbGNqb2dWVzVrWldacGJtVmtJR2RsYjIxbGRISjVJaXdnWkNrc0lIUmJaRjA3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUd3b1pDa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9aQ0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoa0tTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnRJRDBnTUN3Z2VDQTlJR1F1YkdWdVozUm9PeUJ0SUR3Z2VEc2diU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0JrVzIxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVczWmRJRDA5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNSTWIyRmtaWEk2SUZWdVpHVm1hVzVsWkNCdFlYUmxjbWxoYkNJc0lIWXBMQ0JtTG5CMWMyZ29ibHQyWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJtT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzViWkYwZ1BUMDlJSFp2YVdRZ01DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGs5aWFtVmpkRXh2WVdSbGNqb2dWVzVrWldacGJtVmtJRzFoZEdWeWFXRnNJaXdnWkNrc0lHNWJaRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdZeWhrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBXMlJkSUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklGVnVaR1ZtYVc1bFpDQjBaWGgwZFhKbElpd2daQ2tzSUdsYlpGMDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCb0xDQjFPd29nSUNBZ0lDQWdJSE4zYVhSamFDaGxMblI1Y0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlRZMlZ1WlNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUc1dkxDQmxMbUpoWTJ0bmNtOTFibVFnSVQwOUlIWnZhV1FnTUNBbUppQW9UblZ0WW1WeUxtbHpTVzUwWldkbGNpaGxMbUpoWTJ0bmNtOTFibVFwSUQ4Z2J5NWlZV05yWjNKdmRXNWtJRDBnYm1WM0lHRmxLR1V1WW1GamEyZHliM1Z1WkNrZ09pQnZMbUpoWTJ0bmNtOTFibVFnUFNCaktHVXVZbUZqYTJkeWIzVnVaQ2twTENCbExtVnVkbWx5YjI1dFpXNTBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVaVzUyYVhKdmJtMWxiblFnUFNCaktHVXVaVzUyYVhKdmJtMWxiblFwS1N3Z1pTNW1iMmNnSVQwOUlIWnZhV1FnTUNBbUppQW9aUzVtYjJjdWRIbHdaU0E5UFQwZ0lrWnZaeUlnUHlCdkxtWnZaeUE5SUc1bGR5QkNjaWhsTG1adlp5NWpiMnh2Y2l3Z1pTNW1iMmN1Ym1WaGNpd2daUzVtYjJjdVptRnlLU0E2SUdVdVptOW5MblI1Y0dVZ1BUMDlJQ0pHYjJkRmVIQXlJaUFtSmlBb2J5NW1iMmNnUFNCdVpYY2dUbklvWlM1bWIyY3VZMjlzYjNJc0lHVXVabTluTG1SbGJuTnBkSGtwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVUdWeWMzQmxZM1JwZG1WRFlXMWxjbUVpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUIxZENobExtWnZkaXdnWlM1aGMzQmxZM1FzSUdVdWJtVmhjaXdnWlM1bVlYSXBMQ0JsTG1adlkzVnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVabTlqZFhNZ1BTQmxMbVp2WTNWektTd2daUzU2YjI5dElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWVtOXZiU0E5SUdVdWVtOXZiU2tzSUdVdVptbHNiVWRoZFdkbElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVptbHNiVWRoZFdkbElEMGdaUzVtYVd4dFIyRjFaMlVwTENCbExtWnBiRzFQWm1aelpYUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NW1hV3h0VDJabWMyVjBJRDBnWlM1bWFXeHRUMlptYzJWMEtTd2daUzUyYVdWM0lDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWRtbGxkeUE5SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdVdWRtbGxkeWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJazl5ZEdodlozSmhjR2hwWTBOaGJXVnlZU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JtVjNJRVp5S0dVdWJHVm1kQ3dnWlM1eWFXZG9kQ3dnWlM1MGIzQXNJR1V1WW05MGRHOXRMQ0JsTG01bFlYSXNJR1V1Wm1GeUtTd2daUzU2YjI5dElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWVtOXZiU0E5SUdVdWVtOXZiU2tzSUdVdWRtbGxkeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMblpwWlhjZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxMblpwWlhjcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKQmJXSnBaVzUwVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QnhZU2hsTG1OdmJHOXlMQ0JsTG1sdWRHVnVjMmwwZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpUkdseVpXTjBhVzl1WVd4TWFXZG9kQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JtVjNJRmRoS0dVdVkyOXNiM0lzSUdVdWFXNTBaVzV6YVhSNUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKUWIybHVkRXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ1IyRW9aUzVqYjJ4dmNpd2daUzVwYm5SbGJuTnBkSGtzSUdVdVpHbHpkR0Z1WTJVc0lHVXVaR1ZqWVhrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxKbFkzUkJjbVZoVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QllZU2hsTG1OdmJHOXlMQ0JsTG1sdWRHVnVjMmwwZVN3Z1pTNTNhV1IwYUN3Z1pTNW9aV2xuYUhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxOd2IzUk1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUVoaEtHVXVZMjlzYjNJc0lHVXVhVzUwWlc1emFYUjVMQ0JsTG1ScGMzUmhibU5sTENCbExtRnVaMnhsTENCbExuQmxiblZ0WW5KaExDQmxMbVJsWTJGNUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKSVpXMXBjM0JvWlhKbFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJWWVNobExtTnZiRzl5TENCbExtZHliM1Z1WkVOdmJHOXlMQ0JsTG1sdWRHVnVjMmwwZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVEdsbmFIUlFjbTlpWlNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUVoeUtDa3Vabkp2YlVwVFQwNG9aU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVMnRwYm01bFpFMWxjMmdpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUNBOUlHRW9aUzVuWlc5dFpYUnllU2tzSUhVZ1BTQnNLR1V1YldGMFpYSnBZV3dwTENCdklEMGdibVYzSUhOdktHZ3NJSFVwTENCbExtSnBibVJOYjJSbElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVltbHVaRTF2WkdVZ1BTQmxMbUpwYm1STmIyUmxLU3dnWlM1aWFXNWtUV0YwY21sNElDRTlQU0IyYjJsa0lEQWdKaVlnYnk1aWFXNWtUV0YwY21sNExtWnliMjFCY25KaGVTaGxMbUpwYm1STllYUnlhWGdwTENCbExuTnJaV3hsZEc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWMydGxiR1YwYjI0Z1BTQmxMbk5yWld4bGRHOXVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSk5aWE5vSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdnZ1BTQmhLR1V1WjJWdmJXVjBjbmtwTENCMUlEMGdiQ2hsTG0xaGRHVnlhV0ZzS1N3Z2J5QTlJRzVsZHlCemRDaG9MQ0IxS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pKYm5OMFlXNWpaV1JOWlhOb0lqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZ2dQU0JoS0dVdVoyVnZiV1YwY25rcExDQjFJRDBnYkNobExtMWhkR1Z5YVdGc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1pTNWpiM1Z1ZEN3Z1ppQTlJR1V1YVc1emRHRnVZMlZOWVhSeWFYZ3NJRzBnUFNCbExtbHVjM1JoYm1ObFEyOXNiM0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JtVjNJSGhoS0dnc0lIVXNJR1FwTENCdkxtbHVjM1JoYm1ObFRXRjBjbWw0SUQwZ2JtVjNJRmh1S0c1bGR5QkdiRzloZERNeVFYSnlZWGtvWmk1aGNuSmhlU2tzSURFMktTd2diU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbWx1YzNSaGJtTmxRMjlzYjNJZ1BTQnVaWGNnV0c0b2JtVjNJRVpzYjJGME16SkJjbkpoZVNodExtRnljbUY1S1N3Z2JTNXBkR1Z0VTJsNlpTa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lreFBSQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JtVjNJR0pvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa3hwYm1VaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCdmJpaGhLR1V1WjJWdmJXVjBjbmtwTENCc0tHVXViV0YwWlhKcFlXd3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSk1hVzVsVEc5dmNDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYm1WM0lIbGhLR0VvWlM1blpXOXRaWFJ5ZVNrc0lHd29aUzV0WVhSbGNtbGhiQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa3hwYm1WVFpXZHRaVzUwY3lJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUhkMEtHRW9aUzVuWlc5dFpYUnllU2tzSUd3b1pTNXRZWFJsY21saGJDa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsQnZhVzUwUTJ4dmRXUWlPZ29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pRYjJsdWRITWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QjZjaWhoS0dVdVoyVnZiV1YwY25rcExDQnNLR1V1YldGMFpYSnBZV3dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pUY0hKcGRHVWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QnlieWhzS0dVdWJXRjBaWEpwWVd3cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKSGNtOTFjQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JtVjNJRWh1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa0p2Ym1VaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCdmJ6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCT1pUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0c4dWRYVnBaQ0E5SUdVdWRYVnBaQ3dnWlM1dVlXMWxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVibUZ0WlNBOUlHVXVibUZ0WlNrc0lHVXViV0YwY21sNElDRTlQU0IyYjJsa0lEQWdQeUFvYnk1dFlYUnlhWGd1Wm5KdmJVRnljbUY1S0dVdWJXRjBjbWw0S1N3Z1pTNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlHVXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTa3NJRzh1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0FtSmlCdkxtMWhkSEpwZUM1a1pXTnZiWEJ2YzJVb2J5NXdiM05wZEdsdmJpd2dieTV4ZFdGMFpYSnVhVzl1TENCdkxuTmpZV3hsS1NrZ09pQW9aUzV3YjNOcGRHbHZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVjRzl6YVhScGIyNHVabkp2YlVGeWNtRjVLR1V1Y0c5emFYUnBiMjRwTENCbExuSnZkR0YwYVc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnYnk1eWIzUmhkR2x2Ymk1bWNtOXRRWEp5WVhrb1pTNXliM1JoZEdsdmJpa3NJR1V1Y1hWaGRHVnlibWx2YmlBaFBUMGdkbTlwWkNBd0lDWW1JRzh1Y1hWaGRHVnlibWx2Ymk1bWNtOXRRWEp5WVhrb1pTNXhkV0YwWlhKdWFXOXVLU3dnWlM1elkyRnNaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVjMk5oYkdVdVpuSnZiVUZ5Y21GNUtHVXVjMk5oYkdVcEtTd2daUzVqWVhOMFUyaGhaRzkzSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1WTJGemRGTm9ZV1J2ZHlBOUlHVXVZMkZ6ZEZOb1lXUnZkeWtzSUdVdWNtVmpaV2wyWlZOb1lXUnZkeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbkpsWTJWcGRtVlRhR0ZrYjNjZ1BTQmxMbkpsWTJWcGRtVlRhR0ZrYjNjcExDQmxMbk5vWVdSdmR5QW1KaUFvWlM1emFHRmtiM2N1WW1saGN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodkxuTm9ZV1J2ZHk1aWFXRnpJRDBnWlM1emFHRmtiM2N1WW1saGN5a3NJR1V1YzJoaFpHOTNMbTV2Y20xaGJFSnBZWE1nSVQwOUlIWnZhV1FnTUNBbUppQW9ieTV6YUdGa2IzY3VibTl5YldGc1FtbGhjeUE5SUdVdWMyaGhaRzkzTG01dmNtMWhiRUpwWVhNcExDQmxMbk5vWVdSdmR5NXlZV1JwZFhNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1emFHRmtiM2N1Y21Ga2FYVnpJRDBnWlM1emFHRmtiM2N1Y21Ga2FYVnpLU3dnWlM1emFHRmtiM2N1YldGd1UybDZaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVjMmhoWkc5M0xtMWhjRk5wZW1VdVpuSnZiVUZ5Y21GNUtHVXVjMmhoWkc5M0xtMWhjRk5wZW1VcExDQmxMbk5vWVdSdmR5NWpZVzFsY21FZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1emFHRmtiM2N1WTJGdFpYSmhJRDBnZEdocGN5NXdZWEp6WlU5aWFtVmpkQ2hsTG5Ob1lXUnZkeTVqWVcxbGNtRXBLU2tzSUdVdWRtbHphV0pzWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG5acGMybGliR1VnUFNCbExuWnBjMmxpYkdVcExDQmxMbVp5ZFhOMGRXMURkV3hzWldRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnWlM1bWNuVnpkSFZ0UTNWc2JHVmtLU3dnWlM1eVpXNWtaWEpQY21SbGNpQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxuSmxibVJsY2s5eVpHVnlJRDBnWlM1eVpXNWtaWEpQY21SbGNpa3NJR1V1ZFhObGNrUmhkR0VnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTUxYzJWeVJHRjBZU0E5SUdVdWRYTmxja1JoZEdFcExDQmxMbXhoZVdWeWN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodkxteGhlV1Z5Y3k1dFlYTnJJRDBnWlM1c1lYbGxjbk1wTENCbExtTm9hV3hrY21WdUlDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCbExtTm9hV3hrY21WdU93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1lnUFNBd095Qm1JRHdnWkM1c1pXNW5kR2c3SUdZckt5bHZMbUZrWkNoMGFHbHpMbkJoY25ObFQySnFaV04wS0dSYlpsMHNJSFFzSUc0c0lHa3NJSElwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1V1WVc1cGJXRjBhVzl1Y3lBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWlM1aGJtbHRZWFJwYjI1ek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1lnUFNBd095Qm1JRHdnWkM1c1pXNW5kR2c3SUdZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlHUmJabDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2TG1GdWFXMWhkR2x2Ym5NdWNIVnphQ2h5VzIxZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aUzUwZVhCbElEMDlQU0FpVEU5RUlpa2dld29nSUNBZ0lDQWdJQ0FnSUNCbExtRjFkRzlWY0dSaGRHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NWhkWFJ2VlhCa1lYUmxJRDBnWlM1aGRYUnZWWEJrWVhSbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0JsTG14bGRtVnNjenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbUlEMGdNRHNnWmlBOElHUXViR1Z1WjNSb095Qm1LeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0JrVzJaZExDQjRJRDBnYnk1blpYUlBZbXBsWTNSQ2VWQnliM0JsY25SNUtDSjFkV2xrSWl3Z2JTNXZZbXBsWTNRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDQWhQVDBnZG05cFpDQXdJQ1ltSUc4dVlXUmtUR1YyWld3b2VDd2diUzVrYVhOMFlXNWpaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHODdDaUFnSUNCOUNpQWdJQ0JpYVc1a1UydGxiR1YwYjI1ektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCUFltcGxZM1F1YTJWNWN5aDBLUzVzWlc1bmRHZ2dJVDA5SURBZ0ppWWdaUzUwY21GMlpYSnpaU2htZFc1amRHbHZiaWh1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUxtbHpVMnRwYm01bFpFMWxjMmdnUFQwOUlDRXdJQ1ltSUc0dWMydGxiR1YwYjI0Z0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBXMjR1YzJ0bGJHVjBiMjVkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBOVBUMGdkbTlwWkNBd0lEOGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklFNXZJSE5yWld4bGRHOXVJR1p2ZFc1a0lIZHBkR2dnVlZWSlJEb2lMQ0J1TG5OclpXeGxkRzl1S1NBNklHNHVZbWx1WkNocExDQnVMbUpwYm1STllYUnlhWGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDaUFnSUNCelpYUlVaWGgwZFhKbFVHRjBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wVEc5aFpHVnlPaUF1YzJWMFZHVjRkSFZ5WlZCaGRHZ29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1elpYUlNaWE52ZFhKalpWQmhkR2dvS1M0aUtTd2dkR2hwY3k1elpYUlNaWE52ZFhKalpWQmhkR2dvWlNrN0NpQWdJQ0I5Q24wc0lHUjVJRDBnZXdvZ0lDQWdWVlpOWVhCd2FXNW5PaUJvWVN3S0lDQWdJRU4xWW1WU1pXWnNaV04wYVc5dVRXRndjR2x1WnpvZ1Fta3NDaUFnSUNCRGRXSmxVbVZtY21GamRHbHZiazFoY0hCcGJtYzZJSHBwTEFvZ0lDQWdSWEYxYVhKbFkzUmhibWQxYkdGeVVtVm1iR1ZqZEdsdmJrMWhjSEJwYm1jNklFUnpMQW9nSUNBZ1JYRjFhWEpsWTNSaGJtZDFiR0Z5VW1WbWNtRmpkR2x2YmsxaGNIQnBibWM2SUVaekxBb2dJQ0FnUTNWaVpWVldVbVZtYkdWamRHbHZiazFoY0hCcGJtYzZJRkJ5TEFvZ0lDQWdRM1ZpWlZWV1VtVm1jbUZqZEdsdmJrMWhjSEJwYm1jNklGZHpDbjBzSUZOaklEMGdld29nSUNBZ1VtVndaV0YwVjNKaGNIQnBibWM2SUU1ekxBb2dJQ0FnUTJ4aGJYQlViMFZrWjJWWGNtRndjR2x1WnpvZ2RuUXNDaUFnSUNCTmFYSnliM0psWkZKbGNHVmhkRmR5WVhCd2FXNW5PaUJDY3dwOUxDQlVZeUE5SUhzS0lDQWdJRTVsWVhKbGMzUkdhV3gwWlhJNklISjBMQW9nSUNBZ1RtVmhjbVZ6ZEUxcGNHMWhjRTVsWVhKbGMzUkdhV3gwWlhJNklIUmhMQW9nSUNBZ1RtVmhjbVZ6ZEUxcGNHMWhjRXhwYm1WaGNrWnBiSFJsY2pvZ2JtRXNDaUFnSUNCTWFXNWxZWEpHYVd4MFpYSTZJSFIwTEFvZ0lDQWdUR2x1WldGeVRXbHdiV0Z3VG1WaGNtVnpkRVpwYkhSbGNqb2dWMk1zQ2lBZ0lDQk1hVzVsWVhKTmFYQnRZWEJNYVc1bFlYSkdhV3gwWlhJNklGVnBDbjBzSUU5b0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lDQWdJQ0IwZVhCbGIyWWdZM0psWVhSbFNXMWhaMlZDYVhSdFlYQWdQaUFpZFNJZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYldGblpVSnBkRzFoY0V4dllXUmxjam9nWTNKbFlYUmxTVzFoWjJWQ2FYUnRZWEFvS1NCdWIzUWdjM1Z3Y0c5eWRHVmtMaUlwTENCMGVYQmxiMllnWm1WMFkyZ2dQaUFpZFNJZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYldGblpVSnBkRzFoY0V4dllXUmxjam9nWm1WMFkyZ29LU0J1YjNRZ2MzVndjRzl5ZEdWa0xpSXBMQ0IwYUdsekxtOXdkR2x2Ym5NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhCeVpXMTFiSFJwY0d4NVFXeHdhR0U2SUNKdWIyNWxJZ29nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCelpYUlBjSFJwYjI1ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dmNIUnBiMjV6SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHVWdQVDA5SUhadmFXUWdNQ0FtSmlBb1pTQTlJQ0lpS1N3Z2RHaHBjeTV3WVhSb0lDRTlQU0IyYjJsa0lEQWdKaVlnS0dVZ1BTQjBhR2x6TG5CaGRHZ2dLeUJsS1N3Z1pTQTlJSFJvYVhNdWJXRnVZV2RsY2k1eVpYTnZiSFpsVlZKTUtHVXBPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRTVwTG1kbGRDaGxLVHNLSUNBZ0lDQWdJQ0JwWmlBb2J5QWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdjaTV0WVc1aFoyVnlMbWwwWlcxVGRHRnlkQ2hsS1N3Z2MyVjBWR2x0Wlc5MWRDaG1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQW1KaUIwS0c4cExDQnlMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5TENBd0tTd2dienNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdFdVkzSmxaR1Z1ZEdsaGJITWdQU0IwYUdsekxtTnliM056VDNKcFoybHVJRDA5UFNBaVlXNXZibmx0YjNWeklpQS9JQ0p6WVcxbExXOXlhV2RwYmlJZ09pQWlhVzVqYkhWa1pTSXNJR0V1YUdWaFpHVnljeUE5SUhSb2FYTXVjbVZ4ZFdWemRFaGxZV1JsY2l3Z1ptVjBZMmdvWlN3Z1lTa3VkR2hsYmlobWRXNWpkR2x2Ymloc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJzTG1Kc2IySW9LVHNLSUNBZ0lDQWdJQ0I5S1M1MGFHVnVLR1oxYm1OMGFXOXVLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnlaV0YwWlVsdFlXZGxRbWwwYldGd0tHd3NJRTlpYW1WamRDNWhjM05wWjI0b2NpNXZjSFJwYjI1ekxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2xOd1lXTmxRMjl1ZG1WeWMybHZiam9nSW01dmJtVWlDaUFnSUNBZ0lDQWdJQ0FnSUgwcEtUc0tJQ0FnSUNBZ0lDQjlLUzUwYUdWdUtHWjFibU4wYVc5dUtHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1Rta3VZV1JrS0dVc0lHd3BMQ0IwSUNZbUlIUW9iQ2tzSUhJdWJXRnVZV2RsY2k1cGRHVnRSVzVrS0dVcE93b2dJQ0FnSUNBZ0lIMHBMbU5oZEdOb0tHWjFibU4wYVc5dUtHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTQW1KaUJwS0d3cExDQnlMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ1WkNobEtUc0tJQ0FnSUNBZ0lDQjlLU3dnY2k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtUc0tJQ0FnSUgwS2ZUc0tUMmd1Y0hKdmRHOTBlWEJsTG1selNXMWhaMlZDYVhSdFlYQk1iMkZrWlhJZ1BTQWhNRHNLZG1GeUlGTnpMQ0JJYUNBOUlIc0tJQ0FnSUdkbGRFTnZiblJsZUhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRjeUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaFRjeUE5SUc1bGR5QW9kMmx1Wkc5M0xrRjFaR2x2UTI5dWRHVjRkQ0I4ZkNCM2FXNWtiM2N1ZDJWaWEybDBRWFZrYVc5RGIyNTBaWGgwS1Nrc0lGTnpPd29nSUNBZ2ZTd0tJQ0FnSUhObGRFTnZiblJsZUhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0JUY3lBOUlITTdDaUFnSUNCOUNuMHNJR3RvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRzVsZHlCWmRDaDBhR2x6TG0xaGJtRm5aWElwT3dvZ0lDQWdJQ0FnSUc4dWMyVjBVbVZ6Y0c5dWMyVlVlWEJsS0NKaGNuSmhlV0oxWm1abGNpSXBMQ0J2TG5ObGRGQmhkR2dvZEdocGN5NXdZWFJvS1N3Z2J5NXpaWFJTWlhGMVpYTjBTR1ZoWkdWeUtIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpa3NJRzh1YzJWMFYybDBhRU55WldSbGJuUnBZV3h6S0hSb2FYTXVkMmwwYUVOeVpXUmxiblJwWVd4ektTd2dieTVzYjJGa0tHVXNJR1oxYm1OMGFXOXVLR0VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVM1emJHbGpaU2d3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVob0xtZGxkRU52Ym5SbGVIUW9LUzVrWldOdlpHVkJkV1JwYjBSaGRHRW9iQ3dnWm5WdVkzUnBiMjRvYUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFvYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQS9JR2tvYkNrZ09pQmpiMjV6YjJ4bExtVnljbTl5S0d3cExDQnlMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dnYml3Z2FTazdDaUFnSUNCOUNuMHNJRWRvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJJY2lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1SUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2RtOXBaQ0F3TENCdUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHNWxkeUJoWlNncExuTmxkQ2hsS1N3Z2NpQTlJRzVsZHlCaFpTZ3BMbk5sZENoMEtTd2dieUE5SUc1bGR5Qk5LR2t1Y2l3Z2FTNW5MQ0JwTG1JcExDQmhJRDBnYm1WM0lFMG9jaTV5TENCeUxtY3NJSEl1WWlrc0lHd2dQU0JOWVhSb0xuTnhjblFvVFdGMGFDNVFTU2tzSUdNZ1BTQnNJQ29nVFdGMGFDNXpjWEowS0M0M05TazdDaUFnSUNBZ0lDQWdkR2hwY3k1emFDNWpiMlZtWm1samFXVnVkSE5iTUYwdVkyOXdlU2h2S1M1aFpHUW9ZU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9iQ2tzSUhSb2FYTXVjMmd1WTI5bFptWnBZMmxsYm5Seld6RmRMbU52Y0hrb2J5a3VjM1ZpS0dFcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0dNcE93b2dJQ0FnZlFwOU93cEhhQzV3Y205MGIzUjVjR1V1YVhOSVpXMXBjM0JvWlhKbFRHbG5hSFJRY205aVpTQTlJQ0V3T3dwMllYSWdWbWdnUFNCamJHRnpjeUJsZUhSbGJtUnpJRWh5SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWgyYjJsa0lEQXNJSFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnYm1WM0lHRmxLQ2t1YzJWMEtHVXBPd29nSUNBZ0lDQWdJSFJvYVhNdWMyZ3VZMjlsWm1acFkybGxiblJ6V3pCZExuTmxkQ2h1TG5Jc0lHNHVaeXdnYmk1aUtTNXRkV3gwYVhCc2VWTmpZV3hoY2lneUlDb2dUV0YwYUM1emNYSjBLRTFoZEdndVVFa3BLVHNLSUNBZ0lIMEtmVHNLVm1ndWNISnZkRzkwZVhCbExtbHpRVzFpYVdWdWRFeHBaMmgwVUhKdlltVWdQU0FoTURzS2RtRnlJRVZqSUQwZ2JtVjNJSEJsTENCQll5QTlJRzVsZHlCd1pTd2dSbTRnUFNCdVpYY2djR1VzSUdaNUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTNSbGNtVnZRMkZ0WlhKaElpd2dkR2hwY3k1aGMzQmxZM1FnUFNBeExDQjBhR2x6TG1WNVpWTmxjQ0E5SUM0d05qUXNJSFJvYVhNdVkyRnRaWEpoVENBOUlHNWxkeUIxZEN3Z2RHaHBjeTVqWVcxbGNtRk1MbXhoZVdWeWN5NWxibUZpYkdVb01Ta3NJSFJvYVhNdVkyRnRaWEpoVEM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVkyRnRaWEpoVWlBOUlHNWxkeUIxZEN3Z2RHaHBjeTVqWVcxbGNtRlNMbXhoZVdWeWN5NWxibUZpYkdVb01pa3NJSFJvYVhNdVkyRnRaWEpoVWk1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVgyTmhZMmhsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtYjJOMWN6b2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdabTkyT2lCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNCaGMzQmxZM1E2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bFlYSTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJR1poY2pvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2VtOXZiVG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnWlhsbFUyVndPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxsOWpZV05vWlRzS0lDQWdJQ0FnSUNCcFppQW9kQzVtYjJOMWN5QWhQVDBnWlM1bWIyTjFjeUI4ZkNCMExtWnZkaUFoUFQwZ1pTNW1iM1lnZkh3Z2RDNWhjM0JsWTNRZ0lUMDlJR1V1WVhOd1pXTjBJQ29nZEdocGN5NWhjM0JsWTNRZ2ZId2dkQzV1WldGeUlDRTlQU0JsTG01bFlYSWdmSHdnZEM1bVlYSWdJVDA5SUdVdVptRnlJSHg4SUhRdWVtOXZiU0FoUFQwZ1pTNTZiMjl0SUh4OElIUXVaWGxsVTJWd0lDRTlQU0IwYUdsekxtVjVaVk5sY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwTG1adlkzVnpJRDBnWlM1bWIyTjFjeXdnZEM1bWIzWWdQU0JsTG1admRpd2dkQzVoYzNCbFkzUWdQU0JsTG1GemNHVmpkQ0FxSUhSb2FYTXVZWE53WldOMExDQjBMbTVsWVhJZ1BTQmxMbTVsWVhJc0lIUXVabUZ5SUQwZ1pTNW1ZWElzSUhRdWVtOXZiU0E5SUdVdWVtOXZiU3dnZEM1bGVXVlRaWEFnUFNCMGFHbHpMbVY1WlZObGNDd2dSbTR1WTI5d2VTaGxMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhRdVpYbGxVMlZ3SUM4Z01pd2djaUE5SUdrZ0tpQjBMbTVsWVhJZ0x5QjBMbVp2WTNWekxDQnZJRDBnZEM1dVpXRnlJQ29nVFdGMGFDNTBZVzRvVjI0Z0tpQjBMbVp2ZGlBcUlDNDFLU0F2SUhRdWVtOXZiU3dnWVN3Z2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnUVdNdVpXeGxiV1Z1ZEhOYk1USmRJRDBnTFdrc0lFVmpMbVZzWlcxbGJuUnpXekV5WFNBOUlHa3NJR0VnUFNBdGJ5QXFJSFF1WVhOd1pXTjBJQ3NnY2l3Z2JDQTlJRzhnS2lCMExtRnpjR1ZqZENBcklISXNJRVp1TG1Wc1pXMWxiblJ6V3pCZElEMGdNaUFxSUhRdWJtVmhjaUF2SUNoc0lDMGdZU2tzSUVadUxtVnNaVzFsYm5Seld6aGRJRDBnS0d3Z0t5QmhLU0F2SUNoc0lDMGdZU2tzSUhSb2FYTXVZMkZ0WlhKaFRDNXdjbTlxWldOMGFXOXVUV0YwY21sNExtTnZjSGtvUm00cExDQmhJRDBnTFc4Z0tpQjBMbUZ6Y0dWamRDQXRJSElzSUd3Z1BTQnZJQ29nZEM1aGMzQmxZM1FnTFNCeUxDQkdiaTVsYkdWdFpXNTBjMXN3WFNBOUlESWdLaUIwTG01bFlYSWdMeUFvYkNBdElHRXBMQ0JHYmk1bGJHVnRaVzUwYzFzNFhTQTlJQ2hzSUNzZ1lTa2dMeUFvYkNBdElHRXBMQ0IwYUdsekxtTmhiV1Z5WVZJdWNISnZhbVZqZEdsdmJrMWhkSEpwZUM1amIzQjVLRVp1S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTVqWVcxbGNtRk1MbTFoZEhKcGVGZHZjbXhrTG1OdmNIa29aUzV0WVhSeWFYaFhiM0pzWkNrdWJYVnNkR2x3Ykhrb1FXTXBMQ0IwYUdsekxtTmhiV1Z5WVZJdWJXRjBjbWw0VjI5eWJHUXVZMjl3ZVNobExtMWhkSEpwZUZkdmNteGtLUzV0ZFd4MGFYQnNlU2hGWXlrN0NpQWdJQ0I5Q24wc0lGZG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUNFd0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1GMWRHOVRkR0Z5ZENBOUlHVXNJSFJvYVhNdWMzUmhjblJVYVcxbElEMGdNQ3dnZEdocGN5NXZiR1JVYVcxbElEMGdNQ3dnZEdocGN5NWxiR0Z3YzJWa1ZHbHRaU0E5SURBc0lIUm9hWE11Y25WdWJtbHVaeUE5SUNFeE93b2dJQ0FnZlFvZ0lDQWdjM1JoY25Rb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1emRHRnlkRlJwYldVZ1BTQkRZeWdwTENCMGFHbHpMbTlzWkZScGJXVWdQU0IwYUdsekxuTjBZWEowVkdsdFpTd2dkR2hwY3k1bGJHRndjMlZrVkdsdFpTQTlJREFzSUhSb2FYTXVjblZ1Ym1sdVp5QTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ2MzUnZjQ2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWRsZEVWc1lYQnpaV1JVYVcxbEtDa3NJSFJvYVhNdWNuVnVibWx1WnlBOUlDRXhMQ0IwYUdsekxtRjFkRzlUZEdGeWRDQTlJQ0V4T3dvZ0lDQWdmUW9nSUNBZ1oyVjBSV3hoY0hObFpGUnBiV1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwUkdWc2RHRW9LU3dnZEdocGN5NWxiR0Z3YzJWa1ZHbHRaVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFUmxiSFJoS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ01Ec0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWhkWFJ2VTNSaGNuUWdKaVlnSVhSb2FYTXVjblZ1Ym1sdVp5a2djbVYwZFhKdUlIUm9hWE11YzNSaGNuUW9LU3dnTURzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1eWRXNXVhVzVuS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdRMk1vS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaU0E5SUNoMElDMGdkR2hwY3k1dmJHUlVhVzFsS1NBdklERmxNeXdnZEdocGN5NXZiR1JVYVcxbElEMGdkQ3dnZEdocGN5NWxiR0Z3YzJWa1ZHbHRaU0FyUFNCbE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pUc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdRMk1vS1NCN0NpQWdJQ0J5WlhSMWNtNGdLSFI1Y0dWdlppQndaWEptYjNKdFlXNWpaU0ErSUNKMUlpQS9JRVJoZEdVZ09pQndaWEptYjNKdFlXNWpaU2t1Ym05M0tDazdDbjBLZG1GeUlFNXVJRDBnYm1WM0lFMHNJRXhqSUQwZ2JtVjNJR2QwTENCd2VTQTlJRzVsZHlCTkxDQkNiaUE5SUc1bGR5Qk5MQ0J0ZVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pCZFdScGIweHBjM1JsYm1WeUlpd2dkR2hwY3k1amIyNTBaWGgwSUQwZ1NHZ3VaMlYwUTI5dWRHVjRkQ2dwTENCMGFHbHpMbWRoYVc0Z1BTQjBhR2x6TG1OdmJuUmxlSFF1WTNKbFlYUmxSMkZwYmlncExDQjBhR2x6TG1kaGFXNHVZMjl1Ym1WamRDaDBhR2x6TG1OdmJuUmxlSFF1WkdWemRHbHVZWFJwYjI0cExDQjBhR2x6TG1acGJIUmxjaUE5SUc1MWJHd3NJSFJvYVhNdWRHbHRaVVJsYkhSaElEMGdNQ3dnZEdocGN5NWZZMnh2WTJzZ1BTQnVaWGNnVjJnN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJKYm5CMWRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bllXbHVPd29nSUNBZ2ZRb2dJQ0FnY21WdGIzWmxSbWxzZEdWeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1acGJIUmxjaUFoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVuWVdsdUxtUnBjMk52Ym01bFkzUW9kR2hwY3k1bWFXeDBaWElwTENCMGFHbHpMbVpwYkhSbGNpNWthWE5qYjI1dVpXTjBLSFJvYVhNdVkyOXVkR1Y0ZEM1a1pYTjBhVzVoZEdsdmJpa3NJSFJvYVhNdVoyRnBiaTVqYjI1dVpXTjBLSFJvYVhNdVkyOXVkR1Y0ZEM1a1pYTjBhVzVoZEdsdmJpa3NJSFJvYVhNdVptbHNkR1Z5SUQwZ2JuVnNiQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSR2FXeDBaWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabWxzZEdWeU93b2dJQ0FnZlFvZ0lDQWdjMlYwUm1sc2RHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW1hV3gwWlhJZ0lUMDlJRzUxYkd3Z1B5QW9kR2hwY3k1bllXbHVMbVJwYzJOdmJtNWxZM1FvZEdocGN5NW1hV3gwWlhJcExDQjBhR2x6TG1acGJIUmxjaTVrYVhOamIyNXVaV04wS0hSb2FYTXVZMjl1ZEdWNGRDNWtaWE4wYVc1aGRHbHZiaWtwSURvZ2RHaHBjeTVuWVdsdUxtUnBjMk52Ym01bFkzUW9kR2hwY3k1amIyNTBaWGgwTG1SbGMzUnBibUYwYVc5dUtTd2dkR2hwY3k1bWFXeDBaWElnUFNCbExDQjBhR2x6TG1kaGFXNHVZMjl1Ym1WamRDaDBhR2x6TG1acGJIUmxjaWtzSUhSb2FYTXVabWxzZEdWeUxtTnZibTVsWTNRb2RHaHBjeTVqYjI1MFpYaDBMbVJsYzNScGJtRjBhVzl1S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFMWhjM1JsY2xadmJIVnRaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5ZV2x1TG1kaGFXNHVkbUZzZFdVN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJOWVhOMFpYSldiMngxYldVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kaGFXNHVaMkZwYmk1elpYUlVZWEpuWlhSQmRGUnBiV1VvWlN3Z2RHaHBjeTVqYjI1MFpYaDBMbU4xY25KbGJuUlVhVzFsTENBdU1ERXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpiMjUwWlhoMExteHBjM1JsYm1WeUxDQnVJRDBnZEdocGN5NTFjRHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTUwYVcxbFJHVnNkR0VnUFNCMGFHbHpMbDlqYkc5amF5NW5aWFJFWld4MFlTZ3BMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtMbVJsWTI5dGNHOXpaU2hPYml3Z1RHTXNJSEI1S1N3Z1FtNHVjMlYwS0RBc0lEQXNJQzB4S1M1aGNIQnNlVkYxWVhSbGNtNXBiMjRvVEdNcExDQjBMbkJ2YzJsMGFXOXVXQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlNBcklIUm9hWE11ZEdsdFpVUmxiSFJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbkJ2YzJsMGFXOXVXQzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaE9iaTU0TENCcEtTd2dkQzV3YjNOcGRHbHZibGt1YkdsdVpXRnlVbUZ0Y0ZSdlZtRnNkV1ZCZEZScGJXVW9UbTR1ZVN3Z2FTa3NJSFF1Y0c5emFYUnBiMjVhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRTV1TG5vc0lHa3BMQ0IwTG1admNuZGhjbVJZTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRUp1TG5nc0lHa3BMQ0IwTG1admNuZGhjbVJaTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRUp1TG5rc0lHa3BMQ0IwTG1admNuZGhjbVJhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRUp1TG5vc0lHa3BMQ0IwTG5Wd1dDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNodUxuZ3NJR2twTENCMExuVndXUzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaHVMbmtzSUdrcExDQjBMblZ3V2k1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2h1TG5vc0lHa3BPd29nSUNBZ0lDQWdJSDBnWld4elpTQjBMbk5sZEZCdmMybDBhVzl1S0U1dUxuZ3NJRTV1TG5rc0lFNXVMbm9wTENCMExuTmxkRTl5YVdWdWRHRjBhVzl1S0VKdUxuZ3NJRUp1TG5rc0lFSnVMbm9zSUc0dWVDd2diaTU1TENCdUxub3BPd29nSUNBZ2ZRcDlMQ0JhWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUVhWa2FXOGlMQ0IwYUdsekxteHBjM1JsYm1WeUlEMGdaU3dnZEdocGN5NWpiMjUwWlhoMElEMGdaUzVqYjI1MFpYaDBMQ0IwYUdsekxtZGhhVzRnUFNCMGFHbHpMbU52Ym5SbGVIUXVZM0psWVhSbFIyRnBiaWdwTENCMGFHbHpMbWRoYVc0dVkyOXVibVZqZENobExtZGxkRWx1Y0hWMEtDa3BMQ0IwYUdsekxtRjFkRzl3YkdGNUlEMGdJVEVzSUhSb2FYTXVZblZtWm1WeUlEMGdiblZzYkN3Z2RHaHBjeTVrWlhSMWJtVWdQU0F3TENCMGFHbHpMbXh2YjNBZ1BTQWhNU3dnZEdocGN5NXNiMjl3VTNSaGNuUWdQU0F3TENCMGFHbHpMbXh2YjNCRmJtUWdQU0F3TENCMGFHbHpMbTltWm5ObGRDQTlJREFzSUhSb2FYTXVaSFZ5WVhScGIyNGdQU0IyYjJsa0lEQXNJSFJvYVhNdWNHeGhlV0poWTJ0U1lYUmxJRDBnTVN3Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFNBaE1Td2dkR2hwY3k1b1lYTlFiR0Y1WW1GamEwTnZiblJ5YjJ3Z1BTQWhNQ3dnZEdocGN5NXpiM1Z5WTJVZ1BTQnVkV3hzTENCMGFHbHpMbk52ZFhKalpWUjVjR1VnUFNBaVpXMXdkSGtpTENCMGFHbHpMbDl6ZEdGeWRHVmtRWFFnUFNBd0xDQjBhR2x6TGw5d2NtOW5jbVZ6Y3lBOUlEQXNJSFJvYVhNdVgyTnZibTVsWTNSbFpDQTlJQ0V4TENCMGFHbHpMbVpwYkhSbGNuTWdQU0JiWFRzS0lDQWdJSDBLSUNBZ0lHZGxkRTkxZEhCMWRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bllXbHVPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRtOWtaVk52ZFhKalpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFHRnpVR3hoZVdKaFkydERiMjUwY205c0lEMGdJVEVzSUhSb2FYTXVjMjkxY21ObFZIbHdaU0E5SUNKaGRXUnBiMDV2WkdVaUxDQjBhR2x6TG5OdmRYSmpaU0E5SUdVc0lIUm9hWE11WTI5dWJtVmpkQ2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRXVmthV0ZGYkdWdFpXNTBVMjkxY21ObEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1b1lYTlFiR0Y1WW1GamEwTnZiblJ5YjJ3Z1BTQWhNU3dnZEdocGN5NXpiM1Z5WTJWVWVYQmxJRDBnSW0xbFpHbGhUbTlrWlNJc0lIUm9hWE11YzI5MWNtTmxJRDBnZEdocGN5NWpiMjUwWlhoMExtTnlaV0YwWlUxbFpHbGhSV3hsYldWdWRGTnZkWEpqWlNobEtTd2dkR2hwY3k1amIyNXVaV04wS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUk5aV1JwWVZOMGNtVmhiVk52ZFhKalpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFHRnpVR3hoZVdKaFkydERiMjUwY205c0lEMGdJVEVzSUhSb2FYTXVjMjkxY21ObFZIbHdaU0E5SUNKdFpXUnBZVk4wY21WaGJVNXZaR1VpTENCMGFHbHpMbk52ZFhKalpTQTlJSFJvYVhNdVkyOXVkR1Y0ZEM1amNtVmhkR1ZOWldScFlWTjBjbVZoYlZOdmRYSmpaU2hsS1N3Z2RHaHBjeTVqYjI1dVpXTjBLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSQ2RXWm1aWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUoxWm1abGNpQTlJR1VzSUhSb2FYTXVjMjkxY21ObFZIbHdaU0E5SUNKaWRXWm1aWElpTENCMGFHbHpMbUYxZEc5d2JHRjVJQ1ltSUhSb2FYTXVjR3hoZVNncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NHeGhlU2hsSUQwZ01Da2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbWx6VUd4aGVXbHVaeUE5UFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYnpvZ1FYVmthVzhnYVhNZ1lXeHlaV0ZrZVNCd2JHRjVhVzVuTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbWhoYzFCc1lYbGlZV05yUTI5dWRISnZiQ0E5UFQwZ0lURXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYnpvZ2RHaHBjeUJCZFdScGJ5Qm9ZWE1nYm04Z2NHeGhlV0poWTJzZ1kyOXVkSEp2YkM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxsOXpkR0Z5ZEdWa1FYUWdQU0IwYUdsekxtTnZiblJsZUhRdVkzVnljbVZ1ZEZScGJXVWdLeUJsT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpiMjUwWlhoMExtTnlaV0YwWlVKMVptWmxjbE52ZFhKalpTZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbUoxWm1abGNpQTlJSFJvYVhNdVluVm1abVZ5TENCMExteHZiM0FnUFNCMGFHbHpMbXh2YjNBc0lIUXViRzl2Y0ZOMFlYSjBJRDBnZEdocGN5NXNiMjl3VTNSaGNuUXNJSFF1Ykc5dmNFVnVaQ0E5SUhSb2FYTXViRzl2Y0VWdVpDd2dkQzV2Ym1WdVpHVmtJRDBnZEdocGN5NXZia1Z1WkdWa0xtSnBibVFvZEdocGN5a3NJSFF1YzNSaGNuUW9kR2hwY3k1ZmMzUmhjblJsWkVGMExDQjBhR2x6TGw5d2NtOW5jbVZ6Y3lBcklIUm9hWE11YjJabWMyVjBMQ0IwYUdsekxtUjFjbUYwYVc5dUtTd2dkR2hwY3k1cGMxQnNZWGxwYm1jZ1BTQWhNQ3dnZEdocGN5NXpiM1Z5WTJVZ1BTQjBMQ0IwYUdsekxuTmxkRVJsZEhWdVpTaDBhR2x6TG1SbGRIVnVaU2tzSUhSb2FYTXVjMlYwVUd4aGVXSmhZMnRTWVhSbEtIUm9hWE11Y0d4aGVXSmhZMnRTWVhSbEtTd2dkR2hwY3k1amIyNXVaV04wS0NrN0NpQWdJQ0I5Q2lBZ0lDQndZWFZ6WlNncElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFYVmthVzg2SUhSb2FYTWdRWFZrYVc4Z2FHRnpJRzV2SUhCc1lYbGlZV05ySUdOdmJuUnliMnd1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVhOUWJHRjVhVzVuSUQwOVBTQWhNQ0FtSmlBb2RHaHBjeTVmY0hKdlozSmxjM01nS3owZ1RXRjBhQzV0WVhnb2RHaHBjeTVqYjI1MFpYaDBMbU4xY25KbGJuUlVhVzFsSUMwZ2RHaHBjeTVmYzNSaGNuUmxaRUYwTENBd0tTQXFJSFJvYVhNdWNHeGhlV0poWTJ0U1lYUmxMQ0IwYUdsekxteHZiM0FnUFQwOUlDRXdJQ1ltSUNoMGFHbHpMbDl3Y205bmNtVnpjeUE5SUhSb2FYTXVYM0J5YjJkeVpYTnpJQ1VnS0hSb2FYTXVaSFZ5WVhScGIyNGdmSHdnZEdocGN5NWlkV1ptWlhJdVpIVnlZWFJwYjI0cEtTd2dkR2hwY3k1emIzVnlZMlV1YzNSdmNDZ3BMQ0IwYUdsekxuTnZkWEpqWlM1dmJtVnVaR1ZrSUQwZ2JuVnNiQ3dnZEdocGN5NXBjMUJzWVhscGJtY2dQU0FoTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRHOXdLQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1oaGMxQnNZWGxpWVdOclEyOXVkSEp2YkNBOVBUMGdJVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dkR2hwY3lCQmRXUnBieUJvWVhNZ2JtOGdjR3hoZVdKaFkyc2dZMjl1ZEhKdmJDNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZjSEp2WjNKbGMzTWdQU0F3TENCMGFHbHpMbk52ZFhKalpTNXpkRzl3S0Nrc0lIUm9hWE11YzI5MWNtTmxMbTl1Wlc1a1pXUWdQU0J1ZFd4c0xDQjBhR2x6TG1selVHeGhlV2x1WnlBOUlDRXhMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl1Ym1WamRDZ3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVtYVd4MFpYSnpMbXhsYm1kMGFDQStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emIzVnlZMlV1WTI5dWJtVmpkQ2gwYUdsekxtWnBiSFJsY25OYk1GMHBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdVZ1BTQXhMQ0IwSUQwZ2RHaHBjeTVtYVd4MFpYSnpMbXhsYm1kMGFEc2daU0E4SUhRN0lHVXJLeWwwYUdsekxtWnBiSFJsY25OYlpTQXRJREZkTG1OdmJtNWxZM1FvZEdocGN5NW1hV3gwWlhKelcyVmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVtYVd4MFpYSnpXM1JvYVhNdVptbHNkR1Z5Y3k1c1pXNW5kR2dnTFNBeFhTNWpiMjV1WldOMEtIUm9hWE11WjJWMFQzVjBjSFYwS0NrcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCMGFHbHpMbk52ZFhKalpTNWpiMjV1WldOMEtIUm9hWE11WjJWMFQzVjBjSFYwS0NrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlqYjI1dVpXTjBaV1FnUFNBaE1Dd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBjMk52Ym01bFkzUW9LU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11Wm1sc2RHVnljeTVzWlc1bmRHZ2dQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMyOTFjbU5sTG1ScGMyTnZibTVsWTNRb2RHaHBjeTVtYVd4MFpYSnpXekJkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTVN3Z2RDQTlJSFJvYVhNdVptbHNkR1Z5Y3k1c1pXNW5kR2c3SUdVZ1BDQjBPeUJsS3lzcGRHaHBjeTVtYVd4MFpYSnpXMlVnTFNBeFhTNWthWE5qYjI1dVpXTjBLSFJvYVhNdVptbHNkR1Z5YzF0bFhTazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabWxzZEdWeWMxdDBhR2x6TG1acGJIUmxjbk11YkdWdVozUm9JQzBnTVYwdVpHbHpZMjl1Ym1WamRDaDBhR2x6TG1kbGRFOTFkSEIxZENncEtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2RHaHBjeTV6YjNWeVkyVXVaR2x6WTI5dWJtVmpkQ2gwYUdsekxtZGxkRTkxZEhCMWRDZ3BLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlkyOXVibVZqZEdWa0lEMGdJVEVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSR2FXeDBaWEp6S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVpwYkhSbGNuTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2FXeDBaWEp6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQjhmQ0FvWlNBOUlGdGRLU3dnZEdocGN5NWZZMjl1Ym1WamRHVmtJRDA5UFNBaE1DQS9JQ2gwYUdsekxtUnBjMk52Ym01bFkzUW9LU3dnZEdocGN5NW1hV3gwWlhKeklEMGdaUzV6YkdsalpTZ3BMQ0IwYUdsekxtTnZibTVsWTNRb0tTa2dPaUIwYUdsekxtWnBiSFJsY25NZ1BTQmxMbk5zYVdObEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJFWlhSMWJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1SbGRIVnVaU0E5SUdVc0lIUm9hWE11YzI5MWNtTmxMbVJsZEhWdVpTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdkR2hwY3k1cGMxQnNZWGxwYm1jZ1BUMDlJQ0V3SUNZbUlIUm9hWE11YzI5MWNtTmxMbVJsZEhWdVpTNXpaWFJVWVhKblpYUkJkRlJwYldVb2RHaHBjeTVrWlhSMWJtVXNJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTd2dMakF4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFUmxkSFZ1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWlhSMWJtVTdDaUFnSUNCOUNpQWdJQ0JuWlhSR2FXeDBaWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwUm1sc2RHVnljeWdwV3pCZE93b2dJQ0FnZlFvZ0lDQWdjMlYwUm1sc2RHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFJHYVd4MFpYSnpLR1VnUHlCYkNpQWdJQ0FnSUNBZ0lDQWdJR1VLSUNBZ0lDQWdJQ0JkSURvZ1cxMHBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVHeGhlV0poWTJ0U1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1b1lYTlFiR0Y1WW1GamEwTnZiblJ5YjJ3Z1BUMDlJQ0V4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UVhWa2FXODZJSFJvYVhNZ1FYVmthVzhnYUdGeklHNXZJSEJzWVhsaVlXTnJJR052Ym5SeWIyd3VJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR3hoZVdKaFkydFNZWFJsSUQwZ1pTd2dkR2hwY3k1cGMxQnNZWGxwYm1jZ1BUMDlJQ0V3SUNZbUlIUm9hWE11YzI5MWNtTmxMbkJzWVhsaVlXTnJVbUYwWlM1elpYUlVZWEpuWlhSQmRGUnBiV1VvZEdocGN5NXdiR0Y1WW1GamExSmhkR1VzSUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU3dnTGpBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRkJzWVhsaVlXTnJVbUYwWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3YkdGNVltRmphMUpoZEdVN0NpQWdJQ0I5Q2lBZ0lDQnZia1Z1WkdWa0tDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWFYTlFiR0Y1YVc1bklEMGdJVEU3Q2lBZ0lDQjlDaUFnSUNCblpYUk1iMjl3S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWhoYzFCc1lYbGlZV05yUTI5dWRISnZiQ0E5UFQwZ0lURWdQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1QmRXUnBiem9nZEdocGN5QkJkV1JwYnlCb1lYTWdibThnY0d4aGVXSmhZMnNnWTI5dWRISnZiQzRpS1N3Z0lURXBJRG9nZEdocGN5NXNiMjl3T3dvZ0lDQWdmUW9nSUNBZ2MyVjBURzl2Y0NobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhR0Z6VUd4aGVXSmhZMnREYjI1MGNtOXNJRDA5UFNBaE1Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrRjFaR2x2T2lCMGFHbHpJRUYxWkdsdklHaGhjeUJ1YnlCd2JHRjVZbUZqYXlCamIyNTBjbTlzTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG14dmIzQWdQU0JsTENCMGFHbHpMbWx6VUd4aGVXbHVaeUE5UFQwZ0lUQWdKaVlnS0hSb2FYTXVjMjkxY21ObExteHZiM0FnUFNCMGFHbHpMbXh2YjNBcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBURzl2Y0ZOMFlYSjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXNiMjl3VTNSaGNuUWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRHOXZjRVZ1WkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ykc5dmNFVnVaQ0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUldiMngxYldVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJGcGJpNW5ZV2x1TG5aaGJIVmxPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZtOXNkVzFsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWVdsdUxtZGhhVzR1YzJWMFZHRnlaMlYwUVhSVWFXMWxLR1VzSUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU3dnTGpBeEtTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z2VtNGdQU0J1WlhjZ1RTd2dVbU1nUFNCdVpYY2daM1FzSUdkNUlEMGdibVYzSUUwc0lGVnVJRDBnYm1WM0lFMHNJSGg1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJhWVNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CaGJtNWxjaUE5SUhSb2FYTXVZMjl1ZEdWNGRDNWpjbVZoZEdWUVlXNXVaWElvS1N3Z2RHaHBjeTV3WVc1dVpYSXVjR0Z1Ym1sdVowMXZaR1ZzSUQwZ0lraFNWRVlpTENCMGFHbHpMbkJoYm01bGNpNWpiMjV1WldOMEtIUm9hWE11WjJGcGJpazdDaUFnSUNCOUNpQWdJQ0JuWlhSUGRYUndkWFFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR0Z1Ym1WeU93b2dJQ0FnZlFvZ0lDQWdaMlYwVW1WbVJHbHpkR0Z1WTJVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dGdWJtVnlMbkpsWmtScGMzUmhibU5sT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbVZtUkdsemRHRnVZMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNXlaV1pFYVhOMFlXNWpaU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUlNiMnhzYjJabVJtRmpkRzl5S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNXliMnhzYjJabVJtRmpkRzl5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbTlzYkc5bVprWmhZM1J2Y2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dGdWJtVnlMbkp2Ykd4dlptWkdZV04wYjNJZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwUkdsemRHRnVZMlZOYjJSbGJDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d1lXNXVaWEl1WkdsemRHRnVZMlZOYjJSbGJEc0tJQ0FnSUgwS0lDQWdJSE5sZEVScGMzUmhibU5sVFc5a1pXd29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQmhibTVsY2k1a2FYTjBZVzVqWlUxdlpHVnNJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFMWhlRVJwYzNSaGJtTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQmhibTVsY2k1dFlYaEVhWE4wWVc1alpUc0tJQ0FnSUgwS0lDQWdJSE5sZEUxaGVFUnBjM1JoYm1ObEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d1lXNXVaWEl1YldGNFJHbHpkR0Z1WTJVZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUkdseVpXTjBhVzl1WVd4RGIyNWxLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d1lXNXVaWEl1WTI5dVpVbHVibVZ5UVc1bmJHVWdQU0JsTENCMGFHbHpMbkJoYm01bGNpNWpiMjVsVDNWMFpYSkJibWRzWlNBOUlIUXNJSFJvYVhNdWNHRnVibVZ5TG1OdmJtVlBkWFJsY2tkaGFXNGdQU0J1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2h6ZFhCbGNpNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLU3dnZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQVDA5SUNFd0lDWW1JSFJvYVhNdWFYTlFiR0Y1YVc1bklEMDlQU0FoTVNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhSb2FYTXViV0YwY21sNFYyOXliR1F1WkdWamIyMXdiM05sS0hwdUxDQlNZeXdnWjNrcExDQlZiaTV6WlhRb01Dd2dNQ3dnTVNrdVlYQndiSGxSZFdGMFpYSnVhVzl1S0ZKaktUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Y0dGdWJtVnlPd29nSUNBZ0lDQWdJR2xtSUNoMExuQnZjMmwwYVc5dVdDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU0FySUhSb2FYTXViR2x6ZEdWdVpYSXVkR2x0WlVSbGJIUmhPd29nSUNBZ0lDQWdJQ0FnSUNCMExuQnZjMmwwYVc5dVdDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNoNmJpNTRMQ0J1S1N3Z2RDNXdiM05wZEdsdmJsa3ViR2x1WldGeVVtRnRjRlJ2Vm1Gc2RXVkJkRlJwYldVb2VtNHVlU3dnYmlrc0lIUXVjRzl6YVhScGIyNWFMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtIcHVMbm9zSUc0cExDQjBMbTl5YVdWdWRHRjBhVzl1V0M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2hWYmk1NExDQnVLU3dnZEM1dmNtbGxiblJoZEdsdmJsa3ViR2x1WldGeVVtRnRjRlJ2Vm1Gc2RXVkJkRlJwYldVb1ZXNHVlU3dnYmlrc0lIUXViM0pwWlc1MFlYUnBiMjVhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRlZ1TG5vc0lHNHBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjBMbk5sZEZCdmMybDBhVzl1S0hwdUxuZ3NJSHB1TG5rc0lIcHVMbm9wTENCMExuTmxkRTl5YVdWdWRHRjBhVzl1S0ZWdUxuZ3NJRlZ1TG5rc0lGVnVMbm9wT3dvZ0lDQWdmUXA5TENCeGFDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeU1EUTRLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtRnVZV3g1YzJWeUlEMGdaUzVqYjI1MFpYaDBMbU55WldGMFpVRnVZV3g1YzJWeUtDa3NJSFJvYVhNdVlXNWhiSGx6WlhJdVptWjBVMmw2WlNBOUlIUXNJSFJvYVhNdVpHRjBZU0E5SUc1bGR5QlZhVzUwT0VGeWNtRjVLSFJvYVhNdVlXNWhiSGx6WlhJdVpuSmxjWFZsYm1ONVFtbHVRMjkxYm5RcExDQmxMbWRsZEU5MWRIQjFkQ2dwTG1OdmJtNWxZM1FvZEdocGN5NWhibUZzZVhObGNpazdDaUFnSUNCOUNpQWdJQ0JuWlhSR2NtVnhkV1Z1WTNsRVlYUmhLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRnVZV3g1YzJWeUxtZGxkRUo1ZEdWR2NtVnhkV1Z1WTNsRVlYUmhLSFJvYVhNdVpHRjBZU2tzSUhSb2FYTXVaR0YwWVRzS0lDQWdJSDBLSUNBZ0lHZGxkRUYyWlhKaFoyVkdjbVZ4ZFdWdVkza29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0F3TENCMElEMGdkR2hwY3k1blpYUkdjbVZ4ZFdWdVkzbEVZWFJoS0NrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElIUXViR1Z1WjNSb095QnVLeXNwWlNBclBTQjBXMjVkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUM4Z2RDNXNaVzVuZEdnN0NpQWdJQ0I5Q24wc0lGaG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdkR2hwY3k1aWFXNWthVzVuSUQwZ1pTd2dkR2hwY3k1MllXeDFaVk5wZW1VZ1BTQnVPd29nSUNBZ0lDQWdJR3hsZENCcExDQnlMQ0J2T3dvZ0lDQWdJQ0FnSUhOM2FYUmphQ2gwS1hzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWNYVmhkR1Z5Ym1sdmJpSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDBnZEdocGN5NWZjMnhsY25Bc0lISWdQU0IwYUdsekxsOXpiR1Z5Y0VGa1pHbDBhWFpsTENCdklEMGdkR2hwY3k1ZmMyVjBRV1JrYVhScGRtVkpaR1Z1ZEdsMGVWRjFZWFJsY201cGIyNHNJSFJvYVhNdVluVm1abVZ5SUQwZ2JtVjNJRVpzYjJGME5qUkJjbkpoZVNodUlDb2dOaWtzSUhSb2FYTXVYM2R2Y210SmJtUmxlQ0E5SURVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpYzNSeWFXNW5Jam9LSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpWW05dmJDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDBnZEdocGN5NWZjMlZzWldOMExDQnlJRDBnZEdocGN5NWZjMlZzWldOMExDQnZJRDBnZEdocGN5NWZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVTkwYUdWeUxDQjBhR2x6TG1KMVptWmxjaUE5SUc1bGR5QkJjbkpoZVNodUlDb2dOU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCMGFHbHpMbDlzWlhKd0xDQnlJRDBnZEdocGN5NWZiR1Z5Y0VGa1pHbDBhWFpsTENCdklEMGdkR2hwY3k1ZmMyVjBRV1JrYVhScGRtVkpaR1Z1ZEdsMGVVNTFiV1Z5YVdNc0lIUm9hWE11WW5WbVptVnlJRDBnYm1WM0lFWnNiMkYwTmpSQmNuSmhlU2h1SUNvZ05TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdVgyMXBlRUoxWm1abGNsSmxaMmx2YmlBOUlHa3NJSFJvYVhNdVgyMXBlRUoxWm1abGNsSmxaMmx2YmtGa1pHbDBhWFpsSUQwZ2Npd2dkR2hwY3k1ZmMyVjBTV1JsYm5ScGRIa2dQU0J2TENCMGFHbHpMbDl2Y21sblNXNWtaWGdnUFNBekxDQjBhR2x6TGw5aFpHUkpibVJsZUNBOUlEUXNJSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZENBOUlEQXNJSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZEVGa1pHbDBhWFpsSUQwZ01Dd2dkR2hwY3k1MWMyVkRiM1Z1ZENBOUlEQXNJSFJvYVhNdWNtVm1aWEpsYm1ObFEyOTFiblFnUFNBd093b2dJQ0FnZlFvZ0lDQWdZV05qZFcxMWJHRjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1KMVptWmxjaXdnYVNBOUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCeUlEMGdaU0FxSUdrZ0t5QnBMQ0J2SUQwZ2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBPd29nSUNBZ0lDQWdJR2xtSUNodklEMDlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBN0lHRWdJVDA5SUdrN0lDc3JZU2x1VzNJZ0t5QmhYU0E5SUc1YllWMDdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z1BTQjBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z0t6MGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMElDOGdienNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYldsNFFuVm1abVZ5VW1WbmFXOXVLRzRzSUhJc0lEQXNJR0VzSUdrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG1OMWJYVnNZWFJwZG1WWFpXbG5hSFFnUFNCdk93b2dJQ0FnZlFvZ0lDQWdZV05qZFcxMWJHRjBaVUZrWkdsMGFYWmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZblZtWm1WeUxDQnVJRDBnZEdocGN5NTJZV3gxWlZOcGVtVXNJR2tnUFNCdUlDb2dkR2hwY3k1ZllXUmtTVzVrWlhnN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBRV1JrYVhScGRtVWdQVDA5SURBZ0ppWWdkR2hwY3k1ZmMyVjBTV1JsYm5ScGRIa29LU3dnZEdocGN5NWZiV2w0UW5WbVptVnlVbVZuYVc5dVFXUmthWFJwZG1Vb2RDd2dhU3dnTUN3Z1pTd2diaWtzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RFRmtaR2wwYVhabElDczlJR1U3Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMblpoYkhWbFUybDZaU3dnYmlBOUlIUm9hWE11WW5WbVptVnlMQ0JwSUQwZ1pTQXFJSFFnS3lCMExDQnlJRDBnZEdocGN5NWpkVzExYkdGMGFYWmxWMlZwWjJoMExDQnZJRDBnZEdocGN5NWpkVzExYkdGMGFYWmxWMlZwWjJoMFFXUmthWFJwZG1Vc0lHRWdQU0IwYUdsekxtSnBibVJwYm1jN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZENBOUlEQXNJSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZEVGa1pHbDBhWFpsSUQwZ01Dd2djaUE4SURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0IwSUNvZ2RHaHBjeTVmYjNKcFowbHVaR1Y0T3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5dGFYaENkV1ptWlhKU1pXZHBiMjRvYml3Z2FTd2diQ3dnTVNBdElISXNJSFFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCdklENGdNQ0FtSmlCMGFHbHpMbDl0YVhoQ2RXWm1aWEpTWldkcGIyNUJaR1JwZEdsMlpTaHVMQ0JwTENCMGFHbHpMbDloWkdSSmJtUmxlQ0FxSUhRc0lERXNJSFFwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlIUXNJR01nUFNCMElDc2dkRHNnYkNBaFBUMGdZenNnS3l0c0tXbG1JQ2h1VzJ4ZElDRTlQU0J1VzJ3Z0t5QjBYU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmhMbk5sZEZaaGJIVmxLRzRzSUdrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J6WVhabFQzSnBaMmx1WVd4VGRHRjBaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVZbWx1WkdsdVp5d2dkQ0E5SUhSb2FYTXVZblZtWm1WeUxDQnVJRDBnZEdocGN5NTJZV3gxWlZOcGVtVXNJR2tnUFNCdUlDb2dkR2hwY3k1ZmIzSnBaMGx1WkdWNE93b2dJQ0FnSUNBZ0lHVXVaMlYwVm1Gc2RXVW9kQ3dnYVNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdiaXdnYnlBOUlHazdJSElnSVQwOUlHODdJQ3NyY2lsMFczSmRJRDBnZEZ0cElDc2djaUFsSUc1ZE93b2dJQ0FnSUNBZ0lIUm9hWE11WDNObGRFbGtaVzUwYVhSNUtDa3NJSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZENBOUlEQXNJSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZEVGa1pHbDBhWFpsSUQwZ01Ec0tJQ0FnSUgwS0lDQWdJSEpsYzNSdmNtVlBjbWxuYVc1aGJGTjBZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVnS2lBek93b2dJQ0FnSUNBZ0lIUm9hWE11WW1sdVpHbHVaeTV6WlhSV1lXeDFaU2gwYUdsekxtSjFabVpsY2l3Z1pTazdDaUFnSUNCOUNpQWdJQ0JmYzJWMFFXUmthWFJwZG1WSlpHVnVkR2wwZVU1MWJXVnlhV01vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbDloWkdSSmJtUmxlQ0FxSUhSb2FYTXVkbUZzZFdWVGFYcGxMQ0IwSUQwZ1pTQXJJSFJvYVhNdWRtRnNkV1ZUYVhwbE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJR1U3SUc0Z1BDQjBPeUJ1S3lzcGRHaHBjeTVpZFdabVpYSmJibDBnUFNBd093b2dJQ0FnZlFvZ0lDQWdYM05sZEVGa1pHbDBhWFpsU1dSbGJuUnBkSGxSZFdGMFpYSnVhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDNObGRFRmtaR2wwYVhabFNXUmxiblJwZEhsT2RXMWxjbWxqS0Nrc0lIUm9hWE11WW5WbVptVnlXM1JvYVhNdVgyRmtaRWx1WkdWNElDb2dkR2hwY3k1MllXeDFaVk5wZW1VZ0t5QXpYU0E5SURFN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVTkwYUdWeUtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZmIzSnBaMGx1WkdWNElDb2dkR2hwY3k1MllXeDFaVk5wZW1Vc0lIUWdQU0IwYUdsekxsOWhaR1JKYm1SbGVDQXFJSFJvYVhNdWRtRnNkV1ZUYVhwbE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQjBhR2x6TG5aaGJIVmxVMmw2WlRzZ2Jpc3JLWFJvYVhNdVluVm1abVZ5VzNRZ0t5QnVYU0E5SUhSb2FYTXVZblZtWm1WeVcyVWdLeUJ1WFRzS0lDQWdJSDBLSUNBZ0lGOXpaV3hsWTNRb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaHBJRDQ5SUM0MUtTQm1iM0lvYkdWMElHOGdQU0F3T3lCdklDRTlQU0J5T3lBcksyOHBaVnQwSUNzZ2IxMGdQU0JsVzI0Z0t5QnZYVHNLSUNBZ0lIMEtJQ0FnSUY5emJHVnljQ2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ1ozUXVjMnhsY25CR2JHRjBLR1VzSUhRc0lHVXNJSFFzSUdVc0lHNHNJR2twT3dvZ0lDQWdmUW9nSUNBZ1gzTnNaWEp3UVdSa2FYUnBkbVVvWlN3Z2RDd2diaXdnYVN3Z2Npa2dld29nSUNBZ0lDQWdJR3hsZENCdklEMGdkR2hwY3k1ZmQyOXlhMGx1WkdWNElDb2djanNLSUNBZ0lDQWdJQ0JuZEM1dGRXeDBhWEJzZVZGMVlYUmxjbTVwYjI1elJteGhkQ2hsTENCdkxDQmxMQ0IwTENCbExDQnVLU3dnWjNRdWMyeGxjbkJHYkdGMEtHVXNJSFFzSUdVc0lIUXNJR1VzSUc4c0lHa3BPd29nSUNBZ2ZRb2dJQ0FnWDJ4bGNuQW9aU3dnZEN3Z2Jpd2dhU3dnY2lrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ01TQXRJR2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JoSUQwZ01Ec2dZU0FoUFQwZ2Nqc2dLeXRoS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQjBJQ3NnWVRzS0lDQWdJQ0FnSUNBZ0lDQWdaVnRzWFNBOUlHVmJiRjBnS2lCdklDc2daVnR1SUNzZ1lWMGdLaUJwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lGOXNaWEp3UVdSa2FYUnBkbVVvWlN3Z2RDd2diaXdnYVN3Z2Npa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBN0lHOGdJVDA5SUhJN0lDc3JieWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RDQXJJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVmJZVjBnUFNCbFcyRmRJQ3NnWlZ0dUlDc2diMTBnS2lCcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTd2dKR0VnUFNBaVhGeGJYRnhkWEZ3dU9seGNMeUlzSUhsNUlEMGdibVYzSUZKbFowVjRjQ2dpV3lJZ0t5QWtZU0FySUNKZElpd2dJbWNpS1N3Z2FtRWdQU0FpVzE0aUlDc2dKR0VnS3lBaVhTSXNJSFo1SUQwZ0lsdGVJaUFySUNSaExuSmxjR3hoWTJVb0lseGNMaUlzSUNJaUtTQXJJQ0pkSWl3Z1gza2dQU0F2S0NnL09sZERLMXRjTHpwZEtTb3BMeTV6YjNWeVkyVXVjbVZ3YkdGalpTZ2lWME1pTENCcVlTa3NJRTE1SUQwZ0x5aFhRMDlFS3lrL0x5NXpiM1Z5WTJVdWNtVndiR0ZqWlNnaVYwTlBSQ0lzSUhaNUtTd2dZbmtnUFNBdktEODZYQzRvVjBNcktTZy9PbHhiS0M0cktWeGRLVDhwUHk4dWMyOTFjbU5sTG5KbGNHeGhZMlVvSWxkRElpd2dhbUVwTENCM2VTQTlJQzljTGloWFF5c3BLRDg2WEZzb0xpc3BYRjBwUHk4dWMyOTFjbU5sTG5KbGNHeGhZMlVvSWxkRElpd2dhbUVwTENCVGVTQTlJRzVsZHlCU1pXZEZlSEFvSWw0aUlDc2dYM2tnS3lCTmVTQXJJR0o1SUNzZ2Qza2dLeUFpSkNJcExDQlVlU0E5SUZzS0lDQWdJQ0p0WVhSbGNtbGhiQ0lzQ2lBZ0lDQWliV0YwWlhKcFlXeHpJaXdLSUNBZ0lDSmliMjVsY3lJS1hTd2dTbWdnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzRnZkh3Z2EyVXVjR0Z5YzJWVWNtRmphMDVoYldVb2RDazdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmRHRnlaMlYwUjNKdmRYQWdQU0JsTENCMGFHbHpMbDlpYVc1a2FXNW5jeUE5SUdVdWMzVmljMk55YVdKbFh5aDBMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRlpoYkhWbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbUpwYm1Rb0tUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDNSaGNtZGxkRWR5YjNWd0xtNURZV05vWldSUFltcGxZM1J6WHl3Z2FTQTlJSFJvYVhNdVgySnBibVJwYm1kelcyNWRPd29nSUNBZ0lDQWdJR2tnSVQwOUlIWnZhV1FnTUNBbUppQnBMbWRsZEZaaGJIVmxLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVm1Gc2RXVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVmWW1sdVpHbHVaM003Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ2RHaHBjeTVmZEdGeVoyVjBSM0p2ZFhBdWJrTmhZMmhsWkU5aWFtVmpkSE5mTENCeUlEMGdiaTVzWlc1bmRHZzdJR2tnSVQwOUlISTdJQ3NyYVNsdVcybGRMbk5sZEZaaGJIVmxLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdZbWx1WkNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDJKcGJtUnBibWR6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlIUm9hWE11WDNSaGNtZGxkRWR5YjNWd0xtNURZV05vWldSUFltcGxZM1J6WHl3Z2JpQTlJR1V1YkdWdVozUm9PeUIwSUNFOVBTQnVPeUFySzNRcFpWdDBYUzVpYVc1a0tDazdDaUFnSUNCOUNpQWdJQ0IxYm1KcGJtUW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxsOWlhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0IwYUdsekxsOTBZWEpuWlhSSGNtOTFjQzV1UTJGamFHVmtUMkpxWldOMGMxOHNJRzRnUFNCbExteGxibWQwYURzZ2RDQWhQVDBnYmpzZ0t5dDBLV1ZiZEYwdWRXNWlhVzVrS0NrN0NpQWdJQ0I5Q24wc0lHdGxJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdkR2hwY3k1d1lYUm9JRDBnZEN3Z2RHaHBjeTV3WVhKelpXUlFZWFJvSUQwZ2JpQjhmQ0JyWlM1d1lYSnpaVlJ5WVdOclRtRnRaU2gwS1N3Z2RHaHBjeTV1YjJSbElEMGdhMlV1Wm1sdVpFNXZaR1VvWlN3Z2RHaHBjeTV3WVhKelpXUlFZWFJvTG01dlpHVk9ZVzFsS1NCOGZDQmxMQ0IwYUdsekxuSnZiM1JPYjJSbElEMGdaU3dnZEdocGN5NW5aWFJXWVd4MVpTQTlJSFJvYVhNdVgyZGxkRlpoYkhWbFgzVnVZbTkxYm1Rc0lIUm9hWE11YzJWMFZtRnNkV1VnUFNCMGFHbHpMbDl6WlhSV1lXeDFaVjkxYm1KdmRXNWtPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR055WldGMFpTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdKaVlnWlM1cGMwRnVhVzFoZEdsdmJrOWlhbVZqZEVkeWIzVndJRDhnYm1WM0lHdGxMa052YlhCdmMybDBaU2hsTENCMExDQnVLU0E2SUc1bGR5QnJaU2hsTENCMExDQnVLVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJ6WVc1cGRHbDZaVTV2WkdWT1lXMWxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1eVpYQnNZV05sS0M5Y2N5OW5MQ0FpWHlJcExuSmxjR3hoWTJVb2VYa3NJQ0lpS1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCd1lYSnpaVlJ5WVdOclRtRnRaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCVGVTNWxlR1ZqS0dVcE93b2dJQ0FnSUNBZ0lHbG1JQ2doZENrZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKUWNtOXdaWEowZVVKcGJtUnBibWM2SUVOaGJtNXZkQ0J3WVhKelpTQjBjbUZqYTA1aGJXVTZJQ0lnS3lCbEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYm05a1pVNWhiV1U2SUhSYk1sMHNDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRTVoYldVNklIUmJNMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZEVsdVpHVjRPaUIwV3pSZExBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y205d1pYSjBlVTVoYldVNklIUmJOVjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnliM0JsY25SNVNXNWtaWGc2SUhSYk5sMEtJQ0FnSUNBZ0lDQjlMQ0JwSUQwZ2JpNXViMlJsVG1GdFpTQW1KaUJ1TG01dlpHVk9ZVzFsTG14aGMzUkpibVJsZUU5bUtDSXVJaWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tHa2dJVDA5SUhadmFXUWdNQ0FtSmlCcElDRTlQU0F0TVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzR1Ym05a1pVNWhiV1V1YzNWaWMzUnlhVzVuS0drZ0t5QXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZIa3VhVzVrWlhoUFppaHlLU0FoUFQwZ0xURWdKaVlnS0c0dWJtOWtaVTVoYldVZ1BTQnVMbTV2WkdWT1lXMWxMbk4xWW5OMGNtbHVaeWd3TENCcEtTd2diaTV2WW1wbFkzUk9ZVzFsSUQwZ2NpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNodUxuQnliM0JsY25SNVRtRnRaU0E5UFQwZ2JuVnNiQ0I4ZkNCdUxuQnliM0JsY25SNVRtRnRaUzVzWlc1bmRHZ2dQVDA5SURBcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCallXNGdibTkwSUhCaGNuTmxJSEJ5YjNCbGNuUjVUbUZ0WlNCbWNtOXRJSFJ5WVdOclRtRnRaVG9nSWlBcklHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1pwYm1ST2IyUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnBaaUFvSVhRZ2ZId2dkQ0E5UFQwZ0lpSWdmSHdnZENBOVBUMGdJaTRpSUh4OElIUWdQVDA5SUMweElIeDhJSFFnUFQwOUlHVXVibUZ0WlNCOGZDQjBJRDA5UFNCbExuVjFhV1FwSUhKbGRIVnliaUJsT3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbk5yWld4bGRHOXVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNXphMlZzWlhSdmJpNW5aWFJDYjI1bFFubE9ZVzFsS0hRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JpQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVZMmhwYkdSeVpXNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbWRXNWpkR2x2YmloeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3T3lCdklEd2djaTVzWlc1bmRHZzdJRzhyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnlXMjlkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoTG01aGJXVWdQVDA5SUhRZ2ZId2dZUzUxZFdsa0lEMDlQU0IwS1NCeVpYUjFjbTRnWVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHNG9ZUzVqYUdsc1pISmxiaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3dwSUhKbGRIVnliaUJzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJSDBzSUdrZ1BTQnVLR1V1WTJocGJHUnlaVzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNrZ2NtVjBkWEp1SUdrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnWDJkbGRGWmhiSFZsWDNWdVlYWmhhV3hoWW14bEtDa2dlMzBLSUNBZ0lGOXpaWFJXWVd4MVpWOTFibUYyWVdsc1lXSnNaU2dwSUh0OUNpQWdJQ0JmWjJWMFZtRnNkV1ZmWkdseVpXTjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQmxXM1JkSUQwZ2RHaHBjeTUwWVhKblpYUlBZbXBsWTNSYmRHaHBjeTV3Y205d1pYSjBlVTVoYldWZE93b2dJQ0FnZlFvZ0lDQWdYMmRsZEZaaGJIVmxYMkZ5Y21GNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdiaTVzWlc1bmRHZzdJR2tnSVQwOUlISTdJQ3NyYVNsbFczUXJLMTBnUFNCdVcybGRPd29nSUNBZ2ZRb2dJQ0FnWDJkbGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ1pWdDBYU0E5SUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVWdDBhR2x6TG5CeWIzQmxjblI1U1c1a1pYaGRPd29nSUNBZ2ZRb2dJQ0FnWDJkbGRGWmhiSFZsWDNSdlFYSnlZWGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNtVnpiMngyWldSUWNtOXdaWEowZVM1MGIwRnljbUY1S0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDJScGNtVmpkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUmJkR2hwY3k1d2NtOXdaWEowZVU1aGJXVmRJRDBnWlZ0MFhUc0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjlrYVhKbFkzUmZjMlYwVG1WbFpITlZjR1JoZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wVzNSb2FYTXVjSEp2Y0dWeWRIbE9ZVzFsWFNBOUlHVmJkRjBzSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wTG01bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBWbUZzZFdWZlpHbHlaV04wWDNObGRFMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWRHRnlaMlYwVDJKcVpXTjBXM1JvYVhNdWNISnZjR1Z5ZEhsT1lXMWxYU0E5SUdWYmRGMHNJSFJvYVhNdWRHRnlaMlYwVDJKcVpXTjBMbTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5aGNuSmhlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGs3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUc0dWJHVnVaM1JvT3lCcElDRTlQU0J5T3lBcksya3BibHRwWFNBOUlHVmJkQ3NyWFRzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOWhjbkpoZVY5elpYUk9aV1ZrYzFWd1pHRjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGs3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUc0dWJHVnVaM1JvT3lCcElDRTlQU0J5T3lBcksya3BibHRwWFNBOUlHVmJkQ3NyWFRzS0lDQWdJQ0FnSUNCMGFHbHpMblJoY21kbGRFOWlhbVZqZEM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgyRnljbUY1WDNObGRFMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1eVpYTnZiSFpsWkZCeWIzQmxjblI1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCdUxteGxibWQwYURzZ2FTQWhQVDBnY2pzZ0t5dHBLVzViYVYwZ1BTQmxXM1FySzEwN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwWVhKblpYUlBZbXBsWTNRdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYMkZ5Y21GNVJXeGxiV1Z1ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNVczUm9hWE11Y0hKdmNHVnlkSGxKYm1SbGVGMGdQU0JsVzNSZE93b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYMkZ5Y21GNVJXeGxiV1Z1ZEY5elpYUk9aV1ZrYzFWd1pHRjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZiSFpsWkZCeWIzQmxjblI1VzNSb2FYTXVjSEp2Y0dWeWRIbEpibVJsZUYwZ1BTQmxXM1JkTENCMGFHbHpMblJoY21kbGRFOWlhbVZqZEM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgyRnljbUY1Uld4bGJXVnVkRjl6WlhSTllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGxiZEdocGN5NXdjbTl3WlhKMGVVbHVaR1Y0WFNBOUlHVmJkRjBzSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wTG0xaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOW1jbTl0UVhKeVlYa29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlUzVtY205dFFYSnlZWGtvWlN3Z2RDazdDaUFnSUNCOUNpQWdJQ0JmYzJWMFZtRnNkV1ZmWm5KdmJVRnljbUY1WDNObGRFNWxaV1J6VlhCa1lYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGt1Wm5KdmJVRnljbUY1S0dVc0lIUXBMQ0IwYUdsekxuUmhjbWRsZEU5aWFtVmpkQzV1WldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDJaeWIyMUJjbkpoZVY5elpYUk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrdVpuSnZiVUZ5Y21GNUtHVXNJSFFwTENCMGFHbHpMblJoY21kbGRFOWlhbVZqZEM1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQmZaMlYwVm1Gc2RXVmZkVzVpYjNWdVpDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYVc1a0tDa3NJSFJvYVhNdVoyVjBWbUZzZFdVb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBWbUZzZFdWZmRXNWliM1Z1WkNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWlhVzVrS0Nrc0lIUm9hWE11YzJWMFZtRnNkV1VvWlN3Z2RDazdDaUFnSUNCOUNpQWdJQ0JpYVc1a0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1dWIyUmxMQ0IwSUQwZ2RHaHBjeTV3WVhKelpXUlFZWFJvTENCdUlEMGdkQzV2WW1wbFkzUk9ZVzFsTENCcElEMGdkQzV3Y205d1pYSjBlVTVoYldVc0lISWdQU0IwTG5CeWIzQmxjblI1U1c1a1pYZzdDaUFnSUNBZ0lDQWdhV1lnS0dVZ2ZId2dLR1VnUFNCclpTNW1hVzVrVG05a1pTaDBhR2x6TG5KdmIzUk9iMlJsTENCMExtNXZaR1ZPWVcxbEtTQjhmQ0IwYUdsekxuSnZiM1JPYjJSbExDQjBhR2x6TG01dlpHVWdQU0JsS1N3Z2RHaHBjeTVuWlhSV1lXeDFaU0E5SUhSb2FYTXVYMmRsZEZaaGJIVmxYM1Z1WVhaaGFXeGhZbXhsTENCMGFHbHpMbk5sZEZaaGJIVmxJRDBnZEdocGN5NWZjMlYwVm1Gc2RXVmZkVzVoZG1GcGJHRmliR1VzSUNGbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1ZISjVhVzVuSUhSdklIVndaR0YwWlNCdWIyUmxJR1p2Y2lCMGNtRmphem9nSWlBcklIUm9hWE11Y0dGMGFDQXJJQ0lnWW5WMElHbDBJSGRoYzI0bmRDQm1iM1Z1WkM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2Jpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUhRdWIySnFaV04wU1c1a1pYZzdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2h1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbTFoZEdWeWFXRnNjeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG0xaGRHVnlhV0ZzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1EyRnVJRzV2ZENCaWFXNWtJSFJ2SUcxaGRHVnlhV0ZzSUdGeklHNXZaR1VnWkc5bGN5QnViM1FnYUdGMlpTQmhJRzFoZEdWeWFXRnNMaUlzSUhSb2FYTXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2haUzV0WVhSbGNtbGhiQzV0WVhSbGNtbGhiSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCRFlXNGdibTkwSUdKcGJtUWdkRzhnYldGMFpYSnBZV3d1YldGMFpYSnBZV3h6SUdGeklHNXZaR1V1YldGMFpYSnBZV3dnWkc5bGN5QnViM1FnYUdGMlpTQmhJRzFoZEdWeWFXRnNjeUJoY25KaGVTNGlMQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ1pTNXRZWFJsY21saGJDNXRZWFJsY21saGJITTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKaWIyNWxjeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG5OclpXeGxkRzl1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1EyRnVJRzV2ZENCaWFXNWtJSFJ2SUdKdmJtVnpJR0Z6SUc1dlpHVWdaRzlsY3lCdWIzUWdhR0YyWlNCaElITnJaV3hsZEc5dUxpSXNJSFJvYVhNcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1VnUFNCbExuTnJaV3hsZEc5dUxtSnZibVZ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJREE3SUdnZ1BDQmxMbXhsYm1kMGFEc2dhQ3NyS1dsbUlDaGxXMmhkTG01aGJXVWdQVDA5SUdNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1l5QTlJR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHVmJibDBnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFjbTl3WlhKMGVVSnBibVJwYm1jNklFTmhiaUJ1YjNRZ1ltbHVaQ0IwYnlCdlltcGxZM1JPWVcxbElHOW1JRzV2WkdVZ2RXNWtaV1pwYm1Wa0xpSXNJSFJvYVhNcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1VnUFNCbFcyNWRPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaklDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobFcyTmRJRDA5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRlJ5ZVdsdVp5QjBieUJpYVc1a0lIUnZJRzlpYW1WamRFbHVaR1Y0SUc5bUlHOWlhbVZqZEU1aGJXVXNJR0oxZENCcGN5QjFibVJsWm1sdVpXUXVJaXdnZEdocGN5d2daU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlHVmJZMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQmxXMmxkT3dvZ0lDQWdJQ0FnSUdsbUlDaHZJRDA5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQjBMbTV2WkdWT1lXMWxPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFjbTl3WlhKMGVVSnBibVJwYm1jNklGUnllV2x1WnlCMGJ5QjFjR1JoZEdVZ2NISnZjR1Z5ZEhrZ1ptOXlJSFJ5WVdOck9pQWlJQ3NnWXlBcklDSXVJaUFySUdrZ0t5QWlJR0oxZENCcGRDQjNZWE51SjNRZ1ptOTFibVF1SWl3Z1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxsWmxjbk5wYjI1cGJtY3VUbTl1WlRzS0lDQWdJQ0FnSUNCMGFHbHpMblJoY21kbGRFOWlhbVZqZENBOUlHVXNJR1V1Ym1WbFpITlZjR1JoZEdVZ0lUMDlJSFp2YVdRZ01DQS9JR0VnUFNCMGFHbHpMbFpsY25OcGIyNXBibWN1VG1WbFpITlZjR1JoZEdVZ09pQmxMbTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWVNBOUlIUm9hWE11Vm1WeWMybHZibWx1Wnk1TllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJSFJvYVhNdVFtbHVaR2x1WjFSNWNHVXVSR2x5WldOME93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUNKdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXVXVaMlZ2YldWMGNua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFjbTl3WlhKMGVVSnBibVJwYm1jNklFTmhiaUJ1YjNRZ1ltbHVaQ0IwYnlCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTWdZbVZqWVhWelpTQnViMlJsSUdSdlpYTWdibTkwSUdoaGRtVWdZU0JuWlc5dFpYUnllUzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pTNW5aVzl0WlhSeWVTNXBjMEoxWm1abGNrZGxiMjFsZEhKNUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmxMbWRsYjIxbGRISjVMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRU5oYmlCdWIzUWdZbWx1WkNCMGJ5QnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE1nWW1WallYVnpaU0J1YjJSbElHUnZaWE1nYm05MElHaGhkbVVnWVNCblpXOXRaWFJ5ZVM1dGIzSndhRUYwZEhKcFluVjBaWE11SWl3Z2RHaHBjeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTNXRiM0p3YUZSaGNtZGxkRVJwWTNScGIyNWhjbmxiY2wwZ0lUMDlJSFp2YVdRZ01DQW1KaUFvY2lBOUlHVXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1VzNKZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJEWVc0Z2JtOTBJR0pwYm1RZ2RHOGdiVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUc5dUlGUklVa1ZGTGtkbGIyMWxkSEo1TGlCVmMyVWdWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbmtnYVc1emRHVmhaQzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkNBOUlIUm9hWE11UW1sdVpHbHVaMVI1Y0dVdVFYSnlZWGxGYkdWdFpXNTBMQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrZ1BTQnZMQ0IwYUdsekxuQnliM0JsY25SNVNXNWtaWGdnUFNCeU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCdkxtWnliMjFCY25KaGVTQWhQVDBnZG05cFpDQXdJQ1ltSUc4dWRHOUJjbkpoZVNBaFBUMGdkbTlwWkNBd0lEOGdLR3dnUFNCMGFHbHpMa0pwYm1ScGJtZFVlWEJsTGtoaGMwWnliMjFVYjBGeWNtRjVMQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrZ1BTQnZLU0E2SUVGeWNtRjVMbWx6UVhKeVlYa29ieWtnUHlBb2JDQTlJSFJvYVhNdVFtbHVaR2x1WjFSNWNHVXVSVzUwYVhKbFFYSnlZWGtzSUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVTQTlJRzhwSURvZ2RHaHBjeTV3Y205d1pYSjBlVTVoYldVZ1BTQnBPd29nSUNBZ0lDQWdJSFJvYVhNdVoyVjBWbUZzZFdVZ1BTQjBhR2x6TGtkbGRIUmxja0o1UW1sdVpHbHVaMVI1Y0dWYmJGMHNJSFJvYVhNdWMyVjBWbUZzZFdVZ1BTQjBhR2x6TGxObGRIUmxja0o1UW1sdVpHbHVaMVI1Y0dWQmJtUldaWEp6YVc5dWFXNW5XMnhkVzJGZE93b2dJQ0FnZlFvZ0lDQWdkVzVpYVc1a0tDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJtOWtaU0E5SUc1MWJHd3NJSFJvYVhNdVoyVjBWbUZzZFdVZ1BTQjBhR2x6TGw5blpYUldZV3gxWlY5MWJtSnZkVzVrTENCMGFHbHpMbk5sZEZaaGJIVmxJRDBnZEdocGN5NWZjMlYwVm1Gc2RXVmZkVzVpYjNWdVpEc0tJQ0FnSUgwS2ZUc0thMlV1UTI5dGNHOXphWFJsSUQwZ1NtZzdDbXRsTG5CeWIzUnZkSGx3WlM1Q2FXNWthVzVuVkhsd1pTQTlJSHNLSUNBZ0lFUnBjbVZqZERvZ01Dd0tJQ0FnSUVWdWRHbHlaVUZ5Y21GNU9pQXhMQW9nSUNBZ1FYSnlZWGxGYkdWdFpXNTBPaUF5TEFvZ0lDQWdTR0Z6Um5KdmJWUnZRWEp5WVhrNklETUtmVHNLYTJVdWNISnZkRzkwZVhCbExsWmxjbk5wYjI1cGJtY2dQU0I3Q2lBZ0lDQk9iMjVsT2lBd0xBb2dJQ0FnVG1WbFpITlZjR1JoZEdVNklERXNDaUFnSUNCTllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxPaUF5Q24wN0NtdGxMbkJ5YjNSdmRIbHdaUzVIWlhSMFpYSkNlVUpwYm1ScGJtZFVlWEJsSUQwZ1d3b2dJQ0FnYTJVdWNISnZkRzkwZVhCbExsOW5aWFJXWVd4MVpWOWthWEpsWTNRc0NpQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgyZGxkRlpoYkhWbFgyRnljbUY1TEFvZ0lDQWdhMlV1Y0hKdmRHOTBlWEJsTGw5blpYUldZV3gxWlY5aGNuSmhlVVZzWlcxbGJuUXNDaUFnSUNCclpTNXdjbTkwYjNSNWNHVXVYMmRsZEZaaGJIVmxYM1J2UVhKeVlYa0tYVHNLYTJVdWNISnZkRzkwZVhCbExsTmxkSFJsY2tKNVFtbHVaR2x1WjFSNWNHVkJibVJXWlhKemFXOXVhVzVuSUQwZ1d3b2dJQ0FnV3dvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZaR2x5WldOMExBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWkdseVpXTjBYM05sZEU1bFpXUnpWWEJrWVhSbExBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWkdseVpXTjBYM05sZEUxaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVUtJQ0FnSUYwc0NpQWdJQ0JiQ2lBZ0lDQWdJQ0FnYTJVdWNISnZkRzkwZVhCbExsOXpaWFJXWVd4MVpWOWhjbkpoZVN3S0lDQWdJQ0FnSUNCclpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMkZ5Y21GNVgzTmxkRTVsWldSelZYQmtZWFJsTEFvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZZWEp5WVhsZmMyVjBUV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlFvZ0lDQWdYU3dLSUNBZ0lGc0tJQ0FnSUNBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRDd0tJQ0FnSUNBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRGOXpaWFJPWldWa2MxVndaR0YwWlN3S0lDQWdJQ0FnSUNCclpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMkZ5Y21GNVJXeGxiV1Z1ZEY5elpYUk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsQ2lBZ0lDQmRMQW9nSUNBZ1d3b2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWm5KdmJVRnljbUY1TEFvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZabkp2YlVGeWNtRjVYM05sZEU1bFpXUnpWWEJrWVhSbExBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWm5KdmJVRnljbUY1WDNObGRFMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VLSUNBZ0lGMEtYVHNLZG1GeUlGbG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuVjFhV1FnUFNCRmRDZ3BMQ0IwYUdsekxsOXZZbXBsWTNSeklEMGdRWEp5WVhrdWNISnZkRzkwZVhCbExuTnNhV05sTG1OaGJHd29ZWEpuZFcxbGJuUnpLU3dnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4Z1BTQXdPd29nSUNBZ0lDQWdJR3hsZENCbElEMGdlMzA3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZhVzVrYVdObGMwSjVWVlZKUkNBOUlHVTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJRzRnSVQwOUlHazdJQ3NyYmlsbFcyRnlaM1Z0Wlc1MGMxdHVYUzUxZFdsa1hTQTlJRzQ3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZjR0YwYUhNZ1BTQmJYU3dnZEdocGN5NWZjR0Z5YzJWa1VHRjBhSE1nUFNCYlhTd2dkR2hwY3k1ZlltbHVaR2x1WjNNZ1BTQmJYU3dnZEdocGN5NWZZbWx1WkdsdVozTkpibVJwWTJWelFubFFZWFJvSUQwZ2UzMDdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6T3dvZ0lDQWdJQ0FnSUhSb2FYTXVjM1JoZEhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkSE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQjBiM1JoYkNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1WDI5aWFtVmpkSE11YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZENCcGJsVnpaU0FvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEc5MFlXd2dMU0IwTG01RFlXTm9aV1JQWW1wbFkzUnpYenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElHSnBibVJwYm1kelVHVnlUMkpxWldOMElDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbDlpYVc1a2FXNW5jeTVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdZV1JrS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmYjJKcVpXTjBjeXdnZENBOUlIUm9hWE11WDJsdVpHbGpaWE5DZVZWVlNVUXNJRzRnUFNCMGFHbHpMbDl3WVhSb2N5d2dhU0E5SUhSb2FYTXVYM0JoY25ObFpGQmhkR2h6TENCeUlEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHOGdQU0J5TG14bGJtZDBhQ3dnWVN3Z2JDQTlJR1V1YkdWdVozUm9MQ0JqSUQwZ2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxODdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQm9JRDBnTUN3Z2RTQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJR2dnSVQwOUlIVTdJQ3NyYUNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdZWEpuZFcxbGJuUnpXMmhkTENCbUlEMGdaQzUxZFdsa0xDQnRJRDBnZEZ0bVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMGdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlNBOUlHd3JLeXdnZEZ0bVhTQTlJRzBzSUdVdWNIVnphQ2hrS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZUNBOUlEQXNJSFlnUFNCdk95QjRJQ0U5UFNCMk95QXJLM2dwY2x0NFhTNXdkWE5vS0c1bGR5QnJaU2hrTENCdVczaGRMQ0JwVzNoZEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2JTQThJR01wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFZ1BTQmxXMjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0F0TFdNc0lIWWdQU0JsVzNoZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RGdDJMblYxYVdSZElEMGdiU3dnWlZ0dFhTQTlJSFlzSUhSYlpsMGdQU0I0TENCbFczaGRJRDBnWkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnlBOUlEQXNJSEFnUFNCdk95Qm5JQ0U5UFNCd095QXJLMmNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ2NsdG5YU3dnZVNBOUlGOWJlRjBzSUdJZ1BTQmZXMjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGOWJiVjBnUFNCNUxDQmlJRDA5UFNCMmIybGtJREFnSmlZZ0tHSWdQU0J1WlhjZ2EyVW9aQ3dnYmx0blhTd2dhVnRuWFNrcExDQmZXM2hkSUQwZ1lqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR1ZiYlYwZ0lUMDlJR0VnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVRVzVwYldGMGFXOXVUMkpxWldOMFIzSnZkWEE2SUVScFptWmxjbVZ1ZENCdlltcGxZM1J6SUhkcGRHZ2dkR2hsSUhOaGJXVWdWVlZKUkNCa1pYUmxZM1JsWkM0Z1EyeGxZVzRnZEdobElHTmhZMmhsY3lCdmNpQnlaV055WldGMFpTQjViM1Z5SUdsdVpuSmhjM1J5ZFdOMGRYSmxJSGRvWlc0Z2NtVnNiMkZrYVc1bklITmpaVzVsY3k0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMThnUFNCak93b2dJQ0FnZlFvZ0lDQWdjbVZ0YjNabEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZmIySnFaV04wY3l3Z2RDQTlJSFJvYVhNdVgybHVaR2xqWlhOQ2VWVlZTVVFzSUc0Z1BTQjBhR2x6TGw5aWFXNWthVzVuY3l3Z2FTQTlJRzR1YkdWdVozUm9MQ0J5SUQwZ2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxODdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnZJRDBnTUN3Z1lTQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJRzhnSVQwOUlHRTdJQ3NyYnlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdZWEpuZFcxbGJuUnpXMjlkTENCaklEMGdiQzUxZFdsa0xDQm9JRDBnZEZ0alhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHZ2dJVDA5SUhadmFXUWdNQ0FtSmlCb0lENDlJSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnY2lzckxDQmtJRDBnWlZ0MVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmJaQzUxZFdsa1hTQTlJR2dzSUdWYmFGMGdQU0JrTENCMFcyTmRJRDBnZFN3Z1pWdDFYU0E5SUd3N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdMQ0J0SUQwZ2FUc2daaUFoUFQwZ2JUc2dLeXRtS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlHNWJabDBzSUhZZ1BTQjRXM1ZkTENCbklEMGdlRnRvWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRXMmhkSUQwZ2Rpd2dlRnQxWFNBOUlHYzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxOGdQU0J5T3dvZ0lDQWdmUW9nSUNBZ2RXNWpZV05vWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDI5aWFtVmpkSE1zSUhRZ1BTQjBhR2x6TGw5cGJtUnBZMlZ6UW5sVlZVbEVMQ0J1SUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUdrZ1BTQnVMbXhsYm1kMGFDd2djaUE5SUhSb2FYTXVia05oWTJobFpFOWlhbVZqZEhOZkxDQnZJRDBnWlM1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JoSUQwZ01Dd2diQ0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUdFZ0lUMDlJR3c3SUNzcllTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnWVhKbmRXMWxiblJ6VzJGZExDQm9JRDBnWXk1MWRXbGtMQ0IxSUQwZ2RGdG9YVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFVnSVQwOUlIWnZhV1FnTUNrZ2FXWWdLR1JsYkdWMFpTQjBXMmhkTENCMUlEd2djaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0F0TFhJc0lHWWdQU0JsVzJSZExDQnRJRDBnTFMxdkxDQjRJRDBnWlZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmJaaTUxZFdsa1hTQTlJSFVzSUdWYmRWMGdQU0JtTENCMFczZ3VkWFZwWkYwZ1BTQmtMQ0JsVzJSZElEMGdlQ3dnWlM1d2IzQW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkaUE5SURBc0lHY2dQU0JwT3lCMklDRTlQU0JuT3lBckszWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnYmx0MlhTd2dYeUE5SUhCYlpGMHNJSGtnUFNCd1cyMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCYmRWMGdQU0JmTENCd1cyUmRJRDBnZVN3Z2NDNXdiM0FvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ0xTMXZMQ0JtSUQwZ1pWdGtYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1FnUGlBd0lDWW1JQ2gwVzJZdWRYVnBaRjBnUFNCMUtTd2daVnQxWFNBOUlHWXNJR1V1Y0c5d0tDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMGdQU0F3TENCNElEMGdhVHNnYlNBaFBUMGdlRHNnS3l0dEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJRzViYlYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbHQxWFNBOUlIWmJaRjBzSUhZdWNHOXdLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMThnUFNCeU93b2dJQ0FnZlFvZ0lDQWdjM1ZpYzJOeWFXSmxYeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TGw5aWFXNWthVzVuYzBsdVpHbGpaWE5DZVZCaGRHZ3NJR2tnUFNCdVcyVmRMQ0J5SUQwZ2RHaHBjeTVmWW1sdVpHbHVaM003Q2lBZ0lDQWdJQ0FnYVdZZ0tHa2dJVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJSEpiYVYwN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMGFHbHpMbDl3WVhSb2N5d2dZU0E5SUhSb2FYTXVYM0JoY25ObFpGQmhkR2h6TENCc0lEMGdkR2hwY3k1ZmIySnFaV04wY3l3Z1l5QTlJR3d1YkdWdVozUm9MQ0JvSUQwZ2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxOHNJSFVnUFNCdVpYY2dRWEp5WVhrb1l5azdDaUFnSUNBZ0lDQWdhU0E5SUhJdWJHVnVaM1JvTENCdVcyVmRJRDBnYVN3Z2J5NXdkWE5vS0dVcExDQmhMbkIxYzJnb2RDa3NJSEl1Y0hWemFDaDFLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1FnUFNCb0xDQm1JRDBnYkM1c1pXNW5kR2c3SUdRZ0lUMDlJR1k3SUNzclpDbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnYkZ0a1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnZFZ0a1hTQTlJRzVsZHlCclpTaHRMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIVTdDaUFnSUNCOUNpQWdJQ0IxYm5OMVluTmpjbWxpWlY4b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZlltbHVaR2x1WjNOSmJtUnBZMlZ6UW5sUVlYUm9MQ0J1SUQwZ2RGdGxYVHNLSUNBZ0lDQWdJQ0JwWmlBb2JpQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVmY0dGMGFITXNJSElnUFNCMGFHbHpMbDl3WVhKelpXUlFZWFJvY3l3Z2J5QTlJSFJvYVhNdVgySnBibVJwYm1kekxDQmhJRDBnYnk1c1pXNW5kR2dnTFNBeExDQnNJRDBnYjF0aFhTd2dZeUE5SUdWYllWMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSYlkxMGdQU0J1TENCdlcyNWRJRDBnYkN3Z2J5NXdiM0FvS1N3Z2NsdHVYU0E5SUhKYllWMHNJSEl1Y0c5d0tDa3NJR2xiYmwwZ1BTQnBXMkZkTENCcExuQnZjQ2dwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlRzS1dXZ3VjSEp2ZEc5MGVYQmxMbWx6UVc1cGJXRjBhVzl1VDJKcVpXTjBSM0p2ZFhBZ1BTQWhNRHNLZG1GeUlGcG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpQTlJRzUxYkd3c0lHa2dQU0IwTG1Kc1pXNWtUVzlrWlNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmYldsNFpYSWdQU0JsTENCMGFHbHpMbDlqYkdsd0lEMGdkQ3dnZEdocGN5NWZiRzlqWVd4U2IyOTBJRDBnYml3Z2RHaHBjeTVpYkdWdVpFMXZaR1VnUFNCcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RDNTBjbUZqYTNNc0lHOGdQU0J5TG14bGJtZDBhQ3dnWVNBOUlHNWxkeUJCY25KaGVTaHZLU3dnYkNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1a2FXNW5VM1JoY25RNklFMXBMQW9nSUNBZ0lDQWdJQ0FnSUNCbGJtUnBibWRGYm1RNklFMXBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nUFNBd095QmpJQ0U5UFNCdk95QXJLMk1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlISmJZMTB1WTNKbFlYUmxTVzUwWlhKd2IyeGhiblFvYm5Wc2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUdGYlkxMGdQU0JvTENCb0xuTmxkSFJwYm1keklEMGdiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NWZhVzUwWlhKd2IyeGhiblJUWlhSMGFXNW5jeUE5SUd3c0lIUm9hWE11WDJsdWRHVnljRzlzWVc1MGN5QTlJR0VzSUhSb2FYTXVYM0J5YjNCbGNuUjVRbWx1WkdsdVozTWdQU0J1WlhjZ1FYSnlZWGtvYnlrc0lIUm9hWE11WDJOaFkyaGxTVzVrWlhnZ1BTQnVkV3hzTENCMGFHbHpMbDlpZVVOc2FYQkRZV05vWlVsdVpHVjRJRDBnYm5Wc2JDd2dkR2hwY3k1ZmRHbHRaVk5qWVd4bFNXNTBaWEp3YjJ4aGJuUWdQU0J1ZFd4c0xDQjBhR2x6TGw5M1pXbG5hSFJKYm5SbGNuQnZiR0Z1ZENBOUlHNTFiR3dzSUhSb2FYTXViRzl2Y0NBOUlFbGtMQ0IwYUdsekxsOXNiMjl3UTI5MWJuUWdQU0F0TVN3Z2RHaHBjeTVmYzNSaGNuUlVhVzFsSUQwZ2JuVnNiQ3dnZEdocGN5NTBhVzFsSUQwZ01Dd2dkR2hwY3k1MGFXMWxVMk5oYkdVZ1BTQXhMQ0IwYUdsekxsOWxabVpsWTNScGRtVlVhVzFsVTJOaGJHVWdQU0F4TENCMGFHbHpMbmRsYVdkb2RDQTlJREVzSUhSb2FYTXVYMlZtWm1WamRHbDJaVmRsYVdkb2RDQTlJREVzSUhSb2FYTXVjbVZ3WlhScGRHbHZibk1nUFNBeElDOGdNQ3dnZEdocGN5NXdZWFZ6WldRZ1BTQWhNU3dnZEdocGN5NWxibUZpYkdWa0lEMGdJVEFzSUhSb2FYTXVZMnhoYlhCWGFHVnVSbWx1YVhOb1pXUWdQU0FoTVN3Z2RHaHBjeTU2WlhKdlUyeHZjR1ZCZEZOMFlYSjBJRDBnSVRBc0lIUm9hWE11ZW1WeWIxTnNiM0JsUVhSRmJtUWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lIQnNZWGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMjFwZUdWeUxsOWhZM1JwZG1GMFpVRmpkR2x2YmloMGFHbHpLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE4wYjNBb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDIxcGVHVnlMbDlrWldGamRHbDJZWFJsUVdOMGFXOXVLSFJvYVhNcExDQjBhR2x6TG5KbGMyVjBLQ2s3Q2lBZ0lDQjlDaUFnSUNCeVpYTmxkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZWFZ6WldRZ1BTQWhNU3dnZEdocGN5NWxibUZpYkdWa0lEMGdJVEFzSUhSb2FYTXVkR2x0WlNBOUlEQXNJSFJvYVhNdVgyeHZiM0JEYjNWdWRDQTlJQzB4TENCMGFHbHpMbDl6ZEdGeWRGUnBiV1VnUFNCdWRXeHNMQ0IwYUdsekxuTjBiM0JHWVdScGJtY29LUzV6ZEc5d1YyRnljR2x1WnlncE93b2dJQ0FnZlFvZ0lDQWdhWE5TZFc1dWFXNW5LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtVnVZV0pzWldRZ0ppWWdJWFJvYVhNdWNHRjFjMlZrSUNZbUlIUm9hWE11ZEdsdFpWTmpZV3hsSUNFOVBTQXdJQ1ltSUhSb2FYTXVYM04wWVhKMFZHbHRaU0E5UFQwZ2JuVnNiQ0FtSmlCMGFHbHpMbDl0YVhobGNpNWZhWE5CWTNScGRtVkJZM1JwYjI0b2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCcGMxTmphR1ZrZFd4bFpDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmJXbDRaWEl1WDJselFXTjBhWFpsUVdOMGFXOXVLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdjM1JoY25SQmRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzTjBZWEowVkdsdFpTQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSTWIyOXdLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVzYjI5d0lEMGdaU3dnZEdocGN5NXlaWEJsZEdsMGFXOXVjeUE5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkZabVpsWTNScGRtVlhaV2xuYUhRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5kbGFXZG9kQ0E5SUdVc0lIUm9hWE11WDJWbVptVmpkR2wyWlZkbGFXZG9kQ0E5SUhSb2FYTXVaVzVoWW14bFpDQS9JR1VnT2lBd0xDQjBhR2x6TG5OMGIzQkdZV1JwYm1jb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZEVWbVptVmpkR2wyWlZkbGFXZG9kQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZaV1ptWldOMGFYWmxWMlZwWjJoME93b2dJQ0FnZlFvZ0lDQWdabUZrWlVsdUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmMyTm9aV1IxYkdWR1lXUnBibWNvWlN3Z01Dd2dNU2s3Q2lBZ0lDQjlDaUFnSUNCbVlXUmxUM1YwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmYzJOb1pXUjFiR1ZHWVdScGJtY29aU3dnTVN3Z01DazdDaUFnSUNCOUNpQWdJQ0JqY205emMwWmhaR1ZHY205dEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnBaaUFvWlM1bVlXUmxUM1YwS0hRcExDQjBhR2x6TG1aaFpHVkpiaWgwS1N3Z2Jpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMk5zYVhBdVpIVnlZWFJwYjI0c0lISWdQU0JsTGw5amJHbHdMbVIxY21GMGFXOXVMQ0J2SUQwZ2NpQXZJR2tzSUdFZ1BTQnBJQzhnY2pzS0lDQWdJQ0FnSUNBZ0lDQWdaUzUzWVhKd0tERXNJRzhzSUhRcExDQjBhR2x6TG5kaGNuQW9ZU3dnTVN3Z2RDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kzSnZjM05HWVdSbFZHOG9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbU55YjNOelJtRmtaVVp5YjIwb2RHaHBjeXdnZEN3Z2JpazdDaUFnSUNCOUNpQWdJQ0J6ZEc5d1JtRmthVzVuS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmZDJWcFoyaDBTVzUwWlhKd2IyeGhiblE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WDNkbGFXZG9kRWx1ZEdWeWNHOXNZVzUwSUQwZ2JuVnNiQ3dnZEdocGN5NWZiV2w0WlhJdVgzUmhhMlZDWVdOclEyOXVkSEp2YkVsdWRHVnljRzlzWVc1MEtHVXBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVWbVptVmpkR2wyWlZScGJXVlRZMkZzWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEdsdFpWTmpZV3hsSUQwZ1pTd2dkR2hwY3k1ZlpXWm1aV04wYVhabFZHbHRaVk5qWVd4bElEMGdkR2hwY3k1d1lYVnpaV1FnUHlBd0lEb2daU3dnZEdocGN5NXpkRzl3VjJGeWNHbHVaeWdwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBSV1ptWldOMGFYWmxWR2x0WlZOallXeGxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWxabVpsWTNScGRtVlVhVzFsVTJOaGJHVTdDaUFnSUNCOUNpQWdJQ0J6WlhSRWRYSmhkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEdsdFpWTmpZV3hsSUQwZ2RHaHBjeTVmWTJ4cGNDNWtkWEpoZEdsdmJpQXZJR1VzSUhSb2FYTXVjM1J2Y0ZkaGNuQnBibWNvS1RzS0lDQWdJSDBLSUNBZ0lITjVibU5YYVhSb0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MGFXMWxJRDBnWlM1MGFXMWxMQ0IwYUdsekxuUnBiV1ZUWTJGc1pTQTlJR1V1ZEdsdFpWTmpZV3hsTENCMGFHbHpMbk4wYjNCWFlYSndhVzVuS0NrN0NpQWdJQ0I5Q2lBZ0lDQm9ZV3gwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUzWVhKd0tIUm9hWE11WDJWbVptVmpkR2wyWlZScGJXVlRZMkZzWlN3Z01Dd2daU2s3Q2lBZ0lDQjlDaUFnSUNCM1lYSndLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVgyMXBlR1Z5TENCeUlEMGdhUzUwYVcxbExDQnZJRDBnZEdocGN5NTBhVzFsVTJOaGJHVXNJR0VnUFNCMGFHbHpMbDkwYVcxbFUyTmhiR1ZKYm5SbGNuQnZiR0Z1ZERzS0lDQWdJQ0FnSUNCaElEMDlQU0J1ZFd4c0lDWW1JQ2hoSUQwZ2FTNWZiR1Z1WkVOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZENncExDQjBhR2x6TGw5MGFXMWxVMk5oYkdWSmJuUmxjbkJ2YkdGdWRDQTlJR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVM1d1lYSmhiV1YwWlhKUWIzTnBkR2x2Ym5Nc0lHTWdQU0JoTG5OaGJYQnNaVlpoYkhWbGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JGc3dYU0E5SUhJc0lHeGJNVjBnUFNCeUlDc2diaXdnWTFzd1hTQTlJR1VnTHlCdkxDQmpXekZkSUQwZ2RDQXZJRzhzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZEc5d1YyRnljR2x1WnlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDNScGJXVlRZMkZzWlVsdWRHVnljRzlzWVc1ME93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxsOTBhVzFsVTJOaGJHVkpiblJsY25CdmJHRnVkQ0E5SUc1MWJHd3NJSFJvYVhNdVgyMXBlR1Z5TGw5MFlXdGxRbUZqYTBOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZENobEtTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJOYVhobGNpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmJXbDRaWEk3Q2lBZ0lDQjlDaUFnSUNCblpYUkRiR2x3S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlqYkdsd093b2dJQ0FnZlFvZ0lDQWdaMlYwVW05dmRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmJHOWpZV3hTYjI5MElIeDhJSFJvYVhNdVgyMXBlR1Z5TGw5eWIyOTBPd29nSUNBZ2ZRb2dJQ0FnWDNWd1pHRjBaU2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLQ0YwYUdsekxtVnVZV0pzWldRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZkWEJrWVhSbFYyVnBaMmgwS0dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3k1ZmMzUmhjblJVYVcxbE93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdLR1VnTFNCeUtTQXFJRzQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzSUR3Z01DQjhmQ0J1SUQwOVBTQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM04wWVhKMFZHbHRaU0E5SUc1MWJHd3NJSFFnUFNCdUlDb2diRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZENBcVBTQjBhR2x6TGw5MWNHUmhkR1ZVYVcxbFUyTmhiR1VvWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMGFHbHpMbDkxY0dSaGRHVlVhVzFsS0hRcExDQmhJRDBnZEdocGN5NWZkWEJrWVhSbFYyVnBaMmgwS0dVcE93b2dJQ0FnSUNBZ0lHbG1JQ2hoSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhSb2FYTXVYMmx1ZEdWeWNHOXNZVzUwY3l3Z1l5QTlJSFJvYVhNdVgzQnliM0JsY25SNVFtbHVaR2x1WjNNN0NpQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFDaDBhR2x6TG1Kc1pXNWtUVzlrWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJSEZqT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJREFzSUhVZ1BTQnNMbXhsYm1kMGFEc2dhQ0FoUFQwZ2RUc2dLeXRvS1d4YmFGMHVaWFpoYkhWaGRHVW9ieWtzSUdOYmFGMHVZV05qZFcxMWJHRjBaVUZrWkdsMGFYWmxLR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQjFZVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvSUQwZ01Dd2dkU0E5SUd3dWJHVnVaM1JvT3lCb0lDRTlQU0IxT3lBcksyZ3BiRnRvWFM1bGRtRnNkV0YwWlNodktTd2dZMXRvWFM1aFkyTjFiWFZzWVhSbEtHa3NJR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWDNWd1pHRjBaVmRsYVdkb2RDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0F3T3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1WdVlXSnNaV1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhSb2FYTXVkMlZwWjJoME93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgzZGxhV2RvZEVsdWRHVnljRzlzWVc1ME93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JpQWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVMbVYyWVd4MVlYUmxLR1VwV3pCZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQXFQU0JwTENCbElENGdiaTV3WVhKaGJXVjBaWEpRYjNOcGRHbHZibk5iTVYwZ0ppWWdLSFJvYVhNdWMzUnZjRVpoWkdsdVp5Z3BMQ0JwSUQwOVBTQXdJQ1ltSUNoMGFHbHpMbVZ1WVdKc1pXUWdQU0FoTVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWxabVpsWTNScGRtVlhaV2xuYUhRZ1BTQjBMQ0IwT3dvZ0lDQWdmUW9nSUNBZ1gzVndaR0YwWlZScGJXVlRZMkZzWlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQXdPd29nSUNBZ0lDQWdJR2xtSUNnaGRHaHBjeTV3WVhWelpXUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSFJvYVhNdWRHbHRaVk5qWVd4bE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgzUnBiV1ZUWTJGc1pVbHVkR1Z5Y0c5c1lXNTBPd29nSUNBZ0lDQWdJQ0FnSUNCdUlDRTlQU0J1ZFd4c0lDWW1JQ2gwSUNvOUlHNHVaWFpoYkhWaGRHVW9aU2xiTUYwc0lHVWdQaUJ1TG5CaGNtRnRaWFJsY2xCdmMybDBhVzl1YzFzeFhTQW1KaUFvZEdocGN5NXpkRzl3VjJGeWNHbHVaeWdwTENCMElEMDlQU0F3SUQ4Z2RHaHBjeTV3WVhWelpXUWdQU0FoTUNBNklIUm9hWE11ZEdsdFpWTmpZV3hsSUQwZ2RDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlpXWm1aV04wYVhabFZHbHRaVk5qWVd4bElEMGdkQ3dnZERzS0lDQWdJSDBLSUNBZ0lGOTFjR1JoZEdWVWFXMWxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVYMk5zYVhBdVpIVnlZWFJwYjI0c0lHNGdQU0IwYUdsekxteHZiM0FzSUdrZ1BTQjBhR2x6TG5ScGJXVWdLeUJsTENCeUlEMGdkR2hwY3k1ZmJHOXZjRU52ZFc1MExDQnZJRDBnYmlBOVBUMGdSR1E3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdQVDA5SURBcElISmxkSFZ5YmlCeUlEMDlQU0F0TVNBL0lHa2dPaUJ2SUNZbUlDaHlJQ1lnTVNrZ1BUMDlJREVnUHlCMElDMGdhU0E2SUdrN0NpQWdJQ0FnSUNBZ2FXWWdLRzRnUFQwOUlGQmtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISWdQVDA5SUMweElDWW1JQ2gwYUdsekxsOXNiMjl3UTI5MWJuUWdQU0F3TENCMGFHbHpMbDl6WlhSRmJtUnBibWR6S0NFd0xDQWhNQ3dnSVRFcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUGowZ2RDa2dhU0E5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNocElEd2dNQ2tnYVNBOUlEQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ScGJXVWdQU0JwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZySUdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU5zWVcxd1YyaGxia1pwYm1semFHVmtJRDhnZEdocGN5NXdZWFZ6WldRZ1BTQWhNQ0E2SUhSb2FYTXVaVzVoWW14bFpDQTlJQ0V4TENCMGFHbHpMblJwYldVZ1BTQnBMQ0IwYUdsekxsOXRhWGhsY2k1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpWm1sdWFYTm9aV1FpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRmpkR2x2YmpvZ2RHaHBjeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI0NklHVWdQQ0F3SUQ4Z0xURWdPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNBdE1TQW1KaUFvWlNBK1BTQXdJRDhnS0hJZ1BTQXdMQ0IwYUdsekxsOXpaWFJGYm1ScGJtZHpLQ0V3TENCMGFHbHpMbkpsY0dWMGFYUnBiMjV6SUQwOVBTQXdMQ0J2S1NrZ09pQjBhR2x6TGw5elpYUkZibVJwYm1kektIUm9hWE11Y21Wd1pYUnBkR2x2Ym5NZ1BUMDlJREFzSUNFd0xDQnZLU2tzSUdrZ1BqMGdkQ0I4ZkNCcElEd2dNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0JOWVhSb0xtWnNiMjl5S0drZ0x5QjBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnTFQwZ2RDQXFJR0VzSUhJZ0t6MGdUV0YwYUM1aFluTW9ZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJSFJvYVhNdWNtVndaWFJwZEdsdmJuTWdMU0J5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHd2dQRDBnTUNrZ2RHaHBjeTVqYkdGdGNGZG9aVzVHYVc1cGMyaGxaQ0EvSUhSb2FYTXVjR0YxYzJWa0lEMGdJVEFnT2lCMGFHbHpMbVZ1WVdKc1pXUWdQU0FoTVN3Z2FTQTlJR1VnUGlBd0lEOGdkQ0E2SURBc0lIUm9hWE11ZEdsdFpTQTlJR2tzSUhSb2FYTXVYMjFwZUdWeUxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKbWFXNXBjMmhsWkNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV04wYVc5dU9pQjBhR2x6TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJqb2daU0ErSURBZ1B5QXhJRG9nTFRFS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3dnUFQwOUlERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQmxJRHdnTURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZjMlYwUlc1a2FXNW5jeWhqTENBaFl5d2dieWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhSb2FYTXVYM05sZEVWdVpHbHVaM01vSVRFc0lDRXhMQ0J2S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5c2IyOXdRMjkxYm5RZ1BTQnlMQ0IwYUdsekxuUnBiV1VnUFNCcExDQjBhR2x6TGw5dGFYaGxjaTVrYVhOd1lYUmphRVYyWlc1MEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW14dmIzQWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhZM1JwYjI0NklIUm9hWE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3h2YjNCRVpXeDBZVG9nWVFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZEdocGN5NTBhVzFsSUQwZ2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHOGdKaVlnS0hJZ0ppQXhLU0E5UFQwZ01Ta2djbVYwZFhKdUlIUWdMU0JwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVRzS0lDQWdJSDBLSUNBZ0lGOXpaWFJGYm1ScGJtZHpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVgybHVkR1Z5Y0c5c1lXNTBVMlYwZEdsdVozTTdDaUFnSUNBZ0lDQWdiaUEvSUNocExtVnVaR2x1WjFOMFlYSjBJRDBnWW1rc0lHa3VaVzVrYVc1blJXNWtJRDBnWW1rcElEb2dLR1VnUHlCcExtVnVaR2x1WjFOMFlYSjBJRDBnZEdocGN5NTZaWEp2VTJ4dmNHVkJkRk4wWVhKMElEOGdZbWtnT2lCTmFTQTZJR2t1Wlc1a2FXNW5VM1JoY25RZ1BTQlBjeXdnZENBL0lHa3VaVzVrYVc1blJXNWtJRDBnZEdocGN5NTZaWEp2VTJ4dmNHVkJkRVZ1WkNBL0lHSnBJRG9nVFdrZ09pQnBMbVZ1WkdsdVowVnVaQ0E5SUU5ektUc0tJQ0FnSUgwS0lDQWdJRjl6WTJobFpIVnNaVVpoWkdsdVp5aGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TGw5dGFYaGxjaXdnY2lBOUlHa3VkR2x0WlN3Z2J5QTlJSFJvYVhNdVgzZGxhV2RvZEVsdWRHVnljRzlzWVc1ME93b2dJQ0FnSUNBZ0lHOGdQVDA5SUc1MWJHd2dKaVlnS0c4Z1BTQnBMbDlzWlc1a1EyOXVkSEp2YkVsdWRHVnljRzlzWVc1MEtDa3NJSFJvYVhNdVgzZGxhV2RvZEVsdWRHVnljRzlzWVc1MElEMGdieWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J2TG5CaGNtRnRaWFJsY2xCdmMybDBhVzl1Y3l3Z2JDQTlJRzh1YzJGdGNHeGxWbUZzZFdWek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaFd6QmRJRDBnY2l3Z2JGc3dYU0E5SUhRc0lHRmJNVjBnUFNCeUlDc2daU3dnYkZzeFhTQTlJRzRzSUhSb2FYTTdDaUFnSUNCOUNuMHNJQ1JvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11WDNKdmIzUWdQU0JsTENCMGFHbHpMbDlwYm1sMFRXVnRiM0o1VFdGdVlXZGxjaWdwTENCMGFHbHpMbDloWTJOMVNXNWtaWGdnUFNBd0xDQjBhR2x6TG5ScGJXVWdQU0F3TENCMGFHbHpMblJwYldWVFkyRnNaU0E5SURFN0NpQWdJQ0I5Q2lBZ0lDQmZZbWx1WkVGamRHbHZiaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxMbDlzYjJOaGJGSnZiM1FnZkh3Z2RHaHBjeTVmY205dmRDd2dhU0E5SUdVdVgyTnNhWEF1ZEhKaFkydHpMQ0J5SUQwZ2FTNXNaVzVuZEdnc0lHOGdQU0JsTGw5d2NtOXdaWEowZVVKcGJtUnBibWR6TENCaElEMGdaUzVmYVc1MFpYSndiMnhoYm5SekxDQnNJRDBnYmk1MWRXbGtMQ0JqSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM05DZVZKdmIzUkJibVJPWVcxbExDQm9JRDBnWTF0c1hUc0tJQ0FnSUNBZ0lDQm9JRDA5UFNCMmIybGtJREFnSmlZZ0tHZ2dQU0I3ZlN3Z1kxdHNYU0E5SUdncE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RTQTlJREE3SUhVZ0lUMDlJSEk3SUNzcmRTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnYVZ0MVhTd2daaUE5SUdRdWJtRnRaU3dnYlNBOUlHaGJabDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h0SUNFOVBTQjJiMmxrSURBcElHOWJkVjBnUFNCdE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h0SUQwZ2IxdDFYU3dnYlNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlM1ZlkyRmphR1ZKYm1SbGVDQTlQVDBnYm5Wc2JDQW1KaUFvS3l0dExuSmxabVZ5Wlc1alpVTnZkVzUwTENCMGFHbHpMbDloWkdSSmJtRmpkR2wyWlVKcGJtUnBibWNvYlN3Z2JDd2daaWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCMElDWW1JSFF1WDNCeWIzQmxjblI1UW1sdVpHbHVaM05iZFYwdVltbHVaR2x1Wnk1d1lYSnpaV1JRWVhSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JTQTlJRzVsZHlCWWFDaHJaUzVqY21WaGRHVW9iaXdnWml3Z2VDa3NJR1F1Vm1Gc2RXVlVlWEJsVG1GdFpTd2daQzVuWlhSV1lXeDFaVk5wZW1Vb0tTa3NJQ3NyYlM1eVpXWmxjbVZ1WTJWRGIzVnVkQ3dnZEdocGN5NWZZV1JrU1c1aFkzUnBkbVZDYVc1a2FXNW5LRzBzSUd3c0lHWXBMQ0J2VzNWZElEMGdiVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JoVzNWZExuSmxjM1ZzZEVKMVptWmxjaUE5SUcwdVluVm1abVZ5T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lGOWhZM1JwZG1GMFpVRmpkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0NGMGFHbHpMbDlwYzBGamRHbDJaVUZqZEdsdmJpaGxLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlM1ZlkyRmphR1ZKYm1SbGVDQTlQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQW9aUzVmYkc5allXeFNiMjkwSUh4OElIUm9hWE11WDNKdmIzUXBMblYxYVdRc0lHa2dQU0JsTGw5amJHbHdMblYxYVdRc0lISWdQU0IwYUdsekxsOWhZM1JwYjI1elFubERiR2x3VzJsZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmWW1sdVpFRmpkR2x2YmlobExDQnlJQ1ltSUhJdWEyNXZkMjVCWTNScGIyNXpXekJkS1N3Z2RHaHBjeTVmWVdSa1NXNWhZM1JwZG1WQlkzUnBiMjRvWlN3Z2FTd2diaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTGw5d2NtOXdaWEowZVVKcGJtUnBibWR6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnSVQwOUlHazdJQ3NyYmlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSYmJsMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlMblZ6WlVOdmRXNTBLeXNnUFQwOUlEQWdKaVlnS0hSb2FYTXVYMnhsYm1SQ2FXNWthVzVuS0hJcExDQnlMbk5oZG1WUGNtbG5hVzVoYkZOMFlYUmxLQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMnhsYm1SQlkzUnBiMjRvWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdYMlJsWVdOMGFYWmhkR1ZCWTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGw5cGMwRmpkR2wyWlVGamRHbHZiaWhsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WDNCeWIzQmxjblI1UW1sdVpHbHVaM003Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUFoUFQwZ2FUc2dLeXR1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEZ0dVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDMHRjaTUxYzJWRGIzVnVkQ0E5UFQwZ01DQW1KaUFvY2k1eVpYTjBiM0psVDNKcFoybHVZV3hUZEdGMFpTZ3BMQ0IwYUdsekxsOTBZV3RsUW1GamEwSnBibVJwYm1jb2Npa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzUmhhMlZDWVdOclFXTjBhVzl1S0dVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJRjlwYm1sMFRXVnRiM0o1VFdGdVlXZGxjaWdwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDloWTNScGIyNXpJRDBnVzEwc0lIUm9hWE11WDI1QlkzUnBkbVZCWTNScGIyNXpJRDBnTUN3Z2RHaHBjeTVmWVdOMGFXOXVjMEo1UTJ4cGNDQTlJSHQ5TENCMGFHbHpMbDlpYVc1a2FXNW5jeUE5SUZ0ZExDQjBhR2x6TGw5dVFXTjBhWFpsUW1sdVpHbHVaM01nUFNBd0xDQjBhR2x6TGw5aWFXNWthVzVuYzBKNVVtOXZkRUZ1WkU1aGJXVWdQU0I3ZlN3Z2RHaHBjeTVmWTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3lBOUlGdGRMQ0IwYUdsekxsOXVRV04wYVhabFEyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN5QTlJREE3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsek93b2dJQ0FnSUNBZ0lIUm9hWE11YzNSaGRITWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRmpkR2x2Ym5NNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ0IwYjNSaGJDQW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVgyRmpkR2x2Ym5NdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQnBibFZ6WlNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDI1QlkzUnBkbVZCWTNScGIyNXpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JpYVc1a2FXNW5jem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElIUnZkR0ZzSUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVmWW1sdVpHbHVaM011YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZENCcGJsVnpaU0FvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVXVYMjVCWTNScGRtVkNhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElIUnZkR0ZzSUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVmWTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3k1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElHbHVWWE5sSUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVmYmtGamRHbDJaVU52Ym5SeWIyeEpiblJsY25CdmJHRnVkSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWDJselFXTjBhWFpsUVdOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVgyTmhZMmhsU1c1a1pYZzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUc1MWJHd2dKaVlnZENBOElIUm9hWE11WDI1QlkzUnBkbVZCWTNScGIyNXpPd29nSUNBZ2ZRb2dJQ0FnWDJGa1pFbHVZV04wYVhabFFXTjBhVzl1S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMkZqZEdsdmJuTXNJSElnUFNCMGFHbHpMbDloWTNScGIyNXpRbmxEYkdsd0xDQnZJRDBnY2x0MFhUc0tJQ0FnSUNBZ0lDQnBaaUFvYnlBOVBUMGdkbTlwWkNBd0tTQnZJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnJibTkzYmtGamRHbHZibk02SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVS0lDQWdJQ0FnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lXTjBhVzl1UW5sU2IyOTBPaUI3ZlFvZ0lDQWdJQ0FnSUgwc0lHVXVYMko1UTJ4cGNFTmhZMmhsU1c1a1pYZ2dQU0F3TENCeVczUmRJRDBnYnpzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdkxtdHViM2R1UVdOMGFXOXVjenNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNWZZbmxEYkdsd1EyRmphR1ZKYm1SbGVDQTlJR0V1YkdWdVozUm9MQ0JoTG5CMWMyZ29aU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdVdVgyTmhZMmhsU1c1a1pYZ2dQU0JwTG14bGJtZDBhQ3dnYVM1d2RYTm9LR1VwTENCdkxtRmpkR2x2YmtKNVVtOXZkRnR1WFNBOUlHVTdDaUFnSUNCOUNpQWdJQ0JmY21WdGIzWmxTVzVoWTNScGRtVkJZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZllXTjBhVzl1Y3l3Z2JpQTlJSFJiZEM1c1pXNW5kR2dnTFNBeFhTd2dhU0E5SUdVdVgyTmhZMmhsU1c1a1pYZzdDaUFnSUNBZ0lDQWdiaTVmWTJGamFHVkpibVJsZUNBOUlHa3NJSFJiYVYwZ1BTQnVMQ0IwTG5CdmNDZ3BMQ0JsTGw5allXTm9aVWx1WkdWNElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdVgyTnNhWEF1ZFhWcFpDd2dieUE5SUhSb2FYTXVYMkZqZEdsdmJuTkNlVU5zYVhBc0lHRWdQU0J2VzNKZExDQnNJRDBnWVM1cmJtOTNia0ZqZEdsdmJuTXNJR01nUFNCc1cyd3ViR1Z1WjNSb0lDMGdNVjBzSUdnZ1BTQmxMbDlpZVVOc2FYQkRZV05vWlVsdVpHVjRPd29nSUNBZ0lDQWdJR011WDJKNVEyeHBjRU5oWTJobFNXNWtaWGdnUFNCb0xDQnNXMmhkSUQwZ1l5d2diQzV3YjNBb0tTd2daUzVmWW5sRGJHbHdRMkZqYUdWSmJtUmxlQ0E5SUc1MWJHdzdDaUFnSUNBZ0lDQWdiR1YwSUhVZ1BTQmhMbUZqZEdsdmJrSjVVbTl2ZEN3Z1pDQTlJQ2hsTGw5c2IyTmhiRkp2YjNRZ2ZId2dkR2hwY3k1ZmNtOXZkQ2t1ZFhWcFpEc0tJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2RWdGtYU3dnYkM1c1pXNW5kR2dnUFQwOUlEQWdKaVlnWkdWc1pYUmxJRzliY2wwc0lIUm9hWE11WDNKbGJXOTJaVWx1WVdOMGFYWmxRbWx1WkdsdVozTkdiM0pCWTNScGIyNG9aU2s3Q2lBZ0lDQjlDaUFnSUNCZmNtVnRiM1psU1c1aFkzUnBkbVZDYVc1a2FXNW5jMFp2Y2tGamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExsOXdjbTl3WlhKMGVVSnBibVJwYm1kek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUFoUFQwZ2FUc2dLeXR1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBXMjVkT3dvZ0lDQWdJQ0FnSUNBZ0lDQXRMWEl1Y21WbVpYSmxibU5sUTI5MWJuUWdQVDA5SURBZ0ppWWdkR2hwY3k1ZmNtVnRiM1psU1c1aFkzUnBkbVZDYVc1a2FXNW5LSElwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lGOXNaVzVrUVdOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVYMkZqZEdsdmJuTXNJRzRnUFNCbExsOWpZV05vWlVsdVpHVjRMQ0JwSUQwZ2RHaHBjeTVmYmtGamRHbDJaVUZqZEdsdmJuTXJLeXdnY2lBOUlIUmJhVjA3Q2lBZ0lDQWdJQ0FnWlM1ZlkyRmphR1ZKYm1SbGVDQTlJR2tzSUhSYmFWMGdQU0JsTENCeUxsOWpZV05vWlVsdVpHVjRJRDBnYml3Z2RGdHVYU0E5SUhJN0NpQWdJQ0I5Q2lBZ0lDQmZkR0ZyWlVKaFkydEJZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZllXTjBhVzl1Y3l3Z2JpQTlJR1V1WDJOaFkyaGxTVzVrWlhnc0lHa2dQU0F0TFhSb2FYTXVYMjVCWTNScGRtVkJZM1JwYjI1ekxDQnlJRDBnZEZ0cFhUc0tJQ0FnSUNBZ0lDQmxMbDlqWVdOb1pVbHVaR1Y0SUQwZ2FTd2dkRnRwWFNBOUlHVXNJSEl1WDJOaFkyaGxTVzVrWlhnZ1BTQnVMQ0IwVzI1ZElEMGdjanNLSUNBZ0lIMEtJQ0FnSUY5aFpHUkpibUZqZEdsMlpVSnBibVJwYm1jb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM05DZVZKdmIzUkJibVJPWVcxbExDQnlJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJRzhnUFNCcFczUmRPd29nSUNBZ0lDQWdJRzhnUFQwOUlIWnZhV1FnTUNBbUppQW9ieUE5SUh0OUxDQnBXM1JkSUQwZ2J5a3NJRzliYmwwZ1BTQmxMQ0JsTGw5allXTm9aVWx1WkdWNElEMGdjaTVzWlc1bmRHZ3NJSEl1Y0hWemFDaGxLVHNLSUNBZ0lIMEtJQ0FnSUY5eVpXMXZkbVZKYm1GamRHbDJaVUpwYm1ScGJtY29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJRzRnUFNCbExtSnBibVJwYm1jc0lHa2dQU0J1TG5KdmIzUk9iMlJsTG5WMWFXUXNJSElnUFNCdUxuQmhkR2dzSUc4Z1BTQjBhR2x6TGw5aWFXNWthVzVuYzBKNVVtOXZkRUZ1WkU1aGJXVXNJR0VnUFNCdlcybGRMQ0JzSUQwZ2RGdDBMbXhsYm1kMGFDQXRJREZkTENCaklEMGdaUzVmWTJGamFHVkpibVJsZURzS0lDQWdJQ0FnSUNCc0xsOWpZV05vWlVsdVpHVjRJRDBnWXl3Z2RGdGpYU0E5SUd3c0lIUXVjRzl3S0Nrc0lHUmxiR1YwWlNCaFczSmRMQ0JQWW1wbFkzUXVhMlY1Y3loaEtTNXNaVzVuZEdnZ1BUMDlJREFnSmlZZ1pHVnNaWFJsSUc5YmFWMDdDaUFnSUNCOUNpQWdJQ0JmYkdWdVpFSnBibVJwYm1jb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHNGdQU0JsTGw5allXTm9aVWx1WkdWNExDQnBJRDBnZEdocGN5NWZia0ZqZEdsMlpVSnBibVJwYm1kekt5c3NJSElnUFNCMFcybGRPd29nSUNBZ0lDQWdJR1V1WDJOaFkyaGxTVzVrWlhnZ1BTQnBMQ0IwVzJsZElEMGdaU3dnY2k1ZlkyRmphR1ZKYm1SbGVDQTlJRzRzSUhSYmJsMGdQU0J5T3dvZ0lDQWdmUW9nSUNBZ1gzUmhhMlZDWVdOclFtbHVaR2x1WnlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5aWFXNWthVzVuY3l3Z2JpQTlJR1V1WDJOaFkyaGxTVzVrWlhnc0lHa2dQU0F0TFhSb2FYTXVYMjVCWTNScGRtVkNhVzVrYVc1bmN5d2djaUE5SUhSYmFWMDdDaUFnSUNBZ0lDQWdaUzVmWTJGamFHVkpibVJsZUNBOUlHa3NJSFJiYVYwZ1BTQmxMQ0J5TGw5allXTm9aVWx1WkdWNElEMGdiaXdnZEZ0dVhTQTlJSEk3Q2lBZ0lDQjlDaUFnSUNCZmJHVnVaRU52Ym5SeWIyeEpiblJsY25CdmJHRnVkQ2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVYMk52Ym5SeWIyeEpiblJsY25CdmJHRnVkSE1zSUhRZ1BTQjBhR2x6TGw5dVFXTjBhWFpsUTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3lzckxDQnVJRDBnWlZ0MFhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQTlQVDBnZG05cFpDQXdJQ1ltSUNodUlEMGdibVYzSUU1aEtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb01pa3NJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29NaWtzSURFc0lIUm9hWE11WDJOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhOU1pYTjFiSFJDZFdabVpYSXBMQ0J1TGw5ZlkyRmphR1ZKYm1SbGVDQTlJSFFzSUdWYmRGMGdQU0J1S1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJRjkwWVd0bFFtRmphME52Ym5SeWIyeEpiblJsY25CdmJHRnVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDlqYjI1MGNtOXNTVzUwWlhKd2IyeGhiblJ6TENCdUlEMGdaUzVmWDJOaFkyaGxTVzVrWlhnc0lHa2dQU0F0TFhSb2FYTXVYMjVCWTNScGRtVkRiMjUwY205c1NXNTBaWEp3YjJ4aGJuUnpMQ0J5SUQwZ2RGdHBYVHNLSUNBZ0lDQWdJQ0JsTGw5ZlkyRmphR1ZKYm1SbGVDQTlJR2tzSUhSYmFWMGdQU0JsTENCeUxsOWZZMkZqYUdWSmJtUmxlQ0E5SUc0c0lIUmJibDBnUFNCeU93b2dJQ0FnZlFvZ0lDQWdZMnhwY0VGamRHbHZiaWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwSUh4OElIUm9hWE11WDNKdmIzUXNJSElnUFNCcExuVjFhV1FzSUc4Z1BTQjBlWEJsYjJZZ1pTQTlQU0FpYzNSeWFXNW5JaUEvSUV4eUxtWnBibVJDZVU1aGJXVW9hU3dnWlNrZ09pQmxMQ0JoSUQwZ2J5QWhQVDBnYm5Wc2JDQS9JRzh1ZFhWcFpDQTZJR1VzSUd3Z1BTQjBhR2x6TGw5aFkzUnBiMjV6UW5sRGJHbHdXMkZkTENCaklEMGdiblZzYkRzS0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaHZJQ0U5UFNCdWRXeHNJRDhnYmlBOUlHOHVZbXhsYm1STmIyUmxJRG9nYmlBOUlIVmhLU3dnYkNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYkM1aFkzUnBiMjVDZVZKdmIzUmJjbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gxSUNFOVBTQjJiMmxrSURBZ0ppWWdkUzVpYkdWdVpFMXZaR1VnUFQwOUlHNHBJSEpsZEhWeWJpQjFPd29nSUNBZ0lDQWdJQ0FnSUNCaklEMGdiQzVyYm05M2JrRmpkR2x2Ym5OYk1GMHNJRzhnUFQwOUlHNTFiR3dnSmlZZ0tHOGdQU0JqTGw5amJHbHdLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHOGdQVDA5SUc1MWJHd3BJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnYm1WM0lGcG9LSFJvYVhNc0lHOHNJSFFzSUc0cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlpYVc1a1FXTjBhVzl1S0dnc0lHTXBMQ0IwYUdsekxsOWhaR1JKYm1GamRHbDJaVUZqZEdsdmJpaG9MQ0JoTENCeUtTd2dhRHNLSUNBZ0lIMEtJQ0FnSUdWNGFYTjBhVzVuUVdOMGFXOXVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUWdmSHdnZEdocGN5NWZjbTl2ZEN3Z2FTQTlJRzR1ZFhWcFpDd2djaUE5SUhSNWNHVnZaaUJsSUQwOUlDSnpkSEpwYm1jaUlEOGdUSEl1Wm1sdVpFSjVUbUZ0WlNodUxDQmxLU0E2SUdVc0lHOGdQU0J5SUQ4Z2NpNTFkV2xrSURvZ1pTd2dZU0E5SUhSb2FYTXVYMkZqZEdsdmJuTkNlVU5zYVhCYmIxMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRWdJVDA5SUhadmFXUWdNQ0FtSmlCaExtRmpkR2x2YmtKNVVtOXZkRnRwWFNCOGZDQnVkV3hzT3dvZ0lDQWdmUW9nSUNBZ2MzUnZjRUZzYkVGamRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVYMkZqZEdsdmJuTXNJSFFnUFNCMGFHbHpMbDl1UVdOMGFYWmxRV04wYVc5dWN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0IwSUMwZ01Uc2diaUErUFNBd095QXRMVzRwWlZ0dVhTNXpkRzl3S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVZ0tqMGdkR2hwY3k1MGFXMWxVMk5oYkdVN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDloWTNScGIyNXpMQ0J1SUQwZ2RHaHBjeTVmYmtGamRHbDJaVUZqZEdsdmJuTXNJR2tnUFNCMGFHbHpMblJwYldVZ0t6MGdaU3dnY2lBOUlFMWhkR2d1YzJsbmJpaGxLU3dnYnlBOUlIUm9hWE11WDJGalkzVkpibVJsZUNCZVBTQXhPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZeUE5SURBN0lHTWdJVDA5SUc0N0lDc3JZeWwwVzJOZExsOTFjR1JoZEdVb2FTd2daU3dnY2l3Z2J5azdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TGw5aWFXNWthVzVuY3l3Z2JDQTlJSFJvYVhNdVgyNUJZM1JwZG1WQ2FXNWthVzVuY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdPeUJqSUNFOVBTQnNPeUFySzJNcFlWdGpYUzVoY0hCc2VTaHZLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRlJwYldVb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWRHbHRaU0E5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNRHNnZENBOElIUm9hWE11WDJGamRHbHZibk11YkdWdVozUm9PeUIwS3lzcGRHaHBjeTVmWVdOMGFXOXVjMXQwWFM1MGFXMWxJRDBnTURzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTFjR1JoZEdVb1pTazdDaUFnSUNCOUNpQWdJQ0JuWlhSU2IyOTBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXliMjkwT3dvZ0lDQWdmUW9nSUNBZ2RXNWpZV05vWlVOc2FYQW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZV04wYVc5dWN5d2diaUE5SUdVdWRYVnBaQ3dnYVNBOUlIUm9hWE11WDJGamRHbHZibk5DZVVOc2FYQXNJSElnUFNCcFcyNWRPd29nSUNBZ0lDQWdJR2xtSUNoeUlDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCeUxtdHViM2R1UVdOMGFXOXVjenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaElEMGdNQ3dnYkNBOUlHOHViR1Z1WjNSb095QmhJQ0U5UFNCc095QXJLMkVwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0J2VzJGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmWkdWaFkzUnBkbUYwWlVGamRHbHZiaWhqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnWXk1ZlkyRmphR1ZKYm1SbGVDd2dkU0E5SUhSYmRDNXNaVzVuZEdnZ0xTQXhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR011WDJOaFkyaGxTVzVrWlhnZ1BTQnVkV3hzTENCakxsOWllVU5zYVhCRFlXTm9aVWx1WkdWNElEMGdiblZzYkN3Z2RTNWZZMkZqYUdWSmJtUmxlQ0E5SUdnc0lIUmJhRjBnUFNCMUxDQjBMbkJ2Y0NncExDQjBhR2x6TGw5eVpXMXZkbVZKYm1GamRHbDJaVUpwYm1ScGJtZHpSbTl5UVdOMGFXOXVLR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0JwVzI1ZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSFZ1WTJGamFHVlNiMjkwS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVkWFZwWkN3Z2JpQTlJSFJvYVhNdVgyRmpkR2x2Ym5OQ2VVTnNhWEE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUdsdUlHNHBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc1YmIxMHVZV04wYVc5dVFubFNiMjkwTENCc0lEMGdZVnQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdiQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TGw5a1pXRmpkR2wyWVhSbFFXTjBhVzl1S0d3cExDQjBhR2x6TGw5eVpXMXZkbVZKYm1GamRHbDJaVUZqZEdsdmJpaHNLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWZZbWx1WkdsdVozTkNlVkp2YjNSQmJtUk9ZVzFsTENCeUlEMGdhVnQwWFRzS0lDQWdJQ0FnSUNCcFppQW9jaUFoUFQwZ2RtOXBaQ0F3S1NCbWIzSW9iR1YwSUc4Z2FXNGdjaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2NsdHZYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1lTNXlaWE4wYjNKbFQzSnBaMmx1WVd4VGRHRjBaU2dwTENCMGFHbHpMbDl5WlcxdmRtVkpibUZqZEdsMlpVSnBibVJwYm1jb1lTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZFc1allXTm9aVUZqZEdsdmJpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbVY0YVhOMGFXNW5RV04wYVc5dUtHVXNJSFFwT3dvZ0lDQWdJQ0FnSUc0Z0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVgyUmxZV04wYVhaaGRHVkJZM1JwYjI0b2Jpa3NJSFJvYVhNdVgzSmxiVzkyWlVsdVlXTjBhWFpsUVdOMGFXOXVLRzRwS1RzS0lDQWdJSDBLZlRzS0pHZ3VjSEp2ZEc5MGVYQmxMbDlqYjI1MGNtOXNTVzUwWlhKd2IyeGhiblJ6VW1WemRXeDBRblZtWm1WeUlEMGdibVYzSUVac2IyRjBNekpCY25KaGVTZ3hLVHNLZG1GeUlHZHZJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnZEhsd1pXOW1JR1VnUFQwZ0luTjBjbWx1WnlJZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vlc1cFptOXliVG9nVkhsd1pTQndZWEpoYldWMFpYSWdhWE1nYm04Z2JHOXVaMlZ5SUc1bFpXUmxaQzRpS1N3Z1pTQTlJR0Z5WjNWdFpXNTBjMXN4WFNrc0lIUm9hWE11ZG1Gc2RXVWdQU0JsT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5Qm5ieWgwYUdsekxuWmhiSFZsTG1Oc2IyNWxJRDA5UFNCMmIybGtJREFnUHlCMGFHbHpMblpoYkhWbElEb2dkR2hwY3k1MllXeDFaUzVqYkc5dVpTZ3BLVHNLSUNBZ0lIMEtmU3dnYW1nZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUNSdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0Z1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVWdQU0J1T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWJXVnphRkJsY2tGMGRISnBZblYwWlNBOUlHVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlITjFjR1Z5TG1Oc2IyNWxLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG0xbGMyaFFaWEpCZEhSeWFXSjFkR1VnUFNCMGFHbHpMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVXNJSFE3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1selNXNXpkR0Z1WTJWa1NXNTBaWEpzWldGMlpXUkNkV1ptWlhJZ1BTQWhNQ3dnZEM1dFpYTm9VR1Z5UVhSMGNtbGlkWFJsSUQwZ2RHaHBjeTV0WlhOb1VHVnlRWFIwY21saWRYUmxMQ0IwT3dvZ0lDQWdmUXA5T3dwcWFDNXdjbTkwYjNSNWNHVXVhWE5KYm5OMFlXNWpaV1JKYm5SbGNteGxZWFpsWkVKMVptWmxjaUE5SUNFd093cDJZWElnVVdnZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcExDQnlLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtSjFabVpsY2lBOUlHVXNJSFJvYVhNdWRIbHdaU0E5SUhRc0lIUm9hWE11YVhSbGJWTnBlbVVnUFNCdUxDQjBhR2x6TG1Wc1pXMWxiblJUYVhwbElEMGdhU3dnZEdocGN5NWpiM1Z1ZENBOUlISXNJSFJvYVhNdWRtVnljMmx2YmlBOUlEQTdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2JtVmxaSE5WY0dSaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVZ1BUMDlJQ0V3SUNZbUlIUm9hWE11ZG1WeWMybHZiaXNyT3dvZ0lDQWdmUW9nSUNBZ2MyVjBRblZtWm1WeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aWRXWm1aWElnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBWSGx3WlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRIbHdaU0E5SUdVc0lIUm9hWE11Wld4bGJXVnVkRk5wZW1VZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwU1hSbGJWTnBlbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWwwWlcxVGFYcGxJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFTnZkVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjNWdWRDQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbEZvTG5CeWIzUnZkSGx3WlM1cGMwZE1RblZtWm1WeVFYUjBjbWxpZFhSbElEMGdJVEE3Q25aaGNpQkZlU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNGdQU0F3TENCcElEMGdNU0F2SURBcGV3b2dJQ0FnSUNBZ0lIUm9hWE11Y21GNUlEMGdibVYzSUVOdUtHVXNJSFFwTENCMGFHbHpMbTVsWVhJZ1BTQnVMQ0IwYUdsekxtWmhjaUE5SUdrc0lIUm9hWE11WTJGdFpYSmhJRDBnYm5Wc2JDd2dkR2hwY3k1c1lYbGxjbk1nUFNCdVpYY2dTbk1zSUhSb2FYTXVjR0Z5WVcxeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCTlpYTm9PaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdUR2x1WlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHlaWE5vYjJ4a09pQXhDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJRXhQUkRvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUZCdmFXNTBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdoeVpYTm9iMnhrT2lBeENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lGTndjbWwwWlRvZ2UzMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkpoZVM1elpYUW9aU3dnZENrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEyRnRaWEpoS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwSUNZbUlIUXVhWE5RWlhKemNHVmpkR2wyWlVOaGJXVnlZU0EvSUNoMGFHbHpMbkpoZVM1dmNtbG5hVzR1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIUXViV0YwY21sNFYyOXliR1FwTENCMGFHbHpMbkpoZVM1a2FYSmxZM1JwYjI0dWMyVjBLR1V1ZUN3Z1pTNTVMQ0F1TlNrdWRXNXdjbTlxWldOMEtIUXBMbk4xWWloMGFHbHpMbkpoZVM1dmNtbG5hVzRwTG01dmNtMWhiR2w2WlNncExDQjBhR2x6TG1OaGJXVnlZU0E5SUhRcElEb2dkQ0FtSmlCMExtbHpUM0owYUc5bmNtRndhR2xqUTJGdFpYSmhJRDhnS0hSb2FYTXVjbUY1TG05eWFXZHBiaTV6WlhRb1pTNTRMQ0JsTG5rc0lDaDBMbTVsWVhJZ0t5QjBMbVpoY2lrZ0x5QW9kQzV1WldGeUlDMGdkQzVtWVhJcEtTNTFibkJ5YjJwbFkzUW9kQ2tzSUhSb2FYTXVjbUY1TG1ScGNtVmpkR2x2Ymk1elpYUW9NQ3dnTUN3Z0xURXBMblJ5WVc1elptOXliVVJwY21WamRHbHZiaWgwTG0xaGRISnBlRmR2Y214a0tTd2dkR2hwY3k1allXMWxjbUVnUFNCMEtTQTZJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxKaGVXTmhjM1JsY2pvZ1ZXNXpkWEJ3YjNKMFpXUWdZMkZ0WlhKaElIUjVjR1U2SUNJZ0t5QjBMblI1Y0dVcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBUMkpxWldOMEtHVXNJSFFnUFNBaE1Dd2diaUE5SUZ0ZEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHeGhLR1VzSUhSb2FYTXNJRzRzSUhRcExDQnVMbk52Y25Rb1VHTXBMQ0J1T3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMFQySnFaV04wY3lobExDQjBJRDBnSVRBc0lHNGdQU0JiWFNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQmxMbXhsYm1kMGFEc2dhU0E4SUhJN0lHa3JLeWxzWVNobFcybGRMQ0IwYUdsekxDQnVMQ0IwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1emIzSjBLRkJqS1N3Z2Jqc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdVR01vY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhNdVpHbHpkR0Z1WTJVZ0xTQmxMbVJwYzNSaGJtTmxPd3A5Q21aMWJtTjBhVzl1SUd4aEtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHbG1JQ2h6TG14aGVXVnljeTUwWlhOMEtHVXViR0Y1WlhKektTQW1KaUJ6TG5KaGVXTmhjM1FvWlN3Z2RDa3NJRzRnUFQwOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J6TG1Ob2FXeGtjbVZ1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCcExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bHNZU2hwVzNKZExDQmxMQ0IwTENBaE1DazdDaUFnSUNCOUNuMEtkbUZ5SUVGNUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXdMQ0J1SUQwZ01DbDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21Ga2FYVnpJRDBnWlN3Z2RHaHBjeTV3YUdrZ1BTQjBMQ0IwYUdsekxuUm9aWFJoSUQwZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtRmthWFZ6SUQwZ1pTd2dkR2hwY3k1d2FHa2dQU0IwTENCMGFHbHpMblJvWlhSaElEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KaFpHbDFjeUE5SUdVdWNtRmthWFZ6TENCMGFHbHpMbkJvYVNBOUlHVXVjR2hwTENCMGFHbHpMblJvWlhSaElEMGdaUzUwYUdWMFlTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZUWVdabEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Cb2FTQTlJRTFoZEdndWJXRjRLREZsTFRZc0lFMWhkR2d1YldsdUtFMWhkR2d1VUVrZ0xTQXhaUzAyTENCMGFHbHpMbkJvYVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZabFkzUnZjak1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEVaeWIyMURZWEowWlhOcFlXNURiMjl5WkhNb1pTNTRMQ0JsTG5rc0lHVXVlaWs3Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UTJGeWRHVnphV0Z1UTI5dmNtUnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVlXUnBkWE1nUFNCTllYUm9Mbk54Y25Rb1pTQXFJR1VnS3lCMElDb2dkQ0FySUc0Z0tpQnVLU3dnZEdocGN5NXlZV1JwZFhNZ1BUMDlJREFnUHlBb2RHaHBjeTUwYUdWMFlTQTlJREFzSUhSb2FYTXVjR2hwSUQwZ01Da2dPaUFvZEdocGN5NTBhR1YwWVNBOUlFMWhkR2d1WVhSaGJqSW9aU3dnYmlrc0lIUm9hWE11Y0docElEMGdUV0YwYUM1aFkyOXpLRzEwS0hRZ0x5QjBhR2x6TG5KaFpHbDFjeXdnTFRFc0lERXBLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFwOUxDQkRlU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTUN3Z2JpQTlJREFwZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOUlHVXNJSFJvYVhNdWRHaGxkR0VnUFNCMExDQjBhR2x6TG5rZ1BTQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlZV1JwZFhNZ1BTQmxMQ0IwYUdsekxuUm9aWFJoSUQwZ2RDd2dkR2hwY3k1NUlEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KaFpHbDFjeUE5SUdVdWNtRmthWFZ6TENCMGFHbHpMblJvWlhSaElEMGdaUzUwYUdWMFlTd2dkR2hwY3k1NUlEMGdaUzU1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVlpsWTNSdmNqTW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkRVp5YjIxRFlYSjBaWE5wWVc1RGIyOXlaSE1vWlM1NExDQmxMbmtzSUdVdWVpazdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMkZ5ZEdWemFXRnVRMjl2Y21SektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WVdScGRYTWdQU0JOWVhSb0xuTnhjblFvWlNBcUlHVWdLeUJ1SUNvZ2Jpa3NJSFJvYVhNdWRHaGxkR0VnUFNCTllYUm9MbUYwWVc0eUtHVXNJRzRwTENCMGFHbHpMbmtnUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtmU3dnU1dNZ1BTQnVaWGNnV0N3Z2NXa2dQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lGZ29NU0F2SURBc0lERWdMeUF3S1N3Z2RDQTlJRzVsZHlCWUtDMHhJQzhnTUN3Z0xURWdMeUF3S1NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0YVc0Z1BTQmxMQ0IwYUdsekxtMWhlQ0E5SUhRN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNWpiM0I1S0dVcExDQjBhR2x6TG0xaGVDNWpiM0I1S0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZCdmFXNTBjeWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVd0bFJXMXdkSGtvS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3BkR2hwY3k1bGVIQmhibVJDZVZCdmFXNTBLR1ZiZEYwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVU5sYm5SbGNrRnVaRk5wZW1Vb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnU1dNdVkyOXdlU2gwS1M1dGRXeDBhWEJzZVZOallXeGhjaWd1TlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1OdmNIa29aU2t1YzNWaUtHNHBMQ0IwYUdsekxtMWhlQzVqYjNCNUtHVXBMbUZrWkNodUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1WTI5d2VTaGxMbTFwYmlrc0lIUm9hWE11YldGNExtTnZjSGtvWlM1dFlYZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV0ZyWlVWdGNIUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTU0SUQwZ2RHaHBjeTV0YVc0dWVTQTlJREVnTHlBd0xDQjBhR2x6TG0xaGVDNTRJRDBnZEdocGN5NXRZWGd1ZVNBOUlDMHhJQzhnTUN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdselJXMXdkSGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV0Y0TG5nZ1BDQjBhR2x6TG0xcGJpNTRJSHg4SUhSb2FYTXViV0Y0TG5rZ1BDQjBhR2x6TG0xcGJpNTVPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyVnVkR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYzBWdGNIUjVLQ2tnUHlCbExuTmxkQ2d3TENBd0tTQTZJR1V1WVdSa1ZtVmpkRzl5Y3loMGFHbHpMbTFwYml3Z2RHaHBjeTV0WVhncExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0MUtUc0tJQ0FnSUgwS0lDQWdJR2RsZEZOcGVtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHpSVzF3ZEhrb0tTQS9JR1V1YzJWMEtEQXNJREFwSURvZ1pTNXpkV0pXWldOMGIzSnpLSFJvYVhNdWJXRjRMQ0IwYUdsekxtMXBiaWs3Q2lBZ0lDQjlDaUFnSUNCbGVIQmhibVJDZVZCdmFXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1YldsdUtHVXBMQ0IwYUdsekxtMWhlQzV0WVhnb1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxlSEJoYm1SQ2VWWmxZM1J2Y2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxuTjFZaWhsS1N3Z2RHaHBjeTV0WVhndVlXUmtLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhod1lXNWtRbmxUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTVoWkdSVFkyRnNZWElvTFdVcExDQjBhR2x6TG0xaGVDNWhaR1JUWTJGc1lYSW9aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjI1MFlXbHVjMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJU2hsTG5nZ1BDQjBhR2x6TG0xcGJpNTRJSHg4SUdVdWVDQStJSFJvYVhNdWJXRjRMbmdnZkh3Z1pTNTVJRHdnZEdocGN5NXRhVzR1ZVNCOGZDQmxMbmtnUGlCMGFHbHpMbTFoZUM1NUtUc0tJQ0FnSUgwS0lDQWdJR052Ym5SaGFXNXpRbTk0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWVDQThQU0JsTG0xcGJpNTRJQ1ltSUdVdWJXRjRMbmdnUEQwZ2RHaHBjeTV0WVhndWVDQW1KaUIwYUdsekxtMXBiaTU1SUR3OUlHVXViV2x1TG5rZ0ppWWdaUzV0WVhndWVTQThQU0IwYUdsekxtMWhlQzU1T3dvZ0lDQWdmUW9nSUNBZ1oyVjBVR0Z5WVcxbGRHVnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNXpaWFFvS0dVdWVDQXRJSFJvYVhNdWJXbHVMbmdwSUM4Z0tIUm9hWE11YldGNExuZ2dMU0IwYUdsekxtMXBiaTU0S1N3Z0tHVXVlU0F0SUhSb2FYTXViV2x1TG5rcElDOGdLSFJvYVhNdWJXRjRMbmtnTFNCMGFHbHpMbTFwYmk1NUtTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJU2hsTG0xaGVDNTRJRHdnZEdocGN5NXRhVzR1ZUNCOGZDQmxMbTFwYmk1NElENGdkR2hwY3k1dFlYZ3VlQ0I4ZkNCbExtMWhlQzU1SUR3Z2RHaHBjeTV0YVc0dWVTQjhmQ0JsTG0xcGJpNTVJRDRnZEdocGN5NXRZWGd1ZVNrN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0ZCdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNWpiM0I1S0dVcExtTnNZVzF3S0hSb2FYTXViV2x1TENCMGFHbHpMbTFoZUNrN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZVRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQkpZeTVqYjNCNUtHVXBMbU5zWVcxd0tIUm9hWE11YldsdUxDQjBhR2x6TG0xaGVDa3VjM1ZpS0dVcExteGxibWQwYUNncE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1YldGNEtHVXViV2x1S1N3Z2RHaHBjeTV0WVhndWJXbHVLR1V1YldGNEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXbHVLR1V1YldsdUtTd2dkR2hwY3k1dFlYZ3ViV0Y0S0dVdWJXRjRLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1Ga1pDaGxLU3dnZEdocGN5NXRZWGd1WVdSa0tHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV0YVc0dVpYRjFZV3h6S0hSb2FYTXViV2x1S1NBbUppQmxMbTFoZUM1bGNYVmhiSE1vZEdocGN5NXRZWGdwT3dvZ0lDQWdmUXA5T3dweGFTNXdjbTkwYjNSNWNHVXVhWE5DYjNneUlEMGdJVEE3Q25aaGNpQkVZeUE5SUc1bGR5Qk5MQ0JVY3lBOUlHNWxkeUJOTENCTGFDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1RTd2dkQ0E5SUc1bGR5Qk5LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuTjBZWEowSUQwZ1pTd2dkR2hwY3k1bGJtUWdQU0IwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6ZEdGeWRDNWpiM0I1S0dVcExDQjBhR2x6TG1WdVpDNWpiM0I1S0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjM1JoY25RdVkyOXdlU2hsTG5OMFlYSjBLU3dnZEdocGN5NWxibVF1WTI5d2VTaGxMbVZ1WkNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkRaVzUwWlhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbUZrWkZabFkzUnZjbk1vZEdocGN5NXpkR0Z5ZEN3Z2RHaHBjeTVsYm1RcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0MUtUc0tJQ0FnSUgwS0lDQWdJR1JsYkhSaEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV6ZFdKV1pXTjBiM0p6S0hSb2FYTXVaVzVrTENCMGFHbHpMbk4wWVhKMEtUc0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxVM0VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjM1JoY25RdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb2RHaHBjeTVsYm1RcE93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMzUmhjblF1WkdsemRHRnVZMlZVYnloMGFHbHpMbVZ1WkNrN0NpQWdJQ0I5Q2lBZ0lDQmhkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdWc2RHRW9kQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9aU2t1WVdSa0tIUm9hWE11YzNSaGNuUXBPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmMyVnpkRkJ2YVc1MFZHOVFiMmx1ZEZCaGNtRnRaWFJsY2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnUkdNdWMzVmlWbVZqZEc5eWN5aGxMQ0IwYUdsekxuTjBZWEowS1N3Z1ZITXVjM1ZpVm1WamRHOXljeWgwYUdsekxtVnVaQ3dnZEdocGN5NXpkR0Z5ZENrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCVWN5NWtiM1FvVkhNcExDQnlJRDBnVkhNdVpHOTBLRVJqS1NBdklHNDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdKaVlnS0hJZ1BTQnRkQ2h5TENBd0xDQXhLU2tzSUhJN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl6WlhOMFVHOXBiblJVYjFCdmFXNTBLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVkyeHZjMlZ6ZEZCdmFXNTBWRzlRYjJsdWRGQmhjbUZ0WlhSbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtaV3gwWVNodUtTNXRkV3gwYVhCc2VWTmpZV3hoY2locEtTNWhaR1FvZEdocGN5NXpkR0Z5ZENrN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVUxaGRISnBlRFFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk4wWVhKMExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z2RHaHBjeTVsYm1RdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1emRHRnlkQzVsY1hWaGJITW9kR2hwY3k1emRHRnlkQ2tnSmlZZ1pTNWxibVF1WlhGMVlXeHpLSFJvYVhNdVpXNWtLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNuMHNJRVpqSUQwZ2JtVjNJRTBzSUV4NUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXViR2xuYUhRZ1BTQmxMQ0IwYUdsekxteHBaMmgwTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0Nrc0lIUm9hWE11YldGMGNtbDRJRDBnWlM1dFlYUnlhWGhYYjNKc1pDd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVkyOXNiM0lnUFNCME93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2JtVjNJRjlsTENCcElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQXNJR0VnUFNBeExDQnNJRDBnTXpJN0lHOGdQQ0JzT3lCdkt5c3NJR0VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdieUF2SUd3Z0tpQk5ZWFJvTGxCSklDb2dNaXdnYUNBOUlHRWdMeUJzSUNvZ1RXRjBhQzVRU1NBcUlESTdDaUFnSUNBZ0lDQWdJQ0FnSUdrdWNIVnphQ2hOWVhSb0xtTnZjeWhqS1N3Z1RXRjBhQzV6YVc0b1l5a3NJREVzSUUxaGRHZ3VZMjl6S0dncExDQk5ZWFJvTG5OcGJpaG9LU3dnTVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHNHVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNocExDQXpLU2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ1puUW9ld29nSUNBZ0lDQWdJQ0FnSUNCbWIyYzZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lIUm9hWE11WTI5dVpTQTlJRzVsZHlCM2RDaHVMQ0J5S1N3Z2RHaHBjeTVoWkdRb2RHaHBjeTVqYjI1bEtTd2dkR2hwY3k1MWNHUmhkR1VvS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1amIyNWxMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NWpiMjVsTG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG14cFoyaDBMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxteHBaMmgwTG1ScGMzUmhibU5sSUQ4Z2RHaHBjeTVzYVdkb2RDNWthWE4wWVc1alpTQTZJREZsTXl3Z2RDQTlJR1VnS2lCTllYUm9MblJoYmloMGFHbHpMbXhwWjJoMExtRnVaMnhsS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbU52Ym1VdWMyTmhiR1V1YzJWMEtIUXNJSFFzSUdVcExDQkdZeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTVzYVdkb2RDNTBZWEpuWlhRdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxtTnZibVV1Ykc5dmEwRjBLRVpqS1N3Z2RHaHBjeTVqYjJ4dmNpQWhQVDBnZG05cFpDQXdJRDhnZEdocGN5NWpiMjVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbk5sZENoMGFHbHpMbU52Ykc5eUtTQTZJSFJvYVhNdVkyOXVaUzV0WVhSbGNtbGhiQzVqYjJ4dmNpNWpiM0I1S0hSb2FYTXViR2xuYUhRdVkyOXNiM0lwT3dvZ0lDQWdmUXA5TENCNWJpQTlJRzVsZHlCTkxDQkZjeUE5SUc1bGR5QndaU3dnVVc4Z1BTQnVaWGNnY0dVc0lHVjFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSMUtHVXBMQ0J1SUQwZ2JtVjNJRjlsTENCcElEMGdXMTBzSUhJZ1BTQmJYU3dnYnlBOUlHNWxkeUJoWlNnd0xDQXdMQ0F4S1N3Z1lTQTlJRzVsZHlCaFpTZ3dMQ0F4TENBd0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdQU0F3T3lCaklEd2dkQzVzWlc1bmRHZzdJR01yS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdkRnRqWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhQzV3WVhKbGJuUWdKaVlnYUM1d1lYSmxiblF1YVhOQ2IyNWxJQ1ltSUNocExuQjFjMmdvTUN3Z01Dd2dNQ2tzSUdrdWNIVnphQ2d3TENBd0xDQXdLU3dnY2k1d2RYTm9LRzh1Y2l3Z2J5NW5MQ0J2TG1JcExDQnlMbkIxYzJnb1lTNXlMQ0JoTG1jc0lHRXVZaWtwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCdUxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYVN3Z015a3BMQ0J1TG5ObGRFRjBkSEpwWW5WMFpTZ2lZMjlzYjNJaUxDQnVaWGNnWkdVb2Npd2dNeWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UTI5c2IzSnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoWGNtbDBaVG9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ2Ym1WTllYQndaV1E2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMzQmhjbVZ1ZERvZ0lUQUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVMQ0JzS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVMnRsYkdWMGIyNUlaV3h3WlhJaUxDQjBhR2x6TG1selUydGxiR1YwYjI1SVpXeHdaWElnUFNBaE1Dd2dkR2hwY3k1eWIyOTBJRDBnWlN3Z2RHaHBjeTVpYjI1bGN5QTlJSFFzSUhSb2FYTXViV0YwY21sNElEMGdaUzV0WVhSeWFYaFhiM0pzWkN3Z2RHaHBjeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtSnZibVZ6TENCdUlEMGdkR2hwY3k1blpXOXRaWFJ5ZVN3Z2FTQTlJRzR1WjJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXBPd29nSUNBZ0lDQWdJRkZ2TG1OdmNIa29kR2hwY3k1eWIyOTBMbTFoZEhKcGVGZHZjbXhrS1M1cGJuWmxjblFvS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0J2SUQwZ01Ec2djaUE4SUhRdWJHVnVaM1JvT3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSYmNsMDdDaUFnSUNBZ0lDQWdJQ0FnSUdFdWNHRnlaVzUwSUNZbUlHRXVjR0Z5Wlc1MExtbHpRbTl1WlNBbUppQW9SWE11YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWhSYnl3Z1lTNXRZWFJ5YVhoWGIzSnNaQ2tzSUhsdUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhGY3lrc0lHa3VjMlYwV0ZsYUtHOHNJSGx1TG5nc0lIbHVMbmtzSUhsdUxub3BMQ0JGY3k1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0ZGdkxDQmhMbkJoY21WdWRDNXRZWFJ5YVhoWGIzSnNaQ2tzSUhsdUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhGY3lrc0lHa3VjMlYwV0ZsYUtHOGdLeUF4TENCNWJpNTRMQ0I1Ymk1NUxDQjViaTU2S1N3Z2J5QXJQU0F5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JpNW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z2MzVndaWEl1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlIUjFLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdXMTA3Q2lBZ0lDQnpJQ1ltSUhNdWFYTkNiMjVsSUNZbUlHVXVjSFZ6YUNoektUc0tJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENCekxtTm9hV3hrY21WdUxteGxibWQwYURzZ2RDc3JLV1V1Y0hWemFDNWhjSEJzZVNobExDQjBkU2h6TG1Ob2FXeGtjbVZ1VzNSZEtTazdDaUFnSUNCeVpYUjFjbTRnWlRzS2ZRcDJZWElnVW5rZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJRVpwS0hRc0lEUXNJRElwTENCeUlEMGdibVYzSUdodUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJseVpXWnlZVzFsT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWm05bk9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWhwTENCeUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG14cFoyaDBJRDBnWlN3Z2RHaHBjeTVzYVdkb2RDNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDZ3BMQ0IwYUdsekxtTnZiRzl5SUQwZ2Jpd2dkR2hwY3k1MGVYQmxJRDBnSWxCdmFXNTBUR2xuYUhSSVpXeHdaWElpTENCMGFHbHpMbTFoZEhKcGVDQTlJSFJvYVhNdWJHbG5hSFF1YldGMGNtbDRWMjl5YkdRc0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUNFeExDQjBhR2x6TG5Wd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYjJ4dmNpQWhQVDBnZG05cFpDQXdJRDhnZEdocGN5NXRZWFJsY21saGJDNWpiMnh2Y2k1elpYUW9kR2hwY3k1amIyeHZjaWtnT2lCMGFHbHpMbTFoZEdWeWFXRnNMbU52Ykc5eUxtTnZjSGtvZEdocGN5NXNhV2RvZEM1amIyeHZjaWs3Q2lBZ0lDQjlDbjBzSUZCNUlEMGdibVYzSUUwc0lFNWpJRDBnYm1WM0lHRmxMQ0JDWXlBOUlHNWxkeUJoWlN3Z1NYa2dQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1c2FXZG9kQ0E5SUdVc0lIUm9hWE11YkdsbmFIUXVkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9LU3dnZEdocGN5NXRZWFJ5YVhnZ1BTQmxMbTFoZEhKcGVGZHZjbXhrTENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVqYjJ4dmNpQTlJRzQ3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1WlhjZ1NXa29kQ2s3Q2lBZ0lDQWdJQ0FnYVM1eWIzUmhkR1ZaS0UxaGRHZ3VVRWtnS2lBdU5Ta3NJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQnVaWGNnYUc0b2V3b2dJQ0FnSUNBZ0lDQWdJQ0IzYVhKbFpuSmhiV1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JtYjJjNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwTENCMGFHbHpMbU52Ykc5eUlEMDlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXViV0YwWlhKcFlXd3VkbVZ5ZEdWNFEyOXNiM0p6SUQwZ0lUQXBPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdhUzVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpa3NJRzhnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0hJdVkyOTFiblFnS2lBektUc0tJQ0FnSUNBZ0lDQnBMbk5sZEVGMGRISnBZblYwWlNnaVkyOXNiM0lpTENCdVpYY2dWV1VvYnl3Z015a3BMQ0IwYUdsekxtRmtaQ2h1WlhjZ2MzUW9hU3dnZEdocGN5NXRZWFJsY21saGJDa3BMQ0IwYUdsekxuVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtTm9hV3hrY21WdVd6QmRMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NWphR2xzWkhKbGJsc3dYUzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbU5vYVd4a2NtVnVXekJkT3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1OdmJHOXlJQ0U5UFNCMmIybGtJREFwSUhSb2FYTXViV0YwWlhKcFlXd3VZMjlzYjNJdWMyVjBLSFJvYVhNdVkyOXNiM0lwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVoyVnZiV1YwY25rdVoyVjBRWFIwY21saWRYUmxLQ0pqYjJ4dmNpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCT1l5NWpiM0I1S0hSb2FYTXViR2xuYUhRdVkyOXNiM0lwTENCQ1l5NWpiM0I1S0hSb2FYTXViR2xuYUhRdVozSnZkVzVrUTI5c2IzSXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RDNWpiM1Z1ZERzZ2JpQThJR2s3SUc0ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNGdQQ0JwSUM4Z01pQS9JRTVqSURvZ1FtTTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBMbk5sZEZoWldpaHVMQ0J5TG5Jc0lISXVaeXdnY2k1aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjBMbTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1V1Ykc5dmEwRjBLRkI1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDBhR2x6TG14cFoyaDBMbTFoZEhKcGVGZHZjbXhrS1M1dVpXZGhkR1VvS1NrN0NpQWdJQ0I5Q24wc0lHNTFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01UQXNJSFFnUFNBeE1Dd2diaUE5SURRME56TTVNalFzSUdrZ1BTQTRPVFEzT0RRNEtYc0tJQ0FnSUNBZ0lDQnVJRDBnYm1WM0lHRmxLRzRwTENCcElEMGdibVYzSUdGbEtHa3BPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkQ0F2SURJc0lHOGdQU0JsSUM4Z2RDd2dZU0E5SUdVZ0x5QXlMQ0JzSUQwZ1cxMHNJR01nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHUWdQU0F3TENCbUlEMGdNQ3dnYlNBOUlDMWhPeUJrSUR3OUlIUTdJR1FyS3l3Z2JTQXJQU0J2S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiQzV3ZFhOb0tDMWhMQ0F3TENCdExDQmhMQ0F3TENCdEtTd2diQzV3ZFhOb0tHMHNJREFzSUMxaExDQnRMQ0F3TENCaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0JrSUQwOVBTQnlJRDhnYmlBNklHazdDaUFnSUNBZ0lDQWdJQ0FnSUhndWRHOUJjbkpoZVNoakxDQm1LU3dnWmlBclBTQXpMQ0I0TG5SdlFYSnlZWGtvWXl3Z1ppa3NJR1lnS3owZ015d2dlQzUwYjBGeWNtRjVLR01zSUdZcExDQm1JQ3M5SURNc0lIZ3VkRzlCY25KaGVTaGpMQ0JtS1N3Z1ppQXJQU0F6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0JvTG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9iQ3dnTXlrcExDQm9Mbk5sZEVGMGRISnBZblYwWlNnaVkyOXNiM0lpTENCdVpYY2daR1VvWXl3Z015a3BPd29nSUNBZ0lDQWdJR3hsZENCMUlEMGdibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRRMjlzYjNKek9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWhvTENCMUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUjNKcFpFaGxiSEJsY2lJN0NpQWdJQ0I5Q24wc0lFUjVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01UQXNJSFFnUFNBeE5pd2diaUE5SURnc0lHa2dQU0EyTkN3Z2NpQTlJRFEwTnpNNU1qUXNJRzhnUFNBNE9UUTNPRFE0S1hzS0lDQWdJQ0FnSUNCeUlEMGdibVYzSUdGbEtISXBMQ0J2SUQwZ2JtVjNJR0ZsS0c4cE93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1cxMHNJR3dnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0F3T3lCMUlEdzlJSFE3SUhVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnZFNBdklIUWdLaUFvVFdGMGFDNVFTU0FxSURJcExDQm1JRDBnVFdGMGFDNXphVzRvWkNrZ0tpQmxMQ0J0SUQwZ1RXRjBhQzVqYjNNb1pDa2dLaUJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQmhMbkIxYzJnb01Dd2dNQ3dnTUNrc0lHRXVjSFZ6YUNobUxDQXdMQ0J0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhnZ1BTQjFJQ1lnTVNBL0lISWdPaUJ2T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNMbkIxYzJnb2VDNXlMQ0I0TG1jc0lIZ3VZaWtzSUd3dWNIVnphQ2g0TG5Jc0lIZ3VaeXdnZUM1aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjFJRDBnTURzZ2RTQThQU0J1T3lCMUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUhVZ0ppQXhJRDhnY2lBNklHOHNJR1lnUFNCbElDMGdaU0F2SUc0Z0tpQjFPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUcwZ1BTQXdPeUJ0SUR3Z2FUc2diU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnYlNBdklHa2dLaUFvVFdGMGFDNVFTU0FxSURJcExDQjJJRDBnVFdGMGFDNXphVzRvZUNrZ0tpQm1MQ0JuSUQwZ1RXRjBhQzVqYjNNb2VDa2dLaUJtT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVM1d2RYTm9LSFlzSURBc0lHY3BMQ0JzTG5CMWMyZ29aQzV5TENCa0xtY3NJR1F1WWlrc0lIZ2dQU0FvYlNBcklERXBJQzhnYVNBcUlDaE5ZWFJvTGxCSklDb2dNaWtzSUhZZ1BTQk5ZWFJvTG5OcGJpaDRLU0FxSUdZc0lHY2dQU0JOWVhSb0xtTnZjeWg0S1NBcUlHWXNJR0V1Y0hWemFDaDJMQ0F3TENCbktTd2diQzV3ZFhOb0tHUXVjaXdnWkM1bkxDQmtMbUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCaklEMGdibVYzSUY5bE93b2dJQ0FnSUNBZ0lHTXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNoaExDQXpLU2tzSUdNdWMyVjBRWFIwY21saWRYUmxLQ0pqYjJ4dmNpSXNJRzVsZHlCa1pTaHNMQ0F6S1NrN0NpQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCdVpYY2dablFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoRGIyeHZjbk02SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSE4xY0dWeUtHTXNJR2dwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlFiMnhoY2tkeWFXUklaV3h3WlhJaU93b2dJQ0FnZlFwOUxDQjZZeUE5SUc1bGR5Qk5MQ0JCY3lBOUlHNWxkeUJOTENCVll5QTlJRzVsZHlCTkxDQkdlU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxteHBaMmgwSUQwZ1pTd2dkR2hwY3k1c2FXZG9kQzUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2dwTENCMGFHbHpMbTFoZEhKcGVDQTlJR1V1YldGMGNtbDRWMjl5YkdRc0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUNFeExDQjBhR2x6TG1OdmJHOXlJRDBnYml3Z2RDQTlQVDBnZG05cFpDQXdJQ1ltSUNoMElEMGdNU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1WlhjZ1gyVTdDaUFnSUNBZ0lDQWdhUzV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnTFhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUhRc0NpQWdJQ0FnSUNBZ0lDQWdJQzEwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnTFhRc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTBMQW9nSUNBZ0lDQWdJQ0FnSUNCMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnWFN3Z015a3BPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05bk9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCMGFHbHpMbXhwWjJoMFVHeGhibVVnUFNCdVpYY2diMjRvYVN3Z2Npa3NJSFJvYVhNdVlXUmtLSFJvYVhNdWJHbG5hSFJRYkdGdVpTa3NJR2tnUFNCdVpYY2dYMlVzSUdrdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkTENBektTa3NJSFJvYVhNdWRHRnlaMlYwVEdsdVpTQTlJRzVsZHlCdmJpaHBMQ0J5S1N3Z2RHaHBjeTVoWkdRb2RHaHBjeTUwWVhKblpYUk1hVzVsS1N3Z2RHaHBjeTUxY0dSaGRHVW9LVHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVzYVdkb2RGQnNZVzVsTG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTVzYVdkb2RGQnNZVzVsTG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTUwWVhKblpYUk1hVzVsTG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTUwWVhKblpYUk1hVzVsTG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNncElIc0tJQ0FnSUNBZ0lDQjZZeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTVzYVdkb2RDNXRZWFJ5YVhoWGIzSnNaQ2tzSUVGekxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWgwYUdsekxteHBaMmgwTG5SaGNtZGxkQzV0WVhSeWFYaFhiM0pzWkNrc0lGVmpMbk4xWWxabFkzUnZjbk1vUVhNc0lIcGpLU3dnZEdocGN5NXNhV2RvZEZCc1lXNWxMbXh2YjJ0QmRDaEJjeWtzSUhSb2FYTXVZMjlzYjNJZ0lUMDlJSFp2YVdRZ01DQS9JQ2gwYUdsekxteHBaMmgwVUd4aGJtVXViV0YwWlhKcFlXd3VZMjlzYjNJdWMyVjBLSFJvYVhNdVkyOXNiM0lwTENCMGFHbHpMblJoY21kbGRFeHBibVV1YldGMFpYSnBZV3d1WTI5c2IzSXVjMlYwS0hSb2FYTXVZMjlzYjNJcEtTQTZJQ2gwYUdsekxteHBaMmgwVUd4aGJtVXViV0YwWlhKcFlXd3VZMjlzYjNJdVkyOXdlU2gwYUdsekxteHBaMmgwTG1OdmJHOXlLU3dnZEdocGN5NTBZWEpuWlhSTWFXNWxMbTFoZEdWeWFXRnNMbU52Ykc5eUxtTnZjSGtvZEdocGN5NXNhV2RvZEM1amIyeHZjaWtwTENCMGFHbHpMblJoY21kbGRFeHBibVV1Ykc5dmEwRjBLRUZ6S1N3Z2RHaHBjeTUwWVhKblpYUk1hVzVsTG5OallXeGxMbm9nUFNCVll5NXNaVzVuZEdnb0tUc0tJQ0FnSUgwS2ZTd2dRM01nUFNCdVpYY2dUU3dnVVdVZ1BTQnVaWGNnU1hJc0lFNTVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUc1bGR5QmZaU3dnYmlBOUlHNWxkeUJtZENoN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQXhOamMzTnpJeE5Td0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRRMjlzYjNKek9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1N3Z2FTQTlJRnRkTENCeUlEMGdXMTBzSUc4Z1BTQjdmU3dnWVNBOUlHNWxkeUJoWlNneE5qYzFOVEl3TUNrc0lHd2dQU0J1WlhjZ1lXVW9NVFkzTVRFMk9EQXBMQ0JqSUQwZ2JtVjNJR0ZsS0RRek56YzFLU3dnYUNBOUlHNWxkeUJoWlNneE5qYzNOekl4TlNrc0lIVWdQU0J1WlhjZ1lXVW9Nek0xTlRRME15azdDaUFnSUNBZ0lDQWdaQ2dpYmpFaUxDQWliaklpTENCaEtTd2daQ2dpYmpJaUxDQWlialFpTENCaEtTd2daQ2dpYmpRaUxDQWliak1pTENCaEtTd2daQ2dpYmpNaUxDQWliakVpTENCaEtTd2daQ2dpWmpFaUxDQWlaaklpTENCaEtTd2daQ2dpWmpJaUxDQWlaalFpTENCaEtTd2daQ2dpWmpRaUxDQWlaak1pTENCaEtTd2daQ2dpWmpNaUxDQWlaakVpTENCaEtTd2daQ2dpYmpFaUxDQWlaakVpTENCaEtTd2daQ2dpYmpJaUxDQWlaaklpTENCaEtTd2daQ2dpYmpNaUxDQWlaak1pTENCaEtTd2daQ2dpYmpRaUxDQWlaalFpTENCaEtTd2daQ2dpY0NJc0lDSnVNU0lzSUd3cExDQmtLQ0p3SWl3Z0ltNHlJaXdnYkNrc0lHUW9JbkFpTENBaWJqTWlMQ0JzS1N3Z1pDZ2ljQ0lzSUNKdU5DSXNJR3dwTENCa0tDSjFNU0lzSUNKMU1pSXNJR01wTENCa0tDSjFNaUlzSUNKMU15SXNJR01wTENCa0tDSjFNeUlzSUNKMU1TSXNJR01wTENCa0tDSmpJaXdnSW5RaUxDQm9LU3dnWkNnaWNDSXNJQ0pqSWl3Z2RTa3NJR1FvSW1OdU1TSXNJQ0pqYmpJaUxDQjFLU3dnWkNnaVkyNHpJaXdnSW1OdU5DSXNJSFVwTENCa0tDSmpaakVpTENBaVkyWXlJaXdnZFNrc0lHUW9JbU5tTXlJc0lDSmpaalFpTENCMUtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmtLRzBzSUhnc0lIWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ppaHRMQ0IyS1N3Z1ppaDRMQ0IyS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1ppaHRMQ0I0S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2t1Y0hWemFDZ3dMQ0F3TENBd0tTd2djaTV3ZFhOb0tIZ3VjaXdnZUM1bkxDQjRMbUlwTENCdlcyMWRJRDA5UFNCMmIybGtJREFnSmlZZ0tHOWJiVjBnUFNCYlhTa3NJRzliYlYwdWNIVnphQ2hwTG14bGJtZDBhQ0F2SURNZ0xTQXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEM1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR2tzSURNcEtTd2dkQzV6WlhSQmRIUnlhV0oxZEdVb0ltTnZiRzl5SWl3Z2JtVjNJR1JsS0hJc0lETXBLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaDBMQ0J1S1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRMkZ0WlhKaFNHVnNjR1Z5SWl3Z2RHaHBjeTVqWVcxbGNtRWdQU0JsTENCMGFHbHpMbU5oYldWeVlTNTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0SUNZbUlIUm9hWE11WTJGdFpYSmhMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tTd2dkR2hwY3k1dFlYUnlhWGdnUFNCbExtMWhkSEpwZUZkdmNteGtMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NXdiMmx1ZEUxaGNDQTlJRzhzSUhSb2FYTXVkWEJrWVhSbEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtZGxiMjFsZEhKNUxDQjBJRDBnZEdocGN5NXdiMmx1ZEUxaGNDd2diaUE5SURFc0lHa2dQU0F4T3dvZ0lDQWdJQ0FnSUZGbExuQnliMnBsWTNScGIyNU5ZWFJ5YVhoSmJuWmxjbk5sTG1OdmNIa29kR2hwY3k1allXMWxjbUV1Y0hKdmFtVmpkR2x2YmsxaGRISnBlRWx1ZG1WeWMyVXBMQ0JsZENnaVl5SXNJSFFzSUdVc0lGRmxMQ0F3TENBd0xDQXRNU2tzSUdWMEtDSjBJaXdnZEN3Z1pTd2dVV1VzSURBc0lEQXNJREVwTENCbGRDZ2liakVpTENCMExDQmxMQ0JSWlN3Z0xXNHNJQzFwTENBdE1Ta3NJR1YwS0NKdU1pSXNJSFFzSUdVc0lGRmxMQ0J1TENBdGFTd2dMVEVwTENCbGRDZ2liak1pTENCMExDQmxMQ0JSWlN3Z0xXNHNJR2tzSUMweEtTd2daWFFvSW00MElpd2dkQ3dnWlN3Z1VXVXNJRzRzSUdrc0lDMHhLU3dnWlhRb0ltWXhJaXdnZEN3Z1pTd2dVV1VzSUMxdUxDQXRhU3dnTVNrc0lHVjBLQ0ptTWlJc0lIUXNJR1VzSUZGbExDQnVMQ0F0YVN3Z01Ta3NJR1YwS0NKbU15SXNJSFFzSUdVc0lGRmxMQ0F0Yml3Z2FTd2dNU2tzSUdWMEtDSm1OQ0lzSUhRc0lHVXNJRkZsTENCdUxDQnBMQ0F4S1N3Z1pYUW9JblV4SWl3Z2RDd2daU3dnVVdVc0lHNGdLaUF1Tnl3Z2FTQXFJREV1TVN3Z0xURXBMQ0JsZENnaWRUSWlMQ0IwTENCbExDQlJaU3dnTFc0Z0tpQXVOeXdnYVNBcUlERXVNU3dnTFRFcExDQmxkQ2dpZFRNaUxDQjBMQ0JsTENCUlpTd2dNQ3dnYVNBcUlESXNJQzB4S1N3Z1pYUW9JbU5tTVNJc0lIUXNJR1VzSUZGbExDQXRiaXdnTUN3Z01Ta3NJR1YwS0NKalpqSWlMQ0IwTENCbExDQlJaU3dnYml3Z01Dd2dNU2tzSUdWMEtDSmpaak1pTENCMExDQmxMQ0JSWlN3Z01Dd2dMV2tzSURFcExDQmxkQ2dpWTJZMElpd2dkQ3dnWlN3Z1VXVXNJREFzSUdrc0lERXBMQ0JsZENnaVkyNHhJaXdnZEN3Z1pTd2dVV1VzSUMxdUxDQXdMQ0F0TVNrc0lHVjBLQ0pqYmpJaUxDQjBMQ0JsTENCUlpTd2diaXdnTUN3Z0xURXBMQ0JsZENnaVkyNHpJaXdnZEN3Z1pTd2dVV1VzSURBc0lDMXBMQ0F0TVNrc0lHVjBLQ0pqYmpRaUxDQjBMQ0JsTENCUlpTd2dNQ3dnYVN3Z0xURXBMQ0JsTG1kbGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlLUzV1WldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJR1YwS0hNc0lHVXNJSFFzSUc0c0lHa3NJSElzSUc4cElIc0tJQ0FnSUVOekxuTmxkQ2hwTENCeUxDQnZLUzUxYm5CeWIycGxZM1FvYmlrN0NpQWdJQ0JzWlhRZ1lTQTlJR1ZiYzEwN0NpQWdJQ0JwWmlBb1lTQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0IwTG1kbGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nUFNBd0xDQm9JRDBnWVM1c1pXNW5kR2c3SUdNZ1BDQm9PeUJqS3lzcGJDNXpaWFJZV1Zvb1lWdGpYU3dnUTNNdWVDd2dRM011ZVN3Z1EzTXVlaWs3Q2lBZ0lDQjlDbjBLZG1GeUlFeHpJRDBnYm1WM0lFeDBMQ0JwZFNBOUlHTnNZWE56SUdWNGRHVnVaSE1nZDNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ0E5SURFMk56YzJPVFl3S1hzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUc1bGR5QlZhVzUwTVRaQmNuSmhlU2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRGNLSUNBZ0lDQWdJQ0JkS1N3Z2FTQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29PQ0FxSURNcExDQnlJRDBnYm1WM0lGOWxPd29nSUNBZ0lDQWdJSEl1YzJWMFNXNWtaWGdvYm1WM0lGVmxLRzRzSURFcEtTd2djaTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUZWbEtHa3NJRE1wS1RzS0lDQWdJQ0FnSUNCemRYQmxjaWh5TENCdVpYY2dablFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXZZbXBsWTNRZ1BTQmxMQ0IwYUdsekxuUjVjR1VnUFNBaVFtOTRTR1ZzY0dWeUlpd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdWRYQmtZWFJsS0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzaElaV3h3WlhJNklDNTFjR1JoZEdVb0tTQm9ZWE1nYm04Z2JHOXVaMlZ5SUdGeVozVnRaVzUwY3k0aUtTd2dkR2hwY3k1dlltcGxZM1FnSVQwOUlIWnZhV1FnTUNBbUppQk1jeTV6WlhSR2NtOXRUMkpxWldOMEtIUm9hWE11YjJKcVpXTjBLU3dnVEhNdWFYTkZiWEIwZVNncEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCTWN5NXRhVzRzSUc0Z1BTQk1jeTV0WVhnc0lHa2dQU0IwYUdsekxtZGxiMjFsZEhKNUxtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHNJSElnUFNCcExtRnljbUY1T3dvZ0lDQWdJQ0FnSUhKYk1GMGdQU0J1TG5nc0lISmJNVjBnUFNCdUxua3NJSEpiTWwwZ1BTQnVMbm9zSUhKYk0xMGdQU0IwTG5nc0lISmJORjBnUFNCdUxua3NJSEpiTlYwZ1BTQnVMbm9zSUhKYk5sMGdQU0IwTG5nc0lISmJOMTBnUFNCMExua3NJSEpiT0YwZ1BTQnVMbm9zSUhKYk9WMGdQU0J1TG5nc0lISmJNVEJkSUQwZ2RDNTVMQ0J5V3pFeFhTQTlJRzR1ZWl3Z2Nsc3hNbDBnUFNCdUxuZ3NJSEpiTVROZElEMGdiaTU1TENCeVd6RTBYU0E5SUhRdWVpd2djbHN4TlYwZ1BTQjBMbmdzSUhKYk1UWmRJRDBnYmk1NUxDQnlXekUzWFNBOUlIUXVlaXdnY2xzeE9GMGdQU0IwTG5nc0lISmJNVGxkSUQwZ2RDNTVMQ0J5V3pJd1hTQTlJSFF1ZWl3Z2Nsc3lNVjBnUFNCdUxuZ3NJSEpiTWpKZElEMGdkQzU1TENCeVd6SXpYU0E5SUhRdWVpd2dhUzV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwYUdsekxtZGxiMjFsZEhKNUxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlU5aWFtVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViMkpxWldOMElEMGdaU3dnZEdocGN5NTFjR1JoZEdVb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCM2RDNXdjbTkwYjNSNWNHVXVZMjl3ZVM1allXeHNLSFJvYVhNc0lHVXBMQ0IwYUdsekxtOWlhbVZqZENBOUlHVXViMkpxWldOMExDQjBhR2x6T3dvZ0lDQWdmUXA5TENCQ2VTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2QzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENBOUlERTJOemMyT1RZd0tYc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHNWxkeUJWYVc1ME1UWkJjbkpoZVNoYkNpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURjS0lDQWdJQ0FnSUNCZEtTd2dhU0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Rb2dJQ0FnSUNBZ0lGMHNJSElnUFNCdVpYY2dYMlU3Q2lBZ0lDQWdJQ0FnY2k1elpYUkpibVJsZUNodVpYY2dWV1VvYml3Z01Ta3BMQ0J5TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9hU3dnTXlrcE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0hJc0lHNWxkeUJtZENoN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbUp2ZUNBOUlHVXNJSFJvYVhNdWRIbHdaU0E5SUNKQ2IzZ3pTR1ZzY0dWeUlpd2dkR2hwY3k1blpXOXRaWFJ5ZVM1amIyMXdkWFJsUW05MWJtUnBibWRUY0dobGNtVW9LVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WW05NE93b2dJQ0FnSUNBZ0lIUXVhWE5GYlhCMGVTZ3BJSHg4SUNoMExtZGxkRU5sYm5SbGNpaDBhR2x6TG5CdmMybDBhVzl1S1N3Z2RDNW5aWFJUYVhwbEtIUm9hWE11YzJOaGJHVXBMQ0IwYUdsekxuTmpZV3hsTG0xMWJIUnBjR3g1VTJOaGJHRnlLQzQxS1N3Z2MzVndaWEl1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrcE93b2dJQ0FnZlFwOUxDQjZlU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiMjRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDQTlJREVzSUc0Z1BTQXhOamMzTmprMk1DbDdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVMQ0J5SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNCZExDQnZJRDBnYm1WM0lGOWxPd29nSUNBZ0lDQWdJRzh1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaHlMQ0F6S1Nrc0lHOHVZMjl0Y0hWMFpVSnZkVzVrYVc1blUzQm9aWEpsS0NrN0NpQWdJQ0FnSUNBZ2MzVndaWElvYnl3Z2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhDaUFnSUNBZ0lDQWdmU2twT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlFiR0Z1WlVobGJIQmxjaUlzSUhSb2FYTXVjR3hoYm1VZ1BTQmxMQ0IwYUdsekxuTnBlbVVnUFNCME93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4Q2lBZ0lDQWdJQ0FnWFN3Z2JDQTlJRzVsZHlCZlpUc0tJQ0FnSUNBZ0lDQnNMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb1lTd2dNeWtwTENCc0xtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwTENCMGFHbHpMbUZrWkNodVpYY2djM1FvYkN3Z2JtVjNJR2h1S0hzS0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUc5d1lXTnBkSGs2SUM0eUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMzQmhjbVZ1ZERvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9WM0pwZEdVNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwS1NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0F0ZEdocGN5NXdiR0Z1WlM1amIyNXpkR0Z1ZERzS0lDQWdJQ0FnSUNCTllYUm9MbUZpY3loMEtTQThJREZsTFRnZ0ppWWdLSFFnUFNBeFpTMDRLU3dnZEdocGN5NXpZMkZzWlM1elpYUW9MalVnS2lCMGFHbHpMbk5wZW1Vc0lDNDFJQ29nZEdocGN5NXphWHBsTENCMEtTd2dkR2hwY3k1amFHbHNaSEpsYmxzd1hTNXRZWFJsY21saGJDNXphV1JsSUQwZ2RDQThJREFnUHlCcGRDQTZJRUZwTENCMGFHbHpMbXh2YjJ0QmRDaDBhR2x6TG5Cc1lXNWxMbTV2Y20xaGJDa3NJSE4xY0dWeUxuVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBPd29nSUNBZ2ZRcDlMQ0JQWXlBOUlHNWxkeUJOTENCU2N5d2dTMjhzSUZWNUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lFMG9NQ3dnTUN3Z01Ta3NJSFFnUFNCdVpYY2dUU2d3TENBd0xDQXdLU3dnYmlBOUlERXNJR2tnUFNBeE5qYzNOamsyTUN3Z2NpQTlJRzRnS2lBdU1pd2dieUE5SUhJZ0tpQXVNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVFYSnliM2RJWld4d1pYSWlMQ0JTY3lBOVBUMGdkbTlwWkNBd0lDWW1JQ2hTY3lBOUlHNWxkeUJmWlN3Z1VuTXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNoYkNpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNCZExDQXpLU2tzSUV0dklEMGdibVYzSUVwdUtEQXNJQzQxTENBeExDQTFMQ0F4S1N3Z1MyOHVkSEpoYm5Oc1lYUmxLREFzSUMwdU5Td2dNQ2twTENCMGFHbHpMbkJ2YzJsMGFXOXVMbU52Y0hrb2RDa3NJSFJvYVhNdWJHbHVaU0E5SUc1bGR5QnZiaWhTY3l3Z2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhDaUFnSUNBZ0lDQWdmU2twTENCMGFHbHpMbXhwYm1VdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxtRmtaQ2gwYUdsekxteHBibVVwTENCMGFHbHpMbU52Ym1VZ1BTQnVaWGNnYzNRb1MyOHNJRzVsZHlCb2JpaDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcEtTd2dkR2hwY3k1amIyNWxMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVoWkdRb2RHaHBjeTVqYjI1bEtTd2dkR2hwY3k1elpYUkVhWEpsWTNScGIyNG9aU2tzSUhSb2FYTXVjMlYwVEdWdVozUm9LRzRzSUhJc0lHOHBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJHbHlaV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNTVJRDRnTGprNU9UazVLU0IwYUdsekxuRjFZWFJsY201cGIyNHVjMlYwS0RBc0lEQXNJREFzSURFcE93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tHVXVlU0E4SUMwdU9UazVPVGtwSUhSb2FYTXVjWFZoZEdWeWJtbHZiaTV6WlhRb01Td2dNQ3dnTUN3Z01DazdDaUFnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJRTlqTG5ObGRDaGxMbm9zSURBc0lDMWxMbmdwTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndVlXTnZjeWhsTG5rcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuRjFZWFJsY201cGIyNHVjMlYwUm5KdmJVRjRhWE5CYm1kc1pTaFBZeXdnZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjMlYwVEdWdVozUm9LR1VzSUhRZ1BTQmxJQ29nTGpJc0lHNGdQU0IwSUNvZ0xqSXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxteHBibVV1YzJOaGJHVXVjMlYwS0RFc0lFMWhkR2d1YldGNEtERmxMVFFzSUdVZ0xTQjBLU3dnTVNrc0lIUm9hWE11YkdsdVpTNTFjR1JoZEdWTllYUnlhWGdvS1N3Z2RHaHBjeTVqYjI1bExuTmpZV3hsTG5ObGRDaHVMQ0IwTENCdUtTd2dkR2hwY3k1amIyNWxMbkJ2YzJsMGFXOXVMbmtnUFNCbExDQjBhR2x6TG1OdmJtVXVkWEJrWVhSbFRXRjBjbWw0S0NrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJEYjJ4dmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXNhVzVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbk5sZENobEtTd2dkR2hwY3k1amIyNWxMbTFoZEdWeWFXRnNMbU52Ykc5eUxuTmxkQ2hsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXNJQ0V4S1N3Z2RHaHBjeTVzYVc1bExtTnZjSGtvWlM1c2FXNWxLU3dnZEdocGN5NWpiMjVsTG1OdmNIa29aUzVqYjI1bEtTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z2NuVWdQU0JqYkdGemN5QmxlSFJsYm1SeklIZDBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeEtYc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWlN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdaU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pRb2dJQ0FnSUNBZ0lGMHNJRzRnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDNDJMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F1Tml3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMallzQ2lBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQmRMQ0JwSUQwZ2JtVjNJRjlsT3dvZ0lDQWdJQ0FnSUdrdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2gwTENBektTa3NJR2t1YzJWMFFYUjBjbWxpZFhSbEtDSmpiMnh2Y2lJc0lHNWxkeUJrWlNodUxDQXpLU2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ1puUW9ld29nSUNBZ0lDQWdJQ0FnSUNCMlpYSjBaWGhEYjJ4dmNuTTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0drc0lISXBPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKQmVHVnpTR1ZzY0dWeUlqc0tJQ0FnSUgwS0lDQWdJSE5sZEVOdmJHOXljeWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1WlhjZ1lXVXNJSElnUFNCMGFHbHpMbWRsYjIxbGRISjVMbUYwZEhKcFluVjBaWE11WTI5c2IzSXVZWEp5WVhrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdrdWMyVjBLR1VwTENCcExuUnZRWEp5WVhrb2Npd2dNQ2tzSUdrdWRHOUJjbkpoZVNoeUxDQXpLU3dnYVM1elpYUW9kQ2tzSUdrdWRHOUJjbkpoZVNoeUxDQTJLU3dnYVM1MGIwRnljbUY1S0hJc0lEa3BMQ0JwTG5ObGRDaHVLU3dnYVM1MGIwRnljbUY1S0hJc0lERXlLU3dnYVM1MGIwRnljbUY1S0hJc0lERTFLU3dnZEdocGN5NW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpMbU52Ykc5eUxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WjJWdmJXVjBjbmt1WkdsemNHOXpaU2dwTENCMGFHbHpMbTFoZEdWeWFXRnNMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtmU3dnVDNrZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pUYUdGd1pWQmhkR2dpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbExDQjBhR2x6TG5OMVlsQmhkR2h6SUQwZ1cxMHNJSFJvYVhNdVkzVnljbVZ1ZEZCaGRHZ2dQU0J1ZFd4c093b2dJQ0FnZlFvZ0lDQWdiVzkyWlZSdktHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpkWEp5Wlc1MFVHRjBhQ0E5SUc1bGR5Qm5jaXdnZEdocGN5NXpkV0pRWVhSb2N5NXdkWE5vS0hSb2FYTXVZM1Z5Y21WdWRGQmhkR2dwTENCMGFHbHpMbU4xY25KbGJuUlFZWFJvTG0xdmRtVlVieWhsTENCMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeHBibVZVYnlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzVnljbVZ1ZEZCaGRHZ3ViR2x1WlZSdktHVXNJSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY1hWaFpISmhkR2xqUTNWeWRtVlVieWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5Y21WdWRGQmhkR2d1Y1hWaFpISmhkR2xqUTNWeWRtVlVieWhsTENCMExDQnVMQ0JwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdKbGVtbGxja04xY25abFZHOG9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuSmxiblJRWVhSb0xtSmxlbWxsY2tOMWNuWmxWRzhvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6Y0d4cGJtVlVhSEoxS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKeVpXNTBVR0YwYUM1emNHeHBibVZVYUhKMUtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlUYUdGd1pYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHNG9jQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhrZ1BTQXdMQ0JpSUQwZ2NDNXNaVzVuZEdnN0lIa2dQQ0JpT3lCNUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVFZ1BTQndXM2xkTENCTUlEMGdibVYzSUZoME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1RDNWpkWEoyWlhNZ1BTQkJMbU4xY25abGN5d2dYeTV3ZFhOb0tFd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmZPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJwS0hBc0lGOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCZkxteGxibWQwYUN3Z1lpQTlJQ0V4T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFRWdQU0I1SUMwZ01Td2dUQ0E5SURBN0lFd2dQQ0I1T3lCQklEMGdUQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkpJRDBnWDF0QlhTd2dheUE5SUY5YlRGMHNJRUlnUFNCckxuZ2dMU0JKTG5nc0lGQWdQU0JyTG5rZ0xTQkpMbms3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1RXRjBhQzVoWW5Nb1VDa2dQaUJPZFcxaVpYSXVSVkJUU1V4UFRpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaFFJRHdnTUNBbUppQW9TU0E5SUY5YlRGMHNJRUlnUFNBdFFpd2dheUE5SUY5YlFWMHNJRkFnUFNBdFVDa3NJSEF1ZVNBOElFa3VlU0I4ZkNCd0xua2dQaUJyTG5rcElHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNod0xua2dQVDA5SUVrdWVTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0M1NElEMDlQU0JKTG5ncElISmxkSFZ5YmlBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZHlBOUlGQWdLaUFvY0M1NElDMGdTUzU0S1NBdElFSWdLaUFvY0M1NUlDMGdTUzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIY2dQVDA5SURBcElISmxkSFZ5YmlBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSGNnUENBd0tTQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpQTlJQ0ZpT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hBdWVTQWhQVDBnU1M1NUtTQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2F5NTRJRHc5SUhBdWVDQW1KaUJ3TG5nZ1BEMGdTUzU0SUh4OElFa3VlQ0E4UFNCd0xuZ2dKaVlnY0M1NElEdzlJR3N1ZUNrZ2NtVjBkWEp1SUNFd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlFcDBMbWx6UTJ4dlkydFhhWE5sTENCdklEMGdkR2hwY3k1emRXSlFZWFJvY3pzS0lDQWdJQ0FnSUNCcFppQW9ieTVzWlc1bmRHZ2dQVDA5SURBcElISmxkSFZ5YmlCYlhUc0tJQ0FnSUNBZ0lDQnBaaUFvZENBOVBUMGdJVEFwSUhKbGRIVnliaUJ1S0c4cE93b2dJQ0FnSUNBZ0lHeGxkQ0JoTENCc0xDQmpMQ0JvSUQwZ1cxMDdDaUFnSUNBZ0lDQWdhV1lnS0c4dWJHVnVaM1JvSUQwOVBTQXhLU0J5WlhSMWNtNGdiQ0E5SUc5Yk1GMHNJR01nUFNCdVpYY2dXSFFzSUdNdVkzVnlkbVZ6SUQwZ2JDNWpkWEoyWlhNc0lHZ3VjSFZ6YUNoaktTd2dhRHNLSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJQ0Z5S0c5Yk1GMHVaMlYwVUc5cGJuUnpLQ2twT3dvZ0lDQWdJQ0FnSUhVZ1BTQmxJRDhnSVhVZ09pQjFPd29nSUNBZ0lDQWdJR3hsZENCa0lEMGdXMTBzSUdZZ1BTQmJYU3dnYlNBOUlGdGRMQ0I0SUQwZ01Dd2dkanNLSUNBZ0lDQWdJQ0JtVzNoZElEMGdkbTlwWkNBd0xDQnRXM2hkSUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQndJRDBnTUN3Z1h5QTlJRzh1YkdWdVozUm9PeUJ3SUR3Z1h6c2djQ3NyS1d3Z1BTQnZXM0JkTENCMklEMGdiQzVuWlhSUWIybHVkSE1vS1N3Z1lTQTlJSElvZGlrc0lHRWdQU0JsSUQ4Z0lXRWdPaUJoTENCaElEOGdLQ0YxSUNZbUlHWmJlRjBnSmlZZ2VDc3JMQ0JtVzNoZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCek9pQnVaWGNnV0hRc0NpQWdJQ0FnSUNBZ0lDQWdJSEE2SUhZS0lDQWdJQ0FnSUNCOUxDQm1XM2hkTG5NdVkzVnlkbVZ6SUQwZ2JDNWpkWEoyWlhNc0lIVWdKaVlnZUNzckxDQnRXM2hkSUQwZ1cxMHBJRG9nYlZ0NFhTNXdkWE5vS0hzS0lDQWdJQ0FnSUNBZ0lDQWdhRG9nYkN3S0lDQWdJQ0FnSUNBZ0lDQWdjRG9nZGxzd1hRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR2xtSUNnaFpsc3dYU2tnY21WMGRYSnVJRzRvYnlrN0NpQWdJQ0FnSUNBZ2FXWWdLR1l1YkdWdVozUm9JRDRnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJQ0V4TENCZklEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VTQTlJREFzSUdJZ1BTQm1MbXhsYm1kMGFEc2dlU0E4SUdJN0lIa3JLeWxrVzNsZElEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VTQTlJREFzSUdJZ1BTQm1MbXhsYm1kMGFEc2dlU0E4SUdJN0lIa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FTQTlJRzFiZVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUV3Z1BTQXdPeUJNSUR3Z1FTNXNaVzVuZEdnN0lFd3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRWtnUFNCQlcweGRMQ0JySUQwZ0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JDSUQwZ01Ec2dRaUE4SUdZdWJHVnVaM1JvT3lCQ0t5c3BhU2hKTG5Bc0lHWmJRbDB1Y0NrZ0ppWWdLSGtnSVQwOUlFSWdKaVlnWHk1d2RYTm9LSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabkp2YlhNNklIa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnZjem9nUWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUc5c1pUb2dUQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcExDQnJJRDhnS0dzZ1BTQWhNU3dnWkZ0Q1hTNXdkWE5vS0VrcEtTQTZJSEFnUFNBaE1DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYXlBbUppQmtXM2xkTG5CMWMyZ29TU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWHk1c1pXNW5kR2dnUGlBd0lDWW1JQ2h3SUh4OElDaHRJRDBnWkNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWnpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhBZ1BTQXdMQ0JmSUQwZ1ppNXNaVzVuZEdnN0lIQWdQQ0JmT3lCd0t5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCaklEMGdabHR3WFM1ekxDQm9MbkIxYzJnb1l5a3NJR2NnUFNCdFczQmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhrZ1BTQXdMQ0JpSUQwZ1p5NXNaVzVuZEdnN0lIa2dQQ0JpT3lCNUt5c3BZeTVvYjJ4bGN5NXdkWE5vS0dkYmVWMHVhQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJvT3dvZ0lDQWdmUXA5TENCemRTQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29NU2tzSUVoNUlEMGdibVYzSUVsdWRETXlRWEp5WVhrb2MzVXVZblZtWm1WeUtTd2dhM2tnUFNCamJHRnpjeUI3Q2lBZ0lDQnpkR0YwYVdNZ2RHOUlZV3htUm14dllYUW9aU2tnZXdvZ0lDQWdJQ0FnSUdVZ1BpQTJOVFV3TkNBbUppQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVFWVhSaFZYUnBiSE11ZEc5SVlXeG1SbXh2WVhRb0tUb2dkbUZzZFdVZ1pYaGpaV1ZrY3lBMk5UVXdOQzRpS1N3Z1pTQTlJRFkxTlRBMEtTd2djM1ZiTUYwZ1BTQmxPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdTSGxiTUYwc0lHNGdQU0IwSUQ0K0lERTJJQ1lnTXpJM05qZ3NJR2tnUFNCMElENCtJREV5SUNZZ01qQTBOeXdnY2lBOUlIUWdQajRnTWpNZ0ppQXlOVFU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSElnUENBeE1ETWdQeUJ1SURvZ2NpQStJREUwTWlBL0lDaHVJSHc5SURNeE56UTBMQ0J1SUh3OUlDaHlJRDA5SURJMU5TQS9JREFnT2lBeEtTQW1KaUIwSUNZZ09ETTRPRFl3Tnl3Z2Jpa2dPaUJ5SUR3Z01URXpJRDhnS0drZ2ZEMGdNakEwT0N3Z2JpQjhQU0FvYVNBK1BpQXhNVFFnTFNCeUtTQXJJQ2hwSUQ0K0lERXhNeUF0SUhJZ0ppQXhLU3dnYmlrZ09pQW9iaUI4UFNCeUlDMGdNVEV5SUR3OElERXdJSHdnYVNBK1BpQXhMQ0J1SUNzOUlHa2dKaUF4TENCdUtUc0tJQ0FnSUgwS2ZTd2dZakFnUFNBd0xDQjNNQ0E5SURFc0lGTXdJRDBnTUN3Z1ZEQWdQU0F4TENCRk1DQTlJREk3Q21aMWJtTjBhVzl1SUVFd0tITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWxjMmhHWVdObFRXRjBaWEpwWVd3Z2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJR0Z1SUVGeWNtRjVJR2x1YzNSbFlXUXVJaWtzSUhNN0NuMEtablZ1WTNScGIyNGdRekFvY3lBOUlGdGRLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5kV3gwYVUxaGRHVnlhV0ZzSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQmhiaUJCY25KaGVTQnBibk4wWldGa0xpSXBMQ0J6TG1selRYVnNkR2xOWVhSbGNtbGhiQ0E5SUNFd0xDQnpMbTFoZEdWeWFXRnNjeUE5SUhNc0lITXVZMnh2Ym1VZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjeTV6YkdsalpTZ3BPd29nSUNBZ2ZTd2djenNLZlFwbWRXNWpkR2x2YmlCTU1DaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVRYjJsdWRFTnNiM1ZrSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z1ZFaFNSVVV1VUc5cGJuUnpMaUlwTENCdVpYY2dlbklvY3l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnVWpBb2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVHRnlkR2xqYkdVZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QlVTRkpGUlM1VGNISnBkR1V1SWlrc0lHNWxkeUJ5YnloektUc0tmUXBtZFc1amRHbHZiaUJRTUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVFZWEowYVdOc1pWTjVjM1JsYlNCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklGUklVa1ZGTGxCdmFXNTBjeTRpS1N3Z2JtVjNJSHB5S0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUVrd0tITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsQnZhVzUwUTJ4dmRXUk5ZWFJsY21saGJDQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJRlJJVWtWRkxsQnZhVzUwYzAxaGRHVnlhV0ZzTGlJcExDQnVaWGNnYW00b2N5azdDbjBLWm5WdVkzUnBiMjRnUkRBb2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVHRnlkR2xqYkdWQ1lYTnBZMDFoZEdWeWFXRnNJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnVkVoU1JVVXVVRzlwYm5SelRXRjBaWEpwWVd3dUlpa3NJRzVsZHlCcWJpaHpLVHNLZlFwbWRXNWpkR2x2YmlCR01DaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVFZWEowYVdOc1pWTjVjM1JsYlUxaGRHVnlhV0ZzSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z1ZFaFNSVVV1VUc5cGJuUnpUV0YwWlhKcFlXd3VJaWtzSUc1bGR5QnFiaWh6S1RzS2ZRcG1kVzVqZEdsdmJpQk9NQ2h6TENCbExDQjBLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaWEowWlhnZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRlJJVWtWRkxsWmxZM1J2Y2pNZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUUwb2N5d2daU3dnZENrN0NuMEtablZ1WTNScGIyNGdRakFvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVJIbHVZVzFwWTBKMVptWmxja0YwZEhKcFluVjBaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2JtVjNJRlJJVWtWRkxrSjFabVpsY2tGMGRISnBZblYwWlNncExuTmxkRlZ6WVdkbEtDQlVTRkpGUlM1RWVXNWhiV2xqUkhKaGQxVnpZV2RsSUNrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUZWbEtITXNJR1VwTG5ObGRGVnpZV2RsS0hWeUtUc0tmUXBtZFc1amRHbHZiaUI2TUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUpiblE0UVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVTVzUwT0VKMVptWmxja0YwZEhKcFluVjBaU2dwSUdsdWMzUmxZV1F1SWlrc0lHNWxkeUJxWXloekxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCVk1DaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVWYVc1ME9FRjBkSEpwWW5WMFpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnYm1WM0lGUklVa1ZGTGxWcGJuUTRRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lGRmpLSE1zSUdVcE93cDlDbVoxYm1OMGFXOXVJRTh3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsVnBiblE0UTJ4aGJYQmxaRUYwZEhKcFluVjBaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2JtVjNJRlJJVWtWRkxsVnBiblE0UTJ4aGJYQmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTZ3BJR2x1YzNSbFlXUXVJaWtzSUc1bGR5QkxZeWh6TENCbEtUc0tmUXBtZFc1amRHbHZiaUJJTUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUpiblF4TmtGMGRISnBZblYwWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdibVYzSUZSSVVrVkZMa2x1ZERFMlFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUdWb0tITXNJR1VwT3dwOUNtWjFibU4wYVc5dUlHc3dLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxWcGJuUXhOa0YwZEhKcFluVjBaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2JtVjNJRlJJVWtWRkxsVnBiblF4TmtKMVptWmxja0YwZEhKcFluVjBaU2dwSUdsdWMzUmxZV1F1SWlrc0lHNWxkeUJaY3loekxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCSE1DaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYm5Rek1rRjBkSEpwWW5WMFpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnYm1WM0lGUklVa1ZGTGtsdWRETXlRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lIUm9LSE1zSUdVcE93cDlDbVoxYm1OMGFXOXVJRll3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsVnBiblF6TWtGMGRISnBZblYwWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdibVYzSUZSSVVrVkZMbFZwYm5Rek1rSjFabVpsY2tGMGRISnBZblYwWlNncElHbHVjM1JsWVdRdUlpa3NJRzVsZHlCYWN5aHpMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQlhNQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1R2JHOWhkRE15UVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVSbXh2WVhRek1rSjFabVpsY2tGMGRISnBZblYwWlNncElHbHVjM1JsWVdRdUlpa3NJRzVsZHlCa1pTaHpMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQnhNQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1R2JHOWhkRFkwUVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVSbXh2WVhRMk5FSjFabVpsY2tGMGRISnBZblYwWlNncElHbHVjM1JsWVdRdUlpa3NJRzVsZHlCcGFDaHpMQ0JsS1RzS2ZRcERkQzVqY21WaGRHVWdQU0JtZFc1amRHbHZiaWh6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzVzYjJjb0lsUklVa1ZGTGtOMWNuWmxMbU55WldGMFpTZ3BJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1FpS1N3Z2N5NXdjbTkwYjNSNWNHVWdQU0JQWW1wbFkzUXVZM0psWVhSbEtFTjBMbkJ5YjNSdmRIbHdaU2tzSUhNdWNISnZkRzkwZVhCbExtTnZibk4wY25WamRHOXlJRDBnY3l3Z2N5NXdjbTkwYjNSNWNHVXVaMlYwVUc5cGJuUWdQU0JsTENCek93cDlPd3BuY2k1d2NtOTBiM1I1Y0dVdVpuSnZiVkJ2YVc1MGN5QTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEJoZEdnNklDNW1jbTl0VUc5cGJuUnpLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWMyVjBSbkp2YlZCdmFXNTBjeWdwTGlJcExDQjBhR2x6TG5ObGRFWnliMjFRYjJsdWRITW9jeWs3Q24wN0NtWjFibU4wYVc5dUlGZ3dLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0Y0YVhOSVpXeHdaWElnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlCVVNGSkZSUzVCZUdWelNHVnNjR1Z5TGlJcExDQnVaWGNnY25Vb2N5azdDbjBLWm5WdVkzUnBiMjRnU2pBb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRbTkxYm1ScGJtZENiM2hJWld4d1pYSWdhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnUTNKbFlYUnBibWNnWVNCVVNGSkZSUzVDYjNoSVpXeHdaWElnYVc1emRHVmhaQzRpS1N3Z2JtVjNJR2wxS0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUZrd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa1ZrWjJWelNHVnNjR1Z5SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQlVTRkpGUlM1RlpHZGxjMGRsYjIxbGRISjVJR2x1YzNSbFlXUXVJaWtzSUc1bGR5QjNkQ2h1WlhjZ1gyRW9jeTVuWlc5dFpYUnllU2tzSUc1bGR5Qm1kQ2g3Q2lBZ0lDQWdJQ0FnWTI5c2IzSTZJR1VnSVQwOUlIWnZhV1FnTUNBL0lHVWdPaUF4TmpjM056SXhOUW9nSUNBZ2ZTa3BPd3A5Q201MUxuQnliM1J2ZEhsd1pTNXpaWFJEYjJ4dmNuTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtkeWFXUklaV3h3WlhJNklITmxkRU52Ykc5eWN5Z3BJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1FzSUhCaGMzTWdkR2hsYlNCcGJpQjBhR1VnWTI5dWMzUnlkV04wYjNJZ2FXNXpkR1ZoWkM0aUtUc0tmVHNLWlhVdWNISnZkRzkwZVhCbExuVndaR0YwWlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVMnRsYkdWMGIyNUlaV3h3WlhJNklIVndaR0YwWlNncElHNXZJR3h2Ym1kbGNpQnVaV1ZrY3lCMGJ5QmlaU0JqWVd4c1pXUXVJaWs3Q24wN0NtWjFibU4wYVc5dUlGb3dLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkcGNtVm1jbUZ0WlVobGJIQmxjaUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1ZFaFNSVVV1VjJseVpXWnlZVzFsUjJWdmJXVjBjbmtnYVc1emRHVmhaQzRpS1N3Z2JtVjNJSGQwS0c1bGR5QkZZU2h6TG1kbGIyMWxkSEo1S1N3Z2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNCamIyeHZjam9nWlNBaFBUMGdkbTlwWkNBd0lEOGdaU0E2SURFMk56YzNNakUxQ2lBZ0lDQjlLU2s3Q24wS1luUXVjSEp2ZEc5MGVYQmxMbVY0ZEhKaFkzUlZjbXhDWVhObElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVURzloWkdWeU9pQXVaWGgwY21GamRGVnliRUpoYzJVb0tTQm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJWYzJVZ1ZFaFNSVVV1VEc5aFpHVnlWWFJwYkhNdVpYaDBjbUZqZEZWeWJFSmhjMlVvS1NCcGJuTjBaV0ZrTGlJcExDQkhjeTVsZUhSeVlXTjBWWEpzUW1GelpTaHpLVHNLZlRzS1luUXVTR0Z1Wkd4bGNuTWdQU0I3Q2lBZ0lDQmhaR1E2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa3h2WVdSbGNqb2dTR0Z1Wkd4bGNuTXVZV1JrS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRXh2WVdScGJtZE5ZVzVoWjJWeUxtRmtaRWhoYm1Sc1pYSW9LU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdmU3dLSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVURzloWkdWeU9pQklZVzVrYkdWeWN5NW5aWFFvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdURzloWkdsdVowMWhibUZuWlhJdVoyVjBTR0Z1Wkd4bGNpZ3BJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUNRd0tITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsaElVa3h2WVdSbGNpQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJRlJJVWtWRkxrWnBiR1ZNYjJGa1pYSXVJaWtzSUc1bGR5QlpkQ2h6S1RzS2ZRcG1kVzVqZEdsdmJpQnFNQ2h6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYVc1aGNubFVaWGgwZFhKbFRHOWhaR1Z5SUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z1ZFaFNSVVV1UkdGMFlWUmxlSFIxY21WTWIyRmtaWEl1SWlrc0lHNWxkeUJPYUNoektUc0tmUXB4YVM1d2NtOTBiM1I1Y0dVdVkyVnVkR1Z5SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFtOTRNam9nTG1ObGJuUmxjaWdwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZGxkRU5sYm5SbGNpZ3BMaUlwTENCMGFHbHpMbWRsZEVObGJuUmxjaWh6S1RzS2ZUc0tjV2t1Y0hKdmRHOTBlWEJsTG1WdGNIUjVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNneU9pQXVaVzF3ZEhrb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVwYzBWdGNIUjVLQ2t1SWlrc0lIUm9hWE11YVhORmJYQjBlU2dwT3dwOU93cHhhUzV3Y205MGIzUjVjR1V1YVhOSmJuUmxjbk5sWTNScGIyNUNiM2dnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzZ3lPaUF1YVhOSmJuUmxjbk5sWTNScGIyNUNiM2dvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXBiblJsY25ObFkzUnpRbTk0S0NrdUlpa3NJSFJvYVhNdWFXNTBaWEp6WldOMGMwSnZlQ2h6S1RzS2ZUc0tjV2t1Y0hKdmRHOTBlWEJsTG5OcGVtVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNneU9pQXVjMmw2WlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEZOcGVtVW9LUzRpS1N3Z2RHaHBjeTVuWlhSVGFYcGxLSE1wT3dwOU93cE1kQzV3Y205MGIzUjVjR1V1WTJWdWRHVnlJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW05NE16b2dMbU5sYm5SbGNpZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1kbGRFTmxiblJsY2lncExpSXBMQ0IwYUdsekxtZGxkRU5sYm5SbGNpaHpLVHNLZlRzS1RIUXVjSEp2ZEc5MGVYQmxMbVZ0Y0hSNUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNiM2d6T2lBdVpXMXdkSGtvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXBjMFZ0Y0hSNUtDa3VJaWtzSUhSb2FYTXVhWE5GYlhCMGVTZ3BPd3A5T3dwTWRDNXdjbTkwYjNSNWNHVXVhWE5KYm5SbGNuTmxZM1JwYjI1Q2IzZ2dQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNnek9pQXVhWE5KYm5SbGNuTmxZM1JwYjI1Q2IzZ29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1cGJuUmxjbk5sWTNSelFtOTRLQ2t1SWlrc0lIUm9hWE11YVc1MFpYSnpaV04wYzBKdmVDaHpLVHNLZlRzS1RIUXVjSEp2ZEc5MGVYQmxMbWx6U1c1MFpYSnpaV04wYVc5dVUzQm9aWEpsSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFtOTRNem9nTG1selNXNTBaWEp6WldOMGFXOXVVM0JvWlhKbEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YVc1MFpYSnpaV04wYzFOd2FHVnlaU2dwTGlJcExDQjBhR2x6TG1sdWRHVnljMlZqZEhOVGNHaGxjbVVvY3lrN0NuMDdDa3gwTG5CeWIzUnZkSGx3WlM1emFYcGxJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW05NE16b2dMbk5wZW1Vb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVuWlhSVGFYcGxLQ2t1SWlrc0lIUm9hWE11WjJWMFUybDZaU2h6S1RzS2ZUc0tRVzR1Y0hKdmRHOTBlWEJsTG1WdGNIUjVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVUY0dobGNtVTZJQzVsYlhCMGVTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1selJXMXdkSGtvS1M0aUtTd2dkR2hwY3k1cGMwVnRjSFI1S0NrN0NuMDdDa1J5TG5CeWIzUnZkSGx3WlM1elpYUkdjbTl0VFdGMGNtbDRJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Um5KMWMzUjFiVG9nTG5ObGRFWnliMjFOWVhSeWFYZ29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1elpYUkdjbTl0VUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwTGlJcExDQjBhR2x6TG5ObGRFWnliMjFRY205cVpXTjBhVzl1VFdGMGNtbDRLSE1wT3dwOU93cExhQzV3Y205MGIzUjVjR1V1WTJWdWRHVnlJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEdsdVpUTTZJQzVqWlc1MFpYSW9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1blpYUkRaVzUwWlhJb0tTNGlLU3dnZEdocGN5NW5aWFJEWlc1MFpYSW9jeWs3Q24wN0NteDBMbkJ5YjNSdmRIbHdaUzVtYkdGMGRHVnVWRzlCY25KaGVVOW1abk5sZENBOUlHWjFibU4wYVc5dUtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVETTZJQzVtYkdGMGRHVnVWRzlCY25KaGVVOW1abk5sZENncElHaGhjeUJpWldWdUlHUmxjSEpsWTJGMFpXUXVJRlZ6WlNBdWRHOUJjbkpoZVNncElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWRHOUJjbkpoZVNoekxDQmxLVHNLZlRzS2JIUXVjSEp2ZEc5MGVYQmxMbTExYkhScGNHeDVWbVZqZEc5eU15QTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVETTZJQzV0ZFd4MGFYQnNlVlpsWTNSdmNqTW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2RtVmpkRzl5TG1Gd2NHeDVUV0YwY21sNE15Z2diV0YwY21sNElDa2dhVzV6ZEdWaFpDNGlLU3dnY3k1aGNIQnNlVTFoZEhKcGVETW9kR2hwY3lrN0NuMDdDbXgwTG5CeWIzUnZkSGx3WlM1dGRXeDBhWEJzZVZabFkzUnZjak5CY25KaGVTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDRNem9nTG0xMWJIUnBjR3g1Vm1WamRHOXlNMEZ5Y21GNUtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2JIUXVjSEp2ZEc5MGVYQmxMbUZ3Y0d4NVZHOUNkV1ptWlhKQmRIUnlhV0oxZEdVZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnek9pQXVZWEJ3YkhsVWIwSjFabVpsY2tGMGRISnBZblYwWlNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JoZEhSeWFXSjFkR1V1WVhCd2JIbE5ZWFJ5YVhnektDQnRZWFJ5YVhnZ0tTQnBibk4wWldGa0xpSXBMQ0J6TG1Gd2NHeDVUV0YwY21sNE15aDBhR2x6S1RzS2ZUc0tiSFF1Y0hKdmRHOTBlWEJsTG1Gd2NHeDVWRzlXWldOMGIzSXpRWEp5WVhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFoZEhKcGVETTZJQzVoY0hCc2VWUnZWbVZqZEc5eU0wRnljbUY1S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLYkhRdWNISnZkRzkwZVhCbExtZGxkRWx1ZG1WeWMyVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZ3pPaUF1WjJWMFNXNTJaWEp6WlNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J0WVhSeWFYaEpibll1WTI5d2VTZ2diV0YwY21sNElDa3VhVzUyWlhKMEtDazdJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVZMjl3ZVNoektTNXBiblpsY25Rb0tUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExtVjRkSEpoWTNSUWIzTnBkR2x2YmlBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNWxlSFJ5WVdOMFVHOXphWFJwYjI0b0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVqYjNCNVVHOXphWFJwYjI0b0tTNGlLU3dnZEdocGN5NWpiM0I1VUc5emFYUnBiMjRvY3lrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1bWJHRjBkR1Z1Vkc5QmNuSmhlVTltWm5ObGRDQTlJR1oxYm1OMGFXOXVLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1bWJHRjBkR1Z1Vkc5QmNuSmhlVTltWm5ObGRDZ3BJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1F1SUZWelpTQXVkRzlCY25KaGVTZ3BJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVkRzlCY25KaGVTaHpMQ0JsS1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG1kbGRGQnZjMmwwYVc5dUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXVaMlYwVUc5emFYUnBiMjRvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdWbVZqZEc5eU15NXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvSUcxaGRISnBlQ0FwSUdsdWMzUmxZV1F1SWlrc0lHNWxkeUJOS0NrdWMyVjBSbkp2YlUxaGRISnBlRU52YkhWdGJpaDBhR2x6TENBektUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExuTmxkRkp2ZEdGMGFXOXVSbkp2YlZGMVlYUmxjbTVwYjI0Z1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXVjMlYwVW05MFlYUnBiMjVHY205dFVYVmhkR1Z5Ym1sdmJpZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG0xaGEyVlNiM1JoZEdsdmJrWnliMjFSZFdGMFpYSnVhVzl1S0NrdUlpa3NJSFJvYVhNdWJXRnJaVkp2ZEdGMGFXOXVSbkp2YlZGMVlYUmxjbTVwYjI0b2N5azdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNXRkV3gwYVhCc2VWUnZRWEp5WVhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbTExYkhScGNHeDVWRzlCY25KaGVTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzV0ZFd4MGFYQnNlVlpsWTNSdmNqTWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1YlhWc2RHbHdiSGxXWldOMGIzSXpLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElIWmxZM1J2Y2k1aGNIQnNlVTFoZEhKcGVEUW9JRzFoZEhKcGVDQXBJR2x1YzNSbFlXUXVJaWtzSUhNdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdWJYVnNkR2x3YkhsV1pXTjBiM0kwSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xtMTFiSFJwY0d4NVZtVmpkRzl5TkNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0IyWldOMGIzSXVZWEJ3YkhsTllYUnlhWGcwS0NCdFlYUnlhWGdnS1NCcGJuTjBaV0ZrTGlJcExDQnpMbUZ3Y0d4NVRXRjBjbWw0TkNoMGFHbHpLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbTExYkhScGNHeDVWbVZqZEc5eU0wRnljbUY1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXViWFZzZEdsd2JIbFdaV04wYjNJelFYSnlZWGtvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdWNtOTBZWFJsUVhocGN5QTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG5KdmRHRjBaVUY0YVhNb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnVm1WamRHOXlNeTUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUcxaGRISnBlQ0FwSUdsdWMzUmxZV1F1SWlrc0lITXVkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLSFJvYVhNcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdVkzSnZjM05XWldOMGIzSWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1WTNKdmMzTldaV04wYjNJb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnZG1WamRHOXlMbUZ3Y0d4NVRXRjBjbWw0TkNnZ2JXRjBjbWw0SUNrZ2FXNXpkR1ZoWkM0aUtTd2djeTVoY0hCc2VVMWhkSEpwZURRb2RHaHBjeWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzUwY21GdWMyeGhkR1VnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrMWhkSEpwZURRNklDNTBjbUZ1YzJ4aGRHVW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1Y205MFlYUmxXQ0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xuSnZkR0YwWlZnb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVjbTkwWVhSbFdTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG5KdmRHRjBaVmtvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdWNtOTBZWFJsV2lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbkp2ZEdGMFpWb29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1Y205MFlYUmxRbmxCZUdseklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1Y205MFlYUmxRbmxCZUdsektDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbUZ3Y0d4NVZHOUNkV1ptWlhKQmRIUnlhV0oxZEdVZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXVZWEJ3YkhsVWIwSjFabVpsY2tGMGRISnBZblYwWlNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JoZEhSeWFXSjFkR1V1WVhCd2JIbE5ZWFJ5YVhnMEtDQnRZWFJ5YVhnZ0tTQnBibk4wWldGa0xpSXBMQ0J6TG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6S1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG1Gd2NHeDVWRzlXWldOMGIzSXpRWEp5WVhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzVoY0hCc2VWUnZWbVZqZEc5eU0wRnljbUY1S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExtMWhhMlZHY25WemRIVnRJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbTFoYTJWR2NuVnpkSFZ0S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJQzV0WVd0bFVHVnljM0JsWTNScGRtVW9JR3hsWm5Rc0lISnBaMmgwTENCMGIzQXNJR0p2ZEhSdmJTd2dibVZoY2l3Z1ptRnlJQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTV0WVd0bFVHVnljM0JsWTNScGRtVW9jeXdnWlN3Z2Jpd2dkQ3dnYVN3Z2NpazdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNW5aWFJKYm5abGNuTmxJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG1kbGRFbHVkbVZ5YzJVb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnYldGMGNtbDRTVzUyTG1OdmNIa29JRzFoZEhKcGVDQXBMbWx1ZG1WeWRDZ3BPeUJwYm5OMFpXRmtMaUlwTENCMGFHbHpMbU52Y0hrb2N5a3VhVzUyWlhKMEtDazdDbjA3Q2xkMExuQnliM1J2ZEhsd1pTNXBjMGx1ZEdWeWMyVmpkR2x2Ymt4cGJtVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVRYkdGdVpUb2dMbWx6U1c1MFpYSnpaV04wYVc5dVRHbHVaU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtbHVkR1Z5YzJWamRITk1hVzVsS0NrdUlpa3NJSFJvYVhNdWFXNTBaWEp6WldOMGMweHBibVVvY3lrN0NuMDdDbWQwTG5CeWIzUnZkSGx3WlM1dGRXeDBhWEJzZVZabFkzUnZjak1nUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UmRXRjBaWEp1YVc5dU9pQXViWFZzZEdsd2JIbFdaV04wYjNJektDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUdseklHNXZkeUIyWldOMGIzSXVZWEJ3YkhsUmRXRjBaWEp1YVc5dUtDQnhkV0YwWlhKdWFXOXVJQ2tnYVc1emRHVmhaQzRpS1N3Z2N5NWhjSEJzZVZGMVlYUmxjbTVwYjI0b2RHaHBjeWs3Q24wN0NtZDBMbkJ5YjNSdmRIbHdaUzVwYm5abGNuTmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVSZFdGMFpYSnVhVzl1T2lBdWFXNTJaWEp6WlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdhVzUyWlhKMEtDa3VJaWtzSUhSb2FYTXVhVzUyWlhKMEtDazdDbjA3Q2tOdUxuQnliM1J2ZEhsd1pTNXBjMGx1ZEdWeWMyVmpkR2x2YmtKdmVDQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEpoZVRvZ0xtbHpTVzUwWlhKelpXTjBhVzl1UW05NEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YVc1MFpYSnpaV04wYzBKdmVDZ3BMaUlwTENCMGFHbHpMbWx1ZEdWeWMyVmpkSE5DYjNnb2N5azdDbjA3Q2tOdUxuQnliM1J2ZEhsd1pTNXBjMGx1ZEdWeWMyVmpkR2x2YmxCc1lXNWxJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VW1GNU9pQXVhWE5KYm5SbGNuTmxZM1JwYjI1UWJHRnVaU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtbHVkR1Z5YzJWamRITlFiR0Z1WlNncExpSXBMQ0IwYUdsekxtbHVkR1Z5YzJWamRITlFiR0Z1WlNoektUc0tmVHNLUTI0dWNISnZkRzkwZVhCbExtbHpTVzUwWlhKelpXTjBhVzl1VTNCb1pYSmxJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VW1GNU9pQXVhWE5KYm5SbGNuTmxZM1JwYjI1VGNHaGxjbVVvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXBiblJsY25ObFkzUnpVM0JvWlhKbEtDa3VJaWtzSUhSb2FYTXVhVzUwWlhKelpXTjBjMU53YUdWeVpTaHpLVHNLZlRzS2JuUXVjSEp2ZEc5MGVYQmxMbUZ5WldFZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsUnlhV0Z1WjJ4bE9pQXVZWEpsWVNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEVGeVpXRW9LUzRpS1N3Z2RHaHBjeTVuWlhSQmNtVmhLQ2s3Q24wN0NtNTBMbkJ5YjNSdmRIbHdaUzVpWVhKNVkyOXZjbVJHY205dFVHOXBiblFnUFNCbWRXNWpkR2x2YmloekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVVjbWxoYm1kc1pUb2dMbUpoY25samIyOXlaRVp5YjIxUWIybHVkQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZGxkRUpoY25samIyOXlaQ2dwTGlJcExDQjBhR2x6TG1kbGRFSmhjbmxqYjI5eVpDaHpMQ0JsS1RzS2ZUc0tiblF1Y0hKdmRHOTBlWEJsTG0xcFpIQnZhVzUwSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZISnBZVzVuYkdVNklDNXRhV1J3YjJsdWRDZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1kbGRFMXBaSEJ2YVc1MEtDa3VJaWtzSUhSb2FYTXVaMlYwVFdsa2NHOXBiblFvY3lrN0NuMDdDbTUwTG5CeWIzUnZkSGx3Wlc1dmNtMWhiQ0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxSeWFXRnVaMnhsT2lBdWJtOXliV0ZzS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwVG05eWJXRnNLQ2t1SWlrc0lIUm9hWE11WjJWMFRtOXliV0ZzS0hNcE93cDlPd3B1ZEM1d2NtOTBiM1I1Y0dVdWNHeGhibVVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VWNtbGhibWRzWlRvZ0xuQnNZVzVsS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwVUd4aGJtVW9LUzRpS1N3Z2RHaHBjeTVuWlhSUWJHRnVaU2h6S1RzS2ZUc0tiblF1WW1GeWVXTnZiM0prUm5KdmJWQnZhVzUwSUQwZ1puVnVZM1JwYjI0b2N5d2daU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWSEpwWVc1bmJHVTZJQzVpWVhKNVkyOXZjbVJHY205dFVHOXBiblFvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNW5aWFJDWVhKNVkyOXZjbVFvS1M0aUtTd2diblF1WjJWMFFtRnllV052YjNKa0tITXNJR1VzSUhRc0lHNHNJR2twT3dwOU93cHVkQzV1YjNKdFlXd2dQU0JtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVVY21saGJtZHNaVG9nTG01dmNtMWhiQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZGxkRTV2Y20xaGJDZ3BMaUlwTENCdWRDNW5aWFJPYjNKdFlXd29jeXdnWlN3Z2RDd2diaWs3Q24wN0NsaDBMbkJ5YjNSdmRIbHdaUzVsZUhSeVlXTjBRV3hzVUc5cGJuUnpJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VTJoaGNHVTZJQzVsZUhSeVlXTjBRV3hzVUc5cGJuUnpLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElDNWxlSFJ5WVdOMFVHOXBiblJ6S0NrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1bGVIUnlZV04wVUc5cGJuUnpLSE1wT3dwOU93cFlkQzV3Y205MGIzUjVjR1V1WlhoMGNuVmtaU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxOb1lYQmxPaUF1WlhoMGNuVmtaU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQkZlSFJ5ZFdSbFIyVnZiV1YwY25rb0tTQnBibk4wWldGa0xpSXBMQ0J1WlhjZ2JHNG9kR2hwY3l3Z2N5azdDbjA3Q2xoMExuQnliM1J2ZEhsd1pTNXRZV3RsUjJWdmJXVjBjbmtnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VGFHRndaVG9nTG0xaGEyVkhaVzl0WlhSeWVTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCVGFHRndaVWRsYjIxbGRISjVLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJRVJwS0hSb2FYTXNJSE1wT3dwOU93cFlMbkJ5YjNSdmRIbHdaUzVtY205dFFYUjBjbWxpZFhSbElEMGdablZ1WTNScGIyNG9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TWpvZ0xtWnliMjFCZEhSeWFXSjFkR1VvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLQ2t1SWlrc0lIUm9hWE11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoekxDQmxMQ0IwS1RzS2ZUc0tXQzV3Y205MGIzUjVjR1V1WkdsemRHRnVZMlZVYjAxaGJtaGhkSFJoYmlBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pJNklDNWthWE4wWVc1alpWUnZUV0Z1YUdGMGRHRnVLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWJXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5Z3BMaUlwTENCMGFHbHpMbTFoYm1oaGRIUmhia1JwYzNSaGJtTmxWRzhvY3lrN0NuMDdDbGd1Y0hKdmRHOTBlWEJsTG14bGJtZDBhRTFoYm1oaGRIUmhiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNam9nTG14bGJtZDBhRTFoYm1oaGRIUmhiaWdwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtMWhibWhoZEhSaGJreGxibWQwYUNncExpSXBMQ0IwYUdsekxtMWhibWhoZEhSaGJreGxibWQwYUNncE93cDlPd3BOTG5CeWIzUnZkSGx3WlM1elpYUkZkV3hsY2taeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbk5sZEVWMWJHVnlSbkp2YlZKdmRHRjBhVzl1VFdGMGNtbDRLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElFVjFiR1Z5TG5ObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDZ3BJR2x1YzNSbFlXUXVJaWs3Q24wN0NrMHVjSEp2ZEc5MGVYQmxMbk5sZEVWMWJHVnlSbkp2YlZGMVlYUmxjbTVwYjI0Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbFpsWTNSdmNqTTZJQzV6WlhSRmRXeGxja1p5YjIxUmRXRjBaWEp1YVc5dUtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUVWMWJHVnlMbk5sZEVaeWIyMVJkV0YwWlhKdWFXOXVLQ2tnYVc1emRHVmhaQzRpS1RzS2ZUc0tUUzV3Y205MGIzUjVjR1V1WjJWMFVHOXphWFJwYjI1R2NtOXRUV0YwY21sNElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbWRsZEZCdmMybDBhVzl1Um5KdmJVMWhkSEpwZUNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmlncExpSXBMQ0IwYUdsekxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWh6S1RzS2ZUc0tUUzV3Y205MGIzUjVjR1V1WjJWMFUyTmhiR1ZHY205dFRXRjBjbWw0SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xtZGxkRk5qWVd4bFJuSnZiVTFoZEhKcGVDZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG5ObGRFWnliMjFOWVhSeWFYaFRZMkZzWlNncExpSXBMQ0IwYUdsekxuTmxkRVp5YjIxTllYUnlhWGhUWTJGc1pTaHpLVHNLZlRzS1RTNXdjbTkwYjNSNWNHVXVaMlYwUTI5c2RXMXVSbkp2YlUxaGRISnBlQ0E5SUdaMWJtTjBhVzl1S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pNNklDNW5aWFJEYjJ4MWJXNUdjbTl0VFdGMGNtbDRLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWMyVjBSbkp2YlUxaGRISnBlRU52YkhWdGJpZ3BMaUlwTENCMGFHbHpMbk5sZEVaeWIyMU5ZWFJ5YVhoRGIyeDFiVzRvWlN3Z2N5azdDbjA3Q2swdWNISnZkRzkwZVhCbExtRndjR3g1VUhKdmFtVmpkR2x2YmlBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pNNklDNWhjSEJzZVZCeWIycGxZM1JwYjI0b0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnTG1Gd2NHeDVUV0YwY21sNE5DZ2diU0FwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtITXBPd3A5T3dwTkxuQnliM1J2ZEhsd1pTNW1jbTl0UVhSMGNtbGlkWFJsSUQwZ1puVnVZM1JwYjI0b2N5d2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG1aeWIyMUJkSFJ5YVdKMWRHVW9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtDa3VJaWtzSUhSb2FYTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h6TENCbExDQjBLVHNLZlRzS1RTNXdjbTkwYjNSNWNHVXVaR2x6ZEdGdVkyVlViMDFoYm1oaGRIUmhiaUE5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjak02SUM1a2FYTjBZVzVqWlZSdlRXRnVhR0YwZEdGdUtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YldGdWFHRjBkR0Z1UkdsemRHRnVZMlZVYnlncExpSXBMQ0IwYUdsekxtMWhibWhoZEhSaGJrUnBjM1JoYm1ObFZHOG9jeWs3Q24wN0NrMHVjSEp2ZEc5MGVYQmxMbXhsYm1kMGFFMWhibWhoZEhSaGJpQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbXhsYm1kMGFFMWhibWhoZEhSaGJpZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG0xaGJtaGhkSFJoYmt4bGJtZDBhQ2dwTGlJcExDQjBhR2x6TG0xaGJtaGhkSFJoYmt4bGJtZDBhQ2dwT3dwOU93cFdaUzV3Y205MGIzUjVjR1V1Wm5KdmJVRjBkSEpwWW5WMFpTQTlJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pRNklDNW1jbTl0UVhSMGNtbGlkWFJsS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2dwTGlJcExDQjBhR2x6TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2N5d2daU3dnZENrN0NuMDdDbFpsTG5CeWIzUnZkSGx3WlM1c1pXNW5kR2hOWVc1b1lYUjBZVzRnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjalE2SUM1c1pXNW5kR2hOWVc1b1lYUjBZVzRvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXRZVzVvWVhSMFlXNU1aVzVuZEdnb0tTNGlLU3dnZEdocGN5NXRZVzVvWVhSMFlXNU1aVzVuZEdnb0tUc0tmVHNLVG1VdWNISnZkRzkwZVhCbExtZGxkRU5vYVd4a1FubE9ZVzFsSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wTTBRNklDNW5aWFJEYUdsc1pFSjVUbUZ0WlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEU5aWFtVmpkRUo1VG1GdFpTZ3BMaUlwTENCMGFHbHpMbWRsZEU5aWFtVmpkRUo1VG1GdFpTaHpLVHNLZlRzS1RtVXVjSEp2ZEc5MGVYQmxMbkpsYm1SbGNrUmxjSFJvSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZERORU9pQXVjbVZ1WkdWeVJHVndkR2dnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElDNXlaVzVrWlhKUGNtUmxjaXdnYVc1emRHVmhaQzRpS1RzS2ZUc0tUbVV1Y0hKdmRHOTBlWEJsTG5SeVlXNXpiR0YwWlNBOUlHWjFibU4wYVc5dUtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazlpYW1WamRETkVPaUF1ZEhKaGJuTnNZWFJsS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJQzUwY21GdWMyeGhkR1ZQYmtGNGFYTW9JR0Y0YVhNc0lHUnBjM1JoYm1ObElDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NTBjbUZ1YzJ4aGRHVlBia0Y0YVhNb1pTd2djeWs3Q24wN0NrNWxMbkJ5YjNSdmRIbHdaUzVuWlhSWGIzSnNaRkp2ZEdGMGFXOXVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UFltcGxZM1F6UkRvZ0xtZGxkRmR2Y214a1VtOTBZWFJwYjI0b0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnVkVoU1JVVXVUMkpxWldOME0wUXVaMlYwVjI5eWJHUlJkV0YwWlhKdWFXOXVLQ0IwWVhKblpYUWdLU0JwYm5OMFpXRmtMaUlwT3dwOU93cE9aUzV3Y205MGIzUjVjR1V1WVhCd2JIbE5ZWFJ5YVhnZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNRelJEb2dMbUZ3Y0d4NVRXRjBjbWw0S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVZWEJ3YkhsTllYUnlhWGcwS0NrdUlpa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLSE1wT3dwOU93cFBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loT1pTNXdjbTkwYjNSNWNHVXNJSHNLSUNBZ0lHVjFiR1Z5VDNKa1pYSTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1F6UkRvZ0xtVjFiR1Z5VDNKa1pYSWdhWE1nYm05M0lDNXliM1JoZEdsdmJpNXZjbVJsY2k0aUtTd2dkR2hwY3k1eWIzUmhkR2x2Ymk1dmNtUmxjanNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazlpYW1WamRETkVPaUF1WlhWc1pYSlBjbVJsY2lCcGN5QnViM2NnTG5KdmRHRjBhVzl1TG05eVpHVnlMaUlwTENCMGFHbHpMbkp2ZEdGMGFXOXVMbTl5WkdWeUlEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2RYTmxVWFZoZEdWeWJtbHZiam9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOME0wUTZJQzUxYzJWUmRXRjBaWEp1YVc5dUlHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGUm9aU0JzYVdKeVlYSjVJRzV2ZHlCMWMyVnpJSEYxWVhSbGNtNXBiMjV6SUdKNUlHUmxabUYxYkhRdUlpazdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZERORU9pQXVkWE5sVVhWaGRHVnlibWx2YmlCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVWFHVWdiR2xpY21GeWVTQnViM2NnZFhObGN5QnhkV0YwWlhKdWFXOXVjeUJpZVNCa1pXWmhkV3gwTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTazdDbk4wTG5CeWIzUnZkSGx3WlM1elpYUkVjbUYzVFc5a1pTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdWemFEb2dMbk5sZEVSeVlYZE5iMlJsS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZHaGxJSEpsYm1SbGNtVnlJRzV2ZHlCaGJIZGhlWE1nWVhOemRXMWxjeUJVU0ZKRlJTNVVjbWxoYm1kc1pYTkVjbUYzVFc5a1pTNGdWSEpoYm5ObWIzSnRJSGx2ZFhJZ1oyVnZiV1YwY25rZ2RtbGhJRUoxWm1abGNrZGxiMjFsZEhKNVZYUnBiSE11ZEc5VWNtbGhibWRzWlhORWNtRjNUVzlrWlNncElHbG1JRzVsWTJWemMyRnllUzRpS1RzS2ZUc0tUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblJwWlhNb2MzUXVjSEp2ZEc5MGVYQmxMQ0I3Q2lBZ0lDQmtjbUYzVFc5a1pUb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TlpYTm9PaUF1WkhKaGQwMXZaR1VnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVkdobElISmxibVJsY21WeUlHNXZkeUJoYkhkaGVYTWdZWE56ZFcxbGN5QlVTRkpGUlM1VWNtbGhibWRzWlhORWNtRjNUVzlrWlM0aUtTd2dSbVE3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWlhOb09pQXVaSEpoZDAxdlpHVWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWR2hsSUhKbGJtUmxjbVZ5SUc1dmR5QmhiSGRoZVhNZ1lYTnpkVzFsY3lCVVNGSkZSUzVVY21saGJtZHNaWE5FY21GM1RXOWtaUzRnVkhKaGJuTm1iM0p0SUhsdmRYSWdaMlZ2YldWMGNua2dkbWxoSUVKMVptWmxja2RsYjIxbGRISjVWWFJwYkhNdWRHOVVjbWxoYm1kc1pYTkVjbUYzVFc5a1pTZ3BJR2xtSUc1bFkyVnpjMkZ5ZVM0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMHBPd3B6Ynk1d2NtOTBiM1I1Y0dVdWFXNXBkRUp2Ym1WeklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVUYTJsdWJtVmtUV1Z6YURvZ2FXNXBkRUp2Ym1WektDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2RYUXVjSEp2ZEc5MGVYQmxMbk5sZEV4bGJuTWdQU0JtZFc1amRHbHZiaWh6TENCbEtTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsQmxjbk53WldOMGFYWmxRMkZ0WlhKaExuTmxkRXhsYm5NZ2FYTWdaR1Z3Y21WallYUmxaQzRnVlhObElDNXpaWFJHYjJOaGJFeGxibWQwYUNCaGJtUWdMbVpwYkcxSFlYVm5aU0JtYjNJZ1lTQndhRzkwYjJkeVlYQm9hV01nYzJWMGRYQXVJaWtzSUdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvZEdocGN5NW1hV3h0UjJGMVoyVWdQU0JsS1N3Z2RHaHBjeTV6WlhSR2IyTmhiRXhsYm1kMGFDaHpLVHNLZlRzS1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUnBaWE1vUW5RdWNISnZkRzkwZVhCbExDQjdDaUFnSUNCdmJteDVVMmhoWkc5M09pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXZG9kRG9nTG05dWJIbFRhR0ZrYjNjZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNRMkZ0WlhKaFJtOTJPaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUR2xuYUhRNklDNXphR0ZrYjNkRFlXMWxjbUZHYjNZZ2FYTWdibTkzSUM1emFHRmtiM2N1WTJGdFpYSmhMbVp2ZGk0aUtTd2dkR2hwY3k1emFHRmtiM2N1WTJGdFpYSmhMbVp2ZGlBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkME5oYldWeVlVeGxablE2SUhzS0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVdkb2REb2dMbk5vWVdSdmQwTmhiV1Z5WVV4bFpuUWdhWE1nYm05M0lDNXphR0ZrYjNjdVkyRnRaWEpoTG14bFpuUXVJaWtzSUhSb2FYTXVjMmhoWkc5M0xtTmhiV1Z5WVM1c1pXWjBJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkc5M1EyRnRaWEpoVW1sbmFIUTZJSHNLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hV2RvZERvZ0xuTm9ZV1J2ZDBOaGJXVnlZVkpwWjJoMElHbHpJRzV2ZHlBdWMyaGhaRzkzTG1OaGJXVnlZUzV5YVdkb2RDNGlLU3dnZEdocGN5NXphR0ZrYjNjdVkyRnRaWEpoTG5KcFoyaDBJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkc5M1EyRnRaWEpoVkc5d09pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbG5hSFE2SUM1emFHRmtiM2REWVcxbGNtRlViM0FnYVhNZ2JtOTNJQzV6YUdGa2IzY3VZMkZ0WlhKaExuUnZjQzRpS1N3Z2RHaHBjeTV6YUdGa2IzY3VZMkZ0WlhKaExuUnZjQ0E5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdSdmQwTmhiV1Z5WVVKdmRIUnZiVG9nZXdvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwWjJoME9pQXVjMmhoWkc5M1EyRnRaWEpoUW05MGRHOXRJR2x6SUc1dmR5QXVjMmhoWkc5M0xtTmhiV1Z5WVM1aWIzUjBiMjB1SWlrc0lIUm9hWE11YzJoaFpHOTNMbU5oYldWeVlTNWliM1IwYjIwZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCemFHRmtiM2REWVcxbGNtRk9aV0Z5T2lCN0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEdsbmFIUTZJQzV6YUdGa2IzZERZVzFsY21GT1pXRnlJR2x6SUc1dmR5QXVjMmhoWkc5M0xtTmhiV1Z5WVM1dVpXRnlMaUlwTENCMGFHbHpMbk5vWVdSdmR5NWpZVzFsY21FdWJtVmhjaUE5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdSdmQwTmhiV1Z5WVVaaGNqb2dld29nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxreHBaMmgwT2lBdWMyaGhaRzkzUTJGdFpYSmhSbUZ5SUdseklHNXZkeUF1YzJoaFpHOTNMbU5oYldWeVlTNW1ZWEl1SWlrc0lIUm9hWE11YzJoaFpHOTNMbU5oYldWeVlTNW1ZWElnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J6YUdGa2IzZERZVzFsY21GV2FYTnBZbXhsT2lCN0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVdkb2REb2dMbk5vWVdSdmQwTmhiV1Z5WVZacGMybGliR1VnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHNWxkeUJVU0ZKRlJTNURZVzFsY21GSVpXeHdaWElvSUd4cFoyaDBMbk5vWVdSdmR5NWpZVzFsY21FZ0tTQnBibk4wWldGa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCemFHRmtiM2RDYVdGek9pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbG5hSFE2SUM1emFHRmtiM2RDYVdGeklHbHpJRzV2ZHlBdWMyaGhaRzkzTG1KcFlYTXVJaWtzSUhSb2FYTXVjMmhoWkc5M0xtSnBZWE1nUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J6YUdGa2IzZEVZWEpyYm1WemN6b2dld29nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbG5hSFE2SUM1emFHRmtiM2RFWVhKcmJtVnpjeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnphR0ZrYjNkTllYQlhhV1IwYURvZ2V3b2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt4cFoyaDBPaUF1YzJoaFpHOTNUV0Z3VjJsa2RHZ2dhWE1nYm05M0lDNXphR0ZrYjNjdWJXRndVMmw2WlM1M2FXUjBhQzRpS1N3Z2RHaHBjeTV6YUdGa2IzY3ViV0Z3VTJsNlpTNTNhV1IwYUNBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkMDFoY0VobGFXZG9kRG9nZXdvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwWjJoME9pQXVjMmhoWkc5M1RXRndTR1ZwWjJoMElHbHpJRzV2ZHlBdWMyaGhaRzkzTG0xaGNGTnBlbVV1YUdWcFoyaDBMaUlwTENCMGFHbHpMbk5vWVdSdmR5NXRZWEJUYVhwbExtaGxhV2RvZENBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlLVHNLVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25ScFpYTW9WV1V1Y0hKdmRHOTBlWEJsTENCN0NpQWdJQ0JzWlc1bmRHZzZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1U2SUM1c1pXNW5kR2dnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJQzVqYjNWdWRDQnBibk4wWldGa0xpSXBMQ0IwYUdsekxtRnljbUY1TG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1pIbHVZVzFwWXpvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrRjBkSEpwWW5WMFpUb2dMbVI1Ym1GdGFXTWdhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElDNTFjMkZuWlNCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG5WellXZGxJRDA5UFNCMWNqc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UVhSMGNtbGlkWFJsT2lBdVpIbHVZVzFwWXlCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQlZjMlVnTG5WellXZGxJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVjMlYwVlhOaFoyVW9kWElwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlNrN0NsVmxMbkJ5YjNSdmRIbHdaUzV6WlhSRWVXNWhiV2xqSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UVhSMGNtbGlkWFJsT2lBdWMyVjBSSGx1WVcxcFl5Z3BJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1F1SUZWelpTQXVjMlYwVlhOaFoyVW9LU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbk5sZEZWellXZGxLSE1nUFQwOUlDRXdJRDhnZFhJZ09pQm9jaWtzSUhSb2FYTTdDbjA3Q2xWbExuQnliM1J2ZEhsd1pTNWpiM0I1U1c1a2FXTmxjMEZ5Y21GNUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVTZJQzVqYjNCNVNXNWthV05sYzBGeWNtRjVLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZTd2dWV1V1Y0hKdmRHOTBlWEJsTG5ObGRFRnljbUY1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUNkV1ptWlhKQmRIUnlhV0oxZEdVNklDNXpaWFJCY25KaGVTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnUW5WbVptVnlSMlZ2YldWMGNua2dMbk5sZEVGMGRISnBZblYwWlNCMGJ5QnlaWEJzWVdObEwzSmxjMmw2WlNCaGRIUnlhV0oxZEdVZ1luVm1abVZ5Y3lJcE93cDlPd3BmWlM1d2NtOTBiM1I1Y0dVdVlXUmtTVzVrWlhnZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNU9pQXVZV1JrU1c1a1pYZ29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1elpYUkpibVJsZUNncExpSXBMQ0IwYUdsekxuTmxkRWx1WkdWNEtITXBPd3A5T3dwZlpTNXdjbTkwYjNSNWNHVXVZV1JrUVhSMGNtbGlkWFJsSUQwZ1puVnVZM1JwYjI0b2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rNklDNWhaR1JCZEhSeWFXSjFkR1VvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXpaWFJCZEhSeWFXSjFkR1VvS1M0aUtTd2dJU2hsSUNZbUlHVXVhWE5DZFdabVpYSkJkSFJ5YVdKMWRHVXBJQ1ltSUNFb1pTQW1KaUJsTG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVcElEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNuazZJQzVoWkdSQmRIUnlhV0oxZEdVb0tTQnViM2NnWlhod1pXTjBjeUFvSUc1aGJXVXNJR0YwZEhKcFluVjBaU0FwTGlJcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTaHpMQ0J1WlhjZ1ZXVW9ZWEpuZFcxbGJuUnpXekZkTENCaGNtZDFiV1Z1ZEhOYk1sMHBLU2tnT2lCeklEMDlQU0FpYVc1a1pYZ2lJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbmt1WVdSa1FYUjBjbWxpZFhSbE9pQlZjMlVnTG5ObGRFbHVaR1Y0S0NrZ1ptOXlJR2x1WkdWNElHRjBkSEpwWW5WMFpTNGlLU3dnZEdocGN5NXpaWFJKYm1SbGVDaGxLU3dnZEdocGN5a2dPaUIwYUdsekxuTmxkRUYwZEhKcFluVjBaU2h6TENCbEtUc0tmVHNLWDJVdWNISnZkRzkwZVhCbExtRmtaRVJ5WVhkRFlXeHNJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rNklDNWhaR1JFY21GM1EyRnNiQ2dwSUc1dklHeHZibWRsY2lCemRYQndiM0owY3lCcGJtUmxlRTltWm5ObGRDNGlLU3dnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG1Ga1pFUnlZWGREWVd4c0tDa2dhWE1nYm05M0lDNWhaR1JIY205MWNDZ3BMaUlwTENCMGFHbHpMbUZrWkVkeWIzVndLSE1zSUdVcE93cDlPd3BmWlM1d2NtOTBiM1I1Y0dVdVkyeGxZWEpFY21GM1EyRnNiSE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbms2SUM1amJHVmhja1J5WVhkRFlXeHNjeWdwSUdseklHNXZkeUF1WTJ4bFlYSkhjbTkxY0hNb0tTNGlLU3dnZEdocGN5NWpiR1ZoY2tkeWIzVndjeWdwT3dwOU93cGZaUzV3Y205MGIzUjVjR1V1WTI5dGNIVjBaVTltWm5ObGRITWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNuazZJQzVqYjIxd2RYUmxUMlptYzJWMGN5Z3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NsOWxMbkJ5YjNSdmRIbHdaUzV5WlcxdmRtVkJkSFJ5YVdKMWRHVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVUb2dMbkpsYlc5MlpVRjBkSEpwWW5WMFpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1SbGJHVjBaVUYwZEhKcFluVjBaU2dwTGlJcExDQjBhR2x6TG1SbGJHVjBaVUYwZEhKcFluVjBaU2h6S1RzS2ZUc0tYMlV1Y0hKdmRHOTBlWEJsTG1Gd2NHeDVUV0YwY21sNElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rNklDNWhjSEJzZVUxaGRISnBlQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtRndjR3g1VFdGMGNtbDROQ2dwTGlJcExDQjBhR2x6TG1Gd2NHeDVUV0YwY21sNE5DaHpLVHNLZlRzS1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUnBaWE1vWDJVdWNISnZkRzkwZVhCbExDQjdDaUFnSUNCa2NtRjNZMkZzYkhNNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNuazZJQzVrY21GM1kyRnNiSE1nYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVozSnZkWEJ6TGlJcExDQjBhR2x6TG1keWIzVndjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2IyWm1jMlYwY3pvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNU9pQXViMlptYzJWMGN5Qm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVuY205MWNITXVJaWtzSUhSb2FYTXVaM0p2ZFhCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTazdDaVJ1TG5CeWIzUnZkSGx3WlM1elpYUkVlVzVoYldsaklEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVTVzUwWlhKc1pXRjJaV1JDZFdabVpYSTZJQzV6WlhSRWVXNWhiV2xqS0NrZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDNGdWWE5sSUM1elpYUlZjMkZuWlNncElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWMyVjBWWE5oWjJVb2N5QTlQVDBnSVRBZ1B5QjFjaUE2SUdoeUtTd2dkR2hwY3pzS2ZUc0tKRzR1Y0hKdmRHOTBlWEJsTG5ObGRFRnljbUY1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUpiblJsY214bFlYWmxaRUoxWm1abGNqb2dMbk5sZEVGeWNtRjVJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCQ2RXWm1aWEpIWlc5dFpYUnllU0F1YzJWMFFYUjBjbWxpZFhSbElIUnZJSEpsY0d4aFkyVXZjbVZ6YVhwbElHRjBkSEpwWW5WMFpTQmlkV1ptWlhKeklpazdDbjA3Q214dUxuQnliM1J2ZEhsd1pTNW5aWFJCY25KaGVYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtWNGRISjFaR1ZIWlc5dFpYUnllVG9nTG1kbGRFRnljbUY1Y3lncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q214dUxuQnliM1J2ZEhsd1pTNWhaR1JUYUdGd1pVeHBjM1FnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrVjRkSEoxWkdWSFpXOXRaWFJ5ZVRvZ0xtRmtaRk5vWVhCbFRHbHpkQ2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbXh1TG5CeWIzUnZkSGx3WlM1aFpHUlRhR0Z3WlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVSWGgwY25Wa1pVZGxiMjFsZEhKNU9pQXVZV1JrVTJoaGNHVW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHVieTV3Y205MGIzUjVjR1V1WkdsemNHOXpaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVUyTmxibVU2SUM1a2FYTndiM05sS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLWjI4dWNISnZkRzkwZVhCbExtOXVWWEJrWVhSbElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVZibWxtYjNKdE9pQXViMjVWY0dSaGRHVW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2IySnFaV04wTG05dVFtVm1iM0psVW1WdVpHVnlLQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjenNLZlRzS1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUnBaWE1vWkhRdWNISnZkRzkwZVhCbExDQjdDaUFnSUNCM2NtRndRWEp2ZFc1a09pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUmxjbWxoYkRvZ0xuZHlZWEJCY205MWJtUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwWlhKcFlXdzZJQzUzY21Gd1FYSnZkVzVrSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJRzkyWlhKa2NtRjNPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJsY21saGJEb2dMbTkyWlhKa2NtRjNJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEdWeWFXRnNPaUF1YjNabGNtUnlZWGNnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdkM0poY0ZKSFFqb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRHVnlhV0ZzT2lBdWQzSmhjRkpIUWlCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcExDQnVaWGNnWVdVN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdScGJtYzZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNGlJQ3NnZEdocGN5NTBlWEJsSUNzZ0lqb2dMbk5vWVdScGJtY2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUhSb1pTQmliMjlzWldGdUlDNW1iR0YwVTJoaFpHbHVaeUJwYm5OMFpXRmtMaUlwT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1SWlBcklIUm9hWE11ZEhsd1pTQXJJQ0k2SUM1emFHRmthVzVuSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQjBhR1VnWW05dmJHVmhiaUF1Wm14aGRGTm9ZV1JwYm1jZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1bWJHRjBVMmhoWkdsdVp5QTlJSE1nUFQwOUlHdGpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCemRHVnVZMmxzVFdGemF6b2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGlJZ0t5QjBhR2x6TG5SNWNHVWdLeUFpT2lBdWMzUmxibU5wYkUxaGMyc2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUM1emRHVnVZMmxzUm5WdVkwMWhjMnNnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTV6ZEdWdVkybHNSblZ1WTAxaGMyczdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNGlJQ3NnZEdocGN5NTBlWEJsSUNzZ0lqb2dMbk4wWlc1amFXeE5ZWE5ySUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQXVjM1JsYm1OcGJFWjFibU5OWVhOcklHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWMzUmxibU5wYkVaMWJtTk5ZWE5ySUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnZG1WeWRHVjRWR0Z1WjJWdWRITTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxpSWdLeUIwYUdsekxuUjVjR1VnS3lBaU9pQXVkbVZ5ZEdWNFZHRnVaMlZ1ZEhNZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdUlpQXJJSFJvYVhNdWRIbHdaU0FySUNJNklDNTJaWEowWlhoVVlXNW5aVzUwY3lCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTazdDazlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowYVdWektITnVMbkJ5YjNSdmRIbHdaU3dnZXdvZ0lDQWdaR1Z5YVhaaGRHbDJaWE02SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVRhR0ZrWlhKTllYUmxjbWxoYkRvZ0xtUmxjbWwyWVhScGRtVnpJR2hoY3lCaVpXVnVJRzF2ZG1Wa0lIUnZJQzVsZUhSbGJuTnBiMjV6TG1SbGNtbDJZWFJwZG1WekxpSXBMQ0IwYUdsekxtVjRkR1Z1YzJsdmJuTXVaR1Z5YVhaaGRHbDJaWE03Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzRnVTJoaFpHVnlUV0YwWlhKcFlXdzZJQzVrWlhKcGRtRjBhWFpsY3lCb1lYTWdZbVZsYmlCdGIzWmxaQ0IwYnlBdVpYaDBaVzV6YVc5dWN5NWtaWEpwZG1GMGFYWmxjeTRpS1N3Z2RHaHBjeTVsZUhSbGJuTnBiMjV6TG1SbGNtbDJZWFJwZG1WeklEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBwT3dweFpTNXdjbTkwYjNSNWNHVXVZMnhsWVhKVVlYSm5aWFFnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1amJHVmhjbFJoY21kbGRDZ3BJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1F1SUZWelpTQXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtDa2dZVzVrSUM1amJHVmhjaWdwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBLSE1wTENCMGFHbHpMbU5zWldGeUtHVXNJSFFzSUc0cE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdVlXNXBiV0YwWlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtRnVhVzFoZEdVb0tTQnBjeUJ1YjNjZ0xuTmxkRUZ1YVcxaGRHbHZia3h2YjNBb0tTNGlLU3dnZEdocGN5NXpaWFJCYm1sdFlYUnBiMjVNYjI5d0tITXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVaMlYwUTNWeWNtVnVkRkpsYm1SbGNsUmhjbWRsZENBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1kbGRFTjFjbkpsYm5SU1pXNWtaWEpVWVhKblpYUW9LU0JwY3lCdWIzY2dMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BMaUlwTENCMGFHbHpMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVaMlYwVFdGNFFXNXBjMjkwY205d2VTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtZGxkRTFoZUVGdWFYTnZkSEp2Y0hrb0tTQnBjeUJ1YjNjZ0xtTmhjR0ZpYVd4cGRHbGxjeTVuWlhSTllYaEJibWx6YjNSeWIzQjVLQ2t1SWlrc0lIUm9hWE11WTJGd1lXSnBiR2wwYVdWekxtZGxkRTFoZUVGdWFYTnZkSEp2Y0hrb0tUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExtZGxkRkJ5WldOcGMybHZiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbWRsZEZCeVpXTnBjMmx2YmlncElHbHpJRzV2ZHlBdVkyRndZV0pwYkdsMGFXVnpMbkJ5WldOcGMybHZiaTRpS1N3Z2RHaHBjeTVqWVhCaFltbHNhWFJwWlhNdWNISmxZMmx6YVc5dU93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdWNtVnpaWFJIVEZOMFlYUmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVjbVZ6WlhSSFRGTjBZWFJsS0NrZ2FYTWdibTkzSUM1emRHRjBaUzV5WlhObGRDZ3BMaUlwTENCMGFHbHpMbk4wWVhSbExuSmxjMlYwS0NrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1emRYQndiM0owYzBac2IyRjBWR1Y0ZEhWeVpYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpkWEJ3YjNKMGMwWnNiMkYwVkdWNGRIVnlaWE1vS1NCcGN5QnViM2NnTG1WNGRHVnVjMmx2Ym5NdVoyVjBLQ0FuVDBWVFgzUmxlSFIxY21WZlpteHZZWFFuSUNrdUlpa3NJSFJvYVhNdVpYaDBaVzV6YVc5dWN5NW5aWFFvSWs5RlUxOTBaWGgwZFhKbFgyWnNiMkYwSWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1emRYQndiM0owYzBoaGJHWkdiRzloZEZSbGVIUjFjbVZ6SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1YzNWd2NHOXlkSE5JWVd4bVJteHZZWFJVWlhoMGRYSmxjeWdwSUdseklHNXZkeUF1WlhoMFpXNXphVzl1Y3k1blpYUW9JQ2RQUlZOZmRHVjRkSFZ5WlY5b1lXeG1YMlpzYjJGMEp5QXBMaUlwTENCMGFHbHpMbVY0ZEdWdWMybHZibk11WjJWMEtDSlBSVk5mZEdWNGRIVnlaVjlvWVd4bVgyWnNiMkYwSWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1emRYQndiM0owYzFOMFlXNWtZWEprUkdWeWFYWmhkR2wyWlhNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emRYQndiM0owYzFOMFlXNWtZWEprUkdWeWFYWmhkR2wyWlhNb0tTQnBjeUJ1YjNjZ0xtVjRkR1Z1YzJsdmJuTXVaMlYwS0NBblQwVlRYM04wWVc1a1lYSmtYMlJsY21sMllYUnBkbVZ6SnlBcExpSXBMQ0IwYUdsekxtVjRkR1Z1YzJsdmJuTXVaMlYwS0NKUFJWTmZjM1JoYm1SaGNtUmZaR1Z5YVhaaGRHbDJaWE1pS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5OMWNIQnZjblJ6UTI5dGNISmxjM05sWkZSbGVIUjFjbVZUTTFSRElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWMzVndjRzl5ZEhORGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlZNelZFTW9LU0JwY3lCdWIzY2dMbVY0ZEdWdWMybHZibk11WjJWMEtDQW5WMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzTXpkR01uSUNrdUlpa3NJSFJvYVhNdVpYaDBaVzV6YVc5dWN5NW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl6TTNSaklpazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNXpkWEJ3YjNKMGMwTnZiWEJ5WlhOelpXUlVaWGgwZFhKbFVGWlNWRU1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6ZFhCd2IzSjBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxVRlpTVkVNb0tTQnBjeUJ1YjNjZ0xtVjRkR1Z1YzJsdmJuTXVaMlYwS0NBblYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNCMmNuUmpKeUFwTGlJcExDQjBhR2x6TG1WNGRHVnVjMmx2Ym5NdVoyVjBLQ0pYUlVKSFRGOWpiMjF3Y21WemMyVmtYM1JsZUhSMWNtVmZjSFp5ZEdNaUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTjFjSEJ2Y25SelFteGxibVJOYVc1TllYZ2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpkWEJ3YjNKMGMwSnNaVzVrVFdsdVRXRjRLQ2tnYVhNZ2JtOTNJQzVsZUhSbGJuTnBiMjV6TG1kbGRDZ2dKMFZZVkY5aWJHVnVaRjl0YVc1dFlYZ25JQ2t1SWlrc0lIUm9hWE11WlhoMFpXNXphVzl1Y3k1blpYUW9Ja1ZZVkY5aWJHVnVaRjl0YVc1dFlYZ2lLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk4xY0hCdmNuUnpWbVZ5ZEdWNFZHVjRkSFZ5WlhNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emRYQndiM0owYzFabGNuUmxlRlJsZUhSMWNtVnpLQ2tnYVhNZ2JtOTNJQzVqWVhCaFltbHNhWFJwWlhNdWRtVnlkR1Y0VkdWNGRIVnlaWE11SWlrc0lIUm9hWE11WTJGd1lXSnBiR2wwYVdWekxuWmxjblJsZUZSbGVIUjFjbVZ6T3dwOU93cHhaUzV3Y205MGIzUjVjR1V1YzNWd2NHOXlkSE5KYm5OMFlXNWpaV1JCY25KaGVYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpkWEJ3YjNKMGMwbHVjM1JoYm1ObFpFRnljbUY1Y3lncElHbHpJRzV2ZHlBdVpYaDBaVzV6YVc5dWN5NW5aWFFvSUNkQlRrZE1SVjlwYm5OMFlXNWpaV1JmWVhKeVlYbHpKeUFwTGlJcExDQjBhR2x6TG1WNGRHVnVjMmx2Ym5NdVoyVjBLQ0pCVGtkTVJWOXBibk4wWVc1alpXUmZZWEp5WVhseklpazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNWxibUZpYkdWVFkybHpjMjl5VkdWemRDQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbVZ1WVdKc1pWTmphWE56YjNKVVpYTjBLQ2tnYVhNZ2JtOTNJQzV6WlhSVFkybHpjMjl5VkdWemRDZ3BMaUlwTENCMGFHbHpMbk5sZEZOamFYTnpiM0pVWlhOMEtITXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVhVzVwZEUxaGRHVnlhV0ZzSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1cGJtbDBUV0YwWlhKcFlXd29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1WVdSa1VISmxVR3gxWjJsdUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNWhaR1JRY21WUWJIVm5hVzRvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdVlXUmtVRzl6ZEZCc2RXZHBiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WVdSa1VHOXpkRkJzZFdkcGJpZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzUxY0dSaGRHVlRhR0ZrYjNkTllYQWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMblZ3WkdGMFpWTm9ZV1J2ZDAxaGNDZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzV6WlhSR1lXTmxRM1ZzYkdsdVp5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVjMlYwUm1GalpVTjFiR3hwYm1jb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVZV3hzYjJOVVpYaDBkWEpsVlc1cGRDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVZV3hzYjJOVVpYaDBkWEpsVlc1cGRDZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzV6WlhSVVpYaDBkWEpsSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1elpYUlVaWGgwZFhKbEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk5sZEZSbGVIUjFjbVV5UkNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWMyVjBWR1Y0ZEhWeVpUSkVLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5ObGRGUmxlSFIxY21WRGRXSmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6WlhSVVpYaDBkWEpsUTNWaVpTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVuWlhSQlkzUnBkbVZOYVhCTllYQk1aWFpsYkNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1kbGRFRmpkR2wyWlUxcGNFMWhjRXhsZG1Wc0tDa2dhWE1nYm05M0lDNW5aWFJCWTNScGRtVk5hWEJ0WVhCTVpYWmxiQ2dwTGlJcExDQjBhR2x6TG1kbGRFRmpkR2wyWlUxcGNHMWhjRXhsZG1Wc0tDazdDbjA3Q2s5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGFXVnpLSEZsTG5CeWIzUnZkSGx3WlN3Z2V3b2dJQ0FnYzJoaFpHOTNUV0Z3Ulc1aFlteGxaRG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5vWVdSdmQwMWhjQzVsYm1GaWJHVmtPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNFVnVZV0pzWldRZ2FYTWdibTkzSUM1emFHRmtiM2ROWVhBdVpXNWhZbXhsWkM0aUtTd2dkR2hwY3k1emFHRmtiM2ROWVhBdVpXNWhZbXhsWkNBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkMDFoY0ZSNWNHVTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXphR0ZrYjNkTllYQXVkSGx3WlRzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6YUdGa2IzZE5ZWEJVZVhCbElHbHpJRzV2ZHlBdWMyaGhaRzkzVFdGd0xuUjVjR1V1SWlrc0lIUm9hWE11YzJoaFpHOTNUV0Z3TG5SNWNHVWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnphR0ZrYjNkTllYQkRkV3hzUm1GalpUb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Ob1lXUnZkMDFoY0VOMWJHeEdZV05sSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZObGRDQk5ZWFJsY21saGJDNXphR0ZrYjNkVGFXUmxJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXphR0ZrYjNkTllYQkRkV3hzUm1GalpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlRaWFFnVFdGMFpYSnBZV3d1YzJoaFpHOTNVMmxrWlNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JqYjI1MFpYaDBPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1OdmJuUmxlSFFnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElDNW5aWFJEYjI1MFpYaDBLQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTVuWlhSRGIyNTBaWGgwS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSFp5T2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuWnlJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG5oeUlpa3NJSFJvYVhNdWVISTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdkaGJXMWhTVzV3ZFhRNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaMkZ0YldGSmJuQjFkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJUWlhRZ2RHaGxJR1Z1WTI5a2FXNW5JR1p2Y2lCMFpYaDBkWEpsY3lCMmFXRWdWR1Y0ZEhWeVpTNWxibU52WkdsdVp5QnBibk4wWldGa0xpSXBMQ0FoTVRzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbWRoYlcxaFNXNXdkWFFnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVTJWMElIUm9aU0JsYm1OdlpHbHVaeUJtYjNJZ2RHVjRkSFZ5WlhNZ2RtbGhJRlJsZUhSMWNtVXVaVzVqYjJScGJtY2dhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1oyRnRiV0ZQZFhSd2RYUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WjJGdGJXRlBkWFJ3ZFhRZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1UyVjBJRmRsWWtkTVVtVnVaR1Z5WlhJdWIzVjBjSFYwUlc1amIyUnBibWNnYVc1emRHVmhaQzRpS1N3Z0lURTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVoyRnRiV0ZQZFhSd2RYUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdVMlYwSUZkbFlrZE1VbVZ1WkdWeVpYSXViM1YwY0hWMFJXNWpiMlJwYm1jZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1dmRYUndkWFJGYm1OdlpHbHVaeUE5SUhNZ1BUMDlJQ0V3SUQ4Z1Qya2dPaUJPZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdkRzl1WlUxaGNIQnBibWRYYUdsMFpWQnZhVzUwT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuUnZibVZOWVhCd2FXNW5WMmhwZEdWUWIybHVkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwTENBeE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1ZEc5dVpVMWhjSEJwYm1kWGFHbDBaVkJ2YVc1MElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdkaGJXMWhSbUZqZEc5eU9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbWRoYlcxaFJtRmpkRzl5SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrc0lESTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1bllXMXRZVVpoWTNSdmNpQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU2s3Q2s5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGFXVnpLSGxvTG5CeWIzUnZkSGx3WlN3Z2V3b2dJQ0FnWTNWc2JFWmhZMlU2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXphR0ZrYjNkTllYQXVZM1ZzYkVaaFkyVWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdVMlYwSUUxaGRHVnlhV0ZzTG5Ob1lXUnZkMU5wWkdVZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Ob1lXUnZkMDFoY0M1amRXeHNSbUZqWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVFpYUWdUV0YwWlhKcFlXd3VjMmhoWkc5M1UybGtaU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnlaVzVrWlhKU1pYWmxjbk5sVTJsa1pXUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emFHRmtiM2ROWVhBdWNtVnVaR1Z5VW1WMlpYSnpaVk5wWkdWa0lHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGTmxkQ0JOWVhSbGNtbGhiQzV6YUdGa2IzZFRhV1JsSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6YUdGa2IzZE5ZWEF1Y21WdVpHVnlVbVYyWlhKelpWTnBaR1ZrSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZObGRDQk5ZWFJsY21saGJDNXphR0ZrYjNkVGFXUmxJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lISmxibVJsY2xOcGJtZHNaVk5wWkdWa09pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1YzJoaFpHOTNUV0Z3TG5KbGJtUmxjbE5wYm1kc1pWTnBaR1ZrSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZObGRDQk5ZWFJsY21saGJDNXphR0ZrYjNkVGFXUmxJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXphR0ZrYjNkTllYQXVjbVZ1WkdWeVUybHVaMnhsVTJsa1pXUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdVMlYwSUUxaGRHVnlhV0ZzTG5Ob1lXUnZkMU5wWkdVZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMHBPd3BtZFc1amRHbHZiaUJSTUNoekxDQmxMQ0IwS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRU4xWW1Vb0lIZHBaSFJvTENCb1pXbG5hSFFzSUc5d2RHbHZibk1nS1NCcGN5QnViM2NnVjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMEtDQnphWHBsTENCdmNIUnBiMjV6SUNrdUlpa3NJRzVsZHlCcWN5aHpMQ0IwS1RzS2ZRcFBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loQmRDNXdjbTkwYjNSNWNHVXNJSHNLSUNBZ0lIZHlZWEJUT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzUzY21Gd1V5QnBjeUJ1YjNjZ0xuUmxlSFIxY21VdWQzSmhjRk11SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzUzY21Gd1V6c0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVkM0poY0ZNZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG5keVlYQlRMaUlwTENCMGFHbHpMblJsZUhSMWNtVXVkM0poY0ZNZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCM2NtRndWRG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVkM0poY0ZRZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG5keVlYQlVMaUlwTENCMGFHbHpMblJsZUhSMWNtVXVkM0poY0ZRN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xuZHlZWEJVSUdseklHNXZkeUF1ZEdWNGRIVnlaUzUzY21Gd1ZDNGlLU3dnZEdocGN5NTBaWGgwZFhKbExuZHlZWEJVSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYldGblJtbHNkR1Z5T2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzV0WVdkR2FXeDBaWElnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbTFoWjBacGJIUmxjaTRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbTFoWjBacGJIUmxjanNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1YldGblJtbHNkR1Z5SUdseklHNXZkeUF1ZEdWNGRIVnlaUzV0WVdkR2FXeDBaWEl1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzV0WVdkR2FXeDBaWElnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J0YVc1R2FXeDBaWEk2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbTFwYmtacGJIUmxjaUJwY3lCdWIzY2dMblJsZUhSMWNtVXViV2x1Um1sc2RHVnlMaUlwTENCMGFHbHpMblJsZUhSMWNtVXViV2x1Um1sc2RHVnlPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzV0YVc1R2FXeDBaWElnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbTFwYmtacGJIUmxjaTRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbTFwYmtacGJIUmxjaUE5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJR0Z1YVhOdmRISnZjSGs2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbUZ1YVhOdmRISnZjSGtnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbUZ1YVhOdmRISnZjSGt1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzVoYm1semIzUnliM0I1T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1aGJtbHpiM1J5YjNCNUlHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1aGJtbHpiM1J5YjNCNUxpSXBMQ0IwYUdsekxuUmxlSFIxY21VdVlXNXBjMjkwY205d2VTQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHOW1abk5sZERvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1YjJabWMyVjBJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNXZabVp6WlhRdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1dlptWnpaWFE3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG05bVpuTmxkQ0JwY3lCdWIzY2dMblJsZUhSMWNtVXViMlptYzJWMExpSXBMQ0IwYUdsekxuUmxlSFIxY21VdWIyWm1jMlYwSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnY21Wd1pXRjBPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNXlaWEJsWVhRZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG5KbGNHVmhkQzRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbkpsY0dWaGREc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVjbVZ3WldGMElHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1eVpYQmxZWFF1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzV5WlhCbFlYUWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQm1iM0p0WVhRNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG1admNtMWhkQ0JwY3lCdWIzY2dMblJsZUhSMWNtVXVabTl5YldGMExpSXBMQ0IwYUdsekxuUmxlSFIxY21VdVptOXliV0YwT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1bWIzSnRZWFFnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbVp2Y20xaGRDNGlLU3dnZEdocGN5NTBaWGgwZFhKbExtWnZjbTFoZENBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhSNWNHVTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xuUjVjR1VnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMblI1Y0dVdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1MGVYQmxPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzUwZVhCbElHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1MGVYQmxMaUlwTENCMGFHbHpMblJsZUhSMWNtVXVkSGx3WlNBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdkbGJtVnlZWFJsVFdsd2JXRndjem9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1blpXNWxjbUYwWlUxcGNHMWhjSE11SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzVuWlc1bGNtRjBaVTFwY0cxaGNITTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbWRsYm1WeVlYUmxUV2x3YldGd2N5QnBjeUJ1YjNjZ0xuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6TGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wcE93cGFZUzV3Y205MGIzUjVjR1V1Ykc5aFpDQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UVhWa2FXODZJQzVzYjJGa0lHaGhjeUJpWldWdUlHUmxjSEpsWTJGMFpXUXVJRlZ6WlNCVVNGSkZSUzVCZFdScGIweHZZV1JsY2lCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnYkdWMElHVWdQU0IwYUdsek93b2dJQ0FnY21WMGRYSnVJRzVsZHlCcmFDZ3BMbXh2WVdRb2N5d2dablZ1WTNScGIyNG9iaWtnZXdvZ0lDQWdJQ0FnSUdVdWMyVjBRblZtWm1WeUtHNHBPd29nSUNBZ2ZTa3NJSFJvYVhNN0NuMDdDbkZvTG5CeWIzUnZkSGx3WlM1blpYUkVZWFJoSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1QmRXUnBiMEZ1WVd4NWMyVnlPaUF1WjJWMFJHRjBZU2dwSUdseklHNXZkeUF1WjJWMFJuSmxjWFZsYm1ONVJHRjBZU2dwTGlJcExDQjBhR2x6TG1kbGRFWnlaWEYxWlc1amVVUmhkR0VvS1RzS2ZUc0tKSE11Y0hKdmRHOTBlWEJsTG5Wd1pHRjBaVU4xWW1WTllYQWdQU0JtZFc1amRHbHZiaWh6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1RGRXSmxRMkZ0WlhKaE9pQXVkWEJrWVhSbFEzVmlaVTFoY0NncElHbHpJRzV2ZHlBdWRYQmtZWFJsS0NrdUlpa3NJSFJvYVhNdWRYQmtZWFJsS0hNc0lHVXBPd3A5T3dva2N5NXdjbTkwYjNSNWNHVXVZMnhsWVhJZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNURkV0psUTJGdFpYSmhPaUF1WTJ4bFlYSW9LU0JwY3lCdWIzY2dMbkpsYm1SbGNsUmhjbWRsZEM1amJHVmhjaWdwTGlJcExDQjBhR2x6TG5KbGJtUmxjbFJoY21kbGRDNWpiR1ZoY2loekxDQmxMQ0IwTENCdUtUc0tmVHNLV1c0dVkzSnZjM05QY21sbmFXNGdQU0IyYjJsa0lEQTdDbGx1TG14dllXUlVaWGgwZFhKbElEMGdablZ1WTNScGIyNG9jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYldGblpWVjBhV3h6TG14dllXUlVaWGgwZFhKbElHaGhjeUJpWldWdUlHUmxjSEpsWTJGMFpXUXVJRlZ6WlNCVVNGSkZSUzVVWlhoMGRYSmxURzloWkdWeUtDa2dhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJRUpvT3dvZ0lDQWdhUzV6WlhSRGNtOXpjMDl5YVdkcGJpaDBhR2x6TG1OeWIzTnpUM0pwWjJsdUtUc0tJQ0FnSUd4bGRDQnlJRDBnYVM1c2IyRmtLSE1zSUhRc0lIWnZhV1FnTUN3Z2JpazdDaUFnSUNCeVpYUjFjbTRnWlNBbUppQW9jaTV0WVhCd2FXNW5JRDBnWlNrc0lISTdDbjA3Q2xsdUxteHZZV1JVWlhoMGRYSmxRM1ZpWlNBOUlHWjFibU4wYVc5dUtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVTVzFoWjJWVmRHbHNjeTVzYjJGa1ZHVjRkSFZ5WlVOMVltVWdhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElGUklVa1ZGTGtOMVltVlVaWGgwZFhKbFRHOWhaR1Z5S0NrZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUd4bGRDQnBJRDBnYm1WM0lFWm9Pd29nSUNBZ2FTNXpaWFJEY205emMwOXlhV2RwYmloMGFHbHpMbU55YjNOelQzSnBaMmx1S1RzS0lDQWdJR3hsZENCeUlEMGdhUzVzYjJGa0tITXNJSFFzSUhadmFXUWdNQ3dnYmlrN0NpQWdJQ0J5WlhSMWNtNGdaU0FtSmlBb2NpNXRZWEJ3YVc1bklEMGdaU2tzSUhJN0NuMDdDbGx1TG14dllXUkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1U1cxaFoyVlZkR2xzY3k1c2IyRmtRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUZSSVVrVkZMa1JFVTB4dllXUmxjaUJwYm5OMFpXRmtMaUlwT3dwOU93cFpiaTVzYjJGa1EyOXRjSEpsYzNObFpGUmxlSFIxY21WRGRXSmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1SmJXRm5aVlYwYVd4ekxteHZZV1JEYjIxd2NtVnpjMlZrVkdWNGRIVnlaVU4xWW1VZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRlJJVWtWRkxrUkVVMHh2WVdSbGNpQnBibk4wWldGa0xpSXBPd3A5T3dwbWRXNWpkR2x2YmlCTE1DZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa05oYm5aaGMxSmxibVJsY21WeUlHaGhjeUJpWldWdUlISmxiVzkyWldRaUtUc0tmUXBtZFc1amRHbHZiaUJsZGlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrcFRUMDVNYjJGa1pYSWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlFwMllYSWdkSFlnUFNCN0NpQWdJQ0JqY21WaGRHVk5kV3gwYVUxaGRHVnlhV0ZzVDJKcVpXTjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVRZMlZ1WlZWMGFXeHpJR2hoY3lCaVpXVnVJRzF2ZG1Wa0lIUnZJQzlsZUdGdGNHeGxjeTlxYzIwdmRYUnBiSE12VTJObGJtVlZkR2xzY3k1cWN5SXBPd29nSUNBZ2ZTd0tJQ0FnSUdSbGRHRmphRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVMk5sYm1WVmRHbHNjeUJvWVhNZ1ltVmxiaUJ0YjNabFpDQjBieUF2WlhoaGJYQnNaWE12YW5OdEwzVjBhV3h6TDFOalpXNWxWWFJwYkhNdWFuTWlLVHNLSUNBZ0lIMHNDaUFnSUNCaGRIUmhZMmc2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbE5qWlc1bFZYUnBiSE1nYUdGeklHSmxaVzRnYlc5MlpXUWdkRzhnTDJWNFlXMXdiR1Z6TDJwemJTOTFkR2xzY3k5VFkyVnVaVlYwYVd4ekxtcHpJaWs3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUc1MktDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUR1Z1YzBac1lYSmxJR2hoY3lCaVpXVnVJRzF2ZG1Wa0lIUnZJQzlsZUdGdGNHeGxjeTlxYzIwdmIySnFaV04wY3k5TVpXNXpabXhoY21VdWFuTWlLVHNLZlFwbWRXNWpkR2x2YmlCcGRpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFZWEpoYldWMGNtbGpSMlZ2YldWMGNua2dhR0Z6SUdKbFpXNGdiVzkyWldRZ2RHOGdMMlY0WVcxd2JHVnpMMnB6YlM5blpXOXRaWFJ5YVdWekwxQmhjbUZ0WlhSeWFXTkhaVzl0WlhSeWVTNXFjeUlwTENCdVpYY2dYMlU3Q24wS1puVnVZM1JwYjI0Z2NuWW9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWR1Y0ZEVkbGIyMWxkSEo1SUdoaGN5QmlaV1Z1SUcxdmRtVmtJSFJ2SUM5bGVHRnRjR3hsY3k5cWMyMHZaMlZ2YldWMGNtbGxjeTlVWlhoMFIyVnZiV1YwY25rdWFuTWlLU3dnYm1WM0lGOWxPd3A5Q21aMWJtTjBhVzl1SUhOMktDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVSbTl1ZEV4dllXUmxjaUJvWVhNZ1ltVmxiaUJ0YjNabFpDQjBieUF2WlhoaGJYQnNaWE12YW5OdEwyeHZZV1JsY25NdlJtOXVkRXh2WVdSbGNpNXFjeUlwT3dwOUNtWjFibU4wYVc5dUlHOTJLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1Um05dWRDQm9ZWE1nWW1WbGJpQnRiM1psWkNCMGJ5QXZaWGhoYlhCc1pYTXZhbk50TDJ4dllXUmxjbk12Um05dWRFeHZZV1JsY2k1cWN5SXBPd3A5Q21aMWJtTjBhVzl1SUdGMktDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVTVzF0WldScFlYUmxVbVZ1WkdWeVQySnFaV04wSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMEtkSGx3Wlc5bUlGOWZWRWhTUlVWZlJFVldWRTlQVEZOZlh5QThJQ0oxSWlBbUppQmZYMVJJVWtWRlgwUkZWbFJQVDB4VFgxOHVaR2x6Y0dGMFkyaEZkbVZ1ZENodVpYY2dRM1Z6ZEc5dFJYWmxiblFvSW5KbFoybHpkR1Z5SWl3Z2V3b2dJQ0FnWkdWMFlXbHNPaUI3Q2lBZ0lDQWdJQ0FnY21WMmFYTnBiMjQ2SUdOaENpQWdJQ0I5Q24wcEtUc0tkSGx3Wlc5bUlIZHBibVJ2ZHlBOElDSjFJaUFtSmlBb2QybHVaRzkzTGw5ZlZFaFNSVVZmWHlBL0lHTnZibk52YkdVdWQyRnliaWdpVjBGU1RrbE9Sem9nVFhWc2RHbHdiR1VnYVc1emRHRnVZMlZ6SUc5bUlGUm9jbVZsTG1weklHSmxhVzVuSUdsdGNHOXlkR1ZrTGlJcElEb2dkMmx1Wkc5M0xsOWZWRWhTUlVWZlh5QTlJR05oS1RzS1kyOXVjM1FnYlc5a0lEMGdld29nSUNBZ1FVTkZVMFpwYkcxcFkxUnZibVZOWVhCd2FXNW5PaUJWZFN3S0lDQWdJRUZrWkVWeGRXRjBhVzl1T2lCZmFTd0tJQ0FnSUVGa1pFOXdaWEpoZEdsdmJqb2dSblVzQ2lBZ0lDQkJaR1JwZEdsMlpVRnVhVzFoZEdsdmJrSnNaVzVrVFc5a1pUb2djV01zQ2lBZ0lDQkJaR1JwZEdsMlpVSnNaVzVrYVc1bk9pQnViQ3dLSUNBZ0lFRnNjR2hoUm05eWJXRjBPaUJZZFN3S0lDQWdJRUZzZDJGNWMwUmxjSFJvT2lCQmRTd0tJQ0FnSUVGc2QyRjVjMU4wWlc1amFXeEdkVzVqT2lCVlpDd0tJQ0FnSUVGdFltbGxiblJNYVdkb2REb2djV0VzQ2lBZ0lDQkJiV0pwWlc1MFRHbG5hSFJRY205aVpUb2dWbWdzQ2lBZ0lDQkJibWx0WVhScGIyNURiR2x3T2lCTWNpd0tJQ0FnSUVGdWFXMWhkR2x2Ymt4dllXUmxjam9nWTNrc0NpQWdJQ0JCYm1sdFlYUnBiMjVOYVhobGNqb2dKR2dzQ2lBZ0lDQkJibWx0WVhScGIyNVBZbXBsWTNSSGNtOTFjRG9nV1dnc0NpQWdJQ0JCYm1sdFlYUnBiMjVWZEdsc2N6b2dXbVVzQ2lBZ0lDQkJjbU5EZFhKMlpUb2dUV0VzQ2lBZ0lDQkJjbkpoZVVOaGJXVnlZVG9nWjJFc0NpQWdJQ0JCY25KdmQwaGxiSEJsY2pvZ1ZYa3NDaUFnSUNCQmRXUnBiem9nV21Fc0NpQWdJQ0JCZFdScGIwRnVZV3g1YzJWeU9pQnhhQ3dLSUNBZ0lFRjFaR2x2UTI5dWRHVjRkRG9nU0dnc0NpQWdJQ0JCZFdScGIweHBjM1JsYm1WeU9pQnRlU3dLSUNBZ0lFRjFaR2x2VEc5aFpHVnlPaUJyYUN3S0lDQWdJRUY0WlhOSVpXeHdaWEk2SUhKMUxBb2dJQ0FnUVhocGMwaGxiSEJsY2pvZ1dEQXNDaUFnSUNCQ1lXTnJVMmxrWlRvZ2FYUXNDaUFnSUNCQ1lYTnBZMFJsY0hSb1VHRmphMmx1WnpvZ1RtUXNDaUFnSUNCQ1lYTnBZMU5vWVdSdmQwMWhjRG9nY1hrc0NpQWdJQ0JDYVc1aGNubFVaWGgwZFhKbFRHOWhaR1Z5T2lCcU1Dd0tJQ0FnSUVKdmJtVTZJRzl2TEFvZ0lDQWdRbTl2YkdWaGJrdGxlV1p5WVcxbFZISmhZMnM2SUZGdUxBb2dJQ0FnUW05MWJtUnBibWRDYjNoSVpXeHdaWEk2SUVvd0xBb2dJQ0FnUW05NE1qb2djV2tzQ2lBZ0lDQkNiM2d6T2lCTWRDd0tJQ0FnSUVKdmVETklaV3h3WlhJNklFSjVMQW9nSUNBZ1FtOTRRblZtWm1WeVIyVnZiV1YwY25rNklIZHVMQW9nSUNBZ1FtOTRSMlZ2YldWMGNuazZJSGR1TEFvZ0lDQWdRbTk0U0dWc2NHVnlPaUJwZFN3S0lDQWdJRUoxWm1abGNrRjBkSEpwWW5WMFpUb2dWV1VzQ2lBZ0lDQkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1gyVXNDaUFnSUNCQ2RXWm1aWEpIWlc5dFpYUnllVXh2WVdSbGNqb2dWV2dzQ2lBZ0lDQkNlWFJsVkhsd1pUb2dTSFVzQ2lBZ0lDQkRZV05vWlRvZ1Rta3NDaUFnSUNCRFlXMWxjbUU2SUVseUxBb2dJQ0FnUTJGdFpYSmhTR1ZzY0dWeU9pQk9lU3dLSUNBZ0lFTmhiblpoYzFKbGJtUmxjbVZ5T2lCTE1Dd0tJQ0FnSUVOaGJuWmhjMVJsZUhSMWNtVTZJRlJvTEFvZ0lDQWdRMkYwYlhWc2JGSnZiVU4xY25abE16b2dkMkVzQ2lBZ0lDQkRhVzVsYjI1VWIyNWxUV0Z3Y0dsdVp6b2dlblVzQ2lBZ0lDQkRhWEpqYkdWQ2RXWm1aWEpIWlc5dFpYUnllVG9nWm5Jc0NpQWdJQ0JEYVhKamJHVkhaVzl0WlhSeWVUb2dabklzQ2lBZ0lDQkRiR0Z0Y0ZSdlJXUm5aVmR5WVhCd2FXNW5PaUIyZEN3S0lDQWdJRU5zYjJOck9pQlhhQ3dLSUNBZ0lFTnZiRzl5T2lCaFpTd0tJQ0FnSUVOdmJHOXlTMlY1Wm5KaGJXVlVjbUZqYXpvZ1FtRXNDaUFnSUNCRGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlRvZ2RtRXNDaUFnSUNCRGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlV4dllXUmxjam9nYUhrc0NpQWdJQ0JEYjI1bFFuVm1abVZ5UjJWdmJXVjBjbms2SUhCeUxBb2dJQ0FnUTI5dVpVZGxiMjFsZEhKNU9pQndjaXdLSUNBZ0lFTjFZbVZEWVcxbGNtRTZJQ1J6TEFvZ0lDQWdRM1ZpWlZKbFpteGxZM1JwYjI1TllYQndhVzVuT2lCQ2FTd0tJQ0FnSUVOMVltVlNaV1p5WVdOMGFXOXVUV0Z3Y0dsdVp6b2dlbWtzQ2lBZ0lDQkRkV0psVkdWNGRIVnlaVG9nYTJrc0NpQWdJQ0JEZFdKbFZHVjRkSFZ5WlV4dllXUmxjam9nUm1nc0NpQWdJQ0JEZFdKbFZWWlNaV1pzWldOMGFXOXVUV0Z3Y0dsdVp6b2dVSElzQ2lBZ0lDQkRkV0psVlZaU1pXWnlZV04wYVc5dVRXRndjR2x1WnpvZ1YzTXNDaUFnSUNCRGRXSnBZMEpsZW1sbGNrTjFjblpsT2lCc2J5d0tJQ0FnSUVOMVltbGpRbVY2YVdWeVEzVnlkbVV6T2lCVFlTd0tJQ0FnSUVOMVltbGpTVzUwWlhKd2IyeGhiblE2SUZCb0xBb2dJQ0FnUTNWc2JFWmhZMlZDWVdOck9pQjBiQ3dLSUNBZ0lFTjFiR3hHWVdObFJuSnZiblE2SUdSMUxBb2dJQ0FnUTNWc2JFWmhZMlZHY205dWRFSmhZMnM2SUZkNUxBb2dJQ0FnUTNWc2JFWmhZMlZPYjI1bE9pQjFkU3dLSUNBZ0lFTjFjblpsT2lCRGRDd0tJQ0FnSUVOMWNuWmxVR0YwYURvZ1FXZ3NDaUFnSUNCRGRYTjBiMjFDYkdWdVpHbHVaem9nY0hVc0NpQWdJQ0JEZFhOMGIyMVViMjVsVFdGd2NHbHVaem9nVDNVc0NpQWdJQ0JEZVd4cGJtUmxja0oxWm1abGNrZGxiMjFsZEhKNU9pQktiaXdLSUNBZ0lFTjViR2x1WkdWeVIyVnZiV1YwY25rNklFcHVMQW9nSUNBZ1EzbHNhVzVrY21sallXdzZJRU41TEFvZ0lDQWdSR0YwWVZSbGVIUjFjbVU2SUhGdUxBb2dJQ0FnUkdGMFlWUmxlSFIxY21VeVJFRnljbUY1T2lCUmN5d0tJQ0FnSUVSaGRHRlVaWGgwZFhKbE0wUTZJRzFoTEFvZ0lDQWdSR0YwWVZSbGVIUjFjbVZNYjJGa1pYSTZJRTVvTEFvZ0lDQWdSR0YwWVZWMGFXeHpPaUJyZVN3S0lDQWdJRVJsWTNKbGJXVnVkRk4wWlc1amFXeFBjRG9nYmpBc0NpQWdJQ0JFWldOeVpXMWxiblJYY21Gd1UzUmxibU5wYkU5d09pQnlNQ3dLSUNBZ0lFUmxabUYxYkhSTWIyRmthVzVuVFdGdVlXZGxjam9nYkhrc0NpQWdJQ0JFWlhCMGFFWnZjbTFoZERvZ1ZtNHNDaUFnSUNCRVpYQjBhRk4wWlc1amFXeEdiM0p0WVhRNklFeHBMQW9nSUNBZ1JHVndkR2hVWlhoMGRYSmxPaUJyY3l3S0lDQWdJRVJwY21WamRHbHZibUZzVEdsbmFIUTZJRmRoTEFvZ0lDQWdSR2x5WldOMGFXOXVZV3hNYVdkb2RFaGxiSEJsY2pvZ1Jua3NDaUFnSUNCRWFYTmpjbVYwWlVsdWRHVnljRzlzWVc1ME9pQkphQ3dLSUNBZ0lFUnZaR1ZqWVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQnRjaXdLSUNBZ0lFUnZaR1ZqWVdobFpISnZia2RsYjIxbGRISjVPaUJ0Y2l3S0lDQWdJRVJ2ZFdKc1pWTnBaR1U2SUVOcExBb2dJQ0FnUkhOMFFXeHdhR0ZHWVdOMGIzSTZJRTExTEFvZ0lDQWdSSE4wUTI5c2IzSkdZV04wYjNJNklIZDFMQW9nSUNBZ1JIbHVZVzFwWTBKMVptWmxja0YwZEhKcFluVjBaVG9nUWpBc0NpQWdJQ0JFZVc1aGJXbGpRMjl3ZVZWellXZGxPaUI1TUN3S0lDQWdJRVI1Ym1GdGFXTkVjbUYzVlhOaFoyVTZJSFZ5TEFvZ0lDQWdSSGx1WVcxcFkxSmxZV1JWYzJGblpUb2diVEFzQ2lBZ0lDQkZaR2RsYzBkbGIyMWxkSEo1T2lCZllTd0tJQ0FnSUVWa1oyVnpTR1ZzY0dWeU9pQlpNQ3dLSUNBZ0lFVnNiR2x3YzJWRGRYSjJaVG9nVlhJc0NpQWdJQ0JGY1hWaGJFUmxjSFJvT2lCTWRTd0tJQ0FnSUVWeGRXRnNVM1JsYm1OcGJFWjFibU02SUd3d0xBb2dJQ0FnUlhGMWFYSmxZM1JoYm1kMWJHRnlVbVZtYkdWamRHbHZiazFoY0hCcGJtYzZJRVJ6TEFvZ0lDQWdSWEYxYVhKbFkzUmhibWQxYkdGeVVtVm1jbUZqZEdsdmJrMWhjSEJwYm1jNklFWnpMQW9nSUNBZ1JYVnNaWEk2SUZwdUxBb2dJQ0FnUlhabGJuUkVhWE53WVhSamFHVnlPaUJGYml3S0lDQWdJRVY0ZEhKMVpHVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ2JHNHNDaUFnSUNCRmVIUnlkV1JsUjJWdmJXVjBjbms2SUd4dUxBb2dJQ0FnUm1GalpVTnZiRzl5Y3pvZ1ZEQXNDaUFnSUNCR2FXeGxURzloWkdWeU9pQlpkQ3dLSUNBZ0lFWnNZWFJUYUdGa2FXNW5PaUJyWXl3S0lDQWdJRVpzYjJGME1UWkNkV1ptWlhKQmRIUnlhV0oxZEdVNklHNW9MQW9nSUNBZ1JteHZZWFF6TWtGMGRISnBZblYwWlRvZ1Z6QXNDaUFnSUNCR2JHOWhkRE15UW5WbVptVnlRWFIwY21saWRYUmxPaUJrWlN3S0lDQWdJRVpzYjJGME5qUkJkSFJ5YVdKMWRHVTZJSEV3TEFvZ0lDQWdSbXh2WVhRMk5FSjFabVpsY2tGMGRISnBZblYwWlRvZ2FXZ3NDaUFnSUNCR2JHOWhkRlI1Y0dVNklHNXVMQW9nSUNBZ1JtOW5PaUJDY2l3S0lDQWdJRVp2WjBWNGNESTZJRTV5TEFvZ0lDQWdSbTl1ZERvZ2IzWXNDaUFnSUNCR2IyNTBURzloWkdWeU9pQnpkaXdLSUNBZ0lFWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpUb2dVMmdzQ2lBZ0lDQkdjbTl1ZEZOcFpHVTZJRUZwTEFvZ0lDQWdSbkoxYzNSMWJUb2dSSElzQ2lBZ0lDQkhURUoxWm1abGNrRjBkSEpwWW5WMFpUb2dVV2dzQ2lBZ0lDQkhURk5NTVRvZ1h6QXNDaUFnSUNCSFRGTk1Nem9nZUd3c0NpQWdJQ0JIY21WaGRHVnlSR1Z3ZEdnNklGQjFMQW9nSUNBZ1IzSmxZWFJsY2tWeGRXRnNSR1Z3ZEdnNklGSjFMQW9nSUNBZ1IzSmxZWFJsY2tWeGRXRnNVM1JsYm1OcGJFWjFibU02SUdRd0xBb2dJQ0FnUjNKbFlYUmxjbE4wWlc1amFXeEdkVzVqT2lCb01Dd0tJQ0FnSUVkeWFXUklaV3h3WlhJNklHNTFMQW9nSUNBZ1IzSnZkWEE2SUVodUxBb2dJQ0FnU0dGc1prWnNiMkYwVkhsd1pUb2dhMjRzQ2lBZ0lDQklaVzFwYzNCb1pYSmxUR2xuYUhRNklGVmhMQW9nSUNBZ1NHVnRhWE53YUdWeVpVeHBaMmgwU0dWc2NHVnlPaUJKZVN3S0lDQWdJRWhsYldsemNHaGxjbVZNYVdkb2RGQnliMkpsT2lCSGFDd0tJQ0FnSUVsamIzTmhhR1ZrY205dVFuVm1abVZ5UjJWdmJXVjBjbms2SUY5eUxBb2dJQ0FnU1dOdmMyRm9aV1J5YjI1SFpXOXRaWFJ5ZVRvZ1gzSXNDaUFnSUNCSmJXRm5aVUpwZEcxaGNFeHZZV1JsY2pvZ1QyZ3NDaUFnSUNCSmJXRm5aVXh2WVdSbGNqb2dVbklzQ2lBZ0lDQkpiV0ZuWlZWMGFXeHpPaUJaYml3S0lDQWdJRWx0YldWa2FXRjBaVkpsYm1SbGNrOWlhbVZqZERvZ1lYWXNDaUFnSUNCSmJtTnlaVzFsYm5SVGRHVnVZMmxzVDNBNklIUXdMQW9nSUNBZ1NXNWpjbVZ0Wlc1MFYzSmhjRk4wWlc1amFXeFBjRG9nYVRBc0NpQWdJQ0JKYm5OMFlXNWpaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVTZJRmh1TEFvZ0lDQWdTVzV6ZEdGdVkyVmtRblZtWm1WeVIyVnZiV1YwY25rNklGbGhMQW9nSUNBZ1NXNXpkR0Z1WTJWa1NXNTBaWEpzWldGMlpXUkNkV1ptWlhJNklHcG9MQW9nSUNBZ1NXNXpkR0Z1WTJWa1RXVnphRG9nZUdFc0NpQWdJQ0JKYm5ReE5rRjBkSEpwWW5WMFpUb2dTREFzQ2lBZ0lDQkpiblF4TmtKMVptWmxja0YwZEhKcFluVjBaVG9nWldnc0NpQWdJQ0JKYm5Rek1rRjBkSEpwWW5WMFpUb2dSekFzQ2lBZ0lDQkpiblF6TWtKMVptWmxja0YwZEhKcFluVjBaVG9nZEdnc0NpQWdJQ0JKYm5RNFFYUjBjbWxpZFhSbE9pQjZNQ3dLSUNBZ0lFbHVkRGhDZFdabVpYSkJkSFJ5YVdKMWRHVTZJR3BqTEFvZ0lDQWdTVzUwVkhsd1pUb2dSM1VzQ2lBZ0lDQkpiblJsY214bFlYWmxaRUoxWm1abGNqb2dKRzRzQ2lBZ0lDQkpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpUb2dVMjRzQ2lBZ0lDQkpiblJsY25CdmJHRnVkRG9nWTI0c0NpQWdJQ0JKYm5SbGNuQnZiR0YwWlVScGMyTnlaWFJsT2lCNmN5d0tJQ0FnSUVsdWRHVnljRzlzWVhSbFRHbHVaV0Z5T2lCVmN5d0tJQ0FnSUVsdWRHVnljRzlzWVhSbFUyMXZiM1JvT2lCNWJ5d0tJQ0FnSUVsdWRtVnlkRk4wWlc1amFXeFBjRG9nY3pBc0NpQWdJQ0JLVTA5T1RHOWhaR1Z5T2lCbGRpd0tJQ0FnSUV0bFpYQlRkR1Z1WTJsc1QzQTZJSFp2TEFvZ0lDQWdTMlY1Wm5KaGJXVlVjbUZqYXpvZ2VuUXNDaUFnSUNCTVQwUTZJR0pvTEFvZ0lDQWdUR0YwYUdWQ2RXWm1aWEpIWlc5dFpYUnllVG9nVFhJc0NpQWdJQ0JNWVhSb1pVZGxiMjFsZEhKNU9pQk5jaXdLSUNBZ0lFeGhlV1Z5Y3pvZ1NuTXNDaUFnSUNCTVpXNXpSbXhoY21VNklHNTJMQW9nSUNBZ1RHVnpjMFJsY0hSb09pQkRkU3dLSUNBZ0lFeGxjM05GY1hWaGJFUmxjSFJvT2lCbFlTd0tJQ0FnSUV4bGMzTkZjWFZoYkZOMFpXNWphV3hHZFc1ak9pQmpNQ3dLSUNBZ0lFeGxjM05UZEdWdVkybHNSblZ1WXpvZ1lUQXNDaUFnSUNCTWFXZG9kRG9nUW5Rc0NpQWdJQ0JNYVdkb2RGQnliMkpsT2lCSWNpd0tJQ0FnSUV4cGJtVTZJRzl1TEFvZ0lDQWdUR2x1WlRNNklFdG9MQW9nSUNBZ1RHbHVaVUpoYzJsalRXRjBaWEpwWVd3NklHWjBMQW9nSUNBZ1RHbHVaVU4xY25abE9pQlBjaXdLSUNBZ0lFeHBibVZEZFhKMlpUTTZJRVZvTEFvZ0lDQWdUR2x1WlVSaGMyaGxaRTFoZEdWeWFXRnNPaUJHWVN3S0lDQWdJRXhwYm1WTWIyOXdPaUI1WVN3S0lDQWdJRXhwYm1WUWFXVmpaWE02SUhjd0xBb2dJQ0FnVEdsdVpWTmxaMjFsYm5Sek9pQjNkQ3dLSUNBZ0lFeHBibVZUZEhKcGNEb2dZakFzQ2lBZ0lDQk1hVzVsWVhKRmJtTnZaR2x1WnpvZ1RuUXNDaUFnSUNCTWFXNWxZWEpHYVd4MFpYSTZJSFIwTEFvZ0lDQWdUR2x1WldGeVNXNTBaWEp3YjJ4aGJuUTZJRTVoTEFvZ0lDQWdUR2x1WldGeVRXbHdUV0Z3VEdsdVpXRnlSbWxzZEdWeU9pQWtlU3dLSUNBZ0lFeHBibVZoY2sxcGNFMWhjRTVsWVhKbGMzUkdhV3gwWlhJNklGcDVMQW9nSUNBZ1RHbHVaV0Z5VFdsd2JXRndUR2x1WldGeVJtbHNkR1Z5T2lCVmFTd0tJQ0FnSUV4cGJtVmhjazFwY0cxaGNFNWxZWEpsYzNSR2FXeDBaWEk2SUZkakxBb2dJQ0FnVEdsdVpXRnlWRzl1WlUxaGNIQnBibWM2SUU1MUxBb2dJQ0FnVEc5aFpHVnlPaUJpZEN3S0lDQWdJRXh2WVdSbGNsVjBhV3h6T2lCSGN5d0tJQ0FnSUV4dllXUnBibWROWVc1aFoyVnlPaUI2WVN3S0lDQWdJRXh2YjNCUGJtTmxPaUJRWkN3S0lDQWdJRXh2YjNCUWFXNW5VRzl1WnpvZ1JHUXNDaUFnSUNCTWIyOXdVbVZ3WldGME9pQkpaQ3dLSUNBZ0lFeDFiV2x1WVc1alpVRnNjR2hoUm05eWJXRjBPaUJaZFN3S0lDQWdJRXgxYldsdVlXNWpaVVp2Y20xaGREb2dTblVzQ2lBZ0lDQk5UMVZUUlRvZ1Iza3NDaUFnSUNCTllYUmxjbWxoYkRvZ1pIUXNDaUFnSUNCTllYUmxjbWxoYkV4dllXUmxjam9nZW1nc0NpQWdJQ0JOWVhSb09pQk5NQ3dLSUNBZ0lFMWhkR2hWZEdsc2N6b2dUVEFzQ2lBZ0lDQk5ZWFJ5YVhnek9pQnNkQ3dLSUNBZ0lFMWhkSEpwZURRNklIQmxMQW9nSUNBZ1RXRjRSWEYxWVhScGIyNDZJRzlzTEFvZ0lDQWdUV1Z6YURvZ2MzUXNDaUFnSUNCTlpYTm9RbUZ6YVdOTllYUmxjbWxoYkRvZ2FHNHNDaUFnSUNCTlpYTm9SR1Z3ZEdoTllYUmxjbWxoYkRvZ1pXOHNDaUFnSUNCTlpYTm9SR2x6ZEdGdVkyVk5ZWFJsY21saGJEb2dkRzhzQ2lBZ0lDQk5aWE5vUm1GalpVMWhkR1Z5YVdGc09pQkJNQ3dLSUNBZ0lFMWxjMmhNWVcxaVpYSjBUV0YwWlhKcFlXdzZJRWxoTEFvZ0lDQWdUV1Z6YUUxaGRHTmhjRTFoZEdWeWFXRnNPaUJFWVN3S0lDQWdJRTFsYzJoT2IzSnRZV3hOWVhSbGNtbGhiRG9nVUdFc0NpQWdJQ0JOWlhOb1VHaHZibWROWVhSbGNtbGhiRG9nVEdFc0NpQWdJQ0JOWlhOb1VHaDVjMmxqWVd4TllYUmxjbWxoYkRvZ1EyRXNDaUFnSUNCTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJEb2djRzhzQ2lBZ0lDQk5aWE5vVkc5dmJrMWhkR1Z5YVdGc09pQlNZU3dLSUNBZ0lFMXBia1Z4ZFdGMGFXOXVPaUJ6YkN3S0lDQWdJRTFwY25KdmNtVmtVbVZ3WldGMFYzSmhjSEJwYm1jNklFSnpMQW9nSUNBZ1RXbDRUM0JsY21GMGFXOXVPaUJFZFN3S0lDQWdJRTExYkhScFRXRjBaWEpwWVd3NklFTXdMQW9nSUNBZ1RYVnNkR2x3YkhsQ2JHVnVaR2x1WnpvZ2Ntd3NDaUFnSUNCTmRXeDBhWEJzZVU5d1pYSmhkR2x2YmpvZ1ZuTXNDaUFnSUNCT1pXRnlaWE4wUm1sc2RHVnlPaUJ5ZEN3S0lDQWdJRTVsWVhKbGMzUk5hWEJOWVhCTWFXNWxZWEpHYVd4MFpYSTZJRmw1TEFvZ0lDQWdUbVZoY21WemRFMXBjRTFoY0U1bFlYSmxjM1JHYVd4MFpYSTZJRXA1TEFvZ0lDQWdUbVZoY21WemRFMXBjRzFoY0V4cGJtVmhja1pwYkhSbGNqb2dibUVzQ2lBZ0lDQk9aV0Z5WlhOMFRXbHdiV0Z3VG1WaGNtVnpkRVpwYkhSbGNqb2dkR0VzQ2lBZ0lDQk9aWFpsY2tSbGNIUm9PaUJGZFN3S0lDQWdJRTVsZG1WeVUzUmxibU5wYkVaMWJtTTZJRzh3TEFvZ0lDQWdUbTlDYkdWdVpHbHVaem9nZG00c0NpQWdJQ0JPYjBOdmJHOXljem9nVXpBc0NpQWdJQ0JPYjFSdmJtVk5ZWEJ3YVc1bk9pQmZiaXdLSUNBZ0lFNXZjbTFoYkVGdWFXMWhkR2x2YmtKc1pXNWtUVzlrWlRvZ2RXRXNDaUFnSUNCT2IzSnRZV3hDYkdWdVpHbHVaem9nYzNJc0NpQWdJQ0JPYjNSRmNYVmhiRVJsY0hSb09pQkpkU3dLSUNBZ0lFNXZkRVZ4ZFdGc1UzUmxibU5wYkVaMWJtTTZJSFV3TEFvZ0lDQWdUblZ0WW1WeVMyVjVabkpoYldWVWNtRmphem9nUVhJc0NpQWdJQ0JQWW1wbFkzUXpSRG9nVG1Vc0NpQWdJQ0JQWW1wbFkzUk1iMkZrWlhJNklIVjVMQW9nSUNBZ1QySnFaV04wVTNCaFkyVk9iM0p0WVd4TllYQTZJSHBrTEFvZ0lDQWdUMk4wWVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQkphU3dLSUNBZ0lFOWpkR0ZvWldSeWIyNUhaVzl0WlhSeWVUb2dTV2tzQ2lBZ0lDQlBibVZHWVdOMGIzSTZJSGwxTEFvZ0lDQWdUMjVsVFdsdWRYTkVjM1JCYkhCb1lVWmhZM1J2Y2pvZ1luVXNDaUFnSUNCUGJtVk5hVzUxYzBSemRFTnZiRzl5Um1GamRHOXlPaUJUZFN3S0lDQWdJRTl1WlUxcGJuVnpVM0pqUVd4d2FHRkdZV04wYjNJNklGWmpMQW9nSUNBZ1QyNWxUV2x1ZFhOVGNtTkRiMnh2Y2taaFkzUnZjam9nWDNVc0NpQWdJQ0JQY25Sb2IyZHlZWEJvYVdORFlXMWxjbUU2SUVaeUxBb2dJQ0FnVUVOR1UyaGhaRzkzVFdGd09pQklZeXdLSUNBZ0lGQkRSbE52Wm5SVGFHRmtiM2ROWVhBNklHWjFMQW9nSUNBZ1VFMVNSVTFIWlc1bGNtRjBiM0k2SUdGb0xBb2dJQ0FnVUdGeVlXMWxkSEpwWTBkbGIyMWxkSEo1T2lCcGRpd0tJQ0FnSUZCaGNuUnBZMnhsT2lCU01Dd0tJQ0FnSUZCaGNuUnBZMnhsUW1GemFXTk5ZWFJsY21saGJEb2dSREFzQ2lBZ0lDQlFZWEowYVdOc1pWTjVjM1JsYlRvZ1VEQXNDaUFnSUNCUVlYSjBhV05zWlZONWMzUmxiVTFoZEdWeWFXRnNPaUJHTUN3S0lDQWdJRkJoZEdnNklHZHlMQW9nSUNBZ1VHVnljM0JsWTNScGRtVkRZVzFsY21FNklIVjBMQW9nSUNBZ1VHeGhibVU2SUZkMExBb2dJQ0FnVUd4aGJtVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1VHa3NDaUFnSUNCUWJHRnVaVWRsYjIxbGRISjVPaUJRYVN3S0lDQWdJRkJzWVc1bFNHVnNjR1Z5T2lCNmVTd0tJQ0FnSUZCdmFXNTBRMnh2ZFdRNklFd3dMQW9nSUNBZ1VHOXBiblJEYkc5MVpFMWhkR1Z5YVdGc09pQkpNQ3dLSUNBZ0lGQnZhVzUwVEdsbmFIUTZJRWRoTEFvZ0lDQWdVRzlwYm5STWFXZG9kRWhsYkhCbGNqb2dVbmtzQ2lBZ0lDQlFiMmx1ZEhNNklIcHlMQW9nSUNBZ1VHOXBiblJ6VFdGMFpYSnBZV3c2SUdwdUxBb2dJQ0FnVUc5c1lYSkhjbWxrU0dWc2NHVnlPaUJFZVN3S0lDQWdJRkJ2Ykhsb1pXUnliMjVDZFdabVpYSkhaVzl0WlhSeWVUb2dZVzRzQ2lBZ0lDQlFiMng1YUdWa2NtOXVSMlZ2YldWMGNuazZJR0Z1TEFvZ0lDQWdVRzl6YVhScGIyNWhiRUYxWkdsdk9pQjRlU3dLSUNBZ0lGQnliM0JsY25SNVFtbHVaR2x1WnpvZ2EyVXNDaUFnSUNCUWNtOXdaWEowZVUxcGVHVnlPaUJZYUN3S0lDQWdJRkYxWVdSeVlYUnBZMEpsZW1sbGNrTjFjblpsT2lCamJ5d0tJQ0FnSUZGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abE16b2dhRzhzQ2lBZ0lDQlJkV0YwWlhKdWFXOXVPaUJuZEN3S0lDQWdJRkYxWVhSbGNtNXBiMjVMWlhsbWNtRnRaVlJ5WVdOck9pQlhhU3dLSUNBZ0lGRjFZWFJsY201cGIyNU1hVzVsWVhKSmJuUmxjbkJ2YkdGdWREb2dSR2dzQ2lBZ0lDQlNSVlpKVTBsUFRqb2dZMkVzQ2lBZ0lDQlNSMEpCUkdWd2RHaFFZV05yYVc1bk9pQkNaQ3dLSUNBZ0lGSkhRa0ZHYjNKdFlYUTZJR04wTEFvZ0lDQWdVa2RDUVVsdWRHVm5aWEpHYjNKdFlYUTZJR1ZrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYekV3ZURFd1gwWnZjbTFoZERvZ1ptUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk1UQjROVjlHYjNKdFlYUTZJR2hrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYekV3ZURaZlJtOXliV0YwT2lCMVpDd0tJQ0FnSUZKSFFrRmZRVk5VUTE4eE1IZzRYMFp2Y20xaGREb2daR1FzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZNVEo0TVRCZlJtOXliV0YwT2lCd1pDd0tJQ0FnSUZKSFFrRmZRVk5VUTE4eE1uZ3hNbDlHYjNKdFlYUTZJRzFrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYelI0TkY5R2IzSnRZWFE2SUc1a0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpWNE5GOUdiM0p0WVhRNklHbGtMQW9nSUNBZ1VrZENRVjlCVTFSRFh6VjROVjlHYjNKdFlYUTZJSEprTEFvZ0lDQWdVa2RDUVY5QlUxUkRYelo0TlY5R2IzSnRZWFE2SUhOa0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpaNE5sOUdiM0p0WVhRNklHOWtMQW9nSUNBZ1VrZENRVjlCVTFSRFh6aDROVjlHYjNKdFlYUTZJR0ZrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYemg0Tmw5R2IzSnRZWFE2SUd4a0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpoNE9GOUdiM0p0WVhRNklHTmtMQW9nSUNBZ1VrZENRVjlDVUZSRFgwWnZjbTFoZERvZ1oyUXNDaUFnSUNCU1IwSkJYMFZVUXpKZlJVRkRYMFp2Y20xaGREb2daMndzQ2lBZ0lDQlNSMEpCWDFCV1VsUkRYekpDVUZCV01WOUdiM0p0WVhRNklIQnNMQW9nSUNBZ1VrZENRVjlRVmxKVVExODBRbEJRVmpGZlJtOXliV0YwT2lCbWJDd0tJQ0FnSUZKSFFrRmZVek5VUTE5RVdGUXhYMFp2Y20xaGREb2diR3dzQ2lBZ0lDQlNSMEpCWDFNelZFTmZSRmhVTTE5R2IzSnRZWFE2SUdOc0xBb2dJQ0FnVWtkQ1FWOVRNMVJEWDBSWVZEVmZSbTl5YldGME9pQm9iQ3dLSUNBZ0lGSkhRa1p2Y20xaGREb2dSMjRzQ2lBZ0lDQlNSMEpKYm5SbFoyVnlSbTl5YldGME9pQkxkU3dLSUNBZ0lGSkhRbDlGVkVNeFgwWnZjbTFoZERvZ2RHUXNDaUFnSUNCU1IwSmZSVlJETWw5R2IzSnRZWFE2SUcxc0xBb2dJQ0FnVWtkQ1gxQldVbFJEWHpKQ1VGQldNVjlHYjNKdFlYUTZJR1JzTEFvZ0lDQWdVa2RDWDFCV1VsUkRYelJDVUZCV01WOUdiM0p0WVhRNklIVnNMQW9nSUNBZ1VrZENYMU16VkVOZlJGaFVNVjlHYjNKdFlYUTZJR0ZzTEFvZ0lDQWdVa2RHYjNKdFlYUTZJR3AxTEFvZ0lDQWdVa2RKYm5SbFoyVnlSbTl5YldGME9pQlJkU3dLSUNBZ0lGSmhkMU5vWVdSbGNrMWhkR1Z5YVdGc09pQkhhU3dLSUNBZ0lGSmhlVG9nUTI0c0NpQWdJQ0JTWVhsallYTjBaWEk2SUVWNUxBb2dJQ0FnVW1WamRFRnlaV0ZNYVdkb2REb2dXR0VzQ2lBZ0lDQlNaV1JHYjNKdFlYUTZJRnAxTEFvZ0lDQWdVbVZrU1c1MFpXZGxja1p2Y20xaGREb2dKSFVzQ2lBZ0lDQlNaV2x1YUdGeVpGUnZibVZOWVhCd2FXNW5PaUJDZFN3S0lDQWdJRkpsY0dWaGRGZHlZWEJ3YVc1bk9pQk9jeXdLSUNBZ0lGSmxjR3hoWTJWVGRHVnVZMmxzVDNBNklHVXdMQW9nSUNBZ1VtVjJaWEp6WlZOMVluUnlZV04wUlhGMVlYUnBiMjQ2SUdkMUxBb2dJQ0FnVW1sdVowSjFabVpsY2tkbGIyMWxkSEo1T2lCaWNpd0tJQ0FnSUZKcGJtZEhaVzl0WlhSeWVUb2dZbklzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExOHhNSGd4TUY5R2IzSnRZWFE2SUVOa0xBb2dJQ0FnVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mTVRCNE5WOUdiM0p0WVhRNklGUmtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk1UQjRObDlHYjNKdFlYUTZJRVZrTEFvZ0lDQWdVMUpIUWpoZlFVeFFTRUU0WDBGVFZFTmZNVEI0T0Y5R2IzSnRZWFE2SUVGa0xBb2dJQ0FnVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mTVRKNE1UQmZSbTl5YldGME9pQk1aQ3dLSUNBZ0lGTlNSMEk0WDBGTVVFaEJPRjlCVTFSRFh6RXllREV5WDBadmNtMWhkRG9nVW1Rc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTgwZURSZlJtOXliV0YwT2lCNFpDd0tJQ0FnSUZOU1IwSTRYMEZNVUVoQk9GOUJVMVJEWHpWNE5GOUdiM0p0WVhRNklIbGtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk5YZzFYMFp2Y20xaGREb2dkbVFzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExODJlRFZmUm05eWJXRjBPaUJmWkN3S0lDQWdJRk5TUjBJNFgwRk1VRWhCT0Y5QlUxUkRYelo0Tmw5R2IzSnRZWFE2SUUxa0xBb2dJQ0FnVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mT0hnMVgwWnZjbTFoZERvZ1ltUXNDaUFnSUNCVFVrZENPRjlCVEZCSVFUaGZRVk5VUTE4NGVEWmZSbTl5YldGME9pQjNaQ3dLSUNBZ0lGTlNSMEk0WDBGTVVFaEJPRjlCVTFSRFh6aDRPRjlHYjNKdFlYUTZJRk5rTEFvZ0lDQWdVMk5sYm1VNklHNXZMQW9nSUNBZ1UyTmxibVZWZEdsc2N6b2dkSFlzQ2lBZ0lDQlRhR0ZrWlhKRGFIVnVhem9nUm1Vc0NpQWdJQ0JUYUdGa1pYSk1hV0k2SUhGMExBb2dJQ0FnVTJoaFpHVnlUV0YwWlhKcFlXdzZJSE51TEFvZ0lDQWdVMmhoWkc5M1RXRjBaWEpwWVd3NklFRmhMQW9nSUNBZ1UyaGhjR1U2SUZoMExBb2dJQ0FnVTJoaGNHVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1JHa3NDaUFnSUNCVGFHRndaVWRsYjIxbGRISjVPaUJFYVN3S0lDQWdJRk5vWVhCbFVHRjBhRG9nVDNrc0NpQWdJQ0JUYUdGd1pWVjBhV3h6T2lCS2RDd0tJQ0FnSUZOb2IzSjBWSGx3WlRvZ2EzVXNDaUFnSUNCVGEyVnNaWFJ2YmpvZ1lXOHNDaUFnSUNCVGEyVnNaWFJ2YmtobGJIQmxjam9nWlhVc0NpQWdJQ0JUYTJsdWJtVmtUV1Z6YURvZ2MyOHNDaUFnSUNCVGJXOXZkR2hUYUdGa2FXNW5PaUJZZVN3S0lDQWdJRk53YUdWeVpUb2dRVzRzQ2lBZ0lDQlRjR2hsY21WQ2RXWm1aWEpIWlc5dFpYUnllVG9nUm1rc0NpQWdJQ0JUY0dobGNtVkhaVzl0WlhSeWVUb2dSbWtzQ2lBZ0lDQlRjR2hsY21sallXdzZJRUY1TEFvZ0lDQWdVM0JvWlhKcFkyRnNTR0Z5Ylc5dWFXTnpNem9nU21Fc0NpQWdJQ0JUY0d4cGJtVkRkWEoyWlRvZ2RXOHNDaUFnSUNCVGNHOTBUR2xuYUhRNklFaGhMQW9nSUNBZ1UzQnZkRXhwWjJoMFNHVnNjR1Z5T2lCTWVTd0tJQ0FnSUZOd2NtbDBaVG9nY204c0NpQWdJQ0JUY0hKcGRHVk5ZWFJsY21saGJEb2dhVzhzQ2lBZ0lDQlRjbU5CYkhCb1lVWmhZM1J2Y2pvZ1IyTXNDaUFnSUNCVGNtTkJiSEJvWVZOaGRIVnlZWFJsUm1GamRHOXlPaUJVZFN3S0lDQWdJRk55WTBOdmJHOXlSbUZqZEc5eU9pQjJkU3dLSUNBZ0lGTjBZWFJwWTBOdmNIbFZjMkZuWlRvZ2VEQXNDaUFnSUNCVGRHRjBhV05FY21GM1ZYTmhaMlU2SUdoeUxBb2dJQ0FnVTNSaGRHbGpVbVZoWkZWellXZGxPaUJ3TUN3S0lDQWdJRk4wWlhKbGIwTmhiV1Z5WVRvZ1pua3NDaUFnSUNCVGRISmxZVzFEYjNCNVZYTmhaMlU2SUhZd0xBb2dJQ0FnVTNSeVpXRnRSSEpoZDFWellXZGxPaUJtTUN3S0lDQWdJRk4wY21WaGJWSmxZV1JWYzJGblpUb2daekFzQ2lBZ0lDQlRkSEpwYm1kTFpYbG1jbUZ0WlZSeVlXTnJPaUJMYml3S0lDQWdJRk4xWW5SeVlXTjBSWEYxWVhScGIyNDZJRzExTEFvZ0lDQWdVM1ZpZEhKaFkzUnBkbVZDYkdWdVpHbHVaem9nYVd3c0NpQWdJQ0JVVDFWRFNEb2dWbmtzQ2lBZ0lDQlVZVzVuWlc1MFUzQmhZMlZPYjNKdFlXeE5ZWEE2SUVocExBb2dJQ0FnVkdWMGNtRm9aV1J5YjI1Q2RXWm1aWEpIWlc5dFpYUnllVG9nZDNJc0NpQWdJQ0JVWlhSeVlXaGxaSEp2YmtkbGIyMWxkSEo1T2lCM2Npd0tJQ0FnSUZSbGVIUkhaVzl0WlhSeWVUb2djbllzQ2lBZ0lDQlVaWGgwZFhKbE9pQnZkQ3dLSUNBZ0lGUmxlSFIxY21WTWIyRmtaWEk2SUVKb0xBb2dJQ0FnVkc5eWRYTkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1UzSXNDaUFnSUNCVWIzSjFjMGRsYjIxbGRISjVPaUJUY2l3S0lDQWdJRlJ2Y25WelMyNXZkRUoxWm1abGNrZGxiMjFsZEhKNU9pQlVjaXdLSUNBZ0lGUnZjblZ6UzI1dmRFZGxiMjFsZEhKNU9pQlVjaXdLSUNBZ0lGUnlhV0Z1WjJ4bE9pQnVkQ3dLSUNBZ0lGUnlhV0Z1WjJ4bFJtRnVSSEpoZDAxdlpHVTZJRkY1TEFvZ0lDQWdWSEpwWVc1bmJHVlRkSEpwY0VSeVlYZE5iMlJsT2lCcWVTd0tJQ0FnSUZSeWFXRnVaMnhsYzBSeVlYZE5iMlJsT2lCR1pDd0tJQ0FnSUZSMVltVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1JYSXNDaUFnSUNCVWRXSmxSMlZ2YldWMGNuazZJRVZ5TEFvZ0lDQWdWVlpOWVhCd2FXNW5PaUJvWVN3S0lDQWdJRlZwYm5ReE5rRjBkSEpwWW5WMFpUb2dhekFzQ2lBZ0lDQlZhVzUwTVRaQ2RXWm1aWEpCZEhSeWFXSjFkR1U2SUZsekxBb2dJQ0FnVldsdWRETXlRWFIwY21saWRYUmxPaUJXTUN3S0lDQWdJRlZwYm5Rek1rSjFabVpsY2tGMGRISnBZblYwWlRvZ1duTXNDaUFnSUNCVmFXNTBPRUYwZEhKcFluVjBaVG9nVlRBc0NpQWdJQ0JWYVc1ME9FSjFabVpsY2tGMGRISnBZblYwWlRvZ1VXTXNDaUFnSUNCVmFXNTBPRU5zWVcxd1pXUkJkSFJ5YVdKMWRHVTZJRTh3TEFvZ0lDQWdWV2x1ZERoRGJHRnRjR1ZrUW5WbVptVnlRWFIwY21saWRYUmxPaUJMWXl3S0lDQWdJRlZ1YVdadmNtMDZJR2R2TEFvZ0lDQWdWVzVwWm05eWJYTk1hV0k2SUdsbExBb2dJQ0FnVlc1cFptOXliWE5WZEdsc2N6b2dkV1lzQ2lBZ0lDQlZibk5wWjI1bFpFSjVkR1ZVZVhCbE9pQnliaXdLSUNBZ0lGVnVjMmxuYm1Wa1NXNTBNalE0Vkhsd1pUb2dWR2tzQ2lBZ0lDQlZibk5wWjI1bFpFbHVkRlI1Y0dVNklGQnpMQW9nSUNBZ1ZXNXphV2R1WldSVGFHOXlkRFEwTkRSVWVYQmxPaUJXZFN3S0lDQWdJRlZ1YzJsbmJtVmtVMmh2Y25RMU5UVXhWSGx3WlRvZ1YzVXNDaUFnSUNCVmJuTnBaMjVsWkZOb2IzSjBOVFkxVkhsd1pUb2djWFVzQ2lBZ0lDQlZibk5wWjI1bFpGTm9iM0owVkhsd1pUb2dZM0lzQ2lBZ0lDQldVMDFUYUdGa2IzZE5ZWEE2SUdseUxBb2dJQ0FnVm1WamRHOXlNam9nV0N3S0lDQWdJRlpsWTNSdmNqTTZJRTBzQ2lBZ0lDQldaV04wYjNJME9pQldaU3dLSUNBZ0lGWmxZM1J2Y2t0bGVXWnlZVzFsVkhKaFkyczZJRU55TEFvZ0lDQWdWbVZ5ZEdWNE9pQk9NQ3dLSUNBZ0lGWmxjblJsZUVOdmJHOXljem9nUlRBc0NpQWdJQ0JXYVdSbGIxUmxlSFIxY21VNklIZG9MQW9nSUNBZ1YyVmlSMHd4VW1WdVpHVnlaWEk2SUY5b0xBb2dJQ0FnVjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWME9pQnFjeXdLSUNBZ0lGZGxZa2RNVFhWc2RHbHdiR1ZTWlc1a1pYSlVZWEpuWlhSek9pQmFZeXdLSUNBZ0lGZGxZa2RNVFhWc2RHbHpZVzF3YkdWU1pXNWtaWEpVWVhKblpYUTZJRmh6TEFvZ0lDQWdWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJRUYwTEFvZ0lDQWdWMlZpUjB4U1pXNWtaWEpVWVhKblpYUkRkV0psT2lCUk1Dd0tJQ0FnSUZkbFlrZE1VbVZ1WkdWeVpYSTZJSEZsTEFvZ0lDQWdWMlZpUjB4VmRHbHNjem9nUlhnc0NpQWdJQ0JYYVhKbFpuSmhiV1ZIWlc5dFpYUnllVG9nUldFc0NpQWdJQ0JYYVhKbFpuSmhiV1ZJWld4d1pYSTZJRm93TEFvZ0lDQWdWM0poY0VGeWIzVnVaRVZ1WkdsdVp6b2dUM01zQ2lBZ0lDQllTRkpNYjJGa1pYSTZJQ1F3TEFvZ0lDQWdXbVZ5YjBOMWNuWmhkSFZ5WlVWdVpHbHVaem9nVFdrc0NpQWdJQ0JhWlhKdlJtRmpkRzl5T2lCNGRTd0tJQ0FnSUZwbGNtOVRiRzl3WlVWdVpHbHVaem9nWW1rc0NpQWdJQ0JhWlhKdlUzUmxibU5wYkU5d09pQkxlU3dLSUNBZ0lITlNSMEpGYm1OdlpHbHVaem9nVDJrS2ZUc0tablZ1WTNScGIyNGdaMlYwVjJWaVIweEZjbkp2Y2sxbGMzTmhaMlVvS1NCN0NpQWdJQ0J5WlhSMWNtNGdaMlYwUlhKeWIzSk5aWE56WVdkbEtERXBPd3A5Q21aMWJtTjBhVzl1SUdkbGRFVnljbTl5VFdWemMyRm5aU2gyWlhKemFXOXVLU0I3Q2lBZ0lDQjJZWElnYm1GdFpYTWdQU0I3Q2lBZ0lDQWdJQ0FnTVRvZ0lsZGxZa2RNSWl3S0lDQWdJQ0FnSUNBeU9pQWlWMlZpUjB3Z01pSUtJQ0FnSUgwN0NpQWdJQ0IyWVhJZ1kyOXVkR1Y0ZEhNZ1BTQjdDaUFnSUNBZ0lDQWdNVG9nZDJsdVpHOTNMbGRsWWtkTVVtVnVaR1Z5YVc1blEyOXVkR1Y0ZEN3S0lDQWdJQ0FnSUNBeU9pQjNhVzVrYjNjdVYyVmlSMHd5VW1WdVpHVnlhVzVuUTI5dWRHVjRkQW9nSUNBZ2ZUc0tJQ0FnSUhaaGNpQnRaWE56WVdkbElEMGdKMWx2ZFhJZ0pEQWdaRzlsY3lCdWIzUWdjMlZsYlNCMGJ5QnpkWEJ3YjNKMElEeGhJR2h5WldZOUltaDBkSEE2THk5cmFISnZibTl6TG05eVp5OTNaV0puYkM5M2FXdHBMMGRsZEhScGJtZGZZVjlYWldKSFRGOUpiWEJzWlcxbGJuUmhkR2x2YmlJZ2MzUjViR1U5SW1OdmJHOXlPaU13TURBaVBpUXhQQzloUGljN0NpQWdJQ0IyWVhJZ1pXeGxiV1Z1ZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSW1ScGRpSXBPd29nSUNBZ1pXeGxiV1Z1ZEM1cFpDQTlJQ0ozWldKbmJHMWxjM05oWjJVaU93b2dJQ0FnWld4bGJXVnVkQzV6ZEhsc1pTNW1iMjUwUm1GdGFXeDVJRDBnSW0xdmJtOXpjR0ZqWlNJN0NpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExtWnZiblJUYVhwbElEMGdJakV6Y0hnaU93b2dJQ0FnWld4bGJXVnVkQzV6ZEhsc1pTNW1iMjUwVjJWcFoyaDBJRDBnSW01dmNtMWhiQ0k3Q2lBZ0lDQmxiR1Z0Wlc1MExuTjBlV3hsTG5SbGVIUkJiR2xuYmlBOUlDSmpaVzUwWlhJaU93b2dJQ0FnWld4bGJXVnVkQzV6ZEhsc1pTNWlZV05yWjNKdmRXNWtJRDBnSWlObVptWWlPd29nSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzVqYjJ4dmNpQTlJQ0lqTURBd0lqc0tJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVjR0ZrWkdsdVp5QTlJQ0l4TGpWbGJTSTdDaUFnSUNCbGJHVnRaVzUwTG5OMGVXeGxMbmRwWkhSb0lEMGdJalF3TUhCNElqc0tJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXViV0Z5WjJsdUlEMGdJalZsYlNCaGRYUnZJREFpT3dvZ0lDQWdhV1lnS0dOdmJuUmxlSFJ6VzNabGNuTnBiMjVkS1NCN0NpQWdJQ0FnSUNBZ2JXVnpjMkZuWlNBOUlHMWxjM05oWjJVdWNtVndiR0ZqWlNnaUpEQWlMQ0FpWjNKaGNHaHBZM01nWTJGeVpDSXBPd29nSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNCdFpYTnpZV2RsSUQwZ2JXVnpjMkZuWlM1eVpYQnNZV05sS0NJa01DSXNJQ0ppY205M2MyVnlJaWs3Q2lBZ0lDQjlDaUFnSUNCdFpYTnpZV2RsSUQwZ2JXVnpjMkZuWlM1eVpYQnNZV05sS0NJa01TSXNJRzVoYldWelczWmxjbk5wYjI1ZEtUc0tJQ0FnSUdWc1pXMWxiblF1YVc1dVpYSklWRTFNSUQwZ2JXVnpjMkZuWlRzS0lDQWdJSEpsZEhWeWJpQmxiR1Z0Wlc1ME93cDlDbU52Ym5OMElIQnBlR1ZzVW1GMGFXOGdQU0IzYVc1a2IzY3VaR1YyYVdObFVHbDRaV3hTWVhScGJ5QjhmQ0F4TGpBN0NtWjFibU4wYVc5dUlHVjJaVzUwTW5OalpXNWxYM0JwZUdWc0tITmpaVzVsTENCbGRtVnVkQ2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QmpZVzUyWVhNZ0lIMGdQU0J6WTJWdVpTNXpZM0psWlc0N0NpQWdJQ0JqYjI1emRDQnlaV04wSUQwZ1kyRnVkbUZ6TG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BPd29nSUNBZ1kyOXVjM1FnZUNBOUlDaGxkbVZ1ZEM1amJHbGxiblJZSUMwZ2NtVmpkQzVzWldaMEtTQXFJSEJwZUdWc1VtRjBhVzg3Q2lBZ0lDQmpiMjV6ZENCNUlEMGdLSEpsWTNRdWFHVnBaMmgwSUMwZ0tHVjJaVzUwTG1Oc2FXVnVkRmtnTFNCeVpXTjBMblJ2Y0NrcElDb2djR2w0Wld4U1lYUnBienNLSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ2VDd0tJQ0FnSUNBZ0lDQjVDaUFnSUNCZE93cDlDbVoxYm1OMGFXOXVJRWxrWlc1MGFYUjVOSGcwS0NrZ2V3b2dJQ0FnY21WMGRYSnVJRzVsZHlCd1pTZ3BPd3A5Q21aMWJtTjBhVzl1SUdsdVgzTmpaVzVsS0hOalpXNWxMQ0J0YjNWelpWOWxkbVZ1ZENrZ2V3b2dJQ0FnWTI5dWMzUWdXM2dzSUhsZElEMGdaWFpsYm5ReWMyTmxibVZmY0dsNFpXd29jMk5sYm1Vc0lHMXZkWE5sWDJWMlpXNTBLVHNLSUNBZ0lHTnZibk4wSUZ0emVDd2djM2tzSUhOM0xDQnphRjBnUFNCelkyVnVaUzV3YVhobGJHRnlaV0V1ZG1Gc2RXVTdDaUFnSUNCeVpYUjFjbTRnZUNBK1BTQnplQ0FtSmlCNElEd2djM2dnS3lCemR5QW1KaUI1SUQ0OUlITjVJQ1ltSUhrZ1BDQnplU0FySUhOb093cDlDbVoxYm1OMGFXOXVJR0YwZEdGamFGOHpaRjlqWVcxbGNtRW9ZMkZ1ZG1GekxDQnRZV3RwWlY5allXMWxjbUVzSUdOaGJUTmtMQ0J6WTJWdVpTa2dld29nSUNBZ2FXWWdLR05oYlROa0lEMDlQU0IxYm1SbFptbHVaV1FwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQjlDaUFnSUNCamIyNXpkQ0JiZHl3Z2FGMGdQU0J0WVd0cFpWOWpZVzFsY21FdWNtVnpiMngxZEdsdmJpNTJZV3gxWlRzS0lDQWdJR052Ym5OMElHTmhiV1Z5WVNBOUlHNWxkeUIxZENoallXMHpaQzVtYjNZc0lIY2dMeUJvTENCallXMHpaQzV1WldGeUxDQmpZVzB6WkM1bVlYSXBPd29nSUNBZ1kyOXVjM1FnWTJWdWRHVnlJRDBnYm1WM0lFMG9MaTR1WTJGdE0yUXViRzl2YTJGMEtUc0tJQ0FnSUdOaGJXVnlZUzUxY0NBOUlHNWxkeUJOS0M0dUxtTmhiVE5rTG5Wd2RtVmpkRzl5S1RzS0lDQWdJR05oYldWeVlTNXdiM05wZEdsdmJpNXpaWFFvTGk0dVkyRnRNMlF1WlhsbGNHOXphWFJwYjI0cE93b2dJQ0FnWTJGdFpYSmhMbXh2YjJ0QmRDaGpaVzUwWlhJcE93b2dJQ0FnWm5WdVkzUnBiMjRnZFhCa1lYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSFpwWlhjZ1BTQmpZVzFsY21FdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObE93b2dJQ0FnSUNBZ0lHTnZibk4wSUhCeWIycGxZM1JwYjI0Z1BTQmpZVzFsY21FdWNISnZhbVZqZEdsdmJrMWhkSEpwZURzS0lDQWdJQ0FnSUNCamIyNXpkQ0JiZDJsa2RHZ3NJR2hsYVdkb2RGMGdQU0JqWVcwelpDNXlaWE52YkhWMGFXOXVMblpoYkhWbE93b2dJQ0FnSUNBZ0lHTnZibk4wSUZ0NExDQjVMQ0I2WFNBOUlHTmhiV1Z5WVM1d2IzTnBkR2x2YmpzS0lDQWdJQ0FnSUNCallXMWxjbUV1WVhOd1pXTjBJRDBnZDJsa2RHZ2dMeUJvWldsbmFIUTdDaUFnSUNBZ0lDQWdZMkZ0WlhKaExuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJQ0FnSUNCallXMWxjbUV1ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvS1RzS0lDQWdJQ0FnSUNCdFlXdHBaVjlqWVcxbGNtRXVkWEJrWVhSbFgyMWhkSEpwWTJWektIWnBaWGN1Wld4bGJXVnVkSE1zSUhCeWIycGxZM1JwYjI0dVpXeGxiV1Z1ZEhNc0lGc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kQW9nSUNBZ0lDQWdJRjBzSUZzS0lDQWdJQ0FnSUNBZ0lDQWdlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2VTd0tJQ0FnSUNBZ0lDQWdJQ0FnZWdvZ0lDQWdJQ0FnSUYwcE93b2dJQ0FnZlFvZ0lDQWdZMkZ0TTJRdWNtVnpiMngxZEdsdmJpNXZiaWgxY0dSaGRHVXBPd29nSUNBZ1puVnVZM1JwYjI0Z1lXUmtUVzkxYzJWSVlXNWtiR1Z5S0dSdmJVOWlhbVZqZEN3Z1pISmhaeXdnZW05dmJVbHVMQ0I2YjI5dFQzVjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElITjBZWEowUkhKaFoxZ2dQU0J1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0J6ZEdGeWRFUnlZV2RaSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ0YjNWelpWZG9aV1ZzU0dGdVpHeGxjaWhsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1VnUFNCM2FXNWtiM2N1WlhabGJuUWdmSHdnWlRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGcGJsOXpZMlZ1WlNoelkyVnVaU3dnWlNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JrWld4MFlTQTlJRTFoZEdndWMybG5iaWhsTG1SbGJIUmhXU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrWld4MFlTQTlQU0F0TVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VtOXZiVTkxZENncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dSbGJIUmhJRDA5SURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIcHZiMjFKYmlncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVjSEpsZG1WdWRFUmxabUYxYkhRb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdiVzkxYzJWRWIzZHVTR0Z1Wkd4bGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doYVc1ZmMyTmxibVVvYzJObGJtVXNJR1VwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGNuUkVjbUZuV0NBOUlHVXVZMnhwWlc1MFdEc0tJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGNuUkVjbUZuV1NBOUlHVXVZMnhwWlc1MFdUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdGIzVnpaVTF2ZG1WSVlXNWtiR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRnBibDl6WTJWdVpTaHpZMlZ1WlN3Z1pTa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzNSaGNuUkVjbUZuV0NBOVBUMGdiblZzYkNCOGZDQnpkR0Z5ZEVSeVlXZFpJRDA5UFNCdWRXeHNLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGtjbUZuS1NCa2NtRm5LR1V1WTJ4cFpXNTBXQ0F0SUhOMFlYSjBSSEpoWjFnc0lHVXVZMnhwWlc1MFdTQXRJSE4wWVhKMFJISmhaMWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZEVSeVlXZFlJRDBnWlM1amJHbGxiblJZT3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZEVSeVlXZFpJRDBnWlM1amJHbGxiblJaT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzF2ZFhObFZYQklZVzVrYkdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZwYmw5elkyVnVaU2h6WTJWdVpTd2daU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J0YjNWelpVMXZkbVZJWVc1a2JHVnlMbU5oYkd3b2RHaHBjeXdnWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKMFJISmhaMWdnUFNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRVJ5WVdkWklEMGdiblZzYkRzS0lDQWdJQ0FnSUNBZ0lDQWdaUzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JrYjIxUFltcGxZM1F1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpZDJobFpXd2lMQ0J0YjNWelpWZG9aV1ZzU0dGdVpHeGxjaWs3Q2lBZ0lDQWdJQ0FnWkc5dFQySnFaV04wTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW0xdmRYTmxaRzkzYmlJc0lHMXZkWE5sUkc5M2JraGhibVJzWlhJcE93b2dJQ0FnSUNBZ0lHUnZiVTlpYW1WamRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnRiM1Z6WlcxdmRtVWlMQ0J0YjNWelpVMXZkbVZJWVc1a2JHVnlLVHNLSUNBZ0lDQWdJQ0JrYjIxUFltcGxZM1F1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYlc5MWMyVjFjQ0lzSUcxdmRYTmxWWEJJWVc1a2JHVnlLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdSeVlXY29aR1ZzZEdGWUxDQmtaV3gwWVZrcElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCeVlXUlFaWEpRYVhobGJDQTlJRTFoZEdndVVFa2dMeUEwTlRBN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWkdWc2RHRlFhR2tnUFNCeVlXUlFaWEpRYVhobGJDQXFJR1JsYkhSaFdEc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCa1pXeDBZVlJvWlhSaElEMGdjbUZrVUdWeVVHbDRaV3dnS2lCa1pXeDBZVms3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdjRzl6SUQwZ1kyRnRaWEpoTG5CdmMybDBhVzl1TG5OMVlpaGpaVzUwWlhJcE93b2dJQ0FnSUNBZ0lHTnZibk4wSUhKaFpHbDFjeUE5SUhCdmN5NXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQnNaWFFnZEdobGRHRWdQU0JOWVhSb0xtRmpiM01vY0c5ekxub2dMeUJ5WVdScGRYTXBPd29nSUNBZ0lDQWdJR3hsZENCd2FHa2dQU0JOWVhSb0xtRjBZVzR5S0hCdmN5NTVMQ0J3YjNNdWVDazdDaUFnSUNBZ0lDQWdkR2hsZEdFZ1BTQk5ZWFJvTG0xcGJpaE5ZWFJvTG0xaGVDaDBhR1YwWVNBdElHUmxiSFJoVkdobGRHRXNJREFwTENCTllYUm9MbEJKS1RzS0lDQWdJQ0FnSUNCd2FHa2dMVDBnWkdWc2RHRlFhR2s3Q2lBZ0lDQWdJQ0FnY0c5ekxuZ2dQU0J5WVdScGRYTWdLaUJOWVhSb0xuTnBiaWgwYUdWMFlTa2dLaUJOWVhSb0xtTnZjeWh3YUdrcE93b2dJQ0FnSUNBZ0lIQnZjeTU1SUQwZ2NtRmthWFZ6SUNvZ1RXRjBhQzV6YVc0b2RHaGxkR0VwSUNvZ1RXRjBhQzV6YVc0b2NHaHBLVHNLSUNBZ0lDQWdJQ0J3YjNNdWVpQTlJSEpoWkdsMWN5QXFJRTFoZEdndVkyOXpLSFJvWlhSaEtUc0tJQ0FnSUNBZ0lDQmpZVzFsY21FdWNHOXphWFJwYjI0dVlXUmtLR05sYm5SbGNpazdDaUFnSUNBZ0lDQWdZMkZ0WlhKaExteHZiMnRCZENoalpXNTBaWElwT3dvZ0lDQWdJQ0FnSUhWd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VtOXZiVWx1S0NrZ2V3b2dJQ0FnSUNBZ0lHTmhiV1Z5WVM1d2IzTnBkR2x2Ymk1emRXSW9ZMlZ1ZEdWeUtTNXRkV3gwYVhCc2VWTmpZV3hoY2lnd0xqa3BMbUZrWkNoalpXNTBaWElwT3dvZ0lDQWdJQ0FnSUhWd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VtOXZiVTkxZENncElIc0tJQ0FnSUNBZ0lDQmpZVzFsY21FdWNHOXphWFJwYjI0dWMzVmlLR05sYm5SbGNpa3ViWFZzZEdsd2JIbFRZMkZzWVhJb01TNHhLUzVoWkdRb1kyVnVkR1Z5S1RzS0lDQWdJQ0FnSUNCMWNHUmhkR1VvS1RzS0lDQWdJSDBLSUNBZ0lHRmtaRTF2ZFhObFNHRnVaR3hsY2loallXNTJZWE1zSUdSeVlXY3NJSHB2YjIxSmJpd2dlbTl2YlU5MWRDazdDbjBLWm5WdVkzUnBiMjRnYlhWc0tHRXNJR0lwSUhzS0lDQWdJSEpsZEhWeWJpQmlMbU5zYjI1bEtDa3ViWFZzZEdsd2JIa29ZU2s3Q24wS1puVnVZM1JwYjI0Z2IzSjBhRzluY21Gd2FHbGpjSEp2YW1WamRHbHZiaWhzWldaMExDQnlhV2RvZEN3Z1ltOTBkRzl0TENCMGIzQXNJSHB1WldGeUxDQjZabUZ5S1NCN0NpQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJRElnTHlBb2NtbG5hSFFnTFNCc1pXWjBLU3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJRElnTHlBb2RHOXdJQzBnWW05MGRHOXRLU3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQzB5SUM4Z0tIcG1ZWElnTFNCNmJtVmhjaWtzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBdEtISnBaMmgwSUNzZ2JHVm1kQ2tnTHlBb2NtbG5hSFFnTFNCc1pXWjBLU3dLSUNBZ0lDQWdJQ0F0S0hSdmNDQXJJR0p2ZEhSdmJTa2dMeUFvZEc5d0lDMGdZbTkwZEc5dEtTd0tJQ0FnSUNBZ0lDQXRLSHBtWVhJZ0t5QjZibVZoY2lrZ0x5QW9lbVpoY2lBdElIcHVaV0Z5S1N3S0lDQWdJQ0FnSUNBeENpQWdJQ0JkT3dwOUNtWjFibU4wYVc5dUlIQnBlR1ZzWDNOd1lXTmxYMmx1ZG1WeWMyVW9keXdnYUN3Z2JtVmhjaWtnZXdvZ0lDQWdjbVYwZFhKdUlGc0tJQ0FnSUNBZ0lDQXdMalVnS2lCM0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01DNDFJQ29nYUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUc1bFlYSXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TGpVZ0tpQjNMQW9nSUNBZ0lDQWdJREF1TlNBcUlHZ3NDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F4Q2lBZ0lDQmRPd3A5Q21aMWJtTjBhVzl1SUhKbGJHRjBhWFpsWDNOd1lXTmxLQ2tnZXdvZ0lDQWdZMjl1YzNRZ2NtVnNZWFJwZG1VZ1BTQkpaR1Z1ZEdsMGVUUjROQ2dwT3dvZ0lDQWdjbVZzWVhScGRtVXVabkp2YlVGeWNtRjVLRnNLSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lERUtJQ0FnSUYwcE93b2dJQ0FnY21WMGRYSnVJSEpsYkdGMGFYWmxPd3A5Q21Oc1lYTnpJRTFoYTJsbFEyRnRaWEpoSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTUyYVdWM0lEMGdibVYzSUdkdktFbGtaVzUwYVhSNU5IZzBLQ2twT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjSEp2YW1WamRHbHZiaUE5SUc1bGR5Qm5ieWhKWkdWdWRHbDBlVFI0TkNncEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIycGxZM1JwYjI1MmFXVjNJRDBnYm1WM0lHZHZLRWxrWlc1MGFYUjVOSGcwS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y0dsNFpXeGZjM0JoWTJVZ1BTQnVaWGNnWjI4b1NXUmxiblJwZEhrMGVEUW9LU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdhWGhsYkY5emNHRmpaVjlwYm5abGNuTmxJRDBnYm1WM0lHZHZLRWxrWlc1MGFYUjVOSGcwS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y0hKdmFtVmpkR2x2Ym5acFpYZGZhVzUyWlhKelpTQTlJRzVsZHlCbmJ5aEpaR1Z1ZEdsMGVUUjROQ2dwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYkdGMGFYWmxYM053WVdObElEMGdibVYzSUdkdktISmxiR0YwYVhabFgzTndZV05sS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y21Wc1lYUnBkbVZmYVc1MlpYSnpaU0E5SUc1bGR5Qm5ieWh5Wld4aGRHbDJaVjl6Y0dGalpTZ3BMbWx1ZG1WeWRDZ3BLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtTnNhWEJmYzNCaFkyVWdQU0J1WlhjZ1oyOG9TV1JsYm5ScGRIazBlRFFvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmJIVjBhVzl1SUQwZ2JtVjNJR2R2S0c1bGR5QllLQ2twT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaWGxsY0c5emFYUnBiMjRnUFNCdVpYY2daMjhvYm1WM0lFMG9LU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdjbVZ3Y205cVpXTjBhVzl1Y3lBOUlIdDlPd29nSUNBZ2ZRb2dJQ0FnWTJGc1kzVnNZWFJsWDIxaGRISnBZMlZ6S0NrZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUZ0M0xDQm9YU0E5SUhSb2FYTXVjbVZ6YjJ4MWRHbHZiaTUyWVd4MVpUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCdVpXRnlZMnhwY0NBOUlDMHhNRjh3TURBN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3YVhobGJGOXpjR0ZqWlM1MllXeDFaUzVtY205dFFYSnlZWGtvYjNKMGFHOW5jbUZ3YUdsamNISnZhbVZqZEdsdmJpZ3dMQ0IzTENBd0xDQm9MQ0J1WldGeVkyeHBjQ3dnTVRCZk1EQXdLU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdhWGhsYkY5emNHRmpaVjlwYm5abGNuTmxMblpoYkhWbExtWnliMjFCY25KaGVTaHdhWGhsYkY5emNHRmpaVjlwYm5abGNuTmxLSGNzSUdnc0lHNWxZWEpqYkdsd0tTazdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2NISnZhbDkyYVdWM0lEMGdiWFZzS0hSb2FYTXVkbWxsZHk1MllXeDFaU3dnZEdocGN5NXdjbTlxWldOMGFXOXVMblpoYkhWbEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIycGxZM1JwYjI1MmFXVjNMblpoYkhWbElEMGdjSEp2YWw5MmFXVjNPd29nSUNBZ0lDQWdJSFJvYVhNdWNISnZhbVZqZEdsdmJuWnBaWGRmYVc1MlpYSnpaUzUyWVd4MVpTQTlJSEJ5YjJwZmRtbGxkeTVqYkc5dVpTZ3BMbWx1ZG1WeWRDZ3BPd29nSUNBZ0lDQWdJRTlpYW1WamRDNXJaWGx6S0hSb2FYTXVjSEpsY0hKdmFtVmpkR2x2Ym5NcExtWnZja1ZoWTJnb0tHdGxlU2s5UG5zS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1czTndZV05sTENCdFlYSnJaWEp6Y0dGalpWMGdQU0JyWlhrdWMzQnNhWFFvSWl3aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdjbVZ3Y205cVpXTjBhVzl1YzF0clpYbGRMblpoYkhWbElEMGdkR2hwY3k1allXeGpkV3hoZEdWZmNISmxjSEp2YW1WamRHbHZibDl0WVhSeWFYZ29jM0JoWTJVc0lHMWhjbXRsY25Od1lXTmxLVHNLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlY5dFlYUnlhV05sY3loMmFXVjNMQ0J3Y205cVpXTjBhVzl1TENCeVpYTnZiSFYwYVc5dUxDQmxlV1Z3YjNNcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5acFpYY3VkbUZzZFdVdVpuSnZiVUZ5Y21GNUtIWnBaWGNwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjSEp2YW1WamRHbHZiaTUyWVd4MVpTNW1jbTl0UVhKeVlYa29jSEp2YW1WamRHbHZiaWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaWE52YkhWMGFXOXVMblpoYkhWbExtWnliMjFCY25KaGVTaHlaWE52YkhWMGFXOXVLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtVjVaWEJ2YzJsMGFXOXVMblpoYkhWbExtWnliMjFCY25KaGVTaGxlV1Z3YjNNcE93b2dJQ0FnSUNBZ0lIUm9hWE11WTJGc1kzVnNZWFJsWDIxaGRISnBZMlZ6S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdmUW9nSUNBZ1kyeHBjRjkwYjE5emNHRmpaU2h6Y0dGalpTa2dld29nSUNBZ0lDQWdJR2xtSUNoemNHRmpaU0E5UFQwZ0ltUmhkR0VpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CeWIycGxZM1JwYjI1MmFXVjNYMmx1ZG1WeWMyVXVkbUZzZFdVN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHpjR0ZqWlNBOVBUMGdJbkJwZUdWc0lpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdhWGhsYkY5emNHRmpaVjlwYm5abGNuTmxMblpoYkhWbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9jM0JoWTJVZ1BUMDlJQ0p5Wld4aGRHbDJaU0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21Wc1lYUnBkbVZmYVc1MlpYSnpaUzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSE53WVdObElEMDlQU0FpWTJ4cGNDSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMnhwY0Y5emNHRmpaUzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9ZRk53WVdObElDUjdjM0JoWTJWOUlHNXZkQ0J5WldOdloyNXBlbVZrWUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjM0JoWTJWZmRHOWZZMnhwY0NoemNHRmpaU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaHpjR0ZqWlNBOVBUMGdJbVJoZEdFaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQnliMnBsWTNScGIyNTJhV1YzTG5aaGJIVmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYzNCaFkyVWdQVDA5SUNKd2FYaGxiQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dsNFpXeGZjM0JoWTJVdWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoemNHRmpaU0E5UFQwZ0luSmxiR0YwYVhabElpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlaV3hoZEdsMlpWOXpjR0ZqWlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hOd1lXTmxJRDA5UFNBaVkyeHBjQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJ4cGNGOXpjR0ZqWlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvWUZOd1lXTmxJQ1I3YzNCaFkyVjlJRzV2ZENCeVpXTnZaMjVwZW1Wa1lDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWTJGc1kzVnNZWFJsWDNCeVpYQnliMnBsWTNScGIyNWZiV0YwY21sNEtITndZV05sTENCdFlYSnJaWEp6Y0dGalpTa2dld29nSUNBZ0lDQWdJR052Ym5OMElHTndJRDBnZEdocGN5NWpiR2x3WDNSdlgzTndZV05sS0cxaGNtdGxjbk53WVdObEtUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCell5QTlJSFJvYVhNdWMzQmhZMlZmZEc5ZlkyeHBjQ2h6Y0dGalpTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHMTFiQ2h6WXl3Z1kzQXBPd29nSUNBZ2ZRb2dJQ0FnY0hKbGNISnZhbVZqZEdsdmJsOXRZWFJ5YVhnb2MzQmhZMlVzSUcxaGNtdGxjbk53WVdObEtTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2EyVjVJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQnpjR0ZqWlN3S0lDQWdJQ0FnSUNBZ0lDQWdiV0Z5YTJWeWMzQmhZMlVLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJRzFoZEhKcGVGOTFibWxtYjNKdElEMGdkR2hwY3k1d2NtVndjbTlxWldOMGFXOXVjMXRyWlhsZE93b2dJQ0FnSUNBZ0lHbG1JQ2h0WVhSeWFYaGZkVzVwWm05eWJTa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYldGMGNtbDRYM1Z1YVdadmNtMDdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdiV0YwY21sNElEMGdkR2hwY3k1allXeGpkV3hoZEdWZmNISmxjSEp2YW1WamRHbHZibDl0WVhSeWFYZ29jM0JoWTJVc0lHMWhjbXRsY25Od1lXTmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZFc1cFptOXliU0E5SUc1bGR5Qm5ieWh0WVhSeWFYZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkJ5WlhCeWIycGxZM1JwYjI1elcydGxlVjBnUFNCMWJtbG1iM0p0T3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RXNXBabTl5YlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wS1kyOXVjM1FnYzJObGJtVmZZMkZqYUdVZ1BTQjdmVHNLWTI5dWMzUWdjR3h2ZEY5allXTm9aU0E5SUh0OU93cGpiMjV6ZENCVVJWaFVWVkpGWDBGVVRFRlRJRDBnV3dvZ0lDQWdkVzVrWldacGJtVmtDbDA3Q21aMWJtTjBhVzl1SUdGa1pGOXpZMlZ1WlNoelkyVnVaVjlwWkN3Z2RHaHlaV1ZmYzJObGJtVXBJSHNLSUNBZ0lITmpaVzVsWDJOaFkyaGxXM05qWlc1bFgybGtYU0E5SUhSb2NtVmxYM05qWlc1bE93cDlDbVoxYm1OMGFXOXVJR1pwYm1SZmMyTmxibVVvYzJObGJtVmZhV1FwSUhzS0lDQWdJSEpsZEhWeWJpQnpZMlZ1WlY5allXTm9aVnR6WTJWdVpWOXBaRjA3Q24wS1puVnVZM1JwYjI0Z1pHVnNaWFJsWDNOalpXNWxLSE5qWlc1bFgybGtLU0I3Q2lBZ0lDQmpiMjV6ZENCelkyVnVaU0E5SUhOalpXNWxYMk5oWTJobFczTmpaVzVsWDJsa1hUc0tJQ0FnSUdsbUlDZ2hjMk5sYm1VcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0I5Q2lBZ0lDQjNhR2xzWlNoelkyVnVaUzVqYUdsc1pISmxiaTVzWlc1bmRHZ2dQaUF3S1hzS0lDQWdJQ0FnSUNCelkyVnVaUzV5WlcxdmRtVW9jMk5sYm1VdVkyaHBiR1J5Wlc1Yk1GMHBPd29nSUNBZ2ZRb2dJQ0FnWkdWc1pYUmxJSE5qWlc1bFgyTmhZMmhsVzNOalpXNWxYMmxrWFRzS2ZRcG1kVzVqZEdsdmJpQm1hVzVrWDNCc2IzUnpLSEJzYjNSZmRYVnBaSE1wSUhzS0lDQWdJR052Ym5OMElIQnNiM1J6SUQwZ1cxMDdDaUFnSUNCd2JHOTBYM1YxYVdSekxtWnZja1ZoWTJnb0tHbGtLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSEJzYjNRZ1BTQndiRzkwWDJOaFkyaGxXMmxrWFRzS0lDQWdJQ0FnSUNCcFppQW9jR3h2ZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J3Ykc5MGN5NXdkWE5vS0hCc2IzUXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd29nSUNBZ2NtVjBkWEp1SUhCc2IzUnpPd3A5Q21aMWJtTjBhVzl1SUdSbGJHVjBaVjl6WTJWdVpYTW9jMk5sYm1WZmRYVnBaSE1zSUhCc2IzUmZkWFZwWkhNcElIc0tJQ0FnSUhCc2IzUmZkWFZwWkhNdVptOXlSV0ZqYUNnb2NHeHZkRjlwWkNrOVBuc0tJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2NHeHZkRjlqWVdOb1pWdHdiRzkwWDJsa1hUc0tJQ0FnSUgwcE93b2dJQ0FnYzJObGJtVmZkWFZwWkhNdVptOXlSV0ZqYUNnb2MyTmxibVZmYVdRcFBUNTdDaUFnSUNBZ0lDQWdaR1ZzWlhSbFgzTmpaVzVsS0hOalpXNWxYMmxrS1RzS0lDQWdJSDBwT3dwOUNtWjFibU4wYVc5dUlHbHVjMlZ5ZEY5d2JHOTBLSE5qWlc1bFgybGtMQ0J3Ykc5MFgyUmhkR0VwSUhzS0lDQWdJR052Ym5OMElITmpaVzVsSUQwZ1ptbHVaRjl6WTJWdVpTaHpZMlZ1WlY5cFpDazdDaUFnSUNCd2JHOTBYMlJoZEdFdVptOXlSV0ZqYUNnb2NHeHZkQ2s5UG5zS0lDQWdJQ0FnSUNCaFpHUmZjR3h2ZENoelkyVnVaU3dnY0d4dmRDazdDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJrWld4bGRHVmZjR3h2ZEhNb2MyTmxibVZmYVdRc0lIQnNiM1JmZFhWcFpITXBJSHNLSUNBZ0lHTnZibk52YkdVdWJHOW5LR0JrWld4bGRHbHVaeUJ3Ykc5MGN5RTZJQ1I3Y0d4dmRGOTFkV2xrYzMxZ0tUc0tJQ0FnSUdOdmJuTjBJSE5qWlc1bElEMGdabWx1WkY5elkyVnVaU2h6WTJWdVpWOXBaQ2s3Q2lBZ0lDQmpiMjV6ZENCd2JHOTBjeUE5SUdacGJtUmZjR3h2ZEhNb2NHeHZkRjkxZFdsa2N5azdDaUFnSUNCd2JHOTBjeTVtYjNKRllXTm9LQ2h3S1QwK2V3b2dJQ0FnSUNBZ0lITmpaVzVsTG5KbGJXOTJaU2h3S1RzS0lDQWdJQ0FnSUNCa1pXeGxkR1VnY0d4dmRGOWpZV05vWlZ0d1hUc0tJQ0FnSUgwcE93cDlDbVoxYm1OMGFXOXVJR052Ym5abGNuUmZkR1Y0ZEhWeVpTaGtZWFJoS1NCN0NpQWdJQ0JqYjI1emRDQjBaWGdnUFNCamNtVmhkR1ZmZEdWNGRIVnlaU2hrWVhSaEtUc0tJQ0FnSUhSbGVDNXVaV1ZrYzFWd1pHRjBaU0E5SUhSeWRXVTdDaUFnSUNCMFpYZ3ViV2x1Um1sc2RHVnlJRDBnYlc5a1cyUmhkR0V1YldsdVJtbHNkR1Z5WFRzS0lDQWdJSFJsZUM1dFlXZEdhV3gwWlhJZ1BTQnRiMlJiWkdGMFlTNXRZV2RHYVd4MFpYSmRPd29nSUNBZ2RHVjRMbUZ1YVhOdmRISnZjSGtnUFNCa1lYUmhMbUZ1YVhOdmRISnZjSGs3Q2lBZ0lDQjBaWGd1ZDNKaGNGTWdQU0J0YjJSYlpHRjBZUzUzY21Gd1UxMDdDaUFnSUNCcFppQW9aR0YwWVM1emFYcGxMbXhsYm1kMGFDQStJREVwSUhzS0lDQWdJQ0FnSUNCMFpYZ3VkM0poY0ZRZ1BTQnRiMlJiWkdGMFlTNTNjbUZ3VkYwN0NpQWdJQ0I5Q2lBZ0lDQnBaaUFvWkdGMFlTNXphWHBsTG14bGJtZDBhQ0ErSURJcElIc0tJQ0FnSUNBZ0lDQjBaWGd1ZDNKaGNGSWdQU0J0YjJSYlpHRjBZUzUzY21Gd1VsMDdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdkR1Y0T3dwOUNtWjFibU4wYVc5dUlHbHpYM1JvY21WbFgyWnBlR1ZrWDJGeWNtRjVLSFpoYkhWbEtTQjdDaUFnSUNCeVpYUjFjbTRnZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJ0YjJRdVZtVmpkRzl5TWlCOGZDQjJZV3gxWlNCcGJuTjBZVzVqWlc5bUlHMXZaQzVXWldOMGIzSXpJSHg4SUhaaGJIVmxJR2x1YzNSaGJtTmxiMllnYlc5a0xsWmxZM1J2Y2pRZ2ZId2dkbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQnRiMlF1VFdGMGNtbDRORHNLZlFwbWRXNWpkR2x2YmlCMGIxOTFibWxtYjNKdEtHUmhkR0VwSUhzS0lDQWdJR2xtSUNoa1lYUmhMblI1Y0dVZ0lUMDlJSFZ1WkdWbWFXNWxaQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGtZWFJoTG5SNWNHVWdQVDBnSWxOaGJYQnNaWElpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjUyWlhKMFgzUmxlSFIxY21Vb1pHRjBZU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWhnVkhsd1pTQWtlMlJoZEdFdWRIbHdaWDBnYm05MElHdHViM2R1WUNrN0NpQWdJQ0I5Q2lBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGtZWFJoS1NCOGZDQkJjbkpoZVVKMVptWmxjaTVwYzFacFpYY29aR0YwWVNrcElIc0tJQ0FnSUNBZ0lDQnBaaUFvSVdSaGRHRXVaWFpsY25rb0tIZ3BQVDUwZVhCbGIyWWdlQ0E5UFQwZ0ltNTFiV0psY2lJcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJrWVhSaE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWkdGMFlTNXNaVzVuZEdnZ1BUMGdNaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRzF2WkM1V1pXTjBiM0l5S0NrdVpuSnZiVUZ5Y21GNUtHUmhkR0VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aR0YwWVM1c1pXNW5kR2dnUFQwZ015a2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHMXZaQzVXWldOMGIzSXpLQ2t1Wm5KdmJVRnljbUY1S0dSaGRHRXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1pHRjBZUzVzWlc1bmRHZ2dQVDBnTkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUcxdlpDNVdaV04wYjNJMEtDa3Vabkp2YlVGeWNtRjVLR1JoZEdFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWkdGMFlTNXNaVzVuZEdnZ1BUMGdNVFlwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JXRjBJRDBnYm1WM0lHMXZaQzVOWVhSeWFYZzBLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMWhkQzVtY205dFFYSnlZWGtvWkdGMFlTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ0WVhRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlHUmhkR0U3Q24wS1puVnVZM1JwYjI0Z1pHVnpaWEpwWVd4cGVtVmZkVzVwWm05eWJYTW9aR0YwWVNrZ2V3b2dJQ0FnWTI5dWMzUWdjbVZ6ZFd4MElEMGdlMzA3Q2lBZ0lDQm1iM0lvWTI5dWMzUWdibUZ0WlNCcGJpQmtZWFJoS1hzS0lDQWdJQ0FnSUNCamIyNXpkQ0IyWVd4MVpTQTlJR1JoZEdGYmJtRnRaVjA3Q2lBZ0lDQWdJQ0FnYVdZZ0tIWmhiSFZsSUdsdWMzUmhibU5sYjJZZ2JXOWtMbFZ1YVdadmNtMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwVzI1aGJXVmRJRDBnZG1Gc2RXVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjMlZ5SUQwZ2RHOWZkVzVwWm05eWJTaDJZV3gxWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYzNWc2RGdHVZVzFsWFNBOUlHNWxkeUJ0YjJRdVZXNXBabTl5YlNoelpYSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJ5WlhOMWJIUTdDbjBLWm5WdVkzUnBiMjRnWkdWelpYSnBZV3hwZW1WZmNHeHZkQ2hrWVhSaEtTQjdDaUFnSUNCc1pYUWdiV1Z6YURzS0lDQWdJR2xtSUNnaWFXNXpkR0Z1WTJWZllYUjBjbWxpZFhSbGN5SWdhVzRnWkdGMFlTa2dld29nSUNBZ0lDQWdJRzFsYzJnZ1BTQmpjbVZoZEdWZmFXNXpkR0Z1WTJWa1gyMWxjMmdvWkdGMFlTazdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUcxbGMyZ2dQU0JqY21WaGRHVmZiV1Z6YUNoa1lYUmhLVHNLSUNBZ0lIMEtJQ0FnSUcxbGMyZ3VibUZ0WlNBOUlHUmhkR0V1Ym1GdFpUc0tJQ0FnSUcxbGMyZ3VabkoxYzNSMWJVTjFiR3hsWkNBOUlHWmhiSE5sT3dvZ0lDQWdiV1Z6YUM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ1ptRnNjMlU3Q2lBZ0lDQnRaWE5vTG5Cc2IzUmZkWFZwWkNBOUlHUmhkR0V1ZFhWcFpEc0tJQ0FnSUdOdmJuTjBJSFZ3WkdGMFpWOTJhWE5wWW14bElEMGdLSFlwUFQ1N0NpQWdJQ0FnSUNBZ2JXVnphQzUyYVhOcFlteGxJRDBnZGpzS0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQjlPd29nSUNBZ2RYQmtZWFJsWDNacGMybGliR1VvWkdGMFlTNTJhWE5wWW14bExuWmhiSFZsS1RzS0lDQWdJR1JoZEdFdWRtbHphV0pzWlM1dmJpaDFjR1JoZEdWZmRtbHphV0pzWlNrN0NpQWdJQ0JqYjI1dVpXTjBYM1Z1YVdadmNtMXpLRzFsYzJnc0lHUmhkR0V1ZFc1cFptOXliVjkxY0dSaGRHVnlLVHNLSUNBZ0lHTnZibTVsWTNSZllYUjBjbWxpZFhSbGN5aHRaWE5vTENCa1lYUmhMbUYwZEhKcFluVjBaVjkxY0dSaGRHVnlLVHNLSUNBZ0lISmxkSFZ5YmlCdFpYTm9Pd3A5Q21OdmJuTjBJRTlPWDA1RldGUmZTVTVUUlZKVUlEMGdibVYzSUZObGRDZ3BPd3BtZFc1amRHbHZiaUJ2Ymw5dVpYaDBYMmx1YzJWeWRDaG1LU0I3Q2lBZ0lDQlBUbDlPUlZoVVgwbE9VMFZTVkM1aFpHUW9aaWs3Q24wS1puVnVZM1JwYjI0Z1lXUmtYM0JzYjNRb2MyTmxibVVzSUhCc2IzUmZaR0YwWVNrZ2V3b2dJQ0FnWTI5dWMzUWdZMkZ0SUQwZ2MyTmxibVV1ZDJkc1gyTmhiV1Z5WVRzS0lDQWdJR052Ym5OMElHbGtaVzUwYVhSNUlEMGdibVYzSUcxdlpDNVZibWxtYjNKdEtHNWxkeUJ0YjJRdVRXRjBjbWw0TkNncEtUc0tJQ0FnSUdsbUlDaHdiRzkwWDJSaGRHRXVZMkZ0WDNOd1lXTmxJRDA5SUNKa1lYUmhJaWtnZXdvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1MmFXVjNJRDBnWTJGdExuWnBaWGM3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5CeWIycGxZM1JwYjI0Z1BTQmpZVzB1Y0hKdmFtVmpkR2x2YmpzS0lDQWdJQ0FnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdWNISnZhbVZqZEdsdmJuWnBaWGNnUFNCallXMHVjSEp2YW1WamRHbHZiblpwWlhjN0NpQWdJQ0FnSUNBZ2NHeHZkRjlrWVhSaExuVnVhV1p2Y20xekxtVjVaWEJ2YzJsMGFXOXVJRDBnWTJGdExtVjVaWEJ2YzJsMGFXOXVPd29nSUNBZ2ZTQmxiSE5sSUdsbUlDaHdiRzkwWDJSaGRHRXVZMkZ0WDNOd1lXTmxJRDA5SUNKd2FYaGxiQ0lwSUhzS0lDQWdJQ0FnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdWRtbGxkeUE5SUdsa1pXNTBhWFI1T3dvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1d2NtOXFaV04wYVc5dUlEMGdZMkZ0TG5CcGVHVnNYM053WVdObE93b2dJQ0FnSUNBZ0lIQnNiM1JmWkdGMFlTNTFibWxtYjNKdGN5NXdjbTlxWldOMGFXOXVkbWxsZHlBOUlHTmhiUzV3YVhobGJGOXpjR0ZqWlRzS0lDQWdJSDBnWld4elpTQnBaaUFvY0d4dmRGOWtZWFJoTG1OaGJWOXpjR0ZqWlNBOVBTQWljbVZzWVhScGRtVWlLU0I3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5acFpYY2dQU0JwWkdWdWRHbDBlVHNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11Y0hKdmFtVmpkR2x2YmlBOUlHTmhiUzV5Wld4aGRHbDJaVjl6Y0dGalpUc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEp2YW1WamRHbHZiblpwWlhjZ1BTQmpZVzB1Y21Wc1lYUnBkbVZmYzNCaFkyVTdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1MmFXVjNJRDBnYVdSbGJuUnBkSGs3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5CeWIycGxZM1JwYjI0Z1BTQnBaR1Z1ZEdsMGVUc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEp2YW1WamRHbHZiblpwWlhjZ1BTQnBaR1Z1ZEdsMGVUc0tJQ0FnSUgwS0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTV5WlhOdmJIVjBhVzl1SUQwZ1kyRnRMbkpsYzI5c2RYUnBiMjQ3Q2lBZ0lDQnBaaUFvY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5CeVpYQnliMnBsWTNScGIyNHBJSHNLSUNBZ0lDQWdJQ0JqYjI1emRDQjdJSE53WVdObElDd2diV0Z5YTJWeWMzQmhZMlVnSUgwZ1BTQndiRzkwWDJSaGRHRTdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMbkJ5WlhCeWIycGxZM1JwYjI0Z1BTQmpZVzB1Y0hKbGNISnZhbVZqZEdsdmJsOXRZWFJ5YVhnb2MzQmhZMlV1ZG1Gc2RXVXNJRzFoY210bGNuTndZV05sTG5aaGJIVmxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJSEFnUFNCa1pYTmxjbWxoYkdsNlpWOXdiRzkwS0hCc2IzUmZaR0YwWVNrN0NpQWdJQ0J3Ykc5MFgyTmhZMmhsVzNCc2IzUmZaR0YwWVM1MWRXbGtYU0E5SUhBN0NpQWdJQ0J6WTJWdVpTNWhaR1FvY0NrN0NpQWdJQ0JqYjI1emRDQnVaWGgwWDJsdWMyVnlkQ0E5SUc1bGR5QlRaWFFvVDA1ZlRrVllWRjlKVGxORlVsUXBPd29nSUNBZ2JtVjRkRjlwYm5ObGNuUXVabTl5UldGamFDZ29aaWs5UG1Zb0tTazdDbjBLWm5WdVkzUnBiMjRnWTI5dWJtVmpkRjkxYm1sbWIzSnRjeWh0WlhOb0xDQjFjR1JoZEdWeUtTQjdDaUFnSUNCMWNHUmhkR1Z5TG05dUtDaGJibUZ0WlN3Z1pHRjBZVjBwUFQ1N0NpQWdJQ0FnSUNBZ2FXWWdLRzVoYldVZ1BUMDlJQ0p1YjI1bElpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdOdmJuTjBJSFZ1YVdadmNtMGdQU0J0WlhOb0xtMWhkR1Z5YVdGc0xuVnVhV1p2Y20xelcyNWhiV1ZkT3dvZ0lDQWdJQ0FnSUdsbUlDaDFibWxtYjNKdExuWmhiSFZsTG1selZHVjRkSFZ5WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnBiVjlrWVhSaElEMGdkVzVwWm05eWJTNTJZV3gxWlM1cGJXRm5aVHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnVzNOcGVtVXNJSFJsZUY5a1lYUmhYU0E5SUdSaGRHRTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBaWGhmWkdGMFlTNXNaVzVuZEdnZ1BUMGdhVzFmWkdGMFlTNWtZWFJoTG14bGJtZDBhQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVcxZlpHRjBZUzVrWVhSaExuTmxkQ2gwWlhoZlpHRjBZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J2YkdSZmRHVjRkSFZ5WlNBOUlIVnVhV1p2Y20wdWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxYm1sbWIzSnRMblpoYkhWbElEMGdjbVZmWTNKbFlYUmxYM1JsZUhSMWNtVW9iMnhrWDNSbGVIUjFjbVVzSUhSbGVGOWtZWFJoTENCemFYcGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzlzWkY5MFpYaDBkWEpsTG1ScGMzQnZjMlVvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0TG5aaGJIVmxMbTVsWldSelZYQmtZWFJsSUQwZ2RISjFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWE5mZEdoeVpXVmZabWw0WldSZllYSnlZWGtvZFc1cFptOXliUzUyWVd4MVpTa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFZ1YVdadmNtMHVkbUZzZFdVdVpuSnZiVUZ5Y21GNUtHUmhkR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RXNXBabTl5YlM1MllXeDFaU0E5SUdSaGRHRTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5S1RzS2ZRcG1kVzVqZEdsdmJpQmpjbVZoZEdWZmRHVjRkSFZ5WlNoa1lYUmhLU0I3Q2lBZ0lDQmpiMjV6ZENCaWRXWm1aWElnUFNCa1lYUmhMbVJoZEdFN0NpQWdJQ0JwWmlBb1pHRjBZUzV6YVhwbExteGxibWQwYUNBOVBTQXpLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdkR1Y0SUQwZ2JtVjNJRzF2WkM1RVlYUmhWR1Y0ZEhWeVpUTkVLR0oxWm1abGNpd2daR0YwWVM1emFYcGxXekJkTENCa1lYUmhMbk5wZW1WYk1WMHNJR1JoZEdFdWMybDZaVnN5WFNrN0NpQWdJQ0FnSUNBZ2RHVjRMbVp2Y20xaGRDQTlJRzF2WkZ0a1lYUmhMblJvY21WbFgyWnZjbTFoZEYwN0NpQWdJQ0FnSUNBZ2RHVjRMblI1Y0dVZ1BTQnRiMlJiWkdGMFlTNTBhSEpsWlY5MGVYQmxYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR1Y0T3dvZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMFpYaGZaR0YwWVNBOUlHSjFabVpsY2lBOVBTQWlkR1Y0ZEhWeVpWOWhkR3hoY3lJZ1B5QlVSVmhVVlZKRlgwRlVURUZUV3pCZExuWmhiSFZsSURvZ1luVm1abVZ5T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2JXOWtMa1JoZEdGVVpYaDBkWEpsS0hSbGVGOWtZWFJoTENCa1lYUmhMbk5wZW1WYk1GMHNJR1JoZEdFdWMybDZaVnN4WFN3Z2JXOWtXMlJoZEdFdWRHaHlaV1ZmWm05eWJXRjBYU3dnYlc5a1cyUmhkR0V1ZEdoeVpXVmZkSGx3WlYwcE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlISmxYMk55WldGMFpWOTBaWGgwZFhKbEtHOXNaRjkwWlhoMGRYSmxMQ0JpZFdabVpYSXNJSE5wZW1VcElIc0tJQ0FnSUdsbUlDaHphWHBsTG14bGJtZDBhQ0E5UFNBektTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2RHVjRJRDBnYm1WM0lHMXZaQzVFWVhSaFZHVjRkSFZ5WlRORUtHSjFabVpsY2l3Z2MybDZaVnN3WFN3Z2MybDZaVnN4WFN3Z2MybDZaVnN5WFNrN0NpQWdJQ0FnSUNBZ2RHVjRMbVp2Y20xaGRDQTlJRzlzWkY5MFpYaDBkWEpsTG1admNtMWhkRHNLSUNBZ0lDQWdJQ0IwWlhndWRIbHdaU0E5SUc5c1pGOTBaWGgwZFhKbExuUjVjR1U3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJsZURzS0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJ0YjJRdVJHRjBZVlJsZUhSMWNtVW9ZblZtWm1WeUxDQnphWHBsV3pCZExDQnphWHBsV3pGZElEOGdjMmw2WlZzeFhTQTZJREVzSUc5c1pGOTBaWGgwZFhKbExtWnZjbTFoZEN3Z2IyeGtYM1JsZUhSMWNtVXVkSGx3WlNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1FuVm1abVZ5UVhSMGNtbGlkWFJsS0dKMVptWmxjaWtnZXdvZ0lDQWdZMjl1YzNRZ2FuTmlkV1ptSUQwZ2JtVjNJRzF2WkM1Q2RXWm1aWEpCZEhSeWFXSjFkR1VvWW5WbVptVnlMbVpzWVhRc0lHSjFabVpsY2k1MGVYQmxYMnhsYm1kMGFDazdDaUFnSUNCcWMySjFabVl1YzJWMFZYTmhaMlVvYlc5a0xrUjVibUZ0YVdORWNtRjNWWE5oWjJVcE93b2dJQ0FnY21WMGRYSnVJR3B6WW5WbVpqc0tmUXBtZFc1amRHbHZiaUJKYm5OMFlXNWpaVUoxWm1abGNrRjBkSEpwWW5WMFpTaGlkV1ptWlhJcElIc0tJQ0FnSUdOdmJuTjBJR3B6WW5WbVppQTlJRzVsZHlCdGIyUXVTVzV6ZEdGdVkyVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtHSjFabVpsY2k1bWJHRjBMQ0JpZFdabVpYSXVkSGx3WlY5c1pXNW5kR2dwT3dvZ0lDQWdhbk5pZFdabUxuTmxkRlZ6WVdkbEtHMXZaQzVFZVc1aGJXbGpSSEpoZDFWellXZGxLVHNLSUNBZ0lISmxkSFZ5YmlCcWMySjFabVk3Q24wS1puVnVZM1JwYjI0Z1lYUjBZV05vWDJkbGIyMWxkSEo1S0dKMVptWmxjbDluWlc5dFpYUnllU3dnZG1WeWRHVjRZWEp5WVhsekxDQm1ZV05sY3lrZ2V3b2dJQ0FnWm05eUtHTnZibk4wSUc1aGJXVWdhVzRnZG1WeWRHVjRZWEp5WVhsektYc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCaWRXWm1JRDBnZG1WeWRHVjRZWEp5WVhselcyNWhiV1ZkT3dvZ0lDQWdJQ0FnSUd4bGRDQmlkV1ptWlhJN0NpQWdJQ0FnSUNBZ2FXWWdLR0oxWm1ZdWRHOWZkWEJrWVhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdKMVptWmxjaUE5SUc1bGR5QnRiMlF1UW5WbVptVnlRWFIwY21saWRYUmxLR0oxWm1ZdWRHOWZkWEJrWVhSbExDQmlkV1ptTG1sMFpXMVRhWHBsS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmlkV1ptWlhJZ1BTQkNkV1ptWlhKQmRIUnlhV0oxZEdVb1luVm1aaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdKMVptWmxjbDluWlc5dFpYUnllUzV6WlhSQmRIUnlhV0oxZEdVb2JtRnRaU3dnWW5WbVptVnlLVHNLSUNBZ0lIMEtJQ0FnSUdKMVptWmxjbDluWlc5dFpYUnllUzV6WlhSSmJtUmxlQ2htWVdObGN5azdDaUFnSUNCaWRXWm1aWEpmWjJWdmJXVjBjbmt1WW05MWJtUnBibWRUY0dobGNtVWdQU0J1WlhjZ2JXOWtMbE53YUdWeVpTZ3BPd29nSUNBZ1luVm1abVZ5WDJkbGIyMWxkSEo1TG1KdmRXNWthVzVuVTNCb1pYSmxMbkpoWkdsMWN5QTlJREV3TURBd01EQXdNREF3TURBd093b2dJQ0FnWW5WbVptVnlYMmRsYjIxbGRISjVMbVp5ZFhOMGRXMURkV3hzWldRZ1BTQm1ZV3h6WlRzS0lDQWdJSEpsZEhWeWJpQmlkV1ptWlhKZloyVnZiV1YwY25rN0NuMEtablZ1WTNScGIyNGdZWFIwWVdOb1gybHVjM1JoYm1ObFpGOW5aVzl0WlhSeWVTaGlkV1ptWlhKZloyVnZiV1YwY25rc0lHbHVjM1JoYm1ObFgyRjBkSEpwWW5WMFpYTXBJSHNLSUNBZ0lHWnZjaWhqYjI1emRDQnVZVzFsSUdsdUlHbHVjM1JoYm1ObFgyRjBkSEpwWW5WMFpYTXBld29nSUNBZ0lDQWdJR052Ym5OMElHSjFabVpsY2lBOUlFbHVjM1JoYm1ObFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dsdWMzUmhibU5sWDJGMGRISnBZblYwWlhOYmJtRnRaVjBwT3dvZ0lDQWdJQ0FnSUdKMVptWmxjbDluWlc5dFpYUnllUzV6WlhSQmRIUnlhV0oxZEdVb2JtRnRaU3dnWW5WbVptVnlLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJ5WldOeVpXRjBaVjluWlc5dFpYUnllU2h0WlhOb0xDQjJaWEowWlhoaGNuSmhlWE1zSUdaaFkyVnpLU0I3Q2lBZ0lDQmpiMjV6ZENCaWRXWm1aWEpmWjJWdmJXVjBjbmtnUFNCdVpYY2diVzlrTGtKMVptWmxja2RsYjIxbGRISjVLQ2s3Q2lBZ0lDQmhkSFJoWTJoZloyVnZiV1YwY25rb1luVm1abVZ5WDJkbGIyMWxkSEo1TENCMlpYSjBaWGhoY25KaGVYTXNJR1poWTJWektUc0tJQ0FnSUcxbGMyZ3VaMlZ2YldWMGNua3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2JXVnphQzVuWlc5dFpYUnllU0E5SUdKMVptWmxjbDluWlc5dFpYUnllVHNLSUNBZ0lHMWxjMmd1Ym1WbFpITlZjR1JoZEdVZ1BTQjBjblZsT3dwOUNtWjFibU4wYVc5dUlISmxZM0psWVhSbFgybHVjM1JoYm1ObFpGOW5aVzl0WlhSeWVTaHRaWE5vS1NCN0NpQWdJQ0JqYjI1emRDQmlkV1ptWlhKZloyVnZiV1YwY25rZ1BTQnVaWGNnYlc5a0xrbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1S0NrN0NpQWdJQ0JqYjI1emRDQjJaWEowWlhoaGNuSmhlWE1nUFNCN2ZUc0tJQ0FnSUdOdmJuTjBJR2x1YzNSaGJtTmxYMkYwZEhKcFluVjBaWE1nUFNCN2ZUc0tJQ0FnSUdOdmJuTjBJR1poWTJWeklEMGdXd29nSUNBZ0lDQWdJQzR1TG0xbGMyZ3VaMlZ2YldWMGNua3VhVzVrWlhndVlYSnlZWGtLSUNBZ0lGMDdDaUFnSUNCUFltcGxZM1F1YTJWNWN5aHRaWE5vTG1kbGIyMWxkSEo1TG1GMGRISnBZblYwWlhNcExtWnZja1ZoWTJnb0tHNWhiV1VwUFQ1N0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWW5WbVptVnlJRDBnYldWemFDNW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpXMjVoYldWZE93b2dJQ0FnSUNBZ0lHTnZibk4wSUdOdmNIa2dQU0JpZFdabVpYSXVkRzlmZFhCa1lYUmxJRDhnWW5WbVptVnlMblJ2WDNWd1pHRjBaU0E2SUdKMVptWmxjaTVoY25KaGVTNXRZWEFvS0hncFBUNTRLVHNLSUNBZ0lDQWdJQ0JwWmlBb1luVm1abVZ5TG1selNXNXpkR0Z1WTJWa1FuVm1abVZ5UVhSMGNtbGlkWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2x1YzNSaGJtTmxYMkYwZEhKcFluVjBaWE5iYm1GdFpWMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYkdGME9pQmpiM0I1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pWOXNaVzVuZEdnNklHSjFabVpsY2k1cGRHVnRVMmw2WlFvZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlR0Z5Y21GNWMxdHVZVzFsWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnNZWFE2SUdOdmNIa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsWDJ4bGJtZDBhRG9nWW5WbVptVnlMbWwwWlcxVGFYcGxDaUFnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlNrN0NpQWdJQ0JoZEhSaFkyaGZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQjJaWEowWlhoaGNuSmhlWE1zSUdaaFkyVnpLVHNLSUNBZ0lHRjBkR0ZqYUY5cGJuTjBZVzVqWldSZloyVnZiV1YwY25rb1luVm1abVZ5WDJkbGIyMWxkSEo1TENCcGJuTjBZVzVqWlY5aGRIUnlhV0oxZEdWektUc0tJQ0FnSUcxbGMyZ3VaMlZ2YldWMGNua3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2JXVnphQzVuWlc5dFpYUnllU0E5SUdKMVptWmxjbDluWlc5dFpYUnllVHNLSUNBZ0lHMWxjMmd1Ym1WbFpITlZjR1JoZEdVZ1BTQjBjblZsT3dwOUNtWjFibU4wYVc5dUlHTnlaV0YwWlY5dFlYUmxjbWxoYkNod2NtOW5jbUZ0S1NCN0NpQWdJQ0JqYjI1emRDQnBjMTkyYjJ4MWJXVWdQU0FpZG05c2RXMWxaR0YwWVNJZ2FXNGdjSEp2WjNKaGJTNTFibWxtYjNKdGN6c0tJQ0FnSUhKbGRIVnliaUJ1WlhjZ2JXOWtMbEpoZDFOb1lXUmxjazFoZEdWeWFXRnNLSHNLSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nWkdWelpYSnBZV3hwZW1WZmRXNXBabTl5YlhNb2NISnZaM0poYlM1MWJtbG1iM0p0Y3lrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJ3Y205bmNtRnRMblpsY25SbGVGOXpiM1Z5WTJVc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUhCeWIyZHlZVzB1Wm5KaFoyMWxiblJmYzI5MWNtTmxMQW9nSUNBZ0lDQWdJSE5wWkdVNklHbHpYM1p2YkhWdFpTQS9JRzF2WkM1Q1lXTnJVMmxrWlNBNklHMXZaQzVFYjNWaWJHVlRhV1JsTEFvZ0lDQWdJQ0FnSUhSeVlXNXpjR0Z5Wlc1ME9pQjBjblZsTEFvZ0lDQWdJQ0FnSUdSbGNIUm9WR1Z6ZERvZ0lYQnliMmR5WVcwdWIzWmxjbVJ5WVhjdWRtRnNkV1VzQ2lBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lYQnliMmR5WVcwdWRISmhibk53WVhKbGJtTjVMblpoYkhWbENpQWdJQ0I5S1RzS2ZRcG1kVzVqZEdsdmJpQmpjbVZoZEdWZmJXVnphQ2h3Y205bmNtRnRLU0I3Q2lBZ0lDQmpiMjV6ZENCaWRXWm1aWEpmWjJWdmJXVjBjbmtnUFNCdVpYY2diVzlrTGtKMVptWmxja2RsYjIxbGRISjVLQ2s3Q2lBZ0lDQmpiMjV6ZENCbVlXTmxjeUE5SUc1bGR5QnRiMlF1UW5WbVptVnlRWFIwY21saWRYUmxLSEJ5YjJkeVlXMHVabUZqWlhNdWRtRnNkV1VzSURFcE93b2dJQ0FnWVhSMFlXTm9YMmRsYjIxbGRISjVLR0oxWm1abGNsOW5aVzl0WlhSeWVTd2djSEp2WjNKaGJTNTJaWEowWlhoaGNuSmhlWE1zSUdaaFkyVnpLVHNLSUNBZ0lHTnZibk4wSUcxaGRHVnlhV0ZzSUQwZ1kzSmxZWFJsWDIxaGRHVnlhV0ZzS0hCeWIyZHlZVzBwT3dvZ0lDQWdZMjl1YzNRZ2JXVnphQ0E5SUc1bGR5QnRiMlF1VFdWemFDaGlkV1ptWlhKZloyVnZiV1YwY25rc0lHMWhkR1Z5YVdGc0tUc0tJQ0FnSUhCeWIyZHlZVzB1Wm1GalpYTXViMjRvS0hncFBUNTdDaUFnSUNBZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVM1elpYUkpibVJsZUNodVpYY2diVzlrTGtKMVptWmxja0YwZEhKcFluVjBaU2g0TENBeEtTazdDaUFnSUNCOUtUc0tJQ0FnSUhKbGRIVnliaUJ0WlhOb093cDlDbVoxYm1OMGFXOXVJR055WldGMFpWOXBibk4wWVc1alpXUmZiV1Z6YUNod2NtOW5jbUZ0S1NCN0NpQWdJQ0JqYjI1emRDQmlkV1ptWlhKZloyVnZiV1YwY25rZ1BTQnVaWGNnYlc5a0xrbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1S0NrN0NpQWdJQ0JqYjI1emRDQm1ZV05sY3lBOUlHNWxkeUJ0YjJRdVFuVm1abVZ5UVhSMGNtbGlkWFJsS0hCeWIyZHlZVzB1Wm1GalpYTXVkbUZzZFdVc0lERXBPd29nSUNBZ1lYUjBZV05vWDJkbGIyMWxkSEo1S0dKMVptWmxjbDluWlc5dFpYUnllU3dnY0hKdlozSmhiUzUyWlhKMFpYaGhjbkpoZVhNc0lHWmhZMlZ6S1RzS0lDQWdJR0YwZEdGamFGOXBibk4wWVc1alpXUmZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQndjbTluY21GdExtbHVjM1JoYm1ObFgyRjBkSEpwWW5WMFpYTXBPd29nSUNBZ1kyOXVjM1FnYldGMFpYSnBZV3dnUFNCamNtVmhkR1ZmYldGMFpYSnBZV3dvY0hKdlozSmhiU2s3Q2lBZ0lDQmpiMjV6ZENCdFpYTm9JRDBnYm1WM0lHMXZaQzVOWlhOb0tHSjFabVpsY2w5blpXOXRaWFJ5ZVN3Z2JXRjBaWEpwWVd3cE93b2dJQ0FnY0hKdlozSmhiUzVtWVdObGN5NXZiaWdvZUNrOVBuc0tJQ0FnSUNBZ0lDQnRaWE5vTG1kbGIyMWxkSEo1TG5ObGRFbHVaR1Y0S0c1bGR5QnRiMlF1UW5WbVptVnlRWFIwY21saWRYUmxLSGdzSURFcEtUc0tJQ0FnSUgwcE93b2dJQ0FnY21WMGRYSnVJRzFsYzJnN0NuMEtablZ1WTNScGIyNGdabWx5YzNRb2VDa2dld29nSUNBZ2NtVjBkWEp1SUhoYlQySnFaV04wTG10bGVYTW9lQ2xiTUYxZE93cDlDbVoxYm1OMGFXOXVJR052Ym01bFkzUmZZWFIwY21saWRYUmxjeWh0WlhOb0xDQjFjR1JoZEdWeUtTQjdDaUFnSUNCamIyNXpkQ0JwYm5OMFlXNWpaVjlpZFdabVpYSnpJRDBnZTMwN0NpQWdJQ0JqYjI1emRDQm5aVzl0WlhSeWVWOWlkV1ptWlhKeklEMGdlMzA3Q2lBZ0lDQnNaWFFnWm1seWMzUmZhVzV6ZEdGdVkyVmZZblZtWm1WeU93b2dJQ0FnWTI5dWMzUWdjbVZoYkY5cGJuTjBZVzVqWlY5c1pXNW5kR2dnUFNCYkNpQWdJQ0FnSUNBZ01Bb2dJQ0FnWFRzS0lDQWdJR3hsZENCbWFYSnpkRjluWlc5dFpYUnllVjlpZFdabVpYSTdDaUFnSUNCamIyNXpkQ0J5WldGc1gyZGxiMjFsZEhKNVgyeGxibWQwYUNBOUlGc0tJQ0FnSUNBZ0lDQXdDaUFnSUNCZE93b2dJQ0FnWm5WdVkzUnBiMjRnY21WZllYTnphV2R1WDJKMVptWmxjbk1vS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWVhSMGNtbGlkWFJsY3lBOUlHMWxjMmd1WjJWdmJXVjBjbmt1WVhSMGNtbGlkWFJsY3pzS0lDQWdJQ0FnSUNCUFltcGxZM1F1YTJWNWN5aGhkSFJ5YVdKMWRHVnpLUzVtYjNKRllXTm9LQ2h1WVcxbEtUMCtld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JpZFdabVpYSWdQU0JoZEhSeWFXSjFkR1Z6VzI1aGJXVmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZblZtWm1WeUxtbHpTVzV6ZEdGdVkyVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibk4wWVc1alpWOWlkV1ptWlhKelcyNWhiV1ZkSUQwZ1luVm1abVZ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVnZiV1YwY25sZlluVm1abVZ5YzF0dVlXMWxYU0E5SUdKMVptWmxjanNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR1pwY25OMFgybHVjM1JoYm1ObFgySjFabVpsY2lBOUlHWnBjbk4wS0dsdWMzUmhibU5sWDJKMVptWmxjbk1wT3dvZ0lDQWdJQ0FnSUdsbUlDaG1hWEp6ZEY5cGJuTjBZVzVqWlY5aWRXWm1aWElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZoYkY5cGJuTjBZVzVqWlY5c1pXNW5kR2hiTUYwZ1BTQm1hWEp6ZEY5cGJuTjBZVzVqWlY5aWRXWm1aWEl1WTI5MWJuUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1pwY25OMFgyZGxiMjFsZEhKNVgySjFabVpsY2lBOUlHWnBjbk4wS0dkbGIyMWxkSEo1WDJKMVptWmxjbk1wT3dvZ0lDQWdJQ0FnSUhKbFlXeGZaMlZ2YldWMGNubGZiR1Z1WjNSb1d6QmRJRDBnWm1seWMzUmZaMlZ2YldWMGNubGZZblZtWm1WeUxtTnZkVzUwT3dvZ0lDQWdmUW9nSUNBZ2NtVmZZWE56YVdkdVgySjFabVpsY25Nb0tUc0tJQ0FnSUhWd1pHRjBaWEl1YjI0b0tGdHVZVzFsTENCdVpYZGZkbUZzZFdWekxDQnNaVzVuZEdoZEtUMCtld29nSUNBZ0lDQWdJR052Ym5OMElHSjFabVpsY2lBOUlHMWxjMmd1WjJWdmJXVjBjbmt1WVhSMGNtbGlkWFJsYzF0dVlXMWxYVHNLSUNBZ0lDQWdJQ0JzWlhRZ1luVm1abVZ5Y3pzS0lDQWdJQ0FnSUNCc1pYUWdjbVZoYkY5c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnYkdWMElHbHpYMmx1YzNSaGJtTmxJRDBnWm1Gc2MyVTdDaUFnSUNBZ0lDQWdhV1lnS0c1aGJXVWdhVzRnYVc1emRHRnVZMlZmWW5WbVptVnljeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmlkV1ptWlhKeklEMGdhVzV6ZEdGdVkyVmZZblZtWm1WeWN6c0tJQ0FnSUNBZ0lDQWdJQ0FnWm1seWMzUmZhVzV6ZEdGdVkyVmZZblZtWm1WeU93b2dJQ0FnSUNBZ0lDQWdJQ0J5WldGc1gyeGxibWQwYUNBOUlISmxZV3hmYVc1emRHRnVZMlZmYkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNCcGMxOXBibk4wWVc1alpTQTlJSFJ5ZFdVN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZblZtWm1WeWN5QTlJR2RsYjIxbGRISjVYMkoxWm1abGNuTTdDaUFnSUNBZ0lDQWdJQ0FnSUdacGNuTjBYMmRsYjIxbGRISjVYMkoxWm1abGNqc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WaGJGOXNaVzVuZEdnZ1BTQnlaV0ZzWDJkbGIyMWxkSEo1WDJ4bGJtZDBhRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHeGxibWQwYUNBOFBTQnlaV0ZzWDJ4bGJtZDBhRnN3WFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSXVjMlYwS0c1bGQxOTJZV3gxWlhNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSXVibVZsWkhOVmNHUmhkR1VnUFNCMGNuVmxPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWE5mYVc1emRHRnVZMlVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxbGMyZ3VaMlZ2YldWMGNua3VhVzV6ZEdGdVkyVkRiM1Z1ZENBOUlHeGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdKMVptWmxjaTUwYjE5MWNHUmhkR1VnUFNCdVpYZGZkbUZzZFdWek93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmhiR3hmYUdGMlpWOXpZVzFsWDJ4bGJtZDBhQ0E5SUU5aWFtVmpkQzUyWVd4MVpYTW9ZblZtWm1WeWN5a3VaWFpsY25rb0tIZ3BQVDU0TG5SdlgzVndaR0YwWlNBbUppQjRMblJ2WDNWd1pHRjBaUzVzWlc1bmRHZ2dMeUI0TG1sMFpXMVRhWHBsSUQwOUlHeGxibWQwYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaGJHeGZhR0YyWlY5ellXMWxYMnhsYm1kMGFDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dselgybHVjM1JoYm1ObEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WamNtVmhkR1ZmYVc1emRHRnVZMlZrWDJkbGIyMWxkSEo1S0cxbGMyZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbFgyRnpjMmxuYmw5aWRXWm1aWEp6S0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVM1cGJuTjBZVzVqWlVOdmRXNTBJRDBnYm1WM1gzWmhiSFZsY3k1c1pXNW5kR2dnTHlCaWRXWm1aWEl1YVhSbGJWTnBlbVU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbFkzSmxZWFJsWDJkbGIyMWxkSEo1S0cxbGMyZ3NJR0oxWm1abGNuTXNJRzFsYzJndVoyVnZiV1YwY25rdWFXNWtaWGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxYMkZ6YzJsbmJsOWlkV1ptWlhKektDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5S1RzS2ZRcG1kVzVqZEdsdmJpQmtaWE5sY21saGJHbDZaVjl6WTJWdVpTaGtZWFJoTENCelkzSmxaVzRwSUhzS0lDQWdJR052Ym5OMElITmpaVzVsSUQwZ2JtVjNJRzF2WkM1VFkyVnVaU2dwT3dvZ0lDQWdjMk5sYm1VdWMyTnlaV1Z1SUQwZ2MyTnlaV1Z1T3dvZ0lDQWdZMjl1YzNRZ2V5QmpZVzUyWVhNZ0lIMGdQU0J6WTNKbFpXNDdDaUFnSUNCaFpHUmZjMk5sYm1Vb1pHRjBZUzUxZFdsa0xDQnpZMlZ1WlNrN0NpQWdJQ0J6WTJWdVpTNXpZMlZ1WlY5MWRXbGtJRDBnWkdGMFlTNTFkV2xrT3dvZ0lDQWdjMk5sYm1VdVpuSjFjM1IxYlVOMWJHeGxaQ0E5SUdaaGJITmxPd29nSUNBZ2MyTmxibVV1Y0dsNFpXeGhjbVZoSUQwZ1pHRjBZUzV3YVhobGJHRnlaV0U3Q2lBZ0lDQnpZMlZ1WlM1aVlXTnJaM0p2ZFc1a1kyOXNiM0lnUFNCa1lYUmhMbUpoWTJ0bmNtOTFibVJqYjJ4dmNqc0tJQ0FnSUhOalpXNWxMbU5zWldGeWMyTmxibVVnUFNCa1lYUmhMbU5zWldGeWMyTmxibVU3Q2lBZ0lDQnpZMlZ1WlM1MmFYTnBZbXhsSUQwZ1pHRjBZUzUyYVhOcFlteGxPd29nSUNBZ1kyOXVjM1FnWTJGdFpYSmhJRDBnYm1WM0lFMWhhMmxsUTJGdFpYSmhLQ2s3Q2lBZ0lDQnpZMlZ1WlM1M1oyeGZZMkZ0WlhKaElEMGdZMkZ0WlhKaE93b2dJQ0FnWm5WdVkzUnBiMjRnZFhCa1lYUmxYMk5oYlNoallXMWxjbUZmYldGMGNtbGpaWE1wSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0JiZG1sbGR5d2djSEp2YW1WamRHbHZiaXdnY21WemIyeDFkR2x2Yml3Z1pYbGxjRzl6WFNBOUlHTmhiV1Z5WVY5dFlYUnlhV05sY3pzS0lDQWdJQ0FnSUNCallXMWxjbUV1ZFhCa1lYUmxYMjFoZEhKcFkyVnpLSFpwWlhjc0lIQnliMnBsWTNScGIyNHNJSEpsYzI5c2RYUnBiMjRzSUdWNVpYQnZjeWs3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1ZmWTJGdEtHUmhkR0V1WTJGdFpYSmhMblpoYkhWbEtUc0tJQ0FnSUdsbUlDaGtZWFJoTG1OaGJUTmtYM04wWVhSbEtTQjdDaUFnSUNBZ0lDQWdZWFIwWVdOb1h6TmtYMk5oYldWeVlTaGpZVzUyWVhNc0lHTmhiV1Z5WVN3Z1pHRjBZUzVqWVcwelpGOXpkR0YwWlN3Z2MyTmxibVVwT3dvZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQmtZWFJoTG1OaGJXVnlZUzV2YmloMWNHUmhkR1ZmWTJGdEtUc0tJQ0FnSUgwS0lDQWdJR1JoZEdFdWNHeHZkSE11Wm05eVJXRmphQ2dvY0d4dmRGOWtZWFJoS1QwK2V3b2dJQ0FnSUNBZ0lHRmtaRjl3Ykc5MEtITmpaVzVsTENCd2JHOTBYMlJoZEdFcE93b2dJQ0FnZlNrN0NpQWdJQ0J6WTJWdVpTNXpZMlZ1WlY5amFHbHNaSEpsYmlBOUlHUmhkR0V1WTJocGJHUnlaVzR1YldGd0tDaGphR2xzWkNrOVBtUmxjMlZ5YVdGc2FYcGxYM05qWlc1bEtHTm9hV3hrTENCelkzSmxaVzRwS1RzS0lDQWdJSEpsZEhWeWJpQnpZMlZ1WlRzS2ZRcG1kVzVqZEdsdmJpQmtaV3hsZEdWZmNHeHZkQ2h3Ykc5MEtTQjdDaUFnSUNCa1pXeGxkR1VnY0d4dmRGOWpZV05vWlZ0d2JHOTBMbkJzYjNSZmRYVnBaRjA3Q2lBZ0lDQmpiMjV6ZENCN0lIQmhjbVZ1ZENBZ2ZTQTlJSEJzYjNRN0NpQWdJQ0JwWmlBb2NHRnlaVzUwS1NCN0NpQWdJQ0FnSUNBZ2NHRnlaVzUwTG5KbGJXOTJaU2h3Ykc5MEtUc0tJQ0FnSUgwS0lDQWdJSEJzYjNRdVoyVnZiV1YwY25rdVpHbHpjRzl6WlNncE93b2dJQ0FnY0d4dmRDNXRZWFJsY21saGJDNWthWE53YjNObEtDazdDbjBLWm5WdVkzUnBiMjRnWkdWc1pYUmxYM1JvY21WbFgzTmpaVzVsS0hOalpXNWxLU0I3Q2lBZ0lDQmtaV3hsZEdVZ2MyTmxibVZmWTJGamFHVmJjMk5sYm1VdWMyTmxibVZmZFhWcFpGMDdDaUFnSUNCelkyVnVaUzV6WTJWdVpWOWphR2xzWkhKbGJpNW1iM0pGWVdOb0tHUmxiR1YwWlY5MGFISmxaVjl6WTJWdVpTazdDaUFnSUNCM2FHbHNaU2h6WTJWdVpTNWphR2xzWkhKbGJpNXNaVzVuZEdnZ1BpQXdLWHNLSUNBZ0lDQWdJQ0JrWld4bGRHVmZjR3h2ZENoelkyVnVaUzVqYUdsc1pISmxibHN3WFNrN0NpQWdJQ0I5Q24wS2QybHVaRzkzTGxSSVVrVkZJRDBnYlc5a093cGpiMjV6ZENCd2FYaGxiRkpoZEdsdk1TQTlJSGRwYm1SdmR5NWtaWFpwWTJWUWFYaGxiRkpoZEdsdklIeDhJREV1TURzS1puVnVZM1JwYjI0Z2NtVnVaR1Z5WDNOalpXNWxLSE5qWlc1bExDQndhV05yYVc1bklEMGdabUZzYzJVcElIc0tJQ0FnSUdOdmJuTjBJSHNnWTJGdFpYSmhJQ3dnY21WdVpHVnlaWElnSUgwZ1BTQnpZMlZ1WlM1elkzSmxaVzQ3Q2lBZ0lDQmpiMjV6ZENCallXNTJZWE1nUFNCeVpXNWtaWEpsY2k1a2IyMUZiR1Z0Wlc1ME93b2dJQ0FnYVdZZ0tDRmtiMk4xYldWdWRDNWliMlI1TG1OdmJuUmhhVzV6S0dOaGJuWmhjeWtwSUhzS0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5Z2lSVmhKVkVsT1J5QlhSMHdpS1RzS0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2k1emRHRjBaUzV5WlhObGRDZ3BPd29nSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbVJwYzNCdmMyVW9LVHNLSUNBZ0lDQWdJQ0JrWld4bGRHVmZkR2h5WldWZmMyTmxibVVvYzJObGJtVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQm1ZV3h6WlRzS0lDQWdJSDBLSUNBZ0lHbG1JQ2doYzJObGJtVXVkbWx6YVdKc1pTNTJZV3gxWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGNuVmxPd29nSUNBZ2ZRb2dJQ0FnY21WdVpHVnlaWEl1WVhWMGIwTnNaV0Z5SUQwZ2MyTmxibVV1WTJ4bFlYSnpZMlZ1WlM1MllXeDFaVHNLSUNBZ0lHTnZibk4wSUdGeVpXRWdQU0J6WTJWdVpTNXdhWGhsYkdGeVpXRXVkbUZzZFdVN0NpQWdJQ0JwWmlBb1lYSmxZU2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRnQ0TENCNUxDQjNMQ0JvWFNBOUlHRnlaV0V1YldGd0tDaDBLVDArZENBdklIQnBlR1ZzVW1GMGFXOHhLVHNLSUNBZ0lDQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSV2FXVjNjRzl5ZENoNExDQjVMQ0IzTENCb0tUc0tJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNpNXpaWFJUWTJsemMyOXlLSGdzSUhrc0lIY3NJR2dwT3dvZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRGTmphWE56YjNKVVpYTjBLSFJ5ZFdVcE93b2dJQ0FnSUNBZ0lHbG1JQ2h3YVdOcmFXNW5LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxibVJsY21WeUxuTmxkRU5zWldGeVFXeHdhR0VvTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk5sZEVOc1pXRnlRMjlzYjNJb2JtVjNJRzF2WkM1RGIyeHZjaWd3S1N3Z01DNHdLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2k1elpYUkRiR1ZoY2tOdmJHOXlLSE5qWlc1bExtSmhZMnRuY205MWJtUmpiMnh2Y2k1MllXeDFaU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5KbGJtUmxjaWh6WTJWdVpTd2dZMkZ0WlhKaEtUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQnpZMlZ1WlM1elkyVnVaVjlqYUdsc1pISmxiaTVsZG1WeWVTZ29lQ2s5UG5KbGJtUmxjbDl6WTJWdVpTaDRMQ0J3YVdOcmFXNW5LU2s3Q24wS1puVnVZM1JwYjI0Z2MzUmhjblJmY21WdVpHVnliRzl2Y0NoMGFISmxaVjl6WTJWdVpTa2dld29nSUNBZ1kyOXVjM1FnZXlCbWNITWdJSDBnUFNCMGFISmxaVjl6WTJWdVpTNXpZM0psWlc0N0NpQWdJQ0JqYjI1emRDQjBhVzFsWDNCbGNsOW1jbUZ0WlNBOUlERWdMeUJtY0hNZ0tpQXhNREF3T3dvZ0lDQWdiR1YwSUd4aGMzUmZkR2x0WlY5emRHRnRjQ0E5SUhCbGNtWnZjbTFoYm1ObExtNXZkeWdwT3dvZ0lDQWdablZ1WTNScGIyNGdjbVZ1WkdWeWJHOXZjQ2gwYVcxbGMzUmhiWEFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2x0WlhOMFlXMXdJQzBnYkdGemRGOTBhVzFsWDNOMFlXMXdJRDRnZEdsdFpWOXdaWEpmWm5KaGJXVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWVd4c1gzSmxibVJsY21Wa0lEMGdjbVZ1WkdWeVgzTmpaVzVsS0hSb2NtVmxYM05qWlc1bEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmhiR3hmY21WdVpHVnlaV1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWVhOMFgzUnBiV1ZmYzNSaGJYQWdQU0J3WlhKbWIzSnRZVzVqWlM1dWIzY29LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZDJsdVpHOTNMbkpsY1hWbGMzUkJibWx0WVhScGIyNUdjbUZ0WlNoeVpXNWtaWEpzYjI5d0tUc0tJQ0FnSUgwS0lDQWdJSEpsYm1SbGNsOXpZMlZ1WlNoMGFISmxaVjl6WTJWdVpTazdDaUFnSUNCeVpXNWtaWEpzYjI5d0tDazdDbjBLWm5WdVkzUnBiMjRnZEdoeWIzUjBiR1ZmWm5WdVkzUnBiMjRvWm5WdVl5d2daR1ZzWVhrcElIc0tJQ0FnSUd4bGRDQndjbVYySUQwZ01Ec0tJQ0FnSUd4bGRDQm1kWFIxY21WZmFXUWdQU0IxYm1SbFptbHVaV1E3Q2lBZ0lDQm1kVzVqZEdsdmJpQnBibTVsY2w5MGFISnZkSFJzWlNndUxpNWhjbWR6S1NCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnYm05M0lEMGdibVYzSUVSaGRHVW9LUzVuWlhSVWFXMWxLQ2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tHWjFkSFZ5WlY5cFpDQWhQVDBnZFc1a1pXWnBibVZrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVZHbHRaVzkxZENobWRYUjFjbVZmYVdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtZFhSMWNtVmZhV1FnUFNCMWJtUmxabWx1WldRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2h1YjNjZ0xTQndjbVYySUQ0Z1pHVnNZWGtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjSEpsZGlBOUlHNXZkenNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTW9MaTR1WVhKbmN5azdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm5WMGRYSmxYMmxrSUQwZ2MyVjBWR2x0Wlc5MWRDZ29LVDArYVc1dVpYSmZkR2h5YjNSMGJHVW9MaTR1WVhKbmN5a3NJRzV2ZHlBdElIQnlaWFlnS3lBeEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdhVzV1WlhKZmRHaHliM1IwYkdVN0NuMEtablZ1WTNScGIyNGdkR2h5WldWcWMxOXRiMlIxYkdVb1kyRnVkbUZ6TENCamIyMXRMQ0IzYVdSMGFDd2dhR1ZwWjJoMExDQnlaWE5wZW1WZmRHOWZZbTlrZVNrZ2V3b2dJQ0FnYkdWMElHTnZiblJsZUhRZ1BTQmpZVzUyWVhNdVoyVjBRMjl1ZEdWNGRDZ2lkMlZpWjJ3eUlpd2dld29nSUNBZ0lDQWdJSEJ5WlhObGNuWmxSSEpoZDJsdVowSjFabVpsY2pvZ2RISjFaUW9nSUNBZ2ZTazdDaUFnSUNCcFppQW9JV052Ym5SbGVIUXBJSHNLSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsZGxZa2RNSURJdU1DQnViM1FnYzNWd2NHOXlkR1ZrSUdKNUlHSnliM2R6WlhJc0lHWmhiR3hwYm1jZ1ltRmpheUIwYnlCWFpXSkhUQ0F4TGpBZ0tGWnZiSFZ0WlNCd2JHOTBjeUIzYVd4c0lHNXZkQ0IzYjNKcktTSXBPd29nSUNBZ0lDQWdJR052Ym5SbGVIUWdQU0JqWVc1MllYTXVaMlYwUTI5dWRHVjRkQ2dpZDJWaVoyd2lMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQnlaWE5sY25abFJISmhkMmx1WjBKMVptWmxjam9nZEhKMVpRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRb2dJQ0FnYVdZZ0tDRmpiMjUwWlhoMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnZlFvZ0lDQWdZMjl1YzNRZ2NtVnVaR1Z5WlhJZ1BTQnVaWGNnYlc5a0xsZGxZa2RNVW1WdVpHVnlaWElvZXdvZ0lDQWdJQ0FnSUdGdWRHbGhiR2xoY3pvZ2RISjFaU3dLSUNBZ0lDQWdJQ0JqWVc1MllYTTZJR05oYm5aaGN5d0tJQ0FnSUNBZ0lDQmpiMjUwWlhoME9pQmpiMjUwWlhoMExBb2dJQ0FnSUNBZ0lIQnZkMlZ5VUhKbFptVnlaVzVqWlRvZ0ltaHBaMmd0Y0dWeVptOXliV0Z1WTJVaUNpQWdJQ0I5S1RzS0lDQWdJSEpsYm1SbGNtVnlMbk5sZEVOc1pXRnlRMjlzYjNJb0lpTm1abVptWm1ZaUtUc0tJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRGQnBlR1ZzVW1GMGFXOG9jR2w0Wld4U1lYUnBiekVwT3dvZ0lDQWdjbVZ1WkdWeVpYSXVjMlYwVTJsNlpTaDNhV1IwYUNBdklIQnBlR1ZzVW1GMGFXOHhMQ0JvWldsbmFIUWdMeUJ3YVhobGJGSmhkR2x2TVNrN0NpQWdJQ0JqYjI1emRDQnRiM1Z6WlY5allXeHNZbUZqYXlBOUlDaDRMQ0I1S1QwK1kyOXRiUzV1YjNScFpua29ld29nSUNBZ0lDQWdJQ0FnSUNCdGIzVnpaWEJ2YzJsMGFXOXVPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVFvZ0lDQWdJQ0FnSUNBZ0lDQmRDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQmpiMjV6ZENCdWIzUnBabmxmYlc5MWMyVmZkR2h5YjNSMGJHVmtJRDBnZEdoeWIzUjBiR1ZmWm5WdVkzUnBiMjRvYlc5MWMyVmZZMkZzYkdKaFkyc3NJRFF3S1RzS0lDQWdJR1oxYm1OMGFXOXVJRzF2ZFhObGJXOTJaU2hsZG1WdWRDa2dld29nSUNBZ0lDQWdJSFpoY2lCeVpXTjBJRDBnWTJGdWRtRnpMbWRsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENncE93b2dJQ0FnSUNBZ0lIWmhjaUI0SUQwZ0tHVjJaVzUwTG1Oc2FXVnVkRmdnTFNCeVpXTjBMbXhsWm5RcElDb2djR2w0Wld4U1lYUnBiekU3Q2lBZ0lDQWdJQ0FnZG1GeUlIa2dQU0FvWlhabGJuUXVZMnhwWlc1MFdTQXRJSEpsWTNRdWRHOXdLU0FxSUhCcGVHVnNVbUYwYVc4eE93b2dJQ0FnSUNBZ0lHNXZkR2xtZVY5dGIzVnpaVjkwYUhKdmRIUnNaV1FvZUN3Z2VTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sT3dvZ0lDQWdmUW9nSUNBZ1kyRnVkbUZ6TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW0xdmRYTmxiVzkyWlNJc0lHMXZkWE5sYlc5MlpTazdDaUFnSUNCbWRXNWpkR2x2YmlCdGIzVnpaV1J2ZDI0b1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUcxdmRYTmxaRzkzYmpvZ1pYWmxiblF1WW5WMGRHOXVjd29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUc0tJQ0FnSUgwS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnRiM1Z6WldSdmQyNGlMQ0J0YjNWelpXUnZkMjRwT3dvZ0lDQWdablZ1WTNScGIyNGdiVzkxYzJWMWNDaGxkbVZ1ZENrZ2V3b2dJQ0FnSUNBZ0lHTnZiVzB1Ym05MGFXWjVLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXOTFjMlYxY0RvZ1pYWmxiblF1WW5WMGRHOXVjd29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUc0tJQ0FnSUgwS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnRiM1Z6WlhWd0lpd2diVzkxYzJWMWNDazdDaUFnSUNCbWRXNWpkR2x2YmlCM2FHVmxiQ2hsZG1WdWRDa2dld29nSUNBZ0lDQWdJR052YlcwdWJtOTBhV1o1S0hzS0lDQWdJQ0FnSUNBZ0lDQWdjMk55YjJ4c09pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxkbVZ1ZEM1a1pXeDBZVmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F0WlhabGJuUXVaR1ZzZEdGWkNpQWdJQ0FnSUNBZ0lDQWdJRjBLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCbGRtVnVkQzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQm1ZV3h6WlRzS0lDQWdJSDBLSUNBZ0lHTmhiblpoY3k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKM2FHVmxiQ0lzSUhkb1pXVnNLVHNLSUNBZ0lHWjFibU4wYVc5dUlHdGxlV1J2ZDI0b1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUd0bGVXUnZkMjQ2SUdWMlpXNTBMbU52WkdVS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3Q2lBZ0lDQjlDaUFnSUNCallXNTJZWE11WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYTJWNVpHOTNiaUlzSUd0bGVXUnZkMjRwT3dvZ0lDQWdablZ1WTNScGIyNGdhMlY1ZFhBb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUd0bGVYVndPaUJsZG1WdWRDNWpiMlJsQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaaGJITmxPd29nSUNBZ2ZRb2dJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbXRsZVhWd0lpd2dhMlY1ZFhBcE93b2dJQ0FnWm5WdVkzUnBiMjRnWTI5dWRHVjRkRzFsYm5Vb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUd0bGVYVndPaUFpWkdWc1pYUmxYMnRsZVhNaUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sT3dvZ0lDQWdmUW9nSUNBZ1kyRnVkbUZ6TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1OdmJuUmxlSFJ0Wlc1MUlpd2dLR1VwUFQ1bExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrcE93b2dJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVp2WTNWemIzVjBJaXdnWTI5dWRHVjRkRzFsYm5VcE93b2dJQ0FnWm5WdVkzUnBiMjRnY21WemFYcGxYMk5oYkd4aVlXTnJLQ2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR0p2WkhsVGRIbHNaU0E5SUhkcGJtUnZkeTVuWlhSRGIyMXdkWFJsWkZOMGVXeGxLR1J2WTNWdFpXNTBMbUp2WkhrcE93b2dJQ0FnSUNBZ0lHTnZibk4wSUhkcFpIUm9YM0JoWkdScGJtY2dQU0J3WVhKelpVbHVkQ2hpYjJSNVUzUjViR1V1Y0dGa1pHbHVaMHhsWm5Rc0lERXdLU0FySUhCaGNuTmxTVzUwS0dKdlpIbFRkSGxzWlM1d1lXUmthVzVuVW1sbmFIUXNJREV3S1NBcklIQmhjbk5sU1c1MEtHSnZaSGxUZEhsc1pTNXRZWEpuYVc1TVpXWjBMQ0F4TUNrZ0t5QndZWEp6WlVsdWRDaGliMlI1VTNSNWJHVXViV0Z5WjJsdVVtbG5hSFFzSURFd0tUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCb1pXbG5hSFJmY0dGa1pHbHVaeUE5SUhCaGNuTmxTVzUwS0dKdlpIbFRkSGxzWlM1d1lXUmthVzVuVkc5d0xDQXhNQ2tnS3lCd1lYSnpaVWx1ZENoaWIyUjVVM1I1YkdVdWNHRmtaR2x1WjBKdmRIUnZiU3dnTVRBcElDc2djR0Z5YzJWSmJuUW9ZbTlrZVZOMGVXeGxMbTFoY21kcGJsUnZjQ3dnTVRBcElDc2djR0Z5YzJWSmJuUW9ZbTlrZVZOMGVXeGxMbTFoY21kcGJrSnZkSFJ2YlN3Z01UQXBPd29nSUNBZ0lDQWdJR052Ym5OMElIZHBaSFJvSUQwZ0tIZHBibVJ2ZHk1cGJtNWxjbGRwWkhSb0lDMGdkMmxrZEdoZmNHRmtaR2x1WnlrZ0tpQndhWGhsYkZKaGRHbHZNVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQm9aV2xuYUhRZ1BTQW9kMmx1Wkc5M0xtbHVibVZ5U0dWcFoyaDBJQzBnYUdWcFoyaDBYM0JoWkdScGJtY3BJQ29nY0dsNFpXeFNZWFJwYnpFN0NpQWdJQ0FnSUNBZ1kyOXRiUzV1YjNScFpua29ld29nSUNBZ0lDQWdJQ0FnSUNCeVpYTnBlbVU2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoMENpQWdJQ0FnSUNBZ0lDQWdJRjBLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLSUNBZ0lHbG1JQ2h5WlhOcGVtVmZkRzlmWW05a2VTa2dld29nSUNBZ0lDQWdJR052Ym5OMElISmxjMmw2WlY5allXeHNZbUZqYTE5MGFISnZkSFJzWldRZ1BTQjBhSEp2ZEhSc1pWOW1kVzVqZEdsdmJpaHlaWE5wZW1WZlkyRnNiR0poWTJzc0lERXdNQ2s3Q2lBZ0lDQWdJQ0FnZDJsdVpHOTNMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbkpsYzJsNlpTSXNJQ2hsZG1WdWRDazlQbkpsYzJsNlpWOWpZV3hzWW1GamExOTBhSEp2ZEhSc1pXUW9LU2s3Q2lBZ0lDQWdJQ0FnY21WemFYcGxYMk5oYkd4aVlXTnJYM1JvY205MGRHeGxaQ2dwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhKbGJtUmxjbVZ5T3dwOUNtWjFibU4wYVc5dUlHTnlaV0YwWlY5elkyVnVaU2gzY21Gd2NHVnlMQ0JqWVc1MllYTXNJR05oYm5aaGMxOTNhV1IwYUN3Z2MyTmxibVZ6TENCamIyMXRMQ0IzYVdSMGFDd2dhR1ZwWjJoMExDQjBaWGgwZFhKbFgyRjBiR0Z6WDI5aWN5d2dabkJ6TENCeVpYTnBlbVZmZEc5ZlltOWtlU2tnZXdvZ0lDQWdZMjl1YzNRZ2NtVnVaR1Z5WlhJZ1BTQjBhSEpsWldwelgyMXZaSFZzWlNoallXNTJZWE1zSUdOdmJXMHNJSGRwWkhSb0xDQm9aV2xuYUhRc0lISmxjMmw2WlY5MGIxOWliMlI1S1RzS0lDQWdJRlJGV0ZSVlVrVmZRVlJNUVZOYk1GMGdQU0IwWlhoMGRYSmxYMkYwYkdGelgyOWljenNLSUNBZ0lHbG1JQ2h5Wlc1a1pYSmxjaWtnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR05oYldWeVlTQTlJRzVsZHlCdGIyUXVVR1Z5YzNCbFkzUnBkbVZEWVcxbGNtRW9ORFVzSURFc0lEQXNJREV3TUNrN0NpQWdJQ0FnSUNBZ1kyRnRaWEpoTG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnphWHBsSUQwZ2JtVjNJRzF2WkM1V1pXTjBiM0l5S0NrN0NpQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhJdVoyVjBSSEpoZDJsdVowSjFabVpsY2xOcGVtVW9jMmw2WlNrN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnY0dsamEybHVaMTkwWVhKblpYUWdQU0J1WlhjZ2JXOWtMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBLSE5wZW1VdWVDd2djMmw2WlM1NUtUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCelkzSmxaVzRnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlMQW9nSUNBZ0lDQWdJQ0FnSUNCd2FXTnJhVzVuWDNSaGNtZGxkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnRaWEpoTEFvZ0lDQWdJQ0FnSUNBZ0lDQm1jSE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lHTmhiblpoY3dvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnZEdoeVpXVmZjMk5sYm1VZ1BTQmtaWE5sY21saGJHbDZaVjl6WTJWdVpTaHpZMlZ1WlhNc0lITmpjbVZsYmlrN0NpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29kR2h5WldWZmMyTmxibVVwT3dvZ0lDQWdJQ0FnSUhOMFlYSjBYM0psYm1SbGNteHZiM0FvZEdoeVpXVmZjMk5sYm1VcE93b2dJQ0FnSUNBZ0lHTmhiblpoYzE5M2FXUjBhQzV2Ymlnb2QxOW9LVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCd2FYaGxiRkpoZEdsdklEMGdjbVZ1WkdWeVpYSXVaMlYwVUdsNFpXeFNZWFJwYnlncE93b2dJQ0FnSUNBZ0lDQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSVGFYcGxLSGRmYUZzd1hTQXZJSEJwZUdWc1VtRjBhVzhzSUhkZmFGc3hYU0F2SUhCcGVHVnNVbUYwYVc4cE93b2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0IzWVhKdWFXNW5JRDBnWjJWMFYyVmlSMHhGY25KdmNrMWxjM05oWjJVb0tUc0tJQ0FnSUNBZ0lDQjNjbUZ3Y0dWeUxtRndjR1Z1WkVOb2FXeGtLSGRoY201cGJtY3BPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJSE5sZEY5d2FXTnJhVzVuWDNWdWFXWnZjbTF6S0hOalpXNWxMQ0JzWVhOMFgybGtMQ0J3YVdOcmFXNW5MQ0J3YVdOclpXUmZjR3h2ZEhNc0lIQnNiM1J6TENCcFpGOTBiMTl3Ykc5MEtTQjdDaUFnSUNCelkyVnVaUzVqYUdsc1pISmxiaTVtYjNKRllXTm9LQ2h3Ykc5MExDQnBibVJsZUNrOVBuc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCN0lHMWhkR1Z5YVdGc0lDQjlJRDBnY0d4dmREc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCN0lIVnVhV1p2Y20xeklDQjlJRDBnYldGMFpYSnBZV3c3Q2lBZ0lDQWdJQ0FnYVdZZ0tIQnBZMnRwYm1jcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZFc1cFptOXliWE11YjJKcVpXTjBYMmxrTG5aaGJIVmxJRDBnYkdGemRGOXBaQ0FySUdsdVpHVjRPd29nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3k1d2FXTnJhVzVuTG5aaGJIVmxJRDBnZEhKMVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMFpYSnBZV3d1WW14bGJtUnBibWNnUFNCdGIyUXVUbTlDYkdWdVpHbHVaenNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3k1d2FXTnJhVzVuTG5aaGJIVmxJRDBnWm1Gc2MyVTdDaUFnSUNBZ0lDQWdJQ0FnSUcxaGRHVnlhV0ZzTG1Kc1pXNWthVzVuSUQwZ2JXOWtMazV2Y20xaGJFSnNaVzVrYVc1bk93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnBaQ0E5SUhWdWFXWnZjbTF6TG05aWFtVmpkRjlwWkM1MllXeDFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2xrSUdsdUlIQnBZMnRsWkY5d2JHOTBjeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0d4dmRITXVjSFZ6YUNoYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR3h2ZEN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndhV05yWldSZmNHeHZkSE5iYVdSZENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbGtYM1J2WDNCc2IzUmJhV1JkSUQwZ2NHeHZkRHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwcE93b2dJQ0FnYkdWMElHNWxlSFJmYVdRZ1BTQnNZWE4wWDJsa0lDc2djMk5sYm1VdVkyaHBiR1J5Wlc0dWJHVnVaM1JvT3dvZ0lDQWdjMk5sYm1VdWMyTmxibVZmWTJocGJHUnlaVzR1Wm05eVJXRmphQ2dvYzJObGJtVXBQVDU3Q2lBZ0lDQWdJQ0FnYm1WNGRGOXBaQ0E5SUhObGRGOXdhV05yYVc1blgzVnVhV1p2Y20xektITmpaVzVsTENCdVpYaDBYMmxrTENCd2FXTnJhVzVuTENCd2FXTnJaV1JmY0d4dmRITXNJSEJzYjNSekxDQnBaRjkwYjE5d2JHOTBLVHNLSUNBZ0lIMHBPd29nSUNBZ2NtVjBkWEp1SUc1bGVIUmZhV1E3Q24wS1puVnVZM1JwYjI0Z2NHbGphMTl1WVhScGRtVW9jMk5sYm1Vc0lIZ3NJSGtzSUhjc0lHZ3BJSHNLSUNBZ0lHTnZibk4wSUhzZ2NtVnVaR1Z5WlhJZ0xDQndhV05yYVc1blgzUmhjbWRsZENBZ2ZTQTlJSE5qWlc1bExuTmpjbVZsYmpzS0lDQWdJSEpsYm1SbGNtVnlMbk5sZEZKbGJtUmxjbFJoY21kbGRDaHdhV05yYVc1blgzUmhjbWRsZENrN0NpQWdJQ0J6WlhSZmNHbGphMmx1WjE5MWJtbG1iM0p0Y3loelkyVnVaU3dnTVN3Z2RISjFaU2s3Q2lBZ0lDQnlaVzVrWlhKZmMyTmxibVVvYzJObGJtVXNJSFJ5ZFdVcE93b2dJQ0FnY21WdVpHVnlaWEl1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRzUxYkd3cE93b2dJQ0FnWTI5dWMzUWdibUo1ZEdWeklEMGdkeUFxSUdnZ0tpQTBPd29nSUNBZ1kyOXVjM1FnY0dsNFpXeGZZbmwwWlhNZ1BTQnVaWGNnVldsdWREaEJjbkpoZVNodVlubDBaWE1wT3dvZ0lDQWdjbVZ1WkdWeVpYSXVjbVZoWkZKbGJtUmxjbFJoY21kbGRGQnBlR1ZzY3lod2FXTnJhVzVuWDNSaGNtZGxkQ3dnZUN3Z2VTd2dkeXdnYUN3Z2NHbDRaV3hmWW5sMFpYTXBPd29nSUNBZ1kyOXVjM1FnY0dsamEyVmtYM0JzYjNSeklEMGdlMzA3Q2lBZ0lDQmpiMjV6ZENCd2FXTnJaV1JmY0d4dmRITmZZWEp5WVhrZ1BTQmJYVHNLSUNBZ0lHTnZibk4wSUhKbGFXNTBaWEp3Y21WMFgzWnBaWGNnUFNCdVpYY2dSR0YwWVZacFpYY29jR2w0Wld4ZllubDBaWE11WW5WbVptVnlLVHNLSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREE3SUdrZ1BDQndhWGhsYkY5aWVYUmxjeTVzWlc1bmRHZ2dMeUEwT3lCcEt5c3Bld29nSUNBZ0lDQWdJR052Ym5OMElHbGtJRDBnY21WcGJuUmxjbkJ5WlhSZmRtbGxkeTVuWlhSVmFXNTBNVFlvYVNBcUlEUXBPd29nSUNBZ0lDQWdJR052Ym5OMElHbHVaR1Y0SUQwZ2NtVnBiblJsY25CeVpYUmZkbWxsZHk1blpYUlZhVzUwTVRZb2FTQXFJRFFnS3lBeUtUc0tJQ0FnSUNBZ0lDQndhV05yWldSZmNHeHZkSE5mWVhKeVlYa3VjSFZ6YUNoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUFvZ0lDQWdJQ0FnSUYwcE93b2dJQ0FnSUNBZ0lIQnBZMnRsWkY5d2JHOTBjMXRwWkYwZ1BTQnBibVJsZURzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhCc2IzUnpJRDBnVzEwN0NpQWdJQ0JqYjI1emRDQnBaRjkwYjE5d2JHOTBJRDBnZTMwN0NpQWdJQ0J6WlhSZmNHbGphMmx1WjE5MWJtbG1iM0p0Y3loelkyVnVaU3dnTUN3Z1ptRnNjMlVzSUhCcFkydGxaRjl3Ykc5MGN5d2djR3h2ZEhNc0lHbGtYM1J2WDNCc2IzUXBPd29nSUNBZ1kyOXVjM1FnY0dsamEyVmtYM0JzYjNSelgyMWhkSEpwZUNBOUlIQnBZMnRsWkY5d2JHOTBjMTloY25KaGVTNXRZWEFvS0Z0cFpDd2dhVzVrWlhoZEtUMCtld29nSUNBZ0lDQWdJR052Ym5OMElIQWdQU0JwWkY5MGIxOXdiRzkwVzJsa1hUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0J3SUQ4Z2NDNXdiRzkwWDNWMWFXUWdPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVBb2dJQ0FnSUNBZ0lGMDdDaUFnSUNCOUtUc0tJQ0FnSUdOdmJuTjBJSEJzYjNSZmJXRjBjbWw0SUQwZ2V3b2dJQ0FnSUNBZ0lHUmhkR0U2SUhCcFkydGxaRjl3Ykc5MGMxOXRZWFJ5YVhnc0NpQWdJQ0FnSUNBZ2MybDZaVG9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQjNMQW9nSUNBZ0lDQWdJQ0FnSUNCb0NpQWdJQ0FnSUNBZ1hRb2dJQ0FnZlRzS0lDQWdJSEpsZEhWeWJpQmJDaUFnSUNBZ0lDQWdjR3h2ZEY5dFlYUnlhWGdzQ2lBZ0lDQWdJQ0FnY0d4dmRITUtJQ0FnSUYwN0NuMEtablZ1WTNScGIyNGdjR2xqYTE5amJHOXpaWE4wS0hOalpXNWxMQ0I0ZVN3Z2NtRnVaMlVwSUhzS0lDQWdJR052Ym5OMElIc2djR2xqYTJsdVoxOTBZWEpuWlhRZ0lIMGdQU0J6WTJWdVpTNXpZM0psWlc0N0NpQWdJQ0JqYjI1emRDQjdJSGRwWkhSb0lDd2dhR1ZwWjJoMElDQjlJRDBnY0dsamEybHVaMTkwWVhKblpYUTdDaUFnSUNCcFppQW9JU2d4TGpBZ1BEMGdlSGxiTUYwZ1BEMGdkMmxrZEdnZ0ppWWdNUzR3SUR3OUlIaDVXekZkSUR3OUlHaGxhV2RvZENrcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0J1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnWFRzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhnd0lEMGdUV0YwYUM1dFlYZ29NU3dnZUhsYk1GMGdMU0J5WVc1blpTazdDaUFnSUNCamIyNXpkQ0I1TUNBOUlFMWhkR2d1YldGNEtERXNJSGg1V3pGZElDMGdjbUZ1WjJVcE93b2dJQ0FnWTI5dWMzUWdlREVnUFNCTllYUm9MbTFwYmloM2FXUjBhQ3dnVFdGMGFDNW1iRzl2Y2loNGVWc3dYU0FySUhKaGJtZGxLU2s3Q2lBZ0lDQmpiMjV6ZENCNU1TQTlJRTFoZEdndWJXbHVLR2hsYVdkb2RDd2dUV0YwYUM1bWJHOXZjaWg0ZVZzeFhTQXJJSEpoYm1kbEtTazdDaUFnSUNCamIyNXpkQ0JrZUNBOUlIZ3hJQzBnZURBN0NpQWdJQ0JqYjI1emRDQmtlU0E5SUhreElDMGdlVEE3Q2lBZ0lDQmpiMjV6ZENCYmNHeHZkRjlrWVhSaExDQmZYU0E5SUhCcFkydGZibUYwYVhabEtITmpaVzVsTENCNE1Dd2dlVEFzSUdSNExDQmtlU2s3Q2lBZ0lDQmpiMjV6ZENCd2JHOTBYMjFoZEhKcGVDQTlJSEJzYjNSZlpHRjBZUzVrWVhSaE93b2dJQ0FnYkdWMElHMXBibDlrYVhOMElEMGdjbUZ1WjJVZ1hpQXlPd29nSUNBZ2JHVjBJSE5sYkdWamRHbHZiaUE5SUZzS0lDQWdJQ0FnSUNCdWRXeHNMQW9nSUNBZ0lDQWdJREFLSUNBZ0lGMDdDaUFnSUNCamIyNXpkQ0I0SUQwZ2VIbGJNRjBnS3lBeElDMGdlREE3Q2lBZ0lDQmpiMjV6ZENCNUlEMGdlSGxiTVYwZ0t5QXhJQzBnZVRBN0NpQWdJQ0JzWlhRZ2NHbHVaR1Y0SUQwZ01Ec0tJQ0FnSUdadmNpaHNaWFFnYVNBOUlERTdJR2tnUEQwZ1pIZzdJR2tyS3lsN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcUlEMGdNVHNnYWlBOFBTQmtlRHNnYWlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaQ0E5SUhnZ0xTQnBJRjRnTWlBcklDaDVJQzBnYWlrZ1hpQXlPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JiY0d4dmRGOTFkV2xrTENCcGJtUmxlRjBnUFNCd2JHOTBYMjFoZEhKcGVGdHdhVzVrWlhoZE93b2dJQ0FnSUNBZ0lDQWdJQ0J3YVc1a1pYZ2dQU0J3YVc1a1pYZ2dLeUF4T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWkNBOElHMXBibDlrYVhOMElDWW1JSEJzYjNSZmRYVnBaQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldsdVgyUnBjM1FnUFNCa093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyVnNaV04wYVc5dUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCc2IzUmZkWFZwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWFRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJ6Wld4bFkzUnBiMjQ3Q24wS1puVnVZM1JwYjI0Z2NHbGphMTl6YjNKMFpXUW9jMk5sYm1Vc0lIaDVMQ0J5WVc1blpTa2dld29nSUNBZ1kyOXVjM1FnZXlCd2FXTnJhVzVuWDNSaGNtZGxkQ0FnZlNBOUlITmpaVzVsTG5OamNtVmxianNLSUNBZ0lHTnZibk4wSUhzZ2QybGtkR2dnTENCb1pXbG5hSFFnSUgwZ1BTQndhV05yYVc1blgzUmhjbWRsZERzS0lDQWdJR2xtSUNnaEtERXVNQ0E4UFNCNGVWc3dYU0E4UFNCM2FXUjBhQ0FtSmlBeExqQWdQRDBnZUhsYk1WMGdQRDBnYUdWcFoyaDBLU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnZlFvZ0lDQWdZMjl1YzNRZ2VEQWdQU0JOWVhSb0xtMWhlQ2d4TENCNGVWc3dYU0F0SUhKaGJtZGxLVHNLSUNBZ0lHTnZibk4wSUhrd0lEMGdUV0YwYUM1dFlYZ29NU3dnZUhsYk1WMGdMU0J5WVc1blpTazdDaUFnSUNCamIyNXpkQ0I0TVNBOUlFMWhkR2d1YldsdUtIZHBaSFJvTENCTllYUm9MbVpzYjI5eUtIaDVXekJkSUNzZ2NtRnVaMlVwS1RzS0lDQWdJR052Ym5OMElIa3hJRDBnVFdGMGFDNXRhVzRvYUdWcFoyaDBMQ0JOWVhSb0xtWnNiMjl5S0hoNVd6RmRJQ3NnY21GdVoyVXBLVHNLSUNBZ0lHTnZibk4wSUdSNElEMGdlREVnTFNCNE1Ec0tJQ0FnSUdOdmJuTjBJR1I1SUQwZ2VURWdMU0I1TURzS0lDQWdJR052Ym5OMElGdHdiRzkwWDJSaGRHRXNJSE5sYkdWamRHVmtYU0E5SUhCcFkydGZibUYwYVhabEtITmpaVzVsTENCNE1Dd2dlVEFzSUdSNExDQmtlU2s3Q2lBZ0lDQnBaaUFvYzJWc1pXTjBaV1F1YkdWdVozUm9JRDA5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJSEJzYjNSZmJXRjBjbWw0SUQwZ2NHeHZkRjlrWVhSaExtUmhkR0U3Q2lBZ0lDQmpiMjV6ZENCa2FYTjBZVzVqWlhNZ1BTQnpaV3hsWTNSbFpDNXRZWEFvS0hncFBUNXlZVzVuWlNCZUlESXBPd29nSUNBZ1kyOXVjM1FnZUNBOUlIaDVXekJkSUNzZ01TQXRJSGd3T3dvZ0lDQWdZMjl1YzNRZ2VTQTlJSGg1V3pGZElDc2dNU0F0SUhrd093b2dJQ0FnYkdWMElIQnBibVJsZUNBOUlEQTdDaUFnSUNCbWIzSW9iR1YwSUdrZ1BTQXhPeUJwSUR3OUlHUjRPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FpQTlJREU3SUdvZ1BEMGdaSGc3SUdvckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR1FnUFNCNElDMGdhU0JlSURJZ0t5QW9lU0F0SUdvcElGNGdNanNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnVzNCc2IzUmZkWFZwWkN3Z2FXNWtaWGhkSUQwZ2NHeHZkRjl0WVhSeWFYaGJjR2x1WkdWNFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnY0dsdVpHVjRJRDBnY0dsdVpHVjRJQ3NnTVRzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2NHeHZkRjlwYm1SbGVDQTlJSE5sYkdWamRHVmtMbVpwYm1SSmJtUmxlQ2dvZUNrOVBuaGJNRjB1Y0d4dmRGOTFkV2xrSUQwOUlIQnNiM1JmZFhWcFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdiRzkwWDJsdVpHVjRJRDQ5SURBZ0ppWWdaQ0E4SUdScGMzUmhibU5sYzF0d2JHOTBYMmx1WkdWNFhTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVnpXM0JzYjNSZmFXNWtaWGhkSUQwZ1pEc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhOdmNuUmxaRjlwYm1ScFkyVnpJRDBnUVhKeVlYa3Vabkp2YlNoQmNuSmhlU2hrYVhOMFlXNWpaWE11YkdWdVozUm9LUzVyWlhsektDa3BMbk52Y25Rb0tHRXNJR0lwUFQ1a2FYTjBZVzVqWlhOYllWMGdQQ0JrYVhOMFlXNWpaWE5iWWwwZ1B5QXRNU0E2SUdScGMzUmhibU5sYzF0aVhTQThJR1JwYzNSaGJtTmxjMXRoWFNCOElEQXBPd29nSUNBZ2NtVjBkWEp1SUhOdmNuUmxaRjlwYm1ScFkyVnpMbTFoY0Nnb2FXUjRLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRnR3Ykc5MExDQnBibVJsZUYwZ1BTQnpaV3hsWTNSbFpGdHBaSGhkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnNiM1F1Y0d4dmRGOTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUFvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0I5S1RzS2ZRcG1kVzVqZEdsdmJpQndhV05yWDI1aGRHbDJaVjkxZFdsa0tITmpaVzVsTENCNExDQjVMQ0IzTENCb0tTQjdDaUFnSUNCamIyNXpkQ0JiWHl3Z2NHbGphMlZrWDNCc2IzUnpYU0E5SUhCcFkydGZibUYwYVhabEtITmpaVzVsTENCNExDQjVMQ0IzTENCb0tUc0tJQ0FnSUhKbGRIVnliaUJ3YVdOclpXUmZjR3h2ZEhNdWJXRndLQ2hiY0N3Z2FXNWtaWGhkS1QwK1d3b2dJQ0FnSUNBZ0lDQWdJQ0J3TG5Cc2IzUmZkWFZwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnS0lDQWdJQ0FnSUNCZEtUc0tmUXBtZFc1amRHbHZiaUJ3YVdOclgyNWhkR2wyWlY5dFlYUnlhWGdvYzJObGJtVXNJSGdzSUhrc0lIY3NJR2dwSUhzS0lDQWdJR052Ym5OMElGdHRZWFJ5YVhnc0lGOWRJRDBnY0dsamExOXVZWFJwZG1Vb2MyTmxibVVzSUhnc0lIa3NJSGNzSUdncE93b2dJQ0FnY21WMGRYSnVJRzFoZEhKcGVEc0tmUXBtZFc1amRHbHZiaUJ5WldkcGMzUmxjbDl3YjNCMWNDaHdiM0IxY0N3Z2MyTmxibVVzSUhCc2IzUnpYM1J2WDNCcFkyc3NJR05oYkd4aVlXTnJLU0I3Q2lBZ0lDQnBaaUFvSVhOalpXNWxJSHg4SUNGelkyVnVaUzV6WTNKbFpXNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNCOUNpQWdJQ0JqYjI1emRDQjdJR05oYm5aaGN5QWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpXUnZkMjRpTENBb1pYWmxiblFwUFQ1N0NpQWdJQ0FnSUNBZ2FXWWdLQ0Z3YjNCMWNDNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9Jbk5vYjNjaUtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCd2IzQjFjQzVqYkdGemMweHBjM1F1WVdSa0tDSnphRzkzSWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIQnZjSFZ3TG5OMGVXeGxMbXhsWm5RZ1BTQmxkbVZ1ZEM1d1lXZGxXQ0FySUNKd2VDSTdDaUFnSUNBZ0lDQWdjRzl3ZFhBdWMzUjViR1V1ZEc5d0lEMGdaWFpsYm5RdWNHRm5aVmtnS3lBaWNIZ2lPd29nSUNBZ0lDQWdJR052Ym5OMElGdDRMQ0I1WFNBOUlHVjJaVzUwTW5OalpXNWxYM0JwZUdWc0tITmpaVzVsTENCbGRtVnVkQ2s3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXMThzSUhCcFkydHpYU0E5SUhCcFkydGZibUYwYVhabEtITmpaVzVsTENCNExDQjVMQ0F4TENBeEtUc0tJQ0FnSUNBZ0lDQnBaaUFvY0dsamEzTXViR1Z1WjNSb0lEMDlJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1czQnNiM1FzSUdsdVpHVjRYU0E5SUhCcFkydHpXekJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0d4dmRITmZkRzlmY0dsamF5NW9ZWE1vY0d4dmRDNXdiRzkwWDNWMWFXUXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnlaWE4xYkhRZ1BTQmpZV3hzWW1GamF5aHdiRzkwTENCcGJtUmxlQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUhKbGMzVnNkQ0E5UFQwZ0luTjBjbWx1WnlJZ2ZId2djbVZ6ZFd4MElHbHVjM1JoYm1ObGIyWWdVM1J5YVc1bktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0c5d2RYQXVhVzV1WlhKVVpYaDBJRDBnY21WemRXeDBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjNCMWNDNXBibTVsY2toVVRVd2dQU0J5WlhOMWJIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQndiM0IxY0M1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NKemFHOTNJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU2s3Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWEyVjVkWEFpTENBb1pYWmxiblFwUFQ1N0NpQWdJQ0FnSUNBZ2FXWWdLR1YyWlc1MExtdGxlU0E5UFQwZ0lrVnpZMkZ3WlNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY0c5d2RYQXVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ2ljMmh2ZHlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwcE93cDlDbmRwYm1SdmR5NVhSMHdnUFNCN0NpQWdJQ0JrWlhObGNtbGhiR2w2WlY5elkyVnVaU3dLSUNBZ0lIUm9jbVZsYW5OZmJXOWtkV3hsTEFvZ0lDQWdjM1JoY25SZmNtVnVaR1Z5Ykc5dmNDd0tJQ0FnSUdSbGJHVjBaVjl3Ykc5MGN5d0tJQ0FnSUdsdWMyVnlkRjl3Ykc5MExBb2dJQ0FnWm1sdVpGOXdiRzkwY3l3S0lDQWdJR1JsYkdWMFpWOXpZMlZ1WlN3S0lDQWdJR1pwYm1SZmMyTmxibVVzQ2lBZ0lDQnpZMlZ1WlY5allXTm9aU3dLSUNBZ0lIQnNiM1JmWTJGamFHVXNDaUFnSUNCa1pXeGxkR1ZmYzJObGJtVnpMQW9nSUNBZ1kzSmxZWFJsWDNOalpXNWxMQW9nSUNBZ1pYWmxiblF5YzJObGJtVmZjR2w0Wld3c0NpQWdJQ0J2Ymw5dVpYaDBYMmx1YzJWeWRDd0tJQ0FnSUhKbFoybHpkR1Z5WDNCdmNIVndMQW9nSUNBZ2NtVnVaR1Z5WDNOalpXNWxDbjA3Q21WNGNHOXlkQ0I3SUdSbGMyVnlhV0ZzYVhwbFgzTmpaVzVsSUdGeklHUmxjMlZ5YVdGc2FYcGxYM05qWlc1bExDQjBhSEpsWldwelgyMXZaSFZzWlNCaGN5QjBhSEpsWldwelgyMXZaSFZzWlN3Z2MzUmhjblJmY21WdVpHVnliRzl2Y0NCaGN5QnpkR0Z5ZEY5eVpXNWtaWEpzYjI5d0xDQmtaV3hsZEdWZmNHeHZkSE1nWVhNZ1pHVnNaWFJsWDNCc2IzUnpMQ0JwYm5ObGNuUmZjR3h2ZENCaGN5QnBibk5sY25SZmNHeHZkQ3dnWm1sdVpGOXdiRzkwY3lCaGN5Qm1hVzVrWDNCc2IzUnpMQ0JrWld4bGRHVmZjMk5sYm1VZ1lYTWdaR1ZzWlhSbFgzTmpaVzVsTENCbWFXNWtYM05qWlc1bElHRnpJR1pwYm1SZmMyTmxibVVzSUhOalpXNWxYMk5oWTJobElHRnpJSE5qWlc1bFgyTmhZMmhsTENCd2JHOTBYMk5oWTJobElHRnpJSEJzYjNSZlkyRmphR1VzSUdSbGJHVjBaVjl6WTJWdVpYTWdZWE1nWkdWc1pYUmxYM05qWlc1bGN5d2dZM0psWVhSbFgzTmpaVzVsSUdGeklHTnlaV0YwWlY5elkyVnVaU3dnWlhabGJuUXljMk5sYm1WZmNHbDRaV3dnWVhNZ1pYWmxiblF5YzJObGJtVmZjR2w0Wld3c0lHOXVYMjVsZUhSZmFXNXpaWEowSUdGeklHOXVYMjVsZUhSZmFXNXpaWEowSUgwN0NtVjRjRzl5ZENCN0lISmxibVJsY2w5elkyVnVaU0JoY3lCeVpXNWtaWEpmYzJObGJtVWdmVHNLWlhod2IzSjBJSHNnY0dsamExOXVZWFJwZG1VZ1lYTWdjR2xqYTE5dVlYUnBkbVVnZlRzS1pYaHdiM0owSUhzZ2NHbGphMTlqYkc5elpYTjBJR0Z6SUhCcFkydGZZMnh2YzJWemRDQjlPd3BsZUhCdmNuUWdleUJ3YVdOclgzTnZjblJsWkNCaGN5QndhV05yWDNOdmNuUmxaQ0I5T3dwbGVIQnZjblFnZXlCd2FXTnJYMjVoZEdsMlpWOTFkV2xrSUdGeklIQnBZMnRmYm1GMGFYWmxYM1YxYVdRZ2ZUc0taWGh3YjNKMElIc2djR2xqYTE5dVlYUnBkbVZmYldGMGNtbDRJR0Z6SUhCcFkydGZibUYwYVhabFgyMWhkSEpwZUNCOU93cGxlSEJ2Y25RZ2V5QnlaV2RwYzNSbGNsOXdiM0IxY0NCaGN5QnlaV2RwYzNSbGNsOXdiM0IxY0NCOU93b0tgOwogICAgICAgICAgICByZXR1cm4gaW1wb3J0KEpTU0VSVkVfSU1QT1JUU1snY2M0YzZhYTZhMWYwNmExYjUwMTNiY2EwMTcwMmYzNmExODRjMDQzOS13Z2xtYWtpZS5qcyddKTsKICAgICAgICB9KSgpLnRoZW4oV0dMID0+IHsKICAgIFdHTC5jcmVhdGVfc2NlbmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSI5Il0nKSwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSIxMCJdJyksIF9fbG9va3VwX2ludGVycG9sYXRlZCgnMjYwMjIzMzIzNDMwNjg1NzI3MScpLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzE2MDc0MDM3OTIwNTE3Nzg4MTAnKSwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCc1NjMxNTcyNjgyNjMxODYyNzY3JyksIDgwMCwgNjAwLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzQxMDg5MzkxNDgxMTM0Mzc3MTYnKSwgMzAuMCwgZmFsc2UpCiAgICBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzg1MDg0MjEyODE1NzQwMTYwMjYnKS5ub3RpZnkodHJ1ZSkKfSkK2UEvaG9tZS9ydW5uZXIvd29yay9NYWtpZS5qbC9NYWtpZS5qbC9XR0xNYWtpZS9zcmMvdGhyZWVfcGxvdC5qbDo1NKhtc2dfdHlwZaEyyAF0a5LHLGqT2SRiMjE1YmJkZS03ZWRkLTQzZjQtOGNmNS01NTEyMWY3YzE5MTaAo3N1YoKncGF5bG9hZMgBLGaTgbMzMzY0NDA0MTUxNjgyODgxMzg3xxVotDEwMzE4NjAxNDEwNTA0NTMyODYx2b4oKG5vZGUpID0+IHsKICAgIG5vZGVbJ29uaW5wdXQnXSA9IChldmVudCk9PiB7CiAgICBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzMzNjQ0MDQxNTE2ODI4ODEzODcnKS5ub3RpZnkocGFyc2VJbnQoZXZlbnQuc3JjRWxlbWVudC52YWx1ZSkpCn0KfSkoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSI3Il0nKSk72TwvaG9tZS9ydW5uZXIvLmp1bGlhL3BhY2thZ2VzL0pTU2VydmUvdHVERFkvc3JjL3dpZGdldHMuamw6NjaobXNnX3R5cGWhMqhtc2dfdHlwZaE5yBV8a5LHLGqT2SRiMjE1YmJkZS03ZWRkLTQzZjQtOGNmNS01NTEyMWY3YzE5MTaAo3N1YoKncGF5bG9hZMgVNGaTgbM4NjQyMTg4NDk3MzAyNDA0NzY4iqEzlMena5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWSSpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAEBAAACAP6JpZLQxMzg0OTcyOTQ0NTA0NjI0NzI3Oahtc2dfdHlwZaEwx11rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZAOiaWSzODc5MDAwNDUxMjQzMTE2NTA2Nqhtc2dfdHlwZaEwx15rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZKEzomlkszY4OTMyMTc3Mzg1ODgwMjY1MDiobXNnX3R5cGWhMMdea5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWShM6JpZLM1NzMxMDU1MTUzOTQwMTE4MDg3qG1zZ190eXBloTChNJTHp2uSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAQAAAgD+iaWS0MTM4NDk3Mjk0NDUwNDYyNDcyNzmobXNnX3R5cGWhMMdda5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWQEomlkszg3OTAwMDQ1MTI0MzExNjUwNjaobXNnX3R5cGWhMMdea5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWShNKJpZLM2ODkzMjE3NzM4NTg4MDI2NTA4qG1zZ190eXBloTDHXmuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkoTSiaWSzNTczMTA1NTE1Mzk0MDExODA4N6htc2dfdHlwZaEwoTGUx6drksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAIA/omlktDEzODQ5NzI5NDQ1MDQ2MjQ3Mjc5qG1zZ190eXBloTDHXWuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkAaJpZLM4NzkwMDA0NTEyNDMxMTY1MDY2qG1zZ190eXBloTDHXmuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkoTGiaWSzNjg5MzIxNzczODU4ODAyNjUwOKhtc2dfdHlwZaEwx15rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZKExomlkszU3MzEwNTUxNTM5NDAxMTgwODeobXNnX3R5cGWhMKE1lMena5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWSSpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAKBAAACAP6JpZLQxMzg0OTcyOTQ0NTA0NjI0NzI3Oahtc2dfdHlwZaEwx11rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZAWiaWSzODc5MDAwNDUxMjQzMTE2NTA2Nqhtc2dfdHlwZaEwx15rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZKE1omlkszY4OTMyMTc3Mzg1ODgwMjY1MDiobXNnX3R5cGWhMMdea5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWShNaJpZLM1NzMxMDU1MTUzOTQwMTE4MDg3qG1zZ190eXBloTChMpTHp2uSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAQAAAgD+iaWS0MTM4NDk3Mjk0NDUwNDYyNDcyNzmobXNnX3R5cGWhMMdda5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWQComlkszg3OTAwMDQ1MTI0MzExNjUwNjaobXNnX3R5cGWhMMdea5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWShMqJpZLM2ODkzMjE3NzM4NTg4MDI2NTA4qG1zZ190eXBloTDHXmuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkoTKiaWSzNTczMTA1NTE1Mzk0MDExODA4N6htc2dfdHlwZaEwoTaUx6drksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAwEAAAIA/omlktDEzODQ5NzI5NDQ1MDQ2MjQ3Mjc5qG1zZ190eXBloTDHXWuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkBqJpZLM4NzkwMDA0NTEyNDMxMTY1MDY2qG1zZ190eXBloTDHXmuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkoTaiaWSzNjg5MzIxNzczODU4ODAyNjUwOKhtc2dfdHlwZaEwx15rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZKE2omlkszU3MzEwNTUxNTM5NDAxMTgwODeobXNnX3R5cGWhMKE3lMena5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWSSpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAOBAAACAP6JpZLQxMzg0OTcyOTQ0NTA0NjI0NzI3Oahtc2dfdHlwZaEwx11rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZAeiaWSzODc5MDAwNDUxMjQzMTE2NTA2Nqhtc2dfdHlwZaEwx15rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZKE3omlkszY4OTMyMTc3Mzg1ODgwMjY1MDiobXNnX3R5cGWhMMdea5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWShN6JpZLM1NzMxMDU1MTUzOTQwMTE4MDg3qG1zZ190eXBloTCiMTCUx6drksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/omlktDEzODQ5NzI5NDQ1MDQ2MjQ3Mjc5qG1zZ190eXBloTDHXWuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkCqJpZLM4NzkwMDA0NTEyNDMxMTY1MDY2qG1zZ190eXBloTDHX2uSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkojEwomlkszY4OTMyMTc3Mzg1ODgwMjY1MDiobXNnX3R5cGWhMMdfa5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWSiMTCiaWSzNTczMTA1NTE1Mzk0MDExODA4N6htc2dfdHlwZaEwoTmUx6drksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAEEEAAIA/omlktDEzODQ5NzI5NDQ1MDQ2MjQ3Mjc5qG1zZ190eXBloTDHXWuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkCaJpZLM4NzkwMDA0NTEyNDMxMTY1MDY2qG1zZ190eXBloTDHXmuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290g6dwYXlsb2FkoTmiaWSzNjg5MzIxNzczODU4ODAyNjUwOKhtc2dfdHlwZaEwx15rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZKE5omlkszU3MzEwNTUxNTM5NDAxMTgwODeobXNnX3R5cGWhMKE4lMena5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWSSpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAABBAACAP6JpZLQxMzg0OTcyOTQ0NTA0NjI0NzI3Oahtc2dfdHlwZaEwx11rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZAiiaWSzODc5MDAwNDUxMjQzMTE2NTA2Nqhtc2dfdHlwZaEwx15rksctapPZJGM1ZTkxOTJhLWU3OGItNDhhOS1hNjY5LWJiZmFjOWViOWYxM4Ckcm9vdIOncGF5bG9hZKE4omlkszY4OTMyMTc3Mzg1ODgwMjY1MDiobXNnX3R5cGWhMMdea5LHLWqT2SRjNWU5MTkyYS1lNzhiLTQ4YTktYTY2OS1iYmZhYzllYjlmMTOApHJvb3SDp3BheWxvYWShOKJpZLM1NzMxMDU1MTUzOTQwMTE4MDg3qG1zZ190eXBloTDaAsNKU1NlcnZlLmZldGNoX2JpbmFyeSgnZGF0YTphcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07YmFzZTY0LGtzY3NhcFBaSkdJeU1UVmlZbVJsTFRkbFpHUXRORE5tTkMwNFkyWTFMVFUxTVRJeFpqZGpNVGt4Tm9DamMzVmlrY2NWYUxReE1ETXhPRFl3TVRReE1EVXdORFV6TWpnMk1RPT0nKS50aGVuKGJpbmFyeSA9PiB7CiAgICBjb25zdCBzdGF0ZW1hcCA9IF9fbG9va3VwX2ludGVycG9sYXRlZCgnODY0MjE4ODQ5NzMwMjQwNDc2OCcpCiAgICBjb25zb2xlLmxvZyhzdGF0ZW1hcCkKICAgIGNvbnN0IG9ic2VydmFibGVzID0gSlNTZXJ2ZS5kZWNvZGVfYmluYXJ5KGJpbmFyeSwgZmFsc2UpOwogICAgSlNTZXJ2ZS5vbmFueShvYnNlcnZhYmxlcywgKHN0YXRlcykgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHN0YXRlcykKICAgICAgICAvLyBtZXNzYWdlcyB0byBzZW5kIGZvciB0aGlzIHN0YXRlIG9mIHRoYXQgb2JzZXJ2YWJsZQogICAgICAgIGNvbnN0IG1lc3NhZ2VzID0gc3RhdGVtYXBbc3RhdGVzXQogICAgICAgIC8vIG5vdCBhbGwgc3RhdGVzIHRyaWdnZXIgZXZlbnRzCiAgICAgICAgLy8gc28gc29tZSBzdGF0ZXMgd29uJ3QgaGF2ZSBhbnkgbWVzc2FnZXMgcmVjb3JkZWQKICAgICAgICBpZiAobWVzc2FnZXMpewogICAgICAgICAgICBtZXNzYWdlcy5mb3JFYWNoKEpTU2VydmUucHJvY2Vzc19tZXNzYWdlKQogICAgICAgIH0KICAgIH0pCn0pCtk8L2hvbWUvcnVubmVyLy5qdWxpYS9wYWNrYWdlcy9KU1NlcnZlL3R1RERZL3NyYy9leHBvcnQuamw6MTI2qG1zZ190eXBloTLHRmuSxy1qk9kkYzVlOTE5MmEtZTc4Yi00OGE5LWE2NjktYmJmYWM5ZWI5ZjEzgKRyb290gqdwYXlsb2FkkKhtc2dfdHlwZaE5qG1zZ190eXBloTk=').then(msgs=> JSServe.init_session('b215bbde-7edd-43f4-8cf5-55121f7c1916', msgs, 'sub'));
    })
" type="module"></script>
    <div data-jscall-id="6">z-index: 
      <input step="1" max="10" min="1" data-jscall-id="7" value="1" oninput="" type="range" />
      <span data-jscall-id="8">1</span>
    </div>
    <div style="width: 100%; height: 100%" data-jscall-id="9">
      <canvas style="display: block" data-jscall-id="10" tabindex="0"></canvas>
    </div>
  </div>
</div>~~~
