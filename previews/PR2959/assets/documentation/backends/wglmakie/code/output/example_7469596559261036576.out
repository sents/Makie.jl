~~~
<div id="8904c1cf-57bb-4e47-ac8b-6f9de452661c" data-jscall-id="subsession-application-dom">
  <div>
    <div>
      <script>    window.__define = window.define;
    window.__require = window.require;
    window.define = undefined;
    window.require = undefined;
</script>
      <script src="data:application/javascript;base64,// deno-fmt-ignore-file
// deno-lint-ignore-file
// This code was bundled using `deno bundle` and it's not recommended to edit it manually

var ca = "136", Gy = {
    LEFT: 0,
    MIDDLE: 1,
    RIGHT: 2,
    ROTATE: 0,
    DOLLY: 1,
    PAN: 2
}, Vy = {
    ROTATE: 0,
    PAN: 1,
    DOLLY_PAN: 2,
    DOLLY_ROTATE: 3
}, uu = 0, tl = 1, du = 2, Wy = 3, qy = 0, Hc = 1, fu = 2, ir = 3, Ai = 0, it = 1, Ci = 2, kc = 1, Xy = 2, vn = 0, sr = 1, nl = 2, il = 3, rl = 4, pu = 5, _i = 100, mu = 101, gu = 102, sl = 103, ol = 104, xu = 200, yu = 201, vu = 202, _u = 203, Gc = 204, Vc = 205, Mu = 206, bu = 207, wu = 208, Su = 209, Tu = 210, Eu = 0, Au = 1, Cu = 2, ea = 3, Lu = 4, Ru = 5, Pu = 6, Iu = 7, Vs = 0, Du = 1, Fu = 2, _n = 0, Nu = 1, Bu = 2, zu = 3, Uu = 4, Ou = 5, ha = 300, Bi = 301, zi = 302, Ds = 303, Fs = 304, Pr = 306, Ws = 307, Ns = 1e3, vt = 1001, Bs = 1002, rt = 1003, ta = 1004, Jy = 1004, na = 1005, Yy = 1005, tt = 1006, Wc = 1007, Zy = 1007, Ui = 1008, $y = 1008, rn = 1009, Hu = 1010, ku = 1011, cr = 1012, Gu = 1013, Ps = 1014, nn = 1015, kn = 1016, Vu = 1017, Wu = 1018, qu = 1019, Ti = 1020, Xu = 1021, Gn = 1022, ct = 1023, Ju = 1024, Yu = 1025, Vn = 1026, Li = 1027, Zu = 1028, $u = 1029, ju = 1030, Qu = 1031, Ku = 1032, ed = 1033, al = 33776, ll = 33777, cl = 33778, hl = 33779, ul = 35840, dl = 35841, fl = 35842, pl = 35843, td = 36196, ml = 37492, gl = 37496, nd = 37808, id = 37809, rd = 37810, sd = 37811, od = 37812, ad = 37813, ld = 37814, cd = 37815, hd = 37816, ud = 37817, dd = 37818, fd = 37819, pd = 37820, md = 37821, gd = 36492, xd = 37840, yd = 37841, vd = 37842, _d = 37843, Md = 37844, bd = 37845, wd = 37846, Sd = 37847, Td = 37848, Ed = 37849, Ad = 37850, Cd = 37851, Ld = 37852, Rd = 37853, Pd = 2200, Id = 2201, Dd = 2202, zs = 2300, Us = 2301, yo = 2302, Mi = 2400, bi = 2401, Os = 2402, ua = 2500, qc = 2501, Fd = 0, jy = 1, Qy = 2, Nt = 3e3, Oi = 3001, Nd = 3200, Bd = 3201, Hi = 0, zd = 1, Ky = 0, vo = 7680, e0 = 7681, t0 = 7682, n0 = 7683, i0 = 34055, r0 = 34056, s0 = 5386, o0 = 512, a0 = 513, l0 = 514, c0 = 515, h0 = 516, u0 = 517, d0 = 518, Ud = 519, hr = 35044, ur = 35048, f0 = 35040, p0 = 35045, m0 = 35049, g0 = 35041, x0 = 35046, y0 = 35050, v0 = 35042, _0 = "100", xl = "300 es", En = class {
    addEventListener(e, t) {
        this._listeners === void 0 && (this._listeners = {});
        let n = this._listeners;
        n[e] === void 0 && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t);
    }
    hasEventListener(e, t) {
        if (this._listeners === void 0) return !1;
        let n = this._listeners;
        return n[e] !== void 0 && n[e].indexOf(t) !== -1;
    }
    removeEventListener(e, t) {
        if (this._listeners === void 0) return;
        let i = this._listeners[e];
        if (i !== void 0) {
            let r = i.indexOf(t);
            r !== -1 && i.splice(r, 1);
        }
    }
    dispatchEvent(e) {
        if (this._listeners === void 0) return;
        let n = this._listeners[e.type];
        if (n !== void 0) {
            e.target = this;
            let i = n.slice(0);
            for(let r = 0, o = i.length; r < o; r++)i[r].call(this, e);
            e.target = null;
        }
    }
}, pt = [];
for(let s = 0; s < 256; s++)pt[s] = (s < 16 ? "0" : "") + s.toString(16);
var Vr = 1234567, Wn = Math.PI / 180, dr = 180 / Math.PI;
function Et() {
    let s = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0;
    return (pt[s & 255] + pt[s >> 8 & 255] + pt[s >> 16 & 255] + pt[s >> 24 & 255] + "-" + pt[e & 255] + pt[e >> 8 & 255] + "-" + pt[e >> 16 & 15 | 64] + pt[e >> 24 & 255] + "-" + pt[t & 63 | 128] + pt[t >> 8 & 255] + "-" + pt[t >> 16 & 255] + pt[t >> 24 & 255] + pt[n & 255] + pt[n >> 8 & 255] + pt[n >> 16 & 255] + pt[n >> 24 & 255]).toUpperCase();
}
function mt(s, e, t) {
    return Math.max(e, Math.min(t, s));
}
function da(s, e) {
    return (s % e + e) % e;
}
function Od(s, e, t, n, i) {
    return n + (s - e) * (i - n) / (t - e);
}
function Hd(s, e, t) {
    return s !== e ? (t - s) / (e - s) : 0;
}
function or(s, e, t) {
    return (1 - t) * s + t * e;
}
function kd(s, e, t, n) {
    return or(s, e, 1 - Math.exp(-t * n));
}
function Gd(s, e = 1) {
    return e - Math.abs(da(s, e * 2) - e);
}
function Vd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * (3 - 2 * s));
}
function Wd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * s * (s * (s * 6 - 15) + 10));
}
function qd(s, e) {
    return s + Math.floor(Math.random() * (e - s + 1));
}
function Xd(s, e) {
    return s + Math.random() * (e - s);
}
function Jd(s) {
    return s * (.5 - Math.random());
}
function Yd(s) {
    return s !== void 0 && (Vr = s % 2147483647), Vr = Vr * 16807 % 2147483647, (Vr - 1) / 2147483646;
}
function Zd(s) {
    return s * Wn;
}
function $d(s) {
    return s * dr;
}
function ia(s) {
    return (s & s - 1) === 0 && s !== 0;
}
function Xc(s) {
    return Math.pow(2, Math.ceil(Math.log(s) / Math.LN2));
}
function Jc(s) {
    return Math.pow(2, Math.floor(Math.log(s) / Math.LN2));
}
function jd(s, e, t, n, i) {
    let r = Math.cos, o = Math.sin, a = r(t / 2), l = o(t / 2), c = r((e + n) / 2), h = o((e + n) / 2), u = r((e - n) / 2), d = o((e - n) / 2), f = r((n - e) / 2), m = o((n - e) / 2);
    switch(i){
        case "XYX":
            s.set(a * h, l * u, l * d, a * c);
            break;
        case "YZY":
            s.set(l * d, a * h, l * u, a * c);
            break;
        case "ZXZ":
            s.set(l * u, l * d, a * h, a * c);
            break;
        case "XZX":
            s.set(a * h, l * m, l * f, a * c);
            break;
        case "YXY":
            s.set(l * f, a * h, l * m, a * c);
            break;
        case "ZYZ":
            s.set(l * m, l * f, a * h, a * c);
            break;
        default:
            console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
    }
}
var M0 = Object.freeze({
    __proto__: null,
    DEG2RAD: Wn,
    RAD2DEG: dr,
    generateUUID: Et,
    clamp: mt,
    euclideanModulo: da,
    mapLinear: Od,
    inverseLerp: Hd,
    lerp: or,
    damp: kd,
    pingpong: Gd,
    smoothstep: Vd,
    smootherstep: Wd,
    randInt: qd,
    randFloat: Xd,
    randFloatSpread: Jd,
    seededRandom: Yd,
    degToRad: Zd,
    radToDeg: $d,
    isPowerOfTwo: ia,
    ceilPowerOfTwo: Xc,
    floorPowerOfTwo: Jc,
    setQuaternionFromProperEuler: jd
}), X = class {
    constructor(e = 0, t = 0){
        this.x = e, this.y = t;
    }
    get width() {
        return this.x;
    }
    set width(e) {
        this.x = e;
    }
    get height() {
        return this.y;
    }
    set height(e) {
        this.y = e;
    }
    set(e, t) {
        return this.x = e, this.y = t, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this;
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = e.elements;
        return this.x = i[0] * t + i[3] * n + i[6], this.y = i[1] * t + i[4] * n + i[7], this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y;
    }
    cross(e) {
        return this.x * e.y - this.y * e.x;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    angle() {
        return Math.atan2(-this.y, -this.x) + Math.PI;
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y;
        return t * t + n * n;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this;
    }
    rotateAround(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = this.x - e.x, o = this.y - e.y;
        return this.x = r * n - o * i + e.x, this.y = r * i + o * n + e.y, this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y;
    }
};
X.prototype.isVector2 = !0;
var lt = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c) {
        let h = this.elements;
        return h[0] = e, h[1] = i, h[2] = a, h[3] = t, h[4] = r, h[5] = l, h[6] = n, h[7] = o, h[8] = c, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this;
    }
    setFromMatrix4(e) {
        let t = e.elements;
        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[3], l = n[6], c = n[1], h = n[4], u = n[7], d = n[2], f = n[5], m = n[8], x = i[0], v = i[3], g = i[6], p = i[1], _ = i[4], y = i[7], b = i[2], A = i[5], L = i[8];
        return r[0] = o * x + a * p + l * b, r[3] = o * v + a * _ + l * A, r[6] = o * g + a * y + l * L, r[1] = c * x + h * p + u * b, r[4] = c * v + h * _ + u * A, r[7] = c * g + h * y + u * L, r[2] = d * x + f * p + m * b, r[5] = d * v + f * _ + m * A, r[8] = d * g + f * y + m * L, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8];
        return t * o * h - t * a * c - n * r * h + n * a * l + i * r * c - i * o * l;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = h * o - a * c, d = a * l - h * r, f = c * r - o * l, m = t * u + n * d + i * f;
        if (m === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
        let x = 1 / m;
        return e[0] = u * x, e[1] = (i * c - h * n) * x, e[2] = (a * n - i * o) * x, e[3] = d * x, e[4] = (h * t - i * l) * x, e[5] = (i * r - a * t) * x, e[6] = f * x, e[7] = (n * l - c * t) * x, e[8] = (o * t - n * r) * x, this;
    }
    transpose() {
        let e, t = this.elements;
        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
    }
    getNormalMatrix(e) {
        return this.setFromMatrix4(e).invert().transpose();
    }
    transposeIntoArray(e) {
        let t = this.elements;
        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
    }
    setUvTransform(e, t, n, i, r, o, a) {
        let l = Math.cos(r), c = Math.sin(r);
        return this.set(n * l, n * c, -n * (l * o + c * a) + o + e, -i * c, i * l, -i * (-c * o + l * a) + a + t, 0, 0, 1), this;
    }
    scale(e, t) {
        let n = this.elements;
        return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this;
    }
    rotate(e) {
        let t = Math.cos(e), n = Math.sin(e), i = this.elements, r = i[0], o = i[3], a = i[6], l = i[1], c = i[4], h = i[7];
        return i[0] = t * r + n * l, i[3] = t * o + n * c, i[6] = t * a + n * h, i[1] = -n * r + t * l, i[4] = -n * o + t * c, i[7] = -n * a + t * h, this;
    }
    translate(e, t) {
        let n = this.elements;
        return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 9; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 9; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e;
    }
    clone() {
        return new this.constructor().fromArray(this.elements);
    }
};
lt.prototype.isMatrix3 = !0;
function Yc(s) {
    if (s.length === 0) return -1 / 0;
    let e = s[0];
    for(let t = 1, n = s.length; t < n; ++t)s[t] > e && (e = s[t]);
    return e;
}
var Qd = {
    Int8Array,
    Uint8Array,
    Uint8ClampedArray,
    Int16Array,
    Uint16Array,
    Int32Array,
    Uint32Array,
    Float32Array,
    Float64Array
};
function wi(s, e) {
    return new Qd[s](e);
}
function qs(s) {
    return document.createElementNS("http://www.w3.org/1999/xhtml", s);
}
var ti, Yn = class {
    static getDataURL(e) {
        if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
        let t;
        if (e instanceof HTMLCanvasElement) t = e;
        else {
            ti === void 0 && (ti = qs("canvas")), ti.width = e.width, ti.height = e.height;
            let n = ti.getContext("2d");
            e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = ti;
        }
        return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png");
    }
}, Kd = 0, ot = class extends En {
    constructor(e = ot.DEFAULT_IMAGE, t = ot.DEFAULT_MAPPING, n = vt, i = vt, r = tt, o = Ui, a = ct, l = rn, c = 1, h = Nt){
        super();
        Object.defineProperty(this, "id", {
            value: Kd++
        }), this.uuid = Et(), this.name = "", this.image = e, this.mipmaps = [], this.mapping = t, this.wrapS = n, this.wrapT = i, this.magFilter = r, this.minFilter = o, this.anisotropy = c, this.format = a, this.internalFormat = null, this.type = l, this.offset = new X(0, 0), this.repeat = new X(1, 1), this.center = new X(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new lt, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = h, this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = !1;
    }
    updateMatrix() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        if (!t && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
        let n = {
            metadata: {
                version: 4.5,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [
                this.repeat.x,
                this.repeat.y
            ],
            offset: [
                this.offset.x,
                this.offset.y
            ],
            center: [
                this.center.x,
                this.center.y
            ],
            rotation: this.rotation,
            wrap: [
                this.wrapS,
                this.wrapT
            ],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment
        };
        if (this.image !== void 0) {
            let i = this.image;
            if (i.uuid === void 0 && (i.uuid = Et()), !t && e.images[i.uuid] === void 0) {
                let r;
                if (Array.isArray(i)) {
                    r = [];
                    for(let o = 0, a = i.length; o < a; o++)i[o].isDataTexture ? r.push(_o(i[o].image)) : r.push(_o(i[o]));
                } else r = _o(i);
                e.images[i.uuid] = {
                    uuid: i.uuid,
                    url: r
                };
            }
            n.image = i.uuid;
        }
        return JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData), t || (e.textures[this.uuid] = n), n;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    transformUv(e) {
        if (this.mapping !== ha) return e;
        if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch(this.wrapS){
            case Ns:
                e.x = e.x - Math.floor(e.x);
                break;
            case vt:
                e.x = e.x < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
                break;
        }
        if (e.y < 0 || e.y > 1) switch(this.wrapT){
            case Ns:
                e.y = e.y - Math.floor(e.y);
                break;
            case vt:
                e.y = e.y < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                break;
        }
        return this.flipY && (e.y = 1 - e.y), e;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
ot.DEFAULT_IMAGE = void 0;
ot.DEFAULT_MAPPING = ha;
ot.prototype.isTexture = !0;
function _o(s) {
    return typeof HTMLImageElement < "u" && s instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && s instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && s instanceof ImageBitmap ? Yn.getDataURL(s) : s.data ? {
        data: Array.prototype.slice.call(s.data),
        width: s.width,
        height: s.height,
        type: s.data.constructor.name
    } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
var Ve = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this.x = e, this.y = t, this.z = n, this.w = i;
    }
    get width() {
        return this.z;
    }
    set width(e) {
        this.z = e;
    }
    get height() {
        return this.w;
    }
    set height(e) {
        this.w = e;
    }
    set(e, t, n, i) {
        return this.x = e, this.y = t, this.z = n, this.w = i, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this.w = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setW(e) {
        return this.w = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z, this.w);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this.w += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = this.w, o = e.elements;
        return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r, this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r, this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r, this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    setAxisAngleFromQuaternion(e) {
        this.w = 2 * Math.acos(e.w);
        let t = Math.sqrt(1 - e.w * e.w);
        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
    }
    setAxisAngleFromRotationMatrix(e) {
        let t, n, i, r, l = e.elements, c = l[0], h = l[4], u = l[8], d = l[1], f = l[5], m = l[9], x = l[2], v = l[6], g = l[10];
        if (Math.abs(h - d) < .01 && Math.abs(u - x) < .01 && Math.abs(m - v) < .01) {
            if (Math.abs(h + d) < .1 && Math.abs(u + x) < .1 && Math.abs(m + v) < .1 && Math.abs(c + f + g - 3) < .1) return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            let _ = (c + 1) / 2, y = (f + 1) / 2, b = (g + 1) / 2, A = (h + d) / 4, L = (u + x) / 4, I = (m + v) / 4;
            return _ > y && _ > b ? _ < .01 ? (n = 0, i = .707106781, r = .707106781) : (n = Math.sqrt(_), i = A / n, r = L / n) : y > b ? y < .01 ? (n = .707106781, i = 0, r = .707106781) : (i = Math.sqrt(y), n = A / i, r = I / i) : b < .01 ? (n = .707106781, i = .707106781, r = 0) : (r = Math.sqrt(b), n = L / r, i = I / r), this.set(n, i, r, t), this;
        }
        let p = Math.sqrt((v - m) * (v - m) + (u - x) * (u - x) + (d - h) * (d - h));
        return Math.abs(p) < .001 && (p = 1), this.x = (v - m) / p, this.y = (u - x) / p, this.z = (d - h) / p, this.w = Math.acos((c + f + g - 1) / 2), this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z, yield this.w;
    }
};
Ve.prototype.isVector4 = !0;
var At = class extends En {
    constructor(e, t, n = {}){
        super();
        this.width = e, this.height = t, this.depth = 1, this.scissor = new Ve(0, 0, e, t), this.scissorTest = !1, this.viewport = new Ve(0, 0, e, t), this.texture = new ot(void 0, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.isRenderTargetTexture = !0, this.texture.image = {
            width: e,
            height: t,
            depth: 1
        }, this.texture.generateMipmaps = n.generateMipmaps !== void 0 ? n.generateMipmaps : !1, this.texture.internalFormat = n.internalFormat !== void 0 ? n.internalFormat : null, this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : tt, this.depthBuffer = n.depthBuffer !== void 0 ? n.depthBuffer : !0, this.stencilBuffer = n.stencilBuffer !== void 0 ? n.stencilBuffer : !1, this.depthTexture = n.depthTexture !== void 0 ? n.depthTexture : null;
    }
    setTexture(e) {
        e.image = {
            width: this.width,
            height: this.height,
            depth: this.depth
        }, this.texture = e;
    }
    setSize(e, t, n = 1) {
        (this.width !== e || this.height !== t || this.depth !== n) && (this.width = e, this.height = t, this.depth = n, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.image = {
            ...this.texture.image
        }, this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
At.prototype.isWebGLRenderTarget = !0;
var Zc = class extends At {
    constructor(e, t, n){
        super(e, t);
        let i = this.texture;
        this.texture = [];
        for(let r = 0; r < n; r++)this.texture[r] = i.clone();
    }
    setSize(e, t, n = 1) {
        if (this.width !== e || this.height !== t || this.depth !== n) {
            this.width = e, this.height = t, this.depth = n;
            for(let i = 0, r = this.texture.length; i < r; i++)this.texture[i].image.width = e, this.texture[i].image.height = t, this.texture[i].image.depth = n;
            this.dispose();
        }
        return this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t), this;
    }
    copy(e) {
        this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.set(0, 0, this.width, this.height), this.scissor.set(0, 0, this.width, this.height), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this.texture.length = 0;
        for(let t = 0, n = e.texture.length; t < n; t++)this.texture[t] = e.texture[t].clone();
        return this;
    }
};
Zc.prototype.isWebGLMultipleRenderTargets = !0;
var Xs = class extends At {
    constructor(e, t, n = {}){
        super(e, t, n);
        this.samples = 4, this.ignoreDepthForMultisampleCopy = n.ignoreDepth !== void 0 ? n.ignoreDepth : !0, this.useRenderToTexture = n.useRenderToTexture !== void 0 ? n.useRenderToTexture : !1, this.useRenderbuffer = this.useRenderToTexture === !1;
    }
    copy(e) {
        return super.copy.call(this, e), this.samples = e.samples, this.useRenderToTexture = e.useRenderToTexture, this.useRenderbuffer = e.useRenderbuffer, this;
    }
};
Xs.prototype.isWebGLMultisampleRenderTarget = !0;
var gt = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this._x = e, this._y = t, this._z = n, this._w = i;
    }
    static slerp(e, t, n, i) {
        return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."), n.slerpQuaternions(e, t, i);
    }
    static slerpFlat(e, t, n, i, r, o, a) {
        let l = n[i + 0], c = n[i + 1], h = n[i + 2], u = n[i + 3], d = r[o + 0], f = r[o + 1], m = r[o + 2], x = r[o + 3];
        if (a === 0) {
            e[t + 0] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
            return;
        }
        if (a === 1) {
            e[t + 0] = d, e[t + 1] = f, e[t + 2] = m, e[t + 3] = x;
            return;
        }
        if (u !== x || l !== d || c !== f || h !== m) {
            let v = 1 - a, g = l * d + c * f + h * m + u * x, p = g >= 0 ? 1 : -1, _ = 1 - g * g;
            if (_ > Number.EPSILON) {
                let b = Math.sqrt(_), A = Math.atan2(b, g * p);
                v = Math.sin(v * A) / b, a = Math.sin(a * A) / b;
            }
            let y = a * p;
            if (l = l * v + d * y, c = c * v + f * y, h = h * v + m * y, u = u * v + x * y, v === 1 - a) {
                let b = 1 / Math.sqrt(l * l + c * c + h * h + u * u);
                l *= b, c *= b, h *= b, u *= b;
            }
        }
        e[t] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
    }
    static multiplyQuaternionsFlat(e, t, n, i, r, o) {
        let a = n[i], l = n[i + 1], c = n[i + 2], h = n[i + 3], u = r[o], d = r[o + 1], f = r[o + 2], m = r[o + 3];
        return e[t] = a * m + h * u + l * f - c * d, e[t + 1] = l * m + h * d + c * u - a * f, e[t + 2] = c * m + h * f + a * d - l * u, e[t + 3] = h * m - a * u - l * d - c * f, e;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get w() {
        return this._w;
    }
    set w(e) {
        this._w = e, this._onChangeCallback();
    }
    set(e, t, n, i) {
        return this._x = e, this._y = t, this._z = n, this._w = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._w);
    }
    copy(e) {
        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
    }
    setFromEuler(e, t) {
        if (!(e && e.isEuler)) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        let n = e._x, i = e._y, r = e._z, o = e._order, a = Math.cos, l = Math.sin, c = a(n / 2), h = a(i / 2), u = a(r / 2), d = l(n / 2), f = l(i / 2), m = l(r / 2);
        switch(o){
            case "XYZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "YXZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "ZXY":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "ZYX":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "YZX":
                this._x = d * h * u + c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "XZY":
                this._x = d * h * u - c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u + d * f * m;
                break;
            default:
                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o);
        }
        return t !== !1 && this._onChangeCallback(), this;
    }
    setFromAxisAngle(e, t) {
        let n = t / 2, i = Math.sin(n);
        return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e) {
        let t = e.elements, n = t[0], i = t[4], r = t[8], o = t[1], a = t[5], l = t[9], c = t[2], h = t[6], u = t[10], d = n + a + u;
        if (d > 0) {
            let f = .5 / Math.sqrt(d + 1);
            this._w = .25 / f, this._x = (h - l) * f, this._y = (r - c) * f, this._z = (o - i) * f;
        } else if (n > a && n > u) {
            let f = 2 * Math.sqrt(1 + n - a - u);
            this._w = (h - l) / f, this._x = .25 * f, this._y = (i + o) / f, this._z = (r + c) / f;
        } else if (a > u) {
            let f = 2 * Math.sqrt(1 + a - n - u);
            this._w = (r - c) / f, this._x = (i + o) / f, this._y = .25 * f, this._z = (l + h) / f;
        } else {
            let f = 2 * Math.sqrt(1 + u - n - a);
            this._w = (o - i) / f, this._x = (r + c) / f, this._y = (l + h) / f, this._z = .25 * f;
        }
        return this._onChangeCallback(), this;
    }
    setFromUnitVectors(e, t) {
        let n = e.dot(t) + 1;
        return n < Number.EPSILON ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize();
    }
    angleTo(e) {
        return 2 * Math.acos(Math.abs(mt(this.dot(e), -1, 1)));
    }
    rotateTowards(e, t) {
        let n = this.angleTo(e);
        if (n === 0) return this;
        let i = Math.min(1, t / n);
        return this.slerp(e, i), this;
    }
    identity() {
        return this.set(0, 0, 0, 1);
    }
    invert() {
        return this.conjugate();
    }
    conjugate() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
    }
    dot(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
    }
    lengthSq() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    }
    length() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    }
    normalize() {
        let e = this.length();
        return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);
    }
    premultiply(e) {
        return this.multiplyQuaternions(e, this);
    }
    multiplyQuaternions(e, t) {
        let n = e._x, i = e._y, r = e._z, o = e._w, a = t._x, l = t._y, c = t._z, h = t._w;
        return this._x = n * h + o * a + i * c - r * l, this._y = i * h + o * l + r * a - n * c, this._z = r * h + o * c + n * l - i * a, this._w = o * h - n * a - i * l - r * c, this._onChangeCallback(), this;
    }
    slerp(e, t) {
        if (t === 0) return this;
        if (t === 1) return this.copy(e);
        let n = this._x, i = this._y, r = this._z, o = this._w, a = o * e._w + n * e._x + i * e._y + r * e._z;
        if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = n, this._y = i, this._z = r, this;
        let l = 1 - a * a;
        if (l <= Number.EPSILON) {
            let f = 1 - t;
            return this._w = f * o + t * this._w, this._x = f * n + t * this._x, this._y = f * i + t * this._y, this._z = f * r + t * this._z, this.normalize(), this._onChangeCallback(), this;
        }
        let c = Math.sqrt(l), h = Math.atan2(c, a), u = Math.sin((1 - t) * h) / c, d = Math.sin(t * h) / c;
        return this._w = o * u + this._w * d, this._x = n * u + this._x * d, this._y = i * u + this._y * d, this._z = r * u + this._z * d, this._onChangeCallback(), this;
    }
    slerpQuaternions(e, t, n) {
        this.copy(e).slerp(t, n);
    }
    random() {
        let e = Math.random(), t = Math.sqrt(1 - e), n = Math.sqrt(e), i = 2 * Math.PI * Math.random(), r = 2 * Math.PI * Math.random();
        return this.set(t * Math.cos(i), n * Math.sin(r), n * Math.cos(r), t * Math.sin(i));
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
    }
    fromArray(e, t = 0) {
        return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
    }
    fromBufferAttribute(e, t) {
        return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this;
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
gt.prototype.isQuaternion = !0;
var M = class {
    constructor(e = 0, t = 0, n = 0){
        this.x = e, this.y = t, this.z = n;
    }
    set(e, t, n) {
        return n === void 0 && (n = this.z), this.x = e, this.y = t, this.z = n, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this);
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this;
    }
    multiplyVectors(e, t) {
        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
    }
    applyEuler(e) {
        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(yl.setFromEuler(e));
    }
    applyAxisAngle(e, t) {
        return this.applyQuaternion(yl.setFromAxisAngle(e, t));
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this;
    }
    applyNormalMatrix(e) {
        return this.applyMatrix3(e).normalize();
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements, o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o, this;
    }
    applyQuaternion(e) {
        let t = this.x, n = this.y, i = this.z, r = e.x, o = e.y, a = e.z, l = e.w, c = l * t + o * i - a * n, h = l * n + a * t - r * i, u = l * i + r * n - o * t, d = -r * t - o * n - a * i;
        return this.x = c * l + d * -r + h * -a - u * -o, this.y = h * l + d * -o + u * -r - c * -a, this.z = u * l + d * -a + c * -o - h * -r, this;
    }
    project(e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
    }
    unproject(e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
    }
    transformDirection(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize();
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this;
    }
    cross(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e);
    }
    crossVectors(e, t) {
        let n = e.x, i = e.y, r = e.z, o = t.x, a = t.y, l = t.z;
        return this.x = i * l - r * a, this.y = r * o - n * l, this.z = n * a - i * o, this;
    }
    projectOnVector(e) {
        let t = e.lengthSq();
        if (t === 0) return this.set(0, 0, 0);
        let n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
    }
    projectOnPlane(e) {
        return Mo.copy(this).projectOnVector(e), this.sub(Mo);
    }
    reflect(e) {
        return this.sub(Mo.copy(e).multiplyScalar(2 * this.dot(e)));
    }
    angleTo(e) {
        let t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        let n = this.dot(e) / t;
        return Math.acos(mt(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y, i = this.z - e.z;
        return t * t + n * n + i * i;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
    }
    setFromSpherical(e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
    }
    setFromSphericalCoords(e, t, n) {
        let i = Math.sin(t) * e;
        return this.x = i * Math.sin(n), this.y = Math.cos(t) * e, this.z = i * Math.cos(n), this;
    }
    setFromCylindrical(e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
    }
    setFromCylindricalCoords(e, t, n) {
        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this;
    }
    setFromMatrixPosition(e) {
        let t = e.elements;
        return this.x = t[12], this.y = t[13], this.z = t[14], this;
    }
    setFromMatrixScale(e) {
        let t = this.setFromMatrixColumn(e, 0).length(), n = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
        return this.x = t, this.y = n, this.z = i, this;
    }
    setFromMatrixColumn(e, t) {
        return this.fromArray(e.elements, t * 4);
    }
    setFromMatrix3Column(e, t) {
        return this.fromArray(e.elements, t * 3);
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
    }
    randomDirection() {
        let e = (Math.random() - .5) * 2, t = Math.random() * Math.PI * 2, n = Math.sqrt(1 - e ** 2);
        return this.x = n * Math.cos(t), this.y = n * Math.sin(t), this.z = e, this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z;
    }
};
M.prototype.isVector3 = !0;
var Mo = new M, yl = new gt, Lt = class {
    constructor(e = new M(1 / 0, 1 / 0, 1 / 0), t = new M(-1 / 0, -1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromArray(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.length; l < c; l += 3){
            let h = e[l], u = e[l + 1], d = e[l + 2];
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromBufferAttribute(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.count; l < c; l++){
            let h = e.getX(l), u = e.getY(l), d = e.getZ(l);
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ji.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    setFromObject(e) {
        return this.makeEmpty(), this.expandByObject(e);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    expandByObject(e) {
        e.updateWorldMatrix(!1, !1);
        let t = e.geometry;
        t !== void 0 && (t.boundingBox === null && t.computeBoundingBox(), bo.copy(t.boundingBox), bo.applyMatrix4(e.matrixWorld), this.union(bo));
        let n = e.children;
        for(let i = 0, r = n.length; i < r; i++)this.expandByObject(n[i]);
        return this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
    }
    intersectsSphere(e) {
        return this.clampPoint(e.center, Ji), Ji.distanceToSquared(e.center) <= e.radius * e.radius;
    }
    intersectsPlane(e) {
        let t, n;
        return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant;
    }
    intersectsTriangle(e) {
        if (this.isEmpty()) return !1;
        this.getCenter(Yi), Wr.subVectors(this.max, Yi), ni.subVectors(e.a, Yi), ii.subVectors(e.b, Yi), ri.subVectors(e.c, Yi), un.subVectors(ii, ni), dn.subVectors(ri, ii), Pn.subVectors(ni, ri);
        let t = [
            0,
            -un.z,
            un.y,
            0,
            -dn.z,
            dn.y,
            0,
            -Pn.z,
            Pn.y,
            un.z,
            0,
            -un.x,
            dn.z,
            0,
            -dn.x,
            Pn.z,
            0,
            -Pn.x,
            -un.y,
            un.x,
            0,
            -dn.y,
            dn.x,
            0,
            -Pn.y,
            Pn.x,
            0
        ];
        return !wo(t, ni, ii, ri, Wr) || (t = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], !wo(t, ni, ii, ri, Wr)) ? !1 : (qr.crossVectors(un, dn), t = [
            qr.x,
            qr.y,
            qr.z
        ], wo(t, ni, ii, ri, Wr));
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ji.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    getBoundingSphere(e) {
        return this.getCenter(e.center), e.radius = this.getSize(Ji).length() * .5, e;
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    applyMatrix4(e) {
        return this.isEmpty() ? this : ($t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), $t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), $t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), $t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), $t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), $t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), $t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), $t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints($t), this);
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
Lt.prototype.isBox3 = !0;
var $t = [
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M
], Ji = new M, bo = new Lt, ni = new M, ii = new M, ri = new M, un = new M, dn = new M, Pn = new M, Yi = new M, Wr = new M, qr = new M, In = new M;
function wo(s, e, t, n, i) {
    for(let r = 0, o = s.length - 3; r <= o; r += 3){
        In.fromArray(s, r);
        let a = i.x * Math.abs(In.x) + i.y * Math.abs(In.y) + i.z * Math.abs(In.z), l = e.dot(In), c = t.dot(In), h = n.dot(In);
        if (Math.max(-Math.max(l, c, h), Math.min(l, c, h)) > a) return !1;
    }
    return !0;
}
var ef = new Lt, vl = new M, Xr = new M, So = new M, An = class {
    constructor(e = new M, t = -1){
        this.center = e, this.radius = t;
    }
    set(e, t) {
        return this.center.copy(e), this.radius = t, this;
    }
    setFromPoints(e, t) {
        let n = this.center;
        t !== void 0 ? n.copy(t) : ef.setFromPoints(e).getCenter(n);
        let i = 0;
        for(let r = 0, o = e.length; r < o; r++)i = Math.max(i, n.distanceToSquared(e[r]));
        return this.radius = Math.sqrt(i), this;
    }
    copy(e) {
        return this.center.copy(e.center), this.radius = e.radius, this;
    }
    isEmpty() {
        return this.radius < 0;
    }
    makeEmpty() {
        return this.center.set(0, 0, 0), this.radius = -1, this;
    }
    containsPoint(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
    }
    distanceToPoint(e) {
        return e.distanceTo(this.center) - this.radius;
    }
    intersectsSphere(e) {
        let t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
    }
    intersectsBox(e) {
        return e.intersectsSphere(this);
    }
    intersectsPlane(e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
    }
    clampPoint(e, t) {
        let n = this.center.distanceToSquared(e);
        return t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
    }
    getBoundingBox(e) {
        return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
    }
    applyMatrix4(e) {
        return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
    }
    translate(e) {
        return this.center.add(e), this;
    }
    expandByPoint(e) {
        So.subVectors(e, this.center);
        let t = So.lengthSq();
        if (t > this.radius * this.radius) {
            let n = Math.sqrt(t), i = (n - this.radius) * .5;
            this.center.add(So.multiplyScalar(i / n)), this.radius += i;
        }
        return this;
    }
    union(e) {
        return this.center.equals(e.center) === !0 ? Xr.set(0, 0, 1).multiplyScalar(e.radius) : Xr.subVectors(e.center, this.center).normalize().multiplyScalar(e.radius), this.expandByPoint(vl.copy(e.center).add(Xr)), this.expandByPoint(vl.copy(e.center).sub(Xr)), this;
    }
    equals(e) {
        return e.center.equals(this.center) && e.radius === this.radius;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, jt = new M, To = new M, Jr = new M, fn = new M, Eo = new M, Yr = new M, Ao = new M, Cn = class {
    constructor(e = new M, t = new M(0, 0, -1)){
        this.origin = e, this.direction = t;
    }
    set(e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
    }
    copy(e) {
        return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
    }
    at(e, t) {
        return t.copy(this.direction).multiplyScalar(e).add(this.origin);
    }
    lookAt(e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
    }
    recast(e) {
        return this.origin.copy(this.at(e, jt)), this;
    }
    closestPointToPoint(e, t) {
        t.subVectors(e, this.origin);
        let n = t.dot(this.direction);
        return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin);
    }
    distanceToPoint(e) {
        return Math.sqrt(this.distanceSqToPoint(e));
    }
    distanceSqToPoint(e) {
        let t = jt.subVectors(e, this.origin).dot(this.direction);
        return t < 0 ? this.origin.distanceToSquared(e) : (jt.copy(this.direction).multiplyScalar(t).add(this.origin), jt.distanceToSquared(e));
    }
    distanceSqToSegment(e, t, n, i) {
        To.copy(e).add(t).multiplyScalar(.5), Jr.copy(t).sub(e).normalize(), fn.copy(this.origin).sub(To);
        let r = e.distanceTo(t) * .5, o = -this.direction.dot(Jr), a = fn.dot(this.direction), l = -fn.dot(Jr), c = fn.lengthSq(), h = Math.abs(1 - o * o), u, d, f, m;
        if (h > 0) if (u = o * l - a, d = o * a - l, m = r * h, u >= 0) if (d >= -m) if (d <= m) {
            let x = 1 / h;
            u *= x, d *= x, f = u * (u + o * d + 2 * a) + d * (o * u + d + 2 * l) + c;
        } else d = r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d = -r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d <= -m ? (u = Math.max(0, -(-o * r + a)), d = u > 0 ? -r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c) : d <= m ? (u = 0, d = Math.min(Math.max(-r, -l), r), f = d * (d + 2 * l) + c) : (u = Math.max(0, -(o * r + a)), d = u > 0 ? r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c);
        else d = o > 0 ? -r : r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        return n && n.copy(this.direction).multiplyScalar(u).add(this.origin), i && i.copy(Jr).multiplyScalar(d).add(To), f;
    }
    intersectSphere(e, t) {
        jt.subVectors(e.center, this.origin);
        let n = jt.dot(this.direction), i = jt.dot(jt) - n * n, r = e.radius * e.radius;
        if (i > r) return null;
        let o = Math.sqrt(r - i), a = n - o, l = n + o;
        return a < 0 && l < 0 ? null : a < 0 ? this.at(l, t) : this.at(a, t);
    }
    intersectsSphere(e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
    }
    distanceToPlane(e) {
        let t = e.normal.dot(this.direction);
        if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
        let n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
    }
    intersectPlane(e, t) {
        let n = this.distanceToPlane(e);
        return n === null ? null : this.at(n, t);
    }
    intersectsPlane(e) {
        let t = e.distanceToPoint(this.origin);
        return t === 0 || e.normal.dot(this.direction) * t < 0;
    }
    intersectBox(e, t) {
        let n, i, r, o, a, l, c = 1 / this.direction.x, h = 1 / this.direction.y, u = 1 / this.direction.z, d = this.origin;
        return c >= 0 ? (n = (e.min.x - d.x) * c, i = (e.max.x - d.x) * c) : (n = (e.max.x - d.x) * c, i = (e.min.x - d.x) * c), h >= 0 ? (r = (e.min.y - d.y) * h, o = (e.max.y - d.y) * h) : (r = (e.max.y - d.y) * h, o = (e.min.y - d.y) * h), n > o || r > i || ((r > n || n !== n) && (n = r), (o < i || i !== i) && (i = o), u >= 0 ? (a = (e.min.z - d.z) * u, l = (e.max.z - d.z) * u) : (a = (e.max.z - d.z) * u, l = (e.min.z - d.z) * u), n > l || a > i) || ((a > n || n !== n) && (n = a), (l < i || i !== i) && (i = l), i < 0) ? null : this.at(n >= 0 ? n : i, t);
    }
    intersectsBox(e) {
        return this.intersectBox(e, jt) !== null;
    }
    intersectTriangle(e, t, n, i, r) {
        Eo.subVectors(t, e), Yr.subVectors(n, e), Ao.crossVectors(Eo, Yr);
        let o = this.direction.dot(Ao), a;
        if (o > 0) {
            if (i) return null;
            a = 1;
        } else if (o < 0) a = -1, o = -o;
        else return null;
        fn.subVectors(this.origin, e);
        let l = a * this.direction.dot(Yr.crossVectors(fn, Yr));
        if (l < 0) return null;
        let c = a * this.direction.dot(Eo.cross(fn));
        if (c < 0 || l + c > o) return null;
        let h = -a * fn.dot(Ao);
        return h < 0 ? null : this.at(h / o, r);
    }
    applyMatrix4(e) {
        return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
    }
    equals(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, pe = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c, h, u, d, f, m, x, v) {
        let g = this.elements;
        return g[0] = e, g[4] = t, g[8] = n, g[12] = i, g[1] = r, g[5] = o, g[9] = a, g[13] = l, g[2] = c, g[6] = h, g[10] = u, g[14] = d, g[3] = f, g[7] = m, g[11] = x, g[15] = v, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    clone() {
        return new pe().fromArray(this.elements);
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this;
    }
    copyPosition(e) {
        let t = this.elements, n = e.elements;
        return t[12] = n[12], t[13] = n[13], t[14] = n[14], this;
    }
    setFromMatrix3(e) {
        let t = e.elements;
        return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1), this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
    }
    makeBasis(e, t, n) {
        return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this;
    }
    extractRotation(e) {
        let t = this.elements, n = e.elements, i = 1 / si.setFromMatrixColumn(e, 0).length(), r = 1 / si.setFromMatrixColumn(e, 1).length(), o = 1 / si.setFromMatrixColumn(e, 2).length();
        return t[0] = n[0] * i, t[1] = n[1] * i, t[2] = n[2] * i, t[3] = 0, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromEuler(e) {
        e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        let t = this.elements, n = e.x, i = e.y, r = e.z, o = Math.cos(n), a = Math.sin(n), l = Math.cos(i), c = Math.sin(i), h = Math.cos(r), u = Math.sin(r);
        if (e.order === "XYZ") {
            let d = o * h, f = o * u, m = a * h, x = a * u;
            t[0] = l * h, t[4] = -l * u, t[8] = c, t[1] = f + m * c, t[5] = d - x * c, t[9] = -a * l, t[2] = x - d * c, t[6] = m + f * c, t[10] = o * l;
        } else if (e.order === "YXZ") {
            let d = l * h, f = l * u, m = c * h, x = c * u;
            t[0] = d + x * a, t[4] = m * a - f, t[8] = o * c, t[1] = o * u, t[5] = o * h, t[9] = -a, t[2] = f * a - m, t[6] = x + d * a, t[10] = o * l;
        } else if (e.order === "ZXY") {
            let d = l * h, f = l * u, m = c * h, x = c * u;
            t[0] = d - x * a, t[4] = -o * u, t[8] = m + f * a, t[1] = f + m * a, t[5] = o * h, t[9] = x - d * a, t[2] = -o * c, t[6] = a, t[10] = o * l;
        } else if (e.order === "ZYX") {
            let d = o * h, f = o * u, m = a * h, x = a * u;
            t[0] = l * h, t[4] = m * c - f, t[8] = d * c + x, t[1] = l * u, t[5] = x * c + d, t[9] = f * c - m, t[2] = -c, t[6] = a * l, t[10] = o * l;
        } else if (e.order === "YZX") {
            let d = o * l, f = o * c, m = a * l, x = a * c;
            t[0] = l * h, t[4] = x - d * u, t[8] = m * u + f, t[1] = u, t[5] = o * h, t[9] = -a * h, t[2] = -c * h, t[6] = f * u + m, t[10] = d - x * u;
        } else if (e.order === "XZY") {
            let d = o * l, f = o * c, m = a * l, x = a * c;
            t[0] = l * h, t[4] = -u, t[8] = c * h, t[1] = d * u + x, t[5] = o * h, t[9] = f * u - m, t[2] = m * u - f, t[6] = a * h, t[10] = x * u + d;
        }
        return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromQuaternion(e) {
        return this.compose(tf, e, nf);
    }
    lookAt(e, t, n) {
        let i = this.elements;
        return St.subVectors(e, t), St.lengthSq() === 0 && (St.z = 1), St.normalize(), pn.crossVectors(n, St), pn.lengthSq() === 0 && (Math.abs(n.z) === 1 ? St.x += 1e-4 : St.z += 1e-4, St.normalize(), pn.crossVectors(n, St)), pn.normalize(), Zr.crossVectors(St, pn), i[0] = pn.x, i[4] = Zr.x, i[8] = St.x, i[1] = pn.y, i[5] = Zr.y, i[9] = St.y, i[2] = pn.z, i[6] = Zr.z, i[10] = St.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[4], l = n[8], c = n[12], h = n[1], u = n[5], d = n[9], f = n[13], m = n[2], x = n[6], v = n[10], g = n[14], p = n[3], _ = n[7], y = n[11], b = n[15], A = i[0], L = i[4], I = i[8], k = i[12], B = i[1], P = i[5], w = i[9], E = i[13], D = i[2], U = i[6], F = i[10], O = i[14], ne = i[3], ce = i[7], V = i[11], W = i[15];
        return r[0] = o * A + a * B + l * D + c * ne, r[4] = o * L + a * P + l * U + c * ce, r[8] = o * I + a * w + l * F + c * V, r[12] = o * k + a * E + l * O + c * W, r[1] = h * A + u * B + d * D + f * ne, r[5] = h * L + u * P + d * U + f * ce, r[9] = h * I + u * w + d * F + f * V, r[13] = h * k + u * E + d * O + f * W, r[2] = m * A + x * B + v * D + g * ne, r[6] = m * L + x * P + v * U + g * ce, r[10] = m * I + x * w + v * F + g * V, r[14] = m * k + x * E + v * O + g * W, r[3] = p * A + _ * B + y * D + b * ne, r[7] = p * L + _ * P + y * U + b * ce, r[11] = p * I + _ * w + y * F + b * V, r[15] = p * k + _ * E + y * O + b * W, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[4], i = e[8], r = e[12], o = e[1], a = e[5], l = e[9], c = e[13], h = e[2], u = e[6], d = e[10], f = e[14], m = e[3], x = e[7], v = e[11], g = e[15];
        return m * (+r * l * u - i * c * u - r * a * d + n * c * d + i * a * f - n * l * f) + x * (+t * l * f - t * c * d + r * o * d - i * o * f + i * c * h - r * l * h) + v * (+t * c * u - t * a * f - r * o * u + n * o * f + r * a * h - n * c * h) + g * (-i * a * h - t * l * u + t * a * d + i * o * u - n * o * d + n * l * h);
    }
    transpose() {
        let e = this.elements, t;
        return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this;
    }
    setPosition(e, t, n) {
        let i = this.elements;
        return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n), this;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = e[9], d = e[10], f = e[11], m = e[12], x = e[13], v = e[14], g = e[15], p = u * v * c - x * d * c + x * l * f - a * v * f - u * l * g + a * d * g, _ = m * d * c - h * v * c - m * l * f + o * v * f + h * l * g - o * d * g, y = h * x * c - m * u * c + m * a * f - o * x * f - h * a * g + o * u * g, b = m * u * l - h * x * l - m * a * d + o * x * d + h * a * v - o * u * v, A = t * p + n * _ + i * y + r * b;
        if (A === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        let L = 1 / A;
        return e[0] = p * L, e[1] = (x * d * r - u * v * r - x * i * f + n * v * f + u * i * g - n * d * g) * L, e[2] = (a * v * r - x * l * r + x * i * c - n * v * c - a * i * g + n * l * g) * L, e[3] = (u * l * r - a * d * r - u * i * c + n * d * c + a * i * f - n * l * f) * L, e[4] = _ * L, e[5] = (h * v * r - m * d * r + m * i * f - t * v * f - h * i * g + t * d * g) * L, e[6] = (m * l * r - o * v * r - m * i * c + t * v * c + o * i * g - t * l * g) * L, e[7] = (o * d * r - h * l * r + h * i * c - t * d * c - o * i * f + t * l * f) * L, e[8] = y * L, e[9] = (m * u * r - h * x * r - m * n * f + t * x * f + h * n * g - t * u * g) * L, e[10] = (o * x * r - m * a * r + m * n * c - t * x * c - o * n * g + t * a * g) * L, e[11] = (h * a * r - o * u * r - h * n * c + t * u * c + o * n * f - t * a * f) * L, e[12] = b * L, e[13] = (h * x * i - m * u * i + m * n * d - t * x * d - h * n * v + t * u * v) * L, e[14] = (m * a * i - o * x * i - m * n * l + t * x * l + o * n * v - t * a * v) * L, e[15] = (o * u * i - h * a * i + h * n * l - t * u * l - o * n * d + t * a * d) * L, this;
    }
    scale(e) {
        let t = this.elements, n = e.x, i = e.y, r = e.z;
        return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this;
    }
    getMaxScaleOnAxis() {
        let e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
    }
    makeTranslation(e, t, n) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
    }
    makeRotationX(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationY(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationZ(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    makeRotationAxis(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = 1 - n, o = e.x, a = e.y, l = e.z, c = r * o, h = r * a;
        return this.set(c * o + n, c * a - i * l, c * l + i * a, 0, c * a + i * l, h * a + n, h * l - i * o, 0, c * l - i * a, h * l + i * o, r * l * l + n, 0, 0, 0, 0, 1), this;
    }
    makeScale(e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
    }
    makeShear(e, t, n, i, r, o) {
        return this.set(1, n, r, 0, e, 1, o, 0, t, i, 1, 0, 0, 0, 0, 1), this;
    }
    compose(e, t, n) {
        let i = this.elements, r = t._x, o = t._y, a = t._z, l = t._w, c = r + r, h = o + o, u = a + a, d = r * c, f = r * h, m = r * u, x = o * h, v = o * u, g = a * u, p = l * c, _ = l * h, y = l * u, b = n.x, A = n.y, L = n.z;
        return i[0] = (1 - (x + g)) * b, i[1] = (f + y) * b, i[2] = (m - _) * b, i[3] = 0, i[4] = (f - y) * A, i[5] = (1 - (d + g)) * A, i[6] = (v + p) * A, i[7] = 0, i[8] = (m + _) * L, i[9] = (v - p) * L, i[10] = (1 - (d + x)) * L, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
    }
    decompose(e, t, n) {
        let i = this.elements, r = si.set(i[0], i[1], i[2]).length(), o = si.set(i[4], i[5], i[6]).length(), a = si.set(i[8], i[9], i[10]).length();
        this.determinant() < 0 && (r = -r), e.x = i[12], e.y = i[13], e.z = i[14], It.copy(this);
        let c = 1 / r, h = 1 / o, u = 1 / a;
        return It.elements[0] *= c, It.elements[1] *= c, It.elements[2] *= c, It.elements[4] *= h, It.elements[5] *= h, It.elements[6] *= h, It.elements[8] *= u, It.elements[9] *= u, It.elements[10] *= u, t.setFromRotationMatrix(It), n.x = r, n.y = o, n.z = a, this;
    }
    makePerspective(e, t, n, i, r, o) {
        o === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        let a = this.elements, l = 2 * r / (t - e), c = 2 * r / (n - i), h = (t + e) / (t - e), u = (n + i) / (n - i), d = -(o + r) / (o - r), f = -2 * o * r / (o - r);
        return a[0] = l, a[4] = 0, a[8] = h, a[12] = 0, a[1] = 0, a[5] = c, a[9] = u, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = d, a[14] = f, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this;
    }
    makeOrthographic(e, t, n, i, r, o) {
        let a = this.elements, l = 1 / (t - e), c = 1 / (n - i), h = 1 / (o - r), u = (t + e) * l, d = (n + i) * c, f = (o + r) * h;
        return a[0] = 2 * l, a[4] = 0, a[8] = 0, a[12] = -u, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -d, a[2] = 0, a[6] = 0, a[10] = -2 * h, a[14] = -f, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 16; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 16; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e;
    }
};
pe.prototype.isMatrix4 = !0;
var si = new M, It = new pe, tf = new M(0, 0, 0), nf = new M(1, 1, 1), pn = new M, Zr = new M, St = new M, _l = new pe, Ml = new gt, Zn = class {
    constructor(e = 0, t = 0, n = 0, i = Zn.DefaultOrder){
        this._x = e, this._y = t, this._z = n, this._order = i;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get order() {
        return this._order;
    }
    set order(e) {
        this._order = e, this._onChangeCallback();
    }
    set(e, t, n, i = this._order) {
        return this._x = e, this._y = t, this._z = n, this._order = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._order);
    }
    copy(e) {
        return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e, t = this._order, n = !0) {
        let i = e.elements, r = i[0], o = i[4], a = i[8], l = i[1], c = i[5], h = i[9], u = i[2], d = i[6], f = i[10];
        switch(t){
            case "XYZ":
                this._y = Math.asin(mt(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(-h, f), this._z = Math.atan2(-o, r)) : (this._x = Math.atan2(d, c), this._z = 0);
                break;
            case "YXZ":
                this._x = Math.asin(-mt(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(a, f), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-u, r), this._z = 0);
                break;
            case "ZXY":
                this._x = Math.asin(mt(d, -1, 1)), Math.abs(d) < .9999999 ? (this._y = Math.atan2(-u, f), this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(l, r));
                break;
            case "ZYX":
                this._y = Math.asin(-mt(u, -1, 1)), Math.abs(u) < .9999999 ? (this._x = Math.atan2(d, f), this._z = Math.atan2(l, r)) : (this._x = 0, this._z = Math.atan2(-o, c));
                break;
            case "YZX":
                this._z = Math.asin(mt(l, -1, 1)), Math.abs(l) < .9999999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-u, r)) : (this._x = 0, this._y = Math.atan2(a, f));
                break;
            case "XZY":
                this._z = Math.asin(-mt(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(a, r)) : (this._x = Math.atan2(-h, f), this._y = 0);
                break;
            default:
                console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t);
        }
        return this._order = t, n === !0 && this._onChangeCallback(), this;
    }
    setFromQuaternion(e, t, n) {
        return _l.makeRotationFromQuaternion(e), this.setFromRotationMatrix(_l, t, n);
    }
    setFromVector3(e, t = this._order) {
        return this.set(e.x, e.y, e.z, t);
    }
    reorder(e) {
        return Ml.setFromEuler(this), this.setFromQuaternion(Ml, e);
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
    }
    fromArray(e) {
        return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
    }
    toVector3(e) {
        return e ? e.set(this._x, this._y, this._z) : new M(this._x, this._y, this._z);
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
Zn.prototype.isEuler = !0;
Zn.DefaultOrder = "XYZ";
Zn.RotationOrders = [
    "XYZ",
    "YZX",
    "ZXY",
    "XZY",
    "YXZ",
    "ZYX"
];
var Js = class {
    constructor(){
        this.mask = 1;
    }
    set(e) {
        this.mask = (1 << e | 0) >>> 0;
    }
    enable(e) {
        this.mask |= 1 << e | 0;
    }
    enableAll() {
        this.mask = -1;
    }
    toggle(e) {
        this.mask ^= 1 << e | 0;
    }
    disable(e) {
        this.mask &= ~(1 << e | 0);
    }
    disableAll() {
        this.mask = 0;
    }
    test(e) {
        return (this.mask & e.mask) !== 0;
    }
    isEnabled(e) {
        return (this.mask & (1 << e | 0)) !== 0;
    }
}, rf = 0, bl = new M, oi = new gt, Qt = new pe, $r = new M, Zi = new M, sf = new M, of = new gt, wl = new M(1, 0, 0), Sl = new M(0, 1, 0), Tl = new M(0, 0, 1), af = {
    type: "added"
}, El = {
    type: "removed"
}, Ne = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: rf++
        }), this.uuid = Et(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Ne.DefaultUp.clone();
        let e = new M, t = new Zn, n = new gt, i = new M(1, 1, 1);
        function r() {
            n.setFromEuler(t, !1);
        }
        function o() {
            t.setFromQuaternion(n, void 0, !1);
        }
        t._onChange(r), n._onChange(o), Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: i
            },
            modelViewMatrix: {
                value: new pe
            },
            normalMatrix: {
                value: new lt
            }
        }), this.matrix = new pe, this.matrixWorld = new pe, this.matrixAutoUpdate = Ne.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new Js, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
    }
    onBeforeRender() {}
    onAfterRender() {}
    applyMatrix4(e) {
        this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
    }
    applyQuaternion(e) {
        return this.quaternion.premultiply(e), this;
    }
    setRotationFromAxisAngle(e, t) {
        this.quaternion.setFromAxisAngle(e, t);
    }
    setRotationFromEuler(e) {
        this.quaternion.setFromEuler(e, !0);
    }
    setRotationFromMatrix(e) {
        this.quaternion.setFromRotationMatrix(e);
    }
    setRotationFromQuaternion(e) {
        this.quaternion.copy(e);
    }
    rotateOnAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.multiply(oi), this;
    }
    rotateOnWorldAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.premultiply(oi), this;
    }
    rotateX(e) {
        return this.rotateOnAxis(wl, e);
    }
    rotateY(e) {
        return this.rotateOnAxis(Sl, e);
    }
    rotateZ(e) {
        return this.rotateOnAxis(Tl, e);
    }
    translateOnAxis(e, t) {
        return bl.copy(e).applyQuaternion(this.quaternion), this.position.add(bl.multiplyScalar(t)), this;
    }
    translateX(e) {
        return this.translateOnAxis(wl, e);
    }
    translateY(e) {
        return this.translateOnAxis(Sl, e);
    }
    translateZ(e) {
        return this.translateOnAxis(Tl, e);
    }
    localToWorld(e) {
        return e.applyMatrix4(this.matrixWorld);
    }
    worldToLocal(e) {
        return e.applyMatrix4(Qt.copy(this.matrixWorld).invert());
    }
    lookAt(e, t, n) {
        e.isVector3 ? $r.copy(e) : $r.set(e, t, n);
        let i = this.parent;
        this.updateWorldMatrix(!0, !1), Zi.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Qt.lookAt(Zi, $r, this.up) : Qt.lookAt($r, Zi, this.up), this.quaternion.setFromRotationMatrix(Qt), i && (Qt.extractRotation(i.matrixWorld), oi.setFromRotationMatrix(Qt), this.quaternion.premultiply(oi.invert()));
    }
    add(e) {
        if (arguments.length > 1) {
            for(let t = 0; t < arguments.length; t++)this.add(arguments[t]);
            return this;
        }
        return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.parent !== null && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(af)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
    }
    remove(e) {
        if (arguments.length > 1) {
            for(let n = 0; n < arguments.length; n++)this.remove(arguments[n]);
            return this;
        }
        let t = this.children.indexOf(e);
        return t !== -1 && (e.parent = null, this.children.splice(t, 1), e.dispatchEvent(El)), this;
    }
    removeFromParent() {
        let e = this.parent;
        return e !== null && e.remove(this), this;
    }
    clear() {
        for(let e = 0; e < this.children.length; e++){
            let t = this.children[e];
            t.parent = null, t.dispatchEvent(El);
        }
        return this.children.length = 0, this;
    }
    attach(e) {
        return this.updateWorldMatrix(!0, !1), Qt.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), Qt.multiply(e.parent.matrixWorld)), e.applyMatrix4(Qt), this.add(e), e.updateWorldMatrix(!1, !0), this;
    }
    getObjectById(e) {
        return this.getObjectByProperty("id", e);
    }
    getObjectByName(e) {
        return this.getObjectByProperty("name", e);
    }
    getObjectByProperty(e, t) {
        if (this[e] === t) return this;
        for(let n = 0, i = this.children.length; n < i; n++){
            let o = this.children[n].getObjectByProperty(e, t);
            if (o !== void 0) return o;
        }
    }
    getWorldPosition(e) {
        return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
    }
    getWorldQuaternion(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, e, sf), e;
    }
    getWorldScale(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, of, e), e;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(t[8], t[9], t[10]).normalize();
    }
    raycast() {}
    traverse(e) {
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverse(e);
    }
    traverseVisible(e) {
        if (this.visible === !1) return;
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverseVisible(e);
    }
    traverseAncestors(e) {
        let t = this.parent;
        t !== null && (e(t), t.traverseAncestors(e));
    }
    updateMatrix() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
    }
    updateMatrixWorld(e) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].updateMatrixWorld(e);
    }
    updateWorldMatrix(e, t) {
        let n = this.parent;
        if (e === !0 && n !== null && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), t === !0) {
            let i = this.children;
            for(let r = 0, o = i.length; r < o; r++)i[r].updateWorldMatrix(!1, !0);
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string", n = {};
        t && (e = {
            geometries: {},
            materials: {},
            textures: {},
            images: {},
            shapes: {},
            skeletons: {},
            animations: {}
        }, n.metadata = {
            version: 4.5,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        let i = {};
        i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON()));
        function r(a, l) {
            return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
        }
        if (this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && (i.environment = this.environment.toJSON(e).uuid);
        else if (this.isMesh || this.isLine || this.isPoints) {
            i.geometry = r(e.geometries, this.geometry);
            let a = this.geometry.parameters;
            if (a !== void 0 && a.shapes !== void 0) {
                let l = a.shapes;
                if (Array.isArray(l)) for(let c = 0, h = l.length; c < h; c++){
                    let u = l[c];
                    r(e.shapes, u);
                }
                else r(e.shapes, l);
            }
        }
        if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (r(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
            let a = [];
            for(let l = 0, c = this.material.length; l < c; l++)a.push(r(e.materials, this.material[l]));
            i.material = a;
        } else i.material = r(e.materials, this.material);
        if (this.children.length > 0) {
            i.children = [];
            for(let a = 0; a < this.children.length; a++)i.children.push(this.children[a].toJSON(e).object);
        }
        if (this.animations.length > 0) {
            i.animations = [];
            for(let a = 0; a < this.animations.length; a++){
                let l = this.animations[a];
                i.animations.push(r(e.animations, l));
            }
        }
        if (t) {
            let a = o(e.geometries), l = o(e.materials), c = o(e.textures), h = o(e.images), u = o(e.shapes), d = o(e.skeletons), f = o(e.animations);
            a.length > 0 && (n.geometries = a), l.length > 0 && (n.materials = l), c.length > 0 && (n.textures = c), h.length > 0 && (n.images = h), u.length > 0 && (n.shapes = u), d.length > 0 && (n.skeletons = d), f.length > 0 && (n.animations = f);
        }
        return n.object = i, n;
        function o(a) {
            let l = [];
            for(let c in a){
                let h = a[c];
                delete h.metadata, l.push(h);
            }
            return l;
        }
    }
    clone(e) {
        return new this.constructor().copy(this, e);
    }
    copy(e, t = !0) {
        if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), t === !0) for(let n = 0; n < e.children.length; n++){
            let i = e.children[n];
            this.add(i.clone());
        }
        return this;
    }
};
Ne.DefaultUp = new M(0, 1, 0);
Ne.DefaultMatrixAutoUpdate = !0;
Ne.prototype.isObject3D = !0;
var Dt = new M, Kt = new M, Co = new M, en = new M, ai = new M, li = new M, Al = new M, Lo = new M, Ro = new M, Po = new M, nt = class {
    constructor(e = new M, t = new M, n = new M){
        this.a = e, this.b = t, this.c = n;
    }
    static getNormal(e, t, n, i) {
        i.subVectors(n, t), Dt.subVectors(e, t), i.cross(Dt);
        let r = i.lengthSq();
        return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
    }
    static getBarycoord(e, t, n, i, r) {
        Dt.subVectors(i, t), Kt.subVectors(n, t), Co.subVectors(e, t);
        let o = Dt.dot(Dt), a = Dt.dot(Kt), l = Dt.dot(Co), c = Kt.dot(Kt), h = Kt.dot(Co), u = o * c - a * a;
        if (u === 0) return r.set(-2, -1, -1);
        let d = 1 / u, f = (c * l - a * h) * d, m = (o * h - a * l) * d;
        return r.set(1 - f - m, m, f);
    }
    static containsPoint(e, t, n, i) {
        return this.getBarycoord(e, t, n, i, en), en.x >= 0 && en.y >= 0 && en.x + en.y <= 1;
    }
    static getUV(e, t, n, i, r, o, a, l) {
        return this.getBarycoord(e, t, n, i, en), l.set(0, 0), l.addScaledVector(r, en.x), l.addScaledVector(o, en.y), l.addScaledVector(a, en.z), l;
    }
    static isFrontFacing(e, t, n, i) {
        return Dt.subVectors(n, t), Kt.subVectors(e, t), Dt.cross(Kt).dot(i) < 0;
    }
    set(e, t, n) {
        return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
    }
    setFromPointsAndIndices(e, t, n, i) {
        return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
    }
    setFromAttributeAndIndices(e, t, n, i) {
        return this.a.fromBufferAttribute(e, t), this.b.fromBufferAttribute(e, n), this.c.fromBufferAttribute(e, i), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
    }
    getArea() {
        return Dt.subVectors(this.c, this.b), Kt.subVectors(this.a, this.b), Dt.cross(Kt).length() * .5;
    }
    getMidpoint(e) {
        return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
    }
    getNormal(e) {
        return nt.getNormal(this.a, this.b, this.c, e);
    }
    getPlane(e) {
        return e.setFromCoplanarPoints(this.a, this.b, this.c);
    }
    getBarycoord(e, t) {
        return nt.getBarycoord(e, this.a, this.b, this.c, t);
    }
    getUV(e, t, n, i, r) {
        return nt.getUV(e, this.a, this.b, this.c, t, n, i, r);
    }
    containsPoint(e) {
        return nt.containsPoint(e, this.a, this.b, this.c);
    }
    isFrontFacing(e) {
        return nt.isFrontFacing(this.a, this.b, this.c, e);
    }
    intersectsBox(e) {
        return e.intersectsTriangle(this);
    }
    closestPointToPoint(e, t) {
        let n = this.a, i = this.b, r = this.c, o, a;
        ai.subVectors(i, n), li.subVectors(r, n), Lo.subVectors(e, n);
        let l = ai.dot(Lo), c = li.dot(Lo);
        if (l <= 0 && c <= 0) return t.copy(n);
        Ro.subVectors(e, i);
        let h = ai.dot(Ro), u = li.dot(Ro);
        if (h >= 0 && u <= h) return t.copy(i);
        let d = l * u - h * c;
        if (d <= 0 && l >= 0 && h <= 0) return o = l / (l - h), t.copy(n).addScaledVector(ai, o);
        Po.subVectors(e, r);
        let f = ai.dot(Po), m = li.dot(Po);
        if (m >= 0 && f <= m) return t.copy(r);
        let x = f * c - l * m;
        if (x <= 0 && c >= 0 && m <= 0) return a = c / (c - m), t.copy(n).addScaledVector(li, a);
        let v = h * m - f * u;
        if (v <= 0 && u - h >= 0 && f - m >= 0) return Al.subVectors(r, i), a = (u - h) / (u - h + (f - m)), t.copy(i).addScaledVector(Al, a);
        let g = 1 / (v + x + d);
        return o = x * g, a = d * g, t.copy(n).addScaledVector(ai, o).addScaledVector(li, a);
    }
    equals(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
    }
}, lf = 0, dt = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: lf++
        }), this.uuid = Et(), this.name = "", this.type = "Material", this.fog = !0, this.blending = sr, this.side = Ai, this.vertexColors = !1, this.opacity = 1, this.format = ct, this.transparent = !1, this.blendSrc = Gc, this.blendDst = Vc, this.blendEquation = _i, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = ea, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = Ud, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = vo, this.stencilZFail = vo, this.stencilZPass = vo, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
    }
    get alphaTest() {
        return this._alphaTest;
    }
    set alphaTest(e) {
        this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
    }
    onBuild() {}
    onBeforeRender() {}
    onBeforeCompile() {}
    customProgramCacheKey() {
        return this.onBeforeCompile.toString();
    }
    setValues(e) {
        if (e !== void 0) for(let t in e){
            let n = e[t];
            if (n === void 0) {
                console.warn("THREE.Material: '" + t + "' parameter is undefined.");
                continue;
            }
            if (t === "shading") {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = n === kc;
                continue;
            }
            let i = this[t];
            if (i === void 0) {
                console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.");
                continue;
            }
            i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n;
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        t && (e = {
            textures: {},
            images: {}
        });
        let n = {
            metadata: {
                version: 4.5,
                type: "Material",
                generator: "Material.toJSON"
            }
        };
        n.uuid = this.uuid, n.type = this.type, this.name !== "" && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), this.roughness !== void 0 && (n.roughness = this.roughness), this.metalness !== void 0 && (n.metalness = this.metalness), this.sheen !== void 0 && (n.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (n.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (n.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (n.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (n.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (n.shininess = this.shininess), this.clearcoat !== void 0 && (n.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (n.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (n.combine = this.combine)), this.envMapIntensity !== void 0 && (n.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (n.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && (n.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (n.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (n.size = this.size), this.shadowSide !== null && (n.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== sr && (n.blending = this.blending), this.side !== Ai && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), this.format !== ct && (n.format = this.format), this.transparent === !0 && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && this.rotation !== 0 && (n.rotation = this.rotation), this.polygonOffset === !0 && (n.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (n.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && this.linewidth !== 1 && (n.linewidth = this.linewidth), this.dashSize !== void 0 && (n.dashSize = this.dashSize), this.gapSize !== void 0 && (n.gapSize = this.gapSize), this.scale !== void 0 && (n.scale = this.scale), this.dithering === !0 && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), this.alphaToCoverage === !0 && (n.alphaToCoverage = this.alphaToCoverage), this.premultipliedAlpha === !0 && (n.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (n.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (n.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (n.flatShading = this.flatShading), this.visible === !1 && (n.visible = !1), this.toneMapped === !1 && (n.toneMapped = !1), JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData);
        function i(r) {
            let o = [];
            for(let a in r){
                let l = r[a];
                delete l.metadata, o.push(l);
            }
            return o;
        }
        if (t) {
            let r = i(e.textures), o = i(e.images);
            r.length > 0 && (n.textures = r), o.length > 0 && (n.images = o);
        }
        return n;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.format = e.format, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
        let t = e.clippingPlanes, n = null;
        if (t !== null) {
            let i = t.length;
            n = new Array(i);
            for(let r = 0; r !== i; ++r)n[r] = t[r].clone();
        }
        return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
dt.prototype.isMaterial = !0;
var $c = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
}, Ft = {
    h: 0,
    s: 0,
    l: 0
}, jr = {
    h: 0,
    s: 0,
    l: 0
};
function Io(s, e, t) {
    return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? s + (e - s) * 6 * t : t < 1 / 2 ? e : t < 2 / 3 ? s + (e - s) * 6 * (2 / 3 - t) : s;
}
function Do(s) {
    return s < .04045 ? s * .0773993808 : Math.pow(s * .9478672986 + .0521327014, 2.4);
}
function Fo(s) {
    return s < .0031308 ? s * 12.92 : 1.055 * Math.pow(s, .41666) - .055;
}
var ae = class {
    constructor(e, t, n){
        return t === void 0 && n === void 0 ? this.set(e) : this.setRGB(e, t, n);
    }
    set(e) {
        return e && e.isColor ? this.copy(e) : typeof e == "number" ? this.setHex(e) : typeof e == "string" && this.setStyle(e), this;
    }
    setScalar(e) {
        return this.r = e, this.g = e, this.b = e, this;
    }
    setHex(e) {
        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, this;
    }
    setRGB(e, t, n) {
        return this.r = e, this.g = t, this.b = n, this;
    }
    setHSL(e, t, n) {
        if (e = da(e, 1), t = mt(t, 0, 1), n = mt(n, 0, 1), t === 0) this.r = this.g = this.b = n;
        else {
            let i = n <= .5 ? n * (1 + t) : n + t - n * t, r = 2 * n - i;
            this.r = Io(r, i, e + 1 / 3), this.g = Io(r, i, e), this.b = Io(r, i, e - 1 / 3);
        }
        return this;
    }
    setStyle(e) {
        function t(i) {
            i !== void 0 && parseFloat(i) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
        }
        let n;
        if (n = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)) {
            let i, r = n[1], o = n[2];
            switch(r){
                case "rgb":
                case "rgba":
                    if (i = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[4]), this;
                    if (i = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[4]), this;
                    break;
                case "hsl":
                case "hsla":
                    if (i = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) {
                        let a = parseFloat(i[1]) / 360, l = parseInt(i[2], 10) / 100, c = parseInt(i[3], 10) / 100;
                        return t(i[4]), this.setHSL(a, l, c);
                    }
                    break;
            }
        } else if (n = /^\#([A-Fa-f\d]+)$/.exec(e)) {
            let i = n[1], r = i.length;
            if (r === 3) return this.r = parseInt(i.charAt(0) + i.charAt(0), 16) / 255, this.g = parseInt(i.charAt(1) + i.charAt(1), 16) / 255, this.b = parseInt(i.charAt(2) + i.charAt(2), 16) / 255, this;
            if (r === 6) return this.r = parseInt(i.charAt(0) + i.charAt(1), 16) / 255, this.g = parseInt(i.charAt(2) + i.charAt(3), 16) / 255, this.b = parseInt(i.charAt(4) + i.charAt(5), 16) / 255, this;
        }
        return e && e.length > 0 ? this.setColorName(e) : this;
    }
    setColorName(e) {
        let t = $c[e.toLowerCase()];
        return t !== void 0 ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this;
    }
    clone() {
        return new this.constructor(this.r, this.g, this.b);
    }
    copy(e) {
        return this.r = e.r, this.g = e.g, this.b = e.b, this;
    }
    copySRGBToLinear(e) {
        return this.r = Do(e.r), this.g = Do(e.g), this.b = Do(e.b), this;
    }
    copyLinearToSRGB(e) {
        return this.r = Fo(e.r), this.g = Fo(e.g), this.b = Fo(e.b), this;
    }
    convertSRGBToLinear() {
        return this.copySRGBToLinear(this), this;
    }
    convertLinearToSRGB() {
        return this.copyLinearToSRGB(this), this;
    }
    getHex() {
        return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;
    }
    getHexString() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
    }
    getHSL(e) {
        let t = this.r, n = this.g, i = this.b, r = Math.max(t, n, i), o = Math.min(t, n, i), a, l, c = (o + r) / 2;
        if (o === r) a = 0, l = 0;
        else {
            let h = r - o;
            switch(l = c <= .5 ? h / (r + o) : h / (2 - r - o), r){
                case t:
                    a = (n - i) / h + (n < i ? 6 : 0);
                    break;
                case n:
                    a = (i - t) / h + 2;
                    break;
                case i:
                    a = (t - n) / h + 4;
                    break;
            }
            a /= 6;
        }
        return e.h = a, e.s = l, e.l = c, e;
    }
    getStyle() {
        return "rgb(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + ")";
    }
    offsetHSL(e, t, n) {
        return this.getHSL(Ft), Ft.h += e, Ft.s += t, Ft.l += n, this.setHSL(Ft.h, Ft.s, Ft.l), this;
    }
    add(e) {
        return this.r += e.r, this.g += e.g, this.b += e.b, this;
    }
    addColors(e, t) {
        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
    }
    addScalar(e) {
        return this.r += e, this.g += e, this.b += e, this;
    }
    sub(e) {
        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
    }
    multiply(e) {
        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
    }
    multiplyScalar(e) {
        return this.r *= e, this.g *= e, this.b *= e, this;
    }
    lerp(e, t) {
        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
    }
    lerpColors(e, t, n) {
        return this.r = e.r + (t.r - e.r) * n, this.g = e.g + (t.g - e.g) * n, this.b = e.b + (t.b - e.b) * n, this;
    }
    lerpHSL(e, t) {
        this.getHSL(Ft), e.getHSL(jr);
        let n = or(Ft.h, jr.h, t), i = or(Ft.s, jr.s, t), r = or(Ft.l, jr.l, t);
        return this.setHSL(n, i, r), this;
    }
    equals(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
    }
    fromArray(e, t = 0) {
        return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
    }
    fromBufferAttribute(e, t) {
        return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), e.normalized === !0 && (this.r /= 255, this.g /= 255, this.b /= 255), this;
    }
    toJSON() {
        return this.getHex();
    }
};
ae.NAMES = $c;
ae.prototype.isColor = !0;
ae.prototype.r = 1;
ae.prototype.g = 1;
ae.prototype.b = 1;
var hn = class extends dt {
    constructor(e){
        super();
        this.type = "MeshBasicMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
hn.prototype.isMeshBasicMaterial = !0;
var Je = new M, Qr = new X, Ue = class {
    constructor(e, t, n){
        if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = e, this.itemSize = t, this.count = e !== void 0 ? e.length / t : 0, this.normalized = n === !0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0;
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.itemSize, n *= t.itemSize;
        for(let i = 0, r = this.itemSize; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    copyArray(e) {
        return this.array.set(e), this;
    }
    copyColorsArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), o = new ae), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b;
        }
        return this;
    }
    copyVector2sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), o = new X), t[n++] = o.x, t[n++] = o.y;
        }
        return this;
    }
    copyVector3sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), o = new M), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z;
        }
        return this;
    }
    copyVector4sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), o = new Ve), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w;
        }
        return this;
    }
    applyMatrix3(e) {
        if (this.itemSize === 2) for(let t = 0, n = this.count; t < n; t++)Qr.fromBufferAttribute(this, t), Qr.applyMatrix3(e), this.setXY(t, Qr.x, Qr.y);
        else if (this.itemSize === 3) for(let t = 0, n = this.count; t < n; t++)Je.fromBufferAttribute(this, t), Je.applyMatrix3(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyMatrix4(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyNormalMatrix(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.transformDirection(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    getX(e) {
        return this.array[e * this.itemSize];
    }
    setX(e, t) {
        return this.array[e * this.itemSize] = t, this;
    }
    getY(e) {
        return this.array[e * this.itemSize + 1];
    }
    setY(e, t) {
        return this.array[e * this.itemSize + 1] = t, this;
    }
    getZ(e) {
        return this.array[e * this.itemSize + 2];
    }
    setZ(e, t) {
        return this.array[e * this.itemSize + 2] = t, this;
    }
    getW(e) {
        return this.array[e * this.itemSize + 3];
    }
    setW(e, t) {
        return this.array[e * this.itemSize + 3] = t, this;
    }
    setXY(e, t, n) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    clone() {
        return new this.constructor(this.array, this.itemSize).copy(this);
    }
    toJSON() {
        let e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized
        };
        return this.name !== "" && (e.name = this.name), this.usage !== hr && (e.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (e.updateRange = this.updateRange), e;
    }
};
Ue.prototype.isBufferAttribute = !0;
var jc = class extends Ue {
    constructor(e, t, n){
        super(new Int8Array(e), t, n);
    }
}, Qc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8Array(e), t, n);
    }
}, Kc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8ClampedArray(e), t, n);
    }
}, eh = class extends Ue {
    constructor(e, t, n){
        super(new Int16Array(e), t, n);
    }
}, Ys = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
}, th = class extends Ue {
    constructor(e, t, n){
        super(new Int32Array(e), t, n);
    }
}, Zs = class extends Ue {
    constructor(e, t, n){
        super(new Uint32Array(e), t, n);
    }
}, nh = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
};
nh.prototype.isFloat16BufferAttribute = !0;
var de = class extends Ue {
    constructor(e, t, n){
        super(new Float32Array(e), t, n);
    }
}, ih = class extends Ue {
    constructor(e, t, n){
        super(new Float64Array(e), t, n);
    }
}, cf = 0, Rt = new pe, No = new Ne, ci = new M, Tt = new Lt, $i = new Lt, ht = new M, _e = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: cf++
        }), this.uuid = Et(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
            start: 0,
            count: 1 / 0
        }, this.userData = {};
    }
    getIndex() {
        return this.index;
    }
    setIndex(e) {
        return Array.isArray(e) ? this.index = new (Yc(e) > 65535 ? Zs : Ys)(e, 1) : this.index = e, this;
    }
    getAttribute(e) {
        return this.attributes[e];
    }
    setAttribute(e, t) {
        return this.attributes[e] = t, this;
    }
    deleteAttribute(e) {
        return delete this.attributes[e], this;
    }
    hasAttribute(e) {
        return this.attributes[e] !== void 0;
    }
    addGroup(e, t, n = 0) {
        this.groups.push({
            start: e,
            count: t,
            materialIndex: n
        });
    }
    clearGroups() {
        this.groups = [];
    }
    setDrawRange(e, t) {
        this.drawRange.start = e, this.drawRange.count = t;
    }
    applyMatrix4(e) {
        let t = this.attributes.position;
        t !== void 0 && (t.applyMatrix4(e), t.needsUpdate = !0);
        let n = this.attributes.normal;
        if (n !== void 0) {
            let r = new lt().getNormalMatrix(e);
            n.applyNormalMatrix(r), n.needsUpdate = !0;
        }
        let i = this.attributes.tangent;
        return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
    }
    applyQuaternion(e) {
        return Rt.makeRotationFromQuaternion(e), this.applyMatrix4(Rt), this;
    }
    rotateX(e) {
        return Rt.makeRotationX(e), this.applyMatrix4(Rt), this;
    }
    rotateY(e) {
        return Rt.makeRotationY(e), this.applyMatrix4(Rt), this;
    }
    rotateZ(e) {
        return Rt.makeRotationZ(e), this.applyMatrix4(Rt), this;
    }
    translate(e, t, n) {
        return Rt.makeTranslation(e, t, n), this.applyMatrix4(Rt), this;
    }
    scale(e, t, n) {
        return Rt.makeScale(e, t, n), this.applyMatrix4(Rt), this;
    }
    lookAt(e) {
        return No.lookAt(e), No.updateMatrix(), this.applyMatrix4(No.matrix), this;
    }
    center() {
        return this.computeBoundingBox(), this.boundingBox.getCenter(ci).negate(), this.translate(ci.x, ci.y, ci.z), this;
    }
    setFromPoints(e) {
        let t = [];
        for(let n = 0, i = e.length; n < i; n++){
            let r = e[n];
            t.push(r.x, r.y, r.z || 0);
        }
        return this.setAttribute("position", new de(t, 3)), this;
    }
    computeBoundingBox() {
        this.boundingBox === null && (this.boundingBox = new Lt);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(new M(-1 / 0, -1 / 0, -1 / 0), new M(1 / 0, 1 / 0, 1 / 0));
            return;
        }
        if (e !== void 0) {
            if (this.boundingBox.setFromBufferAttribute(e), t) for(let n = 0, i = t.length; n < i; n++){
                let r = t[n];
                Tt.setFromBufferAttribute(r), this.morphTargetsRelative ? (ht.addVectors(this.boundingBox.min, Tt.min), this.boundingBox.expandByPoint(ht), ht.addVectors(this.boundingBox.max, Tt.max), this.boundingBox.expandByPoint(ht)) : (this.boundingBox.expandByPoint(Tt.min), this.boundingBox.expandByPoint(Tt.max));
            }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
    }
    computeBoundingSphere() {
        this.boundingSphere === null && (this.boundingSphere = new An);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new M, 1 / 0);
            return;
        }
        if (e) {
            let n = this.boundingSphere.center;
            if (Tt.setFromBufferAttribute(e), t) for(let r = 0, o = t.length; r < o; r++){
                let a = t[r];
                $i.setFromBufferAttribute(a), this.morphTargetsRelative ? (ht.addVectors(Tt.min, $i.min), Tt.expandByPoint(ht), ht.addVectors(Tt.max, $i.max), Tt.expandByPoint(ht)) : (Tt.expandByPoint($i.min), Tt.expandByPoint($i.max));
            }
            Tt.getCenter(n);
            let i = 0;
            for(let r = 0, o = e.count; r < o; r++)ht.fromBufferAttribute(e, r), i = Math.max(i, n.distanceToSquared(ht));
            if (t) for(let r = 0, o = t.length; r < o; r++){
                let a = t[r], l = this.morphTargetsRelative;
                for(let c = 0, h = a.count; c < h; c++)ht.fromBufferAttribute(a, c), l && (ci.fromBufferAttribute(e, c), ht.add(ci)), i = Math.max(i, n.distanceToSquared(ht));
            }
            this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
        }
    }
    computeTangents() {
        let e = this.index, t = this.attributes;
        if (e === null || t.position === void 0 || t.normal === void 0 || t.uv === void 0) {
            console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
            return;
        }
        let n = e.array, i = t.position.array, r = t.normal.array, o = t.uv.array, a = i.length / 3;
        t.tangent === void 0 && this.setAttribute("tangent", new Ue(new Float32Array(4 * a), 4));
        let l = t.tangent.array, c = [], h = [];
        for(let B = 0; B < a; B++)c[B] = new M, h[B] = new M;
        let u = new M, d = new M, f = new M, m = new X, x = new X, v = new X, g = new M, p = new M;
        function _(B, P, w) {
            u.fromArray(i, B * 3), d.fromArray(i, P * 3), f.fromArray(i, w * 3), m.fromArray(o, B * 2), x.fromArray(o, P * 2), v.fromArray(o, w * 2), d.sub(u), f.sub(u), x.sub(m), v.sub(m);
            let E = 1 / (x.x * v.y - v.x * x.y);
            !isFinite(E) || (g.copy(d).multiplyScalar(v.y).addScaledVector(f, -x.y).multiplyScalar(E), p.copy(f).multiplyScalar(x.x).addScaledVector(d, -v.x).multiplyScalar(E), c[B].add(g), c[P].add(g), c[w].add(g), h[B].add(p), h[P].add(p), h[w].add(p));
        }
        let y = this.groups;
        y.length === 0 && (y = [
            {
                start: 0,
                count: n.length
            }
        ]);
        for(let B = 0, P = y.length; B < P; ++B){
            let w = y[B], E = w.start, D = w.count;
            for(let U = E, F = E + D; U < F; U += 3)_(n[U + 0], n[U + 1], n[U + 2]);
        }
        let b = new M, A = new M, L = new M, I = new M;
        function k(B) {
            L.fromArray(r, B * 3), I.copy(L);
            let P = c[B];
            b.copy(P), b.sub(L.multiplyScalar(L.dot(P))).normalize(), A.crossVectors(I, P);
            let E = A.dot(h[B]) < 0 ? -1 : 1;
            l[B * 4] = b.x, l[B * 4 + 1] = b.y, l[B * 4 + 2] = b.z, l[B * 4 + 3] = E;
        }
        for(let B = 0, P = y.length; B < P; ++B){
            let w = y[B], E = w.start, D = w.count;
            for(let U = E, F = E + D; U < F; U += 3)k(n[U + 0]), k(n[U + 1]), k(n[U + 2]);
        }
    }
    computeVertexNormals() {
        let e = this.index, t = this.getAttribute("position");
        if (t !== void 0) {
            let n = this.getAttribute("normal");
            if (n === void 0) n = new Ue(new Float32Array(t.count * 3), 3), this.setAttribute("normal", n);
            else for(let d = 0, f = n.count; d < f; d++)n.setXYZ(d, 0, 0, 0);
            let i = new M, r = new M, o = new M, a = new M, l = new M, c = new M, h = new M, u = new M;
            if (e) for(let d = 0, f = e.count; d < f; d += 3){
                let m = e.getX(d + 0), x = e.getX(d + 1), v = e.getX(d + 2);
                i.fromBufferAttribute(t, m), r.fromBufferAttribute(t, x), o.fromBufferAttribute(t, v), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), a.fromBufferAttribute(n, m), l.fromBufferAttribute(n, x), c.fromBufferAttribute(n, v), a.add(h), l.add(h), c.add(h), n.setXYZ(m, a.x, a.y, a.z), n.setXYZ(x, l.x, l.y, l.z), n.setXYZ(v, c.x, c.y, c.z);
            }
            else for(let d = 0, f = t.count; d < f; d += 3)i.fromBufferAttribute(t, d + 0), r.fromBufferAttribute(t, d + 1), o.fromBufferAttribute(t, d + 2), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), n.setXYZ(d + 0, h.x, h.y, h.z), n.setXYZ(d + 1, h.x, h.y, h.z), n.setXYZ(d + 2, h.x, h.y, h.z);
            this.normalizeNormals(), n.needsUpdate = !0;
        }
    }
    merge(e, t) {
        if (!(e && e.isBufferGeometry)) {
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
            return;
        }
        t === void 0 && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
        let n = this.attributes;
        for(let i in n){
            if (e.attributes[i] === void 0) continue;
            let o = n[i].array, a = e.attributes[i], l = a.array, c = a.itemSize * t, h = Math.min(l.length, o.length - c);
            for(let u = 0, d = c; u < h; u++, d++)o[d] = l[u];
        }
        return this;
    }
    normalizeNormals() {
        let e = this.attributes.normal;
        for(let t = 0, n = e.count; t < n; t++)ht.fromBufferAttribute(e, t), ht.normalize(), e.setXYZ(t, ht.x, ht.y, ht.z);
    }
    toNonIndexed() {
        function e(a, l) {
            let c = a.array, h = a.itemSize, u = a.normalized, d = new c.constructor(l.length * h), f = 0, m = 0;
            for(let x = 0, v = l.length; x < v; x++){
                a.isInterleavedBufferAttribute ? f = l[x] * a.data.stride + a.offset : f = l[x] * h;
                for(let g = 0; g < h; g++)d[m++] = c[f++];
            }
            return new Ue(d, h, u);
        }
        if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
        let t = new _e, n = this.index.array, i = this.attributes;
        for(let a in i){
            let l = i[a], c = e(l, n);
            t.setAttribute(a, c);
        }
        let r = this.morphAttributes;
        for(let a in r){
            let l = [], c = r[a];
            for(let h = 0, u = c.length; h < u; h++){
                let d = c[h], f = e(d, n);
                l.push(f);
            }
            t.morphAttributes[a] = l;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        let o = this.groups;
        for(let a = 0, l = o.length; a < l; a++){
            let c = o[a];
            t.addGroup(c.start, c.count, c.materialIndex);
        }
        return t;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "BufferGeometry",
                generator: "BufferGeometry.toJSON"
            }
        };
        if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
            let l = this.parameters;
            for(let c in l)l[c] !== void 0 && (e[c] = l[c]);
            return e;
        }
        e.data = {
            attributes: {}
        };
        let t = this.index;
        t !== null && (e.data.index = {
            type: t.array.constructor.name,
            array: Array.prototype.slice.call(t.array)
        });
        let n = this.attributes;
        for(let l in n){
            let c = n[l];
            e.data.attributes[l] = c.toJSON(e.data);
        }
        let i = {}, r = !1;
        for(let l in this.morphAttributes){
            let c = this.morphAttributes[l], h = [];
            for(let u = 0, d = c.length; u < d; u++){
                let f = c[u];
                h.push(f.toJSON(e.data));
            }
            h.length > 0 && (i[l] = h, r = !0);
        }
        r && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
        let o = this.groups;
        o.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(o)));
        let a = this.boundingSphere;
        return a !== null && (e.data.boundingSphere = {
            center: a.center.toArray(),
            radius: a.radius
        }), e;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
        let t = {};
        this.name = e.name;
        let n = e.index;
        n !== null && this.setIndex(n.clone(t));
        let i = e.attributes;
        for(let c in i){
            let h = i[c];
            this.setAttribute(c, h.clone(t));
        }
        let r = e.morphAttributes;
        for(let c in r){
            let h = [], u = r[c];
            for(let d = 0, f = u.length; d < f; d++)h.push(u[d].clone(t));
            this.morphAttributes[c] = h;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        let o = e.groups;
        for(let c = 0, h = o.length; c < h; c++){
            let u = o[c];
            this.addGroup(u.start, u.count, u.materialIndex);
        }
        let a = e.boundingBox;
        a !== null && (this.boundingBox = a.clone());
        let l = e.boundingSphere;
        return l !== null && (this.boundingSphere = l.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, e.parameters !== void 0 && (this.parameters = Object.assign({}, e.parameters)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
_e.prototype.isBufferGeometry = !0;
var Cl = new pe, hi = new Cn, Bo = new An, mn = new M, gn = new M, xn = new M, zo = new M, Uo = new M, Oo = new M, Kr = new M, es = new M, ts = new M, ns = new X, is = new X, rs = new X, Ho = new M, ss = new M, st = class extends Ne {
    constructor(e = new _e, t = new hn){
        super();
        this.type = "Mesh", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = e.material, this.geometry = e.geometry, this;
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t = e.morphTargets;
            t !== void 0 && t.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
    raycast(e, t) {
        let n = this.geometry, i = this.material, r = this.matrixWorld;
        if (i === void 0 || (n.boundingSphere === null && n.computeBoundingSphere(), Bo.copy(n.boundingSphere), Bo.applyMatrix4(r), e.ray.intersectsSphere(Bo) === !1) || (Cl.copy(r).invert(), hi.copy(e.ray).applyMatrix4(Cl), n.boundingBox !== null && hi.intersectsBox(n.boundingBox) === !1)) return;
        let o;
        if (n.isBufferGeometry) {
            let a = n.index, l = n.attributes.position, c = n.morphAttributes.position, h = n.morphTargetsRelative, u = n.attributes.uv, d = n.attributes.uv2, f = n.groups, m = n.drawRange;
            if (a !== null) if (Array.isArray(i)) for(let x = 0, v = f.length; x < v; x++){
                let g = f[x], p = i[g.materialIndex], _ = Math.max(g.start, m.start), y = Math.min(a.count, Math.min(g.start + g.count, m.start + m.count));
                for(let b = _, A = y; b < A; b += 3){
                    let L = a.getX(b), I = a.getX(b + 1), k = a.getX(b + 2);
                    o = os(this, p, e, hi, l, c, h, u, d, L, I, k), o && (o.faceIndex = Math.floor(b / 3), o.face.materialIndex = g.materialIndex, t.push(o));
                }
            }
            else {
                let x = Math.max(0, m.start), v = Math.min(a.count, m.start + m.count);
                for(let g = x, p = v; g < p; g += 3){
                    let _ = a.getX(g), y = a.getX(g + 1), b = a.getX(g + 2);
                    o = os(this, i, e, hi, l, c, h, u, d, _, y, b), o && (o.faceIndex = Math.floor(g / 3), t.push(o));
                }
            }
            else if (l !== void 0) if (Array.isArray(i)) for(let x = 0, v = f.length; x < v; x++){
                let g = f[x], p = i[g.materialIndex], _ = Math.max(g.start, m.start), y = Math.min(l.count, Math.min(g.start + g.count, m.start + m.count));
                for(let b = _, A = y; b < A; b += 3){
                    let L = b, I = b + 1, k = b + 2;
                    o = os(this, p, e, hi, l, c, h, u, d, L, I, k), o && (o.faceIndex = Math.floor(b / 3), o.face.materialIndex = g.materialIndex, t.push(o));
                }
            }
            else {
                let x = Math.max(0, m.start), v = Math.min(l.count, m.start + m.count);
                for(let g = x, p = v; g < p; g += 3){
                    let _ = g, y = g + 1, b = g + 2;
                    o = os(this, i, e, hi, l, c, h, u, d, _, y, b), o && (o.faceIndex = Math.floor(g / 3), t.push(o));
                }
            }
        } else n.isGeometry && console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
};
st.prototype.isMesh = !0;
function hf(s, e, t, n, i, r, o, a) {
    let l;
    if (e.side === it ? l = n.intersectTriangle(o, r, i, !0, a) : l = n.intersectTriangle(i, r, o, e.side !== Ci, a), l === null) return null;
    ss.copy(a), ss.applyMatrix4(s.matrixWorld);
    let c = t.ray.origin.distanceTo(ss);
    return c < t.near || c > t.far ? null : {
        distance: c,
        point: ss.clone(),
        object: s
    };
}
function os(s, e, t, n, i, r, o, a, l, c, h, u) {
    mn.fromBufferAttribute(i, c), gn.fromBufferAttribute(i, h), xn.fromBufferAttribute(i, u);
    let d = s.morphTargetInfluences;
    if (r && d) {
        Kr.set(0, 0, 0), es.set(0, 0, 0), ts.set(0, 0, 0);
        for(let m = 0, x = r.length; m < x; m++){
            let v = d[m], g = r[m];
            v !== 0 && (zo.fromBufferAttribute(g, c), Uo.fromBufferAttribute(g, h), Oo.fromBufferAttribute(g, u), o ? (Kr.addScaledVector(zo, v), es.addScaledVector(Uo, v), ts.addScaledVector(Oo, v)) : (Kr.addScaledVector(zo.sub(mn), v), es.addScaledVector(Uo.sub(gn), v), ts.addScaledVector(Oo.sub(xn), v)));
        }
        mn.add(Kr), gn.add(es), xn.add(ts);
    }
    s.isSkinnedMesh && (s.boneTransform(c, mn), s.boneTransform(h, gn), s.boneTransform(u, xn));
    let f = hf(s, e, t, n, mn, gn, xn, Ho);
    if (f) {
        a && (ns.fromBufferAttribute(a, c), is.fromBufferAttribute(a, h), rs.fromBufferAttribute(a, u), f.uv = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X)), l && (ns.fromBufferAttribute(l, c), is.fromBufferAttribute(l, h), rs.fromBufferAttribute(l, u), f.uv2 = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X));
        let m = {
            a: c,
            b: h,
            c: u,
            normal: new M,
            materialIndex: 0
        };
        nt.getNormal(mn, gn, xn, m.normal), f.face = m;
    }
    return f;
}
var wn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1, r = 1, o = 1){
        super();
        this.type = "BoxGeometry", this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: o
        };
        let a = this;
        i = Math.floor(i), r = Math.floor(r), o = Math.floor(o);
        let l = [], c = [], h = [], u = [], d = 0, f = 0;
        m("z", "y", "x", -1, -1, n, t, e, o, r, 0), m("z", "y", "x", 1, -1, n, t, -e, o, r, 1), m("x", "z", "y", 1, 1, e, n, t, i, o, 2), m("x", "z", "y", 1, -1, e, n, -t, i, o, 3), m("x", "y", "z", 1, -1, e, t, n, i, r, 4), m("x", "y", "z", -1, -1, e, t, -n, i, r, 5), this.setIndex(l), this.setAttribute("position", new de(c, 3)), this.setAttribute("normal", new de(h, 3)), this.setAttribute("uv", new de(u, 2));
        function m(x, v, g, p, _, y, b, A, L, I, k) {
            let B = y / L, P = b / I, w = y / 2, E = b / 2, D = A / 2, U = L + 1, F = I + 1, O = 0, ne = 0, ce = new M;
            for(let V = 0; V < F; V++){
                let W = V * P - E;
                for(let he = 0; he < U; he++){
                    let le = he * B - w;
                    ce[x] = le * p, ce[v] = W * _, ce[g] = D, c.push(ce.x, ce.y, ce.z), ce[x] = 0, ce[v] = 0, ce[g] = A > 0 ? 1 : -1, h.push(ce.x, ce.y, ce.z), u.push(he / L), u.push(1 - V / I), O += 1;
                }
            }
            for(let V = 0; V < I; V++)for(let W = 0; W < L; W++){
                let he = d + W + U * V, le = d + W + U * (V + 1), fe = d + (W + 1) + U * (V + 1), Be = d + (W + 1) + U * V;
                l.push(he, le, Be), l.push(le, fe, Be), ne += 6;
            }
            a.addGroup(f, ne, k), f += ne, d += O;
        }
    }
    static fromJSON(e) {
        return new wn(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
    }
};
function Ri(s) {
    let e = {};
    for(let t in s){
        e[t] = {};
        for(let n in s[t]){
            let i = s[t][n];
            i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? e[t][n] = i.clone() : Array.isArray(i) ? e[t][n] = i.slice() : e[t][n] = i;
        }
    }
    return e;
}
function yt(s) {
    let e = {};
    for(let t = 0; t < s.length; t++){
        let n = Ri(s[t]);
        for(let i in n)e[i] = n[i];
    }
    return e;
}
var uf = {
    clone: Ri,
    merge: yt
}, df = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, ff = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, sn = class extends dt {
    constructor(e){
        super();
        this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = df, this.fragmentShader = ff, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        }, this.defaultAttributeValues = {
            color: [
                1,
                1,
                1
            ],
            uv: [
                0,
                0
            ],
            uv2: [
                0,
                0
            ]
        }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && (e.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e));
    }
    copy(e) {
        return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Ri(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        t.glslVersion = this.glslVersion, t.uniforms = {};
        for(let i in this.uniforms){
            let o = this.uniforms[i].value;
            o && o.isTexture ? t.uniforms[i] = {
                type: "t",
                value: o.toJSON(e).uuid
            } : o && o.isColor ? t.uniforms[i] = {
                type: "c",
                value: o.getHex()
            } : o && o.isVector2 ? t.uniforms[i] = {
                type: "v2",
                value: o.toArray()
            } : o && o.isVector3 ? t.uniforms[i] = {
                type: "v3",
                value: o.toArray()
            } : o && o.isVector4 ? t.uniforms[i] = {
                type: "v4",
                value: o.toArray()
            } : o && o.isMatrix3 ? t.uniforms[i] = {
                type: "m3",
                value: o.toArray()
            } : o && o.isMatrix4 ? t.uniforms[i] = {
                type: "m4",
                value: o.toArray()
            } : t.uniforms[i] = {
                value: o
            };
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
        let n = {};
        for(let i in this.extensions)this.extensions[i] === !0 && (n[i] = !0);
        return Object.keys(n).length > 0 && (t.extensions = n), t;
    }
};
sn.prototype.isShaderMaterial = !0;
var Ir = class extends Ne {
    constructor(){
        super();
        this.type = "Camera", this.matrixWorldInverse = new pe, this.projectionMatrix = new pe, this.projectionMatrixInverse = new pe;
    }
    copy(e, t) {
        return super.copy(e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(-t[8], -t[9], -t[10]).normalize();
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    updateWorldMatrix(e, t) {
        super.updateWorldMatrix(e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Ir.prototype.isCamera = !0;
var ut = class extends Ir {
    constructor(e = 50, t = 1, n = .1, i = 2e3){
        super();
        this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = n, this.far = i, this.focus = 10, this.aspect = t, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
    }
    setFocalLength(e) {
        let t = .5 * this.getFilmHeight() / e;
        this.fov = dr * 2 * Math.atan(t), this.updateProjectionMatrix();
    }
    getFocalLength() {
        let e = Math.tan(Wn * .5 * this.fov);
        return .5 * this.getFilmHeight() / e;
    }
    getEffectiveFOV() {
        return dr * 2 * Math.atan(Math.tan(Wn * .5 * this.fov) / this.zoom);
    }
    getFilmWidth() {
        return this.filmGauge * Math.min(this.aspect, 1);
    }
    getFilmHeight() {
        return this.filmGauge / Math.max(this.aspect, 1);
    }
    setViewOffset(e, t, n, i, r, o) {
        this.aspect = e / t, this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = this.near, t = e * Math.tan(Wn * .5 * this.fov) / this.zoom, n = 2 * t, i = this.aspect * n, r = -.5 * i, o = this.view;
        if (this.view !== null && this.view.enabled) {
            let l = o.fullWidth, c = o.fullHeight;
            r += o.offsetX * i / l, t -= o.offsetY * n / c, i *= o.width / l, n *= o.height / c;
        }
        let a = this.filmOffset;
        a !== 0 && (r += e * a / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, t, t - n, e, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, this.view !== null && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
    }
};
ut.prototype.isPerspectiveCamera = !0;
var ui = 90, di = 1, $s = class extends Ne {
    constructor(e, t, n){
        super();
        if (this.type = "CubeCamera", n.isWebGLCubeRenderTarget !== !0) {
            console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");
            return;
        }
        this.renderTarget = n;
        let i = new ut(ui, di, e, t);
        i.layers = this.layers, i.up.set(0, -1, 0), i.lookAt(new M(1, 0, 0)), this.add(i);
        let r = new ut(ui, di, e, t);
        r.layers = this.layers, r.up.set(0, -1, 0), r.lookAt(new M(-1, 0, 0)), this.add(r);
        let o = new ut(ui, di, e, t);
        o.layers = this.layers, o.up.set(0, 0, 1), o.lookAt(new M(0, 1, 0)), this.add(o);
        let a = new ut(ui, di, e, t);
        a.layers = this.layers, a.up.set(0, 0, -1), a.lookAt(new M(0, -1, 0)), this.add(a);
        let l = new ut(ui, di, e, t);
        l.layers = this.layers, l.up.set(0, -1, 0), l.lookAt(new M(0, 0, 1)), this.add(l);
        let c = new ut(ui, di, e, t);
        c.layers = this.layers, c.up.set(0, -1, 0), c.lookAt(new M(0, 0, -1)), this.add(c);
    }
    update(e, t) {
        this.parent === null && this.updateMatrixWorld();
        let n = this.renderTarget, [i, r, o, a, l, c] = this.children, h = e.xr.enabled, u = e.getRenderTarget();
        e.xr.enabled = !1;
        let d = n.texture.generateMipmaps;
        n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0), e.render(t, i), e.setRenderTarget(n, 1), e.render(t, r), e.setRenderTarget(n, 2), e.render(t, o), e.setRenderTarget(n, 3), e.render(t, a), e.setRenderTarget(n, 4), e.render(t, l), n.texture.generateMipmaps = d, e.setRenderTarget(n, 5), e.render(t, c), e.setRenderTarget(u), e.xr.enabled = h;
    }
}, ki = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        e = e !== void 0 ? e : [], t = t !== void 0 ? t : Bi;
        super(e, t, n, i, r, o, a, l, c, h);
        this.flipY = !1;
    }
    get images() {
        return this.image;
    }
    set images(e) {
        this.image = e;
    }
};
ki.prototype.isCubeTexture = !0;
var js = class extends At {
    constructor(e, t, n){
        Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), t = n);
        super(e, e, t);
        t = t || {}, this.texture = new ki(void 0, t.mapping, t.wrapS, t.wrapT, t.magFilter, t.minFilter, t.format, t.type, t.anisotropy, t.encoding), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = t.generateMipmaps !== void 0 ? t.generateMipmaps : !1, this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : tt, this.texture._needsFlipEnvMap = !1;
    }
    fromEquirectangularTexture(e, t) {
        this.texture.type = t.type, this.texture.format = ct, this.texture.encoding = t.encoding, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
        let n = {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
            fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
        }, i = new wn(5, 5, 5), r = new sn({
            name: "CubemapFromEquirect",
            uniforms: Ri(n.uniforms),
            vertexShader: n.vertexShader,
            fragmentShader: n.fragmentShader,
            side: it,
            blending: vn
        });
        r.uniforms.tEquirect.value = t;
        let o = new st(i, r), a = t.minFilter;
        return t.minFilter === Ui && (t.minFilter = tt), new $s(1, 10, this).update(e, o), t.minFilter = a, o.geometry.dispose(), o.material.dispose(), this;
    }
    clear(e, t, n, i) {
        let r = e.getRenderTarget();
        for(let o = 0; o < 6; o++)e.setRenderTarget(this, o), e.clear(t, n, i);
        e.setRenderTarget(r);
    }
};
js.prototype.isWebGLCubeRenderTarget = !0;
var ko = new M, pf = new M, mf = new lt, Wt = class {
    constructor(e = new M(1, 0, 0), t = 0){
        this.normal = e, this.constant = t;
    }
    set(e, t) {
        return this.normal.copy(e), this.constant = t, this;
    }
    setComponents(e, t, n, i) {
        return this.normal.set(e, t, n), this.constant = i, this;
    }
    setFromNormalAndCoplanarPoint(e, t) {
        return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
    }
    setFromCoplanarPoints(e, t, n) {
        let i = ko.subVectors(n, t).cross(pf.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
    }
    copy(e) {
        return this.normal.copy(e.normal), this.constant = e.constant, this;
    }
    normalize() {
        let e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), this.constant *= e, this;
    }
    negate() {
        return this.constant *= -1, this.normal.negate(), this;
    }
    distanceToPoint(e) {
        return this.normal.dot(e) + this.constant;
    }
    distanceToSphere(e) {
        return this.distanceToPoint(e.center) - e.radius;
    }
    projectPoint(e, t) {
        return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);
    }
    intersectLine(e, t) {
        let n = e.delta(ko), i = this.normal.dot(n);
        if (i === 0) return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
        let r = -(e.start.dot(this.normal) + this.constant) / i;
        return r < 0 || r > 1 ? null : t.copy(n).multiplyScalar(r).add(e.start);
    }
    intersectsLine(e) {
        let t = this.distanceToPoint(e.start), n = this.distanceToPoint(e.end);
        return t < 0 && n > 0 || n < 0 && t > 0;
    }
    intersectsBox(e) {
        return e.intersectsPlane(this);
    }
    intersectsSphere(e) {
        return e.intersectsPlane(this);
    }
    coplanarPoint(e) {
        return e.copy(this.normal).multiplyScalar(-this.constant);
    }
    applyMatrix4(e, t) {
        let n = t || mf.getNormalMatrix(e), i = this.coplanarPoint(ko).applyMatrix4(e), r = this.normal.applyMatrix3(n).normalize();
        return this.constant = -i.dot(r), this;
    }
    translate(e) {
        return this.constant -= e.dot(this.normal), this;
    }
    equals(e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Wt.prototype.isPlane = !0;
var fi = new An, as = new M, Dr = class {
    constructor(e = new Wt, t = new Wt, n = new Wt, i = new Wt, r = new Wt, o = new Wt){
        this.planes = [
            e,
            t,
            n,
            i,
            r,
            o
        ];
    }
    set(e, t, n, i, r, o) {
        let a = this.planes;
        return a[0].copy(e), a[1].copy(t), a[2].copy(n), a[3].copy(i), a[4].copy(r), a[5].copy(o), this;
    }
    copy(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)t[n].copy(e.planes[n]);
        return this;
    }
    setFromProjectionMatrix(e) {
        let t = this.planes, n = e.elements, i = n[0], r = n[1], o = n[2], a = n[3], l = n[4], c = n[5], h = n[6], u = n[7], d = n[8], f = n[9], m = n[10], x = n[11], v = n[12], g = n[13], p = n[14], _ = n[15];
        return t[0].setComponents(a - i, u - l, x - d, _ - v).normalize(), t[1].setComponents(a + i, u + l, x + d, _ + v).normalize(), t[2].setComponents(a + r, u + c, x + f, _ + g).normalize(), t[3].setComponents(a - r, u - c, x - f, _ - g).normalize(), t[4].setComponents(a - o, u - h, x - m, _ - p).normalize(), t[5].setComponents(a + o, u + h, x + m, _ + p).normalize(), this;
    }
    intersectsObject(e) {
        let t = e.geometry;
        return t.boundingSphere === null && t.computeBoundingSphere(), fi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSprite(e) {
        return fi.center.set(0, 0, 0), fi.radius = .7071067811865476, fi.applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSphere(e) {
        let t = this.planes, n = e.center, i = -e.radius;
        for(let r = 0; r < 6; r++)if (t[r].distanceToPoint(n) < i) return !1;
        return !0;
    }
    intersectsBox(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++){
            let i = t[n];
            if (as.x = i.normal.x > 0 ? e.max.x : e.min.x, as.y = i.normal.y > 0 ? e.max.y : e.min.y, as.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(as) < 0) return !1;
        }
        return !0;
    }
    containsPoint(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)if (t[n].distanceToPoint(e) < 0) return !1;
        return !0;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
function rh() {
    let s = null, e = !1, t = null, n = null;
    function i(r, o) {
        t(r, o), n = s.requestAnimationFrame(i);
    }
    return {
        start: function() {
            e !== !0 && t !== null && (n = s.requestAnimationFrame(i), e = !0);
        },
        stop: function() {
            s.cancelAnimationFrame(n), e = !1;
        },
        setAnimationLoop: function(r) {
            t = r;
        },
        setContext: function(r) {
            s = r;
        }
    };
}
function gf(s, e) {
    let t = e.isWebGL2, n = new WeakMap;
    function i(c, h) {
        let u = c.array, d = c.usage, f = s.createBuffer();
        s.bindBuffer(h, f), s.bufferData(h, u, d), c.onUploadCallback();
        let m = 5126;
        return u instanceof Float32Array ? m = 5126 : u instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : u instanceof Uint16Array ? c.isFloat16BufferAttribute ? t ? m = 5131 : console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.") : m = 5123 : u instanceof Int16Array ? m = 5122 : u instanceof Uint32Array ? m = 5125 : u instanceof Int32Array ? m = 5124 : u instanceof Int8Array ? m = 5120 : (u instanceof Uint8Array || u instanceof Uint8ClampedArray) && (m = 5121), {
            buffer: f,
            type: m,
            bytesPerElement: u.BYTES_PER_ELEMENT,
            version: c.version
        };
    }
    function r(c, h, u) {
        let d = h.array, f = h.updateRange;
        s.bindBuffer(u, c), f.count === -1 ? s.bufferSubData(u, 0, d) : (t ? s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d, f.offset, f.count) : s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d.subarray(f.offset, f.offset + f.count)), f.count = -1);
    }
    function o(c) {
        return c.isInterleavedBufferAttribute && (c = c.data), n.get(c);
    }
    function a(c) {
        c.isInterleavedBufferAttribute && (c = c.data);
        let h = n.get(c);
        h && (s.deleteBuffer(h.buffer), n.delete(c));
    }
    function l(c, h) {
        if (c.isGLBufferAttribute) {
            let d = n.get(c);
            (!d || d.version < c.version) && n.set(c, {
                buffer: c.buffer,
                type: c.type,
                bytesPerElement: c.elementSize,
                version: c.version
            });
            return;
        }
        c.isInterleavedBufferAttribute && (c = c.data);
        let u = n.get(c);
        u === void 0 ? n.set(c, i(c, h)) : u.version < c.version && (r(u.buffer, c, h), u.version = c.version);
    }
    return {
        get: o,
        remove: a,
        update: l
    };
}
var Pi = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1){
        super();
        this.type = "PlaneGeometry", this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: i
        };
        let r = e / 2, o = t / 2, a = Math.floor(n), l = Math.floor(i), c = a + 1, h = l + 1, u = e / a, d = t / l, f = [], m = [], x = [], v = [];
        for(let g = 0; g < h; g++){
            let p = g * d - o;
            for(let _ = 0; _ < c; _++){
                let y = _ * u - r;
                m.push(y, -p, 0), x.push(0, 0, 1), v.push(_ / a), v.push(1 - g / l);
            }
        }
        for(let g = 0; g < l; g++)for(let p = 0; p < a; p++){
            let _ = p + c * g, y = p + c * (g + 1), b = p + 1 + c * (g + 1), A = p + 1 + c * g;
            f.push(_, y, A), f.push(y, b, A);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Pi(e.width, e.height, e.widthSegments, e.heightSegments);
    }
}, xf = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`, yf = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, vf = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, _f = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, Mf = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, bf = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, wf = "vec3 transformed = vec3( position );", Sf = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, Tf = `vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`, Ef = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, Af = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, Cf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, Lf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Rf = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, Pf = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, If = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Df = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, Ff = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, Nf = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`, Bf = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, zf = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Uf = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, Of = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`, Hf = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, kf = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, Gf = "gl_FragColor = linearToOutputTexel( gl_FragColor );", Vf = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, Wf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, qf = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, Xf = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, Jf = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, Yf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, Zf = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, $f = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, jf = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, Qf = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, Kf = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`, ep = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, tp = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, np = `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`, ip = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, rp = `#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`, sp = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, op = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`, ap = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, lp = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`, cp = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`, hp = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, up = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, dp = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, fp = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`, pp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, mp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, gp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, xp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, yp = `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`, vp = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, _p = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, Mp = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, bp = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`, wp = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, Sp = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, Tp = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, Ep = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, Ap = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`, Cp = `#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, Lp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Rp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Pp = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Ip = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`, Dp = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`, Fp = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`, Np = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`, Bp = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, zp = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`, Up = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, Op = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, Hp = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, kp = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, Gp = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`, Vp = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, Wp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, qp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, Xp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`, Jp = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, Yp = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, Zp = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`, $p = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, jp = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, Qp = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, Kp = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, em = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, tm = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, nm = `#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`, im = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`, rm = `#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`, sm = `#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`, om = `#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, am = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, lm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`, cm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`, hm = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`, um = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, dm = `uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, fm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, pm = `#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, mm = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, gm = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, xm = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, ym = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, vm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, _m = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, Mm = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, bm = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, wm = `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, Sm = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Tm = `#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Em = `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Am = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, Cm = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Lm = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Rm = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`, Pm = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Im = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Dm = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, Fm = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Nm = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Bm = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, zm = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, Um = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Om = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Hm = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, km = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, Gm = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, Fe = {
    alphamap_fragment: xf,
    alphamap_pars_fragment: yf,
    alphatest_fragment: vf,
    alphatest_pars_fragment: _f,
    aomap_fragment: Mf,
    aomap_pars_fragment: bf,
    begin_vertex: wf,
    beginnormal_vertex: Sf,
    bsdfs: Tf,
    bumpmap_pars_fragment: Ef,
    clipping_planes_fragment: Af,
    clipping_planes_pars_fragment: Cf,
    clipping_planes_pars_vertex: Lf,
    clipping_planes_vertex: Rf,
    color_fragment: Pf,
    color_pars_fragment: If,
    color_pars_vertex: Df,
    color_vertex: Ff,
    common: Nf,
    cube_uv_reflection_fragment: Bf,
    defaultnormal_vertex: zf,
    displacementmap_pars_vertex: Uf,
    displacementmap_vertex: Of,
    emissivemap_fragment: Hf,
    emissivemap_pars_fragment: kf,
    encodings_fragment: Gf,
    encodings_pars_fragment: Vf,
    envmap_fragment: Wf,
    envmap_common_pars_fragment: qf,
    envmap_pars_fragment: Xf,
    envmap_pars_vertex: Jf,
    envmap_physical_pars_fragment: rp,
    envmap_vertex: Yf,
    fog_vertex: Zf,
    fog_pars_vertex: $f,
    fog_fragment: jf,
    fog_pars_fragment: Qf,
    gradientmap_pars_fragment: Kf,
    lightmap_fragment: ep,
    lightmap_pars_fragment: tp,
    lights_lambert_vertex: np,
    lights_pars_begin: ip,
    lights_toon_fragment: sp,
    lights_toon_pars_fragment: op,
    lights_phong_fragment: ap,
    lights_phong_pars_fragment: lp,
    lights_physical_fragment: cp,
    lights_physical_pars_fragment: hp,
    lights_fragment_begin: up,
    lights_fragment_maps: dp,
    lights_fragment_end: fp,
    logdepthbuf_fragment: pp,
    logdepthbuf_pars_fragment: mp,
    logdepthbuf_pars_vertex: gp,
    logdepthbuf_vertex: xp,
    map_fragment: yp,
    map_pars_fragment: vp,
    map_particle_fragment: _p,
    map_particle_pars_fragment: Mp,
    metalnessmap_fragment: bp,
    metalnessmap_pars_fragment: wp,
    morphnormal_vertex: Sp,
    morphtarget_pars_vertex: Tp,
    morphtarget_vertex: Ep,
    normal_fragment_begin: Ap,
    normal_fragment_maps: Cp,
    normal_pars_fragment: Lp,
    normal_pars_vertex: Rp,
    normal_vertex: Pp,
    normalmap_pars_fragment: Ip,
    clearcoat_normal_fragment_begin: Dp,
    clearcoat_normal_fragment_maps: Fp,
    clearcoat_pars_fragment: Np,
    output_fragment: Bp,
    packing: zp,
    premultiplied_alpha_fragment: Up,
    project_vertex: Op,
    dithering_fragment: Hp,
    dithering_pars_fragment: kp,
    roughnessmap_fragment: Gp,
    roughnessmap_pars_fragment: Vp,
    shadowmap_pars_fragment: Wp,
    shadowmap_pars_vertex: qp,
    shadowmap_vertex: Xp,
    shadowmask_pars_fragment: Jp,
    skinbase_vertex: Yp,
    skinning_pars_vertex: Zp,
    skinning_vertex: $p,
    skinnormal_vertex: jp,
    specularmap_fragment: Qp,
    specularmap_pars_fragment: Kp,
    tonemapping_fragment: em,
    tonemapping_pars_fragment: tm,
    transmission_fragment: nm,
    transmission_pars_fragment: im,
    uv_pars_fragment: rm,
    uv_pars_vertex: sm,
    uv_vertex: om,
    uv2_pars_fragment: am,
    uv2_pars_vertex: lm,
    uv2_vertex: cm,
    worldpos_vertex: hm,
    background_vert: um,
    background_frag: dm,
    cube_vert: fm,
    cube_frag: pm,
    depth_vert: mm,
    depth_frag: gm,
    distanceRGBA_vert: xm,
    distanceRGBA_frag: ym,
    equirect_vert: vm,
    equirect_frag: _m,
    linedashed_vert: Mm,
    linedashed_frag: bm,
    meshbasic_vert: wm,
    meshbasic_frag: Sm,
    meshlambert_vert: Tm,
    meshlambert_frag: Em,
    meshmatcap_vert: Am,
    meshmatcap_frag: Cm,
    meshnormal_vert: Lm,
    meshnormal_frag: Rm,
    meshphong_vert: Pm,
    meshphong_frag: Im,
    meshphysical_vert: Dm,
    meshphysical_frag: Fm,
    meshtoon_vert: Nm,
    meshtoon_frag: Bm,
    points_vert: zm,
    points_frag: Um,
    shadow_vert: Om,
    shadow_frag: Hm,
    sprite_vert: km,
    sprite_frag: Gm
}, ie = {
    common: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        map: {
            value: null
        },
        uvTransform: {
            value: new lt
        },
        uv2Transform: {
            value: new lt
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        }
    },
    specularmap: {
        specularMap: {
            value: null
        }
    },
    envmap: {
        envMap: {
            value: null
        },
        flipEnvMap: {
            value: -1
        },
        reflectivity: {
            value: 1
        },
        ior: {
            value: 1.5
        },
        refractionRatio: {
            value: .98
        }
    },
    aomap: {
        aoMap: {
            value: null
        },
        aoMapIntensity: {
            value: 1
        }
    },
    lightmap: {
        lightMap: {
            value: null
        },
        lightMapIntensity: {
            value: 1
        }
    },
    emissivemap: {
        emissiveMap: {
            value: null
        }
    },
    bumpmap: {
        bumpMap: {
            value: null
        },
        bumpScale: {
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            value: null
        },
        normalScale: {
            value: new X(1, 1)
        }
    },
    displacementmap: {
        displacementMap: {
            value: null
        },
        displacementScale: {
            value: 1
        },
        displacementBias: {
            value: 0
        }
    },
    roughnessmap: {
        roughnessMap: {
            value: null
        }
    },
    metalnessmap: {
        metalnessMap: {
            value: null
        }
    },
    gradientmap: {
        gradientMap: {
            value: null
        }
    },
    fog: {
        fogDensity: {
            value: 25e-5
        },
        fogNear: {
            value: 1
        },
        fogFar: {
            value: 2e3
        },
        fogColor: {
            value: new ae(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            value: []
        },
        lightProbe: {
            value: []
        },
        directionalLights: {
            value: [],
            properties: {
                direction: {},
                color: {}
            }
        },
        directionalLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        directionalShadowMap: {
            value: []
        },
        directionalShadowMatrix: {
            value: []
        },
        spotLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {}
            }
        },
        spotLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        spotShadowMap: {
            value: []
        },
        spotShadowMatrix: {
            value: []
        },
        pointLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                decay: {},
                distance: {}
            }
        },
        pointLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {}
            }
        },
        pointShadowMap: {
            value: []
        },
        pointShadowMatrix: {
            value: []
        },
        hemisphereLights: {
            value: [],
            properties: {
                direction: {},
                skyColor: {},
                groundColor: {}
            }
        },
        rectAreaLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                width: {},
                height: {}
            }
        },
        ltc_1: {
            value: null
        },
        ltc_2: {
            value: null
        }
    },
    points: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        size: {
            value: 1
        },
        scale: {
            value: 1
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    },
    sprite: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        center: {
            value: new X(.5, .5)
        },
        rotation: {
            value: 0
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    }
}, qt = {
    basic: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.fog
        ]),
        vertexShader: Fe.meshbasic_vert,
        fragmentShader: Fe.meshbasic_frag
    },
    lambert: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshlambert_vert,
        fragmentShader: Fe.meshlambert_frag
    },
    phong: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                specular: {
                    value: new ae(1118481)
                },
                shininess: {
                    value: 30
                }
            }
        ]),
        vertexShader: Fe.meshphong_vert,
        fragmentShader: Fe.meshphong_frag
    },
    standard: {
        uniforms: yt([
            ie.common,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.roughnessmap,
            ie.metalnessmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                roughness: {
                    value: 1
                },
                metalness: {
                    value: 0
                },
                envMapIntensity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshphysical_vert,
        fragmentShader: Fe.meshphysical_frag
    },
    toon: {
        uniforms: yt([
            ie.common,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.gradientmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshtoon_vert,
        fragmentShader: Fe.meshtoon_frag
    },
    matcap: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            {
                matcap: {
                    value: null
                }
            }
        ]),
        vertexShader: Fe.meshmatcap_vert,
        fragmentShader: Fe.meshmatcap_frag
    },
    points: {
        uniforms: yt([
            ie.points,
            ie.fog
        ]),
        vertexShader: Fe.points_vert,
        fragmentShader: Fe.points_frag
    },
    dashed: {
        uniforms: yt([
            ie.common,
            ie.fog,
            {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }
        ]),
        vertexShader: Fe.linedashed_vert,
        fragmentShader: Fe.linedashed_frag
    },
    depth: {
        uniforms: yt([
            ie.common,
            ie.displacementmap
        ]),
        vertexShader: Fe.depth_vert,
        fragmentShader: Fe.depth_frag
    },
    normal: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshnormal_vert,
        fragmentShader: Fe.meshnormal_frag
    },
    sprite: {
        uniforms: yt([
            ie.sprite,
            ie.fog
        ]),
        vertexShader: Fe.sprite_vert,
        fragmentShader: Fe.sprite_frag
    },
    background: {
        uniforms: {
            uvTransform: {
                value: new lt
            },
            t2D: {
                value: null
            }
        },
        vertexShader: Fe.background_vert,
        fragmentShader: Fe.background_frag
    },
    cube: {
        uniforms: yt([
            ie.envmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.cube_vert,
        fragmentShader: Fe.cube_frag
    },
    equirect: {
        uniforms: {
            tEquirect: {
                value: null
            }
        },
        vertexShader: Fe.equirect_vert,
        fragmentShader: Fe.equirect_frag
    },
    distanceRGBA: {
        uniforms: yt([
            ie.common,
            ie.displacementmap,
            {
                referencePosition: {
                    value: new M
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }
        ]),
        vertexShader: Fe.distanceRGBA_vert,
        fragmentShader: Fe.distanceRGBA_frag
    },
    shadow: {
        uniforms: yt([
            ie.lights,
            ie.fog,
            {
                color: {
                    value: new ae(0)
                },
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.shadow_vert,
        fragmentShader: Fe.shadow_frag
    }
};
qt.physical = {
    uniforms: yt([
        qt.standard.uniforms,
        {
            clearcoat: {
                value: 0
            },
            clearcoatMap: {
                value: null
            },
            clearcoatRoughness: {
                value: 0
            },
            clearcoatRoughnessMap: {
                value: null
            },
            clearcoatNormalScale: {
                value: new X(1, 1)
            },
            clearcoatNormalMap: {
                value: null
            },
            sheen: {
                value: 0
            },
            sheenColor: {
                value: new ae(0)
            },
            sheenColorMap: {
                value: null
            },
            sheenRoughness: {
                value: 0
            },
            sheenRoughnessMap: {
                value: null
            },
            transmission: {
                value: 0
            },
            transmissionMap: {
                value: null
            },
            transmissionSamplerSize: {
                value: new X
            },
            transmissionSamplerMap: {
                value: null
            },
            thickness: {
                value: 0
            },
            thicknessMap: {
                value: null
            },
            attenuationDistance: {
                value: 0
            },
            attenuationColor: {
                value: new ae(0)
            },
            specularIntensity: {
                value: 0
            },
            specularIntensityMap: {
                value: null
            },
            specularColor: {
                value: new ae(1, 1, 1)
            },
            specularColorMap: {
                value: null
            }
        }
    ]),
    vertexShader: Fe.meshphysical_vert,
    fragmentShader: Fe.meshphysical_frag
};
function Vm(s, e, t, n, i) {
    let r = new ae(0), o = 0, a, l, c = null, h = 0, u = null;
    function d(m, x) {
        let v = !1, g = x.isScene === !0 ? x.background : null;
        g && g.isTexture && (g = e.get(g));
        let p = s.xr, _ = p.getSession && p.getSession();
        _ && _.environmentBlendMode === "additive" && (g = null), g === null ? f(r, o) : g && g.isColor && (f(g, 1), v = !0), (s.autoClear || v) && s.clear(s.autoClearColor, s.autoClearDepth, s.autoClearStencil), g && (g.isCubeTexture || g.mapping === Pr) ? (l === void 0 && (l = new st(new wn(1, 1, 1), new sn({
            name: "BackgroundCubeMaterial",
            uniforms: Ri(qt.cube.uniforms),
            vertexShader: qt.cube.vertexShader,
            fragmentShader: qt.cube.fragmentShader,
            side: it,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), l.geometry.deleteAttribute("normal"), l.geometry.deleteAttribute("uv"), l.onBeforeRender = function(y, b, A) {
            this.matrixWorld.copyPosition(A.matrixWorld);
        }, Object.defineProperty(l.material, "envMap", {
            get: function() {
                return this.uniforms.envMap.value;
            }
        }), n.update(l)), l.material.uniforms.envMap.value = g, l.material.uniforms.flipEnvMap.value = g.isCubeTexture && g.isRenderTargetTexture === !1 ? -1 : 1, (c !== g || h !== g.version || u !== s.toneMapping) && (l.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(l, l.geometry, l.material, 0, 0, null)) : g && g.isTexture && (a === void 0 && (a = new st(new Pi(2, 2), new sn({
            name: "BackgroundMaterial",
            uniforms: Ri(qt.background.uniforms),
            vertexShader: qt.background.vertexShader,
            fragmentShader: qt.background.fragmentShader,
            side: Ai,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), a.geometry.deleteAttribute("normal"), Object.defineProperty(a.material, "map", {
            get: function() {
                return this.uniforms.t2D.value;
            }
        }), n.update(a)), a.material.uniforms.t2D.value = g, g.matrixAutoUpdate === !0 && g.updateMatrix(), a.material.uniforms.uvTransform.value.copy(g.matrix), (c !== g || h !== g.version || u !== s.toneMapping) && (a.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(a, a.geometry, a.material, 0, 0, null));
    }
    function f(m, x) {
        t.buffers.color.setClear(m.r, m.g, m.b, x, i);
    }
    return {
        getClearColor: function() {
            return r;
        },
        setClearColor: function(m, x = 1) {
            r.set(m), o = x, f(r, o);
        },
        getClearAlpha: function() {
            return o;
        },
        setClearAlpha: function(m) {
            o = m, f(r, o);
        },
        render: d
    };
}
function Wm(s, e, t, n) {
    let i = s.getParameter(34921), r = n.isWebGL2 ? null : e.get("OES_vertex_array_object"), o = n.isWebGL2 || r !== null, a = {}, l = x(null), c = l;
    function h(E, D, U, F, O) {
        let ne = !1;
        if (o) {
            let ce = m(F, U, D);
            c !== ce && (c = ce, d(c.object)), ne = v(F, O), ne && g(F, O);
        } else {
            let ce = D.wireframe === !0;
            (c.geometry !== F.id || c.program !== U.id || c.wireframe !== ce) && (c.geometry = F.id, c.program = U.id, c.wireframe = ce, ne = !0);
        }
        E.isInstancedMesh === !0 && (ne = !0), O !== null && t.update(O, 34963), ne && (L(E, D, U, F), O !== null && s.bindBuffer(34963, t.get(O).buffer));
    }
    function u() {
        return n.isWebGL2 ? s.createVertexArray() : r.createVertexArrayOES();
    }
    function d(E) {
        return n.isWebGL2 ? s.bindVertexArray(E) : r.bindVertexArrayOES(E);
    }
    function f(E) {
        return n.isWebGL2 ? s.deleteVertexArray(E) : r.deleteVertexArrayOES(E);
    }
    function m(E, D, U) {
        let F = U.wireframe === !0, O = a[E.id];
        O === void 0 && (O = {}, a[E.id] = O);
        let ne = O[D.id];
        ne === void 0 && (ne = {}, O[D.id] = ne);
        let ce = ne[F];
        return ce === void 0 && (ce = x(u()), ne[F] = ce), ce;
    }
    function x(E) {
        let D = [], U = [], F = [];
        for(let O = 0; O < i; O++)D[O] = 0, U[O] = 0, F[O] = 0;
        return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: D,
            enabledAttributes: U,
            attributeDivisors: F,
            object: E,
            attributes: {},
            index: null
        };
    }
    function v(E, D) {
        let U = c.attributes, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = U[ne], V = F[ne];
            if (ce === void 0 || ce.attribute !== V || ce.data !== V.data) return !0;
            O++;
        }
        return c.attributesNum !== O || c.index !== D;
    }
    function g(E, D) {
        let U = {}, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = F[ne], V = {};
            V.attribute = ce, ce.data && (V.data = ce.data), U[ne] = V, O++;
        }
        c.attributes = U, c.attributesNum = O, c.index = D;
    }
    function p() {
        let E = c.newAttributes;
        for(let D = 0, U = E.length; D < U; D++)E[D] = 0;
    }
    function _(E) {
        y(E, 0);
    }
    function y(E, D) {
        let U = c.newAttributes, F = c.enabledAttributes, O = c.attributeDivisors;
        U[E] = 1, F[E] === 0 && (s.enableVertexAttribArray(E), F[E] = 1), O[E] !== D && ((n.isWebGL2 ? s : e.get("ANGLE_instanced_arrays"))[n.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](E, D), O[E] = D);
    }
    function b() {
        let E = c.newAttributes, D = c.enabledAttributes;
        for(let U = 0, F = D.length; U < F; U++)D[U] !== E[U] && (s.disableVertexAttribArray(U), D[U] = 0);
    }
    function A(E, D, U, F, O, ne) {
        n.isWebGL2 === !0 && (U === 5124 || U === 5125) ? s.vertexAttribIPointer(E, D, U, O, ne) : s.vertexAttribPointer(E, D, U, F, O, ne);
    }
    function L(E, D, U, F) {
        if (n.isWebGL2 === !1 && (E.isInstancedMesh || F.isInstancedBufferGeometry) && e.get("ANGLE_instanced_arrays") === null) return;
        p();
        let O = F.attributes, ne = U.getAttributes(), ce = D.defaultAttributeValues;
        for(let V in ne){
            let W = ne[V];
            if (W.location >= 0) {
                let he = O[V];
                if (he === void 0 && (V === "instanceMatrix" && E.instanceMatrix && (he = E.instanceMatrix), V === "instanceColor" && E.instanceColor && (he = E.instanceColor)), he !== void 0) {
                    let le = he.normalized, fe = he.itemSize, Be = t.get(he);
                    if (Be === void 0) continue;
                    let Y = Be.buffer, Ce = Be.type, ye = Be.bytesPerElement;
                    if (he.isInterleavedBufferAttribute) {
                        let ge = he.data, xe = ge.stride, Oe = he.offset;
                        if (ge && ge.isInstancedInterleavedBuffer) {
                            for(let G = 0; G < W.locationSize; G++)y(W.location + G, ge.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = ge.meshPerAttribute * ge.count);
                        } else for(let G = 0; G < W.locationSize; G++)_(W.location + G);
                        s.bindBuffer(34962, Y);
                        for(let G = 0; G < W.locationSize; G++)A(W.location + G, fe / W.locationSize, Ce, le, xe * ye, (Oe + fe / W.locationSize * G) * ye);
                    } else {
                        if (he.isInstancedBufferAttribute) {
                            for(let ge = 0; ge < W.locationSize; ge++)y(W.location + ge, he.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = he.meshPerAttribute * he.count);
                        } else for(let ge = 0; ge < W.locationSize; ge++)_(W.location + ge);
                        s.bindBuffer(34962, Y);
                        for(let ge = 0; ge < W.locationSize; ge++)A(W.location + ge, fe / W.locationSize, Ce, le, fe * ye, fe / W.locationSize * ge * ye);
                    }
                } else if (ce !== void 0) {
                    let le = ce[V];
                    if (le !== void 0) switch(le.length){
                        case 2:
                            s.vertexAttrib2fv(W.location, le);
                            break;
                        case 3:
                            s.vertexAttrib3fv(W.location, le);
                            break;
                        case 4:
                            s.vertexAttrib4fv(W.location, le);
                            break;
                        default:
                            s.vertexAttrib1fv(W.location, le);
                    }
                }
            }
        }
        b();
    }
    function I() {
        P();
        for(let E in a){
            let D = a[E];
            for(let U in D){
                let F = D[U];
                for(let O in F)f(F[O].object), delete F[O];
                delete D[U];
            }
            delete a[E];
        }
    }
    function k(E) {
        if (a[E.id] === void 0) return;
        let D = a[E.id];
        for(let U in D){
            let F = D[U];
            for(let O in F)f(F[O].object), delete F[O];
            delete D[U];
        }
        delete a[E.id];
    }
    function B(E) {
        for(let D in a){
            let U = a[D];
            if (U[E.id] === void 0) continue;
            let F = U[E.id];
            for(let O in F)f(F[O].object), delete F[O];
            delete U[E.id];
        }
    }
    function P() {
        w(), c !== l && (c = l, d(c.object));
    }
    function w() {
        l.geometry = null, l.program = null, l.wireframe = !1;
    }
    return {
        setup: h,
        reset: P,
        resetDefaultState: w,
        dispose: I,
        releaseStatesOfGeometry: k,
        releaseStatesOfProgram: B,
        initAttributes: p,
        enableAttribute: _,
        disableUnusedAttributes: b
    };
}
function qm(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(c) {
        r = c;
    }
    function a(c, h) {
        s.drawArrays(r, c, h), t.update(h, r, 1);
    }
    function l(c, h, u) {
        if (u === 0) return;
        let d, f;
        if (i) d = s, f = "drawArraysInstanced";
        else if (d = e.get("ANGLE_instanced_arrays"), f = "drawArraysInstancedANGLE", d === null) {
            console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        d[f](r, c, h, u), t.update(h, r, u);
    }
    this.setMode = o, this.render = a, this.renderInstances = l;
}
function Xm(s, e, t) {
    let n;
    function i() {
        if (n !== void 0) return n;
        if (e.has("EXT_texture_filter_anisotropic") === !0) {
            let L = e.get("EXT_texture_filter_anisotropic");
            n = s.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        } else n = 0;
        return n;
    }
    function r(L) {
        if (L === "highp") {
            if (s.getShaderPrecisionFormat(35633, 36338).precision > 0 && s.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
            L = "mediump";
        }
        return L === "mediump" && s.getShaderPrecisionFormat(35633, 36337).precision > 0 && s.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp";
    }
    let o = typeof WebGL2RenderingContext < "u" && s instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext < "u" && s instanceof WebGL2ComputeRenderingContext, a = t.precision !== void 0 ? t.precision : "highp", l = r(a);
    l !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", l, "instead."), a = l);
    let c = o || e.has("WEBGL_draw_buffers"), h = t.logarithmicDepthBuffer === !0, u = s.getParameter(34930), d = s.getParameter(35660), f = s.getParameter(3379), m = s.getParameter(34076), x = s.getParameter(34921), v = s.getParameter(36347), g = s.getParameter(36348), p = s.getParameter(36349), _ = d > 0, y = o || e.has("OES_texture_float"), b = _ && y, A = o ? s.getParameter(36183) : 0;
    return {
        isWebGL2: o,
        drawBuffers: c,
        getMaxAnisotropy: i,
        getMaxPrecision: r,
        precision: a,
        logarithmicDepthBuffer: h,
        maxTextures: u,
        maxVertexTextures: d,
        maxTextureSize: f,
        maxCubemapSize: m,
        maxAttributes: x,
        maxVertexUniforms: v,
        maxVaryings: g,
        maxFragmentUniforms: p,
        vertexTextures: _,
        floatFragmentTextures: y,
        floatVertexTextures: b,
        maxSamples: A
    };
}
function Jm(s) {
    let e = this, t = null, n = 0, i = !1, r = !1, o = new Wt, a = new lt, l = {
        value: null,
        needsUpdate: !1
    };
    this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(u, d, f) {
        let m = u.length !== 0 || d || n !== 0 || i;
        return i = d, t = h(u, f, 0), n = u.length, m;
    }, this.beginShadows = function() {
        r = !0, h(null);
    }, this.endShadows = function() {
        r = !1, c();
    }, this.setState = function(u, d, f) {
        let m = u.clippingPlanes, x = u.clipIntersection, v = u.clipShadows, g = s.get(u);
        if (!i || m === null || m.length === 0 || r && !v) r ? h(null) : c();
        else {
            let p = r ? 0 : n, _ = p * 4, y = g.clippingState || null;
            l.value = y, y = h(m, d, _, f);
            for(let b = 0; b !== _; ++b)y[b] = t[b];
            g.clippingState = y, this.numIntersection = x ? this.numPlanes : 0, this.numPlanes += p;
        }
    };
    function c() {
        l.value !== t && (l.value = t, l.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0;
    }
    function h(u, d, f, m) {
        let x = u !== null ? u.length : 0, v = null;
        if (x !== 0) {
            if (v = l.value, m !== !0 || v === null) {
                let g = f + x * 4, p = d.matrixWorldInverse;
                a.getNormalMatrix(p), (v === null || v.length < g) && (v = new Float32Array(g));
                for(let _ = 0, y = f; _ !== x; ++_, y += 4)o.copy(u[_]).applyMatrix4(p, a), o.normal.toArray(v, y), v[y + 3] = o.constant;
            }
            l.value = v, l.needsUpdate = !0;
        }
        return e.numPlanes = x, e.numIntersection = 0, v;
    }
}
function Ym(s) {
    let e = new WeakMap;
    function t(o, a) {
        return a === Ds ? o.mapping = Bi : a === Fs && (o.mapping = zi), o;
    }
    function n(o) {
        if (o && o.isTexture && o.isRenderTargetTexture === !1) {
            let a = o.mapping;
            if (a === Ds || a === Fs) if (e.has(o)) {
                let l = e.get(o).texture;
                return t(l, o.mapping);
            } else {
                let l = o.image;
                if (l && l.height > 0) {
                    let c = s.getRenderTarget(), h = new js(l.height / 2);
                    return h.fromEquirectangularTexture(s, o), e.set(o, h), s.setRenderTarget(c), o.addEventListener("dispose", i), t(h.texture, o.mapping);
                } else return null;
            }
        }
        return o;
    }
    function i(o) {
        let a = o.target;
        a.removeEventListener("dispose", i);
        let l = e.get(a);
        l !== void 0 && (e.delete(a), l.dispose());
    }
    function r() {
        e = new WeakMap;
    }
    return {
        get: n,
        dispose: r
    };
}
var Fr = class extends Ir {
    constructor(e = -1, t = 1, n = 1, i = -1, r = .1, o = 2e3){
        super();
        this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = t, this.top = n, this.bottom = i, this.near = r, this.far = o, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
    }
    setViewOffset(e, t, n, i, r, o) {
        this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, r = n - e, o = n + e, a = i + t, l = i - t;
        if (this.view !== null && this.view.enabled) {
            let c = (this.right - this.left) / this.view.fullWidth / this.zoom, h = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            r += c * this.view.offsetX, o = r + c * this.view.width, a -= h * this.view.offsetY, l = a - h * this.view.height;
        }
        this.projectionMatrix.makeOrthographic(r, o, a, l, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, this.view !== null && (t.object.view = Object.assign({}, this.view)), t;
    }
};
Fr.prototype.isOrthographicCamera = !0;
var Gi = class extends sn {
    constructor(e){
        super(e);
        this.type = "RawShaderMaterial";
    }
};
Gi.prototype.isRawShaderMaterial = !0;
var Ei = 4, Mn = 8, Vt = Math.pow(2, Mn), sh = [
    .125,
    .215,
    .35,
    .446,
    .526,
    .582
], oh = Mn - Ei + 1 + sh.length, pi = 20, Hs = {
    [Nt]: 0,
    [Oi]: 1
}, Go = new Fr, { _lodPlanes: ji , _sizeLods: Ll , _sigmas: ls  } = Zm(), Rl = new ae, Vo = null, On = (1 + Math.sqrt(5)) / 2, mi = 1 / On, Pl = [
    new M(1, 1, 1),
    new M(-1, 1, 1),
    new M(1, 1, -1),
    new M(-1, 1, -1),
    new M(0, On, mi),
    new M(0, On, -mi),
    new M(mi, 0, On),
    new M(-mi, 0, On),
    new M(On, mi, 0),
    new M(-On, mi, 0)
], ah = class {
    constructor(e){
        this._renderer = e, this._pingPongRenderTarget = null, this._blurMaterial = $m(pi), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial);
    }
    fromScene(e, t = 0, n = .1, i = 100) {
        Vo = this._renderer.getRenderTarget();
        let r = this._allocateTargets();
        return this._sceneToCubeUV(e, n, i, r), t > 0 && this._blur(r, 0, 0, t), this._applyPMREM(r), this._cleanup(r), r;
    }
    fromEquirectangular(e) {
        return this._fromTexture(e);
    }
    fromCubemap(e) {
        return this._fromTexture(e);
    }
    compileCubemapShader() {
        this._cubemapShader === null && (this._cubemapShader = Fl(), this._compileMaterial(this._cubemapShader));
    }
    compileEquirectangularShader() {
        this._equirectShader === null && (this._equirectShader = Dl(), this._compileMaterial(this._equirectShader));
    }
    dispose() {
        this._blurMaterial.dispose(), this._cubemapShader !== null && this._cubemapShader.dispose(), this._equirectShader !== null && this._equirectShader.dispose();
        for(let e = 0; e < ji.length; e++)ji[e].dispose();
    }
    _cleanup(e) {
        this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Vo), e.scissorTest = !1, cs(e, 0, 0, e.width, e.height);
    }
    _fromTexture(e) {
        Vo = this._renderer.getRenderTarget();
        let t = this._allocateTargets(e);
        return this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t;
    }
    _allocateTargets(e) {
        let t = {
            magFilter: tt,
            minFilter: tt,
            generateMipmaps: !1,
            type: kn,
            format: ct,
            encoding: Nt,
            depthBuffer: !1
        }, n = Il(t);
        return n.depthBuffer = !e, this._pingPongRenderTarget = Il(t), n;
    }
    _compileMaterial(e) {
        let t = new st(ji[0], e);
        this._renderer.compile(t, Go);
    }
    _sceneToCubeUV(e, t, n, i) {
        let a = new ut(90, 1, t, n), l = [
            1,
            -1,
            1,
            1,
            1,
            1
        ], c = [
            1,
            1,
            1,
            -1,
            -1,
            -1
        ], h = this._renderer, u = h.autoClear, d = h.toneMapping;
        h.getClearColor(Rl), h.toneMapping = _n, h.autoClear = !1;
        let f = new hn({
            name: "PMREM.Background",
            side: it,
            depthWrite: !1,
            depthTest: !1
        }), m = new st(new wn, f), x = !1, v = e.background;
        v ? v.isColor && (f.color.copy(v), e.background = null, x = !0) : (f.color.copy(Rl), x = !0);
        for(let g = 0; g < 6; g++){
            let p = g % 3;
            p == 0 ? (a.up.set(0, l[g], 0), a.lookAt(c[g], 0, 0)) : p == 1 ? (a.up.set(0, 0, l[g]), a.lookAt(0, c[g], 0)) : (a.up.set(0, l[g], 0), a.lookAt(0, 0, c[g])), cs(i, p * Vt, g > 2 ? Vt : 0, Vt, Vt), h.setRenderTarget(i), x && h.render(m, a), h.render(e, a);
        }
        m.geometry.dispose(), m.material.dispose(), h.toneMapping = d, h.autoClear = u, e.background = v;
    }
    _setEncoding(e, t) {
        this._renderer.capabilities.isWebGL2 === !0 && t.format === ct && t.type === rn && t.encoding === Oi ? e.value = Hs[Nt] : e.value = Hs[t.encoding];
    }
    _textureToCubeUV(e, t) {
        let n = this._renderer, i = e.mapping === Bi || e.mapping === zi;
        i ? this._cubemapShader == null && (this._cubemapShader = Fl()) : this._equirectShader == null && (this._equirectShader = Dl());
        let r = i ? this._cubemapShader : this._equirectShader, o = new st(ji[0], r), a = r.uniforms;
        a.envMap.value = e, i || a.texelSize.value.set(1 / e.image.width, 1 / e.image.height), this._setEncoding(a.inputEncoding, e), cs(t, 0, 0, 3 * Vt, 2 * Vt), n.setRenderTarget(t), n.render(o, Go);
    }
    _applyPMREM(e) {
        let t = this._renderer, n = t.autoClear;
        t.autoClear = !1;
        for(let i = 1; i < oh; i++){
            let r = Math.sqrt(ls[i] * ls[i] - ls[i - 1] * ls[i - 1]), o = Pl[(i - 1) % Pl.length];
            this._blur(e, i - 1, i, r, o);
        }
        t.autoClear = n;
    }
    _blur(e, t, n, i, r) {
        let o = this._pingPongRenderTarget;
        this._halfBlur(e, o, t, n, i, "latitudinal", r), this._halfBlur(o, e, n, n, i, "longitudinal", r);
    }
    _halfBlur(e, t, n, i, r, o, a) {
        let l = this._renderer, c = this._blurMaterial;
        o !== "latitudinal" && o !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
        let h = 3, u = new st(ji[i], c), d = c.uniforms, f = Ll[n] - 1, m = isFinite(r) ? Math.PI / (2 * f) : 2 * Math.PI / (2 * pi - 1), x = r / m, v = isFinite(r) ? 1 + Math.floor(h * x) : pi;
        v > pi && console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${pi}`);
        let g = [], p = 0;
        for(let A = 0; A < pi; ++A){
            let L = A / x, I = Math.exp(-L * L / 2);
            g.push(I), A == 0 ? p += I : A < v && (p += 2 * I);
        }
        for(let A = 0; A < g.length; A++)g[A] = g[A] / p;
        d.envMap.value = e.texture, d.samples.value = v, d.weights.value = g, d.latitudinal.value = o === "latitudinal", a && (d.poleAxis.value = a), d.dTheta.value = m, d.mipInt.value = Mn - n;
        let _ = Ll[i], y = 3 * Math.max(0, Vt - 2 * _), b = (i === 0 ? 0 : 2 * Vt) + 2 * _ * (i > Mn - Ei ? i - Mn + Ei : 0);
        cs(t, y, b, 3 * _, 2 * _), l.setRenderTarget(t), l.render(u, Go);
    }
};
function Zm() {
    let s = [], e = [], t = [], n = Mn;
    for(let i = 0; i < oh; i++){
        let r = Math.pow(2, n);
        e.push(r);
        let o = 1 / r;
        i > Mn - Ei ? o = sh[i - Mn + Ei - 1] : i == 0 && (o = 0), t.push(o);
        let a = 1 / (r - 1), l = -a / 2, c = 1 + a / 2, h = [
            l,
            l,
            c,
            l,
            c,
            c,
            l,
            l,
            c,
            c,
            l,
            c
        ], u = 6, d = 6, f = 3, m = 2, x = 1, v = new Float32Array(f * d * u), g = new Float32Array(m * d * u), p = new Float32Array(x * d * u);
        for(let y = 0; y < u; y++){
            let b = y % 3 * 2 / 3 - 1, A = y > 2 ? 0 : -1, L = [
                b,
                A,
                0,
                b + 2 / 3,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A + 1,
                0
            ];
            v.set(L, f * d * y), g.set(h, m * d * y);
            let I = [
                y,
                y,
                y,
                y,
                y,
                y
            ];
            p.set(I, x * d * y);
        }
        let _ = new _e;
        _.setAttribute("position", new Ue(v, f)), _.setAttribute("uv", new Ue(g, m)), _.setAttribute("faceIndex", new Ue(p, x)), s.push(_), n > Ei && n--;
    }
    return {
        _lodPlanes: s,
        _sizeLods: e,
        _sigmas: t
    };
}
function Il(s) {
    let e = new At(3 * Vt, 3 * Vt, s);
    return e.texture.mapping = Pr, e.texture.name = "PMREM.cubeUv", e.scissorTest = !0, e;
}
function cs(s, e, t, n, i) {
    s.viewport.set(e, t, n, i), s.scissor.set(e, t, n, i);
}
function $m(s) {
    let e = new Float32Array(s), t = new M(0, 1, 0);
    return new Gi({
        name: "SphericalGaussianBlur",
        defines: {
            n: s
        },
        uniforms: {
            envMap: {
                value: null
            },
            samples: {
                value: 1
            },
            weights: {
                value: e
            },
            latitudinal: {
                value: !1
            },
            dTheta: {
                value: 0
            },
            mipInt: {
                value: 0
            },
            poleAxis: {
                value: t
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${pa()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Dl() {
    let s = new X(1, 1);
    return new Gi({
        name: "EquirectangularToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            texelSize: {
                value: s
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${pa()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Fl() {
    return new Gi({
        name: "CubemapToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${pa()}

			void main() {

				gl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function fa() {
    return `

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function pa() {
    return `

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`;
}
function jm(s) {
    let e = new WeakMap, t = null;
    function n(a) {
        if (a && a.isTexture && a.isRenderTargetTexture === !1) {
            let l = a.mapping, c = l === Ds || l === Fs, h = l === Bi || l === zi;
            if (c || h) {
                if (e.has(a)) return e.get(a).texture;
                {
                    let u = a.image;
                    if (c && u && u.height > 0 || h && u && i(u)) {
                        let d = s.getRenderTarget();
                        t === null && (t = new ah(s));
                        let f = c ? t.fromEquirectangular(a) : t.fromCubemap(a);
                        return e.set(a, f), s.setRenderTarget(d), a.addEventListener("dispose", r), f.texture;
                    } else return null;
                }
            }
        }
        return a;
    }
    function i(a) {
        let l = 0, c = 6;
        for(let h = 0; h < c; h++)a[h] !== void 0 && l++;
        return l === c;
    }
    function r(a) {
        let l = a.target;
        l.removeEventListener("dispose", r);
        let c = e.get(l);
        c !== void 0 && (e.delete(l), c.dispose());
    }
    function o() {
        e = new WeakMap, t !== null && (t.dispose(), t = null);
    }
    return {
        get: n,
        dispose: o
    };
}
function Qm(s) {
    let e = {};
    function t(n) {
        if (e[n] !== void 0) return e[n];
        let i;
        switch(n){
            case "WEBGL_depth_texture":
                i = s.getExtension("WEBGL_depth_texture") || s.getExtension("MOZ_WEBGL_depth_texture") || s.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
            case "EXT_texture_filter_anisotropic":
                i = s.getExtension("EXT_texture_filter_anisotropic") || s.getExtension("MOZ_EXT_texture_filter_anisotropic") || s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
            case "WEBGL_compressed_texture_s3tc":
                i = s.getExtension("WEBGL_compressed_texture_s3tc") || s.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
            case "WEBGL_compressed_texture_pvrtc":
                i = s.getExtension("WEBGL_compressed_texture_pvrtc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
            default:
                i = s.getExtension(n);
        }
        return e[n] = i, i;
    }
    return {
        has: function(n) {
            return t(n) !== null;
        },
        init: function(n) {
            n.isWebGL2 ? t("EXT_color_buffer_float") : (t("WEBGL_depth_texture"), t("OES_texture_float"), t("OES_texture_half_float"), t("OES_texture_half_float_linear"), t("OES_standard_derivatives"), t("OES_element_index_uint"), t("OES_vertex_array_object"), t("ANGLE_instanced_arrays")), t("OES_texture_float_linear"), t("EXT_color_buffer_half_float"), t("WEBGL_multisampled_render_to_texture");
        },
        get: function(n) {
            let i = t(n);
            return i === null && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), i;
        }
    };
}
function Km(s, e, t, n) {
    let i = {}, r = new WeakMap;
    function o(u) {
        let d = u.target;
        d.index !== null && e.remove(d.index);
        for(let m in d.attributes)e.remove(d.attributes[m]);
        d.removeEventListener("dispose", o), delete i[d.id];
        let f = r.get(d);
        f && (e.remove(f), r.delete(d)), n.releaseStatesOfGeometry(d), d.isInstancedBufferGeometry === !0 && delete d._maxInstanceCount, t.memory.geometries--;
    }
    function a(u, d) {
        return i[d.id] === !0 || (d.addEventListener("dispose", o), i[d.id] = !0, t.memory.geometries++), d;
    }
    function l(u) {
        let d = u.attributes;
        for(let m in d)e.update(d[m], 34962);
        let f = u.morphAttributes;
        for(let m in f){
            let x = f[m];
            for(let v = 0, g = x.length; v < g; v++)e.update(x[v], 34962);
        }
    }
    function c(u) {
        let d = [], f = u.index, m = u.attributes.position, x = 0;
        if (f !== null) {
            let p = f.array;
            x = f.version;
            for(let _ = 0, y = p.length; _ < y; _ += 3){
                let b = p[_ + 0], A = p[_ + 1], L = p[_ + 2];
                d.push(b, A, A, L, L, b);
            }
        } else {
            let p = m.array;
            x = m.version;
            for(let _ = 0, y = p.length / 3 - 1; _ < y; _ += 3){
                let b = _ + 0, A = _ + 1, L = _ + 2;
                d.push(b, A, A, L, L, b);
            }
        }
        let v = new (Yc(d) > 65535 ? Zs : Ys)(d, 1);
        v.version = x;
        let g = r.get(u);
        g && e.remove(g), r.set(u, v);
    }
    function h(u) {
        let d = r.get(u);
        if (d) {
            let f = u.index;
            f !== null && d.version < f.version && c(u);
        } else c(u);
        return r.get(u);
    }
    return {
        get: a,
        update: l,
        getWireframeAttribute: h
    };
}
function eg(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(d) {
        r = d;
    }
    let a, l;
    function c(d) {
        a = d.type, l = d.bytesPerElement;
    }
    function h(d, f) {
        s.drawElements(r, f, a, d * l), t.update(f, r, 1);
    }
    function u(d, f, m) {
        if (m === 0) return;
        let x, v;
        if (i) x = s, v = "drawElementsInstanced";
        else if (x = e.get("ANGLE_instanced_arrays"), v = "drawElementsInstancedANGLE", x === null) {
            console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        x[v](r, f, a, d * l, m), t.update(f, r, m);
    }
    this.setMode = o, this.setIndex = c, this.render = h, this.renderInstances = u;
}
function tg(s) {
    let e = {
        geometries: 0,
        textures: 0
    }, t = {
        frame: 0,
        calls: 0,
        triangles: 0,
        points: 0,
        lines: 0
    };
    function n(r, o, a) {
        switch(t.calls++, o){
            case 4:
                t.triangles += a * (r / 3);
                break;
            case 1:
                t.lines += a * (r / 2);
                break;
            case 3:
                t.lines += a * (r - 1);
                break;
            case 2:
                t.lines += a * r;
                break;
            case 0:
                t.points += a * r;
                break;
            default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", o);
                break;
        }
    }
    function i() {
        t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
    }
    return {
        memory: e,
        render: t,
        programs: null,
        autoReset: !0,
        reset: i,
        update: n
    };
}
var Qs = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
Qs.prototype.isDataTexture2DArray = !0;
function ng(s, e) {
    return s[0] - e[0];
}
function ig(s, e) {
    return Math.abs(e[1]) - Math.abs(s[1]);
}
function Nl(s, e) {
    let t = 1, n = e.isInterleavedBufferAttribute ? e.data.array : e.array;
    n instanceof Int8Array ? t = 127 : n instanceof Int16Array ? t = 32767 : n instanceof Int32Array ? t = 2147483647 : console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ", n), s.divideScalar(t);
}
function rg(s, e, t) {
    let n = {}, i = new Float32Array(8), r = new WeakMap, o = new M, a = [];
    for(let c = 0; c < 8; c++)a[c] = [
        c,
        0
    ];
    function l(c, h, u, d) {
        let f = c.morphTargetInfluences;
        if (e.isWebGL2 === !0) {
            let m = h.morphAttributes.position.length, x = r.get(h);
            if (x === void 0 || x.count !== m) {
                x !== void 0 && x.texture.dispose();
                let p = h.morphAttributes.normal !== void 0, _ = h.morphAttributes.position, y = h.morphAttributes.normal || [], b = h.attributes.position.count, A = p === !0 ? 2 : 1, L = b * A, I = 1;
                L > e.maxTextureSize && (I = Math.ceil(L / e.maxTextureSize), L = e.maxTextureSize);
                let k = new Float32Array(L * I * 4 * m), B = new Qs(k, L, I, m);
                B.format = ct, B.type = nn, B.needsUpdate = !0;
                let P = A * 4;
                for(let w = 0; w < m; w++){
                    let E = _[w], D = y[w], U = L * I * 4 * w;
                    for(let F = 0; F < E.count; F++){
                        o.fromBufferAttribute(E, F), E.normalized === !0 && Nl(o, E);
                        let O = F * P;
                        k[U + O + 0] = o.x, k[U + O + 1] = o.y, k[U + O + 2] = o.z, k[U + O + 3] = 0, p === !0 && (o.fromBufferAttribute(D, F), D.normalized === !0 && Nl(o, D), k[U + O + 4] = o.x, k[U + O + 5] = o.y, k[U + O + 6] = o.z, k[U + O + 7] = 0);
                    }
                }
                x = {
                    count: m,
                    texture: B,
                    size: new X(L, I)
                }, r.set(h, x);
            }
            let v = 0;
            for(let p = 0; p < f.length; p++)v += f[p];
            let g = h.morphTargetsRelative ? 1 : 1 - v;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", g), d.getUniforms().setValue(s, "morphTargetInfluences", f), d.getUniforms().setValue(s, "morphTargetsTexture", x.texture, t), d.getUniforms().setValue(s, "morphTargetsTextureSize", x.size);
        } else {
            let m = f === void 0 ? 0 : f.length, x = n[h.id];
            if (x === void 0 || x.length !== m) {
                x = [];
                for(let y = 0; y < m; y++)x[y] = [
                    y,
                    0
                ];
                n[h.id] = x;
            }
            for(let y = 0; y < m; y++){
                let b = x[y];
                b[0] = y, b[1] = f[y];
            }
            x.sort(ig);
            for(let y = 0; y < 8; y++)y < m && x[y][1] ? (a[y][0] = x[y][0], a[y][1] = x[y][1]) : (a[y][0] = Number.MAX_SAFE_INTEGER, a[y][1] = 0);
            a.sort(ng);
            let v = h.morphAttributes.position, g = h.morphAttributes.normal, p = 0;
            for(let y = 0; y < 8; y++){
                let b = a[y], A = b[0], L = b[1];
                A !== Number.MAX_SAFE_INTEGER && L ? (v && h.getAttribute("morphTarget" + y) !== v[A] && h.setAttribute("morphTarget" + y, v[A]), g && h.getAttribute("morphNormal" + y) !== g[A] && h.setAttribute("morphNormal" + y, g[A]), i[y] = L, p += L) : (v && h.hasAttribute("morphTarget" + y) === !0 && h.deleteAttribute("morphTarget" + y), g && h.hasAttribute("morphNormal" + y) === !0 && h.deleteAttribute("morphNormal" + y), i[y] = 0);
            }
            let _ = h.morphTargetsRelative ? 1 : 1 - p;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", _), d.getUniforms().setValue(s, "morphTargetInfluences", i);
        }
    }
    return {
        update: l
    };
}
function sg(s, e, t, n) {
    let i = new WeakMap;
    function r(l) {
        let c = n.render.frame, h = l.geometry, u = e.get(l, h);
        return i.get(u) !== c && (e.update(u), i.set(u, c)), l.isInstancedMesh && (l.hasEventListener("dispose", a) === !1 && l.addEventListener("dispose", a), t.update(l.instanceMatrix, 34962), l.instanceColor !== null && t.update(l.instanceColor, 34962)), u;
    }
    function o() {
        i = new WeakMap;
    }
    function a(l) {
        let c = l.target;
        c.removeEventListener("dispose", a), t.remove(c.instanceMatrix), c.instanceColor !== null && t.remove(c.instanceColor);
    }
    return {
        update: r,
        dispose: o
    };
}
var ma = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
ma.prototype.isDataTexture3D = !0;
var lh = new ot, ch = new Qs, hh = new ma, uh = new ki, Bl = [], zl = [], Ul = new Float32Array(16), Ol = new Float32Array(9), Hl = new Float32Array(4);
function Vi(s, e, t) {
    let n = s[0];
    if (n <= 0 || n > 0) return s;
    let i = e * t, r = Bl[i];
    if (r === void 0 && (r = new Float32Array(i), Bl[i] = r), e !== 0) {
        n.toArray(r, 0);
        for(let o = 1, a = 0; o !== e; ++o)a += t, s[o].toArray(r, a);
    }
    return r;
}
function Mt(s, e) {
    if (s.length !== e.length) return !1;
    for(let t = 0, n = s.length; t < n; t++)if (s[t] !== e[t]) return !1;
    return !0;
}
function _t(s, e) {
    for(let t = 0, n = e.length; t < n; t++)s[t] = e[t];
}
function Ks(s, e) {
    let t = zl[e];
    t === void 0 && (t = new Int32Array(e), zl[e] = t);
    for(let n = 0; n !== e; ++n)t[n] = s.allocateTextureUnit();
    return t;
}
function og(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1f(this.addr, e), t[0] = e);
}
function ag(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y) && (s.uniform2f(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
    else {
        if (Mt(t, e)) return;
        s.uniform2fv(this.addr, e), _t(t, e);
    }
}
function lg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (s.uniform3f(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
    else if (e.r !== void 0) (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) && (s.uniform3f(this.addr, e.r, e.g, e.b), t[0] = e.r, t[1] = e.g, t[2] = e.b);
    else {
        if (Mt(t, e)) return;
        s.uniform3fv(this.addr, e), _t(t, e);
    }
}
function cg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (s.uniform4f(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
    else {
        if (Mt(t, e)) return;
        s.uniform4fv(this.addr, e), _t(t, e);
    }
}
function hg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix2fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Hl.set(n), s.uniformMatrix2fv(this.addr, !1, Hl), _t(t, n);
    }
}
function ug(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix3fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ol.set(n), s.uniformMatrix3fv(this.addr, !1, Ol), _t(t, n);
    }
}
function dg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix4fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ul.set(n), s.uniformMatrix4fv(this.addr, !1, Ul), _t(t, n);
    }
}
function fg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1i(this.addr, e), t[0] = e);
}
function pg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2iv(this.addr, e), _t(t, e));
}
function mg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3iv(this.addr, e), _t(t, e));
}
function gg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4iv(this.addr, e), _t(t, e));
}
function xg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1ui(this.addr, e), t[0] = e);
}
function yg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2uiv(this.addr, e), _t(t, e));
}
function vg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3uiv(this.addr, e), _t(t, e));
}
function _g(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4uiv(this.addr, e), _t(t, e));
}
function Mg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTexture2D(e || lh, i);
}
function bg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture3D(e || hh, i);
}
function wg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTextureCube(e || uh, i);
}
function Sg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture2DArray(e || ch, i);
}
function Tg(s) {
    switch(s){
        case 5126:
            return og;
        case 35664:
            return ag;
        case 35665:
            return lg;
        case 35666:
            return cg;
        case 35674:
            return hg;
        case 35675:
            return ug;
        case 35676:
            return dg;
        case 5124:
        case 35670:
            return fg;
        case 35667:
        case 35671:
            return pg;
        case 35668:
        case 35672:
            return mg;
        case 35669:
        case 35673:
            return gg;
        case 5125:
            return xg;
        case 36294:
            return yg;
        case 36295:
            return vg;
        case 36296:
            return _g;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return Mg;
        case 35679:
        case 36299:
        case 36307:
            return bg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return wg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Sg;
    }
}
function Eg(s, e) {
    s.uniform1fv(this.addr, e);
}
function Ag(s, e) {
    let t = Vi(e, this.size, 2);
    s.uniform2fv(this.addr, t);
}
function Cg(s, e) {
    let t = Vi(e, this.size, 3);
    s.uniform3fv(this.addr, t);
}
function Lg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniform4fv(this.addr, t);
}
function Rg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniformMatrix2fv(this.addr, !1, t);
}
function Pg(s, e) {
    let t = Vi(e, this.size, 9);
    s.uniformMatrix3fv(this.addr, !1, t);
}
function Ig(s, e) {
    let t = Vi(e, this.size, 16);
    s.uniformMatrix4fv(this.addr, !1, t);
}
function Dg(s, e) {
    s.uniform1iv(this.addr, e);
}
function Fg(s, e) {
    s.uniform2iv(this.addr, e);
}
function Ng(s, e) {
    s.uniform3iv(this.addr, e);
}
function Bg(s, e) {
    s.uniform4iv(this.addr, e);
}
function zg(s, e) {
    s.uniform1uiv(this.addr, e);
}
function Ug(s, e) {
    s.uniform2uiv(this.addr, e);
}
function Og(s, e) {
    s.uniform3uiv(this.addr, e);
}
function Hg(s, e) {
    s.uniform4uiv(this.addr, e);
}
function kg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTexture2D(e[r] || lh, i[r]);
}
function Gg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture3D(e[r] || hh, i[r]);
}
function Vg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTextureCube(e[r] || uh, i[r]);
}
function Wg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture2DArray(e[r] || ch, i[r]);
}
function qg(s) {
    switch(s){
        case 5126:
            return Eg;
        case 35664:
            return Ag;
        case 35665:
            return Cg;
        case 35666:
            return Lg;
        case 35674:
            return Rg;
        case 35675:
            return Pg;
        case 35676:
            return Ig;
        case 5124:
        case 35670:
            return Dg;
        case 35667:
        case 35671:
            return Fg;
        case 35668:
        case 35672:
            return Ng;
        case 35669:
        case 35673:
            return Bg;
        case 5125:
            return zg;
        case 36294:
            return Ug;
        case 36295:
            return Og;
        case 36296:
            return Hg;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return kg;
        case 35679:
        case 36299:
        case 36307:
            return Gg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return Vg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Wg;
    }
}
function Xg(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.setValue = Tg(e.type);
}
function dh(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.size = e.size, this.setValue = qg(e.type);
}
dh.prototype.updateCache = function(s) {
    let e = this.cache;
    s instanceof Float32Array && e.length !== s.length && (this.cache = new Float32Array(s.length)), _t(e, s);
};
function fh(s) {
    this.id = s, this.seq = [], this.map = {};
}
fh.prototype.setValue = function(s, e, t) {
    let n = this.seq;
    for(let i = 0, r = n.length; i !== r; ++i){
        let o = n[i];
        o.setValue(s, e[o.id], t);
    }
};
var Wo = /(\w+)(\])?(\[|\.)?/g;
function kl(s, e) {
    s.seq.push(e), s.map[e.id] = e;
}
function Jg(s, e, t) {
    let n = s.name, i = n.length;
    for(Wo.lastIndex = 0;;){
        let r = Wo.exec(n), o = Wo.lastIndex, a = r[1], l = r[2] === "]", c = r[3];
        if (l && (a = a | 0), c === void 0 || c === "[" && o + 2 === i) {
            kl(t, c === void 0 ? new Xg(a, s, e) : new dh(a, s, e));
            break;
        } else {
            let u = t.map[a];
            u === void 0 && (u = new fh(a), kl(t, u)), t = u;
        }
    }
}
function bn(s, e) {
    this.seq = [], this.map = {};
    let t = s.getProgramParameter(e, 35718);
    for(let n = 0; n < t; ++n){
        let i = s.getActiveUniform(e, n), r = s.getUniformLocation(e, i.name);
        Jg(i, r, this);
    }
}
bn.prototype.setValue = function(s, e, t, n) {
    let i = this.map[e];
    i !== void 0 && i.setValue(s, t, n);
};
bn.prototype.setOptional = function(s, e, t) {
    let n = e[t];
    n !== void 0 && this.setValue(s, t, n);
};
bn.upload = function(s, e, t, n) {
    for(let i = 0, r = e.length; i !== r; ++i){
        let o = e[i], a = t[o.id];
        a.needsUpdate !== !1 && o.setValue(s, a.value, n);
    }
};
bn.seqWithValue = function(s, e) {
    let t = [];
    for(let n = 0, i = s.length; n !== i; ++n){
        let r = s[n];
        r.id in e && t.push(r);
    }
    return t;
};
function Gl(s, e, t) {
    let n = s.createShader(e);
    return s.shaderSource(n, t), s.compileShader(n), n;
}
var Yg = 0;
function Zg(s) {
    let e = s.split(`
`);
    for(let t = 0; t < e.length; t++)e[t] = t + 1 + ": " + e[t];
    return e.join(`
`);
}
function ph(s) {
    switch(s){
        case Nt:
            return [
                "Linear",
                "( value )"
            ];
        case Oi:
            return [
                "sRGB",
                "( value )"
            ];
        default:
            return console.warn("THREE.WebGLProgram: Unsupported encoding:", s), [
                "Linear",
                "( value )"
            ];
    }
}
function Vl(s, e, t) {
    let n = s.getShaderParameter(e, 35713), i = s.getShaderInfoLog(e).trim();
    return n && i === "" ? "" : t.toUpperCase() + `

` + i + `

` + Zg(s.getShaderSource(e));
}
function Dn(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return " + t[0] + "ToLinear" + t[1] + "; }";
}
function $g(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return LinearTo" + t[0] + t[1] + "; }";
}
function jg(s, e) {
    let t;
    switch(e){
        case Nu:
            t = "Linear";
            break;
        case Bu:
            t = "Reinhard";
            break;
        case zu:
            t = "OptimizedCineon";
            break;
        case Uu:
            t = "ACESFilmic";
            break;
        case Ou:
            t = "Custom";
            break;
        default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), t = "Linear";
    }
    return "vec3 " + s + "( vec3 color ) { return " + t + "ToneMapping( color ); }";
}
function Qg(s) {
    return [
        s.extensionDerivatives || s.envMapCubeUV || s.bumpMap || s.tangentSpaceNormalMap || s.clearcoatNormalMap || s.flatShading || s.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "",
        (s.extensionFragDepth || s.logarithmicDepthBuffer) && s.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "",
        s.extensionDrawBuffers && s.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "",
        (s.extensionShaderTextureLOD || s.envMap || s.transmission) && s.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""
    ].filter(rr).join(`
`);
}
function Kg(s) {
    let e = [];
    for(let t in s){
        let n = s[t];
        n !== !1 && e.push("#define " + t + " " + n);
    }
    return e.join(`
`);
}
function ex(s, e) {
    let t = {}, n = s.getProgramParameter(e, 35721);
    for(let i = 0; i < n; i++){
        let r = s.getActiveAttrib(e, i), o = r.name, a = 1;
        r.type === 35674 && (a = 2), r.type === 35675 && (a = 3), r.type === 35676 && (a = 4), t[o] = {
            type: r.type,
            location: s.getAttribLocation(e, o),
            locationSize: a
        };
    }
    return t;
}
function rr(s) {
    return s !== "";
}
function Wl(s, e) {
    return s.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function ql(s, e) {
    return s.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
}
var tx = /^[ \t]*#include +<([\w\d./]+)>/gm;
function ra(s) {
    return s.replace(tx, nx);
}
function nx(s, e) {
    let t = Fe[e];
    if (t === void 0) throw new Error("Can not resolve #include <" + e + ">");
    return ra(t);
}
var ix = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, rx = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function Xl(s) {
    return s.replace(rx, mh).replace(ix, sx);
}
function sx(s, e, t, n) {
    return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), mh(s, e, t, n);
}
function mh(s, e, t, n) {
    let i = "";
    for(let r = parseInt(e); r < parseInt(t); r++)i += n.replace(/\[\s*i\s*\]/g, "[ " + r + " ]").replace(/UNROLLED_LOOP_INDEX/g, r);
    return i;
}
function Jl(s) {
    let e = "precision " + s.precision + ` float;
precision ` + s.precision + " int;";
    return s.precision === "highp" ? e += `
#define HIGH_PRECISION` : s.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : s.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
}
function ox(s) {
    let e = "SHADOWMAP_TYPE_BASIC";
    return s.shadowMapType === Hc ? e = "SHADOWMAP_TYPE_PCF" : s.shadowMapType === fu ? e = "SHADOWMAP_TYPE_PCF_SOFT" : s.shadowMapType === ir && (e = "SHADOWMAP_TYPE_VSM"), e;
}
function ax(s) {
    let e = "ENVMAP_TYPE_CUBE";
    if (s.envMap) switch(s.envMapMode){
        case Bi:
        case zi:
            e = "ENVMAP_TYPE_CUBE";
            break;
        case Pr:
        case Ws:
            e = "ENVMAP_TYPE_CUBE_UV";
            break;
    }
    return e;
}
function lx(s) {
    let e = "ENVMAP_MODE_REFLECTION";
    if (s.envMap) switch(s.envMapMode){
        case zi:
        case Ws:
            e = "ENVMAP_MODE_REFRACTION";
            break;
    }
    return e;
}
function cx(s) {
    let e = "ENVMAP_BLENDING_NONE";
    if (s.envMap) switch(s.combine){
        case Vs:
            e = "ENVMAP_BLENDING_MULTIPLY";
            break;
        case Du:
            e = "ENVMAP_BLENDING_MIX";
            break;
        case Fu:
            e = "ENVMAP_BLENDING_ADD";
            break;
    }
    return e;
}
function hx(s, e, t, n) {
    let i = s.getContext(), r = t.defines, o = t.vertexShader, a = t.fragmentShader, l = ox(t), c = ax(t), h = lx(t), u = cx(t), d = t.isWebGL2 ? "" : Qg(t), f = Kg(r), m = i.createProgram(), x, v, g = t.glslVersion ? "#version " + t.glslVersion + `
` : "";
    t.isRawShaderMaterial ? (x = [
        f
    ].filter(rr).join(`
`), x.length > 0 && (x += `
`), v = [
        d,
        f
    ].filter(rr).join(`
`), v.length > 0 && (v += `
`)) : (x = [
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.instancing ? "#define USE_INSTANCING" : "",
        t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        t.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
        "#define MAX_BONES " + t.maxBones,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + h : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.displacementMap && t.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.skinning ? "#define USE_SKINNING" : "",
        t.useVertexTexture ? "#define BONE_TEXTURE" : "",
        t.morphTargets ? "#define USE_MORPHTARGETS" : "",
        t.morphNormals && t.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`
    ].filter(rr).join(`
`), v = [
        d,
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.matcap ? "#define USE_MATCAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + c : "",
        t.envMap ? "#define " + h : "",
        t.envMap ? "#define " + u : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoat ? "#define USE_CLEARCOAT" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaTest ? "#define USE_ALPHATEST" : "",
        t.sheen ? "#define USE_SHEEN" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.gradientMap ? "#define USE_GRADIENTMAP" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        t.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        (t.extensionShaderTextureLOD || t.envMap) && t.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        t.toneMapping !== _n ? "#define TONE_MAPPING" : "",
        t.toneMapping !== _n ? Fe.tonemapping_pars_fragment : "",
        t.toneMapping !== _n ? jg("toneMapping", t.toneMapping) : "",
        t.dithering ? "#define DITHERING" : "",
        t.format === Gn ? "#define OPAQUE" : "",
        Fe.encodings_pars_fragment,
        t.map ? Dn("mapTexelToLinear", t.mapEncoding) : "",
        t.matcap ? Dn("matcapTexelToLinear", t.matcapEncoding) : "",
        t.envMap ? Dn("envMapTexelToLinear", t.envMapEncoding) : "",
        t.emissiveMap ? Dn("emissiveMapTexelToLinear", t.emissiveMapEncoding) : "",
        t.specularColorMap ? Dn("specularColorMapTexelToLinear", t.specularColorMapEncoding) : "",
        t.sheenColorMap ? Dn("sheenColorMapTexelToLinear", t.sheenColorMapEncoding) : "",
        t.lightMap ? Dn("lightMapTexelToLinear", t.lightMapEncoding) : "",
        $g("linearToOutputTexel", t.outputEncoding),
        t.depthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
        `
`
    ].filter(rr).join(`
`)), o = ra(o), o = Wl(o, t), o = ql(o, t), a = ra(a), a = Wl(a, t), a = ql(a, t), o = Xl(o), a = Xl(a), t.isWebGL2 && t.isRawShaderMaterial !== !0 && (g = `#version 300 es
`, x = [
        "precision mediump sampler2DArray;",
        "#define attribute in",
        "#define varying out",
        "#define texture2D texture"
    ].join(`
`) + `
` + x, v = [
        "#define varying in",
        t.glslVersion === xl ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
        t.glslVersion === xl ? "" : "#define gl_FragColor pc_fragColor",
        "#define gl_FragDepthEXT gl_FragDepth",
        "#define texture2D texture",
        "#define textureCube texture",
        "#define texture2DProj textureProj",
        "#define texture2DLodEXT textureLod",
        "#define texture2DProjLodEXT textureProjLod",
        "#define textureCubeLodEXT textureLod",
        "#define texture2DGradEXT textureGrad",
        "#define texture2DProjGradEXT textureProjGrad",
        "#define textureCubeGradEXT textureGrad"
    ].join(`
`) + `
` + v);
    let p = g + x + o, _ = g + v + a, y = Gl(i, 35633, p), b = Gl(i, 35632, _);
    if (i.attachShader(m, y), i.attachShader(m, b), t.index0AttributeName !== void 0 ? i.bindAttribLocation(m, 0, t.index0AttributeName) : t.morphTargets === !0 && i.bindAttribLocation(m, 0, "position"), i.linkProgram(m), s.debug.checkShaderErrors) {
        let I = i.getProgramInfoLog(m).trim(), k = i.getShaderInfoLog(y).trim(), B = i.getShaderInfoLog(b).trim(), P = !0, w = !0;
        if (i.getProgramParameter(m, 35714) === !1) {
            P = !1;
            let E = Vl(i, y, "vertex"), D = Vl(i, b, "fragment");
            console.error("THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(m, 35715) + `

Program Info Log: ` + I + `
` + E + `
` + D);
        } else I !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", I) : (k === "" || B === "") && (w = !1);
        w && (this.diagnostics = {
            runnable: P,
            programLog: I,
            vertexShader: {
                log: k,
                prefix: x
            },
            fragmentShader: {
                log: B,
                prefix: v
            }
        });
    }
    i.deleteShader(y), i.deleteShader(b);
    let A;
    this.getUniforms = function() {
        return A === void 0 && (A = new bn(i, m)), A;
    };
    let L;
    return this.getAttributes = function() {
        return L === void 0 && (L = ex(i, m)), L;
    }, this.destroy = function() {
        n.releaseStatesOfProgram(this), i.deleteProgram(m), this.program = void 0;
    }, this.name = t.shaderName, this.id = Yg++, this.cacheKey = e, this.usedTimes = 1, this.program = m, this.vertexShader = y, this.fragmentShader = b, this;
}
var ux = 0, gh = class {
    constructor(){
        this.shaderCache = new Map, this.materialCache = new Map;
    }
    update(e) {
        let t = e.vertexShader, n = e.fragmentShader, i = this._getShaderStage(t), r = this._getShaderStage(n), o = this._getShaderCacheForMaterial(e);
        return o.has(i) === !1 && (o.add(i), i.usedTimes++), o.has(r) === !1 && (o.add(r), r.usedTimes++), this;
    }
    remove(e) {
        let t = this.materialCache.get(e);
        for (let n of t)n.usedTimes--, n.usedTimes === 0 && this.shaderCache.delete(n);
        return this.materialCache.delete(e), this;
    }
    getVertexShaderID(e) {
        return this._getShaderStage(e.vertexShader).id;
    }
    getFragmentShaderID(e) {
        return this._getShaderStage(e.fragmentShader).id;
    }
    dispose() {
        this.shaderCache.clear(), this.materialCache.clear();
    }
    _getShaderCacheForMaterial(e) {
        let t = this.materialCache;
        return t.has(e) === !1 && t.set(e, new Set), t.get(e);
    }
    _getShaderStage(e) {
        let t = this.shaderCache;
        if (t.has(e) === !1) {
            let n = new xh;
            t.set(e, n);
        }
        return t.get(e);
    }
}, xh = class {
    constructor(){
        this.id = ux++, this.usedTimes = 0;
    }
};
function dx(s, e, t, n, i, r, o) {
    let a = new Js, l = new gh, c = [], h = i.isWebGL2, u = i.logarithmicDepthBuffer, d = i.floatVertexTextures, f = i.maxVertexUniforms, m = i.vertexTextures, x = i.precision, v = {
        MeshDepthMaterial: "depth",
        MeshDistanceMaterial: "distanceRGBA",
        MeshNormalMaterial: "normal",
        MeshBasicMaterial: "basic",
        MeshLambertMaterial: "lambert",
        MeshPhongMaterial: "phong",
        MeshToonMaterial: "toon",
        MeshStandardMaterial: "physical",
        MeshPhysicalMaterial: "physical",
        MeshMatcapMaterial: "matcap",
        LineBasicMaterial: "basic",
        LineDashedMaterial: "dashed",
        PointsMaterial: "points",
        ShadowMaterial: "shadow",
        SpriteMaterial: "sprite"
    };
    function g(w) {
        let D = w.skeleton.bones;
        if (d) return 1024;
        {
            let F = Math.floor((f - 20) / 4), O = Math.min(F, D.length);
            return O < D.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + D.length + " bones. This GPU supports " + O + "."), 0) : O;
        }
    }
    function p(w) {
        let E;
        return w && w.isTexture ? E = w.encoding : w && w.isWebGLRenderTarget ? (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), E = w.texture.encoding) : E = Nt, h && w && w.isTexture && w.format === ct && w.type === rn && w.encoding === Oi && (E = Nt), E;
    }
    function _(w, E, D, U, F) {
        let O = U.fog, ne = w.isMeshStandardMaterial ? U.environment : null, ce = (w.isMeshStandardMaterial ? t : e).get(w.envMap || ne), V = v[w.type], W = F.isSkinnedMesh ? g(F) : 0;
        w.precision !== null && (x = i.getMaxPrecision(w.precision), x !== w.precision && console.warn("THREE.WebGLProgram.getParameters:", w.precision, "not supported, using", x, "instead."));
        let he, le, fe, Be;
        if (V) {
            let xe = qt[V];
            he = xe.vertexShader, le = xe.fragmentShader;
        } else he = w.vertexShader, le = w.fragmentShader, l.update(w), fe = l.getVertexShaderID(w), Be = l.getFragmentShaderID(w);
        let Y = s.getRenderTarget(), Ce = w.alphaTest > 0, ye = w.clearcoat > 0;
        return {
            isWebGL2: h,
            shaderID: V,
            shaderName: w.type,
            vertexShader: he,
            fragmentShader: le,
            defines: w.defines,
            customVertexShaderID: fe,
            customFragmentShaderID: Be,
            isRawShaderMaterial: w.isRawShaderMaterial === !0,
            glslVersion: w.glslVersion,
            precision: x,
            instancing: F.isInstancedMesh === !0,
            instancingColor: F.isInstancedMesh === !0 && F.instanceColor !== null,
            supportsVertexTextures: m,
            outputEncoding: Y !== null ? p(Y.texture) : s.outputEncoding,
            map: !!w.map,
            mapEncoding: p(w.map),
            matcap: !!w.matcap,
            matcapEncoding: p(w.matcap),
            envMap: !!ce,
            envMapMode: ce && ce.mapping,
            envMapEncoding: p(ce),
            envMapCubeUV: !!ce && (ce.mapping === Pr || ce.mapping === Ws),
            lightMap: !!w.lightMap,
            lightMapEncoding: p(w.lightMap),
            aoMap: !!w.aoMap,
            emissiveMap: !!w.emissiveMap,
            emissiveMapEncoding: p(w.emissiveMap),
            bumpMap: !!w.bumpMap,
            normalMap: !!w.normalMap,
            objectSpaceNormalMap: w.normalMapType === zd,
            tangentSpaceNormalMap: w.normalMapType === Hi,
            clearcoat: ye,
            clearcoatMap: ye && !!w.clearcoatMap,
            clearcoatRoughnessMap: ye && !!w.clearcoatRoughnessMap,
            clearcoatNormalMap: ye && !!w.clearcoatNormalMap,
            displacementMap: !!w.displacementMap,
            roughnessMap: !!w.roughnessMap,
            metalnessMap: !!w.metalnessMap,
            specularMap: !!w.specularMap,
            specularIntensityMap: !!w.specularIntensityMap,
            specularColorMap: !!w.specularColorMap,
            specularColorMapEncoding: p(w.specularColorMap),
            alphaMap: !!w.alphaMap,
            alphaTest: Ce,
            gradientMap: !!w.gradientMap,
            sheen: w.sheen > 0,
            sheenColorMap: !!w.sheenColorMap,
            sheenColorMapEncoding: p(w.sheenColorMap),
            sheenRoughnessMap: !!w.sheenRoughnessMap,
            transmission: w.transmission > 0,
            transmissionMap: !!w.transmissionMap,
            thicknessMap: !!w.thicknessMap,
            combine: w.combine,
            vertexTangents: !!w.normalMap && !!F.geometry && !!F.geometry.attributes.tangent,
            vertexColors: w.vertexColors,
            vertexAlphas: w.vertexColors === !0 && !!F.geometry && !!F.geometry.attributes.color && F.geometry.attributes.color.itemSize === 4,
            vertexUvs: !!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatMap || !!w.clearcoatRoughnessMap || !!w.clearcoatNormalMap || !!w.displacementMap || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || !!w.sheenColorMap || !!w.sheenRoughnessMap,
            uvsVertexOnly: !(!!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatNormalMap || w.transmission > 0 || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || w.sheen > 0 || !!w.sheenColorMap || !!w.sheenRoughnessMap) && !!w.displacementMap,
            fog: !!O,
            useFog: w.fog,
            fogExp2: O && O.isFogExp2,
            flatShading: !!w.flatShading,
            sizeAttenuation: w.sizeAttenuation,
            logarithmicDepthBuffer: u,
            skinning: F.isSkinnedMesh === !0 && W > 0,
            maxBones: W,
            useVertexTexture: d,
            morphTargets: !!F.geometry && !!F.geometry.morphAttributes.position,
            morphNormals: !!F.geometry && !!F.geometry.morphAttributes.normal,
            morphTargetsCount: !!F.geometry && !!F.geometry.morphAttributes.position ? F.geometry.morphAttributes.position.length : 0,
            numDirLights: E.directional.length,
            numPointLights: E.point.length,
            numSpotLights: E.spot.length,
            numRectAreaLights: E.rectArea.length,
            numHemiLights: E.hemi.length,
            numDirLightShadows: E.directionalShadowMap.length,
            numPointLightShadows: E.pointShadowMap.length,
            numSpotLightShadows: E.spotShadowMap.length,
            numClippingPlanes: o.numPlanes,
            numClipIntersection: o.numIntersection,
            format: w.format,
            dithering: w.dithering,
            shadowMapEnabled: s.shadowMap.enabled && D.length > 0,
            shadowMapType: s.shadowMap.type,
            toneMapping: w.toneMapped ? s.toneMapping : _n,
            physicallyCorrectLights: s.physicallyCorrectLights,
            premultipliedAlpha: w.premultipliedAlpha,
            doubleSided: w.side === Ci,
            flipSided: w.side === it,
            depthPacking: w.depthPacking !== void 0 ? w.depthPacking : !1,
            index0AttributeName: w.index0AttributeName,
            extensionDerivatives: w.extensions && w.extensions.derivatives,
            extensionFragDepth: w.extensions && w.extensions.fragDepth,
            extensionDrawBuffers: w.extensions && w.extensions.drawBuffers,
            extensionShaderTextureLOD: w.extensions && w.extensions.shaderTextureLOD,
            rendererExtensionFragDepth: h || n.has("EXT_frag_depth"),
            rendererExtensionDrawBuffers: h || n.has("WEBGL_draw_buffers"),
            rendererExtensionShaderTextureLod: h || n.has("EXT_shader_texture_lod"),
            customProgramCacheKey: w.customProgramCacheKey()
        };
    }
    function y(w) {
        let E = [];
        if (w.shaderID ? E.push(w.shaderID) : (E.push(w.customVertexShaderID), E.push(w.customFragmentShaderID)), w.defines !== void 0) for(let D in w.defines)E.push(D), E.push(w.defines[D]);
        return w.isRawShaderMaterial === !1 && (b(E, w), A(E, w), E.push(s.outputEncoding)), E.push(w.customProgramCacheKey), E.join();
    }
    function b(w, E) {
        w.push(E.precision), w.push(E.outputEncoding), w.push(E.mapEncoding), w.push(E.matcapEncoding), w.push(E.envMapMode), w.push(E.envMapEncoding), w.push(E.lightMapEncoding), w.push(E.emissiveMapEncoding), w.push(E.combine), w.push(E.vertexUvs), w.push(E.fogExp2), w.push(E.sizeAttenuation), w.push(E.maxBones), w.push(E.morphTargetsCount), w.push(E.numDirLights), w.push(E.numPointLights), w.push(E.numSpotLights), w.push(E.numHemiLights), w.push(E.numRectAreaLights), w.push(E.numDirLightShadows), w.push(E.numPointLightShadows), w.push(E.numSpotLightShadows), w.push(E.shadowMapType), w.push(E.toneMapping), w.push(E.numClippingPlanes), w.push(E.numClipIntersection), w.push(E.format), w.push(E.specularColorMapEncoding), w.push(E.sheenColorMapEncoding);
    }
    function A(w, E) {
        a.disableAll(), E.isWebGL2 && a.enable(0), E.supportsVertexTextures && a.enable(1), E.instancing && a.enable(2), E.instancingColor && a.enable(3), E.map && a.enable(4), E.matcap && a.enable(5), E.envMap && a.enable(6), E.envMapCubeUV && a.enable(7), E.lightMap && a.enable(8), E.aoMap && a.enable(9), E.emissiveMap && a.enable(10), E.bumpMap && a.enable(11), E.normalMap && a.enable(12), E.objectSpaceNormalMap && a.enable(13), E.tangentSpaceNormalMap && a.enable(14), E.clearcoat && a.enable(15), E.clearcoatMap && a.enable(16), E.clearcoatRoughnessMap && a.enable(17), E.clearcoatNormalMap && a.enable(18), E.displacementMap && a.enable(19), E.specularMap && a.enable(20), E.roughnessMap && a.enable(21), E.metalnessMap && a.enable(22), E.gradientMap && a.enable(23), E.alphaMap && a.enable(24), E.alphaTest && a.enable(25), E.vertexColors && a.enable(26), E.vertexAlphas && a.enable(27), E.vertexUvs && a.enable(28), E.vertexTangents && a.enable(29), E.uvsVertexOnly && a.enable(30), E.fog && a.enable(31), w.push(a.mask), a.disableAll(), E.useFog && a.enable(0), E.flatShading && a.enable(1), E.logarithmicDepthBuffer && a.enable(2), E.skinning && a.enable(3), E.useVertexTexture && a.enable(4), E.morphTargets && a.enable(5), E.morphNormals && a.enable(6), E.premultipliedAlpha && a.enable(7), E.shadowMapEnabled && a.enable(8), E.physicallyCorrectLights && a.enable(9), E.doubleSided && a.enable(10), E.flipSided && a.enable(11), E.depthPacking && a.enable(12), E.dithering && a.enable(13), E.specularIntensityMap && a.enable(14), E.specularColorMap && a.enable(15), E.transmission && a.enable(16), E.transmissionMap && a.enable(17), E.thicknessMap && a.enable(18), E.sheen && a.enable(19), E.sheenColorMap && a.enable(20), E.sheenRoughnessMap && a.enable(21), w.push(a.mask);
    }
    function L(w) {
        let E = v[w.type], D;
        if (E) {
            let U = qt[E];
            D = uf.clone(U.uniforms);
        } else D = w.uniforms;
        return D;
    }
    function I(w, E) {
        let D;
        for(let U = 0, F = c.length; U < F; U++){
            let O = c[U];
            if (O.cacheKey === E) {
                D = O, ++D.usedTimes;
                break;
            }
        }
        return D === void 0 && (D = new hx(s, E, w, r), c.push(D)), D;
    }
    function k(w) {
        if (--w.usedTimes === 0) {
            let E = c.indexOf(w);
            c[E] = c[c.length - 1], c.pop(), w.destroy();
        }
    }
    function B(w) {
        l.remove(w);
    }
    function P() {
        l.dispose();
    }
    return {
        getParameters: _,
        getProgramCacheKey: y,
        getUniforms: L,
        acquireProgram: I,
        releaseProgram: k,
        releaseShaderCache: B,
        programs: c,
        dispose: P
    };
}
function fx() {
    let s = new WeakMap;
    function e(r) {
        let o = s.get(r);
        return o === void 0 && (o = {}, s.set(r, o)), o;
    }
    function t(r) {
        s.delete(r);
    }
    function n(r, o, a) {
        s.get(r)[o] = a;
    }
    function i() {
        s = new WeakMap;
    }
    return {
        get: e,
        remove: t,
        update: n,
        dispose: i
    };
}
function px(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.material.id !== e.material.id ? s.material.id - e.material.id : s.z !== e.z ? s.z - e.z : s.id - e.id;
}
function Yl(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.z !== e.z ? e.z - s.z : s.id - e.id;
}
function Zl() {
    let s = [], e = 0, t = [], n = [], i = [];
    function r() {
        e = 0, t.length = 0, n.length = 0, i.length = 0;
    }
    function o(u, d, f, m, x, v) {
        let g = s[e];
        return g === void 0 ? (g = {
            id: u.id,
            object: u,
            geometry: d,
            material: f,
            groupOrder: m,
            renderOrder: u.renderOrder,
            z: x,
            group: v
        }, s[e] = g) : (g.id = u.id, g.object = u, g.geometry = d, g.material = f, g.groupOrder = m, g.renderOrder = u.renderOrder, g.z = x, g.group = v), e++, g;
    }
    function a(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.push(g) : f.transparent === !0 ? i.push(g) : t.push(g);
    }
    function l(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.unshift(g) : f.transparent === !0 ? i.unshift(g) : t.unshift(g);
    }
    function c(u, d) {
        t.length > 1 && t.sort(u || px), n.length > 1 && n.sort(d || Yl), i.length > 1 && i.sort(d || Yl);
    }
    function h() {
        for(let u = e, d = s.length; u < d; u++){
            let f = s[u];
            if (f.id === null) break;
            f.id = null, f.object = null, f.geometry = null, f.material = null, f.group = null;
        }
    }
    return {
        opaque: t,
        transmissive: n,
        transparent: i,
        init: r,
        push: a,
        unshift: l,
        finish: h,
        sort: c
    };
}
function mx() {
    let s = new WeakMap;
    function e(n, i) {
        let r;
        return s.has(n) === !1 ? (r = new Zl, s.set(n, [
            r
        ])) : i >= s.get(n).length ? (r = new Zl, s.get(n).push(r)) : r = s.get(n)[i], r;
    }
    function t() {
        s = new WeakMap;
    }
    return {
        get: e,
        dispose: t
    };
}
function gx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        direction: new M,
                        color: new ae
                    };
                    break;
                case "SpotLight":
                    t = {
                        position: new M,
                        direction: new M,
                        color: new ae,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0
                    };
                    break;
                case "PointLight":
                    t = {
                        position: new M,
                        color: new ae,
                        distance: 0,
                        decay: 0
                    };
                    break;
                case "HemisphereLight":
                    t = {
                        direction: new M,
                        skyColor: new ae,
                        groundColor: new ae
                    };
                    break;
                case "RectAreaLight":
                    t = {
                        color: new ae,
                        position: new M,
                        halfWidth: new M,
                        halfHeight: new M
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
function xx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "SpotLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "PointLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
var yx = 0;
function vx(s, e) {
    return (e.castShadow ? 1 : 0) - (s.castShadow ? 1 : 0);
}
function _x(s, e) {
    let t = new gx, n = xx(), i = {
        version: 0,
        hash: {
            directionalLength: -1,
            pointLength: -1,
            spotLength: -1,
            rectAreaLength: -1,
            hemiLength: -1,
            numDirectionalShadows: -1,
            numPointShadows: -1,
            numSpotShadows: -1
        },
        ambient: [
            0,
            0,
            0
        ],
        probe: [],
        directional: [],
        directionalShadow: [],
        directionalShadowMap: [],
        directionalShadowMatrix: [],
        spot: [],
        spotShadow: [],
        spotShadowMap: [],
        spotShadowMatrix: [],
        rectArea: [],
        rectAreaLTC1: null,
        rectAreaLTC2: null,
        point: [],
        pointShadow: [],
        pointShadowMap: [],
        pointShadowMatrix: [],
        hemi: []
    };
    for(let h = 0; h < 9; h++)i.probe.push(new M);
    let r = new M, o = new pe, a = new pe;
    function l(h, u) {
        let d = 0, f = 0, m = 0;
        for(let k = 0; k < 9; k++)i.probe[k].set(0, 0, 0);
        let x = 0, v = 0, g = 0, p = 0, _ = 0, y = 0, b = 0, A = 0;
        h.sort(vx);
        let L = u !== !0 ? Math.PI : 1;
        for(let k = 0, B = h.length; k < B; k++){
            let P = h[k], w = P.color, E = P.intensity, D = P.distance, U = P.shadow && P.shadow.map ? P.shadow.map.texture : null;
            if (P.isAmbientLight) d += w.r * E * L, f += w.g * E * L, m += w.b * E * L;
            else if (P.isLightProbe) for(let F = 0; F < 9; F++)i.probe[F].addScaledVector(P.sh.coefficients[F], E);
            else if (P.isDirectionalLight) {
                let F = t.get(P);
                if (F.color.copy(P.color).multiplyScalar(P.intensity * L), P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, i.directionalShadow[x] = ne, i.directionalShadowMap[x] = U, i.directionalShadowMatrix[x] = P.shadow.matrix, y++;
                }
                i.directional[x] = F, x++;
            } else if (P.isSpotLight) {
                let F = t.get(P);
                if (F.position.setFromMatrixPosition(P.matrixWorld), F.color.copy(w).multiplyScalar(E * L), F.distance = D, F.coneCos = Math.cos(P.angle), F.penumbraCos = Math.cos(P.angle * (1 - P.penumbra)), F.decay = P.decay, P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, i.spotShadow[g] = ne, i.spotShadowMap[g] = U, i.spotShadowMatrix[g] = P.shadow.matrix, A++;
                }
                i.spot[g] = F, g++;
            } else if (P.isRectAreaLight) {
                let F = t.get(P);
                F.color.copy(w).multiplyScalar(E), F.halfWidth.set(P.width * .5, 0, 0), F.halfHeight.set(0, P.height * .5, 0), i.rectArea[p] = F, p++;
            } else if (P.isPointLight) {
                let F = t.get(P);
                if (F.color.copy(P.color).multiplyScalar(P.intensity * L), F.distance = P.distance, F.decay = P.decay, P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, ne.shadowCameraNear = O.camera.near, ne.shadowCameraFar = O.camera.far, i.pointShadow[v] = ne, i.pointShadowMap[v] = U, i.pointShadowMatrix[v] = P.shadow.matrix, b++;
                }
                i.point[v] = F, v++;
            } else if (P.isHemisphereLight) {
                let F = t.get(P);
                F.skyColor.copy(P.color).multiplyScalar(E * L), F.groundColor.copy(P.groundColor).multiplyScalar(E * L), i.hemi[_] = F, _++;
            }
        }
        p > 0 && (e.isWebGL2 || s.has("OES_texture_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_FLOAT_1, i.rectAreaLTC2 = ie.LTC_FLOAT_2) : s.has("OES_texture_half_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_HALF_1, i.rectAreaLTC2 = ie.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), i.ambient[0] = d, i.ambient[1] = f, i.ambient[2] = m;
        let I = i.hash;
        (I.directionalLength !== x || I.pointLength !== v || I.spotLength !== g || I.rectAreaLength !== p || I.hemiLength !== _ || I.numDirectionalShadows !== y || I.numPointShadows !== b || I.numSpotShadows !== A) && (i.directional.length = x, i.spot.length = g, i.rectArea.length = p, i.point.length = v, i.hemi.length = _, i.directionalShadow.length = y, i.directionalShadowMap.length = y, i.pointShadow.length = b, i.pointShadowMap.length = b, i.spotShadow.length = A, i.spotShadowMap.length = A, i.directionalShadowMatrix.length = y, i.pointShadowMatrix.length = b, i.spotShadowMatrix.length = A, I.directionalLength = x, I.pointLength = v, I.spotLength = g, I.rectAreaLength = p, I.hemiLength = _, I.numDirectionalShadows = y, I.numPointShadows = b, I.numSpotShadows = A, i.version = yx++);
    }
    function c(h, u) {
        let d = 0, f = 0, m = 0, x = 0, v = 0, g = u.matrixWorldInverse;
        for(let p = 0, _ = h.length; p < _; p++){
            let y = h[p];
            if (y.isDirectionalLight) {
                let b = i.directional[d];
                b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(g), d++;
            } else if (y.isSpotLight) {
                let b = i.spot[m];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(g), b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(g), m++;
            } else if (y.isRectAreaLight) {
                let b = i.rectArea[x];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(g), a.identity(), o.copy(y.matrixWorld), o.premultiply(g), a.extractRotation(o), b.halfWidth.set(y.width * .5, 0, 0), b.halfHeight.set(0, y.height * .5, 0), b.halfWidth.applyMatrix4(a), b.halfHeight.applyMatrix4(a), x++;
            } else if (y.isPointLight) {
                let b = i.point[f];
                b.position.setFromMatrixPosition(y.matrixWorld), b.position.applyMatrix4(g), f++;
            } else if (y.isHemisphereLight) {
                let b = i.hemi[v];
                b.direction.setFromMatrixPosition(y.matrixWorld), b.direction.transformDirection(g), b.direction.normalize(), v++;
            }
        }
    }
    return {
        setup: l,
        setupView: c,
        state: i
    };
}
function $l(s, e) {
    let t = new _x(s, e), n = [], i = [];
    function r() {
        n.length = 0, i.length = 0;
    }
    function o(u) {
        n.push(u);
    }
    function a(u) {
        i.push(u);
    }
    function l(u) {
        t.setup(n, u);
    }
    function c(u) {
        t.setupView(n, u);
    }
    return {
        init: r,
        state: {
            lightsArray: n,
            shadowsArray: i,
            lights: t
        },
        setupLights: l,
        setupLightsView: c,
        pushLight: o,
        pushShadow: a
    };
}
function Mx(s, e) {
    let t = new WeakMap;
    function n(r, o = 0) {
        let a;
        return t.has(r) === !1 ? (a = new $l(s, e), t.set(r, [
            a
        ])) : o >= t.get(r).length ? (a = new $l(s, e), t.get(r).push(a)) : a = t.get(r)[o], a;
    }
    function i() {
        t = new WeakMap;
    }
    return {
        get: n,
        dispose: i
    };
}
var eo = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDepthMaterial", this.depthPacking = Nd, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
    }
};
eo.prototype.isMeshDepthMaterial = !0;
var to = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDistanceMaterial", this.referencePosition = new M, this.nearDistance = 1, this.farDistance = 1e3, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
    }
};
to.prototype.isMeshDistanceMaterial = !0;
var bx = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, wx = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function yh(s, e, t) {
    let n = new Dr, i = new X, r = new X, o = new Ve, a = new eo({
        depthPacking: Bd
    }), l = new to, c = {}, h = t.maxTextureSize, u = {
        0: it,
        1: Ai,
        2: Ci
    }, d = new sn({
        defines: {
            VSM_SAMPLES: 8
        },
        uniforms: {
            shadow_pass: {
                value: null
            },
            resolution: {
                value: new X
            },
            radius: {
                value: 4
            }
        },
        vertexShader: bx,
        fragmentShader: wx
    }), f = d.clone();
    f.defines.HORIZONTAL_PASS = 1;
    let m = new _e;
    m.setAttribute("position", new Ue(new Float32Array([
        -1,
        -1,
        .5,
        3,
        -1,
        .5,
        -1,
        3,
        .5
    ]), 3));
    let x = new st(m, d), v = this;
    this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = Hc, this.render = function(y, b, A) {
        if (v.enabled === !1 || v.autoUpdate === !1 && v.needsUpdate === !1 || y.length === 0) return;
        let L = s.getRenderTarget(), I = s.getActiveCubeFace(), k = s.getActiveMipmapLevel(), B = s.state;
        B.setBlending(vn), B.buffers.color.setClear(1, 1, 1, 1), B.buffers.depth.setTest(!0), B.setScissorTest(!1);
        for(let P = 0, w = y.length; P < w; P++){
            let E = y[P], D = E.shadow;
            if (D === void 0) {
                console.warn("THREE.WebGLShadowMap:", E, "has no shadow.");
                continue;
            }
            if (D.autoUpdate === !1 && D.needsUpdate === !1) continue;
            i.copy(D.mapSize);
            let U = D.getFrameExtents();
            if (i.multiply(U), r.copy(D.mapSize), (i.x > h || i.y > h) && (i.x > h && (r.x = Math.floor(h / U.x), i.x = r.x * U.x, D.mapSize.x = r.x), i.y > h && (r.y = Math.floor(h / U.y), i.y = r.y * U.y, D.mapSize.y = r.y)), D.map === null && !D.isPointLightShadow && this.type === ir) {
                let O = {
                    minFilter: tt,
                    magFilter: tt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O), D.map.texture.name = E.name + ".shadowMap", D.mapPass = new At(i.x, i.y, O), D.camera.updateProjectionMatrix();
            }
            if (D.map === null) {
                let O = {
                    minFilter: rt,
                    magFilter: rt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O), D.map.texture.name = E.name + ".shadowMap", D.camera.updateProjectionMatrix();
            }
            s.setRenderTarget(D.map), s.clear();
            let F = D.getViewportCount();
            for(let O = 0; O < F; O++){
                let ne = D.getViewport(O);
                o.set(r.x * ne.x, r.y * ne.y, r.x * ne.z, r.y * ne.w), B.viewport(o), D.updateMatrices(E, O), n = D.getFrustum(), _(b, A, D.camera, E, this.type);
            }
            !D.isPointLightShadow && this.type === ir && g(D, A), D.needsUpdate = !1;
        }
        v.needsUpdate = !1, s.setRenderTarget(L, I, k);
    };
    function g(y, b) {
        let A = e.update(x);
        d.defines.VSM_SAMPLES !== y.blurSamples && (d.defines.VSM_SAMPLES = y.blurSamples, f.defines.VSM_SAMPLES = y.blurSamples, d.needsUpdate = !0, f.needsUpdate = !0), d.uniforms.shadow_pass.value = y.map.texture, d.uniforms.resolution.value = y.mapSize, d.uniforms.radius.value = y.radius, s.setRenderTarget(y.mapPass), s.clear(), s.renderBufferDirect(b, null, A, d, x, null), f.uniforms.shadow_pass.value = y.mapPass.texture, f.uniforms.resolution.value = y.mapSize, f.uniforms.radius.value = y.radius, s.setRenderTarget(y.map), s.clear(), s.renderBufferDirect(b, null, A, f, x, null);
    }
    function p(y, b, A, L, I, k, B) {
        let P = null, w = L.isPointLight === !0 ? y.customDistanceMaterial : y.customDepthMaterial;
        if (w !== void 0 ? P = w : P = L.isPointLight === !0 ? l : a, s.localClippingEnabled && A.clipShadows === !0 && A.clippingPlanes.length !== 0 || A.displacementMap && A.displacementScale !== 0 || A.alphaMap && A.alphaTest > 0) {
            let E = P.uuid, D = A.uuid, U = c[E];
            U === void 0 && (U = {}, c[E] = U);
            let F = U[D];
            F === void 0 && (F = P.clone(), U[D] = F), P = F;
        }
        return P.visible = A.visible, P.wireframe = A.wireframe, B === ir ? P.side = A.shadowSide !== null ? A.shadowSide : A.side : P.side = A.shadowSide !== null ? A.shadowSide : u[A.side], P.alphaMap = A.alphaMap, P.alphaTest = A.alphaTest, P.clipShadows = A.clipShadows, P.clippingPlanes = A.clippingPlanes, P.clipIntersection = A.clipIntersection, P.displacementMap = A.displacementMap, P.displacementScale = A.displacementScale, P.displacementBias = A.displacementBias, P.wireframeLinewidth = A.wireframeLinewidth, P.linewidth = A.linewidth, L.isPointLight === !0 && P.isMeshDistanceMaterial === !0 && (P.referencePosition.setFromMatrixPosition(L.matrixWorld), P.nearDistance = I, P.farDistance = k), P;
    }
    function _(y, b, A, L, I) {
        if (y.visible === !1) return;
        if (y.layers.test(b.layers) && (y.isMesh || y.isLine || y.isPoints) && (y.castShadow || y.receiveShadow && I === ir) && (!y.frustumCulled || n.intersectsObject(y))) {
            y.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse, y.matrixWorld);
            let P = e.update(y), w = y.material;
            if (Array.isArray(w)) {
                let E = P.groups;
                for(let D = 0, U = E.length; D < U; D++){
                    let F = E[D], O = w[F.materialIndex];
                    if (O && O.visible) {
                        let ne = p(y, P, O, L, A.near, A.far, I);
                        s.renderBufferDirect(A, null, P, ne, y, F);
                    }
                }
            } else if (w.visible) {
                let E = p(y, P, w, L, A.near, A.far, I);
                s.renderBufferDirect(A, null, P, E, y, null);
            }
        }
        let B = y.children;
        for(let P = 0, w = B.length; P < w; P++)_(B[P], b, A, L, I);
    }
}
function Sx(s, e, t) {
    let n = t.isWebGL2;
    function i() {
        let R = !1, ee = new Ve, Q = null, Ee = new Ve(0, 0, 0, 0);
        return {
            setMask: function(me) {
                Q !== me && !R && (s.colorMask(me, me, me, me), Q = me);
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me, Re, oe, Le, Xe) {
                Xe === !0 && (me *= Le, Re *= Le, oe *= Le), ee.set(me, Re, oe, Le), Ee.equals(ee) === !1 && (s.clearColor(me, Re, oe, Le), Ee.copy(ee));
            },
            reset: function() {
                R = !1, Q = null, Ee.set(-1, 0, 0, 0);
            }
        };
    }
    function r() {
        let R = !1, ee = null, Q = null, Ee = null;
        return {
            setTest: function(me) {
                me ? le(2929) : fe(2929);
            },
            setMask: function(me) {
                ee !== me && !R && (s.depthMask(me), ee = me);
            },
            setFunc: function(me) {
                if (Q !== me) {
                    if (me) switch(me){
                        case Eu:
                            s.depthFunc(512);
                            break;
                        case Au:
                            s.depthFunc(519);
                            break;
                        case Cu:
                            s.depthFunc(513);
                            break;
                        case ea:
                            s.depthFunc(515);
                            break;
                        case Lu:
                            s.depthFunc(514);
                            break;
                        case Ru:
                            s.depthFunc(518);
                            break;
                        case Pu:
                            s.depthFunc(516);
                            break;
                        case Iu:
                            s.depthFunc(517);
                            break;
                        default:
                            s.depthFunc(515);
                    }
                    else s.depthFunc(515);
                    Q = me;
                }
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me) {
                Ee !== me && (s.clearDepth(me), Ee = me);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null;
            }
        };
    }
    function o() {
        let R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
        return {
            setTest: function(We) {
                R || (We ? le(2960) : fe(2960));
            },
            setMask: function(We) {
                ee !== We && !R && (s.stencilMask(We), ee = We);
            },
            setFunc: function(We, Ut, Ot) {
                (Q !== We || Ee !== Ut || me !== Ot) && (s.stencilFunc(We, Ut, Ot), Q = We, Ee = Ut, me = Ot);
            },
            setOp: function(We, Ut, Ot) {
                (Re !== We || oe !== Ut || Le !== Ot) && (s.stencilOp(We, Ut, Ot), Re = We, oe = Ut, Le = Ot);
            },
            setLocked: function(We) {
                R = We;
            },
            setClear: function(We) {
                Xe !== We && (s.clearStencil(We), Xe = We);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
            }
        };
    }
    let a = new i, l = new r, c = new o, h = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, P = s.getParameter(35661), w = !1, E = 0, D = s.getParameter(7938);
    D.indexOf("WebGL") !== -1 ? (E = parseFloat(/^WebGL (\d)/.exec(D)[1]), w = E >= 1) : D.indexOf("OpenGL ES") !== -1 && (E = parseFloat(/^OpenGL ES (\d)/.exec(D)[1]), w = E >= 2);
    let U = null, F = {}, O = s.getParameter(3088), ne = s.getParameter(2978), ce = new Ve().fromArray(O), V = new Ve().fromArray(ne);
    function W(R, ee, Q) {
        let Ee = new Uint8Array(4), me = s.createTexture();
        s.bindTexture(R, me), s.texParameteri(R, 10241, 9728), s.texParameteri(R, 10240, 9728);
        for(let Re = 0; Re < Q; Re++)s.texImage2D(ee + Re, 0, 6408, 1, 1, 0, 6408, 5121, Ee);
        return me;
    }
    let he = {};
    he[3553] = W(3553, 3553, 1), he[34067] = W(34067, 34069, 6), a.setClear(0, 0, 0, 1), l.setClear(1), c.setClear(0), le(2929), l.setFunc(ea), Oe(!1), G(tl), le(2884), ge(vn);
    function le(R) {
        h[R] !== !0 && (s.enable(R), h[R] = !0);
    }
    function fe(R) {
        h[R] !== !1 && (s.disable(R), h[R] = !1);
    }
    function Be(R, ee) {
        return u[R] !== ee ? (s.bindFramebuffer(R, ee), u[R] = ee, n && (R === 36009 && (u[36160] = ee), R === 36160 && (u[36009] = ee)), !0) : !1;
    }
    function Y(R) {
        return d !== R ? (s.useProgram(R), d = R, !0) : !1;
    }
    let Ce = {
        [_i]: 32774,
        [mu]: 32778,
        [gu]: 32779
    };
    if (n) Ce[sl] = 32775, Ce[ol] = 32776;
    else {
        let R = e.get("EXT_blend_minmax");
        R !== null && (Ce[sl] = R.MIN_EXT, Ce[ol] = R.MAX_EXT);
    }
    let ye = {
        [xu]: 0,
        [yu]: 1,
        [vu]: 768,
        [Gc]: 770,
        [Tu]: 776,
        [wu]: 774,
        [Mu]: 772,
        [_u]: 769,
        [Vc]: 771,
        [Su]: 775,
        [bu]: 773
    };
    function ge(R, ee, Q, Ee, me, Re, oe, Le) {
        if (R === vn) {
            f === !0 && (fe(3042), f = !1);
            return;
        }
        if (f === !1 && (le(3042), f = !0), R !== pu) {
            if (R !== m || Le !== b) {
                if ((x !== _i || p !== _i) && (s.blendEquation(32774), x = _i, p = _i), Le) switch(R){
                    case sr:
                        s.blendFuncSeparate(1, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(1, 1);
                        break;
                    case il:
                        s.blendFuncSeparate(0, 0, 769, 771);
                        break;
                    case rl:
                        s.blendFuncSeparate(0, 768, 0, 770);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                else switch(R){
                    case sr:
                        s.blendFuncSeparate(770, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(770, 1);
                        break;
                    case il:
                        s.blendFunc(0, 769);
                        break;
                    case rl:
                        s.blendFunc(0, 768);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                v = null, g = null, _ = null, y = null, m = R, b = Le;
            }
            return;
        }
        me = me || ee, Re = Re || Q, oe = oe || Ee, (ee !== x || me !== p) && (s.blendEquationSeparate(Ce[ee], Ce[me]), x = ee, p = me), (Q !== v || Ee !== g || Re !== _ || oe !== y) && (s.blendFuncSeparate(ye[Q], ye[Ee], ye[Re], ye[oe]), v = Q, g = Ee, _ = Re, y = oe), m = R, b = null;
    }
    function xe(R, ee) {
        R.side === Ci ? fe(2884) : le(2884);
        let Q = R.side === it;
        ee && (Q = !Q), Oe(Q), R.blending === sr && R.transparent === !1 ? ge(vn) : ge(R.blending, R.blendEquation, R.blendSrc, R.blendDst, R.blendEquationAlpha, R.blendSrcAlpha, R.blendDstAlpha, R.premultipliedAlpha), l.setFunc(R.depthFunc), l.setTest(R.depthTest), l.setMask(R.depthWrite), a.setMask(R.colorWrite);
        let Ee = R.stencilWrite;
        c.setTest(Ee), Ee && (c.setMask(R.stencilWriteMask), c.setFunc(R.stencilFunc, R.stencilRef, R.stencilFuncMask), c.setOp(R.stencilFail, R.stencilZFail, R.stencilZPass)), K(R.polygonOffset, R.polygonOffsetFactor, R.polygonOffsetUnits), R.alphaToCoverage === !0 ? le(32926) : fe(32926);
    }
    function Oe(R) {
        A !== R && (R ? s.frontFace(2304) : s.frontFace(2305), A = R);
    }
    function G(R) {
        R !== uu ? (le(2884), R !== L && (R === tl ? s.cullFace(1029) : R === du ? s.cullFace(1028) : s.cullFace(1032))) : fe(2884), L = R;
    }
    function j(R) {
        R !== I && (w && s.lineWidth(R), I = R);
    }
    function K(R, ee, Q) {
        R ? (le(32823), (k !== ee || B !== Q) && (s.polygonOffset(ee, Q), k = ee, B = Q)) : fe(32823);
    }
    function ue(R) {
        R ? le(3089) : fe(3089);
    }
    function se(R) {
        R === void 0 && (R = 33984 + P - 1), U !== R && (s.activeTexture(R), U = R);
    }
    function Se(R, ee) {
        U === null && se();
        let Q = F[U];
        Q === void 0 && (Q = {
            type: void 0,
            texture: void 0
        }, F[U] = Q), (Q.type !== R || Q.texture !== ee) && (s.bindTexture(R, ee || he[R]), Q.type = R, Q.texture = ee);
    }
    function Te() {
        let R = F[U];
        R !== void 0 && R.type !== void 0 && (s.bindTexture(R.type, null), R.type = void 0, R.texture = void 0);
    }
    function Pe() {
        try {
            s.compressedTexImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Ye() {
        try {
            s.texSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function C() {
        try {
            s.texSubImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function T() {
        try {
            s.compressedTexSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function J() {
        try {
            s.texStorage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function $() {
        try {
            s.texStorage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function re() {
        try {
            s.texImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Z() {
        try {
            s.texImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Me(R) {
        ce.equals(R) === !1 && (s.scissor(R.x, R.y, R.z, R.w), ce.copy(R));
    }
    function ve(R) {
        V.equals(R) === !1 && (s.viewport(R.x, R.y, R.z, R.w), V.copy(R));
    }
    function te() {
        s.disable(3042), s.disable(2884), s.disable(2929), s.disable(32823), s.disable(3089), s.disable(2960), s.disable(32926), s.blendEquation(32774), s.blendFunc(1, 0), s.blendFuncSeparate(1, 0, 1, 0), s.colorMask(!0, !0, !0, !0), s.clearColor(0, 0, 0, 0), s.depthMask(!0), s.depthFunc(513), s.clearDepth(1), s.stencilMask(4294967295), s.stencilFunc(519, 0, 4294967295), s.stencilOp(7680, 7680, 7680), s.clearStencil(0), s.cullFace(1029), s.frontFace(2305), s.polygonOffset(0, 0), s.activeTexture(33984), s.bindFramebuffer(36160, null), n === !0 && (s.bindFramebuffer(36009, null), s.bindFramebuffer(36008, null)), s.useProgram(null), s.lineWidth(1), s.scissor(0, 0, s.canvas.width, s.canvas.height), s.viewport(0, 0, s.canvas.width, s.canvas.height), h = {}, U = null, F = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, ce.set(0, 0, s.canvas.width, s.canvas.height), V.set(0, 0, s.canvas.width, s.canvas.height), a.reset(), l.reset(), c.reset();
    }
    return {
        buffers: {
            color: a,
            depth: l,
            stencil: c
        },
        enable: le,
        disable: fe,
        bindFramebuffer: Be,
        useProgram: Y,
        setBlending: ge,
        setMaterial: xe,
        setFlipSided: Oe,
        setCullFace: G,
        setLineWidth: j,
        setPolygonOffset: K,
        setScissorTest: ue,
        activeTexture: se,
        bindTexture: Se,
        unbindTexture: Te,
        compressedTexImage2D: Pe,
        texImage2D: re,
        texImage3D: Z,
        texStorage2D: J,
        texStorage3D: $,
        texSubImage2D: Ye,
        texSubImage3D: C,
        compressedTexSubImage2D: T,
        scissor: Me,
        viewport: ve,
        reset: te
    };
}
function Tx(s, e, t, n, i, r, o) {
    let a = i.isWebGL2, l = i.maxTextures, c = i.maxCubemapSize, h = i.maxTextureSize, u = i.maxSamples, f = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : void 0, m = new WeakMap, x, v = !1;
    try {
        v = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
    } catch  {}
    function g(C, T) {
        return v ? new OffscreenCanvas(C, T) : qs("canvas");
    }
    function p(C, T, J, $) {
        let re = 1;
        if ((C.width > $ || C.height > $) && (re = $ / Math.max(C.width, C.height)), re < 1 || T === !0) if (typeof HTMLImageElement < "u" && C instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && C instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && C instanceof ImageBitmap) {
            let Z = T ? Jc : Math.floor, Me = Z(re * C.width), ve = Z(re * C.height);
            x === void 0 && (x = g(Me, ve));
            let te = J ? g(Me, ve) : x;
            return te.width = Me, te.height = ve, te.getContext("2d").drawImage(C, 0, 0, Me, ve), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + C.width + "x" + C.height + ") to (" + Me + "x" + ve + ")."), te;
        } else return "data" in C && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + C.width + "x" + C.height + ")."), C;
        return C;
    }
    function _(C) {
        return ia(C.width) && ia(C.height);
    }
    function y(C) {
        return a ? !1 : C.wrapS !== vt || C.wrapT !== vt || C.minFilter !== rt && C.minFilter !== tt;
    }
    function b(C, T) {
        return C.generateMipmaps && T && C.minFilter !== rt && C.minFilter !== tt;
    }
    function A(C) {
        s.generateMipmap(C);
    }
    function L(C, T, J, $) {
        if (a === !1) return T;
        if (C !== null) {
            if (s[C] !== void 0) return s[C];
            console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + C + "'");
        }
        let re = T;
        return T === 6403 && (J === 5126 && (re = 33326), J === 5131 && (re = 33325), J === 5121 && (re = 33321)), T === 6407 && (J === 5126 && (re = 34837), J === 5131 && (re = 34843), J === 5121 && (re = 32849)), T === 6408 && (J === 5126 && (re = 34836), J === 5131 && (re = 34842), J === 5121 && (re = $ === Oi ? 35907 : 32856)), (re === 33325 || re === 33326 || re === 34842 || re === 34836) && e.get("EXT_color_buffer_float"), re;
    }
    function I(C, T, J) {
        return b(C, J) === !0 || C.isFramebufferTexture && C.minFilter !== rt && C.minFilter !== tt ? Math.log2(Math.max(T.width, T.height)) + 1 : C.mipmaps !== void 0 && C.mipmaps.length > 0 ? C.mipmaps.length : C.isCompressedTexture && Array.isArray(C.image) ? T.mipmaps.length : 1;
    }
    function k(C) {
        return C === rt || C === ta || C === na ? 9728 : 9729;
    }
    function B(C) {
        let T = C.target;
        T.removeEventListener("dispose", B), w(T), T.isVideoTexture && m.delete(T), o.memory.textures--;
    }
    function P(C) {
        let T = C.target;
        T.removeEventListener("dispose", P), E(T);
    }
    function w(C) {
        let T = n.get(C);
        T.__webglInit !== void 0 && (s.deleteTexture(T.__webglTexture), n.remove(C));
    }
    function E(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        if (!!C) {
            if ($.__webglTexture !== void 0 && (s.deleteTexture($.__webglTexture), o.memory.textures--), C.depthTexture && C.depthTexture.dispose(), C.isWebGLCubeRenderTarget) for(let re = 0; re < 6; re++)s.deleteFramebuffer(J.__webglFramebuffer[re]), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer[re]);
            else s.deleteFramebuffer(J.__webglFramebuffer), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer), J.__webglMultisampledFramebuffer && s.deleteFramebuffer(J.__webglMultisampledFramebuffer), J.__webglColorRenderbuffer && s.deleteRenderbuffer(J.__webglColorRenderbuffer), J.__webglDepthRenderbuffer && s.deleteRenderbuffer(J.__webglDepthRenderbuffer);
            if (C.isWebGLMultipleRenderTargets) for(let re = 0, Z = T.length; re < Z; re++){
                let Me = n.get(T[re]);
                Me.__webglTexture && (s.deleteTexture(Me.__webglTexture), o.memory.textures--), n.remove(T[re]);
            }
            n.remove(T), n.remove(C);
        }
    }
    let D = 0;
    function U() {
        D = 0;
    }
    function F() {
        let C = D;
        return C >= l && console.warn("THREE.WebGLTextures: Trying to use " + C + " texture units while this GPU supports only " + l), D += 1, C;
    }
    function O(C, T) {
        let J = n.get(C);
        if (C.isVideoTexture && se(C), C.version > 0 && J.__version !== C.version) {
            let $ = C.image;
            if ($ === void 0) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else if ($.complete === !1) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            else {
                Be(J, C, T);
                return;
            }
        }
        t.activeTexture(33984 + T), t.bindTexture(3553, J.__webglTexture);
    }
    function ne(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(35866, J.__webglTexture);
    }
    function ce(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(32879, J.__webglTexture);
    }
    function V(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Y(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(34067, J.__webglTexture);
    }
    let W = {
        [Ns]: 10497,
        [vt]: 33071,
        [Bs]: 33648
    }, he = {
        [rt]: 9728,
        [ta]: 9984,
        [na]: 9986,
        [tt]: 9729,
        [Wc]: 9985,
        [Ui]: 9987
    };
    function le(C, T, J) {
        if (J ? (s.texParameteri(C, 10242, W[T.wrapS]), s.texParameteri(C, 10243, W[T.wrapT]), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, W[T.wrapR]), s.texParameteri(C, 10240, he[T.magFilter]), s.texParameteri(C, 10241, he[T.minFilter])) : (s.texParameteri(C, 10242, 33071), s.texParameteri(C, 10243, 33071), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, 33071), (T.wrapS !== vt || T.wrapT !== vt) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), s.texParameteri(C, 10240, k(T.magFilter)), s.texParameteri(C, 10241, k(T.minFilter)), T.minFilter !== rt && T.minFilter !== tt && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), e.has("EXT_texture_filter_anisotropic") === !0) {
            let $ = e.get("EXT_texture_filter_anisotropic");
            if (T.type === nn && e.has("OES_texture_float_linear") === !1 || a === !1 && T.type === kn && e.has("OES_texture_half_float_linear") === !1) return;
            (T.anisotropy > 1 || n.get(T).__currentAnisotropy) && (s.texParameterf(C, $.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(T.anisotropy, i.getMaxAnisotropy())), n.get(T).__currentAnisotropy = T.anisotropy);
        }
    }
    function fe(C, T) {
        C.__webglInit === void 0 && (C.__webglInit = !0, T.addEventListener("dispose", B), C.__webglTexture = s.createTexture(), o.memory.textures++);
    }
    function Be(C, T, J) {
        let $ = 3553;
        T.isDataTexture2DArray && ($ = 35866), T.isDataTexture3D && ($ = 32879), fe(C, T), t.activeTexture(33984 + J), t.bindTexture($, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let re = y(T) && _(T.image) === !1, Z = p(T.image, re, !1, h), Me = _(Z) || a, ve = r.convert(T.format), te = r.convert(T.type), R = L(T.internalFormat, ve, te, T.encoding);
        le($, T, Me);
        let ee, Q = T.mipmaps, Ee = a && T.isVideoTexture !== !0, me = C.__version === void 0, Re = I(T, Z, Me);
        if (T.isDepthTexture) R = 6402, a ? T.type === nn ? R = 36012 : T.type === Ps ? R = 33190 : T.type === Ti ? R = 35056 : R = 33189 : T.type === nn && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), T.format === Vn && R === 6402 && T.type !== cr && T.type !== Ps && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), T.type = cr, te = r.convert(T.type)), T.format === Li && R === 6402 && (R = 34041, T.type !== Ti && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), T.type = Ti, te = r.convert(T.type))), Ee && me ? t.texStorage2D(3553, 1, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (T.isDataTexture) if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], Ee ? t.texSubImage2D(3553, 0, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe, R, ee.width, ee.height, 0, ve, te, ee.data);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, Z.width, Z.height, ve, te, Z.data)) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, Z.data);
        else if (T.isCompressedTexture) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], T.format !== ct && T.format !== Gn ? ve !== null ? Ee ? t.compressedTexSubImage2D(3553, oe, 0, 0, ee.width, ee.height, ve, ee.data) : t.compressedTexImage2D(3553, oe, R, ee.width, ee.height, 0, ee.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : Ee ? t.texSubImage2D(3553, oe, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe, R, ee.width, ee.height, 0, ve, te, ee.data);
        } else if (T.isDataTexture2DArray) Ee ? (me && t.texStorage3D(35866, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(35866, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(35866, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isDataTexture3D) Ee ? (me && t.texStorage3D(32879, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(32879, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(32879, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isFramebufferTexture) Ee && me ? t.texStorage2D(3553, Re, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], Ee ? t.texSubImage2D(3553, oe, 0, 0, ve, te, ee) : t.texImage2D(3553, oe, R, ve, te, ee);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, ve, te, Z)) : t.texImage2D(3553, 0, R, ve, te, Z);
        b(T, Me) && A($), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Y(C, T, J) {
        if (T.image.length !== 6) return;
        fe(C, T), t.activeTexture(33984 + J), t.bindTexture(34067, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let $ = T && (T.isCompressedTexture || T.image[0].isCompressedTexture), re = T.image[0] && T.image[0].isDataTexture, Z = [];
        for(let oe = 0; oe < 6; oe++)!$ && !re ? Z[oe] = p(T.image[oe], !1, !0, c) : Z[oe] = re ? T.image[oe].image : T.image[oe];
        let Me = Z[0], ve = _(Me) || a, te = r.convert(T.format), R = r.convert(T.type), ee = L(T.internalFormat, te, R, T.encoding), Q = a && T.isVideoTexture !== !0, Ee = C.__version === void 0, me = I(T, Me, ve);
        le(34067, T, ve);
        let Re;
        if ($) {
            Q && Ee && t.texStorage2D(34067, me, ee, Me.width, Me.height);
            for(let oe = 0; oe < 6; oe++){
                Re = Z[oe].mipmaps;
                for(let Le = 0; Le < Re.length; Le++){
                    let Xe = Re[Le];
                    T.format !== ct && T.format !== Gn ? te !== null ? Q ? t.compressedTexSubImage2D(34069 + oe, Le, 0, 0, Xe.width, Xe.height, te, Xe.data) : t.compressedTexImage2D(34069 + oe, Le, ee, Xe.width, Xe.height, 0, Xe.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : Q ? t.texSubImage2D(34069 + oe, Le, 0, 0, Xe.width, Xe.height, te, R, Xe.data) : t.texImage2D(34069 + oe, Le, ee, Xe.width, Xe.height, 0, te, R, Xe.data);
                }
            }
        } else {
            Re = T.mipmaps, Q && Ee && (Re.length > 0 && me++, t.texStorage2D(34067, me, ee, Z[0].width, Z[0].height));
            for(let oe = 0; oe < 6; oe++)if (re) {
                Q ? t.texSubImage2D(34069 + oe, 0, 0, 0, Z[oe].width, Z[oe].height, te, R, Z[oe].data) : t.texImage2D(34069 + oe, 0, ee, Z[oe].width, Z[oe].height, 0, te, R, Z[oe].data);
                for(let Le = 0; Le < Re.length; Le++){
                    let We = Re[Le].image[oe].image;
                    Q ? t.texSubImage2D(34069 + oe, Le + 1, 0, 0, We.width, We.height, te, R, We.data) : t.texImage2D(34069 + oe, Le + 1, ee, We.width, We.height, 0, te, R, We.data);
                }
            } else {
                Q ? t.texSubImage2D(34069 + oe, 0, 0, 0, te, R, Z[oe]) : t.texImage2D(34069 + oe, 0, ee, te, R, Z[oe]);
                for(let Le = 0; Le < Re.length; Le++){
                    let Xe = Re[Le];
                    Q ? t.texSubImage2D(34069 + oe, Le + 1, 0, 0, te, R, Xe.image[oe]) : t.texImage2D(34069 + oe, Le + 1, ee, te, R, Xe.image[oe]);
                }
            }
        }
        b(T, ve) && A(34067), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Ce(C, T, J, $, re) {
        let Z = r.convert(J.format), Me = r.convert(J.type), ve = L(J.internalFormat, Z, Me, J.encoding);
        n.get(T).__hasExternalTextures || (re === 32879 || re === 35866 ? t.texImage3D(re, 0, ve, T.width, T.height, T.depth, 0, Z, Me, null) : t.texImage2D(re, 0, ve, T.width, T.height, 0, Z, Me, null)), t.bindFramebuffer(36160, C), T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, $, re, n.get(J).__webglTexture, 0, ue(T)) : s.framebufferTexture2D(36160, $, re, n.get(J).__webglTexture, 0), t.bindFramebuffer(36160, null);
    }
    function ye(C, T, J) {
        if (s.bindRenderbuffer(36161, C), T.depthBuffer && !T.stencilBuffer) {
            let $ = 33189;
            if (J || T.useRenderToTexture) {
                let re = T.depthTexture;
                re && re.isDepthTexture && (re.type === nn ? $ = 36012 : re.type === Ps && ($ = 33190));
                let Z = ue(T);
                T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, Z, $, T.width, T.height) : s.renderbufferStorageMultisample(36161, Z, $, T.width, T.height);
            } else s.renderbufferStorage(36161, $, T.width, T.height);
            s.framebufferRenderbuffer(36160, 36096, 36161, C);
        } else if (T.depthBuffer && T.stencilBuffer) {
            let $ = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, $, 35056, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, $, 35056, T.width, T.height) : s.renderbufferStorage(36161, 34041, T.width, T.height), s.framebufferRenderbuffer(36160, 33306, 36161, C);
        } else {
            let $ = T.isWebGLMultipleRenderTargets === !0 ? T.texture[0] : T.texture, re = r.convert($.format), Z = r.convert($.type), Me = L($.internalFormat, re, Z, $.encoding), ve = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, ve, Me, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, ve, Me, T.width, T.height) : s.renderbufferStorage(36161, Me, T.width, T.height);
        }
        s.bindRenderbuffer(36161, null);
    }
    function ge(C, T) {
        if (T && T.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
        if (t.bindFramebuffer(36160, C), !(T.depthTexture && T.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
        (!n.get(T.depthTexture).__webglTexture || T.depthTexture.image.width !== T.width || T.depthTexture.image.height !== T.height) && (T.depthTexture.image.width = T.width, T.depthTexture.image.height = T.height, T.depthTexture.needsUpdate = !0), O(T.depthTexture, 0);
        let $ = n.get(T.depthTexture).__webglTexture, re = ue(T);
        if (T.depthTexture.format === Vn) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, $, 0, re) : s.framebufferTexture2D(36160, 36096, 3553, $, 0);
        else if (T.depthTexture.format === Li) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, $, 0, re) : s.framebufferTexture2D(36160, 33306, 3553, $, 0);
        else throw new Error("Unknown depthTexture format");
    }
    function xe(C) {
        let T = n.get(C), J = C.isWebGLCubeRenderTarget === !0;
        if (C.depthTexture && !T.__autoAllocateDepthBuffer) {
            if (J) throw new Error("target.depthTexture not supported in Cube render targets");
            ge(T.__webglFramebuffer, C);
        } else if (J) {
            T.__webglDepthbuffer = [];
            for(let $ = 0; $ < 6; $++)t.bindFramebuffer(36160, T.__webglFramebuffer[$]), T.__webglDepthbuffer[$] = s.createRenderbuffer(), ye(T.__webglDepthbuffer[$], C, !1);
        } else t.bindFramebuffer(36160, T.__webglFramebuffer), T.__webglDepthbuffer = s.createRenderbuffer(), ye(T.__webglDepthbuffer, C, !1);
        t.bindFramebuffer(36160, null);
    }
    function Oe(C, T, J) {
        let $ = n.get(C);
        T !== void 0 && Ce($.__webglFramebuffer, C, C.texture, 36064, 3553), J !== void 0 && xe(C);
    }
    function G(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        C.addEventListener("dispose", P), C.isWebGLMultipleRenderTargets !== !0 && ($.__webglTexture === void 0 && ($.__webglTexture = s.createTexture()), $.__version = T.version, o.memory.textures++);
        let re = C.isWebGLCubeRenderTarget === !0, Z = C.isWebGLMultipleRenderTargets === !0, Me = T.isDataTexture3D || T.isDataTexture2DArray, ve = _(C) || a;
        if (a && T.format === Gn && (T.type === nn || T.type === kn) && (T.format = ct, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), re) {
            J.__webglFramebuffer = [];
            for(let te = 0; te < 6; te++)J.__webglFramebuffer[te] = s.createFramebuffer();
        } else if (J.__webglFramebuffer = s.createFramebuffer(), Z) if (i.drawBuffers) {
            let te = C.texture;
            for(let R = 0, ee = te.length; R < ee; R++){
                let Q = n.get(te[R]);
                Q.__webglTexture === void 0 && (Q.__webglTexture = s.createTexture(), o.memory.textures++);
            }
        } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
        else if (C.useRenderbuffer) if (a) {
            J.__webglMultisampledFramebuffer = s.createFramebuffer(), J.__webglColorRenderbuffer = s.createRenderbuffer(), s.bindRenderbuffer(36161, J.__webglColorRenderbuffer);
            let te = r.convert(T.format), R = r.convert(T.type), ee = L(T.internalFormat, te, R, T.encoding), Q = ue(C);
            s.renderbufferStorageMultisample(36161, Q, ee, C.width, C.height), t.bindFramebuffer(36160, J.__webglMultisampledFramebuffer), s.framebufferRenderbuffer(36160, 36064, 36161, J.__webglColorRenderbuffer), s.bindRenderbuffer(36161, null), C.depthBuffer && (J.__webglDepthRenderbuffer = s.createRenderbuffer(), ye(J.__webglDepthRenderbuffer, C, !0)), t.bindFramebuffer(36160, null);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
        if (re) {
            t.bindTexture(34067, $.__webglTexture), le(34067, T, ve);
            for(let te = 0; te < 6; te++)Ce(J.__webglFramebuffer[te], C, T, 36064, 34069 + te);
            b(T, ve) && A(34067), t.unbindTexture();
        } else if (Z) {
            let te = C.texture;
            for(let R = 0, ee = te.length; R < ee; R++){
                let Q = te[R], Ee = n.get(Q);
                t.bindTexture(3553, Ee.__webglTexture), le(3553, Q, ve), Ce(J.__webglFramebuffer, C, Q, 36064 + R, 3553), b(Q, ve) && A(3553);
            }
            t.unbindTexture();
        } else {
            let te = 3553;
            Me && (a ? te = T.isDataTexture3D ? 32879 : 35866 : console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")), t.bindTexture(te, $.__webglTexture), le(te, T, ve), Ce(J.__webglFramebuffer, C, T, 36064, te), b(T, ve) && A(te), t.unbindTexture();
        }
        C.depthBuffer && xe(C);
    }
    function j(C) {
        let T = _(C) || a, J = C.isWebGLMultipleRenderTargets === !0 ? C.texture : [
            C.texture
        ];
        for(let $ = 0, re = J.length; $ < re; $++){
            let Z = J[$];
            if (b(Z, T)) {
                let Me = C.isWebGLCubeRenderTarget ? 34067 : 3553, ve = n.get(Z).__webglTexture;
                t.bindTexture(Me, ve), A(Me), t.unbindTexture();
            }
        }
    }
    function K(C) {
        if (C.useRenderbuffer) if (a) {
            let T = C.width, J = C.height, $ = 16384, re = [
                36064
            ], Z = C.stencilBuffer ? 33306 : 36096;
            C.depthBuffer && re.push(Z), C.ignoreDepthForMultisampleCopy || (C.depthBuffer && ($ |= 256), C.stencilBuffer && ($ |= 1024));
            let Me = n.get(C);
            t.bindFramebuffer(36008, Me.__webglMultisampledFramebuffer), t.bindFramebuffer(36009, Me.__webglFramebuffer), C.ignoreDepthForMultisampleCopy && (s.invalidateFramebuffer(36008, [
                Z
            ]), s.invalidateFramebuffer(36009, [
                Z
            ])), s.blitFramebuffer(0, 0, T, J, 0, 0, T, J, $, 9728), s.invalidateFramebuffer(36008, re), t.bindFramebuffer(36008, null), t.bindFramebuffer(36009, Me.__webglMultisampledFramebuffer);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
    }
    function ue(C) {
        return a && (C.useRenderbuffer || C.useRenderToTexture) ? Math.min(u, C.samples) : 0;
    }
    function se(C) {
        let T = o.render.frame;
        m.get(C) !== T && (m.set(C, T), C.update());
    }
    let Se = !1, Te = !1;
    function Pe(C, T) {
        C && C.isWebGLRenderTarget && (Se === !1 && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), Se = !0), C = C.texture), O(C, T);
    }
    function Ye(C, T) {
        C && C.isWebGLCubeRenderTarget && (Te === !1 && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), Te = !0), C = C.texture), V(C, T);
    }
    this.allocateTextureUnit = F, this.resetTextureUnits = U, this.setTexture2D = O, this.setTexture2DArray = ne, this.setTexture3D = ce, this.setTextureCube = V, this.rebindTextures = Oe, this.setupRenderTarget = G, this.updateRenderTargetMipmap = j, this.updateMultisampleRenderTarget = K, this.setupDepthRenderbuffer = xe, this.setupFrameBufferTexture = Ce, this.safeSetTexture2D = Pe, this.safeSetTextureCube = Ye;
}
function Ex(s, e, t) {
    let n = t.isWebGL2;
    function i(r) {
        let o;
        if (r === rn) return 5121;
        if (r === Vu) return 32819;
        if (r === Wu) return 32820;
        if (r === qu) return 33635;
        if (r === Hu) return 5120;
        if (r === ku) return 5122;
        if (r === cr) return 5123;
        if (r === Gu) return 5124;
        if (r === Ps) return 5125;
        if (r === nn) return 5126;
        if (r === kn) return n ? 5131 : (o = e.get("OES_texture_half_float"), o !== null ? o.HALF_FLOAT_OES : null);
        if (r === Xu) return 6406;
        if (r === Gn) return 6407;
        if (r === ct) return 6408;
        if (r === Ju) return 6409;
        if (r === Yu) return 6410;
        if (r === Vn) return 6402;
        if (r === Li) return 34041;
        if (r === Zu) return 6403;
        if (r === $u) return 36244;
        if (r === ju) return 33319;
        if (r === Qu) return 33320;
        if (r === Ku) return 36248;
        if (r === ed) return 36249;
        if (r === al || r === ll || r === cl || r === hl) if (o = e.get("WEBGL_compressed_texture_s3tc"), o !== null) {
            if (r === al) return o.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (r === ll) return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (r === cl) return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (r === hl) return o.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        } else return null;
        if (r === ul || r === dl || r === fl || r === pl) if (o = e.get("WEBGL_compressed_texture_pvrtc"), o !== null) {
            if (r === ul) return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (r === dl) return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (r === fl) return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (r === pl) return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
        } else return null;
        if (r === td) return o = e.get("WEBGL_compressed_texture_etc1"), o !== null ? o.COMPRESSED_RGB_ETC1_WEBGL : null;
        if ((r === ml || r === gl) && (o = e.get("WEBGL_compressed_texture_etc"), o !== null)) {
            if (r === ml) return o.COMPRESSED_RGB8_ETC2;
            if (r === gl) return o.COMPRESSED_RGBA8_ETC2_EAC;
        }
        if (r === nd || r === id || r === rd || r === sd || r === od || r === ad || r === ld || r === cd || r === hd || r === ud || r === dd || r === fd || r === pd || r === md || r === xd || r === yd || r === vd || r === _d || r === Md || r === bd || r === wd || r === Sd || r === Td || r === Ed || r === Ad || r === Cd || r === Ld || r === Rd) return o = e.get("WEBGL_compressed_texture_astc"), o !== null ? r : null;
        if (r === gd) return o = e.get("EXT_texture_compression_bptc"), o !== null ? r : null;
        if (r === Ti) return n ? 34042 : (o = e.get("WEBGL_depth_texture"), o !== null ? o.UNSIGNED_INT_24_8_WEBGL : null);
    }
    return {
        convert: i
    };
}
var ga = class extends ut {
    constructor(e = []){
        super();
        this.cameras = e;
    }
};
ga.prototype.isArrayCamera = !0;
var Hn = class extends Ne {
    constructor(){
        super();
        this.type = "Group";
    }
};
Hn.prototype.isGroup = !0;
var Ax = {
    type: "move"
}, Is = class {
    constructor(){
        this._targetRay = null, this._grip = null, this._hand = null;
    }
    getHandSpace() {
        return this._hand === null && (this._hand = new Hn, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
            pinching: !1
        }), this._hand;
    }
    getTargetRaySpace() {
        return this._targetRay === null && (this._targetRay = new Hn, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new M, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new M), this._targetRay;
    }
    getGripSpace() {
        return this._grip === null && (this._grip = new Hn, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new M, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new M), this._grip;
    }
    dispatchEvent(e) {
        return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
    }
    disconnect(e) {
        return this.dispatchEvent({
            type: "disconnected",
            data: e
        }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
    }
    update(e, t, n) {
        let i = null, r = null, o = null, a = this._targetRay, l = this._grip, c = this._hand;
        if (e && t.session.visibilityState !== "visible-blurred") if (a !== null && (i = t.getPose(e.targetRaySpace, n), i !== null && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale), i.linearVelocity ? (a.hasLinearVelocity = !0, a.linearVelocity.copy(i.linearVelocity)) : a.hasLinearVelocity = !1, i.angularVelocity ? (a.hasAngularVelocity = !0, a.angularVelocity.copy(i.angularVelocity)) : a.hasAngularVelocity = !1, this.dispatchEvent(Ax))), c && e.hand) {
            o = !0;
            for (let x of e.hand.values()){
                let v = t.getJointPose(x, n);
                if (c.joints[x.jointName] === void 0) {
                    let p = new Hn;
                    p.matrixAutoUpdate = !1, p.visible = !1, c.joints[x.jointName] = p, c.add(p);
                }
                let g = c.joints[x.jointName];
                v !== null && (g.matrix.fromArray(v.transform.matrix), g.matrix.decompose(g.position, g.rotation, g.scale), g.jointRadius = v.radius), g.visible = v !== null;
            }
            let h = c.joints["index-finger-tip"], u = c.joints["thumb-tip"], d = h.position.distanceTo(u.position), f = .02, m = .005;
            c.inputState.pinching && d > f + m ? (c.inputState.pinching = !1, this.dispatchEvent({
                type: "pinchend",
                handedness: e.handedness,
                target: this
            })) : !c.inputState.pinching && d <= f - m && (c.inputState.pinching = !0, this.dispatchEvent({
                type: "pinchstart",
                handedness: e.handedness,
                target: this
            }));
        } else l !== null && e.gripSpace && (r = t.getPose(e.gripSpace, n), r !== null && (l.matrix.fromArray(r.transform.matrix), l.matrix.decompose(l.position, l.rotation, l.scale), r.linearVelocity ? (l.hasLinearVelocity = !0, l.linearVelocity.copy(r.linearVelocity)) : l.hasLinearVelocity = !1, r.angularVelocity ? (l.hasAngularVelocity = !0, l.angularVelocity.copy(r.angularVelocity)) : l.hasAngularVelocity = !1));
        return a !== null && (a.visible = i !== null), l !== null && (l.visible = r !== null), c !== null && (c.visible = o !== null), this;
    }
}, ks = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        if (h = h !== void 0 ? h : Vn, h !== Vn && h !== Li) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        n === void 0 && h === Vn && (n = cr), n === void 0 && h === Li && (n = Ti);
        super(null, i, r, o, a, l, h, n, c);
        this.image = {
            width: e,
            height: t
        }, this.magFilter = a !== void 0 ? a : rt, this.minFilter = l !== void 0 ? l : rt, this.flipY = !1, this.generateMipmaps = !1;
    }
};
ks.prototype.isDepthTexture = !0;
var vh = class extends En {
    constructor(e, t){
        super();
        let n = this, i = null, r = 1, o = null, a = "local-floor", l = e.extensions.has("WEBGL_multisampled_render_to_texture"), c = null, h = null, u = null, d = null, f = !1, m = null, x = t.getContextAttributes(), v = null, g = null, p = [], _ = new Map, y = new ut;
        y.layers.enable(1), y.viewport = new Ve;
        let b = new ut;
        b.layers.enable(2), b.viewport = new Ve;
        let A = [
            y,
            b
        ], L = new ga;
        L.layers.enable(1), L.layers.enable(2);
        let I = null, k = null;
        this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getTargetRaySpace();
        }, this.getControllerGrip = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getGripSpace();
        }, this.getHand = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getHandSpace();
        };
        function B(V) {
            let W = _.get(V.inputSource);
            W && W.dispatchEvent({
                type: V.type,
                data: V.inputSource
            });
        }
        function P() {
            _.forEach(function(V, W) {
                V.disconnect(W);
            }), _.clear(), I = null, k = null, e.setRenderTarget(v), d = null, u = null, h = null, i = null, g = null, ce.stop(), n.isPresenting = !1, n.dispatchEvent({
                type: "sessionend"
            });
        }
        this.setFramebufferScaleFactor = function(V) {
            r = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
        }, this.setReferenceSpaceType = function(V) {
            a = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
        }, this.getReferenceSpace = function() {
            return o;
        }, this.getBaseLayer = function() {
            return u !== null ? u : d;
        }, this.getBinding = function() {
            return h;
        }, this.getFrame = function() {
            return m;
        }, this.getSession = function() {
            return i;
        }, this.setSession = async function(V) {
            if (i = V, i !== null) {
                if (v = e.getRenderTarget(), i.addEventListener("select", B), i.addEventListener("selectstart", B), i.addEventListener("selectend", B), i.addEventListener("squeeze", B), i.addEventListener("squeezestart", B), i.addEventListener("squeezeend", B), i.addEventListener("end", P), i.addEventListener("inputsourceschange", w), x.xrCompatible !== !0 && await t.makeXRCompatible(), i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1) {
                    let W = {
                        antialias: i.renderState.layers === void 0 ? x.antialias : !0,
                        alpha: x.alpha,
                        depth: x.depth,
                        stencil: x.stencil,
                        framebufferScaleFactor: r
                    };
                    d = new XRWebGLLayer(i, t, W), i.updateRenderState({
                        baseLayer: d
                    }), g = new At(d.framebufferWidth, d.framebufferHeight, {
                        format: ct,
                        type: rn,
                        encoding: e.outputEncoding
                    });
                } else {
                    f = x.antialias;
                    let W = null, he = null, le = null;
                    x.depth && (le = x.stencil ? 35056 : 33190, W = x.stencil ? Li : Vn, he = x.stencil ? Ti : cr);
                    let fe = {
                        colorFormat: x.alpha || f ? 32856 : 32849,
                        depthFormat: le,
                        scaleFactor: r
                    };
                    h = new XRWebGLBinding(i, t), u = h.createProjectionLayer(fe), i.updateRenderState({
                        layers: [
                            u
                        ]
                    }), f ? g = new Xs(u.textureWidth, u.textureHeight, {
                        format: ct,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        useRenderToTexture: l,
                        encoding: e.outputEncoding
                    }) : g = new At(u.textureWidth, u.textureHeight, {
                        format: x.alpha ? ct : Gn,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        encoding: e.outputEncoding
                    });
                }
                this.setFoveation(1), o = await i.requestReferenceSpace(a), ce.setContext(i), ce.start(), n.isPresenting = !0, n.dispatchEvent({
                    type: "sessionstart"
                });
            }
        };
        function w(V) {
            let W = i.inputSources;
            for(let he = 0; he < p.length; he++)_.set(W[he], p[he]);
            for(let he = 0; he < V.removed.length; he++){
                let le = V.removed[he], fe = _.get(le);
                fe && (fe.dispatchEvent({
                    type: "disconnected",
                    data: le
                }), _.delete(le));
            }
            for(let he = 0; he < V.added.length; he++){
                let le = V.added[he], fe = _.get(le);
                fe && fe.dispatchEvent({
                    type: "connected",
                    data: le
                });
            }
        }
        let E = new M, D = new M;
        function U(V, W, he) {
            E.setFromMatrixPosition(W.matrixWorld), D.setFromMatrixPosition(he.matrixWorld);
            let le = E.distanceTo(D), fe = W.projectionMatrix.elements, Be = he.projectionMatrix.elements, Y = fe[14] / (fe[10] - 1), Ce = fe[14] / (fe[10] + 1), ye = (fe[9] + 1) / fe[5], ge = (fe[9] - 1) / fe[5], xe = (fe[8] - 1) / fe[0], Oe = (Be[8] + 1) / Be[0], G = Y * xe, j = Y * Oe, K = le / (-xe + Oe), ue = K * -xe;
            W.matrixWorld.decompose(V.position, V.quaternion, V.scale), V.translateX(ue), V.translateZ(K), V.matrixWorld.compose(V.position, V.quaternion, V.scale), V.matrixWorldInverse.copy(V.matrixWorld).invert();
            let se = Y + K, Se = Ce + K, Te = G - ue, Pe = j + (le - ue), Ye = ye * Ce / Se * se, C = ge * Ce / Se * se;
            V.projectionMatrix.makePerspective(Te, Pe, Ye, C, se, Se);
        }
        function F(V, W) {
            W === null ? V.matrixWorld.copy(V.matrix) : V.matrixWorld.multiplyMatrices(W.matrixWorld, V.matrix), V.matrixWorldInverse.copy(V.matrixWorld).invert();
        }
        this.updateCamera = function(V) {
            if (i === null) return;
            L.near = b.near = y.near = V.near, L.far = b.far = y.far = V.far, (I !== L.near || k !== L.far) && (i.updateRenderState({
                depthNear: L.near,
                depthFar: L.far
            }), I = L.near, k = L.far);
            let W = V.parent, he = L.cameras;
            F(L, W);
            for(let fe = 0; fe < he.length; fe++)F(he[fe], W);
            L.matrixWorld.decompose(L.position, L.quaternion, L.scale), V.position.copy(L.position), V.quaternion.copy(L.quaternion), V.scale.copy(L.scale), V.matrix.copy(L.matrix), V.matrixWorld.copy(L.matrixWorld);
            let le = V.children;
            for(let fe = 0, Be = le.length; fe < Be; fe++)le[fe].updateMatrixWorld(!0);
            he.length === 2 ? U(L, y, b) : L.projectionMatrix.copy(y.projectionMatrix);
        }, this.getCamera = function() {
            return L;
        }, this.getFoveation = function() {
            if (u !== null) return u.fixedFoveation;
            if (d !== null) return d.fixedFoveation;
        }, this.setFoveation = function(V) {
            u !== null && (u.fixedFoveation = V), d !== null && d.fixedFoveation !== void 0 && (d.fixedFoveation = V);
        };
        let O = null;
        function ne(V, W) {
            if (c = W.getViewerPose(o), m = W, c !== null) {
                let le = c.views;
                d !== null && (e.setRenderTargetFramebuffer(g, d.framebuffer), e.setRenderTarget(g));
                let fe = !1;
                le.length !== L.cameras.length && (L.cameras.length = 0, fe = !0);
                for(let Be = 0; Be < le.length; Be++){
                    let Y = le[Be], Ce = null;
                    if (d !== null) Ce = d.getViewport(Y);
                    else {
                        let ge = h.getViewSubImage(u, Y);
                        Ce = ge.viewport, Be === 0 && (e.setRenderTargetTextures(g, ge.colorTexture, u.ignoreDepthValues ? void 0 : ge.depthStencilTexture), e.setRenderTarget(g));
                    }
                    let ye = A[Be];
                    ye.matrix.fromArray(Y.transform.matrix), ye.projectionMatrix.fromArray(Y.projectionMatrix), ye.viewport.set(Ce.x, Ce.y, Ce.width, Ce.height), Be === 0 && L.matrix.copy(ye.matrix), fe === !0 && L.cameras.push(ye);
                }
            }
            let he = i.inputSources;
            for(let le = 0; le < p.length; le++){
                let fe = p[le], Be = he[le];
                fe.update(Be, W, o);
            }
            O && O(V, W), m = null;
        }
        let ce = new rh;
        ce.setAnimationLoop(ne), this.setAnimationLoop = function(V) {
            O = V;
        }, this.dispose = function() {};
    }
};
function Cx(s) {
    function e(g, p) {
        g.fogColor.value.copy(p.color), p.isFog ? (g.fogNear.value = p.near, g.fogFar.value = p.far) : p.isFogExp2 && (g.fogDensity.value = p.density);
    }
    function t(g, p, _, y, b) {
        p.isMeshBasicMaterial ? n(g, p) : p.isMeshLambertMaterial ? (n(g, p), l(g, p)) : p.isMeshToonMaterial ? (n(g, p), h(g, p)) : p.isMeshPhongMaterial ? (n(g, p), c(g, p)) : p.isMeshStandardMaterial ? (n(g, p), p.isMeshPhysicalMaterial ? d(g, p, b) : u(g, p)) : p.isMeshMatcapMaterial ? (n(g, p), f(g, p)) : p.isMeshDepthMaterial ? (n(g, p), m(g, p)) : p.isMeshDistanceMaterial ? (n(g, p), x(g, p)) : p.isMeshNormalMaterial ? (n(g, p), v(g, p)) : p.isLineBasicMaterial ? (i(g, p), p.isLineDashedMaterial && r(g, p)) : p.isPointsMaterial ? o(g, p, _, y) : p.isSpriteMaterial ? a(g, p) : p.isShadowMaterial ? (g.color.value.copy(p.color), g.opacity.value = p.opacity) : p.isShaderMaterial && (p.uniformsNeedUpdate = !1);
    }
    function n(g, p) {
        g.opacity.value = p.opacity, p.color && g.diffuse.value.copy(p.color), p.emissive && g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity), p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.specularMap && (g.specularMap.value = p.specularMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _ = s.get(p).envMap;
        _ && (g.envMap.value = _, g.flipEnvMap.value = _.isCubeTexture && _.isRenderTargetTexture === !1 ? -1 : 1, g.reflectivity.value = p.reflectivity, g.ior.value = p.ior, g.refractionRatio.value = p.refractionRatio), p.lightMap && (g.lightMap.value = p.lightMap, g.lightMapIntensity.value = p.lightMapIntensity), p.aoMap && (g.aoMap.value = p.aoMap, g.aoMapIntensity.value = p.aoMapIntensity);
        let y;
        p.map ? y = p.map : p.specularMap ? y = p.specularMap : p.displacementMap ? y = p.displacementMap : p.normalMap ? y = p.normalMap : p.bumpMap ? y = p.bumpMap : p.roughnessMap ? y = p.roughnessMap : p.metalnessMap ? y = p.metalnessMap : p.alphaMap ? y = p.alphaMap : p.emissiveMap ? y = p.emissiveMap : p.clearcoatMap ? y = p.clearcoatMap : p.clearcoatNormalMap ? y = p.clearcoatNormalMap : p.clearcoatRoughnessMap ? y = p.clearcoatRoughnessMap : p.specularIntensityMap ? y = p.specularIntensityMap : p.specularColorMap ? y = p.specularColorMap : p.transmissionMap ? y = p.transmissionMap : p.thicknessMap ? y = p.thicknessMap : p.sheenColorMap ? y = p.sheenColorMap : p.sheenRoughnessMap && (y = p.sheenRoughnessMap), y !== void 0 && (y.isWebGLRenderTarget && (y = y.texture), y.matrixAutoUpdate === !0 && y.updateMatrix(), g.uvTransform.value.copy(y.matrix));
        let b;
        p.aoMap ? b = p.aoMap : p.lightMap && (b = p.lightMap), b !== void 0 && (b.isWebGLRenderTarget && (b = b.texture), b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uv2Transform.value.copy(b.matrix));
    }
    function i(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity;
    }
    function r(g, p) {
        g.dashSize.value = p.dashSize, g.totalSize.value = p.dashSize + p.gapSize, g.scale.value = p.scale;
    }
    function o(g, p, _, y) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.size.value = p.size * _, g.scale.value = y * .5, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let b;
        p.map ? b = p.map : p.alphaMap && (b = p.alphaMap), b !== void 0 && (b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uvTransform.value.copy(b.matrix));
    }
    function a(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.rotation.value = p.rotation, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _;
        p.map ? _ = p.map : p.alphaMap && (_ = p.alphaMap), _ !== void 0 && (_.matrixAutoUpdate === !0 && _.updateMatrix(), g.uvTransform.value.copy(_.matrix));
    }
    function l(g, p) {
        p.emissiveMap && (g.emissiveMap.value = p.emissiveMap);
    }
    function c(g, p) {
        g.specular.value.copy(p.specular), g.shininess.value = Math.max(p.shininess, 1e-4), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function h(g, p) {
        p.gradientMap && (g.gradientMap.value = p.gradientMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function u(g, p) {
        g.roughness.value = p.roughness, g.metalness.value = p.metalness, p.roughnessMap && (g.roughnessMap.value = p.roughnessMap), p.metalnessMap && (g.metalnessMap.value = p.metalnessMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), s.get(p).envMap && (g.envMapIntensity.value = p.envMapIntensity);
    }
    function d(g, p, _) {
        u(g, p), g.ior.value = p.ior, p.sheen > 0 && (g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen), g.sheenRoughness.value = p.sheenRoughness, p.sheenColorMap && (g.sheenColorMap.value = p.sheenColorMap), p.sheenRoughnessMap && (g.sheenRoughnessMap.value = p.sheenRoughnessMap)), p.clearcoat > 0 && (g.clearcoat.value = p.clearcoat, g.clearcoatRoughness.value = p.clearcoatRoughness, p.clearcoatMap && (g.clearcoatMap.value = p.clearcoatMap), p.clearcoatRoughnessMap && (g.clearcoatRoughnessMap.value = p.clearcoatRoughnessMap), p.clearcoatNormalMap && (g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale), g.clearcoatNormalMap.value = p.clearcoatNormalMap, p.side === it && g.clearcoatNormalScale.value.negate())), p.transmission > 0 && (g.transmission.value = p.transmission, g.transmissionSamplerMap.value = _.texture, g.transmissionSamplerSize.value.set(_.width, _.height), p.transmissionMap && (g.transmissionMap.value = p.transmissionMap), g.thickness.value = p.thickness, p.thicknessMap && (g.thicknessMap.value = p.thicknessMap), g.attenuationDistance.value = p.attenuationDistance, g.attenuationColor.value.copy(p.attenuationColor)), g.specularIntensity.value = p.specularIntensity, g.specularColor.value.copy(p.specularColor), p.specularIntensityMap && (g.specularIntensityMap.value = p.specularIntensityMap), p.specularColorMap && (g.specularColorMap.value = p.specularColorMap);
    }
    function f(g, p) {
        p.matcap && (g.matcap.value = p.matcap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function m(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function x(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), g.referencePosition.value.copy(p.referencePosition), g.nearDistance.value = p.nearDistance, g.farDistance.value = p.farDistance;
    }
    function v(g, p) {
        p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    return {
        refreshFogUniforms: e,
        refreshMaterialUniforms: t
    };
}
function Lx() {
    let s = qs("canvas");
    return s.style.display = "block", s;
}
function qe(s = {}) {
    let e = s.canvas !== void 0 ? s.canvas : Lx(), t = s.context !== void 0 ? s.context : null, n = s.alpha !== void 0 ? s.alpha : !1, i = s.depth !== void 0 ? s.depth : !0, r = s.stencil !== void 0 ? s.stencil : !0, o = s.antialias !== void 0 ? s.antialias : !1, a = s.premultipliedAlpha !== void 0 ? s.premultipliedAlpha : !0, l = s.preserveDrawingBuffer !== void 0 ? s.preserveDrawingBuffer : !1, c = s.powerPreference !== void 0 ? s.powerPreference : "default", h = s.failIfMajorPerformanceCaveat !== void 0 ? s.failIfMajorPerformanceCaveat : !1, u = null, d = null, f = [], m = [];
    this.domElement = e, this.debug = {
        checkShaderErrors: !0
    }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.outputEncoding = Nt, this.physicallyCorrectLights = !1, this.toneMapping = _n, this.toneMappingExposure = 1;
    let x = this, v = !1, g = 0, p = 0, _ = null, y = -1, b = null, A = new Ve, L = new Ve, I = null, k = e.width, B = e.height, P = 1, w = null, E = null, D = new Ve(0, 0, k, B), U = new Ve(0, 0, k, B), F = !1, O = [], ne = new Dr, ce = !1, V = !1, W = null, he = new pe, le = new M, fe = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0
    };
    function Be() {
        return _ === null ? P : 1;
    }
    let Y = t;
    function Ce(S, N) {
        for(let H = 0; H < S.length; H++){
            let z = S[H], q = e.getContext(z, N);
            if (q !== null) return q;
        }
        return null;
    }
    try {
        let S = {
            alpha: n,
            depth: i,
            stencil: r,
            antialias: o,
            premultipliedAlpha: a,
            preserveDrawingBuffer: l,
            powerPreference: c,
            failIfMajorPerformanceCaveat: h
        };
        if ("setAttribute" in e && e.setAttribute("data-engine", `three.js r${ca}`), e.addEventListener("webglcontextlost", Ee, !1), e.addEventListener("webglcontextrestored", me, !1), Y === null) {
            let N = [
                "webgl2",
                "webgl",
                "experimental-webgl"
            ];
            if (x.isWebGL1Renderer === !0 && N.shift(), Y = Ce(N, S), Y === null) throw Ce(N) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
        }
        Y.getShaderPrecisionFormat === void 0 && (Y.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            };
        });
    } catch (S) {
        throw console.error("THREE.WebGLRenderer: " + S.message), S;
    }
    let ye, ge, xe, Oe, G, j, K, ue, se, Se, Te, Pe, Ye, C, T, J, $, re, Z, Me, ve, te, R;
    function ee() {
        ye = new Qm(Y), ge = new Xm(Y, ye, s), ye.init(ge), te = new Ex(Y, ye, ge), xe = new Sx(Y, ye, ge), O[0] = 1029, Oe = new tg(Y), G = new fx, j = new Tx(Y, ye, xe, G, ge, te, Oe), K = new Ym(x), ue = new jm(x), se = new gf(Y, ge), R = new Wm(Y, ye, se, ge), Se = new Km(Y, se, Oe, R), Te = new sg(Y, Se, se, Oe), Z = new rg(Y, ge, j), J = new Jm(G), Pe = new dx(x, K, ue, ye, ge, R, J), Ye = new Cx(G), C = new mx, T = new Mx(ye, ge), re = new Vm(x, K, xe, Te, a), $ = new yh(x, Te, ge), Me = new qm(Y, ye, Oe, ge), ve = new eg(Y, ye, Oe, ge), Oe.programs = Pe.programs, x.capabilities = ge, x.extensions = ye, x.properties = G, x.renderLists = C, x.shadowMap = $, x.state = xe, x.info = Oe;
    }
    ee();
    let Q = new vh(x, Y);
    this.xr = Q, this.getContext = function() {
        return Y;
    }, this.getContextAttributes = function() {
        return Y.getContextAttributes();
    }, this.forceContextLoss = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.loseContext();
    }, this.forceContextRestore = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.restoreContext();
    }, this.getPixelRatio = function() {
        return P;
    }, this.setPixelRatio = function(S) {
        S !== void 0 && (P = S, this.setSize(k, B, !1));
    }, this.getSize = function(S) {
        return S.set(k, B);
    }, this.setSize = function(S, N, H) {
        if (Q.isPresenting) {
            console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
            return;
        }
        k = S, B = N, e.width = Math.floor(S * P), e.height = Math.floor(N * P), H !== !1 && (e.style.width = S + "px", e.style.height = N + "px"), this.setViewport(0, 0, S, N);
    }, this.getDrawingBufferSize = function(S) {
        return S.set(k * P, B * P).floor();
    }, this.setDrawingBufferSize = function(S, N, H) {
        k = S, B = N, P = H, e.width = Math.floor(S * H), e.height = Math.floor(N * H), this.setViewport(0, 0, S, N);
    }, this.getCurrentViewport = function(S) {
        return S.copy(A);
    }, this.getViewport = function(S) {
        return S.copy(D);
    }, this.setViewport = function(S, N, H, z) {
        S.isVector4 ? D.set(S.x, S.y, S.z, S.w) : D.set(S, N, H, z), xe.viewport(A.copy(D).multiplyScalar(P).floor());
    }, this.getScissor = function(S) {
        return S.copy(U);
    }, this.setScissor = function(S, N, H, z) {
        S.isVector4 ? U.set(S.x, S.y, S.z, S.w) : U.set(S, N, H, z), xe.scissor(L.copy(U).multiplyScalar(P).floor());
    }, this.getScissorTest = function() {
        return F;
    }, this.setScissorTest = function(S) {
        xe.setScissorTest(F = S);
    }, this.setOpaqueSort = function(S) {
        w = S;
    }, this.setTransparentSort = function(S) {
        E = S;
    }, this.getClearColor = function(S) {
        return S.copy(re.getClearColor());
    }, this.setClearColor = function() {
        re.setClearColor.apply(re, arguments);
    }, this.getClearAlpha = function() {
        return re.getClearAlpha();
    }, this.setClearAlpha = function() {
        re.setClearAlpha.apply(re, arguments);
    }, this.clear = function(S, N, H) {
        let z = 0;
        (S === void 0 || S) && (z |= 16384), (N === void 0 || N) && (z |= 256), (H === void 0 || H) && (z |= 1024), Y.clear(z);
    }, this.clearColor = function() {
        this.clear(!0, !1, !1);
    }, this.clearDepth = function() {
        this.clear(!1, !0, !1);
    }, this.clearStencil = function() {
        this.clear(!1, !1, !0);
    }, this.dispose = function() {
        e.removeEventListener("webglcontextlost", Ee, !1), e.removeEventListener("webglcontextrestored", me, !1), C.dispose(), T.dispose(), G.dispose(), K.dispose(), ue.dispose(), Te.dispose(), R.dispose(), Pe.dispose(), Q.dispose(), Q.removeEventListener("sessionstart", Ut), Q.removeEventListener("sessionend", Ot), W && (W.dispose(), W = null), Ln.stop();
    };
    function Ee(S) {
        S.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), v = !0;
    }
    function me() {
        console.log("THREE.WebGLRenderer: Context Restored."), v = !1;
        let S = Oe.autoReset, N = $.enabled, H = $.autoUpdate, z = $.needsUpdate, q = $.type;
        ee(), Oe.autoReset = S, $.enabled = N, $.autoUpdate = H, $.needsUpdate = z, $.type = q;
    }
    function Re(S) {
        let N = S.target;
        N.removeEventListener("dispose", Re), oe(N);
    }
    function oe(S) {
        Le(S), G.remove(S);
    }
    function Le(S) {
        let N = G.get(S).programs;
        N !== void 0 && (N.forEach(function(H) {
            Pe.releaseProgram(H);
        }), S.isShaderMaterial && Pe.releaseShaderCache(S));
    }
    this.renderBufferDirect = function(S, N, H, z, q, be) {
        N === null && (N = fe);
        let Ae = q.isMesh && q.matrixWorld.determinant() < 0, Ie = lu(S, N, H, z, q);
        xe.setMaterial(z, Ae);
        let we = H.index, He = H.attributes.position;
        if (we === null) {
            if (He === void 0 || He.count === 0) return;
        } else if (we.count === 0) return;
        let De = 1;
        z.wireframe === !0 && (we = Se.getWireframeAttribute(H), De = 2), R.setup(q, z, Ie, H, we);
        let ze, je = Me;
        we !== null && (ze = se.get(we), je = ve, je.setIndex(ze));
        let Rn = we !== null ? we.count : He.count, ei = H.drawRange.start * De, Ge = H.drawRange.count * De, Ht = be !== null ? be.start * De : 0, at = be !== null ? be.count * De : 1 / 0, kt = Math.max(ei, Ht), Gr = Math.min(Rn, ei + Ge, Ht + at) - 1, Gt = Math.max(0, Gr - kt + 1);
        if (Gt !== 0) {
            if (q.isMesh) z.wireframe === !0 ? (xe.setLineWidth(z.wireframeLinewidth * Be()), je.setMode(1)) : je.setMode(4);
            else if (q.isLine) {
                let Zt = z.linewidth;
                Zt === void 0 && (Zt = 1), xe.setLineWidth(Zt * Be()), q.isLineSegments ? je.setMode(1) : q.isLineLoop ? je.setMode(2) : je.setMode(3);
            } else q.isPoints ? je.setMode(0) : q.isSprite && je.setMode(4);
            if (q.isInstancedMesh) je.renderInstances(kt, Gt, q.count);
            else if (H.isInstancedBufferGeometry) {
                let Zt = Math.min(H.instanceCount, H._maxInstanceCount);
                je.renderInstances(kt, Gt, Zt);
            } else je.render(kt, Gt);
        }
    }, this.compile = function(S, N) {
        d = T.get(S), d.init(), m.push(d), S.traverseVisible(function(H) {
            H.isLight && H.layers.test(N.layers) && (d.pushLight(H), H.castShadow && d.pushShadow(H));
        }), d.setupLights(x.physicallyCorrectLights), S.traverse(function(H) {
            let z = H.material;
            if (z) if (Array.isArray(z)) for(let q = 0; q < z.length; q++){
                let be = z[q];
                xo(be, S, H);
            }
            else xo(z, S, H);
        }), m.pop(), d = null;
    };
    let Xe = null;
    function We(S) {
        Xe && Xe(S);
    }
    function Ut() {
        Ln.stop();
    }
    function Ot() {
        Ln.start();
    }
    let Ln = new rh;
    Ln.setAnimationLoop(We), typeof window < "u" && Ln.setContext(window), this.setAnimationLoop = function(S) {
        Xe = S, Q.setAnimationLoop(S), S === null ? Ln.stop() : Ln.start();
    }, Q.addEventListener("sessionstart", Ut), Q.addEventListener("sessionend", Ot), this.render = function(S, N) {
        if (N !== void 0 && N.isCamera !== !0) {
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            return;
        }
        if (v === !0) return;
        S.autoUpdate === !0 && S.updateMatrixWorld(), N.parent === null && N.updateMatrixWorld(), Q.enabled === !0 && Q.isPresenting === !0 && (Q.cameraAutoUpdate === !0 && Q.updateCamera(N), N = Q.getCamera()), S.isScene === !0 && S.onBeforeRender(x, S, N, _), d = T.get(S, m.length), d.init(), m.push(d), he.multiplyMatrices(N.projectionMatrix, N.matrixWorldInverse), ne.setFromProjectionMatrix(he), V = this.localClippingEnabled, ce = J.init(this.clippingPlanes, V, N), u = C.get(S, f.length), u.init(), f.push(u), Qa(S, N, 0, x.sortObjects), u.finish(), x.sortObjects === !0 && u.sort(w, E), ce === !0 && J.beginShadows();
        let H = d.state.shadowsArray;
        if ($.render(H, S, N), ce === !0 && J.endShadows(), this.info.autoReset === !0 && this.info.reset(), re.render(u, S), d.setupLights(x.physicallyCorrectLights), N.isArrayCamera) {
            let z = N.cameras;
            for(let q = 0, be = z.length; q < be; q++){
                let Ae = z[q];
                Ka(u, S, Ae, Ae.viewport);
            }
        } else Ka(u, S, N);
        _ !== null && (j.updateMultisampleRenderTarget(_), j.updateRenderTargetMipmap(_)), S.isScene === !0 && S.onAfterRender(x, S, N), xe.buffers.depth.setTest(!0), xe.buffers.depth.setMask(!0), xe.buffers.color.setMask(!0), xe.setPolygonOffset(!1), R.resetDefaultState(), y = -1, b = null, m.pop(), m.length > 0 ? d = m[m.length - 1] : d = null, f.pop(), f.length > 0 ? u = f[f.length - 1] : u = null;
    };
    function Qa(S, N, H, z) {
        if (S.visible === !1) return;
        if (S.layers.test(N.layers)) {
            if (S.isGroup) H = S.renderOrder;
            else if (S.isLOD) S.autoUpdate === !0 && S.update(N);
            else if (S.isLight) d.pushLight(S), S.castShadow && d.pushShadow(S);
            else if (S.isSprite) {
                if (!S.frustumCulled || ne.intersectsSprite(S)) {
                    z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                    let Ae = Te.update(S), Ie = S.material;
                    Ie.visible && u.push(S, Ae, Ie, H, le.z, null);
                }
            } else if ((S.isMesh || S.isLine || S.isPoints) && (S.isSkinnedMesh && S.skeleton.frame !== Oe.render.frame && (S.skeleton.update(), S.skeleton.frame = Oe.render.frame), !S.frustumCulled || ne.intersectsObject(S))) {
                z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                let Ae = Te.update(S), Ie = S.material;
                if (Array.isArray(Ie)) {
                    let we = Ae.groups;
                    for(let He = 0, De = we.length; He < De; He++){
                        let ze = we[He], je = Ie[ze.materialIndex];
                        je && je.visible && u.push(S, Ae, je, H, le.z, ze);
                    }
                } else Ie.visible && u.push(S, Ae, Ie, H, le.z, null);
            }
        }
        let be = S.children;
        for(let Ae = 0, Ie = be.length; Ae < Ie; Ae++)Qa(be[Ae], N, H, z);
    }
    function Ka(S, N, H, z) {
        let q = S.opaque, be = S.transmissive, Ae = S.transparent;
        d.setupLightsView(H), be.length > 0 && ou(q, N, H), z && xe.viewport(A.copy(z)), q.length > 0 && kr(q, N, H), be.length > 0 && kr(be, N, H), Ae.length > 0 && kr(Ae, N, H);
    }
    function ou(S, N, H) {
        if (W === null) {
            let Ae = o === !0 && ge.isWebGL2 === !0 ? Xs : At;
            W = new Ae(1024, 1024, {
                generateMipmaps: !0,
                type: te.convert(kn) !== null ? kn : rn,
                minFilter: Ui,
                magFilter: rt,
                wrapS: vt,
                wrapT: vt,
                useRenderToTexture: ye.has("WEBGL_multisampled_render_to_texture")
            });
        }
        let z = x.getRenderTarget();
        x.setRenderTarget(W), x.clear();
        let q = x.toneMapping;
        x.toneMapping = _n, kr(S, N, H), x.toneMapping = q, j.updateMultisampleRenderTarget(W), j.updateRenderTargetMipmap(W), x.setRenderTarget(z);
    }
    function kr(S, N, H) {
        let z = N.isScene === !0 ? N.overrideMaterial : null;
        for(let q = 0, be = S.length; q < be; q++){
            let Ae = S[q], Ie = Ae.object, we = Ae.geometry, He = z === null ? Ae.material : z, De = Ae.group;
            Ie.layers.test(H.layers) && au(Ie, N, H, we, He, De);
        }
    }
    function au(S, N, H, z, q, be) {
        S.onBeforeRender(x, N, H, z, q, be), S.modelViewMatrix.multiplyMatrices(H.matrixWorldInverse, S.matrixWorld), S.normalMatrix.getNormalMatrix(S.modelViewMatrix), q.onBeforeRender(x, N, H, z, S, be), q.transparent === !0 && q.side === Ci ? (q.side = it, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ai, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ci) : x.renderBufferDirect(H, N, z, q, S, be), S.onAfterRender(x, N, H, z, q, be);
    }
    function xo(S, N, H) {
        N.isScene !== !0 && (N = fe);
        let z = G.get(S), q = d.state.lights, be = d.state.shadowsArray, Ae = q.state.version, Ie = Pe.getParameters(S, q.state, be, N, H), we = Pe.getProgramCacheKey(Ie), He = z.programs;
        z.environment = S.isMeshStandardMaterial ? N.environment : null, z.fog = N.fog, z.envMap = (S.isMeshStandardMaterial ? ue : K).get(S.envMap || z.environment), He === void 0 && (S.addEventListener("dispose", Re), He = new Map, z.programs = He);
        let De = He.get(we);
        if (De !== void 0) {
            if (z.currentProgram === De && z.lightsStateVersion === Ae) return el(S, Ie), De;
        } else Ie.uniforms = Pe.getUniforms(S), S.onBuild(H, Ie, x), S.onBeforeCompile(Ie, x), De = Pe.acquireProgram(Ie, we), He.set(we, De), z.uniforms = Ie.uniforms;
        let ze = z.uniforms;
        (!S.isShaderMaterial && !S.isRawShaderMaterial || S.clipping === !0) && (ze.clippingPlanes = J.uniform), el(S, Ie), z.needsLights = hu(S), z.lightsStateVersion = Ae, z.needsLights && (ze.ambientLightColor.value = q.state.ambient, ze.lightProbe.value = q.state.probe, ze.directionalLights.value = q.state.directional, ze.directionalLightShadows.value = q.state.directionalShadow, ze.spotLights.value = q.state.spot, ze.spotLightShadows.value = q.state.spotShadow, ze.rectAreaLights.value = q.state.rectArea, ze.ltc_1.value = q.state.rectAreaLTC1, ze.ltc_2.value = q.state.rectAreaLTC2, ze.pointLights.value = q.state.point, ze.pointLightShadows.value = q.state.pointShadow, ze.hemisphereLights.value = q.state.hemi, ze.directionalShadowMap.value = q.state.directionalShadowMap, ze.directionalShadowMatrix.value = q.state.directionalShadowMatrix, ze.spotShadowMap.value = q.state.spotShadowMap, ze.spotShadowMatrix.value = q.state.spotShadowMatrix, ze.pointShadowMap.value = q.state.pointShadowMap, ze.pointShadowMatrix.value = q.state.pointShadowMatrix);
        let je = De.getUniforms(), Rn = bn.seqWithValue(je.seq, ze);
        return z.currentProgram = De, z.uniformsList = Rn, De;
    }
    function el(S, N) {
        let H = G.get(S);
        H.outputEncoding = N.outputEncoding, H.instancing = N.instancing, H.skinning = N.skinning, H.morphTargets = N.morphTargets, H.morphNormals = N.morphNormals, H.morphTargetsCount = N.morphTargetsCount, H.numClippingPlanes = N.numClippingPlanes, H.numIntersection = N.numClipIntersection, H.vertexAlphas = N.vertexAlphas, H.vertexTangents = N.vertexTangents, H.toneMapping = N.toneMapping;
    }
    function lu(S, N, H, z, q) {
        N.isScene !== !0 && (N = fe), j.resetTextureUnits();
        let be = N.fog, Ae = z.isMeshStandardMaterial ? N.environment : null, Ie = _ === null ? x.outputEncoding : _.texture.encoding, we = (z.isMeshStandardMaterial ? ue : K).get(z.envMap || Ae), He = z.vertexColors === !0 && !!H.attributes.color && H.attributes.color.itemSize === 4, De = !!z.normalMap && !!H.attributes.tangent, ze = !!H.morphAttributes.position, je = !!H.morphAttributes.normal, Rn = H.morphAttributes.position ? H.morphAttributes.position.length : 0, ei = z.toneMapped ? x.toneMapping : _n, Ge = G.get(z), Ht = d.state.lights;
        if (ce === !0 && (V === !0 || S !== b)) {
            let Pt = S === b && z.id === y;
            J.setState(z, S, Pt);
        }
        let at = !1;
        z.version === Ge.__version ? (Ge.needsLights && Ge.lightsStateVersion !== Ht.state.version || Ge.outputEncoding !== Ie || q.isInstancedMesh && Ge.instancing === !1 || !q.isInstancedMesh && Ge.instancing === !0 || q.isSkinnedMesh && Ge.skinning === !1 || !q.isSkinnedMesh && Ge.skinning === !0 || Ge.envMap !== we || z.fog && Ge.fog !== be || Ge.numClippingPlanes !== void 0 && (Ge.numClippingPlanes !== J.numPlanes || Ge.numIntersection !== J.numIntersection) || Ge.vertexAlphas !== He || Ge.vertexTangents !== De || Ge.morphTargets !== ze || Ge.morphNormals !== je || Ge.toneMapping !== ei || ge.isWebGL2 === !0 && Ge.morphTargetsCount !== Rn) && (at = !0) : (at = !0, Ge.__version = z.version);
        let kt = Ge.currentProgram;
        at === !0 && (kt = xo(z, N, q));
        let Gr = !1, Gt = !1, Zt = !1, xt = kt.getUniforms(), Xi = Ge.uniforms;
        if (xe.useProgram(kt.program) && (Gr = !0, Gt = !0, Zt = !0), z.id !== y && (y = z.id, Gt = !0), Gr || b !== S) {
            if (xt.setValue(Y, "projectionMatrix", S.projectionMatrix), ge.logarithmicDepthBuffer && xt.setValue(Y, "logDepthBufFC", 2 / (Math.log(S.far + 1) / Math.LN2)), b !== S && (b = S, Gt = !0, Zt = !0), z.isShaderMaterial || z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshStandardMaterial || z.envMap) {
                let Pt = xt.map.cameraPosition;
                Pt !== void 0 && Pt.setValue(Y, le.setFromMatrixPosition(S.matrixWorld));
            }
            (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial) && xt.setValue(Y, "isOrthographic", S.isOrthographicCamera === !0), (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial || z.isShadowMaterial || q.isSkinnedMesh) && xt.setValue(Y, "viewMatrix", S.matrixWorldInverse);
        }
        if (q.isSkinnedMesh) {
            xt.setOptional(Y, q, "bindMatrix"), xt.setOptional(Y, q, "bindMatrixInverse");
            let Pt = q.skeleton;
            Pt && (ge.floatVertexTextures ? (Pt.boneTexture === null && Pt.computeBoneTexture(), xt.setValue(Y, "boneTexture", Pt.boneTexture, j), xt.setValue(Y, "boneTextureSize", Pt.boneTextureSize)) : xt.setOptional(Y, Pt, "boneMatrices"));
        }
        return !!H && (H.morphAttributes.position !== void 0 || H.morphAttributes.normal !== void 0) && Z.update(q, H, z, kt), (Gt || Ge.receiveShadow !== q.receiveShadow) && (Ge.receiveShadow = q.receiveShadow, xt.setValue(Y, "receiveShadow", q.receiveShadow)), Gt && (xt.setValue(Y, "toneMappingExposure", x.toneMappingExposure), Ge.needsLights && cu(Xi, Zt), be && z.fog && Ye.refreshFogUniforms(Xi, be), Ye.refreshMaterialUniforms(Xi, z, P, B, W), bn.upload(Y, Ge.uniformsList, Xi, j)), z.isShaderMaterial && z.uniformsNeedUpdate === !0 && (bn.upload(Y, Ge.uniformsList, Xi, j), z.uniformsNeedUpdate = !1), z.isSpriteMaterial && xt.setValue(Y, "center", q.center), xt.setValue(Y, "modelViewMatrix", q.modelViewMatrix), xt.setValue(Y, "normalMatrix", q.normalMatrix), xt.setValue(Y, "modelMatrix", q.matrixWorld), kt;
    }
    function cu(S, N) {
        S.ambientLightColor.needsUpdate = N, S.lightProbe.needsUpdate = N, S.directionalLights.needsUpdate = N, S.directionalLightShadows.needsUpdate = N, S.pointLights.needsUpdate = N, S.pointLightShadows.needsUpdate = N, S.spotLights.needsUpdate = N, S.spotLightShadows.needsUpdate = N, S.rectAreaLights.needsUpdate = N, S.hemisphereLights.needsUpdate = N;
    }
    function hu(S) {
        return S.isMeshLambertMaterial || S.isMeshToonMaterial || S.isMeshPhongMaterial || S.isMeshStandardMaterial || S.isShadowMaterial || S.isShaderMaterial && S.lights === !0;
    }
    this.getActiveCubeFace = function() {
        return g;
    }, this.getActiveMipmapLevel = function() {
        return p;
    }, this.getRenderTarget = function() {
        return _;
    }, this.setRenderTargetTextures = function(S, N, H) {
        G.get(S.texture).__webglTexture = N, G.get(S.depthTexture).__webglTexture = H;
        let z = G.get(S);
        z.__hasExternalTextures = !0, z.__hasExternalTextures && (z.__autoAllocateDepthBuffer = H === void 0, z.__autoAllocateDepthBuffer || S.useRenderToTexture && (console.warn("render-to-texture extension was disabled because an external texture was provided"), S.useRenderToTexture = !1, S.useRenderbuffer = !0));
    }, this.setRenderTargetFramebuffer = function(S, N) {
        let H = G.get(S);
        H.__webglFramebuffer = N, H.__useDefaultFramebuffer = N === void 0;
    }, this.setRenderTarget = function(S, N = 0, H = 0) {
        _ = S, g = N, p = H;
        let z = !0;
        if (S) {
            let we = G.get(S);
            we.__useDefaultFramebuffer !== void 0 ? (xe.bindFramebuffer(36160, null), z = !1) : we.__webglFramebuffer === void 0 ? j.setupRenderTarget(S) : we.__hasExternalTextures && j.rebindTextures(S, G.get(S.texture).__webglTexture, G.get(S.depthTexture).__webglTexture);
        }
        let q = null, be = !1, Ae = !1;
        if (S) {
            let we = S.texture;
            (we.isDataTexture3D || we.isDataTexture2DArray) && (Ae = !0);
            let He = G.get(S).__webglFramebuffer;
            S.isWebGLCubeRenderTarget ? (q = He[N], be = !0) : S.useRenderbuffer ? q = G.get(S).__webglMultisampledFramebuffer : q = He, A.copy(S.viewport), L.copy(S.scissor), I = S.scissorTest;
        } else A.copy(D).multiplyScalar(P).floor(), L.copy(U).multiplyScalar(P).floor(), I = F;
        if (xe.bindFramebuffer(36160, q) && ge.drawBuffers && z) {
            let we = !1;
            if (S) if (S.isWebGLMultipleRenderTargets) {
                let He = S.texture;
                if (O.length !== He.length || O[0] !== 36064) {
                    for(let De = 0, ze = He.length; De < ze; De++)O[De] = 36064 + De;
                    O.length = He.length, we = !0;
                }
            } else (O.length !== 1 || O[0] !== 36064) && (O[0] = 36064, O.length = 1, we = !0);
            else (O.length !== 1 || O[0] !== 1029) && (O[0] = 1029, O.length = 1, we = !0);
            we && (ge.isWebGL2 ? Y.drawBuffers(O) : ye.get("WEBGL_draw_buffers").drawBuffersWEBGL(O));
        }
        if (xe.viewport(A), xe.scissor(L), xe.setScissorTest(I), be) {
            let we = G.get(S.texture);
            Y.framebufferTexture2D(36160, 36064, 34069 + N, we.__webglTexture, H);
        } else if (Ae) {
            let we = G.get(S.texture), He = N || 0;
            Y.framebufferTextureLayer(36160, 36064, we.__webglTexture, H || 0, He);
        }
        y = -1;
    }, this.readRenderTargetPixels = function(S, N, H, z, q, be, Ae) {
        if (!(S && S.isWebGLRenderTarget)) {
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            return;
        }
        let Ie = G.get(S).__webglFramebuffer;
        if (S.isWebGLCubeRenderTarget && Ae !== void 0 && (Ie = Ie[Ae]), Ie) {
            xe.bindFramebuffer(36160, Ie);
            try {
                let we = S.texture, He = we.format, De = we.type;
                if (He !== ct && te.convert(He) !== Y.getParameter(35739)) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    return;
                }
                let ze = De === kn && (ye.has("EXT_color_buffer_half_float") || ge.isWebGL2 && ye.has("EXT_color_buffer_float"));
                if (De !== rn && te.convert(De) !== Y.getParameter(35738) && !(De === nn && (ge.isWebGL2 || ye.has("OES_texture_float") || ye.has("WEBGL_color_buffer_float"))) && !ze) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    return;
                }
                Y.checkFramebufferStatus(36160) === 36053 ? N >= 0 && N <= S.width - z && H >= 0 && H <= S.height - q && Y.readPixels(N, H, z, q, te.convert(He), te.convert(De), be) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
            } finally{
                let we = _ !== null ? G.get(_).__webglFramebuffer : null;
                xe.bindFramebuffer(36160, we);
            }
        }
    }, this.copyFramebufferToTexture = function(S, N, H = 0) {
        if (N.isFramebufferTexture !== !0) {
            console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");
            return;
        }
        let z = Math.pow(2, -H), q = Math.floor(N.image.width * z), be = Math.floor(N.image.height * z);
        j.setTexture2D(N, 0), Y.copyTexSubImage2D(3553, H, 0, 0, S.x, S.y, q, be), xe.unbindTexture();
    }, this.copyTextureToTexture = function(S, N, H, z = 0) {
        let q = N.image.width, be = N.image.height, Ae = te.convert(H.format), Ie = te.convert(H.type);
        j.setTexture2D(H, 0), Y.pixelStorei(37440, H.flipY), Y.pixelStorei(37441, H.premultiplyAlpha), Y.pixelStorei(3317, H.unpackAlignment), N.isDataTexture ? Y.texSubImage2D(3553, z, S.x, S.y, q, be, Ae, Ie, N.image.data) : N.isCompressedTexture ? Y.compressedTexSubImage2D(3553, z, S.x, S.y, N.mipmaps[0].width, N.mipmaps[0].height, Ae, N.mipmaps[0].data) : Y.texSubImage2D(3553, z, S.x, S.y, Ae, Ie, N.image), z === 0 && H.generateMipmaps && Y.generateMipmap(3553), xe.unbindTexture();
    }, this.copyTextureToTexture3D = function(S, N, H, z, q = 0) {
        if (x.isWebGL1Renderer) {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
            return;
        }
        let be = S.max.x - S.min.x + 1, Ae = S.max.y - S.min.y + 1, Ie = S.max.z - S.min.z + 1, we = te.convert(z.format), He = te.convert(z.type), De;
        if (z.isDataTexture3D) j.setTexture3D(z, 0), De = 32879;
        else if (z.isDataTexture2DArray) j.setTexture2DArray(z, 0), De = 35866;
        else {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
            return;
        }
        Y.pixelStorei(37440, z.flipY), Y.pixelStorei(37441, z.premultiplyAlpha), Y.pixelStorei(3317, z.unpackAlignment);
        let ze = Y.getParameter(3314), je = Y.getParameter(32878), Rn = Y.getParameter(3316), ei = Y.getParameter(3315), Ge = Y.getParameter(32877), Ht = H.isCompressedTexture ? H.mipmaps[0] : H.image;
        Y.pixelStorei(3314, Ht.width), Y.pixelStorei(32878, Ht.height), Y.pixelStorei(3316, S.min.x), Y.pixelStorei(3315, S.min.y), Y.pixelStorei(32877, S.min.z), H.isDataTexture || H.isDataTexture3D ? Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht.data) : H.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), Y.compressedTexSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, Ht.data)) : Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht), Y.pixelStorei(3314, ze), Y.pixelStorei(32878, je), Y.pixelStorei(3316, Rn), Y.pixelStorei(3315, ei), Y.pixelStorei(32877, Ge), q === 0 && z.generateMipmaps && Y.generateMipmap(De), xe.unbindTexture();
    }, this.initTexture = function(S) {
        j.setTexture2D(S, 0), xe.unbindTexture();
    }, this.resetState = function() {
        g = 0, p = 0, _ = null, xe.reset(), R.reset();
    }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
        detail: this
    }));
}
qe.prototype.isWebGLRenderer = !0;
var _h = class extends qe {
};
_h.prototype.isWebGL1Renderer = !0;
var Nr = class {
    constructor(e, t = 25e-5){
        this.name = "", this.color = new ae(e), this.density = t;
    }
    clone() {
        return new Nr(this.color, this.density);
    }
    toJSON() {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        };
    }
};
Nr.prototype.isFogExp2 = !0;
var Br = class {
    constructor(e, t = 1, n = 1e3){
        this.name = "", this.color = new ae(e), this.near = t, this.far = n;
    }
    clone() {
        return new Br(this.color, this.near, this.far);
    }
    toJSON() {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        };
    }
};
Br.prototype.isFog = !0;
var no = class extends Ne {
    constructor(){
        super();
        this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
            detail: this
        }));
    }
    copy(e, t) {
        return super.copy(e, t), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return this.fog !== null && (t.object.fog = this.fog.toJSON()), t;
    }
};
no.prototype.isScene = !0;
var $n = class {
    constructor(e, t){
        this.array = e, this.stride = t, this.count = e !== void 0 ? e.length / t : 0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0, this.uuid = Et();
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.stride, n *= t.stride;
        for(let i = 0, r = this.stride; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    clone(e) {
        e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
        let t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), n = new this.constructor(t, this.stride);
        return n.setUsage(this.usage), n;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    toJSON(e) {
        return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {
            uuid: this.uuid,
            buffer: this.array.buffer._uuid,
            type: this.array.constructor.name,
            stride: this.stride
        };
    }
};
$n.prototype.isInterleavedBuffer = !0;
var Ke = new M, Sn = class {
    constructor(e, t, n, i = !1){
        this.name = "", this.data = e, this.itemSize = t, this.offset = n, this.normalized = i === !0;
    }
    get count() {
        return this.data.count;
    }
    get array() {
        return this.data.array;
    }
    set needsUpdate(e) {
        this.data.needsUpdate = e;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.data.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyMatrix4(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyNormalMatrix(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.transformDirection(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    setX(e, t) {
        return this.data.array[e * this.data.stride + this.offset] = t, this;
    }
    setY(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 1] = t, this;
    }
    setZ(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 2] = t, this;
    }
    setW(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 3] = t, this;
    }
    getX(e) {
        return this.data.array[e * this.data.stride + this.offset];
    }
    getY(e) {
        return this.data.array[e * this.data.stride + this.offset + 1];
    }
    getZ(e) {
        return this.data.array[e * this.data.stride + this.offset + 2];
    }
    getW(e) {
        return this.data.array[e * this.data.stride + this.offset + 3];
    }
    setXY(e, t, n) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this;
    }
    clone(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return new Ue(new this.array.constructor(t), this.itemSize, this.normalized);
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new Sn(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
    }
    toJSON(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: t,
                normalized: this.normalized
            };
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
            isInterleavedBufferAttribute: !0,
            itemSize: this.itemSize,
            data: this.data.uuid,
            offset: this.offset,
            normalized: this.normalized
        };
    }
};
Sn.prototype.isInterleavedBufferAttribute = !0;
var io = class extends dt {
    constructor(e){
        super();
        this.type = "SpriteMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
io.prototype.isSpriteMaterial = !0;
var gi, Qi = new M, xi = new M, yi = new M, vi = new X, Ki = new X, Mh = new pe, hs = new M, er = new M, us = new M, jl = new X, qo = new X, Ql = new X, ro = class extends Ne {
    constructor(e){
        super();
        if (this.type = "Sprite", gi === void 0) {
            gi = new _e;
            let t = new Float32Array([
                -.5,
                -.5,
                0,
                0,
                0,
                .5,
                -.5,
                0,
                1,
                0,
                .5,
                .5,
                0,
                1,
                1,
                -.5,
                .5,
                0,
                0,
                1
            ]), n = new $n(t, 5);
            gi.setIndex([
                0,
                1,
                2,
                0,
                2,
                3
            ]), gi.setAttribute("position", new Sn(n, 3, 0, !1)), gi.setAttribute("uv", new Sn(n, 2, 3, !1));
        }
        this.geometry = gi, this.material = e !== void 0 ? e : new io, this.center = new X(.5, .5);
    }
    raycast(e, t) {
        e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), xi.setFromMatrixScale(this.matrixWorld), Mh.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), yi.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && xi.multiplyScalar(-yi.z);
        let n = this.material.rotation, i, r;
        n !== 0 && (r = Math.cos(n), i = Math.sin(n));
        let o = this.center;
        ds(hs.set(-.5, -.5, 0), yi, o, xi, i, r), ds(er.set(.5, -.5, 0), yi, o, xi, i, r), ds(us.set(.5, .5, 0), yi, o, xi, i, r), jl.set(0, 0), qo.set(1, 0), Ql.set(1, 1);
        let a = e.ray.intersectTriangle(hs, er, us, !1, Qi);
        if (a === null && (ds(er.set(-.5, .5, 0), yi, o, xi, i, r), qo.set(0, 1), a = e.ray.intersectTriangle(hs, us, er, !1, Qi), a === null)) return;
        let l = e.ray.origin.distanceTo(Qi);
        l < e.near || l > e.far || t.push({
            distance: l,
            point: Qi.clone(),
            uv: nt.getUV(Qi, hs, er, us, jl, qo, Ql, new X),
            face: null,
            object: this
        });
    }
    copy(e) {
        return super.copy(e), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
    }
};
ro.prototype.isSprite = !0;
function ds(s, e, t, n, i, r) {
    vi.subVectors(s, t).addScalar(.5).multiply(n), i !== void 0 ? (Ki.x = r * vi.x - i * vi.y, Ki.y = i * vi.x + r * vi.y) : Ki.copy(vi), s.copy(e), s.x += Ki.x, s.y += Ki.y, s.applyMatrix4(Mh);
}
var fs = new M, Kl = new M, bh = class extends Ne {
    constructor(){
        super();
        this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            },
            isLOD: {
                value: !0
            }
        }), this.autoUpdate = !0;
    }
    copy(e) {
        super.copy(e, !1);
        let t = e.levels;
        for(let n = 0, i = t.length; n < i; n++){
            let r = t[n];
            this.addLevel(r.object.clone(), r.distance);
        }
        return this.autoUpdate = e.autoUpdate, this;
    }
    addLevel(e, t = 0) {
        t = Math.abs(t);
        let n = this.levels, i;
        for(i = 0; i < n.length && !(t < n[i].distance); i++);
        return n.splice(i, 0, {
            distance: t,
            object: e
        }), this.add(e), this;
    }
    getCurrentLevel() {
        return this._currentLevel;
    }
    getObjectForDistance(e) {
        let t = this.levels;
        if (t.length > 0) {
            let n, i;
            for(n = 1, i = t.length; n < i && !(e < t[n].distance); n++);
            return t[n - 1].object;
        }
        return null;
    }
    raycast(e, t) {
        if (this.levels.length > 0) {
            fs.setFromMatrixPosition(this.matrixWorld);
            let i = e.ray.origin.distanceTo(fs);
            this.getObjectForDistance(i).raycast(e, t);
        }
    }
    update(e) {
        let t = this.levels;
        if (t.length > 1) {
            fs.setFromMatrixPosition(e.matrixWorld), Kl.setFromMatrixPosition(this.matrixWorld);
            let n = fs.distanceTo(Kl) / e.zoom;
            t[0].object.visible = !0;
            let i, r;
            for(i = 1, r = t.length; i < r && n >= t[i].distance; i++)t[i - 1].object.visible = !1, t[i].object.visible = !0;
            for(this._currentLevel = i - 1; i < r; i++)t[i].object.visible = !1;
        }
    }
    toJSON(e) {
        let t = super.toJSON(e);
        this.autoUpdate === !1 && (t.object.autoUpdate = !1), t.object.levels = [];
        let n = this.levels;
        for(let i = 0, r = n.length; i < r; i++){
            let o = n[i];
            t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance
            });
        }
        return t;
    }
}, ec = new M, tc = new Ve, nc = new Ve, Rx = new M, ic = new pe, so = class extends st {
    constructor(e, t){
        super(e, t);
        this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new pe, this.bindMatrixInverse = new pe;
    }
    copy(e) {
        return super.copy(e), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, this;
    }
    bind(e, t) {
        this.skeleton = e, t === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert();
    }
    pose() {
        this.skeleton.pose();
    }
    normalizeSkinWeights() {
        let e = new Ve, t = this.geometry.attributes.skinWeight;
        for(let n = 0, i = t.count; n < i; n++){
            e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
            let r = 1 / e.manhattanLength();
            r !== 1 / 0 ? e.multiplyScalar(r) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w);
        }
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.bindMode === "attached" ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === "detached" ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
    }
    boneTransform(e, t) {
        let n = this.skeleton, i = this.geometry;
        tc.fromBufferAttribute(i.attributes.skinIndex, e), nc.fromBufferAttribute(i.attributes.skinWeight, e), ec.copy(t).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
        for(let r = 0; r < 4; r++){
            let o = nc.getComponent(r);
            if (o !== 0) {
                let a = tc.getComponent(r);
                ic.multiplyMatrices(n.bones[a].matrixWorld, n.boneInverses[a]), t.addScaledVector(Rx.copy(ec).applyMatrix4(ic), o);
            }
        }
        return t.applyMatrix4(this.bindMatrixInverse);
    }
};
so.prototype.isSkinnedMesh = !0;
var oo = class extends Ne {
    constructor(){
        super();
        this.type = "Bone";
    }
};
oo.prototype.isBone = !0;
var qn = class extends ot {
    constructor(e = null, t = 1, n = 1, i, r, o, a, l, c = rt, h = rt, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            data: e,
            width: t,
            height: n
        }, this.magFilter = c, this.minFilter = h, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
qn.prototype.isDataTexture = !0;
var rc = new pe, Px = new pe, ao = class {
    constructor(e = [], t = []){
        this.uuid = Et(), this.bones = e.slice(0), this.boneInverses = t, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.frame = -1, this.init();
    }
    init() {
        let e = this.bones, t = this.boneInverses;
        if (this.boneMatrices = new Float32Array(e.length * 16), t.length === 0) this.calculateInverses();
        else if (e.length !== t.length) {
            console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
            for(let n = 0, i = this.bones.length; n < i; n++)this.boneInverses.push(new pe);
        }
    }
    calculateInverses() {
        this.boneInverses.length = 0;
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = new pe;
            this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(n);
        }
    }
    pose() {
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && n.matrixWorld.copy(this.boneInverses[e]).invert();
        }
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && (n.parent && n.parent.isBone ? (n.matrix.copy(n.parent.matrixWorld).invert(), n.matrix.multiply(n.matrixWorld)) : n.matrix.copy(n.matrixWorld), n.matrix.decompose(n.position, n.quaternion, n.scale));
        }
    }
    update() {
        let e = this.bones, t = this.boneInverses, n = this.boneMatrices, i = this.boneTexture;
        for(let r = 0, o = e.length; r < o; r++){
            let a = e[r] ? e[r].matrixWorld : Px;
            rc.multiplyMatrices(a, t[r]), rc.toArray(n, r * 16);
        }
        i !== null && (i.needsUpdate = !0);
    }
    clone() {
        return new ao(this.bones, this.boneInverses);
    }
    computeBoneTexture() {
        let e = Math.sqrt(this.bones.length * 4);
        e = Xc(e), e = Math.max(e, 4);
        let t = new Float32Array(e * e * 4);
        t.set(this.boneMatrices);
        let n = new qn(t, e, e, ct, nn);
        return n.needsUpdate = !0, this.boneMatrices = t, this.boneTexture = n, this.boneTextureSize = e, this;
    }
    getBoneByName(e) {
        for(let t = 0, n = this.bones.length; t < n; t++){
            let i = this.bones[t];
            if (i.name === e) return i;
        }
    }
    dispose() {
        this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
    }
    fromJSON(e, t) {
        this.uuid = e.uuid;
        for(let n = 0, i = e.bones.length; n < i; n++){
            let r = e.bones[n], o = t[r];
            o === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", r), o = new oo), this.bones.push(o), this.boneInverses.push(new pe().fromArray(e.boneInverses[n]));
        }
        return this.init(), this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Skeleton",
                generator: "Skeleton.toJSON"
            },
            bones: [],
            boneInverses: []
        };
        e.uuid = this.uuid;
        let t = this.bones, n = this.boneInverses;
        for(let i = 0, r = t.length; i < r; i++){
            let o = t[i];
            e.bones.push(o.uuid);
            let a = n[i];
            e.boneInverses.push(a.toArray());
        }
        return e;
    }
}, Xn = class extends Ue {
    constructor(e, t, n, i = 1){
        typeof n == "number" && (i = n, n = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));
        super(e, t, n);
        this.meshPerAttribute = i;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
    }
};
Xn.prototype.isInstancedBufferAttribute = !0;
var sc = new pe, oc = new pe, ps = [], tr = new st, xa = class extends st {
    constructor(e, t, n){
        super(e, t);
        this.instanceMatrix = new Xn(new Float32Array(n * 16), 16), this.instanceColor = null, this.count = n, this.frustumCulled = !1;
    }
    copy(e) {
        return super.copy(e), this.instanceMatrix.copy(e.instanceMatrix), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, this;
    }
    getColorAt(e, t) {
        t.fromArray(this.instanceColor.array, e * 3);
    }
    getMatrixAt(e, t) {
        t.fromArray(this.instanceMatrix.array, e * 16);
    }
    raycast(e, t) {
        let n = this.matrixWorld, i = this.count;
        if (tr.geometry = this.geometry, tr.material = this.material, tr.material !== void 0) for(let r = 0; r < i; r++){
            this.getMatrixAt(r, sc), oc.multiplyMatrices(n, sc), tr.matrixWorld = oc, tr.raycast(e, ps);
            for(let o = 0, a = ps.length; o < a; o++){
                let l = ps[o];
                l.instanceId = r, l.object = this, t.push(l);
            }
            ps.length = 0;
        }
    }
    setColorAt(e, t) {
        this.instanceColor === null && (this.instanceColor = new Xn(new Float32Array(this.instanceMatrix.count * 3), 3)), t.toArray(this.instanceColor.array, e * 3);
    }
    setMatrixAt(e, t) {
        t.toArray(this.instanceMatrix.array, e * 16);
    }
    updateMorphTargets() {}
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
xa.prototype.isInstancedMesh = !0;
var ft = class extends dt {
    constructor(e){
        super();
        this.type = "LineBasicMaterial", this.color = new ae(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this;
    }
};
ft.prototype.isLineBasicMaterial = !0;
var ac = new M, lc = new M, cc = new pe, Xo = new Cn, ms = new An, on = class extends Ne {
    constructor(e = new _e, t = new ft){
        super();
        this.type = "Line", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [
                0
            ];
            for(let i = 1, r = t.count; i < r; i++)ac.fromBufferAttribute(t, i - 1), lc.fromBufferAttribute(t, i), n[i] = n[i - 1], n[i] += ac.distanceTo(lc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Line.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), ms.copy(n.boundingSphere), ms.applyMatrix4(i), ms.radius += r, e.ray.intersectsSphere(ms) === !1) return;
        cc.copy(i).invert(), Xo.copy(e.ray).applyMatrix4(cc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = new M, h = new M, u = new M, d = new M, f = this.isLineSegments ? 2 : 1;
        if (n.isBufferGeometry) {
            let m = n.index, v = n.attributes.position;
            if (m !== null) {
                let g = Math.max(0, o.start), p = Math.min(m.count, o.start + o.count);
                for(let _ = g, y = p - 1; _ < y; _ += f){
                    let b = m.getX(_), A = m.getX(_ + 1);
                    if (c.fromBufferAttribute(v, b), h.fromBufferAttribute(v, A), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let I = e.ray.origin.distanceTo(d);
                    I < e.near || I > e.far || t.push({
                        distance: I,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            } else {
                let g = Math.max(0, o.start), p = Math.min(v.count, o.start + o.count);
                for(let _ = g, y = p - 1; _ < y; _ += f){
                    if (c.fromBufferAttribute(v, _), h.fromBufferAttribute(v, _ + 1), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let A = e.ray.origin.distanceTo(d);
                    A < e.near || A > e.far || t.push({
                        distance: A,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            }
        } else n.isGeometry && console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t = e.morphTargets;
            t !== void 0 && t.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
on.prototype.isLine = !0;
var hc = new M, uc = new M, wt = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineSegments";
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [];
            for(let i = 0, r = t.count; i < r; i += 2)hc.fromBufferAttribute(t, i), uc.fromBufferAttribute(t, i + 1), n[i] = i === 0 ? 0 : n[i - 1], n[i + 1] = n[i] + hc.distanceTo(uc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
};
wt.prototype.isLineSegments = !0;
var ya = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineLoop";
    }
};
ya.prototype.isLineLoop = !0;
var jn = class extends dt {
    constructor(e){
        super();
        this.type = "PointsMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
jn.prototype.isPointsMaterial = !0;
var dc = new pe, sa = new Cn, gs = new An, xs = new M, zr = class extends Ne {
    constructor(e = new _e, t = new jn){
        super();
        this.type = "Points", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Points.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), gs.copy(n.boundingSphere), gs.applyMatrix4(i), gs.radius += r, e.ray.intersectsSphere(gs) === !1) return;
        dc.copy(i).invert(), sa.copy(e.ray).applyMatrix4(dc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a;
        if (n.isBufferGeometry) {
            let c = n.index, u = n.attributes.position;
            if (c !== null) {
                let d = Math.max(0, o.start), f = Math.min(c.count, o.start + o.count);
                for(let m = d, x = f; m < x; m++){
                    let v = c.getX(m);
                    xs.fromBufferAttribute(u, v), fc(xs, v, l, i, e, t, this);
                }
            } else {
                let d = Math.max(0, o.start), f = Math.min(u.count, o.start + o.count);
                for(let m = d, x = f; m < x; m++)xs.fromBufferAttribute(u, m), fc(xs, m, l, i, e, t, this);
            }
        } else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t = e.morphTargets;
            t !== void 0 && t.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
zr.prototype.isPoints = !0;
function fc(s, e, t, n, i, r, o) {
    let a = sa.distanceSqToPoint(s);
    if (a < t) {
        let l = new M;
        sa.closestPointToPoint(s, l), l.applyMatrix4(n);
        let c = i.ray.origin.distanceTo(l);
        if (c < i.near || c > i.far) return;
        r.push({
            distance: c,
            distanceToRay: Math.sqrt(a),
            point: l,
            index: e,
            face: null,
            object: o
        });
    }
}
var wh = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.format = a !== void 0 ? a : Gn, this.minFilter = o !== void 0 ? o : tt, this.magFilter = r !== void 0 ? r : tt, this.generateMipmaps = !1;
        let h = this;
        function u() {
            h.needsUpdate = !0, e.requestVideoFrameCallback(u);
        }
        "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(u);
    }
    clone() {
        return new this.constructor(this.image).copy(this);
    }
    update() {
        let e = this.image;
        "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
    }
};
wh.prototype.isVideoTexture = !0;
var Sh = class extends ot {
    constructor(e, t, n){
        super({
            width: e,
            height: t
        });
        this.format = n, this.magFilter = rt, this.minFilter = rt, this.generateMipmaps = !1, this.needsUpdate = !0;
    }
};
Sh.prototype.isFramebufferTexture = !0;
var va = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            width: t,
            height: n
        }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
    }
};
va.prototype.isCompressedTexture = !0;
var Th = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.needsUpdate = !0;
    }
};
Th.prototype.isCanvasTexture = !0;
var fr = class extends _e {
    constructor(e = 1, t = 8, n = 0, i = Math.PI * 2){
        super();
        this.type = "CircleGeometry", this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: i
        }, t = Math.max(3, t);
        let r = [], o = [], a = [], l = [], c = new M, h = new X;
        o.push(0, 0, 0), a.push(0, 0, 1), l.push(.5, .5);
        for(let u = 0, d = 3; u <= t; u++, d += 3){
            let f = n + u / t * i;
            c.x = e * Math.cos(f), c.y = e * Math.sin(f), o.push(c.x, c.y, c.z), a.push(0, 0, 1), h.x = (o[d] / e + 1) / 2, h.y = (o[d + 1] / e + 1) / 2, l.push(h.x, h.y);
        }
        for(let u = 1; u <= t; u++)r.push(u, u + 1, 0);
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("normal", new de(a, 3)), this.setAttribute("uv", new de(l, 2));
    }
    static fromJSON(e) {
        return new fr(e.radius, e.segments, e.thetaStart, e.thetaLength);
    }
}, Jn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 8, r = 1, o = !1, a = 0, l = Math.PI * 2){
        super();
        this.type = "CylinderGeometry", this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: i,
            heightSegments: r,
            openEnded: o,
            thetaStart: a,
            thetaLength: l
        };
        let c = this;
        i = Math.floor(i), r = Math.floor(r);
        let h = [], u = [], d = [], f = [], m = 0, x = [], v = n / 2, g = 0;
        p(), o === !1 && (e > 0 && _(!0), t > 0 && _(!1)), this.setIndex(h), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function p() {
            let y = new M, b = new M, A = 0, L = (t - e) / n;
            for(let I = 0; I <= r; I++){
                let k = [], B = I / r, P = B * (t - e) + e;
                for(let w = 0; w <= i; w++){
                    let E = w / i, D = E * l + a, U = Math.sin(D), F = Math.cos(D);
                    b.x = P * U, b.y = -B * n + v, b.z = P * F, u.push(b.x, b.y, b.z), y.set(U, L, F).normalize(), d.push(y.x, y.y, y.z), f.push(E, 1 - B), k.push(m++);
                }
                x.push(k);
            }
            for(let I = 0; I < i; I++)for(let k = 0; k < r; k++){
                let B = x[k][I], P = x[k + 1][I], w = x[k + 1][I + 1], E = x[k][I + 1];
                h.push(B, P, E), h.push(P, w, E), A += 6;
            }
            c.addGroup(g, A, 0), g += A;
        }
        function _(y) {
            let b = m, A = new X, L = new M, I = 0, k = y === !0 ? e : t, B = y === !0 ? 1 : -1;
            for(let w = 1; w <= i; w++)u.push(0, v * B, 0), d.push(0, B, 0), f.push(.5, .5), m++;
            let P = m;
            for(let w = 0; w <= i; w++){
                let D = w / i * l + a, U = Math.cos(D), F = Math.sin(D);
                L.x = k * F, L.y = v * B, L.z = k * U, u.push(L.x, L.y, L.z), d.push(0, B, 0), A.x = U * .5 + .5, A.y = F * .5 * B + .5, f.push(A.x, A.y), m++;
            }
            for(let w = 0; w < i; w++){
                let E = b + w, D = P + w;
                y === !0 ? h.push(D, D + 1, E) : h.push(D + 1, D, E), I += 3;
            }
            c.addGroup(g, I, y === !0 ? 1 : 2), g += I;
        }
    }
    static fromJSON(e) {
        return new Jn(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, pr = class extends Jn {
    constructor(e = 1, t = 1, n = 8, i = 1, r = !1, o = 0, a = Math.PI * 2){
        super(0, e, t, n, i, r, o, a);
        this.type = "ConeGeometry", this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: i,
            openEnded: r,
            thetaStart: o,
            thetaLength: a
        };
    }
    static fromJSON(e) {
        return new pr(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, an = class extends _e {
    constructor(e = [], t = [], n = 1, i = 0){
        super();
        this.type = "PolyhedronGeometry", this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: i
        };
        let r = [], o = [];
        a(i), c(n), h(), this.setAttribute("position", new de(r, 3)), this.setAttribute("normal", new de(r.slice(), 3)), this.setAttribute("uv", new de(o, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
        function a(p) {
            let _ = new M, y = new M, b = new M;
            for(let A = 0; A < t.length; A += 3)f(t[A + 0], _), f(t[A + 1], y), f(t[A + 2], b), l(_, y, b, p);
        }
        function l(p, _, y, b) {
            let A = b + 1, L = [];
            for(let I = 0; I <= A; I++){
                L[I] = [];
                let k = p.clone().lerp(y, I / A), B = _.clone().lerp(y, I / A), P = A - I;
                for(let w = 0; w <= P; w++)w === 0 && I === A ? L[I][w] = k : L[I][w] = k.clone().lerp(B, w / P);
            }
            for(let I = 0; I < A; I++)for(let k = 0; k < 2 * (A - I) - 1; k++){
                let B = Math.floor(k / 2);
                k % 2 === 0 ? (d(L[I][B + 1]), d(L[I + 1][B]), d(L[I][B])) : (d(L[I][B + 1]), d(L[I + 1][B + 1]), d(L[I + 1][B]));
            }
        }
        function c(p) {
            let _ = new M;
            for(let y = 0; y < r.length; y += 3)_.x = r[y + 0], _.y = r[y + 1], _.z = r[y + 2], _.normalize().multiplyScalar(p), r[y + 0] = _.x, r[y + 1] = _.y, r[y + 2] = _.z;
        }
        function h() {
            let p = new M;
            for(let _ = 0; _ < r.length; _ += 3){
                p.x = r[_ + 0], p.y = r[_ + 1], p.z = r[_ + 2];
                let y = v(p) / 2 / Math.PI + .5, b = g(p) / Math.PI + .5;
                o.push(y, 1 - b);
            }
            m(), u();
        }
        function u() {
            for(let p = 0; p < o.length; p += 6){
                let _ = o[p + 0], y = o[p + 2], b = o[p + 4], A = Math.max(_, y, b), L = Math.min(_, y, b);
                A > .9 && L < .1 && (_ < .2 && (o[p + 0] += 1), y < .2 && (o[p + 2] += 1), b < .2 && (o[p + 4] += 1));
            }
        }
        function d(p) {
            r.push(p.x, p.y, p.z);
        }
        function f(p, _) {
            let y = p * 3;
            _.x = e[y + 0], _.y = e[y + 1], _.z = e[y + 2];
        }
        function m() {
            let p = new M, _ = new M, y = new M, b = new M, A = new X, L = new X, I = new X;
            for(let k = 0, B = 0; k < r.length; k += 9, B += 6){
                p.set(r[k + 0], r[k + 1], r[k + 2]), _.set(r[k + 3], r[k + 4], r[k + 5]), y.set(r[k + 6], r[k + 7], r[k + 8]), A.set(o[B + 0], o[B + 1]), L.set(o[B + 2], o[B + 3]), I.set(o[B + 4], o[B + 5]), b.copy(p).add(_).add(y).divideScalar(3);
                let P = v(b);
                x(A, B + 0, p, P), x(L, B + 2, _, P), x(I, B + 4, y, P);
            }
        }
        function x(p, _, y, b) {
            b < 0 && p.x === 1 && (o[_] = p.x - 1), y.x === 0 && y.z === 0 && (o[_] = b / 2 / Math.PI + .5);
        }
        function v(p) {
            return Math.atan2(p.z, -p.x);
        }
        function g(p) {
            return Math.atan2(-p.y, Math.sqrt(p.x * p.x + p.z * p.z));
        }
    }
    static fromJSON(e) {
        return new an(e.vertices, e.indices, e.radius, e.details);
    }
}, mr = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = 1 / n, r = [
            -1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            1,
            1,
            1,
            0,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            0,
            -n,
            0,
            -i,
            n,
            0,
            -i,
            -n,
            0,
            i,
            n,
            0,
            i
        ], o = [
            3,
            11,
            7,
            3,
            7,
            15,
            3,
            15,
            13,
            7,
            19,
            17,
            7,
            17,
            6,
            7,
            6,
            15,
            17,
            4,
            8,
            17,
            8,
            10,
            17,
            10,
            6,
            8,
            0,
            16,
            8,
            16,
            2,
            8,
            2,
            10,
            0,
            12,
            1,
            0,
            1,
            18,
            0,
            18,
            16,
            6,
            10,
            2,
            6,
            2,
            13,
            6,
            13,
            15,
            2,
            16,
            18,
            2,
            18,
            3,
            2,
            3,
            13,
            18,
            1,
            9,
            18,
            9,
            11,
            18,
            11,
            3,
            4,
            14,
            12,
            4,
            12,
            0,
            4,
            0,
            8,
            11,
            9,
            5,
            11,
            5,
            19,
            11,
            19,
            7,
            19,
            5,
            14,
            19,
            14,
            4,
            19,
            4,
            17,
            1,
            12,
            14,
            1,
            14,
            5,
            1,
            5,
            9
        ];
        super(r, o, e, t);
        this.type = "DodecahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new mr(e.radius, e.detail);
    }
}, ys = new M, vs = new M, Jo = new M, _s = new nt, _a = class extends _e {
    constructor(e = null, t = 1){
        super();
        if (this.type = "EdgesGeometry", this.parameters = {
            geometry: e,
            thresholdAngle: t
        }, e !== null) {
            let i = Math.pow(10, 4), r = Math.cos(Wn * t), o = e.getIndex(), a = e.getAttribute("position"), l = o ? o.count : a.count, c = [
                0,
                0,
                0
            ], h = [
                "a",
                "b",
                "c"
            ], u = new Array(3), d = {}, f = [];
            for(let m = 0; m < l; m += 3){
                o ? (c[0] = o.getX(m), c[1] = o.getX(m + 1), c[2] = o.getX(m + 2)) : (c[0] = m, c[1] = m + 1, c[2] = m + 2);
                let { a: x , b: v , c: g  } = _s;
                if (x.fromBufferAttribute(a, c[0]), v.fromBufferAttribute(a, c[1]), g.fromBufferAttribute(a, c[2]), _s.getNormal(Jo), u[0] = `${Math.round(x.x * i)},${Math.round(x.y * i)},${Math.round(x.z * i)}`, u[1] = `${Math.round(v.x * i)},${Math.round(v.y * i)},${Math.round(v.z * i)}`, u[2] = `${Math.round(g.x * i)},${Math.round(g.y * i)},${Math.round(g.z * i)}`, !(u[0] === u[1] || u[1] === u[2] || u[2] === u[0])) for(let p = 0; p < 3; p++){
                    let _ = (p + 1) % 3, y = u[p], b = u[_], A = _s[h[p]], L = _s[h[_]], I = `${y}_${b}`, k = `${b}_${y}`;
                    k in d && d[k] ? (Jo.dot(d[k].normal) <= r && (f.push(A.x, A.y, A.z), f.push(L.x, L.y, L.z)), d[k] = null) : I in d || (d[I] = {
                        index0: c[p],
                        index1: c[_],
                        normal: Jo.clone()
                    });
                }
            }
            for(let m in d)if (d[m]) {
                let { index0: x , index1: v  } = d[m];
                ys.fromBufferAttribute(a, x), vs.fromBufferAttribute(a, v), f.push(ys.x, ys.y, ys.z), f.push(vs.x, vs.y, vs.z);
            }
            this.setAttribute("position", new de(f, 3));
        }
    }
}, Ct = class {
    constructor(){
        this.type = "Curve", this.arcLengthDivisions = 200;
    }
    getPoint() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
    }
    getPointAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getPoint(n, t);
    }
    getPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return t;
    }
    getSpacedPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPointAt(n / e));
        return t;
    }
    getLength() {
        let e = this.getLengths();
        return e[e.length - 1];
    }
    getLengths(e = this.arcLengthDivisions) {
        if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        let t = [], n, i = this.getPoint(0), r = 0;
        t.push(0);
        for(let o = 1; o <= e; o++)n = this.getPoint(o / e), r += n.distanceTo(i), t.push(r), i = n;
        return this.cacheArcLengths = t, t;
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.getLengths();
    }
    getUtoTmapping(e, t) {
        let n = this.getLengths(), i = 0, r = n.length, o;
        t ? o = t : o = e * n[r - 1];
        let a = 0, l = r - 1, c;
        for(; a <= l;)if (i = Math.floor(a + (l - a) / 2), c = n[i] - o, c < 0) a = i + 1;
        else if (c > 0) l = i - 1;
        else {
            l = i;
            break;
        }
        if (i = l, n[i] === o) return i / (r - 1);
        let h = n[i], d = n[i + 1] - h, f = (o - h) / d;
        return (i + f) / (r - 1);
    }
    getTangent(e, t) {
        let i = e - 1e-4, r = e + 1e-4;
        i < 0 && (i = 0), r > 1 && (r = 1);
        let o = this.getPoint(i), a = this.getPoint(r), l = t || (o.isVector2 ? new X : new M);
        return l.copy(a).sub(o).normalize(), l;
    }
    getTangentAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getTangent(n, t);
    }
    computeFrenetFrames(e, t) {
        let n = new M, i = [], r = [], o = [], a = new M, l = new pe;
        for(let f = 0; f <= e; f++){
            let m = f / e;
            i[f] = this.getTangentAt(m, new M);
        }
        r[0] = new M, o[0] = new M;
        let c = Number.MAX_VALUE, h = Math.abs(i[0].x), u = Math.abs(i[0].y), d = Math.abs(i[0].z);
        h <= c && (c = h, n.set(1, 0, 0)), u <= c && (c = u, n.set(0, 1, 0)), d <= c && n.set(0, 0, 1), a.crossVectors(i[0], n).normalize(), r[0].crossVectors(i[0], a), o[0].crossVectors(i[0], r[0]);
        for(let f = 1; f <= e; f++){
            if (r[f] = r[f - 1].clone(), o[f] = o[f - 1].clone(), a.crossVectors(i[f - 1], i[f]), a.length() > Number.EPSILON) {
                a.normalize();
                let m = Math.acos(mt(i[f - 1].dot(i[f]), -1, 1));
                r[f].applyMatrix4(l.makeRotationAxis(a, m));
            }
            o[f].crossVectors(i[f], r[f]);
        }
        if (t === !0) {
            let f = Math.acos(mt(r[0].dot(r[e]), -1, 1));
            f /= e, i[0].dot(a.crossVectors(r[0], r[e])) > 0 && (f = -f);
            for(let m = 1; m <= e; m++)r[m].applyMatrix4(l.makeRotationAxis(i[m], f * m)), o[m].crossVectors(i[m], r[m]);
        }
        return {
            tangents: i,
            normals: r,
            binormals: o
        };
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Curve",
                generator: "Curve.toJSON"
            }
        };
        return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
    }
    fromJSON(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
}, Ur = class extends Ct {
    constructor(e = 0, t = 0, n = 1, i = 1, r = 0, o = Math.PI * 2, a = !1, l = 0){
        super();
        this.type = "EllipseCurve", this.aX = e, this.aY = t, this.xRadius = n, this.yRadius = i, this.aStartAngle = r, this.aEndAngle = o, this.aClockwise = a, this.aRotation = l;
    }
    getPoint(e, t) {
        let n = t || new X, i = Math.PI * 2, r = this.aEndAngle - this.aStartAngle, o = Math.abs(r) < Number.EPSILON;
        for(; r < 0;)r += i;
        for(; r > i;)r -= i;
        r < Number.EPSILON && (o ? r = 0 : r = i), this.aClockwise === !0 && !o && (r === i ? r = -i : r = r - i);
        let a = this.aStartAngle + e * r, l = this.aX + this.xRadius * Math.cos(a), c = this.aY + this.yRadius * Math.sin(a);
        if (this.aRotation !== 0) {
            let h = Math.cos(this.aRotation), u = Math.sin(this.aRotation), d = l - this.aX, f = c - this.aY;
            l = d * h - f * u + this.aX, c = d * u + f * h + this.aY;
        }
        return n.set(l, c);
    }
    copy(e) {
        return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
};
Ur.prototype.isEllipseCurve = !0;
var Ma = class extends Ur {
    constructor(e, t, n, i, r, o){
        super(e, t, n, n, i, r, o);
        this.type = "ArcCurve";
    }
};
Ma.prototype.isArcCurve = !0;
function ba() {
    let s = 0, e = 0, t = 0, n = 0;
    function i(r, o, a, l) {
        s = r, e = a, t = -3 * r + 3 * o - 2 * a - l, n = 2 * r - 2 * o + a + l;
    }
    return {
        initCatmullRom: function(r, o, a, l, c) {
            i(o, a, c * (a - r), c * (l - o));
        },
        initNonuniformCatmullRom: function(r, o, a, l, c, h, u) {
            let d = (o - r) / c - (a - r) / (c + h) + (a - o) / h, f = (a - o) / h - (l - o) / (h + u) + (l - a) / u;
            d *= h, f *= h, i(o, a, d, f);
        },
        calc: function(r) {
            let o = r * r, a = o * r;
            return s + e * r + t * o + n * a;
        }
    };
}
var Ms = new M, Yo = new ba, Zo = new ba, $o = new ba, wa = class extends Ct {
    constructor(e = [], t = !1, n = "centripetal", i = .5){
        super();
        this.type = "CatmullRomCurve3", this.points = e, this.closed = t, this.curveType = n, this.tension = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.points, r = i.length, o = (r - (this.closed ? 0 : 1)) * e, a = Math.floor(o), l = o - a;
        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / r) + 1) * r : l === 0 && a === r - 1 && (a = r - 2, l = 1);
        let c, h;
        this.closed || a > 0 ? c = i[(a - 1) % r] : (Ms.subVectors(i[0], i[1]).add(i[0]), c = Ms);
        let u = i[a % r], d = i[(a + 1) % r];
        if (this.closed || a + 2 < r ? h = i[(a + 2) % r] : (Ms.subVectors(i[r - 1], i[r - 2]).add(i[r - 1]), h = Ms), this.curveType === "centripetal" || this.curveType === "chordal") {
            let f = this.curveType === "chordal" ? .5 : .25, m = Math.pow(c.distanceToSquared(u), f), x = Math.pow(u.distanceToSquared(d), f), v = Math.pow(d.distanceToSquared(h), f);
            x < 1e-4 && (x = 1), m < 1e-4 && (m = x), v < 1e-4 && (v = x), Yo.initNonuniformCatmullRom(c.x, u.x, d.x, h.x, m, x, v), Zo.initNonuniformCatmullRom(c.y, u.y, d.y, h.y, m, x, v), $o.initNonuniformCatmullRom(c.z, u.z, d.z, h.z, m, x, v);
        } else this.curveType === "catmullrom" && (Yo.initCatmullRom(c.x, u.x, d.x, h.x, this.tension), Zo.initCatmullRom(c.y, u.y, d.y, h.y, this.tension), $o.initCatmullRom(c.z, u.z, d.z, h.z, this.tension));
        return n.set(Yo.calc(l), Zo.calc(l), $o.calc(l)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new M().fromArray(i));
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
};
wa.prototype.isCatmullRomCurve3 = !0;
function pc(s, e, t, n, i) {
    let r = (n - e) * .5, o = (i - t) * .5, a = s * s, l = s * a;
    return (2 * t - 2 * n + r + o) * l + (-3 * t + 3 * n - 2 * r - o) * a + r * s + t;
}
function Ix(s, e) {
    let t = 1 - s;
    return t * t * e;
}
function Dx(s, e) {
    return 2 * (1 - s) * s * e;
}
function Fx(s, e) {
    return s * s * e;
}
function ar(s, e, t, n) {
    return Ix(s, e) + Dx(s, t) + Fx(s, n);
}
function Nx(s, e) {
    let t = 1 - s;
    return t * t * t * e;
}
function Bx(s, e) {
    let t = 1 - s;
    return 3 * t * t * s * e;
}
function zx(s, e) {
    return 3 * (1 - s) * s * s * e;
}
function Ux(s, e) {
    return s * s * s * e;
}
function lr(s, e, t, n, i) {
    return Nx(s, e) + Bx(s, t) + zx(s, n) + Ux(s, i);
}
var lo = class extends Ct {
    constructor(e = new X, t = new X, n = new X, i = new X){
        super();
        this.type = "CubicBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
lo.prototype.isCubicBezierCurve = !0;
var Sa = class extends Ct {
    constructor(e = new M, t = new M, n = new M, i = new M){
        super();
        this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y), lr(e, i.z, r.z, o.z, a.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
Sa.prototype.isCubicBezierCurve3 = !0;
var Or = class extends Ct {
    constructor(e = new X, t = new X){
        super();
        this.type = "LineCurve", this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new X) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t) {
        let n = t || new X;
        return n.copy(this.v2).sub(this.v1).normalize(), n;
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
Or.prototype.isLineCurve = !0;
var Eh = class extends Ct {
    constructor(e = new M, t = new M){
        super();
        this.type = "LineCurve3", this.isLineCurve3 = !0, this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new M) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, co = class extends Ct {
    constructor(e = new X, t = new X, n = new X){
        super();
        this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
co.prototype.isQuadraticBezierCurve = !0;
var ho = class extends Ct {
    constructor(e = new M, t = new M, n = new M){
        super();
        this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y), ar(e, i.z, r.z, o.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
ho.prototype.isQuadraticBezierCurve3 = !0;
var uo = class extends Ct {
    constructor(e = []){
        super();
        this.type = "SplineCurve", this.points = e;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.points, r = (i.length - 1) * e, o = Math.floor(r), a = r - o, l = i[o === 0 ? o : o - 1], c = i[o], h = i[o > i.length - 2 ? i.length - 1 : o + 1], u = i[o > i.length - 3 ? i.length - 1 : o + 2];
        return n.set(pc(a, l.x, c.x, h.x, u.x), pc(a, l.y, c.y, h.y, u.y)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new X().fromArray(i));
        }
        return this;
    }
};
uo.prototype.isSplineCurve = !0;
var Ta = Object.freeze({
    __proto__: null,
    ArcCurve: Ma,
    CatmullRomCurve3: wa,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    EllipseCurve: Ur,
    LineCurve: Or,
    LineCurve3: Eh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    SplineCurve: uo
}), Ah = class extends Ct {
    constructor(){
        super();
        this.type = "CurvePath", this.curves = [], this.autoClose = !1;
    }
    add(e) {
        this.curves.push(e);
    }
    closePath() {
        let e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
        e.equals(t) || this.curves.push(new Or(t, e));
    }
    getPoint(e, t) {
        let n = e * this.getLength(), i = this.getCurveLengths(), r = 0;
        for(; r < i.length;){
            if (i[r] >= n) {
                let o = i[r] - n, a = this.curves[r], l = a.getLength(), c = l === 0 ? 0 : 1 - o / l;
                return a.getPointAt(c, t);
            }
            r++;
        }
        return null;
    }
    getLength() {
        let e = this.getCurveLengths();
        return e[e.length - 1];
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
    }
    getCurveLengths() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        let e = [], t = 0;
        for(let n = 0, i = this.curves.length; n < i; n++)t += this.curves[n].getLength(), e.push(t);
        return this.cacheLengths = e, e;
    }
    getSpacedPoints(e = 40) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t;
    }
    getPoints(e = 12) {
        let t = [], n;
        for(let i = 0, r = this.curves; i < r.length; i++){
            let o = r[i], a = o && o.isEllipseCurve ? e * 2 : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, l = o.getPoints(a);
            for(let c = 0; c < l.length; c++){
                let h = l[c];
                n && n.equals(h) || (t.push(h), n = h);
            }
        }
        return this.autoClose && t.length > 1 && !t[t.length - 1].equals(t[0]) && t.push(t[0]), t;
    }
    copy(e) {
        super.copy(e), this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(i.clone());
        }
        return this.autoClose = e.autoClose, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.autoClose = this.autoClose, e.curves = [];
        for(let t = 0, n = this.curves.length; t < n; t++){
            let i = this.curves[t];
            e.curves.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(new Ta[i.type]().fromJSON(i));
        }
        return this;
    }
}, gr = class extends Ah {
    constructor(e){
        super();
        this.type = "Path", this.currentPoint = new X, e && this.setFromPoints(e);
    }
    setFromPoints(e) {
        this.moveTo(e[0].x, e[0].y);
        for(let t = 1, n = e.length; t < n; t++)this.lineTo(e[t].x, e[t].y);
        return this;
    }
    moveTo(e, t) {
        return this.currentPoint.set(e, t), this;
    }
    lineTo(e, t) {
        let n = new Or(this.currentPoint.clone(), new X(e, t));
        return this.curves.push(n), this.currentPoint.set(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        let r = new co(this.currentPoint.clone(), new X(e, t), new X(n, i));
        return this.curves.push(r), this.currentPoint.set(n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        let a = new lo(this.currentPoint.clone(), new X(e, t), new X(n, i), new X(r, o));
        return this.curves.push(a), this.currentPoint.set(r, o), this;
    }
    splineThru(e) {
        let t = [
            this.currentPoint.clone()
        ].concat(e), n = new uo(t);
        return this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this;
    }
    arc(e, t, n, i, r, o) {
        let a = this.currentPoint.x, l = this.currentPoint.y;
        return this.absarc(e + a, t + l, n, i, r, o), this;
    }
    absarc(e, t, n, i, r, o) {
        return this.absellipse(e, t, n, n, i, r, o), this;
    }
    ellipse(e, t, n, i, r, o, a, l) {
        let c = this.currentPoint.x, h = this.currentPoint.y;
        return this.absellipse(e + c, t + h, n, i, r, o, a, l), this;
    }
    absellipse(e, t, n, i, r, o, a, l) {
        let c = new Ur(e, t, n, i, r, o, a, l);
        if (this.curves.length > 0) {
            let u = c.getPoint(0);
            u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
        }
        this.curves.push(c);
        let h = c.getPoint(1);
        return this.currentPoint.copy(h), this;
    }
    copy(e) {
        return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.currentPoint = this.currentPoint.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
    }
}, Xt = class extends gr {
    constructor(e){
        super(e);
        this.uuid = Et(), this.type = "Shape", this.holes = [];
    }
    getPointsHoles(e) {
        let t = [];
        for(let n = 0, i = this.holes.length; n < i; n++)t[n] = this.holes[n].getPoints(e);
        return t;
    }
    extractPoints(e) {
        return {
            shape: this.getPoints(e),
            holes: this.getPointsHoles(e)
        };
    }
    copy(e) {
        super.copy(e), this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.uuid = this.uuid, e.holes = [];
        for(let t = 0, n = this.holes.length; t < n; t++){
            let i = this.holes[t];
            e.holes.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(new gr().fromJSON(i));
        }
        return this;
    }
}, Ox = {
    triangulate: function(s, e, t = 2) {
        let n = e && e.length, i = n ? e[0] * t : s.length, r = Ch(s, 0, i, t, !0), o = [];
        if (!r || r.next === r.prev) return o;
        let a, l, c, h, u, d, f;
        if (n && (r = Wx(s, e, r, t)), s.length > 80 * t) {
            a = c = s[0], l = h = s[1];
            for(let m = t; m < i; m += t)u = s[m], d = s[m + 1], u < a && (a = u), d < l && (l = d), u > c && (c = u), d > h && (h = d);
            f = Math.max(c - a, h - l), f = f !== 0 ? 1 / f : 0;
        }
        return xr(r, o, t, a, l, f), o;
    }
};
function Ch(s, e, t, n, i) {
    let r, o;
    if (i === ty(s, e, t, n) > 0) for(r = e; r < t; r += n)o = mc(r, s[r], s[r + 1], o);
    else for(r = t - n; r >= e; r -= n)o = mc(r, s[r], s[r + 1], o);
    return o && fo(o, o.next) && (vr(o), o = o.next), o;
}
function Tn(s, e) {
    if (!s) return s;
    e || (e = s);
    let t = s, n;
    do if (n = !1, !t.steiner && (fo(t, t.next) || $e(t.prev, t, t.next) === 0)) {
        if (vr(t), t = e = t.prev, t === t.next) break;
        n = !0;
    } else t = t.next;
    while (n || t !== e)
    return e;
}
function xr(s, e, t, n, i, r, o) {
    if (!s) return;
    !o && r && Zx(s, n, i, r);
    let a = s, l, c;
    for(; s.prev !== s.next;){
        if (l = s.prev, c = s.next, r ? kx(s, n, i, r) : Hx(s)) {
            e.push(l.i / t), e.push(s.i / t), e.push(c.i / t), vr(s), s = c.next, a = c.next;
            continue;
        }
        if (s = c, s === a) {
            o ? o === 1 ? (s = Gx(Tn(s), e, t), xr(s, e, t, n, i, r, 2)) : o === 2 && Vx(s, e, t, n, i, r) : xr(Tn(s), e, t, n, i, r, 1);
            break;
        }
    }
}
function Hx(s) {
    let e = s.prev, t = s, n = s.next;
    if ($e(e, t, n) >= 0) return !1;
    let i = s.next.next;
    for(; i !== s.prev;){
        if (Si(e.x, e.y, t.x, t.y, n.x, n.y, i.x, i.y) && $e(i.prev, i, i.next) >= 0) return !1;
        i = i.next;
    }
    return !0;
}
function kx(s, e, t, n) {
    let i = s.prev, r = s, o = s.next;
    if ($e(i, r, o) >= 0) return !1;
    let a = i.x < r.x ? i.x < o.x ? i.x : o.x : r.x < o.x ? r.x : o.x, l = i.y < r.y ? i.y < o.y ? i.y : o.y : r.y < o.y ? r.y : o.y, c = i.x > r.x ? i.x > o.x ? i.x : o.x : r.x > o.x ? r.x : o.x, h = i.y > r.y ? i.y > o.y ? i.y : o.y : r.y > o.y ? r.y : o.y, u = oa(a, l, e, t, n), d = oa(c, h, e, t, n), f = s.prevZ, m = s.nextZ;
    for(; f && f.z >= u && m && m.z <= d;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0 || (f = f.prevZ, m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0)) return !1;
        m = m.nextZ;
    }
    for(; f && f.z >= u;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0) return !1;
        f = f.prevZ;
    }
    for(; m && m.z <= d;){
        if (m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0) return !1;
        m = m.nextZ;
    }
    return !0;
}
function Gx(s, e, t) {
    let n = s;
    do {
        let i = n.prev, r = n.next.next;
        !fo(i, r) && Lh(i, n, n.next, r) && yr(i, r) && yr(r, i) && (e.push(i.i / t), e.push(n.i / t), e.push(r.i / t), vr(n), vr(n.next), n = s = r), n = n.next;
    }while (n !== s)
    return Tn(n);
}
function Vx(s, e, t, n, i, r) {
    let o = s;
    do {
        let a = o.next.next;
        for(; a !== o.prev;){
            if (o.i !== a.i && Qx(o, a)) {
                let l = Rh(o, a);
                o = Tn(o, o.next), l = Tn(l, l.next), xr(o, e, t, n, i, r), xr(l, e, t, n, i, r);
                return;
            }
            a = a.next;
        }
        o = o.next;
    }while (o !== s)
}
function Wx(s, e, t, n) {
    let i = [], r, o, a, l, c;
    for(r = 0, o = e.length; r < o; r++)a = e[r] * n, l = r < o - 1 ? e[r + 1] * n : s.length, c = Ch(s, a, l, n, !1), c === c.next && (c.steiner = !0), i.push(jx(c));
    for(i.sort(qx), r = 0; r < i.length; r++)Xx(i[r], t), t = Tn(t, t.next);
    return t;
}
function qx(s, e) {
    return s.x - e.x;
}
function Xx(s, e) {
    if (e = Jx(s, e), e) {
        let t = Rh(e, s);
        Tn(e, e.next), Tn(t, t.next);
    }
}
function Jx(s, e) {
    let t = e, n = s.x, i = s.y, r = -1 / 0, o;
    do {
        if (i <= t.y && i >= t.next.y && t.next.y !== t.y) {
            let d = t.x + (i - t.y) * (t.next.x - t.x) / (t.next.y - t.y);
            if (d <= n && d > r) {
                if (r = d, d === n) {
                    if (i === t.y) return t;
                    if (i === t.next.y) return t.next;
                }
                o = t.x < t.next.x ? t : t.next;
            }
        }
        t = t.next;
    }while (t !== e)
    if (!o) return null;
    if (n === r) return o;
    let a = o, l = o.x, c = o.y, h = 1 / 0, u;
    t = o;
    do n >= t.x && t.x >= l && n !== t.x && Si(i < c ? n : r, i, l, c, i < c ? r : n, i, t.x, t.y) && (u = Math.abs(i - t.y) / (n - t.x), yr(t, s) && (u < h || u === h && (t.x > o.x || t.x === o.x && Yx(o, t))) && (o = t, h = u)), t = t.next;
    while (t !== a)
    return o;
}
function Yx(s, e) {
    return $e(s.prev, s, e.prev) < 0 && $e(e.next, s, s.next) < 0;
}
function Zx(s, e, t, n) {
    let i = s;
    do i.z === null && (i.z = oa(i.x, i.y, e, t, n)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
    while (i !== s)
    i.prevZ.nextZ = null, i.prevZ = null, $x(i);
}
function $x(s) {
    let e, t, n, i, r, o, a, l, c = 1;
    do {
        for(t = s, s = null, r = null, o = 0; t;){
            for(o++, n = t, a = 0, e = 0; e < c && (a++, n = n.nextZ, !!n); e++);
            for(l = c; a > 0 || l > 0 && n;)a !== 0 && (l === 0 || !n || t.z <= n.z) ? (i = t, t = t.nextZ, a--) : (i = n, n = n.nextZ, l--), r ? r.nextZ = i : s = i, i.prevZ = r, r = i;
            t = n;
        }
        r.nextZ = null, c *= 2;
    }while (o > 1)
    return s;
}
function oa(s, e, t, n, i) {
    return s = 32767 * (s - t) * i, e = 32767 * (e - n) * i, s = (s | s << 8) & 16711935, s = (s | s << 4) & 252645135, s = (s | s << 2) & 858993459, s = (s | s << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, s | e << 1;
}
function jx(s) {
    let e = s, t = s;
    do (e.x < t.x || e.x === t.x && e.y < t.y) && (t = e), e = e.next;
    while (e !== s)
    return t;
}
function Si(s, e, t, n, i, r, o, a) {
    return (i - o) * (e - a) - (s - o) * (r - a) >= 0 && (s - o) * (n - a) - (t - o) * (e - a) >= 0 && (t - o) * (r - a) - (i - o) * (n - a) >= 0;
}
function Qx(s, e) {
    return s.next.i !== e.i && s.prev.i !== e.i && !Kx(s, e) && (yr(s, e) && yr(e, s) && ey(s, e) && ($e(s.prev, s, e.prev) || $e(s, e.prev, e)) || fo(s, e) && $e(s.prev, s, s.next) > 0 && $e(e.prev, e, e.next) > 0);
}
function $e(s, e, t) {
    return (e.y - s.y) * (t.x - e.x) - (e.x - s.x) * (t.y - e.y);
}
function fo(s, e) {
    return s.x === e.x && s.y === e.y;
}
function Lh(s, e, t, n) {
    let i = ws($e(s, e, t)), r = ws($e(s, e, n)), o = ws($e(t, n, s)), a = ws($e(t, n, e));
    return !!(i !== r && o !== a || i === 0 && bs(s, t, e) || r === 0 && bs(s, n, e) || o === 0 && bs(t, s, n) || a === 0 && bs(t, e, n));
}
function bs(s, e, t) {
    return e.x <= Math.max(s.x, t.x) && e.x >= Math.min(s.x, t.x) && e.y <= Math.max(s.y, t.y) && e.y >= Math.min(s.y, t.y);
}
function ws(s) {
    return s > 0 ? 1 : s < 0 ? -1 : 0;
}
function Kx(s, e) {
    let t = s;
    do {
        if (t.i !== s.i && t.next.i !== s.i && t.i !== e.i && t.next.i !== e.i && Lh(t, t.next, s, e)) return !0;
        t = t.next;
    }while (t !== s)
    return !1;
}
function yr(s, e) {
    return $e(s.prev, s, s.next) < 0 ? $e(s, e, s.next) >= 0 && $e(s, s.prev, e) >= 0 : $e(s, e, s.prev) < 0 || $e(s, s.next, e) < 0;
}
function ey(s, e) {
    let t = s, n = !1, i = (s.x + e.x) / 2, r = (s.y + e.y) / 2;
    do t.y > r != t.next.y > r && t.next.y !== t.y && i < (t.next.x - t.x) * (r - t.y) / (t.next.y - t.y) + t.x && (n = !n), t = t.next;
    while (t !== s)
    return n;
}
function Rh(s, e) {
    let t = new aa(s.i, s.x, s.y), n = new aa(e.i, e.x, e.y), i = s.next, r = e.prev;
    return s.next = e, e.prev = s, t.next = i, i.prev = t, n.next = t, t.prev = n, r.next = n, n.prev = r, n;
}
function mc(s, e, t, n) {
    let i = new aa(s, e, t);
    return n ? (i.next = n.next, i.prev = n, n.next.prev = i, n.next = i) : (i.prev = i, i.next = i), i;
}
function vr(s) {
    s.next.prev = s.prev, s.prev.next = s.next, s.prevZ && (s.prevZ.nextZ = s.nextZ), s.nextZ && (s.nextZ.prevZ = s.prevZ);
}
function aa(s, e, t) {
    this.i = s, this.x = e, this.y = t, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
}
function ty(s, e, t, n) {
    let i = 0;
    for(let r = e, o = t - n; r < t; r += n)i += (s[o] - s[r]) * (s[r + 1] + s[o + 1]), o = r;
    return i;
}
var Jt = class {
    static area(e) {
        let t = e.length, n = 0;
        for(let i = t - 1, r = 0; r < t; i = r++)n += e[i].x * e[r].y - e[r].x * e[i].y;
        return n * .5;
    }
    static isClockWise(e) {
        return Jt.area(e) < 0;
    }
    static triangulateShape(e, t) {
        let n = [], i = [], r = [];
        gc(e), xc(n, e);
        let o = e.length;
        t.forEach(gc);
        for(let l = 0; l < t.length; l++)i.push(o), o += t[l].length, xc(n, t[l]);
        let a = Ox.triangulate(n, i);
        for(let l = 0; l < a.length; l += 3)r.push(a.slice(l, l + 3));
        return r;
    }
};
function gc(s) {
    let e = s.length;
    e > 2 && s[e - 1].equals(s[0]) && s.pop();
}
function xc(s, e) {
    for(let t = 0; t < e.length; t++)s.push(e[t].x), s.push(e[t].y);
}
var ln = class extends _e {
    constructor(e = new Xt([
        new X(.5, .5),
        new X(-.5, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = {}){
        super();
        this.type = "ExtrudeGeometry", this.parameters = {
            shapes: e,
            options: t
        }, e = Array.isArray(e) ? e : [
            e
        ];
        let n = this, i = [], r = [];
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a];
            o(c);
        }
        this.setAttribute("position", new de(i, 3)), this.setAttribute("uv", new de(r, 2)), this.computeVertexNormals();
        function o(a) {
            let l = [], c = t.curveSegments !== void 0 ? t.curveSegments : 12, h = t.steps !== void 0 ? t.steps : 1, u = t.depth !== void 0 ? t.depth : 1, d = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0, f = t.bevelThickness !== void 0 ? t.bevelThickness : .2, m = t.bevelSize !== void 0 ? t.bevelSize : f - .1, x = t.bevelOffset !== void 0 ? t.bevelOffset : 0, v = t.bevelSegments !== void 0 ? t.bevelSegments : 3, g = t.extrudePath, p = t.UVGenerator !== void 0 ? t.UVGenerator : ny;
            t.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), u = t.amount);
            let _, y = !1, b, A, L, I;
            g && (_ = g.getSpacedPoints(h), y = !0, d = !1, b = g.computeFrenetFrames(h, !1), A = new M, L = new M, I = new M), d || (v = 0, f = 0, m = 0, x = 0);
            let k = a.extractPoints(c), B = k.shape, P = k.holes;
            if (!Jt.isClockWise(B)) {
                B = B.reverse();
                for(let G = 0, j = P.length; G < j; G++){
                    let K = P[G];
                    Jt.isClockWise(K) && (P[G] = K.reverse());
                }
            }
            let E = Jt.triangulateShape(B, P), D = B;
            for(let G = 0, j = P.length; G < j; G++){
                let K = P[G];
                B = B.concat(K);
            }
            function U(G, j, K) {
                return j || console.error("THREE.ExtrudeGeometry: vec does not exist"), j.clone().multiplyScalar(K).add(G);
            }
            let F = B.length, O = E.length;
            function ne(G, j, K) {
                let ue, se, Se, Te = G.x - j.x, Pe = G.y - j.y, Ye = K.x - G.x, C = K.y - G.y, T = Te * Te + Pe * Pe, J = Te * C - Pe * Ye;
                if (Math.abs(J) > Number.EPSILON) {
                    let $ = Math.sqrt(T), re = Math.sqrt(Ye * Ye + C * C), Z = j.x - Pe / $, Me = j.y + Te / $, ve = K.x - C / re, te = K.y + Ye / re, R = ((ve - Z) * C - (te - Me) * Ye) / (Te * C - Pe * Ye);
                    ue = Z + Te * R - G.x, se = Me + Pe * R - G.y;
                    let ee = ue * ue + se * se;
                    if (ee <= 2) return new X(ue, se);
                    Se = Math.sqrt(ee / 2);
                } else {
                    let $ = !1;
                    Te > Number.EPSILON ? Ye > Number.EPSILON && ($ = !0) : Te < -Number.EPSILON ? Ye < -Number.EPSILON && ($ = !0) : Math.sign(Pe) === Math.sign(C) && ($ = !0), $ ? (ue = -Pe, se = Te, Se = Math.sqrt(T)) : (ue = Te, se = Pe, Se = Math.sqrt(T / 2));
                }
                return new X(ue / Se, se / Se);
            }
            let ce = [];
            for(let G = 0, j = D.length, K = j - 1, ue = G + 1; G < j; G++, K++, ue++)K === j && (K = 0), ue === j && (ue = 0), ce[G] = ne(D[G], D[K], D[ue]);
            let V = [], W, he = ce.concat();
            for(let G = 0, j = P.length; G < j; G++){
                let K = P[G];
                W = [];
                for(let ue = 0, se = K.length, Se = se - 1, Te = ue + 1; ue < se; ue++, Se++, Te++)Se === se && (Se = 0), Te === se && (Te = 0), W[ue] = ne(K[ue], K[Se], K[Te]);
                V.push(W), he = he.concat(W);
            }
            for(let G = 0; G < v; G++){
                let j = G / v, K = f * Math.cos(j * Math.PI / 2), ue = m * Math.sin(j * Math.PI / 2) + x;
                for(let se = 0, Se = D.length; se < Se; se++){
                    let Te = U(D[se], ce[se], ue);
                    Ce(Te.x, Te.y, -K);
                }
                for(let se = 0, Se = P.length; se < Se; se++){
                    let Te = P[se];
                    W = V[se];
                    for(let Pe = 0, Ye = Te.length; Pe < Ye; Pe++){
                        let C = U(Te[Pe], W[Pe], ue);
                        Ce(C.x, C.y, -K);
                    }
                }
            }
            let le = m + x;
            for(let G = 0; G < F; G++){
                let j = d ? U(B[G], he[G], le) : B[G];
                y ? (L.copy(b.normals[0]).multiplyScalar(j.x), A.copy(b.binormals[0]).multiplyScalar(j.y), I.copy(_[0]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(j.x, j.y, 0);
            }
            for(let G = 1; G <= h; G++)for(let j = 0; j < F; j++){
                let K = d ? U(B[j], he[j], le) : B[j];
                y ? (L.copy(b.normals[G]).multiplyScalar(K.x), A.copy(b.binormals[G]).multiplyScalar(K.y), I.copy(_[G]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(K.x, K.y, u / h * G);
            }
            for(let G = v - 1; G >= 0; G--){
                let j = G / v, K = f * Math.cos(j * Math.PI / 2), ue = m * Math.sin(j * Math.PI / 2) + x;
                for(let se = 0, Se = D.length; se < Se; se++){
                    let Te = U(D[se], ce[se], ue);
                    Ce(Te.x, Te.y, u + K);
                }
                for(let se = 0, Se = P.length; se < Se; se++){
                    let Te = P[se];
                    W = V[se];
                    for(let Pe = 0, Ye = Te.length; Pe < Ye; Pe++){
                        let C = U(Te[Pe], W[Pe], ue);
                        y ? Ce(C.x, C.y + _[h - 1].y, _[h - 1].x + K) : Ce(C.x, C.y, u + K);
                    }
                }
            }
            fe(), Be();
            function fe() {
                let G = i.length / 3;
                if (d) {
                    let j = 0, K = F * j;
                    for(let ue = 0; ue < O; ue++){
                        let se = E[ue];
                        ye(se[2] + K, se[1] + K, se[0] + K);
                    }
                    j = h + v * 2, K = F * j;
                    for(let ue = 0; ue < O; ue++){
                        let se = E[ue];
                        ye(se[0] + K, se[1] + K, se[2] + K);
                    }
                } else {
                    for(let j = 0; j < O; j++){
                        let K = E[j];
                        ye(K[2], K[1], K[0]);
                    }
                    for(let j = 0; j < O; j++){
                        let K = E[j];
                        ye(K[0] + F * h, K[1] + F * h, K[2] + F * h);
                    }
                }
                n.addGroup(G, i.length / 3 - G, 0);
            }
            function Be() {
                let G = i.length / 3, j = 0;
                Y(D, j), j += D.length;
                for(let K = 0, ue = P.length; K < ue; K++){
                    let se = P[K];
                    Y(se, j), j += se.length;
                }
                n.addGroup(G, i.length / 3 - G, 1);
            }
            function Y(G, j) {
                let K = G.length;
                for(; --K >= 0;){
                    let ue = K, se = K - 1;
                    se < 0 && (se = G.length - 1);
                    for(let Se = 0, Te = h + v * 2; Se < Te; Se++){
                        let Pe = F * Se, Ye = F * (Se + 1), C = j + ue + Pe, T = j + se + Pe, J = j + se + Ye, $ = j + ue + Ye;
                        ge(C, T, J, $);
                    }
                }
            }
            function Ce(G, j, K) {
                l.push(G), l.push(j), l.push(K);
            }
            function ye(G, j, K) {
                xe(G), xe(j), xe(K);
                let ue = i.length / 3, se = p.generateTopUV(n, i, ue - 3, ue - 2, ue - 1);
                Oe(se[0]), Oe(se[1]), Oe(se[2]);
            }
            function ge(G, j, K, ue) {
                xe(G), xe(j), xe(ue), xe(j), xe(K), xe(ue);
                let se = i.length / 3, Se = p.generateSideWallUV(n, i, se - 6, se - 3, se - 2, se - 1);
                Oe(Se[0]), Oe(Se[1]), Oe(Se[3]), Oe(Se[1]), Oe(Se[2]), Oe(Se[3]);
            }
            function xe(G) {
                i.push(l[G * 3 + 0]), i.push(l[G * 3 + 1]), i.push(l[G * 3 + 2]);
            }
            function Oe(G) {
                r.push(G.x), r.push(G.y);
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes, n = this.parameters.options;
        return iy(t, n, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let r = 0, o = e.shapes.length; r < o; r++){
            let a = t[e.shapes[r]];
            n.push(a);
        }
        let i = e.options.extrudePath;
        return i !== void 0 && (e.options.extrudePath = new Ta[i.type]().fromJSON(i)), new ln(n, e.options);
    }
}, ny = {
    generateTopUV: function(s, e, t, n, i) {
        let r = e[t * 3], o = e[t * 3 + 1], a = e[n * 3], l = e[n * 3 + 1], c = e[i * 3], h = e[i * 3 + 1];
        return [
            new X(r, o),
            new X(a, l),
            new X(c, h)
        ];
    },
    generateSideWallUV: function(s, e, t, n, i, r) {
        let o = e[t * 3], a = e[t * 3 + 1], l = e[t * 3 + 2], c = e[n * 3], h = e[n * 3 + 1], u = e[n * 3 + 2], d = e[i * 3], f = e[i * 3 + 1], m = e[i * 3 + 2], x = e[r * 3], v = e[r * 3 + 1], g = e[r * 3 + 2];
        return Math.abs(a - h) < Math.abs(o - c) ? [
            new X(o, 1 - l),
            new X(c, 1 - u),
            new X(d, 1 - m),
            new X(x, 1 - g)
        ] : [
            new X(a, 1 - l),
            new X(h, 1 - u),
            new X(f, 1 - m),
            new X(v, 1 - g)
        ];
    }
};
function iy(s, e, t) {
    if (t.shapes = [], Array.isArray(s)) for(let n = 0, i = s.length; n < i; n++){
        let r = s[n];
        t.shapes.push(r.uuid);
    }
    else t.shapes.push(s.uuid);
    return e.extrudePath !== void 0 && (t.options.extrudePath = e.extrudePath.toJSON()), t;
}
var _r = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = [
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            0,
            0,
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            n,
            0,
            -1,
            n,
            0,
            1,
            -n,
            0,
            -1,
            -n,
            0,
            1
        ], r = [
            0,
            11,
            5,
            0,
            5,
            1,
            0,
            1,
            7,
            0,
            7,
            10,
            0,
            10,
            11,
            1,
            5,
            9,
            5,
            11,
            4,
            11,
            10,
            2,
            10,
            7,
            6,
            7,
            1,
            8,
            3,
            9,
            4,
            3,
            4,
            2,
            3,
            2,
            6,
            3,
            6,
            8,
            3,
            8,
            9,
            4,
            9,
            5,
            2,
            4,
            11,
            6,
            2,
            10,
            8,
            6,
            7,
            9,
            8,
            1
        ];
        super(i, r, e, t);
        this.type = "IcosahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new _r(e.radius, e.detail);
    }
}, Mr = class extends _e {
    constructor(e = [
        new X(0, .5),
        new X(.5, 0),
        new X(0, -.5)
    ], t = 12, n = 0, i = Math.PI * 2){
        super();
        this.type = "LatheGeometry", this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: i
        }, t = Math.floor(t), i = mt(i, 0, Math.PI * 2);
        let r = [], o = [], a = [], l = [], c = [], h = 1 / t, u = new M, d = new X, f = new M, m = new M, x = new M, v = 0, g = 0;
        for(let p = 0; p <= e.length - 1; p++)switch(p){
            case 0:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, x.copy(f), f.normalize(), l.push(f.x, f.y, f.z);
                break;
            case e.length - 1:
                l.push(x.x, x.y, x.z);
                break;
            default:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, m.copy(f), f.x += x.x, f.y += x.y, f.z += x.z, f.normalize(), l.push(f.x, f.y, f.z), x.copy(m);
        }
        for(let p = 0; p <= t; p++){
            let _ = n + p * h * i, y = Math.sin(_), b = Math.cos(_);
            for(let A = 0; A <= e.length - 1; A++){
                u.x = e[A].x * y, u.y = e[A].y, u.z = e[A].x * b, o.push(u.x, u.y, u.z), d.x = p / t, d.y = A / (e.length - 1), a.push(d.x, d.y);
                let L = l[3 * A + 0] * y, I = l[3 * A + 1], k = l[3 * A + 0] * b;
                c.push(L, I, k);
            }
        }
        for(let p = 0; p < t; p++)for(let _ = 0; _ < e.length - 1; _++){
            let y = _ + p * e.length, b = y, A = y + e.length, L = y + e.length + 1, I = y + 1;
            r.push(b, A, I), r.push(A, L, I);
        }
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("uv", new de(a, 2)), this.setAttribute("normal", new de(c, 3));
    }
    static fromJSON(e) {
        return new Mr(e.points, e.segments, e.phiStart, e.phiLength);
    }
}, Ii = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1
        ], i = [
            0,
            2,
            4,
            0,
            4,
            3,
            0,
            3,
            5,
            0,
            5,
            2,
            1,
            2,
            5,
            1,
            5,
            3,
            1,
            3,
            4,
            1,
            4,
            2
        ];
        super(n, i, e, t);
        this.type = "OctahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new Ii(e.radius, e.detail);
    }
}, br = class extends _e {
    constructor(e = .5, t = 1, n = 8, i = 1, r = 0, o = Math.PI * 2){
        super();
        this.type = "RingGeometry", this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: i,
            thetaStart: r,
            thetaLength: o
        }, n = Math.max(3, n), i = Math.max(1, i);
        let a = [], l = [], c = [], h = [], u = e, d = (t - e) / i, f = new M, m = new X;
        for(let x = 0; x <= i; x++){
            for(let v = 0; v <= n; v++){
                let g = r + v / n * o;
                f.x = u * Math.cos(g), f.y = u * Math.sin(g), l.push(f.x, f.y, f.z), c.push(0, 0, 1), m.x = (f.x / t + 1) / 2, m.y = (f.y / t + 1) / 2, h.push(m.x, m.y);
            }
            u += d;
        }
        for(let x = 0; x < i; x++){
            let v = x * (n + 1);
            for(let g = 0; g < n; g++){
                let p = g + v, _ = p, y = p + n + 1, b = p + n + 2, A = p + 1;
                a.push(_, y, A), a.push(y, b, A);
            }
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
    }
    static fromJSON(e) {
        return new br(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
    }
}, Di = class extends _e {
    constructor(e = new Xt([
        new X(0, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = 12){
        super();
        this.type = "ShapeGeometry", this.parameters = {
            shapes: e,
            curveSegments: t
        };
        let n = [], i = [], r = [], o = [], a = 0, l = 0;
        if (Array.isArray(e) === !1) c(e);
        else for(let h = 0; h < e.length; h++)c(e[h]), this.addGroup(a, l, h), a += l, l = 0;
        this.setIndex(n), this.setAttribute("position", new de(i, 3)), this.setAttribute("normal", new de(r, 3)), this.setAttribute("uv", new de(o, 2));
        function c(h) {
            let u = i.length / 3, d = h.extractPoints(t), f = d.shape, m = d.holes;
            Jt.isClockWise(f) === !1 && (f = f.reverse());
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v];
                Jt.isClockWise(p) === !0 && (m[v] = p.reverse());
            }
            let x = Jt.triangulateShape(f, m);
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v];
                f = f.concat(p);
            }
            for(let v = 0, g = f.length; v < g; v++){
                let p = f[v];
                i.push(p.x, p.y, 0), r.push(0, 0, 1), o.push(p.x, p.y);
            }
            for(let v = 0, g = x.length; v < g; v++){
                let p = x[v], _ = p[0] + u, y = p[1] + u, b = p[2] + u;
                n.push(_, y, b), l += 3;
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes;
        return ry(t, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let i = 0, r = e.shapes.length; i < r; i++){
            let o = t[e.shapes[i]];
            n.push(o);
        }
        return new Di(n, e.curveSegments);
    }
};
function ry(s, e) {
    if (e.shapes = [], Array.isArray(s)) for(let t = 0, n = s.length; t < n; t++){
        let i = s[t];
        e.shapes.push(i.uuid);
    }
    else e.shapes.push(s.uuid);
    return e;
}
var Fi = class extends _e {
    constructor(e = 1, t = 32, n = 16, i = 0, r = Math.PI * 2, o = 0, a = Math.PI){
        super();
        this.type = "SphereGeometry", this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: i,
            phiLength: r,
            thetaStart: o,
            thetaLength: a
        }, t = Math.max(3, Math.floor(t)), n = Math.max(2, Math.floor(n));
        let l = Math.min(o + a, Math.PI), c = 0, h = [], u = new M, d = new M, f = [], m = [], x = [], v = [];
        for(let g = 0; g <= n; g++){
            let p = [], _ = g / n, y = 0;
            g == 0 && o == 0 ? y = .5 / t : g == n && l == Math.PI && (y = -.5 / t);
            for(let b = 0; b <= t; b++){
                let A = b / t;
                u.x = -e * Math.cos(i + A * r) * Math.sin(o + _ * a), u.y = e * Math.cos(o + _ * a), u.z = e * Math.sin(i + A * r) * Math.sin(o + _ * a), m.push(u.x, u.y, u.z), d.copy(u).normalize(), x.push(d.x, d.y, d.z), v.push(A + y, 1 - _), p.push(c++);
            }
            h.push(p);
        }
        for(let g = 0; g < n; g++)for(let p = 0; p < t; p++){
            let _ = h[g][p + 1], y = h[g][p], b = h[g + 1][p], A = h[g + 1][p + 1];
            (g !== 0 || o > 0) && f.push(_, y, A), (g !== n - 1 || l < Math.PI) && f.push(y, b, A);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Fi(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
    }
}, wr = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            1,
            -1,
            -1
        ], i = [
            2,
            1,
            0,
            0,
            3,
            2,
            1,
            3,
            0,
            2,
            3,
            1
        ];
        super(n, i, e, t);
        this.type = "TetrahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new wr(e.radius, e.detail);
    }
}, Sr = class extends _e {
    constructor(e = 1, t = .4, n = 8, i = 6, r = Math.PI * 2){
        super();
        this.type = "TorusGeometry", this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: i,
            arc: r
        }, n = Math.floor(n), i = Math.floor(i);
        let o = [], a = [], l = [], c = [], h = new M, u = new M, d = new M;
        for(let f = 0; f <= n; f++)for(let m = 0; m <= i; m++){
            let x = m / i * r, v = f / n * Math.PI * 2;
            u.x = (e + t * Math.cos(v)) * Math.cos(x), u.y = (e + t * Math.cos(v)) * Math.sin(x), u.z = t * Math.sin(v), a.push(u.x, u.y, u.z), h.x = e * Math.cos(x), h.y = e * Math.sin(x), d.subVectors(u, h).normalize(), l.push(d.x, d.y, d.z), c.push(m / i), c.push(f / n);
        }
        for(let f = 1; f <= n; f++)for(let m = 1; m <= i; m++){
            let x = (i + 1) * f + m - 1, v = (i + 1) * (f - 1) + m - 1, g = (i + 1) * (f - 1) + m, p = (i + 1) * f + m;
            o.push(x, v, p), o.push(v, g, p);
        }
        this.setIndex(o), this.setAttribute("position", new de(a, 3)), this.setAttribute("normal", new de(l, 3)), this.setAttribute("uv", new de(c, 2));
    }
    static fromJSON(e) {
        return new Sr(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
    }
}, Tr = class extends _e {
    constructor(e = 1, t = .4, n = 64, i = 8, r = 2, o = 3){
        super();
        this.type = "TorusKnotGeometry", this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: i,
            p: r,
            q: o
        }, n = Math.floor(n), i = Math.floor(i);
        let a = [], l = [], c = [], h = [], u = new M, d = new M, f = new M, m = new M, x = new M, v = new M, g = new M;
        for(let _ = 0; _ <= n; ++_){
            let y = _ / n * r * Math.PI * 2;
            p(y, r, o, e, f), p(y + .01, r, o, e, m), v.subVectors(m, f), g.addVectors(m, f), x.crossVectors(v, g), g.crossVectors(x, v), x.normalize(), g.normalize();
            for(let b = 0; b <= i; ++b){
                let A = b / i * Math.PI * 2, L = -t * Math.cos(A), I = t * Math.sin(A);
                u.x = f.x + (L * g.x + I * x.x), u.y = f.y + (L * g.y + I * x.y), u.z = f.z + (L * g.z + I * x.z), l.push(u.x, u.y, u.z), d.subVectors(u, f).normalize(), c.push(d.x, d.y, d.z), h.push(_ / n), h.push(b / i);
            }
        }
        for(let _ = 1; _ <= n; _++)for(let y = 1; y <= i; y++){
            let b = (i + 1) * (_ - 1) + (y - 1), A = (i + 1) * _ + (y - 1), L = (i + 1) * _ + y, I = (i + 1) * (_ - 1) + y;
            a.push(b, A, I), a.push(A, L, I);
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
        function p(_, y, b, A, L) {
            let I = Math.cos(_), k = Math.sin(_), B = b / y * _, P = Math.cos(B);
            L.x = A * (2 + P) * .5 * I, L.y = A * (2 + P) * k * .5, L.z = A * Math.sin(B) * .5;
        }
    }
    static fromJSON(e) {
        return new Tr(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
    }
}, Er = class extends _e {
    constructor(e = new ho(new M(-1, -1, 0), new M(-1, 1, 0), new M(1, 1, 0)), t = 64, n = 1, i = 8, r = !1){
        super();
        this.type = "TubeGeometry", this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: i,
            closed: r
        };
        let o = e.computeFrenetFrames(t, r);
        this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
        let a = new M, l = new M, c = new X, h = new M, u = [], d = [], f = [], m = [];
        x(), this.setIndex(m), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function x() {
            for(let _ = 0; _ < t; _++)v(_);
            v(r === !1 ? t : 0), p(), g();
        }
        function v(_) {
            h = e.getPointAt(_ / t, h);
            let y = o.normals[_], b = o.binormals[_];
            for(let A = 0; A <= i; A++){
                let L = A / i * Math.PI * 2, I = Math.sin(L), k = -Math.cos(L);
                l.x = k * y.x + I * b.x, l.y = k * y.y + I * b.y, l.z = k * y.z + I * b.z, l.normalize(), d.push(l.x, l.y, l.z), a.x = h.x + n * l.x, a.y = h.y + n * l.y, a.z = h.z + n * l.z, u.push(a.x, a.y, a.z);
            }
        }
        function g() {
            for(let _ = 1; _ <= t; _++)for(let y = 1; y <= i; y++){
                let b = (i + 1) * (_ - 1) + (y - 1), A = (i + 1) * _ + (y - 1), L = (i + 1) * _ + y, I = (i + 1) * (_ - 1) + y;
                m.push(b, A, I), m.push(A, L, I);
            }
        }
        function p() {
            for(let _ = 0; _ <= t; _++)for(let y = 0; y <= i; y++)c.x = _ / t, c.y = y / i, f.push(c.x, c.y);
        }
    }
    toJSON() {
        let e = super.toJSON();
        return e.path = this.parameters.path.toJSON(), e;
    }
    static fromJSON(e) {
        return new Er(new Ta[e.path.type]().fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed);
    }
}, Ea = class extends _e {
    constructor(e = null){
        super();
        if (this.type = "WireframeGeometry", this.parameters = {
            geometry: e
        }, e !== null) {
            let t = [], n = new Set, i = new M, r = new M;
            if (e.index !== null) {
                let o = e.attributes.position, a = e.index, l = e.groups;
                l.length === 0 && (l = [
                    {
                        start: 0,
                        count: a.count,
                        materialIndex: 0
                    }
                ]);
                for(let c = 0, h = l.length; c < h; ++c){
                    let u = l[c], d = u.start, f = u.count;
                    for(let m = d, x = d + f; m < x; m += 3)for(let v = 0; v < 3; v++){
                        let g = a.getX(m + v), p = a.getX(m + (v + 1) % 3);
                        i.fromBufferAttribute(o, g), r.fromBufferAttribute(o, p), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                    }
                }
            } else {
                let o = e.attributes.position;
                for(let a = 0, l = o.count / 3; a < l; a++)for(let c = 0; c < 3; c++){
                    let h = 3 * a + c, u = 3 * a + (c + 1) % 3;
                    i.fromBufferAttribute(o, h), r.fromBufferAttribute(o, u), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                }
            }
            this.setAttribute("position", new de(t, 3));
        }
    }
};
function yc(s, e, t) {
    let n = `${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;
    return t.has(n) === !0 || t.has(i) === !0 ? !1 : (t.add(n, i), !0);
}
var vc = Object.freeze({
    __proto__: null,
    BoxGeometry: wn,
    BoxBufferGeometry: wn,
    CircleGeometry: fr,
    CircleBufferGeometry: fr,
    ConeGeometry: pr,
    ConeBufferGeometry: pr,
    CylinderGeometry: Jn,
    CylinderBufferGeometry: Jn,
    DodecahedronGeometry: mr,
    DodecahedronBufferGeometry: mr,
    EdgesGeometry: _a,
    ExtrudeGeometry: ln,
    ExtrudeBufferGeometry: ln,
    IcosahedronGeometry: _r,
    IcosahedronBufferGeometry: _r,
    LatheGeometry: Mr,
    LatheBufferGeometry: Mr,
    OctahedronGeometry: Ii,
    OctahedronBufferGeometry: Ii,
    PlaneGeometry: Pi,
    PlaneBufferGeometry: Pi,
    PolyhedronGeometry: an,
    PolyhedronBufferGeometry: an,
    RingGeometry: br,
    RingBufferGeometry: br,
    ShapeGeometry: Di,
    ShapeBufferGeometry: Di,
    SphereGeometry: Fi,
    SphereBufferGeometry: Fi,
    TetrahedronGeometry: wr,
    TetrahedronBufferGeometry: wr,
    TorusGeometry: Sr,
    TorusBufferGeometry: Sr,
    TorusKnotGeometry: Tr,
    TorusKnotBufferGeometry: Tr,
    TubeGeometry: Er,
    TubeBufferGeometry: Er,
    WireframeGeometry: Ea
}), Aa = class extends dt {
    constructor(e){
        super();
        this.type = "ShadowMaterial", this.color = new ae(0), this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this;
    }
};
Aa.prototype.isShadowMaterial = !0;
var po = class extends dt {
    constructor(e){
        super();
        this.defines = {
            STANDARD: ""
        }, this.type = "MeshStandardMaterial", this.color = new ae(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: ""
        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
po.prototype.isMeshStandardMaterial = !0;
var Ca = class extends po {
    constructor(e){
        super();
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.type = "MeshPhysicalMaterial", this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new X(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
            get: function() {
                return mt(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
            },
            set: function(t) {
                this.ior = (1 + .4 * t) / (1 - .4 * t);
            }
        }), this.sheenColor = new ae(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 0, this.attenuationColor = new ae(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new ae(1, 1, 1), this.specularColorMap = null, this._sheen = 0, this._clearcoat = 0, this._transmission = 0, this.setValues(e);
    }
    get sheen() {
        return this._sheen;
    }
    set sheen(e) {
        this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
    }
    get clearcoat() {
        return this._clearcoat;
    }
    set clearcoat(e) {
        this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
    }
    get transmission() {
        return this._transmission;
    }
    set transmission(e) {
        this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.ior = e.ior, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
    }
};
Ca.prototype.isMeshPhysicalMaterial = !0;
var La = class extends dt {
    constructor(e){
        super();
        this.type = "MeshPhongMaterial", this.color = new ae(16777215), this.specular = new ae(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
La.prototype.isMeshPhongMaterial = !0;
var Ra = class extends dt {
    constructor(e){
        super();
        this.defines = {
            TOON: ""
        }, this.type = "MeshToonMaterial", this.color = new ae(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ra.prototype.isMeshToonMaterial = !0;
var Pa = class extends dt {
    constructor(e){
        super();
        this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
    }
};
Pa.prototype.isMeshNormalMaterial = !0;
var Ia = class extends dt {
    constructor(e){
        super();
        this.type = "MeshLambertMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ia.prototype.isMeshLambertMaterial = !0;
var Da = class extends dt {
    constructor(e){
        super();
        this.defines = {
            MATCAP: ""
        }, this.type = "MeshMatcapMaterial", this.color = new ae(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            MATCAP: ""
        }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this;
    }
};
Da.prototype.isMeshMatcapMaterial = !0;
var Fa = class extends ft {
    constructor(e){
        super();
        this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
    }
};
Fa.prototype.isLineDashedMaterial = !0;
var sy = Object.freeze({
    __proto__: null,
    ShadowMaterial: Aa,
    SpriteMaterial: io,
    RawShaderMaterial: Gi,
    ShaderMaterial: sn,
    PointsMaterial: jn,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshPhongMaterial: La,
    MeshToonMaterial: Ra,
    MeshNormalMaterial: Pa,
    MeshLambertMaterial: Ia,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshBasicMaterial: hn,
    MeshMatcapMaterial: Da,
    LineDashedMaterial: Fa,
    LineBasicMaterial: ft,
    Material: dt
}), Ze = {
    arraySlice: function(s, e, t) {
        return Ze.isTypedArray(s) ? new s.constructor(s.subarray(e, t !== void 0 ? t : s.length)) : s.slice(e, t);
    },
    convertArray: function(s, e, t) {
        return !s || !t && s.constructor === e ? s : typeof e.BYTES_PER_ELEMENT == "number" ? new e(s) : Array.prototype.slice.call(s);
    },
    isTypedArray: function(s) {
        return ArrayBuffer.isView(s) && !(s instanceof DataView);
    },
    getKeyframeOrder: function(s) {
        function e(i, r) {
            return s[i] - s[r];
        }
        let t = s.length, n = new Array(t);
        for(let i = 0; i !== t; ++i)n[i] = i;
        return n.sort(e), n;
    },
    sortedArray: function(s, e, t) {
        let n = s.length, i = new s.constructor(n);
        for(let r = 0, o = 0; o !== n; ++r){
            let a = t[r] * e;
            for(let l = 0; l !== e; ++l)i[o++] = s[a + l];
        }
        return i;
    },
    flattenJSON: function(s, e, t, n) {
        let i = 1, r = s[0];
        for(; r !== void 0 && r[n] === void 0;)r = s[i++];
        if (r === void 0) return;
        let o = r[n];
        if (o !== void 0) if (Array.isArray(o)) do o = r[n], o !== void 0 && (e.push(r.time), t.push.apply(t, o)), r = s[i++];
        while (r !== void 0)
        else if (o.toArray !== void 0) do o = r[n], o !== void 0 && (e.push(r.time), o.toArray(t, t.length)), r = s[i++];
        while (r !== void 0)
        else do o = r[n], o !== void 0 && (e.push(r.time), t.push(o)), r = s[i++];
        while (r !== void 0)
    },
    subclip: function(s, e, t, n, i = 30) {
        let r = s.clone();
        r.name = e;
        let o = [];
        for(let l = 0; l < r.tracks.length; ++l){
            let c = r.tracks[l], h = c.getValueSize(), u = [], d = [];
            for(let f = 0; f < c.times.length; ++f){
                let m = c.times[f] * i;
                if (!(m < t || m >= n)) {
                    u.push(c.times[f]);
                    for(let x = 0; x < h; ++x)d.push(c.values[f * h + x]);
                }
            }
            u.length !== 0 && (c.times = Ze.convertArray(u, c.times.constructor), c.values = Ze.convertArray(d, c.values.constructor), o.push(c));
        }
        r.tracks = o;
        let a = 1 / 0;
        for(let l = 0; l < r.tracks.length; ++l)a > r.tracks[l].times[0] && (a = r.tracks[l].times[0]);
        for(let l = 0; l < r.tracks.length; ++l)r.tracks[l].shift(-1 * a);
        return r.resetDuration(), r;
    },
    makeClipAdditive: function(s, e = 0, t = s, n = 30) {
        n <= 0 && (n = 30);
        let i = t.tracks.length, r = e / n;
        for(let o = 0; o < i; ++o){
            let a = t.tracks[o], l = a.ValueTypeName;
            if (l === "bool" || l === "string") continue;
            let c = s.tracks.find(function(g) {
                return g.name === a.name && g.ValueTypeName === l;
            });
            if (c === void 0) continue;
            let h = 0, u = a.getValueSize();
            a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (h = u / 3);
            let d = 0, f = c.getValueSize();
            c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (d = f / 3);
            let m = a.times.length - 1, x;
            if (r <= a.times[0]) {
                let g = h, p = u - h;
                x = Ze.arraySlice(a.values, g, p);
            } else if (r >= a.times[m]) {
                let g = m * u + h, p = g + u - h;
                x = Ze.arraySlice(a.values, g, p);
            } else {
                let g = a.createInterpolant(), p = h, _ = u - h;
                g.evaluate(r), x = Ze.arraySlice(g.resultBuffer, p, _);
            }
            l === "quaternion" && new gt().fromArray(x).normalize().conjugate().toArray(x);
            let v = c.times.length;
            for(let g = 0; g < v; ++g){
                let p = g * f + d;
                if (l === "quaternion") gt.multiplyQuaternionsFlat(c.values, p, x, 0, c.values, p);
                else {
                    let _ = f - d * 2;
                    for(let y = 0; y < _; ++y)c.values[p + y] -= x[y];
                }
            }
        }
        return s.blendMode = qc, s;
    }
}, cn = class {
    constructor(e, t, n, i){
        this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new t.constructor(n), this.sampleValues = t, this.valueSize = n, this.settings = null, this.DefaultSettings_ = {};
    }
    evaluate(e) {
        let t = this.parameterPositions, n = this._cachedIndex, i = t[n], r = t[n - 1];
        e: {
            t: {
                let o;
                n: {
                    i: if (!(e < i)) {
                        for(let a = n + 2;;){
                            if (i === void 0) {
                                if (e < r) break i;
                                return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, r);
                            }
                            if (n === a) break;
                            if (r = i, i = t[++n], e < i) break t;
                        }
                        o = t.length;
                        break n;
                    }
                    if (!(e >= r)) {
                        let a = t[1];
                        e < a && (n = 2, r = a);
                        for(let l = n - 2;;){
                            if (r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                            if (n === l) break;
                            if (i = r, r = t[--n - 1], e >= r) break t;
                        }
                        o = n, n = 0;
                        break n;
                    }
                    break e;
                }
                for(; n < o;){
                    let a = n + o >>> 1;
                    e < t[a] ? o = a : n = a + 1;
                }
                if (i = t[n], r = t[n - 1], r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                if (i === void 0) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, r, e);
            }
            this._cachedIndex = n, this.intervalChanged_(n, r, i);
        }
        return this.interpolate_(n, r, e, i);
    }
    getSettings_() {
        return this.settings || this.DefaultSettings_;
    }
    copySampleValue_(e) {
        let t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i;
        for(let o = 0; o !== i; ++o)t[o] = n[r + o];
        return t;
    }
    interpolate_() {
        throw new Error("call to abstract method");
    }
    intervalChanged_() {}
};
cn.prototype.beforeStart_ = cn.prototype.copySampleValue_;
cn.prototype.afterEnd_ = cn.prototype.copySampleValue_;
var Ph = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
        this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
            endingStart: Mi,
            endingEnd: Mi
        };
    }
    intervalChanged_(e, t, n) {
        let i = this.parameterPositions, r = e - 2, o = e + 1, a = i[r], l = i[o];
        if (a === void 0) switch(this.getSettings_().endingStart){
            case bi:
                r = e, a = 2 * t - n;
                break;
            case Os:
                r = i.length - 2, a = t + i[r] - i[r + 1];
                break;
            default:
                r = e, a = n;
        }
        if (l === void 0) switch(this.getSettings_().endingEnd){
            case bi:
                o = e, l = 2 * n - t;
                break;
            case Os:
                o = 1, l = n + i[1] - i[0];
                break;
            default:
                o = e - 1, l = t;
        }
        let c = (n - t) * .5, h = this.valueSize;
        this._weightPrev = c / (t - a), this._weightNext = c / (l - n), this._offsetPrev = r * h, this._offsetNext = o * h;
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = this._offsetPrev, u = this._offsetNext, d = this._weightPrev, f = this._weightNext, m = (n - t) / (i - t), x = m * m, v = x * m, g = -d * v + 2 * d * x - d * m, p = (1 + d) * v + (-1.5 - 2 * d) * x + (-.5 + d) * m + 1, _ = (-1 - f) * v + (1.5 + f) * x + .5 * m, y = f * v - f * x;
        for(let b = 0; b !== a; ++b)r[b] = g * o[h + b] + p * o[c + b] + _ * o[l + b] + y * o[u + b];
        return r;
    }
}, Na = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = (n - t) / (i - t), u = 1 - h;
        for(let d = 0; d !== a; ++d)r[d] = o[c + d] * u + o[l + d] * h;
        return r;
    }
}, Ih = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e) {
        return this.copySampleValue_(e - 1);
    }
}, zt = class {
    constructor(e, t, n, i){
        if (e === void 0) throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (t === void 0 || t.length === 0) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
        this.name = e, this.times = Ze.convertArray(t, this.TimeBufferType), this.values = Ze.convertArray(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
    }
    static toJSON(e) {
        let t = e.constructor, n;
        if (t.toJSON !== this.toJSON) n = t.toJSON(e);
        else {
            n = {
                name: e.name,
                times: Ze.convertArray(e.times, Array),
                values: Ze.convertArray(e.values, Array)
            };
            let i = e.getInterpolation();
            i !== e.DefaultInterpolation && (n.interpolation = i);
        }
        return n.type = e.ValueTypeName, n;
    }
    InterpolantFactoryMethodDiscrete(e) {
        return new Ih(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodLinear(e) {
        return new Na(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodSmooth(e) {
        return new Ph(this.times, this.values, this.getValueSize(), e);
    }
    setInterpolation(e) {
        let t;
        switch(e){
            case zs:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case Us:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case yo:
                t = this.InterpolantFactoryMethodSmooth;
                break;
        }
        if (t === void 0) {
            let n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
            if (this.createInterpolant === void 0) if (e !== this.DefaultInterpolation) this.setInterpolation(this.DefaultInterpolation);
            else throw new Error(n);
            return console.warn("THREE.KeyframeTrack:", n), this;
        }
        return this.createInterpolant = t, this;
    }
    getInterpolation() {
        switch(this.createInterpolant){
            case this.InterpolantFactoryMethodDiscrete:
                return zs;
            case this.InterpolantFactoryMethodLinear:
                return Us;
            case this.InterpolantFactoryMethodSmooth:
                return yo;
        }
    }
    getValueSize() {
        return this.values.length / this.times.length;
    }
    shift(e) {
        if (e !== 0) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] += e;
        }
        return this;
    }
    scale(e) {
        if (e !== 1) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] *= e;
        }
        return this;
    }
    trim(e, t) {
        let n = this.times, i = n.length, r = 0, o = i - 1;
        for(; r !== i && n[r] < e;)++r;
        for(; o !== -1 && n[o] > t;)--o;
        if (++o, r !== 0 || o !== i) {
            r >= o && (o = Math.max(o, 1), r = o - 1);
            let a = this.getValueSize();
            this.times = Ze.arraySlice(n, r, o), this.values = Ze.arraySlice(this.values, r * a, o * a);
        }
        return this;
    }
    validate() {
        let e = !0, t = this.getValueSize();
        t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
        let n = this.times, i = this.values, r = n.length;
        r === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
        let o = null;
        for(let a = 0; a !== r; a++){
            let l = n[a];
            if (typeof l == "number" && isNaN(l)) {
                console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, l), e = !1;
                break;
            }
            if (o !== null && o > l) {
                console.error("THREE.KeyframeTrack: Out of order keys.", this, a, l, o), e = !1;
                break;
            }
            o = l;
        }
        if (i !== void 0 && Ze.isTypedArray(i)) for(let a = 0, l = i.length; a !== l; ++a){
            let c = i[a];
            if (isNaN(c)) {
                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, c), e = !1;
                break;
            }
        }
        return e;
    }
    optimize() {
        let e = Ze.arraySlice(this.times), t = Ze.arraySlice(this.values), n = this.getValueSize(), i = this.getInterpolation() === yo, r = e.length - 1, o = 1;
        for(let a = 1; a < r; ++a){
            let l = !1, c = e[a], h = e[a + 1];
            if (c !== h && (a !== 1 || c !== e[0])) if (i) l = !0;
            else {
                let u = a * n, d = u - n, f = u + n;
                for(let m = 0; m !== n; ++m){
                    let x = t[u + m];
                    if (x !== t[d + m] || x !== t[f + m]) {
                        l = !0;
                        break;
                    }
                }
            }
            if (l) {
                if (a !== o) {
                    e[o] = e[a];
                    let u = a * n, d = o * n;
                    for(let f = 0; f !== n; ++f)t[d + f] = t[u + f];
                }
                ++o;
            }
        }
        if (r > 0) {
            e[o] = e[r];
            for(let a = r * n, l = o * n, c = 0; c !== n; ++c)t[l + c] = t[a + c];
            ++o;
        }
        return o !== e.length ? (this.times = Ze.arraySlice(e, 0, o), this.values = Ze.arraySlice(t, 0, o * n)) : (this.times = e, this.values = t), this;
    }
    clone() {
        let e = Ze.arraySlice(this.times, 0), t = Ze.arraySlice(this.values, 0), n = this.constructor, i = new n(this.name, e, t);
        return i.createInterpolant = this.createInterpolant, i;
    }
};
zt.prototype.TimeBufferType = Float32Array;
zt.prototype.ValueBufferType = Float32Array;
zt.prototype.DefaultInterpolation = Us;
var Qn = class extends zt {
};
Qn.prototype.ValueTypeName = "bool";
Qn.prototype.ValueBufferType = Array;
Qn.prototype.DefaultInterpolation = zs;
Qn.prototype.InterpolantFactoryMethodLinear = void 0;
Qn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Ba = class extends zt {
};
Ba.prototype.ValueTypeName = "color";
var Ar = class extends zt {
};
Ar.prototype.ValueTypeName = "number";
var Dh = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = (n - t) / (i - t), c = e * a;
        for(let h = c + a; c !== h; c += 4)gt.slerpFlat(r, 0, o, c - a, o, c, l);
        return r;
    }
}, Wi = class extends zt {
    InterpolantFactoryMethodLinear(e) {
        return new Dh(this.times, this.values, this.getValueSize(), e);
    }
};
Wi.prototype.ValueTypeName = "quaternion";
Wi.prototype.DefaultInterpolation = Us;
Wi.prototype.InterpolantFactoryMethodSmooth = void 0;
var Kn = class extends zt {
};
Kn.prototype.ValueTypeName = "string";
Kn.prototype.ValueBufferType = Array;
Kn.prototype.DefaultInterpolation = zs;
Kn.prototype.InterpolantFactoryMethodLinear = void 0;
Kn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Cr = class extends zt {
};
Cr.prototype.ValueTypeName = "vector";
var Lr = class {
    constructor(e, t = -1, n, i = ua){
        this.name = e, this.tracks = n, this.duration = t, this.blendMode = i, this.uuid = Et(), this.duration < 0 && this.resetDuration();
    }
    static parse(e) {
        let t = [], n = e.tracks, i = 1 / (e.fps || 1);
        for(let o = 0, a = n.length; o !== a; ++o)t.push(ay(n[o]).scale(i));
        let r = new this(e.name, e.duration, t, e.blendMode);
        return r.uuid = e.uuid, r;
    }
    static toJSON(e) {
        let t = [], n = e.tracks, i = {
            name: e.name,
            duration: e.duration,
            tracks: t,
            uuid: e.uuid,
            blendMode: e.blendMode
        };
        for(let r = 0, o = n.length; r !== o; ++r)t.push(zt.toJSON(n[r]));
        return i;
    }
    static CreateFromMorphTargetSequence(e, t, n, i) {
        let r = t.length, o = [];
        for(let a = 0; a < r; a++){
            let l = [], c = [];
            l.push((a + r - 1) % r, a, (a + 1) % r), c.push(0, 1, 0);
            let h = Ze.getKeyframeOrder(l);
            l = Ze.sortedArray(l, 1, h), c = Ze.sortedArray(c, 1, h), !i && l[0] === 0 && (l.push(r), c.push(c[0])), o.push(new Ar(".morphTargetInfluences[" + t[a].name + "]", l, c).scale(1 / n));
        }
        return new this(e, -1, o);
    }
    static findByName(e, t) {
        let n = e;
        if (!Array.isArray(e)) {
            let i = e;
            n = i.geometry && i.geometry.animations || i.animations;
        }
        for(let i = 0; i < n.length; i++)if (n[i].name === t) return n[i];
        return null;
    }
    static CreateClipsFromMorphTargetSequences(e, t, n) {
        let i = {}, r = /^([\w-]*?)([\d]+)$/;
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a], h = c.name.match(r);
            if (h && h.length > 1) {
                let u = h[1], d = i[u];
                d || (i[u] = d = []), d.push(c);
            }
        }
        let o = [];
        for(let a in i)o.push(this.CreateFromMorphTargetSequence(a, i[a], t, n));
        return o;
    }
    static parseAnimation(e, t) {
        if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        let n = function(u, d, f, m, x) {
            if (f.length !== 0) {
                let v = [], g = [];
                Ze.flattenJSON(f, v, g, m), v.length !== 0 && x.push(new u(d, v, g));
            }
        }, i = [], r = e.name || "default", o = e.fps || 30, a = e.blendMode, l = e.length || -1, c = e.hierarchy || [];
        for(let u = 0; u < c.length; u++){
            let d = c[u].keys;
            if (!(!d || d.length === 0)) if (d[0].morphTargets) {
                let f = {}, m;
                for(m = 0; m < d.length; m++)if (d[m].morphTargets) for(let x = 0; x < d[m].morphTargets.length; x++)f[d[m].morphTargets[x]] = -1;
                for(let x in f){
                    let v = [], g = [];
                    for(let p = 0; p !== d[m].morphTargets.length; ++p){
                        let _ = d[m];
                        v.push(_.time), g.push(_.morphTarget === x ? 1 : 0);
                    }
                    i.push(new Ar(".morphTargetInfluence[" + x + "]", v, g));
                }
                l = f.length * (o || 1);
            } else {
                let f = ".bones[" + t[u].name + "]";
                n(Cr, f + ".position", d, "pos", i), n(Wi, f + ".quaternion", d, "rot", i), n(Cr, f + ".scale", d, "scl", i);
            }
        }
        return i.length === 0 ? null : new this(r, l, i, a);
    }
    resetDuration() {
        let e = this.tracks, t = 0;
        for(let n = 0, i = e.length; n !== i; ++n){
            let r = this.tracks[n];
            t = Math.max(t, r.times[r.times.length - 1]);
        }
        return this.duration = t, this;
    }
    trim() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].trim(0, this.duration);
        return this;
    }
    validate() {
        let e = !0;
        for(let t = 0; t < this.tracks.length; t++)e = e && this.tracks[t].validate();
        return e;
    }
    optimize() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].optimize();
        return this;
    }
    clone() {
        let e = [];
        for(let t = 0; t < this.tracks.length; t++)e.push(this.tracks[t].clone());
        return new this.constructor(this.name, this.duration, e, this.blendMode);
    }
    toJSON() {
        return this.constructor.toJSON(this);
    }
};
function oy(s) {
    switch(s.toLowerCase()){
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
            return Ar;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
            return Cr;
        case "color":
            return Ba;
        case "quaternion":
            return Wi;
        case "bool":
        case "boolean":
            return Qn;
        case "string":
            return Kn;
    }
    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + s);
}
function ay(s) {
    if (s.type === void 0) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    let e = oy(s.type);
    if (s.times === void 0) {
        let t = [], n = [];
        Ze.flattenJSON(s.keys, t, n, "value"), s.times = t, s.values = n;
    }
    return e.parse !== void 0 ? e.parse(s) : new e(s.name, s.times, s.values, s.interpolation);
}
var Ni = {
    enabled: !1,
    files: {},
    add: function(s, e) {
        this.enabled !== !1 && (this.files[s] = e);
    },
    get: function(s) {
        if (this.enabled !== !1) return this.files[s];
    },
    remove: function(s) {
        delete this.files[s];
    },
    clear: function() {
        this.files = {};
    }
}, za = class {
    constructor(e, t, n){
        let i = this, r = !1, o = 0, a = 0, l, c = [];
        this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function(h) {
            a++, r === !1 && i.onStart !== void 0 && i.onStart(h, o, a), r = !0;
        }, this.itemEnd = function(h) {
            o++, i.onProgress !== void 0 && i.onProgress(h, o, a), o === a && (r = !1, i.onLoad !== void 0 && i.onLoad());
        }, this.itemError = function(h) {
            i.onError !== void 0 && i.onError(h);
        }, this.resolveURL = function(h) {
            return l ? l(h) : h;
        }, this.setURLModifier = function(h) {
            return l = h, this;
        }, this.addHandler = function(h, u) {
            return c.push(h, u), this;
        }, this.removeHandler = function(h) {
            let u = c.indexOf(h);
            return u !== -1 && c.splice(u, 2), this;
        }, this.getHandler = function(h) {
            for(let u = 0, d = c.length; u < d; u += 2){
                let f = c[u], m = c[u + 1];
                if (f.global && (f.lastIndex = 0), f.test(h)) return m;
            }
            return null;
        };
    }
}, ly = new za, bt = class {
    constructor(e){
        this.manager = e !== void 0 ? e : ly, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
    }
    load() {}
    loadAsync(e, t) {
        let n = this;
        return new Promise(function(i, r) {
            n.load(e, i, t, r);
        });
    }
    parse() {}
    setCrossOrigin(e) {
        return this.crossOrigin = e, this;
    }
    setWithCredentials(e) {
        return this.withCredentials = e, this;
    }
    setPath(e) {
        return this.path = e, this;
    }
    setResourcePath(e) {
        return this.resourcePath = e, this;
    }
    setRequestHeader(e) {
        return this.requestHeader = e, this;
    }
}, tn = {}, Yt = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = Ni.get(e);
        if (r !== void 0) return this.manager.itemStart(e), setTimeout(()=>{
            t && t(r), this.manager.itemEnd(e);
        }, 0), r;
        if (tn[e] !== void 0) {
            tn[e].push({
                onLoad: t,
                onProgress: n,
                onError: i
            });
            return;
        }
        tn[e] = [], tn[e].push({
            onLoad: t,
            onProgress: n,
            onError: i
        });
        let o = new Request(e, {
            headers: new Headers(this.requestHeader),
            credentials: this.withCredentials ? "include" : "same-origin"
        });
        fetch(o).then((a)=>{
            if (a.status === 200 || a.status === 0) {
                if (a.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || a.body.getReader === void 0) return a;
                let l = tn[e], c = a.body.getReader(), h = a.headers.get("Content-Length"), u = h ? parseInt(h) : 0, d = u !== 0, f = 0, m = new ReadableStream({
                    start (x) {
                        v();
                        function v() {
                            c.read().then(({ done: g , value: p  })=>{
                                if (g) x.close();
                                else {
                                    f += p.byteLength;
                                    let _ = new ProgressEvent("progress", {
                                        lengthComputable: d,
                                        loaded: f,
                                        total: u
                                    });
                                    for(let y = 0, b = l.length; y < b; y++){
                                        let A = l[y];
                                        A.onProgress && A.onProgress(_);
                                    }
                                    x.enqueue(p), v();
                                }
                            });
                        }
                    }
                });
                return new Response(m);
            } else throw Error(`fetch for "${a.url}" responded with ${a.status}: ${a.statusText}`);
        }).then((a)=>{
            switch(this.responseType){
                case "arraybuffer":
                    return a.arrayBuffer();
                case "blob":
                    return a.blob();
                case "document":
                    return a.text().then((l)=>new DOMParser().parseFromString(l, this.mimeType));
                case "json":
                    return a.json();
                default:
                    return a.text();
            }
        }).then((a)=>{
            Ni.add(e, a);
            let l = tn[e];
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onLoad && u.onLoad(a);
            }
        }).catch((a)=>{
            let l = tn[e];
            if (l === void 0) throw this.manager.itemError(e), a;
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onError && u.onError(a);
            }
            this.manager.itemError(e);
        }).finally(()=>{
            this.manager.itemEnd(e);
        }), this.manager.itemStart(e);
    }
    setResponseType(e) {
        return this.responseType = e, this;
    }
    setMimeType(e) {
        return this.mimeType = e, this;
    }
}, cy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = [];
        for(let n = 0; n < e.length; n++){
            let i = Lr.parse(e[n]);
            t.push(i);
        }
        return t;
    }
}, hy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = [], a = new va, l = new Yt(this.manager);
        l.setPath(this.path), l.setResponseType("arraybuffer"), l.setRequestHeader(this.requestHeader), l.setWithCredentials(r.withCredentials);
        let c = 0;
        function h(u) {
            l.load(e[u], function(d) {
                let f = r.parse(d, !0);
                o[u] = {
                    width: f.width,
                    height: f.height,
                    format: f.format,
                    mipmaps: f.mipmaps
                }, c += 1, c === 6 && (f.mipmapCount === 1 && (a.minFilter = tt), a.image = o, a.format = f.format, a.needsUpdate = !0, t && t(a));
            }, n, i);
        }
        if (Array.isArray(e)) for(let u = 0, d = e.length; u < d; ++u)h(u);
        else l.load(e, function(u) {
            let d = r.parse(u, !0);
            if (d.isCubemap) {
                let f = d.mipmaps.length / d.mipmapCount;
                for(let m = 0; m < f; m++){
                    o[m] = {
                        mipmaps: []
                    };
                    for(let x = 0; x < d.mipmapCount; x++)o[m].mipmaps.push(d.mipmaps[m * d.mipmapCount + x]), o[m].format = d.format, o[m].width = d.width, o[m].height = d.height;
                }
                a.image = o;
            } else a.image.width = d.width, a.image.height = d.height, a.mipmaps = d.mipmaps;
            d.mipmapCount === 1 && (a.minFilter = tt), a.format = d.format, a.needsUpdate = !0, t && t(a);
        }, n, i);
        return a;
    }
}, Rr = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = qs("img");
        function l() {
            h(), Ni.add(e, this), t && t(this), r.manager.itemEnd(e);
        }
        function c(u) {
            h(), i && i(u), r.manager.itemError(e), r.manager.itemEnd(e);
        }
        function h() {
            a.removeEventListener("load", l, !1), a.removeEventListener("error", c, !1);
        }
        return a.addEventListener("load", l, !1), a.addEventListener("error", c, !1), e.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (a.crossOrigin = this.crossOrigin), r.manager.itemStart(e), a.src = e, a;
    }
}, Fh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ki, o = new Rr(this.manager);
        o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
        let a = 0;
        function l(c) {
            o.load(e[c], function(h) {
                r.images[c] = h, a++, a === 6 && (r.needsUpdate = !0, t && t(r));
            }, void 0, i);
        }
        for(let c = 0; c < e.length; ++c)l(c);
        return r;
    }
}, Nh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new qn, a = new Yt(this.manager);
        return a.setResponseType("arraybuffer"), a.setRequestHeader(this.requestHeader), a.setPath(this.path), a.setWithCredentials(r.withCredentials), a.load(e, function(l) {
            let c = r.parse(l);
            !c || (c.image !== void 0 ? o.image = c.image : c.data !== void 0 && (o.image.width = c.width, o.image.height = c.height, o.image.data = c.data), o.wrapS = c.wrapS !== void 0 ? c.wrapS : vt, o.wrapT = c.wrapT !== void 0 ? c.wrapT : vt, o.magFilter = c.magFilter !== void 0 ? c.magFilter : tt, o.minFilter = c.minFilter !== void 0 ? c.minFilter : tt, o.anisotropy = c.anisotropy !== void 0 ? c.anisotropy : 1, c.encoding !== void 0 && (o.encoding = c.encoding), c.flipY !== void 0 && (o.flipY = c.flipY), c.format !== void 0 && (o.format = c.format), c.type !== void 0 && (o.type = c.type), c.mipmaps !== void 0 && (o.mipmaps = c.mipmaps, o.minFilter = Ui), c.mipmapCount === 1 && (o.minFilter = tt), c.generateMipmaps !== void 0 && (o.generateMipmaps = c.generateMipmaps), o.needsUpdate = !0, t && t(o, c));
        }, n, i), o;
    }
}, Bh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ot, o = new Rr(this.manager);
        return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function(a) {
            r.image = a, r.needsUpdate = !0, t !== void 0 && t(r);
        }, n, i), r;
    }
}, Bt = class extends Ne {
    constructor(e, t = 1){
        super();
        this.type = "Light", this.color = new ae(e), this.intensity = t;
    }
    dispose() {}
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.intensity = e.intensity, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, this.groundColor !== void 0 && (t.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (t.object.distance = this.distance), this.angle !== void 0 && (t.object.angle = this.angle), this.decay !== void 0 && (t.object.decay = this.decay), this.penumbra !== void 0 && (t.object.penumbra = this.penumbra), this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()), t;
    }
};
Bt.prototype.isLight = !0;
var Ua = class extends Bt {
    constructor(e, t, n){
        super(e, n);
        this.type = "HemisphereLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.groundColor = new ae(t);
    }
    copy(e) {
        return Bt.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this;
    }
};
Ua.prototype.isHemisphereLight = !0;
var _c = new pe, Mc = new M, bc = new M, mo = class {
    constructor(e){
        this.camera = e, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new X(512, 512), this.map = null, this.mapPass = null, this.matrix = new pe, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new Dr, this._frameExtents = new X(1, 1), this._viewportCount = 1, this._viewports = [
            new Ve(0, 0, 1, 1)
        ];
    }
    getViewportCount() {
        return this._viewportCount;
    }
    getFrustum() {
        return this._frustum;
    }
    updateMatrices(e) {
        let t = this.camera, n = this.matrix;
        Mc.setFromMatrixPosition(e.matrixWorld), t.position.copy(Mc), bc.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(bc), t.updateMatrixWorld(), _c.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(_c), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse);
    }
    getViewport(e) {
        return this._viewports[e];
    }
    getFrameExtents() {
        return this._frameExtents;
    }
    dispose() {
        this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
    }
    copy(e) {
        return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = {};
        return this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
    }
}, Oa = class extends mo {
    constructor(){
        super(new ut(50, 1, .5, 500));
        this.focus = 1;
    }
    updateMatrices(e) {
        let t = this.camera, n = dr * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, r = e.distance || t.far;
        (n !== t.fov || i !== t.aspect || r !== t.far) && (t.fov = n, t.aspect = i, t.far = r, t.updateProjectionMatrix()), super.updateMatrices(e);
    }
    copy(e) {
        return super.copy(e), this.focus = e.focus, this;
    }
};
Oa.prototype.isSpotLightShadow = !0;
var Ha = class extends Bt {
    constructor(e, t, n = 0, i = Math.PI / 3, r = 0, o = 1){
        super(e, t);
        this.type = "SpotLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.distance = n, this.angle = i, this.penumbra = r, this.decay = o, this.shadow = new Oa;
    }
    get power() {
        return this.intensity * Math.PI;
    }
    set power(e) {
        this.intensity = e / Math.PI;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Ha.prototype.isSpotLight = !0;
var wc = new pe, nr = new M, jo = new M, ka = class extends mo {
    constructor(){
        super(new ut(90, 1, .5, 500));
        this._frameExtents = new X(4, 2), this._viewportCount = 6, this._viewports = [
            new Ve(2, 1, 1, 1),
            new Ve(0, 1, 1, 1),
            new Ve(3, 1, 1, 1),
            new Ve(1, 1, 1, 1),
            new Ve(3, 0, 1, 1),
            new Ve(1, 0, 1, 1)
        ], this._cubeDirections = [
            new M(1, 0, 0),
            new M(-1, 0, 0),
            new M(0, 0, 1),
            new M(0, 0, -1),
            new M(0, 1, 0),
            new M(0, -1, 0)
        ], this._cubeUps = [
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 0, 1),
            new M(0, 0, -1)
        ];
    }
    updateMatrices(e, t = 0) {
        let n = this.camera, i = this.matrix, r = e.distance || n.far;
        r !== n.far && (n.far = r, n.updateProjectionMatrix()), nr.setFromMatrixPosition(e.matrixWorld), n.position.copy(nr), jo.copy(n.position), jo.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(jo), n.updateMatrixWorld(), i.makeTranslation(-nr.x, -nr.y, -nr.z), wc.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(wc);
    }
};
ka.prototype.isPointLightShadow = !0;
var Ga = class extends Bt {
    constructor(e, t, n = 0, i = 1){
        super(e, t);
        this.type = "PointLight", this.distance = n, this.decay = i, this.shadow = new ka;
    }
    get power() {
        return this.intensity * 4 * Math.PI;
    }
    set power(e) {
        this.intensity = e / (4 * Math.PI);
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
    }
};
Ga.prototype.isPointLight = !0;
var Va = class extends mo {
    constructor(){
        super(new Fr(-5, 5, 5, -5, .5, 500));
    }
};
Va.prototype.isDirectionalLightShadow = !0;
var Wa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "DirectionalLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.shadow = new Va;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Wa.prototype.isDirectionalLight = !0;
var qa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "AmbientLight";
    }
};
qa.prototype.isAmbientLight = !0;
var Xa = class extends Bt {
    constructor(e, t, n = 10, i = 10){
        super(e, t);
        this.type = "RectAreaLight", this.width = n, this.height = i;
    }
    get power() {
        return this.intensity * this.width * this.height * Math.PI;
    }
    set power(e) {
        this.intensity = e / (this.width * this.height * Math.PI);
    }
    copy(e) {
        return super.copy(e), this.width = e.width, this.height = e.height, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.width = this.width, t.object.height = this.height, t;
    }
};
Xa.prototype.isRectAreaLight = !0;
var Ja = class {
    constructor(){
        this.coefficients = [];
        for(let e = 0; e < 9; e++)this.coefficients.push(new M);
    }
    set(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].copy(e[t]);
        return this;
    }
    zero() {
        for(let e = 0; e < 9; e++)this.coefficients[e].set(0, 0, 0);
        return this;
    }
    getAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.282095), t.addScaledVector(o[1], .488603 * i), t.addScaledVector(o[2], .488603 * r), t.addScaledVector(o[3], .488603 * n), t.addScaledVector(o[4], 1.092548 * (n * i)), t.addScaledVector(o[5], 1.092548 * (i * r)), t.addScaledVector(o[6], .315392 * (3 * r * r - 1)), t.addScaledVector(o[7], 1.092548 * (n * r)), t.addScaledVector(o[8], .546274 * (n * n - i * i)), t;
    }
    getIrradianceAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.886227), t.addScaledVector(o[1], 2 * .511664 * i), t.addScaledVector(o[2], 2 * .511664 * r), t.addScaledVector(o[3], 2 * .511664 * n), t.addScaledVector(o[4], 2 * .429043 * n * i), t.addScaledVector(o[5], 2 * .429043 * i * r), t.addScaledVector(o[6], .743125 * r * r - .247708), t.addScaledVector(o[7], 2 * .429043 * n * r), t.addScaledVector(o[8], .429043 * (n * n - i * i)), t;
    }
    add(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].add(e.coefficients[t]);
        return this;
    }
    addScaledSH(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].addScaledVector(e.coefficients[n], t);
        return this;
    }
    scale(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].multiplyScalar(e);
        return this;
    }
    lerp(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].lerp(e.coefficients[n], t);
        return this;
    }
    equals(e) {
        for(let t = 0; t < 9; t++)if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
        return !0;
    }
    copy(e) {
        return this.set(e.coefficients);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    fromArray(e, t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].fromArray(e, t + i * 3);
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].toArray(e, t + i * 3);
        return e;
    }
    static getBasisAt(e, t) {
        let n = e.x, i = e.y, r = e.z;
        t[0] = .282095, t[1] = .488603 * i, t[2] = .488603 * r, t[3] = .488603 * n, t[4] = 1.092548 * n * i, t[5] = 1.092548 * i * r, t[6] = .315392 * (3 * r * r - 1), t[7] = 1.092548 * n * r, t[8] = .546274 * (n * n - i * i);
    }
};
Ja.prototype.isSphericalHarmonics3 = !0;
var Hr = class extends Bt {
    constructor(e = new Ja, t = 1){
        super(void 0, t);
        this.sh = e;
    }
    copy(e) {
        return super.copy(e), this.sh.copy(e.sh), this;
    }
    fromJSON(e) {
        return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.sh = this.sh.toArray(), t;
    }
};
Hr.prototype.isLightProbe = !0;
var zh = class extends bt {
    constructor(e){
        super(e);
        this.textures = {};
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = this.textures;
        function n(r) {
            return t[r] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", r), t[r];
        }
        let i = new sy[e.type];
        if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new ae().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.format !== void 0 && (i.format = e.format), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== 1 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0) for(let r in e.uniforms){
            let o = e.uniforms[r];
            switch(i.uniforms[r] = {}, o.type){
                case "t":
                    i.uniforms[r].value = n(o.value);
                    break;
                case "c":
                    i.uniforms[r].value = new ae().setHex(o.value);
                    break;
                case "v2":
                    i.uniforms[r].value = new X().fromArray(o.value);
                    break;
                case "v3":
                    i.uniforms[r].value = new M().fromArray(o.value);
                    break;
                case "v4":
                    i.uniforms[r].value = new Ve().fromArray(o.value);
                    break;
                case "m3":
                    i.uniforms[r].value = new lt().fromArray(o.value);
                    break;
                case "m4":
                    i.uniforms[r].value = new pe().fromArray(o.value);
                    break;
                default:
                    i.uniforms[r].value = o.value;
            }
        }
        if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.extensions !== void 0) for(let r in e.extensions)i.extensions[r] = e.extensions[r];
        if (e.shading !== void 0 && (i.flatShading = e.shading === 1), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = n(e.map)), e.matcap !== void 0 && (i.matcap = n(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = n(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = n(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = n(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
            let r = e.normalScale;
            Array.isArray(r) === !1 && (r = [
                r,
                r
            ]), i.normalScale = new X().fromArray(r);
        }
        return e.displacementMap !== void 0 && (i.displacementMap = n(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = n(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = n(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = n(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = n(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = n(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = n(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = n(e.envMap)), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = n(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = n(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = n(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = n(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = n(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new X().fromArray(e.clearcoatNormalScale)), e.transmissionMap !== void 0 && (i.transmissionMap = n(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = n(e.thicknessMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = n(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = n(e.sheenRoughnessMap)), i;
    }
    setTextures(e) {
        return this.textures = e, this;
    }
}, Gs = class {
    static decodeText(e) {
        if (typeof TextDecoder < "u") return new TextDecoder().decode(e);
        let t = "";
        for(let n = 0, i = e.length; n < i; n++)t += String.fromCharCode(e[n]);
        try {
            return decodeURIComponent(escape(t));
        } catch  {
            return t;
        }
    }
    static extractUrlBase(e) {
        let t = e.lastIndexOf("/");
        return t === -1 ? "./" : e.substr(0, t + 1);
    }
    static resolveURL(e, t) {
        return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(t) && /^\//.test(e) && (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : t + e);
    }
}, Ya = class extends _e {
    constructor(){
        super();
        this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
    }
    copy(e) {
        return super.copy(e), this.instanceCount = e.instanceCount, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = super.toJSON(this);
        return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
    }
};
Ya.prototype.isInstancedBufferGeometry = !0;
var Uh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = {}, n = {};
        function i(f, m) {
            if (t[m] !== void 0) return t[m];
            let v = f.interleavedBuffers[m], g = r(f, v.buffer), p = wi(v.type, g), _ = new $n(p, v.stride);
            return _.uuid = v.uuid, t[m] = _, _;
        }
        function r(f, m) {
            if (n[m] !== void 0) return n[m];
            let v = f.arrayBuffers[m], g = new Uint32Array(v).buffer;
            return n[m] = g, g;
        }
        let o = e.isInstancedBufferGeometry ? new Ya : new _e, a = e.data.index;
        if (a !== void 0) {
            let f = wi(a.type, a.array);
            o.setIndex(new Ue(f, 1));
        }
        let l = e.data.attributes;
        for(let f in l){
            let m = l[f], x;
            if (m.isInterleavedBufferAttribute) {
                let v = i(e.data, m.data);
                x = new Sn(v, m.itemSize, m.offset, m.normalized);
            } else {
                let v = wi(m.type, m.array), g = m.isInstancedBufferAttribute ? Xn : Ue;
                x = new g(v, m.itemSize, m.normalized);
            }
            m.name !== void 0 && (x.name = m.name), m.usage !== void 0 && x.setUsage(m.usage), m.updateRange !== void 0 && (x.updateRange.offset = m.updateRange.offset, x.updateRange.count = m.updateRange.count), o.setAttribute(f, x);
        }
        let c = e.data.morphAttributes;
        if (c) for(let f in c){
            let m = c[f], x = [];
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v], _;
                if (p.isInterleavedBufferAttribute) {
                    let y = i(e.data, p.data);
                    _ = new Sn(y, p.itemSize, p.offset, p.normalized);
                } else {
                    let y = wi(p.type, p.array);
                    _ = new Ue(y, p.itemSize, p.normalized);
                }
                p.name !== void 0 && (_.name = p.name), x.push(_);
            }
            o.morphAttributes[f] = x;
        }
        e.data.morphTargetsRelative && (o.morphTargetsRelative = !0);
        let u = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (u !== void 0) for(let f = 0, m = u.length; f !== m; ++f){
            let x = u[f];
            o.addGroup(x.start, x.count, x.materialIndex);
        }
        let d = e.data.boundingSphere;
        if (d !== void 0) {
            let f = new M;
            d.center !== void 0 && f.fromArray(d.center), o.boundingSphere = new An(f, d.radius);
        }
        return e.name && (o.name = e.name), e.userData && (o.userData = e.userData), o;
    }
}, uy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || o;
        let a = new Yt(this.manager);
        a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(l) {
            let c = null;
            try {
                c = JSON.parse(l);
            } catch (u) {
                i !== void 0 && i(u), console.error("THREE:ObjectLoader: Can't parse " + e + ".", u.message);
                return;
            }
            let h = c.metadata;
            if (h === void 0 || h.type === void 0 || h.type.toLowerCase() === "geometry") {
                console.error("THREE.ObjectLoader: Can't load " + e);
                return;
            }
            r.parse(c, t);
        }, n, i);
    }
    async loadAsync(e, t) {
        let n = this, i = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || i;
        let r = new Yt(this.manager);
        r.setPath(this.path), r.setRequestHeader(this.requestHeader), r.setWithCredentials(this.withCredentials);
        let o = await r.loadAsync(e, t), a = JSON.parse(o), l = a.metadata;
        if (l === void 0 || l.type === void 0 || l.type.toLowerCase() === "geometry") throw new Error("THREE.ObjectLoader: Can't load " + e);
        return await n.parseAsync(a);
    }
    parse(e, t) {
        let n = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), r = this.parseGeometries(e.geometries, i), o = this.parseImages(e.images, function() {
            t !== void 0 && t(c);
        }), a = this.parseTextures(e.textures, o), l = this.parseMaterials(e.materials, a), c = this.parseObject(e.object, r, l, a, n), h = this.parseSkeletons(e.skeletons, c);
        if (this.bindSkeletons(c, h), t !== void 0) {
            let u = !1;
            for(let d in o)if (o[d] instanceof HTMLImageElement) {
                u = !0;
                break;
            }
            u === !1 && t(c);
        }
        return c;
    }
    async parseAsync(e) {
        let t = this.parseAnimations(e.animations), n = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, n), r = await this.parseImagesAsync(e.images), o = this.parseTextures(e.textures, r), a = this.parseMaterials(e.materials, o), l = this.parseObject(e.object, i, a, o, t), c = this.parseSkeletons(e.skeletons, l);
        return this.bindSkeletons(l, c), l;
    }
    parseShapes(e) {
        let t = {};
        if (e !== void 0) for(let n = 0, i = e.length; n < i; n++){
            let r = new Xt().fromJSON(e[n]);
            t[r.uuid] = r;
        }
        return t;
    }
    parseSkeletons(e, t) {
        let n = {}, i = {};
        if (t.traverse(function(r) {
            r.isBone && (i[r.uuid] = r);
        }), e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = new ao().fromJSON(e[r], i);
            n[a.uuid] = a;
        }
        return n;
    }
    parseGeometries(e, t) {
        let n = {};
        if (e !== void 0) {
            let i = new Uh;
            for(let r = 0, o = e.length; r < o; r++){
                let a, l = e[r];
                switch(l.type){
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        a = i.parse(l);
                        break;
                    case "Geometry":
                        console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");
                        break;
                    default:
                        l.type in vc ? a = vc[l.type].fromJSON(l, t) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`);
                }
                a.uuid = l.uuid, l.name !== void 0 && (a.name = l.name), a.isBufferGeometry === !0 && l.userData !== void 0 && (a.userData = l.userData), n[l.uuid] = a;
            }
        }
        return n;
    }
    parseMaterials(e, t) {
        let n = {}, i = {};
        if (e !== void 0) {
            let r = new zh;
            r.setTextures(t);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o];
                if (l.type === "MultiMaterial") {
                    let c = [];
                    for(let h = 0; h < l.materials.length; h++){
                        let u = l.materials[h];
                        n[u.uuid] === void 0 && (n[u.uuid] = r.parse(u)), c.push(n[u.uuid]);
                    }
                    i[l.uuid] = c;
                } else n[l.uuid] === void 0 && (n[l.uuid] = r.parse(l)), i[l.uuid] = n[l.uuid];
            }
        }
        return i;
    }
    parseAnimations(e) {
        let t = {};
        if (e !== void 0) for(let n = 0; n < e.length; n++){
            let i = e[n], r = Lr.parse(i);
            t[r.uuid] = r;
        }
        return t;
    }
    parseImages(e, t) {
        let n = this, i = {}, r;
        function o(l) {
            return n.manager.itemStart(l), r.load(l, function() {
                n.manager.itemEnd(l);
            }, void 0, function() {
                n.manager.itemError(l), n.manager.itemEnd(l);
            });
        }
        function a(l) {
            if (typeof l == "string") {
                let c = l, h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c) ? c : n.resourcePath + c;
                return o(h);
            } else return l.data ? {
                data: wi(l.type, l.data),
                width: l.width,
                height: l.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            let l = new za(t);
            r = new Rr(l), r.setCrossOrigin(this.crossOrigin);
            for(let c = 0, h = e.length; c < h; c++){
                let u = e[c], d = u.url;
                if (Array.isArray(d)) {
                    i[u.uuid] = [];
                    for(let f = 0, m = d.length; f < m; f++){
                        let x = d[f], v = a(x);
                        v !== null && (v instanceof HTMLImageElement ? i[u.uuid].push(v) : i[u.uuid].push(new qn(v.data, v.width, v.height)));
                    }
                } else {
                    let f = a(u.url);
                    f !== null && (i[u.uuid] = f);
                }
            }
        }
        return i;
    }
    async parseImagesAsync(e) {
        let t = this, n = {}, i;
        async function r(o) {
            if (typeof o == "string") {
                let a = o, l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a) ? a : t.resourcePath + a;
                return await i.loadAsync(l);
            } else return o.data ? {
                data: wi(o.type, o.data),
                width: o.width,
                height: o.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            i = new Rr(this.manager), i.setCrossOrigin(this.crossOrigin);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o], c = l.url;
                if (Array.isArray(c)) {
                    n[l.uuid] = [];
                    for(let h = 0, u = c.length; h < u; h++){
                        let d = c[h], f = await r(d);
                        f !== null && (f instanceof HTMLImageElement ? n[l.uuid].push(f) : n[l.uuid].push(new qn(f.data, f.width, f.height)));
                    }
                } else {
                    let h = await r(l.url);
                    h !== null && (n[l.uuid] = h);
                }
            }
        }
        return n;
    }
    parseTextures(e, t) {
        function n(r, o) {
            return typeof r == "number" ? r : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", r), o[r]);
        }
        let i = {};
        if (e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = e[r];
            a.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), t[a.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", a.image);
            let l, c = t[a.image];
            Array.isArray(c) ? (l = new ki(c), c.length === 6 && (l.needsUpdate = !0)) : (c && c.data ? l = new qn(c.data, c.width, c.height) : l = new ot(c), c && (l.needsUpdate = !0)), l.uuid = a.uuid, a.name !== void 0 && (l.name = a.name), a.mapping !== void 0 && (l.mapping = n(a.mapping, dy)), a.offset !== void 0 && l.offset.fromArray(a.offset), a.repeat !== void 0 && l.repeat.fromArray(a.repeat), a.center !== void 0 && l.center.fromArray(a.center), a.rotation !== void 0 && (l.rotation = a.rotation), a.wrap !== void 0 && (l.wrapS = n(a.wrap[0], Sc), l.wrapT = n(a.wrap[1], Sc)), a.format !== void 0 && (l.format = a.format), a.type !== void 0 && (l.type = a.type), a.encoding !== void 0 && (l.encoding = a.encoding), a.minFilter !== void 0 && (l.minFilter = n(a.minFilter, Tc)), a.magFilter !== void 0 && (l.magFilter = n(a.magFilter, Tc)), a.anisotropy !== void 0 && (l.anisotropy = a.anisotropy), a.flipY !== void 0 && (l.flipY = a.flipY), a.premultiplyAlpha !== void 0 && (l.premultiplyAlpha = a.premultiplyAlpha), a.unpackAlignment !== void 0 && (l.unpackAlignment = a.unpackAlignment), a.userData !== void 0 && (l.userData = a.userData), i[a.uuid] = l;
        }
        return i;
    }
    parseObject(e, t, n, i, r) {
        let o;
        function a(d) {
            return t[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", d), t[d];
        }
        function l(d) {
            if (d !== void 0) {
                if (Array.isArray(d)) {
                    let f = [];
                    for(let m = 0, x = d.length; m < x; m++){
                        let v = d[m];
                        n[v] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", v), f.push(n[v]);
                    }
                    return f;
                }
                return n[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", d), n[d];
            }
        }
        function c(d) {
            return i[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", d), i[d];
        }
        let h, u;
        switch(e.type){
            case "Scene":
                o = new no, e.background !== void 0 && (Number.isInteger(e.background) ? o.background = new ae(e.background) : o.background = c(e.background)), e.environment !== void 0 && (o.environment = c(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? o.fog = new Br(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (o.fog = new Nr(e.fog.color, e.fog.density)));
                break;
            case "PerspectiveCamera":
                o = new ut(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (o.focus = e.focus), e.zoom !== void 0 && (o.zoom = e.zoom), e.filmGauge !== void 0 && (o.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (o.filmOffset = e.filmOffset), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "OrthographicCamera":
                o = new Fr(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (o.zoom = e.zoom), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "AmbientLight":
                o = new qa(e.color, e.intensity);
                break;
            case "DirectionalLight":
                o = new Wa(e.color, e.intensity);
                break;
            case "PointLight":
                o = new Ga(e.color, e.intensity, e.distance, e.decay);
                break;
            case "RectAreaLight":
                o = new Xa(e.color, e.intensity, e.width, e.height);
                break;
            case "SpotLight":
                o = new Ha(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                break;
            case "HemisphereLight":
                o = new Ua(e.color, e.groundColor, e.intensity);
                break;
            case "LightProbe":
                o = new Hr().fromJSON(e);
                break;
            case "SkinnedMesh":
                h = a(e.geometry), u = l(e.material), o = new so(h, u), e.bindMode !== void 0 && (o.bindMode = e.bindMode), e.bindMatrix !== void 0 && o.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (o.skeleton = e.skeleton);
                break;
            case "Mesh":
                h = a(e.geometry), u = l(e.material), o = new st(h, u);
                break;
            case "InstancedMesh":
                h = a(e.geometry), u = l(e.material);
                let d = e.count, f = e.instanceMatrix, m = e.instanceColor;
                o = new xa(h, u, d), o.instanceMatrix = new Xn(new Float32Array(f.array), 16), m !== void 0 && (o.instanceColor = new Xn(new Float32Array(m.array), m.itemSize));
                break;
            case "LOD":
                o = new bh;
                break;
            case "Line":
                o = new on(a(e.geometry), l(e.material));
                break;
            case "LineLoop":
                o = new ya(a(e.geometry), l(e.material));
                break;
            case "LineSegments":
                o = new wt(a(e.geometry), l(e.material));
                break;
            case "PointCloud":
            case "Points":
                o = new zr(a(e.geometry), l(e.material));
                break;
            case "Sprite":
                o = new ro(l(e.material));
                break;
            case "Group":
                o = new Hn;
                break;
            case "Bone":
                o = new oo;
                break;
            default:
                o = new Ne;
        }
        if (o.uuid = e.uuid, e.name !== void 0 && (o.name = e.name), e.matrix !== void 0 ? (o.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (o.matrixAutoUpdate = e.matrixAutoUpdate), o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (e.position !== void 0 && o.position.fromArray(e.position), e.rotation !== void 0 && o.rotation.fromArray(e.rotation), e.quaternion !== void 0 && o.quaternion.fromArray(e.quaternion), e.scale !== void 0 && o.scale.fromArray(e.scale)), e.castShadow !== void 0 && (o.castShadow = e.castShadow), e.receiveShadow !== void 0 && (o.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.bias !== void 0 && (o.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (o.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (o.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && o.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (o.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (o.visible = e.visible), e.frustumCulled !== void 0 && (o.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (o.renderOrder = e.renderOrder), e.userData !== void 0 && (o.userData = e.userData), e.layers !== void 0 && (o.layers.mask = e.layers), e.children !== void 0) {
            let d = e.children;
            for(let f = 0; f < d.length; f++)o.add(this.parseObject(d[f], t, n, i, r));
        }
        if (e.animations !== void 0) {
            let d = e.animations;
            for(let f = 0; f < d.length; f++){
                let m = d[f];
                o.animations.push(r[m]);
            }
        }
        if (e.type === "LOD") {
            e.autoUpdate !== void 0 && (o.autoUpdate = e.autoUpdate);
            let d = e.levels;
            for(let f = 0; f < d.length; f++){
                let m = d[f], x = o.getObjectByProperty("uuid", m.object);
                x !== void 0 && o.addLevel(x, m.distance);
            }
        }
        return o;
    }
    bindSkeletons(e, t) {
        Object.keys(t).length !== 0 && e.traverse(function(n) {
            if (n.isSkinnedMesh === !0 && n.skeleton !== void 0) {
                let i = t[n.skeleton];
                i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", n.skeleton) : n.bind(i, n.bindMatrix);
            }
        });
    }
    setTexturePath(e) {
        return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e);
    }
}, dy = {
    UVMapping: ha,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws
}, Sc = {
    RepeatWrapping: Ns,
    ClampToEdgeWrapping: vt,
    MirroredRepeatWrapping: Bs
}, Tc = {
    NearestFilter: rt,
    NearestMipmapNearestFilter: ta,
    NearestMipmapLinearFilter: na,
    LinearFilter: tt,
    LinearMipmapNearestFilter: Wc,
    LinearMipmapLinearFilter: Ui
}, Oh = class extends bt {
    constructor(e){
        super(e);
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = {
            premultiplyAlpha: "none"
        };
    }
    setOptions(e) {
        return this.options = e, this;
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = {};
        a.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", a.headers = this.requestHeader, fetch(e, a).then(function(l) {
            return l.blob();
        }).then(function(l) {
            return createImageBitmap(l, Object.assign(r.options, {
                colorSpaceConversion: "none"
            }));
        }).then(function(l) {
            Ni.add(e, l), t && t(l), r.manager.itemEnd(e);
        }).catch(function(l) {
            i && i(l), r.manager.itemError(e), r.manager.itemEnd(e);
        }), r.manager.itemStart(e);
    }
};
Oh.prototype.isImageBitmapLoader = !0;
var Ss, Hh = {
    getContext: function() {
        return Ss === void 0 && (Ss = new (window.AudioContext || window.webkitAudioContext)), Ss;
    },
    setContext: function(s) {
        Ss = s;
    }
}, kh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setResponseType("arraybuffer"), o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                let l = a.slice(0);
                Hh.getContext().decodeAudioData(l, function(h) {
                    t(h);
                });
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
}, Gh = class extends Hr {
    constructor(e, t, n = 1){
        super(void 0, n);
        let i = new ae().set(e), r = new ae().set(t), o = new M(i.r, i.g, i.b), a = new M(r.r, r.g, r.b), l = Math.sqrt(Math.PI), c = l * Math.sqrt(.75);
        this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l), this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c);
    }
};
Gh.prototype.isHemisphereLightProbe = !0;
var Vh = class extends Hr {
    constructor(e, t = 1){
        super(void 0, t);
        let n = new ae().set(e);
        this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI));
    }
};
Vh.prototype.isAmbientLightProbe = !0;
var Ec = new pe, Ac = new pe, Fn = new pe, fy = class {
    constructor(){
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new ut, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new ut, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
            focus: null,
            fov: null,
            aspect: null,
            near: null,
            far: null,
            zoom: null,
            eyeSep: null
        };
    }
    update(e) {
        let t = this._cache;
        if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
            t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep, Fn.copy(e.projectionMatrix);
            let i = t.eyeSep / 2, r = i * t.near / t.focus, o = t.near * Math.tan(Wn * t.fov * .5) / t.zoom, a, l;
            Ac.elements[12] = -i, Ec.elements[12] = i, a = -o * t.aspect + r, l = o * t.aspect + r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraL.projectionMatrix.copy(Fn), a = -o * t.aspect - r, l = o * t.aspect - r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraR.projectionMatrix.copy(Fn);
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Ac), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ec);
    }
}, Wh = class {
    constructor(e = !0){
        this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
    }
    start() {
        this.startTime = Cc(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
    }
    stop() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
    }
    getElapsedTime() {
        return this.getDelta(), this.elapsedTime;
    }
    getDelta() {
        let e = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running) {
            let t = Cc();
            e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
        }
        return e;
    }
};
function Cc() {
    return (typeof performance > "u" ? Date : performance).now();
}
var Nn = new M, Lc = new gt, py = new M, Bn = new M, my = class extends Ne {
    constructor(){
        super();
        this.type = "AudioListener", this.context = Hh.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new Wh;
    }
    getInput() {
        return this.gain;
    }
    removeFilter() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
    }
    getFilter() {
        return this.filter;
    }
    setFilter(e) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
    }
    getMasterVolume() {
        return this.gain.gain.value;
    }
    setMasterVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e);
        let t = this.context.listener, n = this.up;
        if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Nn, Lc, py), Bn.set(0, 0, -1).applyQuaternion(Lc), t.positionX) {
            let i = this.context.currentTime + this.timeDelta;
            t.positionX.linearRampToValueAtTime(Nn.x, i), t.positionY.linearRampToValueAtTime(Nn.y, i), t.positionZ.linearRampToValueAtTime(Nn.z, i), t.forwardX.linearRampToValueAtTime(Bn.x, i), t.forwardY.linearRampToValueAtTime(Bn.y, i), t.forwardZ.linearRampToValueAtTime(Bn.z, i), t.upX.linearRampToValueAtTime(n.x, i), t.upY.linearRampToValueAtTime(n.y, i), t.upZ.linearRampToValueAtTime(n.z, i);
        } else t.setPosition(Nn.x, Nn.y, Nn.z), t.setOrientation(Bn.x, Bn.y, Bn.z, n.x, n.y, n.z);
    }
}, Za = class extends Ne {
    constructor(e){
        super();
        this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
    }
    getOutput() {
        return this.gain;
    }
    setNodeSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
    }
    setMediaElementSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
    }
    setMediaStreamSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
    }
    setBuffer(e) {
        return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
    }
    play(e = 0) {
        if (this.isPlaying === !0) {
            console.warn("THREE.Audio: Audio is already playing.");
            return;
        }
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this._startedAt = this.context.currentTime + e;
        let t = this.context.createBufferSource();
        return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
    }
    pause() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
    }
    stop() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
    }
    connect() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
        } else this.source.connect(this.getOutput());
        return this._connected = !0, this;
    }
    disconnect() {
        if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else this.source.disconnect(this.getOutput());
        return this._connected = !1, this;
    }
    getFilters() {
        return this.filters;
    }
    setFilters(e) {
        return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
    }
    setDetune(e) {
        if (this.detune = e, this.source.detune !== void 0) return this.isPlaying === !0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;
    }
    getDetune() {
        return this.detune;
    }
    getFilter() {
        return this.getFilters()[0];
    }
    setFilter(e) {
        return this.setFilters(e ? [
            e
        ] : []);
    }
    setPlaybackRate(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
    }
    getPlaybackRate() {
        return this.playbackRate;
    }
    onEnded() {
        this.isPlaying = !1;
    }
    getLoop() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
    }
    setLoop(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
    }
    setLoopStart(e) {
        return this.loopStart = e, this;
    }
    setLoopEnd(e) {
        return this.loopEnd = e, this;
    }
    getVolume() {
        return this.gain.gain.value;
    }
    setVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
}, zn = new M, Rc = new gt, gy = new M, Un = new M, xy = class extends Za {
    constructor(e){
        super(e);
        this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
    }
    getOutput() {
        return this.panner;
    }
    getRefDistance() {
        return this.panner.refDistance;
    }
    setRefDistance(e) {
        return this.panner.refDistance = e, this;
    }
    getRolloffFactor() {
        return this.panner.rolloffFactor;
    }
    setRolloffFactor(e) {
        return this.panner.rolloffFactor = e, this;
    }
    getDistanceModel() {
        return this.panner.distanceModel;
    }
    setDistanceModel(e) {
        return this.panner.distanceModel = e, this;
    }
    getMaxDistance() {
        return this.panner.maxDistance;
    }
    setMaxDistance(e) {
        return this.panner.maxDistance = e, this;
    }
    setDirectionalCone(e, t, n) {
        return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this;
    }
    updateMatrixWorld(e) {
        if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1) return;
        this.matrixWorld.decompose(zn, Rc, gy), Un.set(0, 0, 1).applyQuaternion(Rc);
        let t = this.panner;
        if (t.positionX) {
            let n = this.context.currentTime + this.listener.timeDelta;
            t.positionX.linearRampToValueAtTime(zn.x, n), t.positionY.linearRampToValueAtTime(zn.y, n), t.positionZ.linearRampToValueAtTime(zn.z, n), t.orientationX.linearRampToValueAtTime(Un.x, n), t.orientationY.linearRampToValueAtTime(Un.y, n), t.orientationZ.linearRampToValueAtTime(Un.z, n);
        } else t.setPosition(zn.x, zn.y, zn.z), t.setOrientation(Un.x, Un.y, Un.z);
    }
}, qh = class {
    constructor(e, t = 2048){
        this.analyser = e.context.createAnalyser(), this.analyser.fftSize = t, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
    }
    getFrequencyData() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
    }
    getAverageFrequency() {
        let e = 0, t = this.getFrequencyData();
        for(let n = 0; n < t.length; n++)e += t[n];
        return e / t.length;
    }
}, Xh = class {
    constructor(e, t, n){
        this.binding = e, this.valueSize = n;
        let i, r, o;
        switch(t){
            case "quaternion":
                i = this._slerp, r = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(n * 6), this._workIndex = 5;
                break;
            case "string":
            case "bool":
                i = this._select, r = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(n * 5);
                break;
            default:
                i = this._lerp, r = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(n * 5);
        }
        this._mixBufferRegion = i, this._mixBufferRegionAdditive = r, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
    }
    accumulate(e, t) {
        let n = this.buffer, i = this.valueSize, r = e * i + i, o = this.cumulativeWeight;
        if (o === 0) {
            for(let a = 0; a !== i; ++a)n[r + a] = n[a];
            o = t;
        } else {
            o += t;
            let a = t / o;
            this._mixBufferRegion(n, r, 0, a, i);
        }
        this.cumulativeWeight = o;
    }
    accumulateAdditive(e) {
        let t = this.buffer, n = this.valueSize, i = n * this._addIndex;
        this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(t, i, 0, e, n), this.cumulativeWeightAdditive += e;
    }
    apply(e) {
        let t = this.valueSize, n = this.buffer, i = e * t + t, r = this.cumulativeWeight, o = this.cumulativeWeightAdditive, a = this.binding;
        if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, r < 1) {
            let l = t * this._origIndex;
            this._mixBufferRegion(n, i, l, 1 - r, t);
        }
        o > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
        for(let l = t, c = t + t; l !== c; ++l)if (n[l] !== n[l + t]) {
            a.setValue(n, i);
            break;
        }
    }
    saveOriginalState() {
        let e = this.binding, t = this.buffer, n = this.valueSize, i = n * this._origIndex;
        e.getValue(t, i);
        for(let r = n, o = i; r !== o; ++r)t[r] = t[i + r % n];
        this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
    }
    restoreOriginalState() {
        let e = this.valueSize * 3;
        this.binding.setValue(this.buffer, e);
    }
    _setAdditiveIdentityNumeric() {
        let e = this._addIndex * this.valueSize, t = e + this.valueSize;
        for(let n = e; n < t; n++)this.buffer[n] = 0;
    }
    _setAdditiveIdentityQuaternion() {
        this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
    }
    _setAdditiveIdentityOther() {
        let e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize;
        for(let n = 0; n < this.valueSize; n++)this.buffer[t + n] = this.buffer[e + n];
    }
    _select(e, t, n, i, r) {
        if (i >= .5) for(let o = 0; o !== r; ++o)e[t + o] = e[n + o];
    }
    _slerp(e, t, n, i) {
        gt.slerpFlat(e, t, e, t, e, n, i);
    }
    _slerpAdditive(e, t, n, i, r) {
        let o = this._workIndex * r;
        gt.multiplyQuaternionsFlat(e, o, e, t, e, n), gt.slerpFlat(e, t, e, t, e, o, i);
    }
    _lerp(e, t, n, i, r) {
        let o = 1 - i;
        for(let a = 0; a !== r; ++a){
            let l = t + a;
            e[l] = e[l] * o + e[n + a] * i;
        }
    }
    _lerpAdditive(e, t, n, i, r) {
        for(let o = 0; o !== r; ++o){
            let a = t + o;
            e[a] = e[a] + e[n + o] * i;
        }
    }
}, $a = "\\[\\]\\.:\\/", yy = new RegExp("[" + $a + "]", "g"), ja = "[^" + $a + "]", vy = "[^" + $a.replace("\\.", "") + "]", _y = /((?:WC+[\/:])*)/.source.replace("WC", ja), My = /(WCOD+)?/.source.replace("WCOD", vy), by = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", ja), wy = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", ja), Sy = new RegExp("^" + _y + My + by + wy + "$"), Ty = [
    "material",
    "materials",
    "bones"
], Jh = class {
    constructor(e, t, n){
        let i = n || ke.parseTrackName(t);
        this._targetGroup = e, this._bindings = e.subscribe_(t, i);
    }
    getValue(e, t) {
        this.bind();
        let n = this._targetGroup.nCachedObjects_, i = this._bindings[n];
        i !== void 0 && i.getValue(e, t);
    }
    setValue(e, t) {
        let n = this._bindings;
        for(let i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)n[i].setValue(e, t);
    }
    bind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].bind();
    }
    unbind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].unbind();
    }
}, ke = class {
    constructor(e, t, n){
        this.path = t, this.parsedPath = n || ke.parseTrackName(t), this.node = ke.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
    static create(e, t, n) {
        return e && e.isAnimationObjectGroup ? new ke.Composite(e, t, n) : new ke(e, t, n);
    }
    static sanitizeNodeName(e) {
        return e.replace(/\s/g, "_").replace(yy, "");
    }
    static parseTrackName(e) {
        let t = Sy.exec(e);
        if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
        let n = {
            nodeName: t[2],
            objectName: t[3],
            objectIndex: t[4],
            propertyName: t[5],
            propertyIndex: t[6]
        }, i = n.nodeName && n.nodeName.lastIndexOf(".");
        if (i !== void 0 && i !== -1) {
            let r = n.nodeName.substring(i + 1);
            Ty.indexOf(r) !== -1 && (n.nodeName = n.nodeName.substring(0, i), n.objectName = r);
        }
        if (n.propertyName === null || n.propertyName.length === 0) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
        return n;
    }
    static findNode(e, t) {
        if (!t || t === "" || t === "." || t === -1 || t === e.name || t === e.uuid) return e;
        if (e.skeleton) {
            let n = e.skeleton.getBoneByName(t);
            if (n !== void 0) return n;
        }
        if (e.children) {
            let n = function(r) {
                for(let o = 0; o < r.length; o++){
                    let a = r[o];
                    if (a.name === t || a.uuid === t) return a;
                    let l = n(a.children);
                    if (l) return l;
                }
                return null;
            }, i = n(e.children);
            if (i) return i;
        }
        return null;
    }
    _getValue_unavailable() {}
    _setValue_unavailable() {}
    _getValue_direct(e, t) {
        e[t] = this.targetObject[this.propertyName];
    }
    _getValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)e[t++] = n[i];
    }
    _getValue_arrayElement(e, t) {
        e[t] = this.resolvedProperty[this.propertyIndex];
    }
    _getValue_toArray(e, t) {
        this.resolvedProperty.toArray(e, t);
    }
    _setValue_direct(e, t) {
        this.targetObject[this.propertyName] = e[t];
    }
    _setValue_direct_setNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
    }
    _setValue_array_setNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.needsUpdate = !0;
    }
    _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_arrayElement(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t];
    }
    _setValue_arrayElement_setNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_fromArray(e, t) {
        this.resolvedProperty.fromArray(e, t);
    }
    _setValue_fromArray_setNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0;
    }
    _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _getValue_unbound(e, t) {
        this.bind(), this.getValue(e, t);
    }
    _setValue_unbound(e, t) {
        this.bind(), this.setValue(e, t);
    }
    bind() {
        let e = this.node, t = this.parsedPath, n = t.objectName, i = t.propertyName, r = t.propertyIndex;
        if (e || (e = ke.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
            console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
            return;
        }
        if (n) {
            let c = t.objectIndex;
            switch(n){
                case "materials":
                    if (!e.material) {
                        console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        return;
                    }
                    if (!e.material.materials) {
                        console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        return;
                    }
                    e = e.material.materials;
                    break;
                case "bones":
                    if (!e.skeleton) {
                        console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        return;
                    }
                    e = e.skeleton.bones;
                    for(let h = 0; h < e.length; h++)if (e[h].name === c) {
                        c = h;
                        break;
                    }
                    break;
                default:
                    if (e[n] === void 0) {
                        console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        return;
                    }
                    e = e[n];
            }
            if (c !== void 0) {
                if (e[c] === void 0) {
                    console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                    return;
                }
                e = e[c];
            }
        }
        let o = e[i];
        if (o === void 0) {
            let c = t.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + c + "." + i + " but it wasn't found.", e);
            return;
        }
        let a = this.Versioning.None;
        this.targetObject = e, e.needsUpdate !== void 0 ? a = this.Versioning.NeedsUpdate : e.matrixWorldNeedsUpdate !== void 0 && (a = this.Versioning.MatrixWorldNeedsUpdate);
        let l = this.BindingType.Direct;
        if (r !== void 0) {
            if (i === "morphTargetInfluences") {
                if (!e.geometry) {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                    return;
                }
                if (e.geometry.isBufferGeometry) {
                    if (!e.geometry.morphAttributes) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        return;
                    }
                    e.morphTargetDictionary[r] !== void 0 && (r = e.morphTargetDictionary[r]);
                } else {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                    return;
                }
            }
            l = this.BindingType.ArrayElement, this.resolvedProperty = o, this.propertyIndex = r;
        } else o.fromArray !== void 0 && o.toArray !== void 0 ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray, this.resolvedProperty = o) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][a];
    }
    unbind() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
};
ke.Composite = Jh;
ke.prototype.BindingType = {
    Direct: 0,
    EntireArray: 1,
    ArrayElement: 2,
    HasFromToArray: 3
};
ke.prototype.Versioning = {
    None: 0,
    NeedsUpdate: 1,
    MatrixWorldNeedsUpdate: 2
};
ke.prototype.GetterByBindingType = [
    ke.prototype._getValue_direct,
    ke.prototype._getValue_array,
    ke.prototype._getValue_arrayElement,
    ke.prototype._getValue_toArray
];
ke.prototype.SetterByBindingTypeAndVersioning = [
    [
        ke.prototype._setValue_direct,
        ke.prototype._setValue_direct_setNeedsUpdate,
        ke.prototype._setValue_direct_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_array,
        ke.prototype._setValue_array_setNeedsUpdate,
        ke.prototype._setValue_array_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_arrayElement,
        ke.prototype._setValue_arrayElement_setNeedsUpdate,
        ke.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_fromArray,
        ke.prototype._setValue_fromArray_setNeedsUpdate,
        ke.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
    ]
];
var Yh = class {
    constructor(){
        this.uuid = Et(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        let e = {};
        this._indicesByUUID = e;
        for(let n = 0, i = arguments.length; n !== i; ++n)e[arguments[n].uuid] = n;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        let t = this;
        this.stats = {
            objects: {
                get total () {
                    return t._objects.length;
                },
                get inUse () {
                    return this.total - t.nCachedObjects_;
                }
            },
            get bindingsPerObject () {
                return t._bindings.length;
            }
        };
    }
    add() {
        let e = this._objects, t = this._indicesByUUID, n = this._paths, i = this._parsedPaths, r = this._bindings, o = r.length, a, l = e.length, c = this.nCachedObjects_;
        for(let h = 0, u = arguments.length; h !== u; ++h){
            let d = arguments[h], f = d.uuid, m = t[f];
            if (m === void 0) {
                m = l++, t[f] = m, e.push(d);
                for(let x = 0, v = o; x !== v; ++x)r[x].push(new ke(d, n[x], i[x]));
            } else if (m < c) {
                a = e[m];
                let x = --c, v = e[x];
                t[v.uuid] = m, e[m] = v, t[f] = x, e[x] = d;
                for(let g = 0, p = o; g !== p; ++g){
                    let _ = r[g], y = _[x], b = _[m];
                    _[m] = y, b === void 0 && (b = new ke(d, n[g], i[g])), _[x] = b;
                }
            } else e[m] !== a && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = c;
    }
    remove() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_;
        for(let o = 0, a = arguments.length; o !== a; ++o){
            let l = arguments[o], c = l.uuid, h = t[c];
            if (h !== void 0 && h >= r) {
                let u = r++, d = e[u];
                t[d.uuid] = h, e[h] = d, t[c] = u, e[u] = l;
                for(let f = 0, m = i; f !== m; ++f){
                    let x = n[f], v = x[u], g = x[h];
                    x[h] = v, x[u] = g;
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    uncache() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_, o = e.length;
        for(let a = 0, l = arguments.length; a !== l; ++a){
            let c = arguments[a], h = c.uuid, u = t[h];
            if (u !== void 0) if (delete t[h], u < r) {
                let d = --r, f = e[d], m = --o, x = e[m];
                t[f.uuid] = u, e[u] = f, t[x.uuid] = d, e[d] = x, e.pop();
                for(let v = 0, g = i; v !== g; ++v){
                    let p = n[v], _ = p[d], y = p[m];
                    p[u] = _, p[d] = y, p.pop();
                }
            } else {
                let d = --o, f = e[d];
                d > 0 && (t[f.uuid] = u), e[u] = f, e.pop();
                for(let m = 0, x = i; m !== x; ++m){
                    let v = n[m];
                    v[u] = v[d], v.pop();
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    subscribe_(e, t) {
        let n = this._bindingsIndicesByPath, i = n[e], r = this._bindings;
        if (i !== void 0) return r[i];
        let o = this._paths, a = this._parsedPaths, l = this._objects, c = l.length, h = this.nCachedObjects_, u = new Array(c);
        i = r.length, n[e] = i, o.push(e), a.push(t), r.push(u);
        for(let d = h, f = l.length; d !== f; ++d){
            let m = l[d];
            u[d] = new ke(m, e, t);
        }
        return u;
    }
    unsubscribe_(e) {
        let t = this._bindingsIndicesByPath, n = t[e];
        if (n !== void 0) {
            let i = this._paths, r = this._parsedPaths, o = this._bindings, a = o.length - 1, l = o[a], c = e[a];
            t[c] = n, o[n] = l, o.pop(), r[n] = r[a], r.pop(), i[n] = i[a], i.pop();
        }
    }
};
Yh.prototype.isAnimationObjectGroup = !0;
var Zh = class {
    constructor(e, t, n = null, i = t.blendMode){
        this._mixer = e, this._clip = t, this._localRoot = n, this.blendMode = i;
        let r = t.tracks, o = r.length, a = new Array(o), l = {
            endingStart: Mi,
            endingEnd: Mi
        };
        for(let c = 0; c !== o; ++c){
            let h = r[c].createInterpolant(null);
            a[c] = h, h.settings = l;
        }
        this._interpolantSettings = l, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Id, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
    }
    play() {
        return this._mixer._activateAction(this), this;
    }
    stop() {
        return this._mixer._deactivateAction(this), this.reset();
    }
    reset() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
    }
    isRunning() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
    }
    isScheduled() {
        return this._mixer._isActiveAction(this);
    }
    startAt(e) {
        return this._startTime = e, this;
    }
    setLoop(e, t) {
        return this.loop = e, this.repetitions = t, this;
    }
    setEffectiveWeight(e) {
        return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
    }
    getEffectiveWeight() {
        return this._effectiveWeight;
    }
    fadeIn(e) {
        return this._scheduleFading(e, 0, 1);
    }
    fadeOut(e) {
        return this._scheduleFading(e, 1, 0);
    }
    crossFadeFrom(e, t, n) {
        if (e.fadeOut(t), this.fadeIn(t), n) {
            let i = this._clip.duration, r = e._clip.duration, o = r / i, a = i / r;
            e.warp(1, o, t), this.warp(a, 1, t);
        }
        return this;
    }
    crossFadeTo(e, t, n) {
        return e.crossFadeFrom(this, t, n);
    }
    stopFading() {
        let e = this._weightInterpolant;
        return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    setEffectiveTimeScale(e) {
        return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
    }
    getEffectiveTimeScale() {
        return this._effectiveTimeScale;
    }
    setDuration(e) {
        return this.timeScale = this._clip.duration / e, this.stopWarping();
    }
    syncWith(e) {
        return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
    }
    halt(e) {
        return this.warp(this._effectiveTimeScale, 0, e);
    }
    warp(e, t, n) {
        let i = this._mixer, r = i.time, o = this.timeScale, a = this._timeScaleInterpolant;
        a === null && (a = i._lendControlInterpolant(), this._timeScaleInterpolant = a);
        let l = a.parameterPositions, c = a.sampleValues;
        return l[0] = r, l[1] = r + n, c[0] = e / o, c[1] = t / o, this;
    }
    stopWarping() {
        let e = this._timeScaleInterpolant;
        return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    getMixer() {
        return this._mixer;
    }
    getClip() {
        return this._clip;
    }
    getRoot() {
        return this._localRoot || this._mixer._root;
    }
    _update(e, t, n, i) {
        if (!this.enabled) {
            this._updateWeight(e);
            return;
        }
        let r = this._startTime;
        if (r !== null) {
            let l = (e - r) * n;
            if (l < 0 || n === 0) return;
            this._startTime = null, t = n * l;
        }
        t *= this._updateTimeScale(e);
        let o = this._updateTime(t), a = this._updateWeight(e);
        if (a > 0) {
            let l = this._interpolants, c = this._propertyBindings;
            switch(this.blendMode){
                case qc:
                    for(let h = 0, u = l.length; h !== u; ++h)l[h].evaluate(o), c[h].accumulateAdditive(a);
                    break;
                case ua:
                default:
                    for(let h = 0, u = l.length; h !== u; ++h)l[h].evaluate(o), c[h].accumulate(i, a);
            }
        }
    }
    _updateWeight(e) {
        let t = 0;
        if (this.enabled) {
            t = this.weight;
            let n = this._weightInterpolant;
            if (n !== null) {
                let i = n.evaluate(e)[0];
                t *= i, e > n.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
            }
        }
        return this._effectiveWeight = t, t;
    }
    _updateTimeScale(e) {
        let t = 0;
        if (!this.paused) {
            t = this.timeScale;
            let n = this._timeScaleInterpolant;
            n !== null && (t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), t === 0 ? this.paused = !0 : this.timeScale = t));
        }
        return this._effectiveTimeScale = t, t;
    }
    _updateTime(e) {
        let t = this._clip.duration, n = this.loop, i = this.time + e, r = this._loopCount, o = n === Dd;
        if (e === 0) return r === -1 ? i : o && (r & 1) === 1 ? t - i : i;
        if (n === Pd) {
            r === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
            e: {
                if (i >= t) i = t;
                else if (i < 0) i = 0;
                else {
                    this.time = i;
                    break e;
                }
                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e < 0 ? -1 : 1
                });
            }
        } else {
            if (r === -1 && (e >= 0 ? (r = 0, this._setEndings(!0, this.repetitions === 0, o)) : this._setEndings(this.repetitions === 0, !0, o)), i >= t || i < 0) {
                let a = Math.floor(i / t);
                i -= t * a, r += Math.abs(a);
                let l = this.repetitions - r;
                if (l <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? t : 0, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e > 0 ? 1 : -1
                });
                else {
                    if (l === 1) {
                        let c = e < 0;
                        this._setEndings(c, !c, o);
                    } else this._setEndings(!1, !1, o);
                    this._loopCount = r, this.time = i, this._mixer.dispatchEvent({
                        type: "loop",
                        action: this,
                        loopDelta: a
                    });
                }
            } else this.time = i;
            if (o && (r & 1) === 1) return t - i;
        }
        return i;
    }
    _setEndings(e, t, n) {
        let i = this._interpolantSettings;
        n ? (i.endingStart = bi, i.endingEnd = bi) : (e ? i.endingStart = this.zeroSlopeAtStart ? bi : Mi : i.endingStart = Os, t ? i.endingEnd = this.zeroSlopeAtEnd ? bi : Mi : i.endingEnd = Os);
    }
    _scheduleFading(e, t, n) {
        let i = this._mixer, r = i.time, o = this._weightInterpolant;
        o === null && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
        let a = o.parameterPositions, l = o.sampleValues;
        return a[0] = r, l[0] = t, a[1] = r + e, l[1] = n, this;
    }
}, $h = class extends En {
    constructor(e){
        super();
        this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
    }
    _bindAction(e, t) {
        let n = e._localRoot || this._root, i = e._clip.tracks, r = i.length, o = e._propertyBindings, a = e._interpolants, l = n.uuid, c = this._bindingsByRootAndName, h = c[l];
        h === void 0 && (h = {}, c[l] = h);
        for(let u = 0; u !== r; ++u){
            let d = i[u], f = d.name, m = h[f];
            if (m !== void 0) o[u] = m;
            else {
                if (m = o[u], m !== void 0) {
                    m._cacheIndex === null && (++m.referenceCount, this._addInactiveBinding(m, l, f));
                    continue;
                }
                let x = t && t._propertyBindings[u].binding.parsedPath;
                m = new Xh(ke.create(n, f, x), d.ValueTypeName, d.getValueSize()), ++m.referenceCount, this._addInactiveBinding(m, l, f), o[u] = m;
            }
            a[u].resultBuffer = m.buffer;
        }
    }
    _activateAction(e) {
        if (!this._isActiveAction(e)) {
            if (e._cacheIndex === null) {
                let n = (e._localRoot || this._root).uuid, i = e._clip.uuid, r = this._actionsByClip[i];
                this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, i, n);
            }
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                r.useCount++ === 0 && (this._lendBinding(r), r.saveOriginalState());
            }
            this._lendAction(e);
        }
    }
    _deactivateAction(e) {
        if (this._isActiveAction(e)) {
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                --r.useCount === 0 && (r.restoreOriginalState(), this._takeBackBinding(r));
            }
            this._takeBackAction(e);
        }
    }
    _initMemoryManager() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        let e = this;
        this.stats = {
            actions: {
                get total () {
                    return e._actions.length;
                },
                get inUse () {
                    return e._nActiveActions;
                }
            },
            bindings: {
                get total () {
                    return e._bindings.length;
                },
                get inUse () {
                    return e._nActiveBindings;
                }
            },
            controlInterpolants: {
                get total () {
                    return e._controlInterpolants.length;
                },
                get inUse () {
                    return e._nActiveControlInterpolants;
                }
            }
        };
    }
    _isActiveAction(e) {
        let t = e._cacheIndex;
        return t !== null && t < this._nActiveActions;
    }
    _addInactiveAction(e, t, n) {
        let i = this._actions, r = this._actionsByClip, o = r[t];
        if (o === void 0) o = {
            knownActions: [
                e
            ],
            actionByRoot: {}
        }, e._byClipCacheIndex = 0, r[t] = o;
        else {
            let a = o.knownActions;
            e._byClipCacheIndex = a.length, a.push(e);
        }
        e._cacheIndex = i.length, i.push(e), o.actionByRoot[n] = e;
    }
    _removeInactiveAction(e) {
        let t = this._actions, n = t[t.length - 1], i = e._cacheIndex;
        n._cacheIndex = i, t[i] = n, t.pop(), e._cacheIndex = null;
        let r = e._clip.uuid, o = this._actionsByClip, a = o[r], l = a.knownActions, c = l[l.length - 1], h = e._byClipCacheIndex;
        c._byClipCacheIndex = h, l[h] = c, l.pop(), e._byClipCacheIndex = null;
        let u = a.actionByRoot, d = (e._localRoot || this._root).uuid;
        delete u[d], l.length === 0 && delete o[r], this._removeInactiveBindingsForAction(e);
    }
    _removeInactiveBindingsForAction(e) {
        let t = e._propertyBindings;
        for(let n = 0, i = t.length; n !== i; ++n){
            let r = t[n];
            --r.referenceCount === 0 && this._removeInactiveBinding(r);
        }
    }
    _lendAction(e) {
        let t = this._actions, n = e._cacheIndex, i = this._nActiveActions++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackAction(e) {
        let t = this._actions, n = e._cacheIndex, i = --this._nActiveActions, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _addInactiveBinding(e, t, n) {
        let i = this._bindingsByRootAndName, r = this._bindings, o = i[t];
        o === void 0 && (o = {}, i[t] = o), o[n] = e, e._cacheIndex = r.length, r.push(e);
    }
    _removeInactiveBinding(e) {
        let t = this._bindings, n = e.binding, i = n.rootNode.uuid, r = n.path, o = this._bindingsByRootAndName, a = o[i], l = t[t.length - 1], c = e._cacheIndex;
        l._cacheIndex = c, t[c] = l, t.pop(), delete a[r], Object.keys(a).length === 0 && delete o[i];
    }
    _lendBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = this._nActiveBindings++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = --this._nActiveBindings, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _lendControlInterpolant() {
        let e = this._controlInterpolants, t = this._nActiveControlInterpolants++, n = e[t];
        return n === void 0 && (n = new Na(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), n.__cacheIndex = t, e[t] = n), n;
    }
    _takeBackControlInterpolant(e) {
        let t = this._controlInterpolants, n = e.__cacheIndex, i = --this._nActiveControlInterpolants, r = t[i];
        e.__cacheIndex = i, t[i] = e, r.__cacheIndex = n, t[n] = r;
    }
    clipAction(e, t, n) {
        let i = t || this._root, r = i.uuid, o = typeof e == "string" ? Lr.findByName(i, e) : e, a = o !== null ? o.uuid : e, l = this._actionsByClip[a], c = null;
        if (n === void 0 && (o !== null ? n = o.blendMode : n = ua), l !== void 0) {
            let u = l.actionByRoot[r];
            if (u !== void 0 && u.blendMode === n) return u;
            c = l.knownActions[0], o === null && (o = c._clip);
        }
        if (o === null) return null;
        let h = new Zh(this, o, t, n);
        return this._bindAction(h, c), this._addInactiveAction(h, a, r), h;
    }
    existingAction(e, t) {
        let n = t || this._root, i = n.uuid, r = typeof e == "string" ? Lr.findByName(n, e) : e, o = r ? r.uuid : e, a = this._actionsByClip[o];
        return a !== void 0 && a.actionByRoot[i] || null;
    }
    stopAllAction() {
        let e = this._actions, t = this._nActiveActions;
        for(let n = t - 1; n >= 0; --n)e[n].stop();
        return this;
    }
    update(e) {
        e *= this.timeScale;
        let t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), o = this._accuIndex ^= 1;
        for(let c = 0; c !== n; ++c)t[c]._update(i, e, r, o);
        let a = this._bindings, l = this._nActiveBindings;
        for(let c = 0; c !== l; ++c)a[c].apply(o);
        return this;
    }
    setTime(e) {
        this.time = 0;
        for(let t = 0; t < this._actions.length; t++)this._actions[t].time = 0;
        return this.update(e);
    }
    getRoot() {
        return this._root;
    }
    uncacheClip(e) {
        let t = this._actions, n = e.uuid, i = this._actionsByClip, r = i[n];
        if (r !== void 0) {
            let o = r.knownActions;
            for(let a = 0, l = o.length; a !== l; ++a){
                let c = o[a];
                this._deactivateAction(c);
                let h = c._cacheIndex, u = t[t.length - 1];
                c._cacheIndex = null, c._byClipCacheIndex = null, u._cacheIndex = h, t[h] = u, t.pop(), this._removeInactiveBindingsForAction(c);
            }
            delete i[n];
        }
    }
    uncacheRoot(e) {
        let t = e.uuid, n = this._actionsByClip;
        for(let o in n){
            let a = n[o].actionByRoot, l = a[t];
            l !== void 0 && (this._deactivateAction(l), this._removeInactiveAction(l));
        }
        let i = this._bindingsByRootAndName, r = i[t];
        if (r !== void 0) for(let o in r){
            let a = r[o];
            a.restoreOriginalState(), this._removeInactiveBinding(a);
        }
    }
    uncacheAction(e, t) {
        let n = this.existingAction(e, t);
        n !== null && (this._deactivateAction(n), this._removeInactiveAction(n));
    }
};
$h.prototype._controlInterpolantsResultBuffer = new Float32Array(1);
var go = class {
    constructor(e){
        typeof e == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e;
    }
    clone() {
        return new go(this.value.clone === void 0 ? this.value : this.value.clone());
    }
}, jh = class extends $n {
    constructor(e, t, n = 1){
        super(e, t);
        this.meshPerAttribute = n;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    clone(e) {
        let t = super.clone(e);
        return t.meshPerAttribute = this.meshPerAttribute, t;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t;
    }
};
jh.prototype.isInstancedInterleavedBuffer = !0;
var Qh = class {
    constructor(e, t, n, i, r){
        this.buffer = e, this.type = t, this.itemSize = n, this.elementSize = i, this.count = r, this.version = 0;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setBuffer(e) {
        return this.buffer = e, this;
    }
    setType(e, t) {
        return this.type = e, this.elementSize = t, this;
    }
    setItemSize(e) {
        return this.itemSize = e, this;
    }
    setCount(e) {
        return this.count = e, this;
    }
};
Qh.prototype.isGLBufferAttribute = !0;
var Ey = class {
    constructor(e, t, n = 0, i = 1 / 0){
        this.ray = new Cn(e, t), this.near = n, this.far = i, this.camera = null, this.layers = new Js, this.params = {
            Mesh: {},
            Line: {
                threshold: 1
            },
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        };
    }
    set(e, t) {
        this.ray.set(e, t);
    }
    setFromCamera(e, t) {
        t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type: " + t.type);
    }
    intersectObject(e, t = !0, n = []) {
        return la(e, this, n, t), n.sort(Pc), n;
    }
    intersectObjects(e, t = !0, n = []) {
        for(let i = 0, r = e.length; i < r; i++)la(e[i], this, n, t);
        return n.sort(Pc), n;
    }
};
function Pc(s, e) {
    return s.distance - e.distance;
}
function la(s, e, t, n) {
    if (s.layers.test(e.layers) && s.raycast(e, t), n === !0) {
        let i = s.children;
        for(let r = 0, o = i.length; r < o; r++)la(i[r], e, t, !0);
    }
}
var Ay = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
    }
    makeSafe() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + t * t + n * n), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(mt(t / this.radius, -1, 1))), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Cy = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Ic = new X, qi = class {
    constructor(e = new X(1 / 0, 1 / 0), t = new X(-1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ic.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ic.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
qi.prototype.isBox2 = !0;
var Dc = new M, Ts = new M, Kh = class {
    constructor(e = new M, t = new M){
        this.start = e, this.end = t;
    }
    set(e, t) {
        return this.start.copy(e), this.end.copy(t), this;
    }
    copy(e) {
        return this.start.copy(e.start), this.end.copy(e.end), this;
    }
    getCenter(e) {
        return e.addVectors(this.start, this.end).multiplyScalar(.5);
    }
    delta(e) {
        return e.subVectors(this.end, this.start);
    }
    distanceSq() {
        return this.start.distanceToSquared(this.end);
    }
    distance() {
        return this.start.distanceTo(this.end);
    }
    at(e, t) {
        return this.delta(t).multiplyScalar(e).add(this.start);
    }
    closestPointToPointParameter(e, t) {
        Dc.subVectors(e, this.start), Ts.subVectors(this.end, this.start);
        let n = Ts.dot(Ts), r = Ts.dot(Dc) / n;
        return t && (r = mt(r, 0, 1)), r;
    }
    closestPointToPoint(e, t, n) {
        let i = this.closestPointToPointParameter(e, t);
        return this.delta(n).multiplyScalar(i).add(this.start);
    }
    applyMatrix4(e) {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
    }
    equals(e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Fc = new M, Ly = class extends Ne {
    constructor(e, t){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;
        let n = new _e, i = [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            -1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            -1,
            1
        ];
        for(let o = 0, a = 1, l = 32; o < l; o++, a++){
            let c = o / l * Math.PI * 2, h = a / l * Math.PI * 2;
            i.push(Math.cos(c), Math.sin(c), 1, Math.cos(h), Math.sin(h), 1);
        }
        n.setAttribute("position", new de(i, 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.cone = new wt(n, r), this.add(this.cone), this.update();
    }
    dispose() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
    }
    update() {
        this.light.updateMatrixWorld();
        let e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e), Fc.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Fc), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
    }
}, yn = new M, Es = new pe, Qo = new pe, eu = class extends wt {
    constructor(e){
        let t = tu(e), n = new _e, i = [], r = [], o = new ae(0, 0, 1), a = new ae(0, 1, 0);
        for(let c = 0; c < t.length; c++){
            let h = t[c];
            h.parent && h.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(o.r, o.g, o.b), r.push(a.r, a.g, a.b));
        }
        n.setAttribute("position", new de(i, 3)), n.setAttribute("color", new de(r, 3));
        let l = new ft({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0
        });
        super(n, l);
        this.type = "SkeletonHelper", this.isSkeletonHelper = !0, this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
    }
    updateMatrixWorld(e) {
        let t = this.bones, n = this.geometry, i = n.getAttribute("position");
        Qo.copy(this.root.matrixWorld).invert();
        for(let r = 0, o = 0; r < t.length; r++){
            let a = t[r];
            a.parent && a.parent.isBone && (Es.multiplyMatrices(Qo, a.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o, yn.x, yn.y, yn.z), Es.multiplyMatrices(Qo, a.parent.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o + 1, yn.x, yn.y, yn.z), o += 2);
        }
        n.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
    }
};
function tu(s) {
    let e = [];
    s && s.isBone && e.push(s);
    for(let t = 0; t < s.children.length; t++)e.push.apply(e, tu(s.children[t]));
    return e;
}
var Ry = class extends st {
    constructor(e, t, n){
        let i = new Fi(t, 4, 2), r = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        });
        super(i, r);
        this.light = e, this.light.updateMatrixWorld(), this.color = n, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
    update() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
    }
}, Py = new M, Nc = new ae, Bc = new ae, Iy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n;
        let i = new Ii(t);
        i.rotateY(Math.PI * .5), this.material = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        }), this.color === void 0 && (this.material.vertexColors = !0);
        let r = i.getAttribute("position"), o = new Float32Array(r.count * 3);
        i.setAttribute("color", new Ue(o, 3)), this.add(new st(i, this.material)), this.update();
    }
    dispose() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
    }
    update() {
        let e = this.children[0];
        if (this.color !== void 0) this.material.color.set(this.color);
        else {
            let t = e.geometry.getAttribute("color");
            Nc.copy(this.light.color), Bc.copy(this.light.groundColor);
            for(let n = 0, i = t.count; n < i; n++){
                let r = n < i / 2 ? Nc : Bc;
                t.setXYZ(n, r.r, r.g, r.b);
            }
            t.needsUpdate = !0;
        }
        e.lookAt(Py.setFromMatrixPosition(this.light.matrixWorld).negate());
    }
}, nu = class extends wt {
    constructor(e = 10, t = 10, n = 4473924, i = 8947848){
        n = new ae(n), i = new ae(i);
        let r = t / 2, o = e / t, a = e / 2, l = [], c = [];
        for(let d = 0, f = 0, m = -a; d <= t; d++, m += o){
            l.push(-a, 0, m, a, 0, m), l.push(m, 0, -a, m, 0, a);
            let x = d === r ? n : i;
            x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3;
        }
        let h = new _e;
        h.setAttribute("position", new de(l, 3)), h.setAttribute("color", new de(c, 3));
        let u = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(h, u);
        this.type = "GridHelper";
    }
}, Dy = class extends wt {
    constructor(e = 10, t = 16, n = 8, i = 64, r = 4473924, o = 8947848){
        r = new ae(r), o = new ae(o);
        let a = [], l = [];
        for(let u = 0; u <= t; u++){
            let d = u / t * (Math.PI * 2), f = Math.sin(d) * e, m = Math.cos(d) * e;
            a.push(0, 0, 0), a.push(f, 0, m);
            let x = u & 1 ? r : o;
            l.push(x.r, x.g, x.b), l.push(x.r, x.g, x.b);
        }
        for(let u = 0; u <= n; u++){
            let d = u & 1 ? r : o, f = e - e / n * u;
            for(let m = 0; m < i; m++){
                let x = m / i * (Math.PI * 2), v = Math.sin(x) * f, g = Math.cos(x) * f;
                a.push(v, 0, g), l.push(d.r, d.g, d.b), x = (m + 1) / i * (Math.PI * 2), v = Math.sin(x) * f, g = Math.cos(x) * f, a.push(v, 0, g), l.push(d.r, d.g, d.b);
            }
        }
        let c = new _e;
        c.setAttribute("position", new de(a, 3)), c.setAttribute("color", new de(l, 3));
        let h = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(c, h);
        this.type = "PolarGridHelper";
    }
}, zc = new M, As = new M, Uc = new M, Fy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, t === void 0 && (t = 1);
        let i = new _e;
        i.setAttribute("position", new de([
            -t,
            t,
            0,
            t,
            t,
            0,
            t,
            -t,
            0,
            -t,
            -t,
            0,
            -t,
            t,
            0
        ], 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.lightPlane = new on(i, r), this.add(this.lightPlane), i = new _e, i.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            0,
            1
        ], 3)), this.targetLine = new on(i, r), this.add(this.targetLine), this.update();
    }
    dispose() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
    }
    update() {
        zc.setFromMatrixPosition(this.light.matrixWorld), As.setFromMatrixPosition(this.light.target.matrixWorld), Uc.subVectors(As, zc), this.lightPlane.lookAt(As), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(As), this.targetLine.scale.z = Uc.length();
    }
}, Cs = new M, Qe = new Ir, Ny = class extends wt {
    constructor(e){
        let t = new _e, n = new ft({
            color: 16777215,
            vertexColors: !0,
            toneMapped: !1
        }), i = [], r = [], o = {}, a = new ae(16755200), l = new ae(16711680), c = new ae(43775), h = new ae(16777215), u = new ae(3355443);
        d("n1", "n2", a), d("n2", "n4", a), d("n4", "n3", a), d("n3", "n1", a), d("f1", "f2", a), d("f2", "f4", a), d("f4", "f3", a), d("f3", "f1", a), d("n1", "f1", a), d("n2", "f2", a), d("n3", "f3", a), d("n4", "f4", a), d("p", "n1", l), d("p", "n2", l), d("p", "n3", l), d("p", "n4", l), d("u1", "u2", c), d("u2", "u3", c), d("u3", "u1", c), d("c", "t", h), d("p", "c", u), d("cn1", "cn2", u), d("cn3", "cn4", u), d("cf1", "cf2", u), d("cf3", "cf4", u);
        function d(m, x, v) {
            f(m, v), f(x, v);
        }
        function f(m, x) {
            i.push(0, 0, 0), r.push(x.r, x.g, x.b), o[m] === void 0 && (o[m] = []), o[m].push(i.length / 3 - 1);
        }
        t.setAttribute("position", new de(i, 3)), t.setAttribute("color", new de(r, 3));
        super(t, n);
        this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update();
    }
    update() {
        let e = this.geometry, t = this.pointMap, n = 1, i = 1;
        Qe.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), et("c", t, e, Qe, 0, 0, -1), et("t", t, e, Qe, 0, 0, 1), et("n1", t, e, Qe, -n, -i, -1), et("n2", t, e, Qe, n, -i, -1), et("n3", t, e, Qe, -n, i, -1), et("n4", t, e, Qe, n, i, -1), et("f1", t, e, Qe, -n, -i, 1), et("f2", t, e, Qe, n, -i, 1), et("f3", t, e, Qe, -n, i, 1), et("f4", t, e, Qe, n, i, 1), et("u1", t, e, Qe, n * .7, i * 1.1, -1), et("u2", t, e, Qe, -n * .7, i * 1.1, -1), et("u3", t, e, Qe, 0, i * 2, -1), et("cf1", t, e, Qe, -n, 0, 1), et("cf2", t, e, Qe, n, 0, 1), et("cf3", t, e, Qe, 0, -i, 1), et("cf4", t, e, Qe, 0, i, 1), et("cn1", t, e, Qe, -n, 0, -1), et("cn2", t, e, Qe, n, 0, -1), et("cn3", t, e, Qe, 0, -i, -1), et("cn4", t, e, Qe, 0, i, -1), e.getAttribute("position").needsUpdate = !0;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
};
function et(s, e, t, n, i, r, o) {
    Cs.set(i, r, o).unproject(n);
    let a = e[s];
    if (a !== void 0) {
        let l = t.getAttribute("position");
        for(let c = 0, h = a.length; c < h; c++)l.setXYZ(a[c], Cs.x, Cs.y, Cs.z);
    }
}
var Ls = new Lt, iu = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = new Float32Array(8 * 3), r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new Ue(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
    }
    update(e) {
        if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Ls.setFromObject(this.object), Ls.isEmpty()) return;
        let t = Ls.min, n = Ls.max, i = this.geometry.attributes.position, r = i.array;
        r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = t.x, r[4] = n.y, r[5] = n.z, r[6] = t.x, r[7] = t.y, r[8] = n.z, r[9] = n.x, r[10] = t.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = t.z, r[15] = t.x, r[16] = n.y, r[17] = t.z, r[18] = t.x, r[19] = t.y, r[20] = t.z, r[21] = n.x, r[22] = t.y, r[23] = t.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
    }
    setFromObject(e) {
        return this.object = e, this.update(), this;
    }
    copy(e) {
        return wt.prototype.copy.call(this, e), this.object = e.object, this;
    }
}, By = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            -1
        ], r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new de(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
    }
    updateMatrixWorld(e) {
        let t = this.box;
        t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e));
    }
}, zy = class extends on {
    constructor(e, t = 1, n = 16776960){
        let i = n, r = [
            1,
            -1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ], o = new _e;
        o.setAttribute("position", new de(r, 3)), o.computeBoundingSphere();
        super(o, new ft({
            color: i,
            toneMapped: !1
        }));
        this.type = "PlaneHelper", this.plane = e, this.size = t;
        let a = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1
        ], l = new _e;
        l.setAttribute("position", new de(a, 3)), l.computeBoundingSphere(), this.add(new st(l, new hn({
            color: i,
            opacity: .2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1
        })));
    }
    updateMatrixWorld(e) {
        let t = -this.plane.constant;
        Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.children[0].material.side = t < 0 ? it : Ai, this.lookAt(this.plane.normal), super.updateMatrixWorld(e);
    }
}, Oc = new M, Rs, Ko, Uy = class extends Ne {
    constructor(e = new M(0, 0, 1), t = new M(0, 0, 0), n = 1, i = 16776960, r = n * .2, o = r * .2){
        super();
        this.type = "ArrowHelper", Rs === void 0 && (Rs = new _e, Rs.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            1,
            0
        ], 3)), Ko = new Jn(0, .5, 1, 5, 1), Ko.translate(0, -.5, 0)), this.position.copy(t), this.line = new on(Rs, new ft({
            color: i,
            toneMapped: !1
        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new st(Ko, new hn({
            color: i,
            toneMapped: !1
        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(n, r, o);
    }
    setDirection(e) {
        if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
        else {
            Oc.set(e.z, 0, -e.x).normalize();
            let t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(Oc, t);
        }
    }
    setLength(e, t = e * .2, n = t * .2) {
        this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix();
    }
    setColor(e) {
        this.line.material.color.set(e), this.cone.material.color.set(e);
    }
    copy(e) {
        return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
    }
}, ru = class extends wt {
    constructor(e = 1){
        let t = [
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e
        ], n = [
            1,
            0,
            0,
            1,
            .6,
            0,
            0,
            1,
            0,
            .6,
            1,
            0,
            0,
            0,
            1,
            0,
            .6,
            1
        ], i = new _e;
        i.setAttribute("position", new de(t, 3)), i.setAttribute("color", new de(n, 3));
        let r = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(i, r);
        this.type = "AxesHelper";
    }
    setColors(e, t, n) {
        let i = new ae, r = this.geometry.attributes.color.array;
        return i.set(e), i.toArray(r, 0), i.toArray(r, 3), i.set(t), i.toArray(r, 6), i.toArray(r, 9), i.set(n), i.toArray(r, 12), i.toArray(r, 15), this.geometry.attributes.color.needsUpdate = !0, this;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, Oy = class {
    constructor(){
        this.type = "ShapePath", this.color = new ae, this.subPaths = [], this.currentPath = null;
    }
    moveTo(e, t) {
        return this.currentPath = new gr, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this;
    }
    lineTo(e, t) {
        return this.currentPath.lineTo(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        return this.currentPath.quadraticCurveTo(e, t, n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        return this.currentPath.bezierCurveTo(e, t, n, i, r, o), this;
    }
    splineThru(e) {
        return this.currentPath.splineThru(e), this;
    }
    toShapes(e, t) {
        function n(p) {
            let _ = [];
            for(let y = 0, b = p.length; y < b; y++){
                let A = p[y], L = new Xt;
                L.curves = A.curves, _.push(L);
            }
            return _;
        }
        function i(p, _) {
            let y = _.length, b = !1;
            for(let A = y - 1, L = 0; L < y; A = L++){
                let I = _[A], k = _[L], B = k.x - I.x, P = k.y - I.y;
                if (Math.abs(P) > Number.EPSILON) {
                    if (P < 0 && (I = _[L], B = -B, k = _[A], P = -P), p.y < I.y || p.y > k.y) continue;
                    if (p.y === I.y) {
                        if (p.x === I.x) return !0;
                    } else {
                        let w = P * (p.x - I.x) - B * (p.y - I.y);
                        if (w === 0) return !0;
                        if (w < 0) continue;
                        b = !b;
                    }
                } else {
                    if (p.y !== I.y) continue;
                    if (k.x <= p.x && p.x <= I.x || I.x <= p.x && p.x <= k.x) return !0;
                }
            }
            return b;
        }
        let r = Jt.isClockWise, o = this.subPaths;
        if (o.length === 0) return [];
        if (t === !0) return n(o);
        let a, l, c, h = [];
        if (o.length === 1) return l = o[0], c = new Xt, c.curves = l.curves, h.push(c), h;
        let u = !r(o[0].getPoints());
        u = e ? !u : u;
        let d = [], f = [], m = [], x = 0, v;
        f[x] = void 0, m[x] = [];
        for(let p = 0, _ = o.length; p < _; p++)l = o[p], v = l.getPoints(), a = r(v), a = e ? !a : a, a ? (!u && f[x] && x++, f[x] = {
            s: new Xt,
            p: v
        }, f[x].s.curves = l.curves, u && x++, m[x] = []) : m[x].push({
            h: l,
            p: v[0]
        });
        if (!f[0]) return n(o);
        if (f.length > 1) {
            let p = !1, _ = [];
            for(let y = 0, b = f.length; y < b; y++)d[y] = [];
            for(let y = 0, b = f.length; y < b; y++){
                let A = m[y];
                for(let L = 0; L < A.length; L++){
                    let I = A[L], k = !0;
                    for(let B = 0; B < f.length; B++)i(I.p, f[B].p) && (y !== B && _.push({
                        froms: y,
                        tos: B,
                        hole: L
                    }), k ? (k = !1, d[B].push(I)) : p = !0);
                    k && d[y].push(I);
                }
            }
            _.length > 0 && (p || (m = d));
        }
        let g;
        for(let p = 0, _ = f.length; p < _; p++){
            c = f[p].s, h.push(c), g = m[p];
            for(let y = 0, b = g.length; y < b; y++)c.holes.push(g[y].h);
        }
        return h;
    }
}, su = new Float32Array(1), Hy = new Int32Array(su.buffer), ky = class {
    static toHalfFloat(e) {
        e > 65504 && (console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."), e = 65504), su[0] = e;
        let t = Hy[0], n = t >> 16 & 32768, i = t >> 12 & 2047, r = t >> 23 & 255;
        return r < 103 ? n : r > 142 ? (n |= 31744, n |= (r == 255 ? 0 : 1) && t & 8388607, n) : r < 113 ? (i |= 2048, n |= (i >> 114 - r) + (i >> 113 - r & 1), n) : (n |= r - 112 << 10 | i >> 1, n += i & 1, n);
    }
}, b0 = 0, w0 = 1, S0 = 0, T0 = 1, E0 = 2;
function A0(s) {
    return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), s;
}
function C0(s = []) {
    return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), s.isMultiMaterial = !0, s.materials = s, s.clone = function() {
        return s.slice();
    }, s;
}
function L0(s, e) {
    return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new zr(s, e);
}
function R0(s) {
    return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new ro(s);
}
function P0(s, e) {
    return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new zr(s, e);
}
function I0(s) {
    return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function D0(s) {
    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function F0(s) {
    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function N0(s, e, t) {
    return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new M(s, e, t);
}
function B0(s, e) {
    return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."), new Ue(s, e).setUsage(ur);
}
function z0(s, e) {
    return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new jc(s, e);
}
function U0(s, e) {
    return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new Qc(s, e);
}
function O0(s, e) {
    return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Kc(s, e);
}
function H0(s, e) {
    return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new eh(s, e);
}
function k0(s, e) {
    return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Ys(s, e);
}
function G0(s, e) {
    return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new th(s, e);
}
function V0(s, e) {
    return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Zs(s, e);
}
function W0(s, e) {
    return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new de(s, e);
}
function q0(s, e) {
    return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new ih(s, e);
}
Ct.create = function(s, e) {
    return console.log("THREE.Curve.create() has been deprecated"), s.prototype = Object.create(Ct.prototype), s.prototype.constructor = s, s.prototype.getPoint = e, s;
};
gr.prototype.fromPoints = function(s) {
    return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(s);
};
function X0(s) {
    return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new ru(s);
}
function J0(s, e) {
    return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new iu(s, e);
}
function Y0(s, e) {
    return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new wt(new _a(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
nu.prototype.setColors = function() {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
};
eu.prototype.update = function() {
    console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
};
function Z0(s, e) {
    return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new wt(new Ea(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
bt.prototype.extractUrlBase = function(s) {
    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Gs.extractUrlBase(s);
};
bt.Handlers = {
    add: function() {
        console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.");
    },
    get: function() {
        console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.");
    }
};
function $0(s) {
    return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new Yt(s);
}
function j0(s) {
    return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new Nh(s);
}
qi.prototype.center = function(s) {
    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
qi.prototype.empty = function() {
    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
qi.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
qi.prototype.size = function(s) {
    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(s);
};
Lt.prototype.center = function(s) {
    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
Lt.prototype.empty = function() {
    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Lt.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Lt.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
Lt.prototype.size = function(s) {
    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(s);
};
An.prototype.empty = function() {
    return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Dr.prototype.setFromMatrix = function(s) {
    return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(s);
};
Kh.prototype.center = function(s) {
    return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
lt.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
lt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
};
lt.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
};
lt.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
pe.prototype.extractPosition = function(s) {
    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(s);
};
pe.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
pe.prototype.getPosition = function() {
    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), new M().setFromMatrixColumn(this, 3);
};
pe.prototype.setRotationFromQuaternion = function(s) {
    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(s);
};
pe.prototype.multiplyToArray = function() {
    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
};
pe.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector4 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
};
pe.prototype.rotateAxis = function(s) {
    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), s.transformDirection(this);
};
pe.prototype.crossVector = function(s) {
    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.translate = function() {
    console.error("THREE.Matrix4: .translate() has been removed.");
};
pe.prototype.rotateX = function() {
    console.error("THREE.Matrix4: .rotateX() has been removed.");
};
pe.prototype.rotateY = function() {
    console.error("THREE.Matrix4: .rotateY() has been removed.");
};
pe.prototype.rotateZ = function() {
    console.error("THREE.Matrix4: .rotateZ() has been removed.");
};
pe.prototype.rotateByAxis = function() {
    console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
};
pe.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
};
pe.prototype.makeFrustum = function(s, e, t, n, i, r) {
    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(s, e, n, t, i, r);
};
pe.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
Wt.prototype.isIntersectionLine = function(s) {
    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(s);
};
gt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), s.applyQuaternion(this);
};
gt.prototype.inverse = function() {
    return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."), this.invert();
};
Cn.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Cn.prototype.isIntersectionPlane = function(s) {
    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(s);
};
Cn.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
nt.prototype.area = function() {
    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
};
nt.prototype.barycoordFromPoint = function(s, e) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(s, e);
};
nt.prototype.midpoint = function(s) {
    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(s);
};
nt.prototypenormal = function(s) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(s);
};
nt.prototype.plane = function(s) {
    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(s);
};
nt.barycoordFromPoint = function(s, e, t, n, i) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), nt.getBarycoord(s, e, t, n, i);
};
nt.normal = function(s, e, t, n) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), nt.getNormal(s, e, t, n);
};
Xt.prototype.extractAllPoints = function(s) {
    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(s);
};
Xt.prototype.extrude = function(s) {
    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new ln(this, s);
};
Xt.prototype.makeGeometry = function(s) {
    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Di(this, s);
};
X.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
X.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
X.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
M.prototype.setEulerFromRotationMatrix = function() {
    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
};
M.prototype.setEulerFromQuaternion = function() {
    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
};
M.prototype.getPositionFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(s);
};
M.prototype.getScaleFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(s);
};
M.prototype.getColumnFromMatrix = function(s, e) {
    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, s);
};
M.prototype.applyProjection = function(s) {
    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(s);
};
M.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
M.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
M.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ve.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
Ve.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ne.prototype.getChildByName = function(s) {
    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(s);
};
Ne.prototype.renderDepth = function() {
    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
};
Ne.prototype.translate = function(s, e) {
    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e, s);
};
Ne.prototype.getWorldRotation = function() {
    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
};
Ne.prototype.applyMatrix = function(s) {
    return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(Ne.prototype, {
    eulerOrder: {
        get: function() {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
        },
        set: function(s) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = s;
        }
    },
    useQuaternion: {
        get: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        },
        set: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        }
    }
});
st.prototype.setDrawMode = function() {
    console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
};
Object.defineProperties(st.prototype, {
    drawMode: {
        get: function() {
            return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), Fd;
        },
        set: function() {
            console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
        }
    }
});
so.prototype.initBones = function() {
    console.error("THREE.SkinnedMesh: initBones() has been removed.");
};
ut.prototype.setLens = function(s, e) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), e !== void 0 && (this.filmGauge = e), this.setFocalLength(s);
};
Object.defineProperties(Bt.prototype, {
    onlyShadow: {
        set: function() {
            console.warn("THREE.Light: .onlyShadow has been removed.");
        }
    },
    shadowCameraFov: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = s;
        }
    },
    shadowCameraLeft: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = s;
        }
    },
    shadowCameraRight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = s;
        }
    },
    shadowCameraTop: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = s;
        }
    },
    shadowCameraBottom: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = s;
        }
    },
    shadowCameraNear: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = s;
        }
    },
    shadowCameraFar: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = s;
        }
    },
    shadowCameraVisible: {
        set: function() {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
        }
    },
    shadowBias: {
        set: function(s) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = s;
        }
    },
    shadowDarkness: {
        set: function() {
            console.warn("THREE.Light: .shadowDarkness has been removed.");
        }
    },
    shadowMapWidth: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = s;
        }
    },
    shadowMapHeight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = s;
        }
    }
});
Object.defineProperties(Ue.prototype, {
    length: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
        }
    },
    dynamic: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.usage === ur;
        },
        set: function() {
            console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(ur);
        }
    }
});
Ue.prototype.setDynamic = function(s) {
    return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
Ue.prototype.copyIndicesArray = function() {
    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
}, Ue.prototype.setArray = function() {
    console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
_e.prototype.addIndex = function(s) {
    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(s);
};
_e.prototype.addAttribute = function(s, e) {
    return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), !(e && e.isBufferAttribute) && !(e && e.isInterleavedBufferAttribute) ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(s, new Ue(arguments[1], arguments[2]))) : s === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(e), this) : this.setAttribute(s, e);
};
_e.prototype.addDrawCall = function(s, e, t) {
    t !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(s, e);
};
_e.prototype.clearDrawCalls = function() {
    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
};
_e.prototype.computeOffsets = function() {
    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
};
_e.prototype.removeAttribute = function(s) {
    return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(s);
};
_e.prototype.applyMatrix = function(s) {
    return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(_e.prototype, {
    drawcalls: {
        get: function() {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
        }
    },
    offsets: {
        get: function() {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
        }
    }
});
$n.prototype.setDynamic = function(s) {
    return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
$n.prototype.setArray = function() {
    console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
ln.prototype.getArrays = function() {
    console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.");
};
ln.prototype.addShapeList = function() {
    console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.");
};
ln.prototype.addShape = function() {
    console.error("THREE.ExtrudeGeometry: .addShape() has been removed.");
};
no.prototype.dispose = function() {
    console.error("THREE.Scene: .dispose() has been removed.");
};
go.prototype.onUpdate = function() {
    return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
};
Object.defineProperties(dt.prototype, {
    wrapAround: {
        get: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        }
    },
    overdraw: {
        get: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        }
    },
    wrapRGB: {
        get: function() {
            return console.warn("THREE.Material: .wrapRGB has been removed."), new ae;
        }
    },
    shading: {
        get: function() {
            console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = s === kc;
        }
    },
    stencilMask: {
        get: function() {
            return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask;
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = s;
        }
    },
    vertexTangents: {
        get: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        },
        set: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        }
    }
});
Object.defineProperties(sn.prototype, {
    derivatives: {
        get: function() {
            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
        },
        set: function(s) {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = s;
        }
    }
});
qe.prototype.clearTarget = function(s, e, t, n) {
    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(s), this.clear(e, t, n);
};
qe.prototype.animate = function(s) {
    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(s);
};
qe.prototype.getCurrentRenderTarget = function() {
    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
};
qe.prototype.getMaxAnisotropy = function() {
    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
};
qe.prototype.getPrecision = function() {
    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
};
qe.prototype.resetGLState = function() {
    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
};
qe.prototype.supportsFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
};
qe.prototype.supportsHalfFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
};
qe.prototype.supportsStandardDerivatives = function() {
    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
};
qe.prototype.supportsCompressedTextureS3TC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
};
qe.prototype.supportsCompressedTexturePVRTC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
};
qe.prototype.supportsBlendMinMax = function() {
    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
};
qe.prototype.supportsVertexTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
};
qe.prototype.supportsInstancedArrays = function() {
    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
};
qe.prototype.enableScissorTest = function(s) {
    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(s);
};
qe.prototype.initMaterial = function() {
    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
};
qe.prototype.addPrePlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
};
qe.prototype.addPostPlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
};
qe.prototype.updateShadowMap = function() {
    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
};
qe.prototype.setFaceCulling = function() {
    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
};
qe.prototype.allocTextureUnit = function() {
    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");
};
qe.prototype.setTexture = function() {
    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
};
qe.prototype.setTexture2D = function() {
    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");
};
qe.prototype.setTextureCube = function() {
    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");
};
qe.prototype.getActiveMipMapLevel = function() {
    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel();
};
Object.defineProperties(qe.prototype, {
    shadowMapEnabled: {
        get: function() {
            return this.shadowMap.enabled;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = s;
        }
    },
    shadowMapType: {
        get: function() {
            return this.shadowMap.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = s;
        }
    },
    shadowMapCullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    context: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext();
        }
    },
    vr: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr;
        }
    },
    gammaInput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");
        }
    },
    gammaOutput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = s === !0 ? Oi : Nt;
        }
    },
    toneMappingWhitePoint: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."), 1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");
        }
    },
    gammaFactor: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."), 2;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.");
        }
    }
});
Object.defineProperties(yh.prototype, {
    cullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    renderReverseSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        }
    },
    renderSingleSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        }
    }
});
function Q0(s, e, t) {
    return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."), new js(s, t);
}
Object.defineProperties(At.prototype, {
    wrapS: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = s;
        }
    },
    wrapT: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = s;
        }
    },
    magFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = s;
        }
    },
    minFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = s;
        }
    },
    anisotropy: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = s;
        }
    },
    offset: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = s;
        }
    },
    repeat: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = s;
        }
    },
    format: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = s;
        }
    },
    type: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = s;
        }
    },
    generateMipmaps: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = s;
        }
    }
});
Za.prototype.load = function(s) {
    console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
    let e = this;
    return new kh().load(s, function(n) {
        e.setBuffer(n);
    }), this;
};
qh.prototype.getData = function() {
    return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
};
$s.prototype.updateCubeMap = function(s, e) {
    return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(s, e);
};
$s.prototype.clear = function(s, e, t, n) {
    return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."), this.renderTarget.clear(s, e, t, n);
};
Yn.crossOrigin = void 0;
Yn.loadTexture = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
    let i = new Bh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadTextureCube = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
    let i = new Fh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadCompressedTexture = function() {
    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
};
Yn.loadCompressedTextureCube = function() {
    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
};
function K0() {
    console.error("THREE.CanvasRenderer has been removed");
}
function ev() {
    console.error("THREE.JSONLoader has been removed.");
}
var tv = {
    createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    }
};
function nv() {
    console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js");
}
function iv() {
    return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"), new _e;
}
function rv() {
    return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"), new _e;
}
function sv() {
    console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js");
}
function ov() {
    console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js");
}
function av() {
    console.error("THREE.ImmediateRenderObject has been removed.");
}
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
    detail: {
        revision: ca
    }
}));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = ca);
const mod = {
    ACESFilmicToneMapping: Uu,
    AddEquation: _i,
    AddOperation: Fu,
    AdditiveAnimationBlendMode: qc,
    AdditiveBlending: nl,
    AlphaFormat: Xu,
    AlwaysDepth: Au,
    AlwaysStencilFunc: Ud,
    AmbientLight: qa,
    AmbientLightProbe: Vh,
    AnimationClip: Lr,
    AnimationLoader: cy,
    AnimationMixer: $h,
    AnimationObjectGroup: Yh,
    AnimationUtils: Ze,
    ArcCurve: Ma,
    ArrayCamera: ga,
    ArrowHelper: Uy,
    Audio: Za,
    AudioAnalyser: qh,
    AudioContext: Hh,
    AudioListener: my,
    AudioLoader: kh,
    AxesHelper: ru,
    AxisHelper: X0,
    BackSide: it,
    BasicDepthPacking: Nd,
    BasicShadowMap: qy,
    BinaryTextureLoader: j0,
    Bone: oo,
    BooleanKeyframeTrack: Qn,
    BoundingBoxHelper: J0,
    Box2: qi,
    Box3: Lt,
    Box3Helper: By,
    BoxBufferGeometry: wn,
    BoxGeometry: wn,
    BoxHelper: iu,
    BufferAttribute: Ue,
    BufferGeometry: _e,
    BufferGeometryLoader: Uh,
    ByteType: Hu,
    Cache: Ni,
    Camera: Ir,
    CameraHelper: Ny,
    CanvasRenderer: K0,
    CanvasTexture: Th,
    CatmullRomCurve3: wa,
    CineonToneMapping: zu,
    CircleBufferGeometry: fr,
    CircleGeometry: fr,
    ClampToEdgeWrapping: vt,
    Clock: Wh,
    Color: ae,
    ColorKeyframeTrack: Ba,
    CompressedTexture: va,
    CompressedTextureLoader: hy,
    ConeBufferGeometry: pr,
    ConeGeometry: pr,
    CubeCamera: $s,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    CubeTexture: ki,
    CubeTextureLoader: Fh,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    CubicInterpolant: Ph,
    CullFaceBack: tl,
    CullFaceFront: du,
    CullFaceFrontBack: Wy,
    CullFaceNone: uu,
    Curve: Ct,
    CurvePath: Ah,
    CustomBlending: pu,
    CustomToneMapping: Ou,
    CylinderBufferGeometry: Jn,
    CylinderGeometry: Jn,
    Cylindrical: Cy,
    DataTexture: qn,
    DataTexture2DArray: Qs,
    DataTexture3D: ma,
    DataTextureLoader: Nh,
    DataUtils: ky,
    DecrementStencilOp: n0,
    DecrementWrapStencilOp: r0,
    DefaultLoadingManager: ly,
    DepthFormat: Vn,
    DepthStencilFormat: Li,
    DepthTexture: ks,
    DirectionalLight: Wa,
    DirectionalLightHelper: Fy,
    DiscreteInterpolant: Ih,
    DodecahedronBufferGeometry: mr,
    DodecahedronGeometry: mr,
    DoubleSide: Ci,
    DstAlphaFactor: Mu,
    DstColorFactor: wu,
    DynamicBufferAttribute: B0,
    DynamicCopyUsage: y0,
    DynamicDrawUsage: ur,
    DynamicReadUsage: m0,
    EdgesGeometry: _a,
    EdgesHelper: Y0,
    EllipseCurve: Ur,
    EqualDepth: Lu,
    EqualStencilFunc: l0,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    Euler: Zn,
    EventDispatcher: En,
    ExtrudeBufferGeometry: ln,
    ExtrudeGeometry: ln,
    FaceColors: T0,
    FileLoader: Yt,
    FlatShading: kc,
    Float16BufferAttribute: nh,
    Float32Attribute: W0,
    Float32BufferAttribute: de,
    Float64Attribute: q0,
    Float64BufferAttribute: ih,
    FloatType: nn,
    Fog: Br,
    FogExp2: Nr,
    Font: ov,
    FontLoader: sv,
    FramebufferTexture: Sh,
    FrontSide: Ai,
    Frustum: Dr,
    GLBufferAttribute: Qh,
    GLSL1: _0,
    GLSL3: xl,
    GreaterDepth: Pu,
    GreaterEqualDepth: Ru,
    GreaterEqualStencilFunc: d0,
    GreaterStencilFunc: h0,
    GridHelper: nu,
    Group: Hn,
    HalfFloatType: kn,
    HemisphereLight: Ua,
    HemisphereLightHelper: Iy,
    HemisphereLightProbe: Gh,
    IcosahedronBufferGeometry: _r,
    IcosahedronGeometry: _r,
    ImageBitmapLoader: Oh,
    ImageLoader: Rr,
    ImageUtils: Yn,
    ImmediateRenderObject: av,
    IncrementStencilOp: t0,
    IncrementWrapStencilOp: i0,
    InstancedBufferAttribute: Xn,
    InstancedBufferGeometry: Ya,
    InstancedInterleavedBuffer: jh,
    InstancedMesh: xa,
    Int16Attribute: H0,
    Int16BufferAttribute: eh,
    Int32Attribute: G0,
    Int32BufferAttribute: th,
    Int8Attribute: z0,
    Int8BufferAttribute: jc,
    IntType: Gu,
    InterleavedBuffer: $n,
    InterleavedBufferAttribute: Sn,
    Interpolant: cn,
    InterpolateDiscrete: zs,
    InterpolateLinear: Us,
    InterpolateSmooth: yo,
    InvertStencilOp: s0,
    JSONLoader: ev,
    KeepStencilOp: vo,
    KeyframeTrack: zt,
    LOD: bh,
    LatheBufferGeometry: Mr,
    LatheGeometry: Mr,
    Layers: Js,
    LensFlare: nv,
    LessDepth: Cu,
    LessEqualDepth: ea,
    LessEqualStencilFunc: c0,
    LessStencilFunc: a0,
    Light: Bt,
    LightProbe: Hr,
    Line: on,
    Line3: Kh,
    LineBasicMaterial: ft,
    LineCurve: Or,
    LineCurve3: Eh,
    LineDashedMaterial: Fa,
    LineLoop: ya,
    LinePieces: w0,
    LineSegments: wt,
    LineStrip: b0,
    LinearEncoding: Nt,
    LinearFilter: tt,
    LinearInterpolant: Na,
    LinearMipMapLinearFilter: $y,
    LinearMipMapNearestFilter: Zy,
    LinearMipmapLinearFilter: Ui,
    LinearMipmapNearestFilter: Wc,
    LinearToneMapping: Nu,
    Loader: bt,
    LoaderUtils: Gs,
    LoadingManager: za,
    LoopOnce: Pd,
    LoopPingPong: Dd,
    LoopRepeat: Id,
    LuminanceAlphaFormat: Yu,
    LuminanceFormat: Ju,
    MOUSE: Gy,
    Material: dt,
    MaterialLoader: zh,
    Math: M0,
    MathUtils: M0,
    Matrix3: lt,
    Matrix4: pe,
    MaxEquation: ol,
    Mesh: st,
    MeshBasicMaterial: hn,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshFaceMaterial: A0,
    MeshLambertMaterial: Ia,
    MeshMatcapMaterial: Da,
    MeshNormalMaterial: Pa,
    MeshPhongMaterial: La,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshToonMaterial: Ra,
    MinEquation: sl,
    MirroredRepeatWrapping: Bs,
    MixOperation: Du,
    MultiMaterial: C0,
    MultiplyBlending: rl,
    MultiplyOperation: Vs,
    NearestFilter: rt,
    NearestMipMapLinearFilter: Yy,
    NearestMipMapNearestFilter: Jy,
    NearestMipmapLinearFilter: na,
    NearestMipmapNearestFilter: ta,
    NeverDepth: Eu,
    NeverStencilFunc: o0,
    NoBlending: vn,
    NoColors: S0,
    NoToneMapping: _n,
    NormalAnimationBlendMode: ua,
    NormalBlending: sr,
    NotEqualDepth: Iu,
    NotEqualStencilFunc: u0,
    NumberKeyframeTrack: Ar,
    Object3D: Ne,
    ObjectLoader: uy,
    ObjectSpaceNormalMap: zd,
    OctahedronBufferGeometry: Ii,
    OctahedronGeometry: Ii,
    OneFactor: yu,
    OneMinusDstAlphaFactor: bu,
    OneMinusDstColorFactor: Su,
    OneMinusSrcAlphaFactor: Vc,
    OneMinusSrcColorFactor: _u,
    OrthographicCamera: Fr,
    PCFShadowMap: Hc,
    PCFSoftShadowMap: fu,
    PMREMGenerator: ah,
    ParametricGeometry: iv,
    Particle: R0,
    ParticleBasicMaterial: D0,
    ParticleSystem: P0,
    ParticleSystemMaterial: F0,
    Path: gr,
    PerspectiveCamera: ut,
    Plane: Wt,
    PlaneBufferGeometry: Pi,
    PlaneGeometry: Pi,
    PlaneHelper: zy,
    PointCloud: L0,
    PointCloudMaterial: I0,
    PointLight: Ga,
    PointLightHelper: Ry,
    Points: zr,
    PointsMaterial: jn,
    PolarGridHelper: Dy,
    PolyhedronBufferGeometry: an,
    PolyhedronGeometry: an,
    PositionalAudio: xy,
    PropertyBinding: ke,
    PropertyMixer: Xh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    Quaternion: gt,
    QuaternionKeyframeTrack: Wi,
    QuaternionLinearInterpolant: Dh,
    REVISION: ca,
    RGBADepthPacking: Bd,
    RGBAFormat: ct,
    RGBAIntegerFormat: ed,
    RGBA_ASTC_10x10_Format: fd,
    RGBA_ASTC_10x5_Format: hd,
    RGBA_ASTC_10x6_Format: ud,
    RGBA_ASTC_10x8_Format: dd,
    RGBA_ASTC_12x10_Format: pd,
    RGBA_ASTC_12x12_Format: md,
    RGBA_ASTC_4x4_Format: nd,
    RGBA_ASTC_5x4_Format: id,
    RGBA_ASTC_5x5_Format: rd,
    RGBA_ASTC_6x5_Format: sd,
    RGBA_ASTC_6x6_Format: od,
    RGBA_ASTC_8x5_Format: ad,
    RGBA_ASTC_8x6_Format: ld,
    RGBA_ASTC_8x8_Format: cd,
    RGBA_BPTC_Format: gd,
    RGBA_ETC2_EAC_Format: gl,
    RGBA_PVRTC_2BPPV1_Format: pl,
    RGBA_PVRTC_4BPPV1_Format: fl,
    RGBA_S3TC_DXT1_Format: ll,
    RGBA_S3TC_DXT3_Format: cl,
    RGBA_S3TC_DXT5_Format: hl,
    RGBFormat: Gn,
    RGBIntegerFormat: Ku,
    RGB_ETC1_Format: td,
    RGB_ETC2_Format: ml,
    RGB_PVRTC_2BPPV1_Format: dl,
    RGB_PVRTC_4BPPV1_Format: ul,
    RGB_S3TC_DXT1_Format: al,
    RGFormat: ju,
    RGIntegerFormat: Qu,
    RawShaderMaterial: Gi,
    Ray: Cn,
    Raycaster: Ey,
    RectAreaLight: Xa,
    RedFormat: Zu,
    RedIntegerFormat: $u,
    ReinhardToneMapping: Bu,
    RepeatWrapping: Ns,
    ReplaceStencilOp: e0,
    ReverseSubtractEquation: gu,
    RingBufferGeometry: br,
    RingGeometry: br,
    SRGB8_ALPHA8_ASTC_10x10_Format: Cd,
    SRGB8_ALPHA8_ASTC_10x5_Format: Td,
    SRGB8_ALPHA8_ASTC_10x6_Format: Ed,
    SRGB8_ALPHA8_ASTC_10x8_Format: Ad,
    SRGB8_ALPHA8_ASTC_12x10_Format: Ld,
    SRGB8_ALPHA8_ASTC_12x12_Format: Rd,
    SRGB8_ALPHA8_ASTC_4x4_Format: xd,
    SRGB8_ALPHA8_ASTC_5x4_Format: yd,
    SRGB8_ALPHA8_ASTC_5x5_Format: vd,
    SRGB8_ALPHA8_ASTC_6x5_Format: _d,
    SRGB8_ALPHA8_ASTC_6x6_Format: Md,
    SRGB8_ALPHA8_ASTC_8x5_Format: bd,
    SRGB8_ALPHA8_ASTC_8x6_Format: wd,
    SRGB8_ALPHA8_ASTC_8x8_Format: Sd,
    Scene: no,
    SceneUtils: tv,
    ShaderChunk: Fe,
    ShaderLib: qt,
    ShaderMaterial: sn,
    ShadowMaterial: Aa,
    Shape: Xt,
    ShapeBufferGeometry: Di,
    ShapeGeometry: Di,
    ShapePath: Oy,
    ShapeUtils: Jt,
    ShortType: ku,
    Skeleton: ao,
    SkeletonHelper: eu,
    SkinnedMesh: so,
    SmoothShading: Xy,
    Sphere: An,
    SphereBufferGeometry: Fi,
    SphereGeometry: Fi,
    Spherical: Ay,
    SphericalHarmonics3: Ja,
    SplineCurve: uo,
    SpotLight: Ha,
    SpotLightHelper: Ly,
    Sprite: ro,
    SpriteMaterial: io,
    SrcAlphaFactor: Gc,
    SrcAlphaSaturateFactor: Tu,
    SrcColorFactor: vu,
    StaticCopyUsage: x0,
    StaticDrawUsage: hr,
    StaticReadUsage: p0,
    StereoCamera: fy,
    StreamCopyUsage: v0,
    StreamDrawUsage: f0,
    StreamReadUsage: g0,
    StringKeyframeTrack: Kn,
    SubtractEquation: mu,
    SubtractiveBlending: il,
    TOUCH: Vy,
    TangentSpaceNormalMap: Hi,
    TetrahedronBufferGeometry: wr,
    TetrahedronGeometry: wr,
    TextGeometry: rv,
    Texture: ot,
    TextureLoader: Bh,
    TorusBufferGeometry: Sr,
    TorusGeometry: Sr,
    TorusKnotBufferGeometry: Tr,
    TorusKnotGeometry: Tr,
    Triangle: nt,
    TriangleFanDrawMode: Qy,
    TriangleStripDrawMode: jy,
    TrianglesDrawMode: Fd,
    TubeBufferGeometry: Er,
    TubeGeometry: Er,
    UVMapping: ha,
    Uint16Attribute: k0,
    Uint16BufferAttribute: Ys,
    Uint32Attribute: V0,
    Uint32BufferAttribute: Zs,
    Uint8Attribute: U0,
    Uint8BufferAttribute: Qc,
    Uint8ClampedAttribute: O0,
    Uint8ClampedBufferAttribute: Kc,
    Uniform: go,
    UniformsLib: ie,
    UniformsUtils: uf,
    UnsignedByteType: rn,
    UnsignedInt248Type: Ti,
    UnsignedIntType: Ps,
    UnsignedShort4444Type: Vu,
    UnsignedShort5551Type: Wu,
    UnsignedShort565Type: qu,
    UnsignedShortType: cr,
    VSMShadowMap: ir,
    Vector2: X,
    Vector3: M,
    Vector4: Ve,
    VectorKeyframeTrack: Cr,
    Vertex: N0,
    VertexColors: E0,
    VideoTexture: wh,
    WebGL1Renderer: _h,
    WebGLCubeRenderTarget: js,
    WebGLMultipleRenderTargets: Zc,
    WebGLMultisampleRenderTarget: Xs,
    WebGLRenderTarget: At,
    WebGLRenderTargetCube: Q0,
    WebGLRenderer: qe,
    WebGLUtils: Ex,
    WireframeGeometry: Ea,
    WireframeHelper: Z0,
    WrapAroundEnding: Os,
    XHRLoader: $0,
    ZeroCurvatureEnding: Mi,
    ZeroFactor: xu,
    ZeroSlopeEnding: bi,
    ZeroStencilOp: Ky,
    sRGBEncoding: Oi
};
function getWebGLErrorMessage() {
    return getErrorMessage(1);
}
function getErrorMessage(version) {
    var names = {
        1: "WebGL",
        2: "WebGL 2"
    };
    var contexts = {
        1: window.WebGLRenderingContext,
        2: window.WebGL2RenderingContext
    };
    var message = 'Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';
    var element = document.createElement("div");
    element.id = "webglmessage";
    element.style.fontFamily = "monospace";
    element.style.fontSize = "13px";
    element.style.fontWeight = "normal";
    element.style.textAlign = "center";
    element.style.background = "#fff";
    element.style.color = "#000";
    element.style.padding = "1.5em";
    element.style.width = "400px";
    element.style.margin = "5em auto 0";
    if (contexts[version]) {
        message = message.replace("$0", "graphics card");
    } else {
        message = message.replace("$0", "browser");
    }
    message = message.replace("$1", names[version]);
    element.innerHTML = message;
    return element;
}
const pixelRatio = window.devicePixelRatio || 1.0;
function event2scene_pixel(scene, event) {
    const { canvas  } = scene.screen;
    const rect = canvas.getBoundingClientRect();
    const x = (event.clientX - rect.left) * pixelRatio;
    const y = (rect.height - (event.clientY - rect.top)) * pixelRatio;
    return [
        x,
        y
    ];
}
function Identity4x4() {
    return new pe();
}
function in_scene(scene, mouse_event) {
    const [x, y] = event2scene_pixel(scene, mouse_event);
    const [sx, sy, sw, sh] = scene.pixelarea.value;
    return x >= sx && x < sx + sw && y >= sy && y < sy + sh;
}
function attach_3d_camera(canvas, makie_camera, cam3d, scene) {
    if (cam3d === undefined) {
        return;
    }
    const [w, h] = makie_camera.resolution.value;
    const camera = new ut(cam3d.fov, w / h, cam3d.near, cam3d.far);
    const center = new M(...cam3d.lookat);
    camera.up = new M(...cam3d.upvector);
    camera.position.set(...cam3d.eyeposition);
    camera.lookAt(center);
    function update() {
        const view = camera.matrixWorldInverse;
        const projection = camera.projectionMatrix;
        const [width, height] = cam3d.resolution.value;
        const [x, y, z] = camera.position;
        camera.aspect = width / height;
        camera.updateProjectionMatrix();
        camera.updateWorldMatrix();
        makie_camera.update_matrices(view.elements, projection.elements, [
            width,
            height
        ], [
            x,
            y,
            z
        ]);
    }
    cam3d.resolution.on(update);
    function addMouseHandler(domObject, drag, zoomIn, zoomOut) {
        let startDragX = null;
        let startDragY = null;
        function mouseWheelHandler(e) {
            e = window.event || e;
            if (!in_scene(scene, e)) {
                return;
            }
            const delta = Math.sign(e.deltaY);
            if (delta == -1) {
                zoomOut();
            } else if (delta == 1) {
                zoomIn();
            }
            e.preventDefault();
        }
        function mouseDownHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseMoveHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            if (startDragX === null || startDragY === null) return;
            if (drag) drag(e.clientX - startDragX, e.clientY - startDragY);
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseUpHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            mouseMoveHandler.call(this, e);
            startDragX = null;
            startDragY = null;
            e.preventDefault();
        }
        domObject.addEventListener("wheel", mouseWheelHandler);
        domObject.addEventListener("mousedown", mouseDownHandler);
        domObject.addEventListener("mousemove", mouseMoveHandler);
        domObject.addEventListener("mouseup", mouseUpHandler);
    }
    function drag(deltaX, deltaY) {
        const radPerPixel = Math.PI / 450;
        const deltaPhi = radPerPixel * deltaX;
        const deltaTheta = radPerPixel * deltaY;
        const pos = camera.position.sub(center);
        const radius = pos.length();
        let theta = Math.acos(pos.z / radius);
        let phi = Math.atan2(pos.y, pos.x);
        theta = Math.min(Math.max(theta - deltaTheta, 0), Math.PI);
        phi -= deltaPhi;
        pos.x = radius * Math.sin(theta) * Math.cos(phi);
        pos.y = radius * Math.sin(theta) * Math.sin(phi);
        pos.z = radius * Math.cos(theta);
        camera.position.add(center);
        camera.lookAt(center);
        update();
    }
    function zoomIn() {
        camera.position.sub(center).multiplyScalar(0.9).add(center);
        update();
    }
    function zoomOut() {
        camera.position.sub(center).multiplyScalar(1.1).add(center);
        update();
    }
    addMouseHandler(canvas, drag, zoomIn, zoomOut);
}
function mul(a, b) {
    return b.clone().multiply(a);
}
function orthographicprojection(left, right, bottom, top, znear, zfar) {
    return [
        2 / (right - left),
        0,
        0,
        0,
        0,
        2 / (top - bottom),
        0,
        0,
        0,
        0,
        -2 / (zfar - znear),
        0,
        -(right + left) / (right - left),
        -(top + bottom) / (top - bottom),
        -(zfar + znear) / (zfar - znear),
        1
    ];
}
function pixel_space_inverse(w, h, near) {
    return [
        0.5 * w,
        0,
        0,
        0,
        0,
        0.5 * h,
        0,
        0,
        0,
        0,
        near,
        0,
        0.5 * w,
        0.5 * h,
        0,
        1
    ];
}
function relative_space() {
    const relative = Identity4x4();
    relative.fromArray([
        2,
        0,
        0,
        0,
        0,
        2,
        0,
        0,
        0,
        0,
        1,
        0,
        -1,
        -1,
        0,
        1
    ]);
    return relative;
}
class MakieCamera {
    constructor(){
        this.view = new go(Identity4x4());
        this.projection = new go(Identity4x4());
        this.projectionview = new go(Identity4x4());
        this.pixel_space = new go(Identity4x4());
        this.pixel_space_inverse = new go(Identity4x4());
        this.projectionview_inverse = new go(Identity4x4());
        this.relative_space = new go(relative_space());
        this.relative_inverse = new go(relative_space().invert());
        this.clip_space = new go(Identity4x4());
        this.resolution = new go(new X());
        this.eyeposition = new go(new M());
        this.preprojections = {};
    }
    calculate_matrices() {
        const [w, h] = this.resolution.value;
        const nearclip = -10_000;
        this.pixel_space.value.fromArray(orthographicprojection(0, w, 0, h, nearclip, 10_000));
        this.pixel_space_inverse.value.fromArray(pixel_space_inverse(w, h, nearclip));
        const proj_view = mul(this.view.value, this.projection.value);
        this.projectionview.value = proj_view;
        this.projectionview_inverse.value = proj_view.clone().invert();
        Object.keys(this.preprojections).forEach((key)=>{
            const [space, markerspace] = key.split(",");
            this.preprojections[key].value = this.calculate_preprojection_matrix(space, markerspace);
        });
    }
    update_matrices(view, projection, resolution, eyepos) {
        this.view.value.fromArray(view);
        this.projection.value.fromArray(projection);
        this.resolution.value.fromArray(resolution);
        this.eyeposition.value.fromArray(eyepos);
        this.calculate_matrices();
        return;
    }
    clip_to_space(space) {
        if (space === "data") {
            return this.projectionview_inverse.value;
        } else if (space === "pixel") {
            return this.pixel_space_inverse.value;
        } else if (space === "relative") {
            return this.relative_inverse.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    space_to_clip(space) {
        if (space === "data") {
            return this.projectionview.value;
        } else if (space === "pixel") {
            return this.pixel_space.value;
        } else if (space === "relative") {
            return this.relative_space.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    calculate_preprojection_matrix(space, markerspace) {
        const cp = this.clip_to_space(markerspace);
        const sc = this.space_to_clip(space);
        return mul(sc, cp);
    }
    preprojection_matrix(space, markerspace) {
        const key = [
            space,
            markerspace
        ];
        const matrix_uniform = this.preprojections[key];
        if (matrix_uniform) {
            return matrix_uniform;
        } else {
            const matrix = this.calculate_preprojection_matrix(space, markerspace);
            const uniform = new go(matrix);
            this.preprojections[key] = uniform;
            return uniform;
        }
    }
}
const scene_cache = {};
const plot_cache = {};
const TEXTURE_ATLAS = [
    undefined
];
function add_scene(scene_id, three_scene) {
    scene_cache[scene_id] = three_scene;
}
function find_scene(scene_id) {
    return scene_cache[scene_id];
}
function delete_scene(scene_id) {
    const scene = scene_cache[scene_id];
    if (!scene) {
        return;
    }
    while(scene.children.length > 0){
        scene.remove(scene.children[0]);
    }
    delete scene_cache[scene_id];
}
function find_plots(plot_uuids) {
    const plots = [];
    plot_uuids.forEach((id)=>{
        const plot = plot_cache[id];
        if (plot) {
            plots.push(plot);
        }
    });
    return plots;
}
function delete_scenes(scene_uuids, plot_uuids) {
    plot_uuids.forEach((plot_id)=>{
        delete plot_cache[plot_id];
    });
    scene_uuids.forEach((scene_id)=>{
        delete_scene(scene_id);
    });
}
function insert_plot(scene_id, plot_data) {
    const scene = find_scene(scene_id);
    plot_data.forEach((plot)=>{
        add_plot(scene, plot);
    });
}
function delete_plots(scene_id, plot_uuids) {
    console.log(`deleting plots!: ${plot_uuids}`);
    const scene = find_scene(scene_id);
    const plots = find_plots(plot_uuids);
    plots.forEach((p)=>{
        scene.remove(p);
        delete plot_cache[p];
    });
}
function convert_texture(data) {
    const tex = create_texture(data);
    tex.needsUpdate = true;
    tex.minFilter = mod[data.minFilter];
    tex.magFilter = mod[data.magFilter];
    tex.anisotropy = data.anisotropy;
    tex.wrapS = mod[data.wrapS];
    if (data.size.length > 1) {
        tex.wrapT = mod[data.wrapT];
    }
    if (data.size.length > 2) {
        tex.wrapR = mod[data.wrapR];
    }
    return tex;
}
function is_three_fixed_array(value) {
    return value instanceof mod.Vector2 || value instanceof mod.Vector3 || value instanceof mod.Vector4 || value instanceof mod.Matrix4;
}
function to_uniform(data) {
    if (data.type !== undefined) {
        if (data.type == "Sampler") {
            return convert_texture(data);
        }
        throw new Error(`Type ${data.type} not known`);
    }
    if (Array.isArray(data) || ArrayBuffer.isView(data)) {
        if (!data.every((x)=>typeof x === "number")) {
            return data;
        }
        if (data.length == 2) {
            return new mod.Vector2().fromArray(data);
        }
        if (data.length == 3) {
            return new mod.Vector3().fromArray(data);
        }
        if (data.length == 4) {
            return new mod.Vector4().fromArray(data);
        }
        if (data.length == 16) {
            const mat = new mod.Matrix4();
            mat.fromArray(data);
            return mat;
        }
    }
    return data;
}
function deserialize_uniforms(data) {
    const result = {};
    for(const name in data){
        const value = data[name];
        if (value instanceof mod.Uniform) {
            result[name] = value;
        } else {
            const ser = to_uniform(value);
            result[name] = new mod.Uniform(ser);
        }
    }
    return result;
}
function deserialize_plot(data) {
    let mesh;
    if ("instance_attributes" in data) {
        mesh = create_instanced_mesh(data);
    } else {
        mesh = create_mesh(data);
    }
    mesh.name = data.name;
    mesh.frustumCulled = false;
    mesh.matrixAutoUpdate = false;
    mesh.plot_uuid = data.uuid;
    const update_visible = (v)=>{
        mesh.visible = v;
        return;
    };
    update_visible(data.visible.value);
    data.visible.on(update_visible);
    connect_uniforms(mesh, data.uniform_updater);
    connect_attributes(mesh, data.attribute_updater);
    return mesh;
}
const ON_NEXT_INSERT = new Set();
function on_next_insert(f) {
    ON_NEXT_INSERT.add(f);
}
function add_plot(scene, plot_data) {
    const cam = scene.wgl_camera;
    const identity = new mod.Uniform(new mod.Matrix4());
    if (plot_data.cam_space == "data") {
        plot_data.uniforms.view = cam.view;
        plot_data.uniforms.projection = cam.projection;
        plot_data.uniforms.projectionview = cam.projectionview;
        plot_data.uniforms.eyeposition = cam.eyeposition;
    } else if (plot_data.cam_space == "pixel") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.pixel_space;
        plot_data.uniforms.projectionview = cam.pixel_space;
    } else if (plot_data.cam_space == "relative") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.relative_space;
        plot_data.uniforms.projectionview = cam.relative_space;
    } else {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = identity;
        plot_data.uniforms.projectionview = identity;
    }
    plot_data.uniforms.resolution = cam.resolution;
    if (plot_data.uniforms.preprojection) {
        const { space , markerspace  } = plot_data;
        plot_data.uniforms.preprojection = cam.preprojection_matrix(space.value, markerspace.value);
    }
    const p = deserialize_plot(plot_data);
    plot_cache[plot_data.uuid] = p;
    scene.add(p);
    const next_insert = new Set(ON_NEXT_INSERT);
    next_insert.forEach((f)=>f());
}
function connect_uniforms(mesh, updater) {
    updater.on(([name, data])=>{
        if (name === "none") {
            return;
        }
        const uniform = mesh.material.uniforms[name];
        if (uniform.value.isTexture) {
            const im_data = uniform.value.image;
            const [size, tex_data] = data;
            if (tex_data.length == im_data.data.length) {
                im_data.data.set(tex_data);
            } else {
                const old_texture = uniform.value;
                uniform.value = re_create_texture(old_texture, tex_data, size);
                old_texture.dispose();
            }
            uniform.value.needsUpdate = true;
        } else {
            if (is_three_fixed_array(uniform.value)) {
                uniform.value.fromArray(data);
            } else {
                uniform.value = data;
            }
        }
    });
}
function create_texture(data) {
    const buffer = data.data;
    if (data.size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, data.size[0], data.size[1], data.size[2]);
        tex.format = mod[data.three_format];
        tex.type = mod[data.three_type];
        return tex;
    } else {
        const tex_data = buffer == "texture_atlas" ? TEXTURE_ATLAS[0].value : buffer;
        return new mod.DataTexture(tex_data, data.size[0], data.size[1], mod[data.three_format], mod[data.three_type]);
    }
}
function re_create_texture(old_texture, buffer, size) {
    if (size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, size[0], size[1], size[2]);
        tex.format = old_texture.format;
        tex.type = old_texture.type;
        return tex;
    } else {
        return new mod.DataTexture(buffer, size[0], size[1] ? size[1] : 1, old_texture.format, old_texture.type);
    }
}
function BufferAttribute(buffer) {
    const jsbuff = new mod.BufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function InstanceBufferAttribute(buffer) {
    const jsbuff = new mod.InstancedBufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function attach_geometry(buffer_geometry, vertexarrays, faces) {
    for(const name in vertexarrays){
        const buff = vertexarrays[name];
        let buffer;
        if (buff.to_update) {
            buffer = new mod.BufferAttribute(buff.to_update, buff.itemSize);
        } else {
            buffer = BufferAttribute(buff);
        }
        buffer_geometry.setAttribute(name, buffer);
    }
    buffer_geometry.setIndex(faces);
    buffer_geometry.boundingSphere = new mod.Sphere();
    buffer_geometry.boundingSphere.radius = 10000000000000;
    buffer_geometry.frustumCulled = false;
    return buffer_geometry;
}
function attach_instanced_geometry(buffer_geometry, instance_attributes) {
    for(const name in instance_attributes){
        const buffer = InstanceBufferAttribute(instance_attributes[name]);
        buffer_geometry.setAttribute(name, buffer);
    }
}
function recreate_geometry(mesh, vertexarrays, faces) {
    const buffer_geometry = new mod.BufferGeometry();
    attach_geometry(buffer_geometry, vertexarrays, faces);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function recreate_instanced_geometry(mesh) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const vertexarrays = {};
    const instance_attributes = {};
    const faces = [
        ...mesh.geometry.index.array
    ];
    Object.keys(mesh.geometry.attributes).forEach((name)=>{
        const buffer = mesh.geometry.attributes[name];
        const copy = buffer.to_update ? buffer.to_update : buffer.array.map((x)=>x);
        if (buffer.isInstancedBufferAttribute) {
            instance_attributes[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        } else {
            vertexarrays[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        }
    });
    attach_geometry(buffer_geometry, vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, instance_attributes);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function create_material(program) {
    const is_volume = "volumedata" in program.uniforms;
    return new mod.RawShaderMaterial({
        uniforms: deserialize_uniforms(program.uniforms),
        vertexShader: program.vertex_source,
        fragmentShader: program.fragment_source,
        side: is_volume ? mod.BackSide : mod.DoubleSide,
        transparent: true,
        depthTest: !program.overdraw.value,
        depthWrite: !program.transparency.value
    });
}
function create_mesh(program) {
    const buffer_geometry = new mod.BufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function create_instanced_mesh(program) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, program.instance_attributes);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function first(x) {
    return x[Object.keys(x)[0]];
}
function connect_attributes(mesh, updater) {
    const instance_buffers = {};
    const geometry_buffers = {};
    let first_instance_buffer;
    const real_instance_length = [
        0
    ];
    let first_geometry_buffer;
    const real_geometry_length = [
        0
    ];
    function re_assign_buffers() {
        const attributes = mesh.geometry.attributes;
        Object.keys(attributes).forEach((name)=>{
            const buffer = attributes[name];
            if (buffer.isInstancedBufferAttribute) {
                instance_buffers[name] = buffer;
            } else {
                geometry_buffers[name] = buffer;
            }
        });
        first_instance_buffer = first(instance_buffers);
        if (first_instance_buffer) {
            real_instance_length[0] = first_instance_buffer.count;
        }
        first_geometry_buffer = first(geometry_buffers);
        real_geometry_length[0] = first_geometry_buffer.count;
    }
    re_assign_buffers();
    updater.on(([name, new_values, length])=>{
        const buffer = mesh.geometry.attributes[name];
        let buffers;
        let real_length;
        let is_instance = false;
        if (name in instance_buffers) {
            buffers = instance_buffers;
            first_instance_buffer;
            real_length = real_instance_length;
            is_instance = true;
        } else {
            buffers = geometry_buffers;
            first_geometry_buffer;
            real_length = real_geometry_length;
        }
        if (length <= real_length[0]) {
            buffer.set(new_values);
            buffer.needsUpdate = true;
            if (is_instance) {
                mesh.geometry.instanceCount = length;
            }
        } else {
            buffer.to_update = new_values;
            const all_have_same_length = Object.values(buffers).every((x)=>x.to_update && x.to_update.length / x.itemSize == length);
            if (all_have_same_length) {
                if (is_instance) {
                    recreate_instanced_geometry(mesh);
                    re_assign_buffers();
                    mesh.geometry.instanceCount = new_values.length / buffer.itemSize;
                } else {
                    recreate_geometry(mesh, buffers, mesh.geometry.index);
                    re_assign_buffers();
                }
            }
        }
    });
}
function deserialize_scene(data, screen) {
    const scene = new mod.Scene();
    scene.screen = screen;
    const { canvas  } = screen;
    add_scene(data.uuid, scene);
    scene.scene_uuid = data.uuid;
    scene.frustumCulled = false;
    scene.pixelarea = data.pixelarea;
    scene.backgroundcolor = data.backgroundcolor;
    scene.clearscene = data.clearscene;
    scene.visible = data.visible;
    const camera = new MakieCamera();
    scene.wgl_camera = camera;
    function update_cam(camera_matrices) {
        const [view, projection, resolution, eyepos] = camera_matrices;
        camera.update_matrices(view, projection, resolution, eyepos);
    }
    update_cam(data.camera.value);
    if (data.cam3d_state) {
        attach_3d_camera(canvas, camera, data.cam3d_state, scene);
    } else {
        data.camera.on(update_cam);
    }
    data.plots.forEach((plot_data)=>{
        add_plot(scene, plot_data);
    });
    scene.scene_children = data.children.map((child)=>deserialize_scene(child, screen));
    return scene;
}
function delete_plot(plot) {
    delete plot_cache[plot.plot_uuid];
    const { parent  } = plot;
    if (parent) {
        parent.remove(plot);
    }
    plot.geometry.dispose();
    plot.material.dispose();
}
function delete_three_scene(scene) {
    delete scene_cache[scene.scene_uuid];
    scene.scene_children.forEach(delete_three_scene);
    while(scene.children.length > 0){
        delete_plot(scene.children[0]);
    }
}
window.THREE = mod;
const pixelRatio1 = window.devicePixelRatio || 1.0;
function render_scene(scene, picking = false) {
    const { camera , renderer  } = scene.screen;
    const canvas = renderer.domElement;
    if (!document.body.contains(canvas)) {
        console.log("EXITING WGL");
        renderer.state.reset();
        renderer.dispose();
        delete_three_scene(scene);
        return false;
    }
    if (!scene.visible.value) {
        return true;
    }
    renderer.autoClear = scene.clearscene.value;
    const area = scene.pixelarea.value;
    if (area) {
        const [x, y, w, h] = area.map((t)=>t / pixelRatio1);
        renderer.setViewport(x, y, w, h);
        renderer.setScissor(x, y, w, h);
        renderer.setScissorTest(true);
        if (picking) {
            renderer.setClearAlpha(0);
            renderer.setClearColor(new mod.Color(0), 0.0);
        } else {
            renderer.setClearColor(scene.backgroundcolor.value);
        }
        renderer.render(scene, camera);
    }
    return scene.scene_children.every((x)=>render_scene(x, picking));
}
function start_renderloop(three_scene) {
    const { fps  } = three_scene.screen;
    const time_per_frame = 1 / fps * 1000;
    let last_time_stamp = performance.now();
    function renderloop(timestamp) {
        if (timestamp - last_time_stamp > time_per_frame) {
            const all_rendered = render_scene(three_scene);
            if (!all_rendered) {
                return;
            }
            last_time_stamp = performance.now();
        }
        window.requestAnimationFrame(renderloop);
    }
    render_scene(three_scene);
    renderloop();
}
function throttle_function(func, delay) {
    let prev = 0;
    let future_id = undefined;
    function inner_throttle(...args) {
        const now = new Date().getTime();
        if (future_id !== undefined) {
            clearTimeout(future_id);
            future_id = undefined;
        }
        if (now - prev > delay) {
            prev = now;
            return func(...args);
        } else {
            future_id = setTimeout(()=>inner_throttle(...args), now - prev + 1);
        }
    }
    return inner_throttle;
}
function threejs_module(canvas, comm, width, height, resize_to_body) {
    let context = canvas.getContext("webgl2", {
        preserveDrawingBuffer: true
    });
    if (!context) {
        console.warn("WebGL 2.0 not supported by browser, falling back to WebGL 1.0 (Volume plots will not work)");
        context = canvas.getContext("webgl", {
            preserveDrawingBuffer: true
        });
    }
    if (!context) {
        return;
    }
    const renderer = new mod.WebGLRenderer({
        antialias: true,
        canvas: canvas,
        context: context,
        powerPreference: "high-performance"
    });
    renderer.setClearColor("#ffffff");
    renderer.setPixelRatio(pixelRatio1);
    renderer.setSize(width / pixelRatio1, height / pixelRatio1);
    const mouse_callback = (x, y)=>comm.notify({
            mouseposition: [
                x,
                y
            ]
        });
    const notify_mouse_throttled = throttle_function(mouse_callback, 40);
    function mousemove(event) {
        var rect = canvas.getBoundingClientRect();
        var x = (event.clientX - rect.left) * pixelRatio1;
        var y = (event.clientY - rect.top) * pixelRatio1;
        notify_mouse_throttled(x, y);
        return false;
    }
    canvas.addEventListener("mousemove", mousemove);
    function mousedown(event) {
        comm.notify({
            mousedown: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mousedown", mousedown);
    function mouseup(event) {
        comm.notify({
            mouseup: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mouseup", mouseup);
    function wheel(event) {
        comm.notify({
            scroll: [
                event.deltaX,
                -event.deltaY
            ]
        });
        event.preventDefault();
        return false;
    }
    canvas.addEventListener("wheel", wheel);
    function keydown(event) {
        comm.notify({
            keydown: event.code
        });
        return false;
    }
    canvas.addEventListener("keydown", keydown);
    function keyup(event) {
        comm.notify({
            keyup: event.code
        });
        return false;
    }
    canvas.addEventListener("keyup", keyup);
    function contextmenu(event) {
        comm.notify({
            keyup: "delete_keys"
        });
        return false;
    }
    canvas.addEventListener("contextmenu", (e)=>e.preventDefault());
    canvas.addEventListener("focusout", contextmenu);
    function resize_callback() {
        const bodyStyle = window.getComputedStyle(document.body);
        const width_padding = parseInt(bodyStyle.paddingLeft, 10) + parseInt(bodyStyle.paddingRight, 10) + parseInt(bodyStyle.marginLeft, 10) + parseInt(bodyStyle.marginRight, 10);
        const height_padding = parseInt(bodyStyle.paddingTop, 10) + parseInt(bodyStyle.paddingBottom, 10) + parseInt(bodyStyle.marginTop, 10) + parseInt(bodyStyle.marginBottom, 10);
        const width = (window.innerWidth - width_padding) * pixelRatio1;
        const height = (window.innerHeight - height_padding) * pixelRatio1;
        comm.notify({
            resize: [
                width,
                height
            ]
        });
    }
    if (resize_to_body) {
        const resize_callback_throttled = throttle_function(resize_callback, 100);
        window.addEventListener("resize", (event)=>resize_callback_throttled());
        resize_callback_throttled();
    }
    return renderer;
}
function create_scene(wrapper, canvas, canvas_width, scenes, comm, width, height, texture_atlas_obs, fps, resize_to_body) {
    const renderer = threejs_module(canvas, comm, width, height, resize_to_body);
    TEXTURE_ATLAS[0] = texture_atlas_obs;
    if (renderer) {
        const camera = new mod.PerspectiveCamera(45, 1, 0, 100);
        camera.updateProjectionMatrix();
        const size = new mod.Vector2();
        renderer.getDrawingBufferSize(size);
        const picking_target = new mod.WebGLRenderTarget(size.x, size.y);
        const screen = {
            renderer,
            picking_target,
            camera,
            fps,
            canvas
        };
        const three_scene = deserialize_scene(scenes, screen);
        console.log(three_scene);
        start_renderloop(three_scene);
        canvas_width.on((w_h)=>{
            const pixelRatio = renderer.getPixelRatio();
            renderer.setSize(w_h[0] / pixelRatio, w_h[1] / pixelRatio);
        });
    } else {
        const warning = getWebGLErrorMessage();
        wrapper.appendChild(warning);
    }
}
function set_picking_uniforms(scene, last_id, picking, picked_plots, plots, id_to_plot) {
    scene.children.forEach((plot, index)=>{
        const { material  } = plot;
        const { uniforms  } = material;
        if (picking) {
            uniforms.object_id.value = last_id + index;
            uniforms.picking.value = true;
            material.blending = mod.NoBlending;
        } else {
            uniforms.picking.value = false;
            material.blending = mod.NormalBlending;
            const id = uniforms.object_id.value;
            if (id in picked_plots) {
                plots.push([
                    plot,
                    picked_plots[id]
                ]);
                id_to_plot[id] = plot;
            }
        }
    });
    let next_id = last_id + scene.children.length;
    scene.scene_children.forEach((scene)=>{
        next_id = set_picking_uniforms(scene, next_id, picking, picked_plots, plots, id_to_plot);
    });
    return next_id;
}
function pick_native(scene, x, y, w, h) {
    const { renderer , picking_target  } = scene.screen;
    renderer.setRenderTarget(picking_target);
    set_picking_uniforms(scene, 1, true);
    render_scene(scene, true);
    renderer.setRenderTarget(null);
    const nbytes = w * h * 4;
    const pixel_bytes = new Uint8Array(nbytes);
    renderer.readRenderTargetPixels(picking_target, x, y, w, h, pixel_bytes);
    const picked_plots = {};
    const picked_plots_array = [];
    const reinterpret_view = new DataView(pixel_bytes.buffer);
    for(let i = 0; i < pixel_bytes.length / 4; i++){
        const id = reinterpret_view.getUint16(i * 4);
        const index = reinterpret_view.getUint16(i * 4 + 2);
        picked_plots_array.push([
            id,
            index
        ]);
        picked_plots[id] = index;
    }
    const plots = [];
    const id_to_plot = {};
    set_picking_uniforms(scene, 0, false, picked_plots, plots, id_to_plot);
    const picked_plots_matrix = picked_plots_array.map(([id, index])=>{
        const p = id_to_plot[id];
        return [
            p ? p.plot_uuid : null,
            index
        ];
    });
    const plot_matrix = {
        data: picked_plots_matrix,
        size: [
            w,
            h
        ]
    };
    return [
        plot_matrix,
        plots
    ];
}
function pick_closest(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, _] = pick_native(scene, x0, y0, dx, dy);
    const plot_matrix = plot_data.data;
    let min_dist = range ^ 2;
    let selection = [
        null,
        0
    ];
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            if (d < min_dist && plot_uuid) {
                min_dist = d;
                selection = [
                    plot_uuid,
                    index
                ];
            }
        }
    }
    return selection;
}
function pick_sorted(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return null;
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, selected] = pick_native(scene, x0, y0, dx, dy);
    if (selected.length == 0) {
        return null;
    }
    const plot_matrix = plot_data.data;
    const distances = selected.map((x)=>range ^ 2);
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            const plot_index = selected.findIndex((x)=>x[0].plot_uuid == plot_uuid);
            if (plot_index >= 0 && d < distances[plot_index]) {
                distances[plot_index] = d;
            }
        }
    }
    const sorted_indices = Array.from(Array(distances.length).keys()).sort((a, b)=>distances[a] < distances[b] ? -1 : distances[b] < distances[a] | 0);
    return sorted_indices.map((idx)=>{
        const [plot, index] = selected[idx];
        return [
            plot.plot_uuid,
            index
        ];
    });
}
function pick_native_uuid(scene, x, y, w, h) {
    const [_, picked_plots] = pick_native(scene, x, y, w, h);
    return picked_plots.map(([p, index])=>[
            p.plot_uuid,
            index
        ]);
}
function pick_native_matrix(scene, x, y, w, h) {
    const [matrix, _] = pick_native(scene, x, y, w, h);
    return matrix;
}
function register_popup(popup, scene, plots_to_pick, callback) {
    if (!scene || !scene.screen) {
        return;
    }
    const { canvas  } = scene.screen;
    canvas.addEventListener("mousedown", (event)=>{
        if (!popup.classList.contains("show")) {
            popup.classList.add("show");
        }
        popup.style.left = event.pageX + "px";
        popup.style.top = event.pageY + "px";
        const [x, y] = event2scene_pixel(scene, event);
        const [_, picks] = pick_native(scene, x, y, 1, 1);
        if (picks.length == 1) {
            const [plot, index] = picks[0];
            if (plots_to_pick.has(plot.plot_uuid)) {
                const result = callback(plot, index);
                if (typeof result === "string" || result instanceof String) {
                    popup.innerText = result;
                } else {
                    popup.innerHTML = result;
                }
            }
        } else {
            popup.classList.remove("show");
        }
    });
    canvas.addEventListener("keyup", (event)=>{
        if (event.key === "Escape") {
            popup.classList.remove("show");
        }
    });
}
window.WGL = {
    deserialize_scene,
    threejs_module,
    start_renderloop,
    delete_plots,
    insert_plot,
    find_plots,
    delete_scene,
    find_scene,
    scene_cache,
    plot_cache,
    delete_scenes,
    create_scene,
    event2scene_pixel,
    on_next_insert,
    register_popup,
    render_scene
};
export { deserialize_scene as deserialize_scene, threejs_module as threejs_module, start_renderloop as start_renderloop, delete_plots as delete_plots, insert_plot as insert_plot, find_plots as find_plots, delete_scene as delete_scene, find_scene as find_scene, scene_cache as scene_cache, plot_cache as plot_cache, delete_scenes as delete_scenes, create_scene as create_scene, event2scene_pixel as event2scene_pixel, on_next_insert as on_next_insert };
export { render_scene as render_scene };
export { pick_native as pick_native };
export { pick_closest as pick_closest };
export { pick_sorted as pick_sorted };
export { pick_native_uuid as pick_native_uuid };
export { pick_native_matrix as pick_native_matrix };
export { register_popup as register_popup };

" type="module"></script>
      <script src="https://cdn.tailwindcss.com/3.3.1"></script>
      <script>    window.define = window.__define;
    window.require = window.__require;
    window.__define = undefined;
    window.__require = undefined;
</script>
    </div>
  </div>
  <div class="markdown-body" data-jscall-id="27">
    <script src="data:application/javascript;base64,    JSServe.lock_loading(() => {
        return JSServe.fetch_binary('data:application/octet-stream;base64,kscsapPZJDg5MDRjMWNmLTU3YmItNGU0Ny1hYzhiLTZmOWRlNDUyNjYxY4Cjc3VigqdwYXlsb2FklcgCk2uSyAEbapPZJDg5MDRjMWNmLTU3YmItNGU0Ny1hYzhiLTZmOWRlNDUyNjYxY4O0MTIxNjA0NjcxNzQxMjA5ODQwMDLHF2WStDEyMTYwNDY3MTc0MTIwOTg0MDAyAbM3NTQ4MjY2MTgyNjcyMTE1NDM2xxZlkrM3NTQ4MjY2MTgyNjcyMTE1NDM2AbMzNzgxMzQwOTQ4MzI3NzExNjk5x3xlkrMzNzgxMzQwOTQ4MzI3NzExNjk53ABkAQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiMkJSYnKCkqKywtLi8wMTIzNDU2Nzg5Ojs8PT4/QEFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaW1xdXl9gYWJjZKNzdWKDo29ic8cUaLM3NTQ4MjY2MTgyNjcyMTE1NDM2p3BheWxvYWTIAUBmk4KzMzE1MjE0MzYzMzM2NzU3NjkzMccUaLMzNzgxMzQwOTQ4MzI3NzExNjk5szg0MjE5MzMzMDQyNjA0ODQ1NjjHFWi0MTIxNjA0NjcxNzQxMjA5ODQwMDLZp3JldHVybiAoaW5kZXgpID0+IHsKICAgIGNvbnN0IHZhbHVlcyA9IF9fbG9va3VwX2ludGVycG9sYXRlZCgnMzE1MjE0MzYzMzM2NzU3NjkzMScpLnZhbHVlCiAgICBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzg0MjE5MzMzMDQyNjA0ODQ1NjgnKS5ub3RpZnkodmFsdWVzW2luZGV4IC0gMV0pCn0K2TwvaG9tZS9ydW5uZXIvLmp1bGlhL3BhY2thZ2VzL0pTU2VydmUvdHVERFkvc3JjL3dpZGdldHMuamw6NTWobXNnX3R5cGWhMcgBXGuSx15qk9kkODkwNGMxY2YtNTdiYi00ZTQ3LWFjOGItNmY5ZGU0NTI2NjFjgbQxODA3OTEyMDExMTM0MTQxOTUxOccaZZK0MTgwNzkxMjAxMTEzNDE0MTk1MTmjMTAwo3N1YoOjb2JzxxVotDE4MDc5MTIwMTExMzQxNDE5NTE5p3BheWxvYWTHx2aTgNlrcmV0dXJuIHZhbHVlPT4gSlNTZXJ2ZS51cGRhdGVfbm9kZV9hdHRyaWJ1dGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSIzMCJdJyksICdtYXgnLCB2YWx1ZSnZVi9ob21lL3J1bm5lci8uanVsaWEvcGFja2FnZXMvSlNTZXJ2ZS90dUREWS9zcmMvcmVuZGVyaW5nL2h5cGVyc2NyaXB0X2ludGVncmF0aW9uLmpsOjkxqG1zZ190eXBloTHIAVxrksdcapPZJDg5MDRjMWNmLTU3YmItNGU0Ny1hYzhiLTZmOWRlNDUyNjYxY4G0MTQ3MTc3Nzg4Njk1NTkyODc3NDLHGGWStDE0NzE3Nzc4ODY5NTU5Mjg3NzQyoTGjc3Vig6NvYnPHFWi0MTQ3MTc3Nzg4Njk1NTkyODc3NDKncGF5bG9hZMfJZpOA2W1yZXR1cm4gdmFsdWU9PiBKU1NlcnZlLnVwZGF0ZV9ub2RlX2F0dHJpYnV0ZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjMwIl0nKSwgJ3ZhbHVlJywgdmFsdWUp2VYvaG9tZS9ydW5uZXIvLmp1bGlhL3BhY2thZ2VzL0pTU2VydmUvdHVERFkvc3JjL3JlbmRlcmluZy9oeXBlcnNjcmlwdF9pbnRlZ3JhdGlvbi5qbDo5Mahtc2dfdHlwZaExyQAVkxlrksg2bWqT2SQ4OTA0YzFjZi01N2JiLTRlNDctYWM4Yi02ZjlkZTQ1MjY2MWPeAQS0MTMwODIzMzcwMDkzNDA4NDgyMTbHF2WStDEzMDgyMzM3MDA5MzQwODQ4MjE2wrQxNDk3MzU4MzU1NzkyMzU1Nzc1NMcXZZK0MTQ5NzM1ODM1NTc5MjM1NTc3NTTDtDE1MjE4MDg0MDQxNzI1MTA3MjE2xxxlkrQxNTIxODA4NDA0MTcyNTEwNzIxNqVwaXhlbLM2NDcwMDAzOTMwODYwNjIzMjAwxxZlkrM2NDcwMDAzOTMwODYwNjIzMjAww7M3ODE2NTM5MDQ1MzgzMTA3NzExxxllkrM3ODE2NTM5MDQ1MzgzMTA3NzExk6CQALQxMTczNjE0ODQxMTc5NDg0MjEwNccXZZK0MTE3MzYxNDg0MTE3OTQ4NDIxMDXCszc2MDY0NzIyMTMwMTA3MDE4OTnHGmWSszc2MDY0NzIyMTMwMTA3MDE4OTmkZGF0YbQxMTI5Nzg3NzUxNjkzNTk4NzE0NMcXZZK0MTEyOTc4Nzc1MTY5MzU5ODcxNDTCszM3NzA3NDEyNjk2ODI2MjA3ODfHFmWSszM3NzA3NDEyNjk2ODI2MjA3ODfCtDExNzI1MzMwMjI1NzA4OTY3NDY3xx1lkrQxMTcyNTMzMDIyNTcwODk2NzQ2N5Kkbm9uZZC0MTU4Njg1NzE0NDQwMzY4NjI0MjnHG2WStDE1ODY4NTcxNDQ0MDM2ODYyNDI5pGRhdGGyNDQzMTM0NDk1MzcyMTQ3NzM0xxtlkrI0NDMxMzQ0OTUzNzIxNDc3MzSSpG5vbmWQsjYwNDE5OTQzNDgwODExMTc4NccYZZKyNjA0MTk5NDM0ODA4MTExNzg1k6CQALM0NDcyMjkzNDIyNzE0MzczMTgyxxxlkrM0NDcyMjkzNDIyNzE0MzczMTgykqRub25lkLQxMzkxMjQxMDc3OTA4NjM3NzYyMMcbZZK0MTM5MTI0MTA3NzkwODYzNzc2MjCkZGF0YbQxODEzMTI2MTI0NjE2NDg1MjMwN8cxZZK0MTgxMzEyNjEyNDYxNjQ4NTIzMDfHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAACzOTU3MDk2ODEyOTU3NTg5NTI4OMcaZZKzOTU3MDk2ODEyOTU3NTg5NTI4OKRkYXRhtDEzNjQyNjYwNjI3MDI1MDU5NTkzxxtlkrQxMzY0MjY2MDYyNzAyNTA1OTU5M6RkYXRhsjk3MzczMTkwNzgwNzEzMDQzNscvZZKyOTczNzMxOTA3ODA3MTMwNDM2xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszMyNTE4OTkyMzU0NTIwMjMyNTjHHGWSszMyNTE4OTkyMzU0NTIwMjMyNTiSpG5vbmWQtDExMzkzNjQ2OTIyMjQwOTE3MzczxxplkrQxMTM5MzY0NjkyMjI0MDkxNzM3M5OgkACzMzg0OTI4ODUzMDQ0NDg5MzI0NscZZZKzMzg0OTI4ODUzMDQ0NDg5MzI0NpOgkACzNDMzNjM1NzQ5NzMyMzQ5NTMyMMcWZZKzNDMzNjM1NzQ5NzMyMzQ5NTMyMMK0MTUyODkzNjM0NDk5OTkzNTY2MzfHF2WStDE1Mjg5MzYzNDQ5OTk5MzU2NjM3w7QxNTQ4MDM0Njg0NTAzMDY3NzA1OccxZZK0MTU0ODAzNDY4NDUwMzA2NzcwNTnHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAACzODQ3MDk2MDgwOTk1MTIzMDg1NscWZZKzODQ3MDk2MDgwOTk1MTIzMDg1NsKzNzUzOTE0MzkyMzQwMDE5MTY5N8cWZZKzNzUzOTE0MzkyMzQwMDE5MTY5N8O0MTQ4ODY0NDM2ODE0ODE0ODEwMzXHG2WStDE0ODg2NDQzNjgxNDgxNDgxMDM1pGRhdGGzNjg0NDgxNDczOTQ0NjM0MDcwOMccZZKzNjg0NDgxNDczOTQ0NjM0MDcwOJKkbm9uZZCzMTQ2OTUwMjYxMjUxMzgwMTE0MMcWZZKzMTQ2OTUwMjYxMjUxMzgwMTE0MMKzNzU1Njg1MzkxMTc5NDM4OTU2MccaZZKzNzU1Njg1MzkxMTc5NDM4OTU2MaRkYXRhszgzMTgwNjY1Mjg4Mzk3NTM5ODjHFmWSszgzMTgwNjY1Mjg4Mzk3NTM5ODjCszc1MzE0OTAyNDY1Nzc0NTMyMjDHFmWSszc1MzE0OTAyNDY1Nzc0NTMyMjDCszUyNzkwMTg5Njk1MjIxNTI0NDLHFmWSszUyNzkwMTg5Njk1MjIxNTI0NDLDtDE1OTEyMzU1NjI0ODY5NTA4MTAzxxtlkrQxNTkxMjM1NTYyNDg2OTUwODEwM6RkYXRhtDEyNTM5MzkyMTc5MTI1ODY3NDE2x7ZlkrQxMjUzOTM5MjE3OTEyNTg2NzQxNpTHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/x0AXCtcjPAAAAAAAAAAAAAAAAAAAAAAK1yM8AAAAAAAAAAAAAAAAAAAAABe30bgAAAAAAACAvwAAgL8AAACAAACAP9cXAABIQwAASEPHDBcAAIA/AACAPwAAgD+0MTM4NzY3NDI2NDAyMTAwMTMxNTPHGmWStDEzODc2NzQyNjQwMjEwMDEzMTUzk6CQALM5OTM1OTg0NzY1NjEwMjA1NjYxxxxlkrM5OTM1OTg0NzY1NjEwMjA1NjYxkqRub25lkLMyMzEzMTEyNjY5NjMwODU3NjQ1xxplkrMyMzEzMTEyNjY5NjMwODU3NjQ1pGRhdGG0MTAzODQ4NTAxNzk3MTg1NzAzMDPHF2WStDEwMzg0ODUwMTc5NzE4NTcwMzAzw7QxNTA4Nzk0MzA2MTI3OTE4NTAwMMcxZZK0MTUwODc5NDMwNjEyNzkxODUwMDDHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNTYzMjYxMTY0MTA4MjMyMTMxM8cwZZKzNTYzMjYxMTY0MTA4MjMyMTMxM8cYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM1NzYyNzU0NjE0Mzg4MTAyNDIxxxZlkrM1NzYyNzU0NjE0Mzg4MTAyNDIxwrQxMDk2Mjg3NjkyMzYxNDI4MDEwMccaZZK0MTA5NjI4NzY5MjM2MTQyODAxMDGToJAAtDE0OTUwMTU2OTc1NjAzNDU3Mzk0xzFlkrQxNDk1MDE1Njk3NTYwMzQ1NzM5NMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALMzMjQwMDQ2Njc3MTcyMzU4MDE2xxplkrMzMjQwMDQ2Njc3MTcyMzU4MDE2pGRhdGG0MTI0MDk1MjczMjk1NTQzNTIyMDfHMWWStDEyNDA5NTI3MzI5NTU0MzUyMjA3xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszUyMDM2NzQ5NzI4NzE4MDkzMjjHGWWSszUyMDM2NzQ5NzI4NzE4MDkzMjiToJAAtDEyMzQzNDk5MzYzNzQ0ODUwOTU1xxdlkrQxMjM0MzQ5OTM2Mzc0NDg1MDk1NcOzODU0OTY0NjQ0MzIyNjE4ODMwMccWZZKzODU0OTY0NjQ0MzIyNjE4ODMwMcKzOTUzNjcxOTYzMDg2MTA5NzA5MscaZZKzOTUzNjcxOTYzMDg2MTA5NzA5MqRkYXRhtDEwNjYxMDQxMzYxMDY5MjI2MzUyxxdlkrQxMDY2MTA0MTM2MTA2OTIyNjM1MsO0MTQ1MDc0MTM4NjU0MDk4MTg1NjfHF2WStDE0NTA3NDEzODY1NDA5ODE4NTY3wrM2MDY5ODk2MzIwMTAwNDg3MzExxxZlkrM2MDY5ODk2MzIwMTAwNDg3MzExwrM5OTI0NjU2MDM2NTcyMzgxNzg2xxZlkrM5OTI0NjU2MDM2NTcyMzgxNzg2wrMzNzE0Mzc2ODM2NTk3MjMxNzU3xxxlkrMzNzE0Mzc2ODM2NTk3MjMxNzU3kqRub25lkLQxMTUyODQwNTA3NzQ0OTY1Mzc4NccdZZK0MTE1Mjg0MDUwNzc0NDk2NTM3ODWSpG5vbmWQszE2NzUyNjE1NjkwNzUyMjY0NjXHMGWSszE2NzUyNjE1NjkwNzUyMjY0NjXHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTYwMjYyOTk1OTAxODU2NDM3MjXHHWWStDE2MDI2Mjk5NTkwMTg1NjQzNzI1kqRub25lkLM2OTgxNzcyNjA1MTA1NzMwOTUyxxllkrM2OTgxNzcyNjA1MTA1NzMwOTUyk6CQALQxMjQ2OTIxMjY3ODYxNDU3NTAzMccXZZK0MTI0NjkyMTI2Nzg2MTQ1NzUwMzHCsjIwNzM5MzQ5OTUyNzEyNjAzOMcVZZKyMjA3MzkzNDk5NTI3MTI2MDM4wrQxNjMzMTQ0NjE1MDQzOTcwMDA1N8cdZZK0MTYzMzE0NDYxNTA0Mzk3MDAwNTeSpG5vbmWQszkzMjMzNTIxMTQyMjM2NTk5ODTHHGWSszkzMjMzNTIxMTQyMjM2NTk5ODSSpG5vbmWQszQ5NTMyMjAzODY2MDI3ODI1ODPHGWWSszQ5NTMyMjAzODY2MDI3ODI1ODOToJAAtDEyMjYyNjY0MzU1NDU4MTAxOTg1xxdlkrQxMjI2MjY2NDM1NTQ1ODEwMTk4NcK0MTY2NDM0Mzc4NzI4MTAxOTQ1ODDHMWWStDE2NjQzNDM3ODcyODEwMTk0NTgwxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszg5MjQ1MDA0NDA4Mzk4MjM2NTLHG2WSszg5MjQ1MDA0NDA4Mzk4MjM2NTKlcGl4ZWy0MTQ3NDAwMzY1MDU1MTMwNzM3MDXHHGWStDE0NzQwMDM2NTA1NTEzMDczNzA1pXBpeGVsszEyNDE0Mzk4NTc1OTUzMjQ5MjTHFmWSszEyNDE0Mzk4NTc1OTUzMjQ5MjTDtDE3ODQxMzYwODQ0ODU4ODQ2MDM3xxplkrQxNzg0MTM2MDg0NDg1ODg0NjAzN5OgkAC0MTY4MDIyNTI1MDU5MDYzMjMxMzTHG2WStDE2ODAyMjUyNTA1OTA2MzIzMTM0pGRhdGGzNTkyOTA0OTc3MTcyMzIyOTEzOMcWZZKzNTkyOTA0OTc3MTcyMzIyOTEzOMOzNjM4NDEzOTU2NzQxNzg2OTQ4MscWZZKzNjM4NDEzOTU2NzQxNzg2OTQ4MsK0MTA0MjAxMDA5NjI3MzY3MDYwNDTHG2WStDEwNDIwMTAwOTYyNzM2NzA2MDQ0pGRhdGGzODA4NzAzMDY2NTY1MTMxODgzOccnZZKzODA4NzAzMDY2NTY1MTMxODgzOdgVIwAAACsAAACVAAAAjQAAALQxNjcwODc2MTI5OTYwNjc4NzM1OccaZZK0MTY3MDg3NjEyOTk2MDY3ODczNTmToJAAszYxOTczNDgzNzczMDEzODU0NDTHG2WSszYxOTczNDgzNzczMDEzODU0NDSlcGl4ZWy0MTIxNTQ4OTA1OTkzMTcxMjE4MDPHG2WStDEyMTU0ODkwNTk5MzE3MTIxODAzpGRhdGGzNzEwMjg4OTM0OTMyMjAwNTQ4N8ccZZKzNzEwMjg4OTM0OTMyMjAwNTQ4N5Kkbm9uZZC0MTc5Mzg5OTAxOTIwMjE3MDM3NjDHF2WStDE3OTM4OTkwMTkyMDIxNzAzNzYwwrM5Nzk4NzIxNTMzMDUxNjU4MzM5xxplkrM5Nzk4NzIxNTMzMDUxNjU4MzM5pGRhdGG0MTQwMzI5NTgwMzY0MDg3MzE0NDfHF2WStDE0MDMyOTU4MDM2NDA4NzMxNDQ3wrMyNjE1Mzk4Nzc3MzczNzc3ODkxxxZlkrMyNjE1Mzk4Nzc3MzczNzc3ODkxwrMyNDI3MjQ4NjU0MzQxOTQ3OTE1xxllkrMyNDI3MjQ4NjU0MzQxOTQ3OTE1k6CQALQxMTgxMTIyODczODQ0NTMxMjU5NccaZZK0MTE4MTEyMjg3Mzg0NDUzMTI1OTWToJAAszc5Nzc5ODg4ODQ3NTIwNDE3MzXHGWWSszc5Nzc5ODg4ODQ3NTIwNDE3MzWToJAAtDE0ODg0NTU5Nzc0NzA0MjE3NTAxxzFlkrQxNDg4NDU1OTc3NDcwNDIxNzUwMccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNTIyOTM4NjQ2NTA2MDU5ODIxN8cXZZK0MTUyMjkzODY0NjUwNjA1OTgyMTfCtDE3MjMzOTIxMDY2NTQ2OTM1NDY4xzFlkrQxNzIzMzkyMTA2NjU0NjkzNTQ2OMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM3ODI2OTE0Mzk0NTcxOTQ2NzYxxxZlkrM3ODI2OTE0Mzk0NTcxOTQ2NzYxwrM4MDAzNzc2OTYxNDc4NDIxMTEyxzBlkrM4MDAzNzc2OTYxNDc4NDIxMTEyxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszMwNzQ0MTc2ODU0NzI5NDU3NznHGWWSszMwNzQ0MTc2ODU0NzI5NDU3NzmToJAAtDEwMzcxMTY0ODI4MDY4Njk1NzI1xzFlkrQxMDM3MTE2NDgyODA2ODY5NTcyNccYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALM4MTUwNjA4NjMyNjg0NzY0OTQ5xxllkrM4MTUwNjA4NjMyNjg0NzY0OTQ5k6CQALI2MTMzMTkwNjIyNjk1MTEyODLHFWWSsjYxMzMxOTA2MjI2OTUxMTI4MsK0MTYxOTY0NzgyNDYyMDkzMjg3MzfHHWWStDE2MTk2NDc4MjQ2MjA5MzI4NzM3kqRub25lkLQxMDMwMTAyMTQxODE0NjA2MDU4NscXZZK0MTAzMDEwMjE0MTgxNDYwNjA1ODbCtDE4MTc4NTkxMTM1MTAwNTk2OTI4xzFlkrQxODE3ODU5MTEzNTEwMDU5NjkyOMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM4Mjk4NjgwNzI3OTQ2MTMyODUxxxplkrM4Mjk4NjgwNzI3OTQ2MTMyODUxpGRhdGGzMTUwNzQyNjE0NDEyOTgwMTAzN8cwZZKzMTUwNzQyNjE0NDEyOTgwMTAzN8cYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALM2NDA4OTE3ODYxOTgzNzQ2Mjg3xxxlkrM2NDA4OTE3ODYxOTgzNzQ2Mjg3kqRub25lkLMzNzEzMjk3NzY5MDEyNjg0MDQxxxllkrMzNzEzMjk3NzY5MDEyNjg0MDQxk6CQALQxNzkwOTAwNTkxNzIwNjg4MzMwOMcXZZK0MTc5MDkwMDU5MTcyMDY4ODMzMDjCszM1MzAzOTYzNDE4MTM2NzMyMznHGWWSszM1MzAzOTYzNDE4MTM2NzMyMzmToJAAtDEyMTY5NTUxMTE1ODU0MTMwOTIyxxdlkrQxMjE2OTU1MTExNTg1NDEzMDkyMsKzMTUyNjk5MzI0MjA1MDU1ODEyOcccZZKzMTUyNjk5MzI0MjA1MDU1ODEyOZKkbm9uZZCzNTcyMzE4MDkxMzU3NTE0OTI0MccZZZKzNTcyMzE4MDkxMzU3NTE0OTI0MZOgkACzNjY4NzAzMjU1NjE2ODM0ODc0MccbZZKzNjY4NzAzMjU1NjE2ODM0ODc0MaVwaXhlbLMxOTM3NTIxNjQ3MDM4MDY3NDc4xxZlkrMxOTM3NTIxNjQ3MDM4MDY3NDc4wrQxNzY4MTc2Mjc4OTIzMzI4MDAwOccdZZK0MTc2ODE3NjI3ODkyMzMyODAwMDmSpG5vbmWQtDEzMjA0MjcwMTM4ODA5MzgwMjM0xxdlkrQxMzIwNDI3MDEzODgwOTM4MDIzNMO0MTAwMjIzMzExMDU5OTg2NDE2MjnHGmWStDEwMDIyMzMxMTA1OTk4NjQxNjI5k6CQALM1NDQyMDM1MjY1MDcwMjExNTQwxxZlkrM1NDQyMDM1MjY1MDcwMjExNTQwwrMyNzMzODQ1Njk1OTE4ODczMzQ0xzBlkrMyNzMzODQ1Njk1OTE4ODczMzQ0xxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAtDEwMTc3OTEwMDI2NzExMzMwMTI1xxtlkrQxMDE3NzkxMDAyNjcxMTMzMDEyNaRkYXRhtDEwOTMyMTA2NDYzNjMzMTUxNDQxxxplkrQxMDkzMjEwNjQ2MzYzMzE1MTQ0MZOgkACzNDcxMzc0NjY2NTkxNTQ4MzI0NscZZZKzNDcxMzc0NjY2NTkxNTQ4MzI0NpOgkAC0MTY0NjYzMDc4NTk0NTc0ODM5NTTHHWWStDE2NDY2MzA3ODU5NDU3NDgzOTU0kqRub25lkLQxNTE5NDMwODQ0Mzk2MzkyNTU4OccdZZK0MTUxOTQzMDg0NDM5NjM5MjU1ODmSpG5vbmWQszYwNDg4NDM5MzM0Njc5MDA4OTDHMGWSszYwNDg4NDM5MzM0Njc5MDA4OTDHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTI0MzcyNTg5NDIyNDMxMzM3NzPHG2WStDEyNDM3MjU4OTQyMjQzMTMzNzczpGRhdGG0MTQ2MzY3MTA3Mzk5MTE2NDY4MTbHF2WStDE0NjM2NzEwNzM5OTExNjQ2ODE2wrQxNzAzMzUzMzIzMjg3MDQ0Mjg2M8cXZZK0MTcwMzM1MzMyMzI4NzA0NDI4NjPDtDExODU0MDk1MjA2MDAwNTUzOTIxxxdlkrQxMTg1NDA5NTIwNjAwMDU1MzkyMcK0MTUzODk2MjM5OTk1MzkzOTU0MjbHG2WStDE1Mzg5NjIzOTk5NTM5Mzk1NDI2kszIzMizNjQ1NDM2ODg4NzQwNjkzNjc5OMcZZZKzNjQ1NDM2ODg4NzQwNjkzNjc5OJOgkACzNTgzMTAxODc0MDg4NTM0MzkxOMcWZZKzNTgzMTAxODc0MDg4NTM0MzkxOMKzNTI4ODA3MDc2MDMwMDkxMzMxOcccZZKzNTI4ODA3MDc2MDMwMDkxMzMxOZKkbm9uZZC0MTc2NzM4NTY3MzQ2NjkxNjczNDHHF2WStDE3NjczODU2NzM0NjY5MTY3MzQxwrQxNzUyMjQ0NDUzNzg0MTQ0MzEzMccxZZK0MTc1MjI0NDQ1Mzc4NDE0NDMxMzHHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNzg2MzU2OTc5MDg0NDYyMTk4NMcWZZKzNzg2MzU2OTc5MDg0NDYyMTk4NMKzMjA5MTM4NTI5ODU0NzkwMTYyMMcWZZKzMjA5MTM4NTI5ODU0NzkwMTYyMMK0MTM0MzY4NzUyMjQ0Nzg2OTY1MzjHMWWStDEzNDM2ODc1MjI0NDc4Njk2NTM4xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszkwNjk4OTE4NzM2NTA2ODQ5NzDHFmWSszkwNjk4OTE4NzM2NTA2ODQ5NzDDszc4MjE5NDUxMzc5MDMzOTIyNjfHHGWSszc4MjE5NDUxMzc5MDMzOTIyNjeSpG5vbmWQszY4MzU1ODUxNzI1NTA0NjEzODjHHWWSszY4MzU1ODUxNzI1NTA0NjEzODinI0ZGRkZGRrM3NDM2ODg3MTYyMjcyODYyMjU4xxZlkrM3NDM2ODg3MTYyMjcyODYyMjU4wrM1MTEzNjYzMzI2NzI1MTA0NzAxxzBlkrM1MTEzNjYzMzI2NzI1MTA0NzAxxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDExNzg2NjU4NDE0NzgxMTc3MTMwxxdlkrQxMTc4NjY1ODQxNDc4MTE3NzEzMMKzNjc0NDA1NTU4OTMwMzkyODgwOMcaZZKzNjc0NDA1NTU4OTMwMzkyODgwOKRkYXRhszg2MjE5MjE1OTg4Njg5NDU5MTXHFmWSszg2MjE5MjE1OTg4Njg5NDU5MTXCtDExMjgyNTQ1OTE3MjEwNzQ3MzYwxx1lkrQxMTI4MjU0NTkxNzIxMDc0NzM2MJKkbm9uZZCzNTkyNDE3NjE5NDAzODc3OTY2MscwZZKzNTkyNDE3NjE5NDAzODc3OTY2MscYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALQxMzQ4ODUzNDg5MTQyMzQ5NDY5N8coZZK0MTM0ODg1MzQ4OTE0MjM0OTQ2OTfYFQAAAAAAAAAAyAAAAMgAAAC0MTMzMDM5MjcwMDgwMzk2NTg1NDTHF2WStDEzMzAzOTI3MDA4MDM5NjU4NTQ0wrM3NDI5MDM1NjYxMzg5MTczNTY2xxZlkrM3NDI5MDM1NjYxMzg5MTczNTY2w7QxNTczNzgyNDA4MzkxNTI4MTc1N8cbZZK0MTU3Mzc4MjQwODM5MTUyODE3NTekZGF0YbM1NDA1NTkzMzIwMTAwMTMzMjMzxxtlkrM1NDA1NTkzMzIwMTAwMTMzMjMzpXBpeGVsszE1MDgwMjc5ODYwMDQyMjIxNjPHFmWSszE1MDgwMjc5ODYwMDQyMjIxNjPCtDE1MDkxOTMyNzcwMjIyMTM1MzQ5xxplkrQxNTA5MTkzMjc3MDIyMjEzNTM0OZOgkACzODY4NDY1NjU2MjcwNTI0ODEyN8caZZKzODY4NDY1NjU2MjcwNTI0ODEyN6RkYXRhtDE2MDczMDk2ODE4MjU4OTM4ODAyxxdlkrQxNjA3MzA5NjgxODI1ODkzODgwMsK0MTI1MTg3OTk3Mjc0ODA0NTU0ODTHF2WStDEyNTE4Nzk5NzI3NDgwNDU1NDg0wrMzNDQzNjQ2MTAzNjk4NzA3MjAzxxZlkrMzNDQzNjQ2MTAzNjk4NzA3MjAzwrI4OTA1MzU3OTgwNTc3NTI0NDTHFWWSsjg5MDUzNTc5ODA1Nzc1MjQ0NMKzMjMxMzY0NTIyNjI0MzUyMDI5MscWZZKzMjMxMzY0NTIyNjI0MzUyMDI5MsKzNzIzOTQ2NzU0MDg1NDQ5ODkwM8caZZKzNzIzOTQ2NzU0MDg1NDQ5ODkwM6RkYXRhszc4NTkxNjEwNTg0Mzk5OTY3MDjHG2WSszc4NTkxNjEwNTg0Mzk5OTY3MDilcGl4ZWyzNDQ3MjU2OTQzMzM0Mjk3MDE5N8cWZZKzNDQ3MjU2OTQzMzM0Mjk3MDE5N8OzNzA4MjkzMDA0Nzg4MzcyMjk4OcccZZKzNzA4MjkzMDA0Nzg4MzcyMjk4OZKkbm9uZZCzNjE0NzA5NDc5MDMxMzU3NDg4MscWZZKzNjE0NzA5NDc5MDMxMzU3NDg4MsOzMzY3MDYyNjY4OTA4NDY0NzAxMcccZZKzMzY3MDYyNjY4OTA4NDY0NzAxMZKkbm9uZZC0MTgwMDkzNDE5MDIzODU2NTIxMzLHF2WStDE4MDA5MzQxOTAyMzg1NjUyMTMyw7M0OTEzNjE0ODM2MjY2ODU0NDYzxxZlkrM0OTEzNjE0ODM2MjY2ODU0NDYzw7QxMTI0MjE5NzMxNTA4MDQyNTY5NMcaZZK0MTEyNDIxOTczMTUwODA0MjU2OTSToJAAszEzMDU5ODc2NjkxMTc5NTc3NTfHGmWSszEzMDU5ODc2NjkxMTc5NTc3NTekZGF0YbM1OTA4ODk5Njc5MjM2MTI1OTQ4xxZlkrM1OTA4ODk5Njc5MjM2MTI1OTQ4w7QxNTc1Mzk3MzUwMTUxNDI1MTc0NMcaZZK0MTU3NTM5NzM1MDE1MTQyNTE3NDSToJAAszIzMjA5MDY1NDkyMTgwMjAyNzPHFmWSszIzMjA5MDY1NDkyMTgwMjAyNzPCszY1MTI4MjIzMTMxNDE0MDA3NTnHGmWSszY1MTI4MjIzMTMxNDE0MDA3NTmkZGF0YbM2Mzc0ODAxMDIzMzMwMjY5NzMyxzBlkrM2Mzc0ODAxMDIzMzMwMjY5NzMyxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszYwNzQ5ODUxMTY2MzMyOTc1NjfHMGWSszYwNzQ5ODUxMTY2MzMyOTc1NjfHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTY0OTQxMjc3MTQzOTQ2MjgyNjfHG2WStDE2NDk0MTI3NzE0Mzk0NjI4MjY3pGRhdGGzMzQyODQzMTI2NTc4NDI4NjE0NscWZZKzMzQyODQzMTI2NTc4NDI4NjE0NsK0MTczNTY0NDEyMjg4MjQwNTA1MjTHF2WStDE3MzU2NDQxMjI4ODI0MDUwNTI0wrI5NzIxNjA0MjUzNDgzODg3ODXHFWWSsjk3MjE2MDQyNTM0ODM4ODc4NcK0MTczNTIwMDA2MDk2MDIwMTQwNTLHMWWStDE3MzUyMDAwNjA5NjAyMDE0MDUyxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszg4MzI1MjQ1NjIyNjY4OTE2OTTHFmWSszg4MzI1MjQ1NjIyNjY4OTE2OTTCszY2NDYxNTIxOTEwMTYyODYwMTjHHGWSszY2NDYxNTIxOTEwMTYyODYwMTiSpG5vbmWQtDE3NzQ2Nzk2NDMwMjkzMTY1ODg2xxplkrQxNzc0Njc5NjQzMDI5MzE2NTg4NpOgkACzNTczMDM4OTcwMDUwNzI3MzI4MscwZZKzNTczMDM4OTcwMDUwNzI3MzI4MscYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNjMzNjI5NjcxNzgzNzk0Njc0NscXZZK0MTYzMzYyOTY3MTc4Mzc5NDY3NDbCszkxMDAxODg3MTIxNTE0MzY4NjfHFmWSszkxMDAxODg3MTIxNTE0MzY4NjeAtDE2NTM1NzcyMzgwMzEyNDk2ODU2xxdlkrQxNjUzNTc3MjM4MDMxMjQ5Njg1NsOzMjA0ODAzMjA1MjM3MTM0ODczMscdZZKzMjA0ODAzMjA1MjM3MTM0ODczMqcjRkZGRkZGtDExMzE1NjM1MjkxMTQ1ODg4Mjg0xxtlkrQxMTMxNTYzNTI5MTE0NTg4ODI4NKRkYXRhszczNzI0MDMxNjAwNjc3MjA3NzXHHGWSszczNzI0MDMxNjAwNjc3MjA3NzWSpG5vbmWQszc4NzQ4MjQyNTAxMjM1MzI3NDLHGmWSszc4NzQ4MjQyNTAxMjM1MzI3NDKkZGF0YbM0NzUzODQ2MzA0Nzk2OTI1ODc5xxZlkrM0NzUzODQ2MzA0Nzk2OTI1ODc5wrQxNTY0MzEwMDg1MDA0OTE2Mzc0MscbZZK0MTU2NDMxMDA4NTAwNDkxNjM3NDKkZGF0YbQxMzY2OTI2MDMyMzcyNTQ3Nzg4NscXZZK0MTM2NjkyNjAzMjM3MjU0Nzc4ODbCszEwNzc5MzEwNDc0MDA0MzEyMDnHFmWSszEwNzc5MzEwNDc0MDA0MzEyMDnCtDE0MzAzODczMDcwNTYzMjg5OTA0rXRyYWNraW5nLW9ubHm0MTA3ODI4MzUyNzk5Mzk1MDY1NzPHF2WStDEwNzgyODM1Mjc5OTM5NTA2NTczw7QxMzMxODQzNDg1MTM2OTQwMjIyMccXZZK0MTMzMTg0MzQ4NTEzNjk0MDIyMjHDtDE1NjQ5MDQxMjc2MzE5Mzg5MjkzxxplkrQxNTY0OTA0MTI3NjMxOTM4OTI5M5OgkACzNTA4NjUyNzg0MTQ0MTk5ODM0MMcZZZKzNTA4NjUyNzg0MTQ0MTk5ODM0MJOgkACzNzQ1NjgwMjMxNzg4Mjk4ODM2M8cWZZKzNzQ1NjgwMjMxNzg4Mjk4ODM2M8O0MTE2MTE3NTQ5NzgwNjU1OTQ4OTnHHWWStDExNjExNzU0OTc4MDY1NTk0ODk5kqRub25lkLQxNTE0NDczNTgyMTg4MjI2NTE0NscxZZK0MTUxNDQ3MzU4MjE4ODIyNjUxNDbHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNzA2NzU3NDUzNTc2MjAyNjM5N8cWZZKzNzA2NzU3NDUzNTc2MjAyNjM5N8K0MTA1ODIxNjI0NzUzMzgwODY2NTPHHWWStDEwNTgyMTYyNDc1MzM4MDg2NjUzkqRub25lkLQxMzYwMzU3NDEwNTMzMzg4MzY4OccXZZK0MTM2MDM1NzQxMDUzMzM4ODM2ODnCtDE3NzA4NDk4OTUwOTA1Nzg4NTIwxxdlkrQxNzcwODQ5ODk1MDkwNTc4ODUyMMKzNTkzOTQxMDQ2Njc1NTcyOTQwNccwZZKzNTkzOTQxMDQ2Njc1NTcyOTQwNccYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALM3NjI1ODQxNTIwMjQ4NjMyNjY4xzBlkrM3NjI1ODQxNTIwMjQ4NjMyNjY4xxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAszczMDY3NDA2NjM3NzY5OTU4NzLHGmWSszczMDY3NDA2NjM3NzY5OTU4NzKkZGF0YbMxNzY4NTg5OTA0OTQwMjc2NjE0xxllkrMxNzY4NTg5OTA0OTQwMjc2NjE0k6CQALQxNTM4NDExMDY4NDE0MzQ1OTk0NMcXZZK0MTUzODQxMTA2ODQxNDM0NTk5NDTDszU2MTU2Nzk1ODM5MDYxMTgwODXHFmWSszU2MTU2Nzk1ODM5MDYxMTgwODXCtDEyMzg2NzI1NzI3MTA3MDgzOTQ3xxtlkrQxMjM4NjcyNTcyNzEwNzA4Mzk0N6RkYXRhsjQzODQ3MDk2NTAyMzMzMzY0MMcVZZKyNDM4NDcwOTY1MDIzMzMzNjQwwrQxMDUzODI3MTY3OTM2MDkwMTMyNMcXZZK0MTA1MzgyNzE2NzkzNjA5MDEzMjTDtDE3Mjc0MDQ0MDk5MTM3NjAzNzExxzFlkrQxNzI3NDA0NDA5OTEzNzYwMzcxMccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNTcwOTUwNDgwNjg3ODcxODE2NscXZZK0MTU3MDk1MDQ4MDY4Nzg3MTgxNjbCszkzMjI2NTk0ODQxNzM5ODI5MDHHHGWSszkzMjI2NTk0ODQxNzM5ODI5MDGSpG5vbmWQtDE4MTAxNjczODY1OTYzOTA3MTEzxxdlkrQxODEwMTY3Mzg2NTk2MzkwNzExM8KzNTI4Nzc2MzA4MTczMDExMzkwMccwZZKzNTI4Nzc2MzA4MTczMDExMzkwMccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALI5Mzg3OTc0OTQyMDc4MzM0OTLHG2WSsjkzODc5NzQ5NDIwNzgzMzQ5MpKkbm9uZZCzOTMzNjgxOTIwOTU4NDU2NjYxN8ccZZKzOTMzNjgxOTIwOTU4NDU2NjYxN5Kkbm9uZZC0MTA1NTY3NDk4NzYzNjM0NDE3NDXHF2WStDEwNTU2NzQ5ODc2MzYzNDQxNzQ1wrQxMTQ5NDAxMTc1OTg0MjM5OTU0OMcXZZK0MTE0OTQwMTE3NTk4NDIzOTk1NDjCszU3OTU4NzkzNTk3MTkzODA1MDHHHWWSszU3OTU4NzkzNTk3MTkzODA1MDGnI0ZGRkZGRrMzNDAyNTk0MTg3NzczMzc3MTUxxxZlkrMzNDAyNTk0MTg3NzczMzc3MTUxwrI4ODU5Nzc0NTI2MzI5MDk0MjPHFWWSsjg4NTk3NzQ1MjYzMjkwOTQyM8O0MTY0NzM4OTM1MzkzMzQyMDkyMzHHF2WStDE2NDczODkzNTM5MzM0MjA5MjMxwrQxMzgwMjk0NzIwNDU3MDEwMDAwM8cXZZK0MTM4MDI5NDcyMDQ1NzAxMDAwMDPDtDE2MTQ3Mzc4MTU4NTg0ODAzMTYzxx1lkrQxNjE0NzM3ODE1ODU4NDgwMzE2M5Kkbm9uZZCzNDY3NDY0NDEyODI4NzMzNjU2OMcZZZKzNDY3NDY0NDEyODI4NzMzNjU2OJOgkACyMjE2ODE1NTcxMTYwMzg5NDgwxxVlkrIyMTY4MTU1NzExNjAzODk0ODDCszE1MDI1MzU2MTgzMzA2MTE1NjTHFmWSszE1MDI1MzU2MTgzMzA2MTE1NjTCtDExMjY2MzY0MzY2OTE3MzMyODAyxxdlkrQxMTI2NjM2NDM2NjkxNzMzMjgwMsKzNjIzMTQyMzE2NjA4NTEzMTg4MscbZZKzNjIzMTQyMzE2NjA4NTEzMTg4MqVwaXhlbLMyMjM2MDY2MzU1MDc0MDcxOTg3xxplkrMyMjM2MDY2MzU1MDc0MDcxOTg3pGRhdGG0MTUzMzExODIwMTc1NjUyMzk4MzPHG2WStDE1MzMxMTgyMDE3NTY1MjM5ODMzpGRhdGGzMjA3NDkwMjkwOTU5NDY1ODc1NMcZZZKzMjA3NDkwMjkwOTU5NDY1ODc1NJOgkAC0MTgxNTM5MTA3MzQ3MzYwOTIyNjHHeWWStDE4MTUzOTEwNzM0NzM2MDkyMjYxx2AWAAAAAAEAAAAEAAAABAAAAAEAAAAFAAAAAQAAAAIAAAAFAAAABQAAAAIAAAAGAAAAAgAAAAMAAAAGAAAABgAAAAMAAAAHAAAAAwAAAAAAAAAHAAAABwAAAAAAAAAEAAAAtDEzNDQwMDY1MzM3MTIyNDMzOTY2xx1lkrQxMzQ0MDA2NTMzNzEyMjQzMzk2NpKkbm9uZZCzMzcyNTg5Mjg4NzcyMjAyMDcwOMcWZZKzMzcyNTg5Mjg4NzcyMjAyMDcwOMKzMTQyMTA3Mjk0NDY4MDg1ODEzMcccZZKzMTQyMTA3Mjk0NDY4MDg1ODEzMZKkbm9uZZCzNTMzMzUyMDA3MjEyNDQ5NDM4NMcZZZKzNTMzMzUyMDA3MjEyNDQ5NDM4NJOgkAC0MTEwNzYzOTUxNTU1NzAxNTY4OTHHHWWStDExMDc2Mzk1MTU1NTcwMTU2ODkxkqRub25lkLM0NTE4Mzc3MzIwMTY0MzU4MzM3xxllkrM0NTE4Mzc3MzIwMTY0MzU4MzM3k6CQALQxNTk3NDgxODI1OTg1Mjc1MTIzMMcXZZK0MTU5NzQ4MTgyNTk4NTI3NTEyMzDCtDE1Njg1NTIzNTEwMjMyNjA5MDMzxzFlkrQxNTY4NTUyMzUxMDIzMjYwOTAzM8cYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNDg2MzQ1MDQyMzczMTY4NjU4MccXZZK0MTQ4NjM0NTA0MjM3MzE2ODY1ODHCtDE0MDEyNjkwMjQ1ODk3NjAxODI2xyhlkrQxNDAxMjY5MDI0NTg5NzYwMTgyNtgVAAAAAAAAAADIAAAAyAAAALQxNjI4OTU4MTUzMTA2MjMzNTEwMMcXZZK0MTYyODk1ODE1MzEwNjIzMzUxMDDCszU2MjUzNTg1Njk3MjA4MDQyMjbHFmWSszU2MjUzNTg1Njk3MjA4MDQyMjbCtDEyNDIyNTY3NDc0MDE2NDc4OTQxxxdlkrQxMjQyMjU2NzQ3NDAxNjQ3ODk0McKzMzU1ODA0OTE5MjQ5NjQ5OTk0Mce1ZZKzMzU1ODA0OTE5MjQ5NjQ5OTk0MZTHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/x0AXLrroPgAAAAAAAAAAAAAAAAAAAAAuuug+AAAAAAAAAAAAAAAAAAAAABe30bgAAAAAMLpovzC6aL8AAACAAACAP9cXAAAVQwAADUPHDBcAAIA/AACAPwAAgD+0MTgxNDkyMzY3MjAzODQ2NjQwNzfHF2WStDE4MTQ5MjM2NzIwMzg0NjY0MDc3w7MzODU0MzQzNjgyMTc4NDU0NTg2xxZlkrMzODU0MzQzNjgyMTc4NDU0NTg2w7QxMzU2NjIzNjE0OTc0NjU1NjU2NccxZZK0MTM1NjYyMzYxNDk3NDY1NTY1NjXHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTY3OTk1MTkzMjE4NTg1NTk3MjjHF2WStDE2Nzk5NTE5MzIxODU4NTU5NzI4wrQxMDQ1MjU4Mjk3Njk0OTAyNDI1N8e2ZZK0MTA0NTI1ODI5NzY5NDkwMjQyNTeUx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP8dAFwrXIzwAAAAAAAAAAAAAAAAAAAAACtcjPAAAAAAAAAAAAAAAAAAAAAAXt9G4AAAAAAAAgL8AAIC/AAAAgAAAgD/XFwAASEMAAEhDxwwXAACAPwAAgD8AAIA/tDE3ODczODE4NzAwODU2NDkwOTcyxzFlkrQxNzg3MzgxODcwMDg1NjQ5MDk3MscYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM5NjE5MDIxMzcyNjA5MjcyNzM5xxZlkrM5NjE5MDIxMzcyNjA5MjcyNzM5wrI1MTA0MjA3OTYyMTc5MzI2MjfHFWWSsjUxMDQyMDc5NjIxNzkzMjYyN8Kjc3VigqdwYXlsb2FkyQAVXI1mk4WzMTE4NjE5NTM4NjkxMjAwMTAyMscVaLQxNTM4OTYyMzk5OTUzOTM5NTQyNrQxNDAyNTYzNzY4NDc2NTAwMjg2NMcUaLM5MTAwMTg4NzEyMTUxNDM2ODY3szY4Mjk1MTI2NTI0NzYxMjQwNzbHFGizNDMzNjM1NzQ5NzMyMzQ5NTMyMLQxMzA0MTA5Mzg3ODA5ODM4NTIxN4mndmlzaWJsZccVaLQxMDc4MjgzNTI3OTkzOTUwNjU3M6VwbG90c5CvYmFja2dyb3VuZGNvbG9yxxRoszU3OTU4NzkzNTk3MTkzODA1MDGpcGl4ZWxhcmVhxxVotDEzNDg4NTM0ODkxNDIzNDk0Njk3pmNhbWVyYccVaLQxMDQ1MjU4Mjk3Njk0OTAyNDI1N6R1dWlktDE3MDU2MTI3MDcxMDU4MTMxNzYzq2NhbTNkX3N0YXRlwKpjbGVhcnNjZW5lxxVotDE0OTczNTgzNTU3OTIzNTU3NzU0qGNoaWxkcmVukYmndmlzaWJsZccVaLQxNjUzNTc3MjM4MDMxMjQ5Njg1NqVwbG90c9wAH46sdHJhbnNwYXJlbmN5xxRoszc0MzY4ODcxNjIyNzI4NjIyNTilc3BhY2XHFWi0MTAxNzc5MTAwMjY3MTEzMzAxMjWsdmVydGV4YXJyYXlzgahwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAxCAAAsQgAAOEMAACxCAAAMQgAAOEMAADhDAAA4Q6RuYW1luW1lc2gtMTA3MDIzNzQyMjE3MzcyMjA1MzCpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXPeABe+aW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyw6liYWNrbGlnaHTKAAAAAKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAADIwgAAgD+nZGlmZnVzZccMF83MzD7NzMw+zczMPqpjb2xvcnJhbmdlw6dsb3djbGlw2BcAAAAAAAAAAAAAAAAAAAAAqGhpZ2hjbGlw2BcAAAAAAAAAAAAAAAAAAAAAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+pbmFuX2NvbG9y2BcAAAAAAAAAAAAAAAAAAAAAp3BhdHRlcm7CrG5vcm1hbG1hdHJpeMckFwAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAP6J1dtcXAAAAAAAAAACnc2hhZGluZ8Koc3BlY3VsYXLHDBfNzEw+zcxMPs3MTD6nbm9ybWFsc8cMFwAAAAAAAAAAAAAAAKdwaWNraW5nwqlvYmplY3RfaWQArXVuaWZvcm1fY29sb3LYFwAAgD8AAIA/AACAPwAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9ywqlzaGluaW5lc3PKQgAAAKhjb2xvcm1hcMOndmlzaWJsZccUaLMxMjQxNDM5ODU3NTk1MzI0OTI0sWF0dHJpYnV0ZV91cGRhdGVyxxVotDEzODc2NzQyNjQwMjEwMDEzMTUzqG92ZXJkcmF3xxVotDExMjY2MzY0MzY2OTE3MzMyODAyr3VuaWZvcm1fdXBkYXRlcscUaLMzNjcwNjI2Njg5MDg0NjQ3MDExpWZhY2VzxxRoszU5MjQxNzYxOTQwMzg3Nzk2NjKkdXVpZLQxMDcwMjM3NDIyMTczNzIyMDUzMK12ZXJ0ZXhfc291cmNl2hQpI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSBib29sIGNvbG9ybWFwOwpib29sIGdldF9jb2xvcm1hcCgpe3JldHVybiBjb2xvcm1hcDt9CnVuaWZvcm0gdmVjMyBub3JtYWxzOwp2ZWMzIGdldF9ub3JtYWxzKCl7cmV0dXJuIG5vcm1hbHM7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBhdHRlcm47CmJvb2wgZ2V0X3BhdHRlcm4oKXtyZXR1cm4gcGF0dGVybjt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBmbG9hdCBiYWNrbGlnaHQ7CmZsb2F0IGdldF9iYWNrbGlnaHQoKXtyZXR1cm4gYmFja2xpZ2h0O30KdW5pZm9ybSB2ZWMzIGFtYmllbnQ7CnZlYzMgZ2V0X2FtYmllbnQoKXtyZXR1cm4gYW1iaWVudDt9CnVuaWZvcm0gbWF0MyBub3JtYWxtYXRyaXg7Cm1hdDMgZ2V0X25vcm1hbG1hdHJpeCgpe3JldHVybiBub3JtYWxtYXRyaXg7fQp1bmlmb3JtIHZlYzMgbGlnaHRwb3NpdGlvbjsKdmVjMyBnZXRfbGlnaHRwb3NpdGlvbigpe3JldHVybiBsaWdodHBvc2l0aW9uO30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBjb2xvcjsKYm9vbCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIHZlYzQgdW5pZm9ybV9jb2xvcjsKdmVjNCBnZXRfdW5pZm9ybV9jb2xvcigpe3JldHVybiB1bmlmb3JtX2NvbG9yO30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KCgoKb3V0IHZlYzIgZnJhZ191djsKb3V0IHZlYzMgb19ub3JtYWw7Cm91dCB2ZWMzIG9fY2FtZGlyOwpvdXQgdmVjMyBvX2xpZ2h0ZGlyOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQoZmxvYXQgdil7cmV0dXJuIHZlYzQodiwgMC4wLCAwLjAsIDAuMCk7fQp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgdmVydGV4X2NvbG9yKHZlYzMgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcih2ZWM0IGNvbG9yLCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGNvbG9yOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihib29sIHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihmbG9hdCB2YWx1ZSwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgaWYgKGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKSkgewogICAgICAgIHJldHVybiB2ZWM0KHZhbHVlLCAwLjAsIDAuMCwgMC4wKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0KfQoKdm9pZCByZW5kZXIodmVjNCBwb3NpdGlvbl93b3JsZCwgdmVjMyBub3JtYWwsIG1hdDQgdmlldywgbWF0NCBwcm9qZWN0aW9uLCB2ZWMzIGxpZ2h0cG9zaXRpb24pCnsKICAgIC8vIG5vcm1hbCBpbiB3b3JsZCBzcGFjZQogICAgb19ub3JtYWwgPSBnZXRfbm9ybWFsbWF0cml4KCkgKiBub3JtYWw7CiAgICAvLyBwb3NpdGlvbiBpbiB2aWV3IHNwYWNlIChhcyBzZWVuIGZyb20gY2FtZXJhKQogICAgdmVjNCB2aWV3X3BvcyA9IHZpZXcgKiBwb3NpdGlvbl93b3JsZDsKICAgIC8vIHBvc2l0aW9uIGluIGNsaXAgc3BhY2UgKHcvIGRlcHRoKQogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uICogdmlld19wb3M7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKICAgIC8vIGRpcmVjdGlvbiB0byBsaWdodAogICAgb19saWdodGRpciA9IG5vcm1hbGl6ZSh2aWV3KnZlYzQobGlnaHRwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXo7CiAgICAvLyBkaXJlY3Rpb24gdG8gY2FtZXJhCiAgICAvLyBUaGlzIGlzIGVxdWl2YWxlbnQgdG8KICAgIC8vIG5vcm1hbGl6ZSh2aWV3KnZlYzQoZXllcG9zaXRpb24sIDEuMCkgLSB2aWV3X3BvcykueHl6CiAgICAvLyAoYnkgZGVmaW5pdGlvbiBgdmlldyAqIGV5ZXBvc2l0aW9uID0gMGApCiAgICBvX2NhbWRpciA9IG5vcm1hbGl6ZSgtdmlld19wb3MpLnh5ejsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICAvLyBnZXRfKiBnZXRzIHRoZSBnbG9iYWwgaW5wdXRzICh1bmlmb3JtLCBzYW1wbGVyLCBwb3NpdGlvbiBhcnJheSkKICAgIC8vIHRob3NlIGZ1bmN0aW9ucyB3aWxsIGdldCBpbnNlcnRlZCBieSB0aGUgc2hhZGVyIGNyZWF0aW9uIHBpcGVsaW5lCiAgICB2ZWMzIHZlcnRleF9wb3NpdGlvbiA9IHRvdmVjMyhnZXRfcG9zaXRpb24oKSk7CiAgICBpZiAoaXNuYW4odmVydGV4X3Bvc2l0aW9uLnopKSB7CiAgICAgICAgdmVydGV4X3Bvc2l0aW9uLnogPSAwLjA7CiAgICB9CiAgICB2ZWM0IHBvc2l0aW9uX3dvcmxkID0gbW9kZWwgKiB2ZWM0KHZlcnRleF9wb3NpdGlvbiwgMSk7CgogICAgcmVuZGVyKHBvc2l0aW9uX3dvcmxkLCBnZXRfbm9ybWFscygpLCB2aWV3LCBwcm9qZWN0aW9uLCBnZXRfbGlnaHRwb3NpdGlvbigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXYgPSB2ZWMyKDEuMCAtIGZyYWdfdXYueSwgZnJhZ191di54KTsKICAgIGZyYWdfY29sb3IgPSB2ZXJ0ZXhfY29sb3IoZ2V0X2NvbG9yKCksIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9WZXJ0ZXhJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaFVQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIGNvbG9yOwpib29sIGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gdmVjNCB1bmlmb3JtX2NvbG9yOwp2ZWM0IGdldF91bmlmb3JtX2NvbG9yKCl7cmV0dXJuIHVuaWZvcm1fY29sb3I7fQp1bmlmb3JtIGJvb2wgc2hhZGluZzsKYm9vbCBnZXRfc2hhZGluZygpe3JldHVybiBzaGFkaW5nO30KdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKaW4gdmVjMiBmcmFnX3V2OwppbiB2ZWM0IGZyYWdfY29sb3I7CmZsYXQgaW4gaW50IHNhbXBsZV9mcmFnX2NvbG9yOwoKaW4gdmVjMyBvX25vcm1hbDsKaW4gdmVjMyBvX2NhbWRpcjsKaW4gdmVjMyBvX2xpZ2h0ZGlyOwoKdmVjMyBibGlubnBob25nKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIHZlYzMgY29sb3IpewogICAgZmxvYXQgZGlmZl9jb2VmZiA9IG1heChkb3QoTCwgTiksIDAuMCk7CgogICAgLy8gc3BlY3VsYXIgY29lZmZpY2llbnQKICAgIHZlYzMgSCA9IG5vcm1hbGl6ZShMICsgVik7CgogICAgZmxvYXQgc3BlY19jb2VmZiA9IHBvdyhtYXgoZG90KEgsIE4pLCAwLjApLCBnZXRfc2hpbmluZXNzKCkpOwogICAgaWYgKGRpZmZfY29lZmYgPD0gMC4wKQogICAgICAgIHNwZWNfY29lZmYgPSAwLjA7CiAgICAvLyBmaW5hbCBsaWdodGluZyBtb2RlbAogICAgcmV0dXJuIHZlYzMoCiAgICAgICAgZ2V0X2RpZmZ1c2UoKSAqIGRpZmZfY29lZmYgKiBjb2xvciArCiAgICAgICAgZ2V0X3NwZWN1bGFyKCkgKiBzcGVjX2NvZWZmCiAgICApOwp9Cgp2ZWM0IGdldF9jb2xvcih2ZWMzIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIHZlYzQoY29sb3IsIDEuMCk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gZnJhZ19jb2xvcjsgIC8vIGNvbG9yIG5vdCBpbiB1bmlmb3JtCn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfcGF0dGVybigpKSB7CiAgICAgICAgdmVjMiBzaXplID0gdmVjMih0ZXh0dXJlU2l6ZShjb2xvciwgMCkpOwogICAgICAgIHZlYzIgcG9zID0gZ2xfRnJhZ0Nvb3JkLnh5OwogICAgICAgIHJldHVybiB0ZXhlbEZldGNoKGNvbG9yLCBpdmVjMihtb2QocG9zLngsIHNpemUueCksIG1vZChwb3MueSwgc2l6ZS55KSksIDApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwogICAgfQp9CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pe3JldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7fQoKdmVjNCBnZXRfY29sb3JfZnJvbV9jbWFwKGZsb2F0IHZhbHVlLCBzYW1wbGVyMkQgY29sb3JfbWFwLCB2ZWMyIGNvbG9ycmFuZ2UpIHsKICAgIGZsb2F0IGNtaW4gPSBjb2xvcnJhbmdlLng7CiAgICBmbG9hdCBjbWF4ID0gY29sb3JyYW5nZS55OwogICAgaWYgKHZhbHVlIDw9IGNtYXggJiYgdmFsdWUgPj0gY21pbikgewogICAgICAgIC8vIGluIHZhbHVlIHJhbmdlLCBjb250aW51ZSEKICAgIH0gZWxzZSBpZiAodmFsdWUgPCBjbWluKSB7CiAgICAgICAgcmV0dXJuIGdldF9sb3djbGlwKCk7CiAgICB9IGVsc2UgaWYgKHZhbHVlID4gY21heCkgewogICAgICAgIHJldHVybiBnZXRfaGlnaGNsaXAoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaXNuYW4gaXMgYnJva2VuIChvZiBjb3Vyc2UpIC0uLQogICAgICAgIC8vIHNvIGlmIG91dHNpZGUgdmFsdWUgcmFuZ2UgYW5kIG5vdCBzbWFsbGVyL2JpZ2dlciBtaW4vbWF4IHdlIGFzc3VtZSBOYU4KICAgICAgICByZXR1cm4gZ2V0X25hbl9jb2xvcigpOwogICAgfQogICAgZmxvYXQgaTAxID0gY2xhbXAoKHZhbHVlIC0gY21pbikgLyAoY21heCAtIGNtaW4pLCAwLjAsIDEuMCk7CiAgICAvLyAxLzAgY29ycmVzcG9uZHMgdG8gdGhlIGNvcm5lciBvZiB0aGUgY29sb3JtYXAsIHNvIHRvIHByb3Blcmx5IGludGVycG9sYXRlCiAgICAvLyBiZXR3ZWVuIHRoZSBjb2xvcnMsIHdlIG5lZWQgdG8gc2NhbGUgaXQsIHNvIHRoYXQgdGhlIGVuZHMgYXJlIGF0IDEgLSAoc3RlcHNpemUvMikgYW5kIDArKHN0ZXBzaXplLzIpLgogICAgZmxvYXQgc3RlcHNpemUgPSAxLjAgLyBmbG9hdCh0ZXh0dXJlU2l6ZShjb2xvcl9tYXAsIDApKTsKICAgIGkwMSA9ICgxLjAgLSBzdGVwc2l6ZSkgKiBpMDEgKyAwLjUgKiBzdGVwc2l6ZTsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yX21hcCwgdmVjMihpMDEsIDAuMCkpOwp9Cgp2ZWM0IGdldF9jb2xvcihib29sIGNvbG9yLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAoZnJhZ19jb2xvci54LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmcmFnX2NvbG9yOwogICAgfQp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgdmFsdWVzLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBmbG9hdCB2YWx1ZSA9IHRleHR1cmUodmFsdWVzLCB1dikueDsKICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKHZhbHVlLCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgcmV0dXJuIHRleHR1cmUoY29sb3IsIHV2KTsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIHZlYzQgcmVhbF9jb2xvciA9IGdldF9jb2xvcih1bmlmb3JtX2NvbG9yLCBmcmFnX3V2LCBnZXRfY29sb3JyYW5nZSgpLCBjb2xvcm1hcCk7CiAgICB2ZWMzIHNoYWRlZF9jb2xvciA9IHJlYWxfY29sb3IucmdiOwoKICAgIGlmKGdldF9zaGFkaW5nKCkpewogICAgICAgIHZlYzMgTCA9IG5vcm1hbGl6ZShvX2xpZ2h0ZGlyKTsKICAgICAgICB2ZWMzIE4gPSBub3JtYWxpemUob19ub3JtYWwpOwogICAgICAgIHZlYzMgbGlnaHQxID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHZlYzMgbGlnaHQyID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgLUwsIHJlYWxfY29sb3IucmdiKTsKICAgICAgICBzaGFkZWRfY29sb3IgPSBnZXRfYW1iaWVudCgpICogcmVhbF9jb2xvci5yZ2IgKyBsaWdodDEgKyBnZXRfYmFja2xpZ2h0KCkgKiBsaWdodDI7CiAgICB9CgogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAocmVhbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChyZWFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSB2ZWM0KHNoYWRlZF9jb2xvciwgcmVhbF9jb2xvci5hKTsKfQqPrHRyYW5zcGFyZW5jeccUaLM3NDM2ODg3MTYyMjcyODYyMjU4pXNwYWNlxxVotDEwMTc3OTEwMDI2NzExMzMwMTI1rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTc0OTM0ODgyMDg2MDYyMzM5MjCpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAAAApW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAMjCAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMoAAAAAqWxpbmV3aWR0aMoAAAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDrWxpbmV3aWR0aF9lbmTKAAAAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAAAAAKtkZXB0aF9zaGlmdMq3J8WsrWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAAACndmlzaWJsZccUaLMxMjQxNDM5ODU3NTk1MzI0OTI0sWF0dHJpYnV0ZV91cGRhdGVyxxRoszc4MTY1MzkwNDUzODMxMDc3MTGob3ZlcmRyYXfHFWi0MTEyNjYzNjQzNjY5MTczMzI4MDKvdW5pZm9ybV91cGRhdGVyxxNosjQ0MzEzNDQ5NTM3MjE0NzczNKVmYWNlc8cVaLQxNzI3NDA0NDA5OTEzNzYwMzcxMaR1dWlkszc0OTM0ODgyMDg2MDYyMzM5MjCtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAOEMAACxCAAA4QwAAOEMAAAxCAAA4QwAADEIAACxCrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAMQgAALEIAADhDAAAsQgAAOEMAADhDAAAMQgAAOEOPrHRyYW5zcGFyZW5jeccUaLM3ODYzNTY5NzkwODQ0NjIxOTg0pXNwYWNlxxRoszczMDY3NDA2NjM3NzY5OTU4NzKsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtOTY2MzU1NjM0MTg3MzE5MjAyOKljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAI/C9T2lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIMEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIQwAASEOtbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAACPwvU9q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAj8L1Pad2aXNpYmxlxxRoszc1MzkxNDM5MjM0MDAxOTE2OTexYXR0cmlidXRlX3VwZGF0ZXLHFGizNjQ1NDM2ODg4NzQwNjkzNjc5OKhvdmVyZHJhd8cVaLQxMjQ2OTIxMjY3ODYxNDU3NTAzMa91bmlmb3JtX3VwZGF0ZXLHFGizNDQ3MjI5MzQyMjcxNDM3MzE4MqVmYWNlc8cVaLQxNzM1MjAwMDYwOTYwMjAxNDA1MqR1dWlkszk2NjM1NTYzNDE4NzMxOTIwMjitdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoF0YXJ0IAADhD0kWXQgAAOEMAANtCAAA4QxhdD0MAADhDLjoxQwAAOEOtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBdGFydCAAAsQtJFl0IAACxCAADbQgAALEIYXQ9DAAAsQi46MUMAACxCj6x0cmFuc3BhcmVuY3nHFGizNzUzMTQ5MDI0NjU3NzQ1MzIyMKVzcGFjZccUaLM3NjA2NDcyMjEzMDEwNzAxODk5rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEyNzQyNjg2MjY3MTQ2MDExMzg2qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAzcxMPaVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgwQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ61saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAM3MTD2rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAADNzEw9p3Zpc2libGXHE2iyNjEzMzE5MDYyMjY5NTExMjgysWF0dHJpYnV0ZV91cGRhdGVyxxVotDEwOTYyODc2OTIzNjE0MjgwMTAxqG92ZXJkcmF3xxRoszcwNjc1NzQ1MzU3NjIwMjYzOTevdW5pZm9ybV91cGRhdGVyxxRoszY4NDQ4MTQ3Mzk0NDYzNDA3MDilZmFjZXPHFWi0MTUxNDQ3MzU4MjE4ODIyNjUxNDakdXVpZLQxMjc0MjY4NjI2NzE0NjAxMTM4Nq12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXdNFqQgAAOEPoIrlCAAA4Qxfd/EIAADhDoksgQwAAOEOtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHIBd00WpCAAAsQugiuUIAACxCF938QgAALEKiSyBDAAAsQo+sdHJhbnNwYXJlbmN5xxVotDE3MzU2NDQxMjI4ODI0MDUwNTI0pXNwYWNlxxRoszY1MTI4MjIzMTMxNDE0MDA3NTmsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTM3MzM3OTQ5OTg0OTk0NjEyMjapY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAACPwvU9pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACDBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDrWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAj8L1PatkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAI/C9T2ndmlzaWJsZccVaLQxODE0OTIzNjcyMDM4NDY2NDA3N7FhdHRyaWJ1dGVfdXBkYXRlcscVaLQxNTY0OTA0MTI3NjMxOTM4OTI5M6hvdmVyZHJhd8cUaLMxNTAyNTM1NjE4MzMwNjExNTY0r3VuaWZvcm1fdXBkYXRlcscVaLQxNjMzMTQ0NjE1MDQzOTcwMDA1N6VmYWNlc8cUaLMxNjc1MjYxNTY5MDc1MjI2NDY1pHV1aWS0MTM3MzM3OTQ5OTg0OTk0NjEyMjatdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAAOEPpokVCAAA4Q7rookIAADhDAADjQgAAOEOjixFDAAA4Q0WXMUOtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAAAxC6aJFQgAADEK66KJCAAAMQgAA40IAAAxCo4sRQwAADEJFlzFDj6x0cmFuc3BhcmVuY3nHFWi0MTEyOTc4Nzc1MTY5MzU5ODcxNDSlc3BhY2XHFGizODY4NDY1NjU2MjcwNTI0ODEyN6x2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIWxpbmVzZWdtZW50cy0xMjE2NzQyNjM3NTM2MDc3NjMwMaljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAM3MTD2lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIMEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIQwAASEOtbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAADNzEw9q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAzcxMPad2aXNpYmxlxxVotDEyNTE4Nzk5NzI3NDgwNDU1NDg0sWF0dHJpYnV0ZV91cGRhdGVyxxVotDExODExMjI4NzM4NDQ1MzEyNTk1qG92ZXJkcmF3xxRoszYzODQxMzk1Njc0MTc4Njk0ODKvdW5pZm9ybV91cGRhdGVyxxVotDExNzI1MzMwMjI1NzA4OTY3NDY3pWZhY2VzxxVotDE1MDg3OTQzMDYxMjc5MTg1MDAwpHV1aWS0MTIxNjc0MjYzNzUzNjA3NzYzMDGtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAOEMX3YJCAAA4Q130wkIAADhD0oUBQwAAOEN0kSFDrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAMQhfdgkIAAAxCXfTCQgAADELShQFDAAAMQnSRIUOPrHRyYW5zcGFyZW5jeccVaLQxNTcwOTUwNDgwNjg3ODcxODE2NqVzcGFjZccUaLM4Mjk4NjgwNzI3OTQ2MTMyODUxrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTE2Nzg1MDU3MzU4NTY2MDkxNjA2qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ61saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTAzODQ4NTAxNzk3MTg1NzAzMDOxYXR0cmlidXRlX3VwZGF0ZXLHFGizNTcyMzE4MDkxMzU3NTE0OTI0MahvdmVyZHJhd8cUaLM1NjE1Njc5NTgzOTA2MTE4MDg1r3VuaWZvcm1fdXBkYXRlcscUaLM1Mjg4MDcwNzYwMzAwOTEzMzE5pWZhY2VzxxVotDE1Njg1NTIzNTEwMjMyNjA5MDMzpHV1aWS0MTY3ODUwNTczNTg1NjYwOTE2MDatdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoF0YXJ0IAABJC0kWXQgAAEkIAANtCAAASQhhdD0MAABJCLjoxQwAAEkKtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBdGFydCAAAqQtJFl0IAACpCAADbQgAAKkIYXQ9DAAAqQi46MUMAACpCj6x0cmFuc3BhcmVuY3nHFGizNTgzMTAxODc0MDg4NTM0MzkxOKVzcGFjZccUaLM5NTM2NzE5NjMwODYxMDk3MDkyrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEzNjg5MTA2NzEwNDY5ODAzNzc3qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ61saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizMzQ0MzY0NjEwMzY5ODcwNzIwM7FhdHRyaWJ1dGVfdXBkYXRlcscUaLM2OTgxNzcyNjA1MTA1NzMwOTUyqG92ZXJkcmF3xxRoszE1MDgwMjc5ODYwMDQyMjIxNjOvdW5pZm9ybV91cGRhdGVyxxRoszcxMDI4ODkzNDkzMjIwMDU0ODelZmFjZXPHFGizNjA3NDk4NTExNjYzMzI5NzU2N6R1dWlktDEzNjg5MTA2NzEwNDY5ODAzNzc3rXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHIBd00WpCAAAaQugiuUIAABpCF938QgAAGkKiSyBDAAAaQq1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcgF3TRakIAACpC6CK5QgAAKkIX3fxCAAAqQqJLIEMAACpC3gAQrHRyYW5zcGFyZW5jeccVaLQxMDU1Njc0OTg3NjM2MzQ0MTc0NaVzcGFjZccUaLM3NTU2ODUzOTExNzk0Mzg5NTYxrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbh0ZXh0LTcxMTM3MTU5MzI4OTUxNjIwNzepY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIQwAASEOlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/p3Zpc2libGXHFGizMzg1NDM0MzY4MjE3ODQ1NDU4NqttYXJrZXJzcGFjZccVaLQxNTg2ODU3MTQ0NDAzNjg2MjQyObFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxNjcwODc2MTI5OTYwNjc4NzM1OahvdmVyZHJhd8cTaLIyMDczOTM0OTk1MjcxMjYwMzivdW5pZm9ybV91cGRhdGVyxxRoszk5MzU5ODQ3NjU2MTAyMDU2NjGlZmFjZXPHFGizMjczMzg0NTY5NTkxODg3MzM0NKR1dWlkszcxMTM3MTU5MzI4OTUxNjIwNzetdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABelY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizOTYxOTAyMTM3MjYwOTI3MjczOaVzcGFjZccUaLM2Njg3MDMyNTU2MTY4MzQ4NzQxrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTMzMDM5NTI1MzQ5NDU3NTIyNzKpY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxRoszU5MDg4OTk2NzkyMzYxMjU5NDixYXR0cmlidXRlX3VwZGF0ZXLHFGizNTA4NjUyNzg0MTQ0MTk5ODM0MKhvdmVyZHJhd8cTaLI4OTA1MzU3OTgwNTc3NTI0NDSvdW5pZm9ybV91cGRhdGVyxxVotDE2MTk2NDc4MjQ2MjA5MzI4NzM3pWZhY2VzxxRoszU2MzI2MTE2NDEwODIzMjEzMTOkdXVpZLMzMzAzOTUyNTM0OTQ1NzUyMjcyrXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxVotDE4MTAxNjczODY1OTYzOTA3MTEzpXNwYWNlxxRoszIyMzYwNjYzNTUwNzQwNzE5ODesdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTAxNTk4NDM3NjgyOTQ5MjM3NTepY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAKBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDrWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccUaLM0NDcyNTY5NDMzMzQyOTcwMTk3sWF0dHJpYnV0ZV91cGRhdGVyxxRoszQ1MTgzNzczMjAxNjQzNTgzMzeob3ZlcmRyYXfHFWi0MTQ2MzY3MTA3Mzk5MTE2NDY4MTavdW5pZm9ybV91cGRhdGVyxxVotDE2MTQ3Mzc4MTU4NTg0ODAzMTYzpWZhY2VzxxVotDEzNTY2MjM2MTQ5NzQ2NTU2NTY1pHV1aWS0MTAxNTk4NDM3NjgyOTQ5MjM3NTetdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdNcXAIA4QwAALEKtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTXFwAACkIAACxC3gAQrHRyYW5zcGFyZW5jeccUaLMyMzEzNjQ1MjI2MjQzNTIwMjkypXNwYWNlxxVotDE1MzMxMTgyMDE3NTY1MjM5ODMzrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbl0ZXh0LTEwNzkzNDAzNzkyNTg5MDY1NzYzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+pYmlsbGJvYXJkwq1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/rWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6d2aXNpYmxlxxVotDEzMjA0MjcwMTM4ODA5MzgwMjM0q21hcmtlcnNwYWNlxxRoszk1NzA5NjgxMjk1NzU4OTUyODixYXR0cmlidXRlX3VwZGF0ZXLHFGizMzUzMDM5NjM0MTgxMzY3MzIzOahvdmVyZHJhd8cVaLQxMTg1NDA5NTIwNjAwMDU1MzkyMa91bmlmb3JtX3VwZGF0ZXLHFWi0MTY0NjYzMDc4NTk0NTc0ODM5NTSlZmFjZXPHFGizMTUwNzQyNjE0NDEyOTgwMTAzN6R1dWlktDEwNzkzNDAzNzkyNTg5MDY1NzYzrXZlcnRleF9zb3VyY2XaGk0jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBtYXJrZXJzaXplOwp2ZWMyIGdldF9tYXJrZXJzaXplKCl7cmV0dXJuIG1hcmtlcnNpemU7fQppbiB2ZWM0IHJvdGF0aW9uczsKdmVjNCBnZXRfcm90YXRpb25zKCl7cmV0dXJuIHJvdGF0aW9uczt9CmluIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoSiCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4ercXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0xygX5/upwBSux8CoxovAAADAwI2XrsAAAMDAsp2vwBSux8D8qbHAAADAwKptYXJrZXJzaXplgqt0eXBlX2xlbmd0aAKkZmxhdMcoF1pkm0EIrLxBUrh+QYPAukFWDp1Bg8C6QQisnEEIrLxB2/meQYPAukGtbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHPBcEVo7AmG5ywQAAAAAEVo7AmG5ywQAAAAAEVo7AmG5ywQAAAAAEVo7AmG5ywQAAAAAEVo7AmG5ywQAAAAClY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0x1AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+vdXZfb2Zmc2V0X3dpZHRogqt0eXBlX2xlbmd0aASkZmxhdMdQFwDAlD4AwNc+AECoPgBA7z4AgDA+ACAPPwCATz4AoBo/AMCUPgDA7z4AQKg+AGADPwDAlD4AoAM/AECoPgBgDz8AwJQ+AKAPPwBAqD4AIBs/o3Bvc4KrdHlwZV9sZW5ndGgDpGZsYXTHPBdGFydCAAAIQgAAAADSRZdCAAAIQgAAAAAAANtCAAAIQgAAAAAYXQ9DAAAIQgAAAAAuOjFDAAAIQgAAAACpcm90YXRpb25zgqt0eXBlX2xlbmd0aASkZmxhdMdQFwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/j6x0cmFuc3BhcmVuY3nHE2iyNDM4NDcwOTY1MDIzMzMzNjQwpXNwYWNlxxRoszg5MjQ1MDA0NDA4Mzk4MjM2NTKsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTIwNzA5NDMzOTEwOTcwNTQ1NzSpY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDEwNTM4MjcxNjc5MzYwOTAxMzI0sWF0dHJpYnV0ZV91cGRhdGVyxxVotDExMzkzNjQ2OTIyMjQwOTE3MzczqG92ZXJkcmF3xxRoszk5MjQ2NTYwMzY1NzIzODE3ODavdW5pZm9ybV91cGRhdGVyxxRoszE1MjY5OTMyNDIwNTA1NTgxMjmlZmFjZXPHFWi0MTI0MDk1MjczMjk1NTQzNTIyMDekdXVpZLQxMjA3MDk0MzM5MTA5NzA1NDU3NK12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABePrHRyYW5zcGFyZW5jeccVaLQxNjQ3Mzg5MzUzOTMzNDIwOTIzMaVzcGFjZccVaLQxMzY0MjY2MDYyNzAyNTA1OTU5M6x2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy04NDkxOTU5NjUzNjgzMzAyMTcwqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ61saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizNDkxMzYxNDgzNjI2Njg1NDQ2M7FhdHRyaWJ1dGVfdXBkYXRlcscTaLI2MDQxOTk0MzQ4MDgxMTE3ODWob3ZlcmRyYXfHFWi0MTAzMDEwMjE0MTgxNDYwNjA1ODavdW5pZm9ybV91cGRhdGVyxxRoszcwODI5MzAwNDc4ODM3MjI5ODmlZmFjZXPHFGizNTExMzY2MzMyNjcyNTEwNDcwMaR1dWlkszg0OTE5NTk2NTM2ODMzMDIxNzCtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAA5EHpokVCAADkQbrookIAAORBAADjQgAA5EGjixFDAADkQUWXMUOtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAAApC6aJFQgAACkK66KJCAAAKQgAA40IAAApCo4sRQwAACkJFlzFDj6x0cmFuc3BhcmVuY3nHFWi0MTY3OTk1MTkzMjE4NTg1NTk3Mjilc3BhY2XHFWi0MTA0MjAxMDA5NjI3MzY3MDYwNDSsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtNTQ5ODQzMTA4MjM5NDgyMDY2OaljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIQwAASEOtbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxRoszU3NjI3NTQ2MTQzODgxMDI0MjGxYXR0cmlidXRlX3VwZGF0ZXLHFGizMzA3NDQxNzY4NTQ3Mjk0NTc3OahvdmVyZHJhd8cVaLQxNzkwOTAwNTkxNzIwNjg4MzMwOK91bmlmb3JtX3VwZGF0ZXLHFWi0MTUxOTQzMDg0NDM5NjM5MjU1ODmlZmFjZXPHFGizNjM3NDgwMTAyMzMzMDI2OTczMqR1dWlkszU0OTg0MzEwODIzOTQ4MjA2NjmtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAA9EEX3YJCAAD0QV30wkIAAPRB0oUBQwAA9EF0kSFDrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAKQhfdgkIAAApCXfTCQgAACkLShQFDAAAKQnSRIUPeABCsdHJhbnNwYXJlbmN5xxRoszg1NDk2NDY0NDMyMjYxODgzMDGlc3BhY2XHFWi0MTU5MTIzNTU2MjQ4Njk1MDgxMDOsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luHRleHQtNDI1MjQ1MzI3NTIxNzAwMDk0MKljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc46lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/qWJpbGxib2FyZMKtcHJlcHJvamVjdGlvbsdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP61kaXN0YW5jZWZpZWxkiqltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKQYAAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTrlJlcGVhdFdyYXBwaW5npGRhdGGtdGV4dHVyZV9hdGxhc6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemWSzQQAzQQApXdyYXBUrlJlcGVhdFdyYXBwaW5npHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZbJhdGxhc190ZXh0dXJlX3NpemXKRIAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ6VpbWFnZcKpb2JqZWN0X2lkAKpzaGFwZV90eXBlA7B0cmFuc2Zvcm1fbWFya2Vyw6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+ndmlzaWJsZccUaLM1Mjc5MDE4OTY5NTIyMTUyNDQyq21hcmtlcnNwYWNlxxVotDE0ODg2NDQzNjgxNDgxNDgxMDM1sWF0dHJpYnV0ZV91cGRhdGVyxxRoszQ5NTMyMjAzODY2MDI3ODI1ODOob3ZlcmRyYXfHFWi0MTUyMjkzODY0NjUwNjA1OTgyMTevdW5pZm9ybV91cGRhdGVyxxVotDE3NjgxNzYyNzg5MjMzMjgwMDA5pWZhY2VzxxVotDEwMzcxMTY0ODI4MDY4Njk1NzI1pHV1aWSzNDI1MjQ1MzI3NTIxNzAwMDk0MK12ZXJ0ZXhfc291cmNl2hpNI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgbWFya2Vyc2l6ZTsKdmVjMiBnZXRfbWFya2Vyc2l6ZSgpe3JldHVybiBtYXJrZXJzaXplO30KaW4gdmVjNCByb3RhdGlvbnM7CnZlYzQgZ2V0X3JvdGF0aW9ucygpe3JldHVybiByb3RhdGlvbnM7fQppbiB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CmluIHZlYzMgcG9zOwp2ZWMzIGdldF9wb3MoKXtyZXR1cm4gcG9zO30KaW4gdmVjMiBxdWFkX29mZnNldDsKdmVjMiBnZXRfcXVhZF9vZmZzZXQoKXtyZXR1cm4gcXVhZF9vZmZzZXQ7fQppbiB2ZWM0IHV2X29mZnNldF93aWR0aDsKdmVjNCBnZXRfdXZfb2Zmc2V0X3dpZHRoKCl7cmV0dXJuIHV2X29mZnNldF93aWR0aDt9CmluIHZlYzMgbWFya2VyX29mZnNldDsKdmVjMyBnZXRfbWFya2VyX29mZnNldCgpe3JldHVybiBtYXJrZXJfb2Zmc2V0O30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4X2RpbTsKCm91dCB2ZWM0IGZyYWdfY29sb3I7Cm91dCB2ZWMyIGZyYWdfdXY7Cm91dCBmbG9hdCBmcmFnX3V2c2NhbGU7Cm91dCBmbG9hdCBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGU7Cm91dCB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKCm1hdDQgcW1hdCh2ZWM0IHF1YXQpewogICAgZmxvYXQgbnVtID0gcXVhdC54ICogMi4wOwogICAgZmxvYXQgbnVtMiA9IHF1YXQueSAqIDIuMDsKICAgIGZsb2F0IG51bTMgPSBxdWF0LnogKiAyLjA7CiAgICBmbG9hdCBudW00ID0gcXVhdC54ICogbnVtOwogICAgZmxvYXQgbnVtNSA9IHF1YXQueSAqIG51bTI7CiAgICBmbG9hdCBudW02ID0gcXVhdC56ICogbnVtMzsKICAgIGZsb2F0IG51bTcgPSBxdWF0LnggKiBudW0yOwogICAgZmxvYXQgbnVtOCA9IHF1YXQueCAqIG51bTM7CiAgICBmbG9hdCBudW05ID0gcXVhdC55ICogbnVtMzsKICAgIGZsb2F0IG51bTEwID0gcXVhdC53ICogbnVtOwogICAgZmxvYXQgbnVtMTEgPSBxdWF0LncgKiBudW0yOwogICAgZmxvYXQgbnVtMTIgPSBxdWF0LncgKiBudW0zOwogICAgcmV0dXJuIG1hdDQoCiAgICAgICAgKDEuMCAtIChudW01ICsgbnVtNikpLCAobnVtNyArIG51bTEyKSwgICAgICAgIChudW04IC0gbnVtMTEpLCAgICAgICAgMC4wLAogICAgICAgIChudW03IC0gbnVtMTIpLCAgICAgICAgKDEuMCAtIChudW00ICsgbnVtNikpLCAobnVtOSArIG51bTEwKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtOCArIG51bTExKSwgICAgICAgIChudW05IC0gbnVtMTApLCAgICAgICAgKDEuMCAtIChudW00ICsgbnVtNSkpLCAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMS4wCiAgICApOwp9CgpmbG9hdCBkaXN0YW5jZWZpZWxkX3NjYWxlKCl7CiAgICAvLyBHbHlwaCBkaXN0YW5jZSBmaWVsZCB1bml0cyBhcmUgaW4gcGl4ZWxzOyBjb252ZXJ0IHRvIGRpbWVuc2lvbmxlc3MKICAgIC8vIHgtY29vcmRpbmF0ZSBvZiB0ZXh0dXJlIGluc3RlYWQgZm9yIGNvbnNpc3RlbmN5IHdpdGggcHJvZ3JhbW1hdGljIHV2CiAgICAvLyBkaXN0YW5jZSBmaWVsZHMgaW4gZnJhZ21lbnQgc2hhZGVyLiBTZWUgYWxzbyBjb21tZW50cyBiZWxvdy4KICAgIHZlYzQgdXZfcmVjdCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIGZsb2F0IHBpeHNpemVfeCA9ICh1dl9yZWN0LnogLSB1dl9yZWN0LngpICogZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpOwogICAgcmV0dXJuIC0xLjAvcGl4c2l6ZV94Owp9Cgp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKbWF0MiBkaWFnbSh2ZWMyIHYpewogICAgcmV0dXJuIG1hdDIodi54LCAwLjAsIDAuMCwgdi55KTsKfQoKZmxvYXQgX2RldGVybWluYW50KG1hdDIgbSkgewogIHJldHVybiBtWzBdWzBdICogbVsxXVsxXSAtIG1bMF1bMV0gKiBtWzFdWzBdOwp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIHZlYzIgYmJveF9zaWduZWRfcmFkaXVzID0gMC41ICogZ2V0X21hcmtlcnNpemUoKTsgLy8gbm90ZTsgY29tcG9uZW50cyBtYXkgYmUgbmVnYXRpdmUuCiAgICB2ZWMyIHNwcml0ZV9iYm94X2NlbnRyZSA9IGdldF9xdWFkX29mZnNldCgpICsgYmJveF9zaWduZWRfcmFkaXVzOwoKICAgIG1hdDQgcHZpZXcgPSBwcm9qZWN0aW9uICogdmlldzsKICAgIC8vIENvbXB1dGUgdHJhbnNmb3JtIGZvciB0aGUgb2Zmc2V0IHZlY3RvcnMgZnJvbSB0aGUgY2VudHJhbCBwb2ludAogICAgbWF0NCB0cmFucyA9IGdldF90cmFuc2Zvcm1fbWFya2VyKCkgPyBtb2RlbCA6IG1hdDQoMS4wKTsKICAgIHRyYW5zID0gKGdldF9iaWxsYm9hcmQoKSA/IHByb2plY3Rpb24gOiBwdmlldykgKiBxbWF0KGdldF9yb3RhdGlvbnMoKSkgKiB0cmFuczsKCiAgICAvLyBDb21wdXRlIGNlbnRyZSBvZiBiaWxsYm9hcmQgaW4gY2xpcHBpbmcgY29vcmRpbmF0ZXMKICAgIHZlYzQgc3ByaXRlX2NlbnRlciA9IHRyYW5zICogdmVjNChzcHJpdGVfYmJveF9jZW50cmUsIDAsIDApOwogICAgdmVjNCBkYXRhX3BvaW50ID0gZ2V0X3ByZXByb2plY3Rpb24oKSAqIG1vZGVsICogdmVjNCh0b3ZlYzMoZ2V0X3BvcygpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gdmVjNChkYXRhX3BvaW50Lnh5eiAvIGRhdGFfcG9pbnQudyArIG1hdDMobW9kZWwpICogdG92ZWMzKGdldF9tYXJrZXJfb2Zmc2V0KCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSBwdmlldyAqIGRhdGFfcG9pbnQ7CiAgICB2ZWM0IHZjbGlwID0gZGF0YV9wb2ludCArIHNwcml0ZV9jZW50ZXI7CgogICAgLy8gRXh0cmEgYnVmZmVyaW5nIGlzIHJlcXVpcmVkIGFyb3VuZCBzcHJpdGVzIHdoaWNoIGFyZSBhbnRpYWxpYXNlZCBzbyB0aGF0CiAgICAvLyB0aGUgYW50aWFsaWFzIGJsdXIgZG9lc24ndCBnZXQgY3V0IG9mZiAoc2VlICMxNSkuIFRoaXMgYmx1ciBmYWxscyB0bwogICAgLy8gemVybyBhdCBhIHJhZGl1cyBvZiBBTlRJQUxJQVNfUkFESVVTIHBpeGVscyBpbiB0aGUgdmlld3BvcnQgY29vcmRpbmF0ZXMKICAgIC8vIGFuZCB3ZSB3YW50IHRvIGJ1ZmZlciB0aGUgdmVydGljZXMgaW4gdGhlICpzb3VyY2UqIHNwcml0ZSBjb29yZGluYXRlCiAgICAvLyBzeXN0ZW0gc28gdGhhdCB3ZSBnZXQgdGhpcyBhbW91bnQgaW4gdGhlIG91dHB1dCBjb29yZGluYXRlcy4KICAgIC8vCiAgICAvLyBIZXJlIHdlIGNhbGN1bGF0ZSB0aGUgZGVyaXZhdGl2ZSBvZiB0aGUgbWFwcGluZyBmcm9tIHNwcml0ZSB4eQogICAgLy8gY29vcmRpbmF0ZXMgKGRlZmluZWQgYnkgYHRyYW5zYCkgaW50byB0aGUgdmlld3BvcnQgcGl4ZWwgY29vcmRpbmF0ZXMuCiAgICAvLyBUaGUgZGVyaXZhdGl2ZSBuZWVkcyB0byBpbmNsdWRlIHRoZSBwcm9wZXIgdGVybSBmb3IgdGhlIHBlcnNwZWN0aXZlCiAgICAvLyBkaXZpZGUgaW50byBOREMsIGV2YWx1YXRlZCBhdCB0aGUgY2VudHJlIHBvaW50IGB2Y2xpcGAuCiAgICBtYXQ0IGRfbmRjX2RfY2xpcCA9IG1hdDQoCiAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsCiAgICAgICAgLXZjbGlwLnh5ei8odmNsaXAudyp2Y2xpcC53KSwgICAgICAgICAgMC4wCiAgICApOwogICAgbWF0MiBkeHl2X2R4eXMgPSBkaWFnbSgwLjUgKiBnZXRfcmVzb2x1dGlvbigpKSAqIG1hdDIoZF9uZGNfZF9jbGlwKnRyYW5zKTsKICAgIC8vIE5vdywgb3VyIGJ1ZmZlciBzaXplIGlzIGV4cHJlc3NlZCBpbiB2aWV3cG9ydCBwaXhlbHMgYnV0IHdlIGdldCBiYWNrIHRvCiAgICAvLyB0aGUgc3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHVzaW5nIHRoZSBzY2FsZSBmYWN0b3Igb2YgdGhlCiAgICAvLyB0cmFuc2Zvcm1hdGlvbiAoZm9yIGlzb3Ryb3BpYyB0cmFuc2Zvcm1hdGlvbnMpLiBGb3IgYW5pc290cm9waWMKICAgIC8vIHRyYW5zZm9ybWF0aW9ucywgdGhlIGdlb21ldHJpYyBtZWFuIG9mIHRoZSB0d28gcHJpbmNpcGxlIHNjYWxlIGZhY3RvcnMKICAgIC8vIGlzIGEgcmVhc29uYWJsZSBjb21wcm9taXNlOgogICAgZmxvYXQgdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgPSBzcXJ0KGFicyhfZGV0ZXJtaW5hbnQoZHh5dl9keHlzKSkpOwoKICAgIC8vIEluIHRoZSBmcmFnbWVudCBzaGFkZXIgd2Ugd2FudCBvdXIgc2lnbmVkIGRpc3RhbmNlIGluIHZpZXdwb3J0IChwaXhlbCkKICAgIC8vIGNvb3JkcyBmb3IgZGlyZWN0IHVzZSBpbiBhbnRpYWxpYXNpbmcgc3RlcCBmdW5jdGlvbnMuIFdlIHRoZXJlZm9yZSBuZWVkCiAgICAvLyBhIHNjYWxpbmcgZmFjdG9yIHNpbWlsYXIgdG8gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUsIGJ1dCBpbmNsdWRpbmcKICAgIC8vIHRoZSB1di0+c3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHNjYWxpbmcgZmFjdG9yIGFzIHdlbGwuICBXZSBjaG9vc2UgdG8KICAgIC8vIHVzZSB0aGUgYm91bmRpbmcgYm94ICp4KiB3aWR0aCBmb3IgdGhpcy4gVGhpcyBjb21lcyB3aXRoIHNvbWUKICAgIC8vIGNvbnNpc3RlbmN5IGNvbmRpdGlvbnM6CiAgICAvLyAqIEZvciBwcm9jZWR1cmFsIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0aGUgc3ByaXRlIGJvdW5kaW5nIGJveCB0byBiZQogICAgLy8gICBzcXVhcmUuIChJZiBub3QsIHRoZSB1diBjb29yZGluYXRlcyB3aWxsIGJlIGFuaXNvdHJvcGljYWxseSBzY2FsZWQgYW5kCiAgICAvLyAgIGFueSBjYWxjdWxhdGlvbiBiYXNlZCBvbiB0aGVtIHdpbGwgbm90IGJlIGEgZGlzdGFuY2UgZnVuY3Rpb24uKQogICAgLy8gKiBGb3Igc2FtcGxlZCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdG8gY29uc2lzdGVudGx5IGNob29zZSB0aGUgKngqCiAgICAvLyAgIGZvciB0aGUgc2NhbGluZyBpbiBnZXRfZGlzdGFuY2VmaWVsZF9zY2FsZSgpLgogICAgZmxvYXQgc3ByaXRlX2Zyb21fdV9zY2FsZSA9IGFicyhnZXRfbWFya2Vyc2l6ZSgpLngpOwogICAgZnJhZ191dnNjYWxlID0gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgKiBzcHJpdGVfZnJvbV91X3NjYWxlOwogICAgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlID0gZGlzdGFuY2VmaWVsZF9zY2FsZSgpOwogICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3IoKSk7CiAgICBmcmFnX3V2ID0gZ2V0X3V2KCk7CiAgICBmcmFnX3V2X29mZnNldF93aWR0aCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIC8vIHNjcmVlbiBzcGFjZSBjb29yZGluYXRlcyBvZiB0aGUgcG9zaXRpb24KICAgIHZlYzQgcXVhZF92ZXJ0ZXggPSAodHJhbnMgKiB2ZWM0KDIuMCAqIGJib3hfc2lnbmVkX3JhZGl1cyAqIGdldF9wb3NpdGlvbigpLCAwLjAsIDAuMCkpOwogICAgZ2xfUG9zaXRpb24gPSB2Y2xpcCArIHF1YWRfdmVydGV4OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaEogjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgppbiB2ZWM0IGZyYWdfY29sb3I7CmluIHZlYzIgZnJhZ191djsKCiNkZWZpbmUgQ0lSQ0xFICAgICAgICAgICAgMAojZGVmaW5lIFJFQ1RBTkdMRSAgICAgICAgIDEKI2RlZmluZSBST1VOREVEX1JFQ1RBTkdMRSAyCiNkZWZpbmUgRElTVEFOQ0VGSUVMRCAgICAgMwojZGVmaW5lIFRSSUFOR0xFICAgICAgICAgIDQKCiNkZWZpbmUgTV9TUVJUXzIgICAgICAgICAgMS40MTQyMTM1CgoKLy8gSGFsZiB3aWR0aCBvZiBhbnRpYWxpYXNpbmcgc21vb3Roc3RlcAojZGVmaW5lIEFOVElBTElBU19SQURJVVMgMC44Ci8vIFRoZXNlIHZlcnNpb25zIG9mIGFhc3RlcCBhc3N1bWUgdGhhdCBgZGlzdGAgaXMgYSBzaWduZWQgZGlzdGFuY2UgZnVuY3Rpb24KLy8gd2hpY2ggaGFzIGJlZW4gc2NhbGVkIHRvIGJlIGluIHVuaXRzIG9mIHBpeGVscy4KZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMSArIEFOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgdGhyZXNob2xkMiwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxK0FOVElBTElBU19SQURJVVMsIGRpc3QpIC0KICAgICAgICAgICBzbW9vdGhzdGVwKHRocmVzaG9sZDItQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMitBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKLy8gUHJvY2VkdXJhbCBzaWduZWQgZGlzdGFuY2UgZnVuY3Rpb25zIG9uIHRoZSB1diBjb29yZGluYXRlIHBhdGNoIFswLDFdeFswLDFdCi8vIE5vdGUgdGhhdCBmb3IgYW50aWFsaWFzaW5nIHRvIHdvcmsgcHJvcGVybHkgdGhlc2Ugc2hvdWxkIGJlICpzY2FsZSBwcmVzZXJ2aW5nKgovLyAoSWYgeW91IG11c3QgcmVzY2FsZSB1diwgbWFrZSBzdXJlIHRvIHB1dCB0aGUgc2NhbGUgZmFjdG9yIGJhY2sgaW4gbGF0ZXIuKQpmbG9hdCB0cmlhbmdsZSh2ZWMyIFApewogICAgUCAtPSB2ZWMyKDAuNSk7CiAgICBmbG9hdCB4ID0gTV9TUVJUXzIgKiAoUC54IC0gUC55KTsKICAgIGZsb2F0IHkgPSBNX1NRUlRfMiAqIChQLnggKyBQLnkpOwogICAgZmxvYXQgcjEgPSBtYXgoYWJzKHgpLCBhYnMoeSkpIC0gMS4wLygyLjAqTV9TUVJUXzIpOwogICAgZmxvYXQgcjIgPSBQLnk7CiAgICByZXR1cm4gLW1heChyMSxyMik7Cn0KCmZsb2F0IGNpcmNsZSh2ZWMyIHV2KXsKICAgIHJldHVybiAwLjUtbGVuZ3RoKHV2LXZlYzIoMC41KSk7Cn0KCmZsb2F0IHJlY3RhbmdsZSh2ZWMyIHV2KXsKICAgIHZlYzIgZCA9IG1heCgtdXYsIHV2LXZlYzIoMSkpOwogICAgcmV0dXJuIC0oKGxlbmd0aChtYXgodmVjMigwLjApLCBkKSkgKyBtaW4oMC4wLCBtYXgoZC54LCBkLnkpKSkpOwp9CgpmbG9hdCByb3VuZGVkX3JlY3RhbmdsZSh2ZWMyIHV2LCB2ZWMyIHRsLCB2ZWMyIGJyKXsKICAgIHZlYzIgZCA9IG1heCh0bC11diwgdXYtYnIpOwogICAgcmV0dXJuIC0oKGxlbmd0aChtYXgodmVjMigwLjApLCBkKSkgKyBtaW4oMC4wLCBtYXgoZC54LCBkLnkpKSktdGwueCk7Cn0KCnZvaWQgZmlsbChib29sIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIGNvbG9yID0gbWl4KGNvbG9yLCBmaWxsY29sb3IsIGluZmlsbCk7Cn0KCnZvaWQgZmlsbChzYW1wbGVyMkQgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgdmVjNCBpbV9jb2xvciA9IHRleHR1cmUoaW1hZ2UsIHV2Lnl4KTsKICAgIGNvbG9yID0gbWl4KGNvbG9yLCBpbV9jb2xvciwgaW5maWxsKTsKfQoKaW4gZmxvYXQgZnJhZ191dnNjYWxlOwppbiBmbG9hdCBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGU7CmluIHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZCwgdmVjMiB1dil7CiAgICAvLyBHbHlwaCBkaXN0YW5jZSBmaWVsZCB1bml0cyBhcmUgaW4gcGl4ZWxzLiBDb252ZXJ0IHRvIHNhbWUgZGlzdGFuY2UKICAgIC8vIHNjYWxpbmcgYXMgZl91di54IGZvciBjb25zaXN0ZW5jeSB3aXRoIHRoZSBwcm9jZWR1cmFsIHNpZ25lZF9kaXN0YW5jZQogICAgLy8gY2FsY3VsYXRpb25zLgogICAgcmV0dXJuIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSAqIHRleHR1cmUoZGlzdGFuY2VmaWVsZCwgdXYpLnI7Cn0KCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKGJvb2wgZGlzdGFuY2VmaWVsZCwgdmVjMiB1dil7CiAgICByZXR1cm4gMC4wOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewoKICAgIGludCBzaGFwZSA9IGdldF9zaGFwZV90eXBlKCk7CiAgICBmbG9hdCBzaWduZWRfZGlzdGFuY2UgPSAwLjA7CiAgICB2ZWM0IHV2X29mZiA9IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwogICAgdmVjMiB0ZXhfdXYgPSBtaXgodXZfb2ZmLnh5LCB1dl9vZmYuencsIGNsYW1wKGZyYWdfdXYsIDAuMCwgMS4wKSk7CiAgICBpZihzaGFwZSA9PSBDSVJDTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gY2lyY2xlKGZyYWdfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBESVNUQU5DRUZJRUxEKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHNjYWxlZF9kaXN0YW5jZWZpZWxkKGRpc3RhbmNlZmllbGQsIHRleF91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFJPVU5ERURfUkVDVEFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHJvdW5kZWRfcmVjdGFuZ2xlKGZyYWdfdXYsIHZlYzIoMC4yKSwgdmVjMigwLjgpKTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUkVDVEFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IDEuMDsgLy8gcmVjdGFuZ2xlKGZfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBUUklBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSB0cmlhbmdsZShmcmFnX3V2KTsKCiAgICBzaWduZWRfZGlzdGFuY2UgKj0gZnJhZ191dnNjYWxlOwogICAgZmxvYXQgaW5zaWRlID0gYWFzdGVwKDAuMCwgc2lnbmVkX2Rpc3RhbmNlKTsKICAgIHZlYzQgZmluYWxfY29sb3IgPSB2ZWM0KGZyYWdfY29sb3IueHl6LCAwKTsKICAgIGZpbGwoaW1hZ2UsIGZyYWdfY29sb3IsIGZyYWdfdXYsIGluc2lkZSwgZmluYWxfY29sb3IpOwogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZmluYWxfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KICAgIGlmIChmaW5hbF9jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZmluYWxfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOHq3F1YWRfb2Zmc2V0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF6ptYXJrZXJzaXplgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61tYXJrZXJfb2Zmc2V0gqt0eXBlX2xlbmd0aAOkZmxhdMcAF6Vjb2xvcoKrdHlwZV9sZW5ndGgEpGZsYXTHABevdXZfb2Zmc2V0X3dpZHRogqt0eXBlX2xlbmd0aASkZmxhdMcAF6Nwb3OCq3R5cGVfbGVuZ3RoA6RmbGF0xwAXqXJvdGF0aW9uc4KrdHlwZV9sZW5ndGgEpGZsYXTHABePrHRyYW5zcGFyZW5jeccUaLMyMDkxMzg1Mjk4NTQ3OTAxNjIwpXNwYWNlxxRoszYxOTczNDgzNzczMDEzODU0NDSsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTE4Nzg3MDYzNjE4NDg2OTczODapY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDEwNjYxMDQxMzYxMDY5MjI2MzUysWF0dHJpYnV0ZV91cGRhdGVyxxVotDE3ODQxMzYwODQ0ODU4ODQ2MDM3qG92ZXJkcmF3xxNosjUxMDQyMDc5NjIxNzkzMjYyN691bmlmb3JtX3VwZGF0ZXLHFGizMTQyMTA3Mjk0NDY4MDg1ODEzMaVmYWNlc8cVaLQxNzUyMjQ0NDUzNzg0MTQ0MzEzMaR1dWlktDExODc4NzA2MzYxODQ4Njk3Mzg2rXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxRoszYwNjk4OTYzMjAxMDA0ODczMTGlc3BhY2XHFGizMTMwNTk4NzY2OTExNzk1Nzc1N6x2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIWxpbmVzZWdtZW50cy0xMDYyMjA0NzkzMjIzNzc1ODk0OKljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAoEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIQwAASEOtbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxVotDE4MDA5MzQxOTAyMzg1NjUyMTMysWF0dHJpYnV0ZV91cGRhdGVyxxVotDEwOTMyMTA2NDYzNjMzMTUxNDQxqG92ZXJkcmF3xxVotDEyMjYyNjY0MzU1NDU4MTAxOTg1r3VuaWZvcm1fdXBkYXRlcscUaLM3MzcyNDAzMTYwMDY3NzIwNzc1pWZhY2VzxxVotDE4MTc4NTkxMTM1MTAwNTk2OTI4pHV1aWS0MTA2MjIwNDc5MzIyMzc3NTg5NDitdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdNcXAAAMQgCAOEOtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTXFwAADEIAACpC3gAQrHRyYW5zcGFyZW5jeccVaLQxMTQ5NDAxMTc1OTg0MjM5OTU0OKVzcGFjZccUaLM5Nzk4NzIxNTMzMDUxNjU4MzM5rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbZ0ZXh0LTM1Njk3Nzc0NjkxODA2ODUzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+pYmlsbGJvYXJkwq1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/rWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6d2aXNpYmxlxxVotDEzMzE4NDM0ODUxMzY5NDAyMjIxq21hcmtlcnNwYWNlxxVotDE1NzM3ODI0MDgzOTE1MjgxNzU3sWF0dHJpYnV0ZV91cGRhdGVyxxRoszQ2NzQ2NDQxMjgyODczMzY1Njiob3ZlcmRyYXfHFGizODYyMTkyMTU5ODg2ODk0NTkxNa91bmlmb3JtX3VwZGF0ZXLHFWi0MTEwNzYzOTUxNTU1NzAxNTY4OTGlZmFjZXPHFGizNzYyNTg0MTUyMDI0ODYzMjY2OKR1dWlksTM1Njk3Nzc0NjkxODA2ODUzrXZlcnRleF9zb3VyY2XaGk0jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBtYXJrZXJzaXplOwp2ZWMyIGdldF9tYXJrZXJzaXplKCl7cmV0dXJuIG1hcmtlcnNpemU7fQppbiB2ZWM0IHJvdGF0aW9uczsKdmVjNCBnZXRfcm90YXRpb25zKCl7cmV0dXJuIHJvdGF0aW9uczt9CmluIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoSiCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4ercXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0xygX5/upwBSux8CoxovAAADAwI2XrsAAAMDAsp2vwBSux8D8qbHAAADAwKptYXJrZXJzaXplgqt0eXBlX2xlbmd0aAKkZmxhdMcoF1pkm0EIrLxBUrh+QYPAukFWDp1Bg8C6QQisnEEIrLxB2/meQYPAukGtbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHPBcEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAClY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0x1AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+vdXZfb2Zmc2V0X3dpZHRogqt0eXBlX2xlbmd0aASkZmxhdMdQFwDAlD4AwNc+AECoPgBA7z4AgDA+ACAPPwCATz4AoBo/AMCUPgDA7z4AQKg+AGADPwDAlD4AoAM/AECoPgBgDz8AwJQ+AKAPPwBAqD4AIBs/o3Bvc4KrdHlwZV9sZW5ndGgDpGZsYXTHPBcAAMBB6aJFQgAAAAAAAMBBuuiiQgAAAAAAAMBBAADjQgAAAAAAAMBBo4sRQwAAAAAAAMBBRZcxQwAAAACpcm90YXRpb25zgqt0eXBlX2xlbmd0aASkZmxhdMdQFwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/j6x0cmFuc3BhcmVuY3nHFGizNDc1Mzg0NjMwNDc5NjkyNTg3OaVzcGFjZccVaLQxNDc0MDAzNjUwNTUxMzA3MzcwNax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWW/bGluZXNlZ21lbnRzLTkzMzAwNzIxMDM5NTgyMzkzNqljYW1fc3BhY2WlcGl4ZWyodW5pZm9ybXOHp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+pb2JqZWN0X2lkAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/p3Zpc2libGXHFWi0MTcwMzM1MzMyMzI4NzA0NDI4NjOxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTEyNDIxOTczMTUwODA0MjU2OTSob3ZlcmRyYXfHFWi0MTI0MjI1Njc0NzQwMTY0Nzg5NDGvdW5pZm9ybV91cGRhdGVyxxVotDEzNDQwMDY1MzM3MTIyNDMzOTY2pWZhY2VzxxVotDE2NjQzNDM3ODcyODEwMTk0NTgwpHV1aWSyOTMzMDA3MjEwMzk1ODIzOTM2rXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxVotDExNzM2MTQ4NDExNzk0ODQyMTA1pXNwYWNlxxVotDExMzE1NjM1MjkxMTQ1ODg4Mjg0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTk2MDQ5NTU5NTYzNjgzNTMyMTOpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDrWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccUaLM1NjI1MzU4NTY5NzIwODA0MjI2sWF0dHJpYnV0ZV91cGRhdGVyxxRoszM3MTMyOTc3NjkwMTI2ODQwNDGob3ZlcmRyYXfHFWi0MTc2NzM4NTY3MzQ2NjkxNjczNDGvdW5pZm9ybV91cGRhdGVyxxVotDExNjExNzU0OTc4MDY1NTk0ODk5pWZhY2VzxxVotDE3ODczODE4NzAwODU2NDkwOTcypHV1aWSzOTYwNDk1NTk1NjM2ODM1MzIxM612ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXRhcnQgAAPkPSRZdCAAA+QwAA20IAAD5DGF0PQwAAPkMuOjFDAAA+Q61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoF0YXJ0IAADhD0kWXQgAAOEMAANtCAAA4QxhdD0MAADhDLjoxQwAAOEOPrHRyYW5zcGFyZW5jeccUaLMxOTM3NTIxNjQ3MDM4MDY3NDc4pXNwYWNlxxVotDE1NjQzMTAwODUwMDQ5MTYzNzQyrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTk0MjE4Mjk0MzQ4ODc3MzY3NjapY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDrWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccVaLQxMzYwMzU3NDEwNTMzMzg4MzY4ObFhdHRyaWJ1dGVfdXBkYXRlcscUaLM4MTUwNjA4NjMyNjg0NzY0OTQ5qG92ZXJkcmF3xxVotDE1OTc0ODE4MjU5ODUyNzUxMjMwr3VuaWZvcm1fdXBkYXRlcscUaLM5MzM2ODE5MjA5NTg0NTY2NjE3pWZhY2VzxxRoszUyODc3NjMwODE3MzAxMTM5MDGkdXVpZLM5NDIxODI5NDM0ODg3NzM2NzY2rXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAAD5D6aJFQgAAPkO66KJCAAA+QwAA40IAAD5Do4sRQwAAPkNFlzFDrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAAA4Q+miRUIAADhDuuiiQgAAOEMAAONCAAA4Q6OLEUMAADhDRZcxQ4+sdHJhbnNwYXJlbmN5xxVotDE3NzA4NDk4OTUwOTA1Nzg4NTIwpXNwYWNlxxVotDE2ODAyMjUyNTA1OTA2MzIzMTM0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZb9saW5lc2VnbWVudHMtMjI3OTM5OTY1MjUzNTA1MTg3qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ61saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizMTQ2OTUwMjYxMjUxMzgwMTE0MLFhdHRyaWJ1dGVfdXBkYXRlcscUaLM1MjAzNjc0OTcyODcxODA5MzI4qG92ZXJkcmF3xxVotDE2Mjg5NTgxNTMxMDYyMzM1MTAwr3VuaWZvcm1fdXBkYXRlcscVaLQxNjAyNjI5OTU5MDE4NTY0MzcyNaVmYWNlc8cVaLQxNDg4NDU1OTc3NDcwNDIxNzUwMaR1dWlksjIyNzkzOTk2NTI1MzUwNTE4N612ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXdNFqQgAAPEPoIrlCAAA8Qxfd/EIAADxDoksgQwAAPEOtc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHIBd00WpCAAA4Q+giuUIAADhDF938QgAAOEOiSyBDAAA4Q4+sdHJhbnNwYXJlbmN5xxVotDEzNjY5MjYwMzIzNzI1NDc3ODg2pXNwYWNlxxRoszIzMTMxMTI2Njk2MzA4NTc2NDWsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtMTkzMjIxNzU5ODk3NTM3MTE1MqljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIQwAASEOtbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxNosjk3MjE2MDQyNTM0ODM4ODc4NbFhdHRyaWJ1dGVfdXBkYXRlcscUaLM0NzEzNzQ2NjY1OTE1NDgzMjQ2qG92ZXJkcmF3xxRoszM0MDI1OTQxODc3NzMzNzcxNTGvdW5pZm9ybV91cGRhdGVyxxRoszY2NDYxNTIxOTEwMTYyODYwMTilZmFjZXPHFGizNjA0ODg0MzkzMzQ2NzkwMDg5MKR1dWlkszE5MzIyMTc1OTg5NzUzNzExNTKtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAPEMX3YJCAAA8Q130wkIAADxD0oUBQwAAPEN0kSFDrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAA4QxfdgkIAADhDXfTCQgAAOEPShQFDAAA4Q3SRIUOPrHRyYW5zcGFyZW5jeccUaLMyMzIwOTA2NTQ5MjE4MDIwMjczpXNwYWNlxxVotDEyMzg2NzI1NzI3MTA3MDgzOTQ3rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEyMjI5MTExMDMyMzc5Mzg3MTI2qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ61saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHE2iyODg1OTc3NDUyNjMyOTA5NDIzsWF0dHJpYnV0ZV91cGRhdGVyxxVotDEwMDIyMzMxMTA1OTk4NjQxNjI5qG92ZXJkcmF3xxVotDEzMDgyMzM3MDA5MzQwODQ4MjE2r3VuaWZvcm1fdXBkYXRlcscUaLMzNzE0Mzc2ODM2NTk3MjMxNzU3pWZhY2VzxxRoszU3MzAzODk3MDA1MDcyNzMyODKkdXVpZLQxMjIyOTExMTAzMjM3OTM4NzEyNq12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF01xcAgDhDAAA4Q61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdNcXAAAKQgAAOEOPrHRyYW5zcGFyZW5jeccVaLQxNDg2MzQ1MDQyMzczMTY4NjU4MaVzcGFjZccUaLMzMjQwMDQ2Njc3MTcyMzU4MDE2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTc2MjY5MTk2NjY5MTEwMjM2ODOpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAKBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEMAAEhDrWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccUaLM1OTI5MDQ5NzcxNzIzMjI5MTM4sWF0dHJpYnV0ZV91cGRhdGVyxxVotDE3NzQ2Nzk2NDMwMjkzMTY1ODg2qG92ZXJkcmF3xxVotDE0MDMyOTU4MDM2NDA4NzMxNDQ3r3VuaWZvcm1fdXBkYXRlcscUaLM3ODIxOTQ1MTM3OTAzMzkyMjY3pWZhY2VzxxVotDE0OTUwMTU2OTc1NjAzNDU3Mzk0pHV1aWSzNzYyNjkxOTY2NjkxMTAyMzY4M612ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF01xcAADhDAIA4Q61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdNcXAAA4QwAAKkLeABCsdHJhbnNwYXJlbmN5xxRoszc4MjY5MTQzOTQ1NzE5NDY3NjGlc3BhY2XHFWi0MTM5MTI0MTA3NzkwODYzNzc2MjCsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luHRleHQtODAxNjQ4NTQ1NTczMDgxMTgzNqljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc46lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/qWJpbGxib2FyZMKtcHJlcHJvamVjdGlvbsdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP61kaXN0YW5jZWZpZWxkiqltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKQYAAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTrlJlcGVhdFdyYXBwaW5npGRhdGGtdGV4dHVyZV9hdGxhc6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemWSzQQAzQQApXdyYXBUrlJlcGVhdFdyYXBwaW5npHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZbJhdGxhc190ZXh0dXJlX3NpemXKRIAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ6VpbWFnZcKpb2JqZWN0X2lkAKpzaGFwZV90eXBlA7B0cmFuc2Zvcm1fbWFya2Vyw6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+ndmlzaWJsZccUaLM3NDI5MDM1NjYxMzg5MTczNTY2q21hcmtlcnNwYWNlxxVotDE2NDk0MTI3NzE0Mzk0NjI4MjY3sWF0dHJpYnV0ZV91cGRhdGVyxxRoszE3Njg1ODk5MDQ5NDAyNzY2MTSob3ZlcmRyYXfHFGizNTQ0MjAzNTI2NTA3MDIxMTU0MK91bmlmb3JtX3VwZGF0ZXLHFWi0MTE1Mjg0MDUwNzc0NDk2NTM3ODWlZmFjZXPHFWi0MTgxMzEyNjEyNDYxNjQ4NTIzMDekdXVpZLM4MDE2NDg1NDU1NzMwODExODM2rXZlcnRleF9zb3VyY2XaGk0jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBtYXJrZXJzaXplOwp2ZWMyIGdldF9tYXJrZXJzaXplKCl7cmV0dXJuIG1hcmtlcnNpemU7fQppbiB2ZWM0IHJvdGF0aW9uczsKdmVjNCBnZXRfcm90YXRpb25zKCl7cmV0dXJuIHJvdGF0aW9uczt9CmluIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoSiCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4ercXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXqm1hcmtlcnNpemWCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrW1hcmtlcl9vZmZzZXSCq3R5cGVfbGVuZ3RoA6RmbGF0xwAXpWNvbG9ygqt0eXBlX2xlbmd0aASkZmxhdMcAF691dl9vZmZzZXRfd2lkdGiCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXo3Bvc4KrdHlwZV9sZW5ndGgDpGZsYXTHABepcm90YXRpb25zgqt0eXBlX2xlbmd0aASkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxVotDE2MzM2Mjk2NzE3ODM3OTQ2NzQ2pXNwYWNlxxRoszYyMzE0MjMxNjYwODUxMzE4ODKsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTYzOTg4OTQwMDk4NTI4OTI4OTapY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDE1Mjg5MzYzNDQ5OTk5MzU2NjM3sWF0dHJpYnV0ZV91cGRhdGVyxxVotDE1MDkxOTMyNzcwMjIyMTM1MzQ5qG92ZXJkcmF3xxRoszgzMTgwNjY1Mjg4Mzk3NTM5ODivdW5pZm9ybV91cGRhdGVyxxVotDEwNTgyMTYyNDc1MzM4MDg2NjUzpWZhY2VzxxNosjk3MzczMTkwNzgwNzEzMDQzNqR1dWlktDE2Mzk4ODk0MDA5ODUyODkyODk2rXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF94AEKx0cmFuc3BhcmVuY3nHFWi0MTYwNzMwOTY4MTgyNTg5Mzg4MDKlc3BhY2XHFWi0MTIxNTQ4OTA1OTkzMTcxMjE4MDOsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luHRleHQtODAyMjg5MzYzMDM2MjM2NzA4OaljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc46lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/qWJpbGxib2FyZMKtcHJlcHJvamVjdGlvbsdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP61kaXN0YW5jZWZpZWxkiqltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKQYAAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTrlJlcGVhdFdyYXBwaW5npGRhdGGtdGV4dHVyZV9hdGxhc6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemWSzQQAzQQApXdyYXBUrlJlcGVhdFdyYXBwaW5npHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZbJhdGxhc190ZXh0dXJlX3NpemXKRIAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ6VpbWFnZcKpb2JqZWN0X2lkAKpzaGFwZV90eXBlA7B0cmFuc2Zvcm1fbWFya2Vyw6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+ndmlzaWJsZccVaLQxNTM4NDExMDY4NDE0MzQ1OTk0NKttYXJrZXJzcGFjZccUaLM3MjM5NDY3NTQwODU0NDk4OTAzsWF0dHJpYnV0ZV91cGRhdGVyxxRoszc5Nzc5ODg4ODQ3NTIwNDE3MzWob3ZlcmRyYXfHFWi0MTQ1MDc0MTM4NjU0MDk4MTg1NjevdW5pZm9ybV91cGRhdGVyxxVotDExMjgyNTQ1OTE3MjEwNzQ3MzYwpWZhY2VzxxVotDE1NDgwMzQ2ODQ1MDMwNjc3MDU5pHV1aWSzODAyMjg5MzYzMDM2MjM2NzA4Oa12ZXJ0ZXhfc291cmNl2hpNI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgbWFya2Vyc2l6ZTsKdmVjMiBnZXRfbWFya2Vyc2l6ZSgpe3JldHVybiBtYXJrZXJzaXplO30KaW4gdmVjNCByb3RhdGlvbnM7CnZlYzQgZ2V0X3JvdGF0aW9ucygpe3JldHVybiByb3RhdGlvbnM7fQppbiB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CmluIHZlYzMgcG9zOwp2ZWMzIGdldF9wb3MoKXtyZXR1cm4gcG9zO30KaW4gdmVjMiBxdWFkX29mZnNldDsKdmVjMiBnZXRfcXVhZF9vZmZzZXQoKXtyZXR1cm4gcXVhZF9vZmZzZXQ7fQppbiB2ZWM0IHV2X29mZnNldF93aWR0aDsKdmVjNCBnZXRfdXZfb2Zmc2V0X3dpZHRoKCl7cmV0dXJuIHV2X29mZnNldF93aWR0aDt9CmluIHZlYzMgbWFya2VyX29mZnNldDsKdmVjMyBnZXRfbWFya2VyX29mZnNldCgpe3JldHVybiBtYXJrZXJfb2Zmc2V0O30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4X2RpbTsKCm91dCB2ZWM0IGZyYWdfY29sb3I7Cm91dCB2ZWMyIGZyYWdfdXY7Cm91dCBmbG9hdCBmcmFnX3V2c2NhbGU7Cm91dCBmbG9hdCBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGU7Cm91dCB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKCm1hdDQgcW1hdCh2ZWM0IHF1YXQpewogICAgZmxvYXQgbnVtID0gcXVhdC54ICogMi4wOwogICAgZmxvYXQgbnVtMiA9IHF1YXQueSAqIDIuMDsKICAgIGZsb2F0IG51bTMgPSBxdWF0LnogKiAyLjA7CiAgICBmbG9hdCBudW00ID0gcXVhdC54ICogbnVtOwogICAgZmxvYXQgbnVtNSA9IHF1YXQueSAqIG51bTI7CiAgICBmbG9hdCBudW02ID0gcXVhdC56ICogbnVtMzsKICAgIGZsb2F0IG51bTcgPSBxdWF0LnggKiBudW0yOwogICAgZmxvYXQgbnVtOCA9IHF1YXQueCAqIG51bTM7CiAgICBmbG9hdCBudW05ID0gcXVhdC55ICogbnVtMzsKICAgIGZsb2F0IG51bTEwID0gcXVhdC53ICogbnVtOwogICAgZmxvYXQgbnVtMTEgPSBxdWF0LncgKiBudW0yOwogICAgZmxvYXQgbnVtMTIgPSBxdWF0LncgKiBudW0zOwogICAgcmV0dXJuIG1hdDQoCiAgICAgICAgKDEuMCAtIChudW01ICsgbnVtNikpLCAobnVtNyArIG51bTEyKSwgICAgICAgIChudW04IC0gbnVtMTEpLCAgICAgICAgMC4wLAogICAgICAgIChudW03IC0gbnVtMTIpLCAgICAgICAgKDEuMCAtIChudW00ICsgbnVtNikpLCAobnVtOSArIG51bTEwKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtOCArIG51bTExKSwgICAgICAgIChudW05IC0gbnVtMTApLCAgICAgICAgKDEuMCAtIChudW00ICsgbnVtNSkpLCAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMS4wCiAgICApOwp9CgpmbG9hdCBkaXN0YW5jZWZpZWxkX3NjYWxlKCl7CiAgICAvLyBHbHlwaCBkaXN0YW5jZSBmaWVsZCB1bml0cyBhcmUgaW4gcGl4ZWxzOyBjb252ZXJ0IHRvIGRpbWVuc2lvbmxlc3MKICAgIC8vIHgtY29vcmRpbmF0ZSBvZiB0ZXh0dXJlIGluc3RlYWQgZm9yIGNvbnNpc3RlbmN5IHdpdGggcHJvZ3JhbW1hdGljIHV2CiAgICAvLyBkaXN0YW5jZSBmaWVsZHMgaW4gZnJhZ21lbnQgc2hhZGVyLiBTZWUgYWxzbyBjb21tZW50cyBiZWxvdy4KICAgIHZlYzQgdXZfcmVjdCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIGZsb2F0IHBpeHNpemVfeCA9ICh1dl9yZWN0LnogLSB1dl9yZWN0LngpICogZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpOwogICAgcmV0dXJuIC0xLjAvcGl4c2l6ZV94Owp9Cgp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKbWF0MiBkaWFnbSh2ZWMyIHYpewogICAgcmV0dXJuIG1hdDIodi54LCAwLjAsIDAuMCwgdi55KTsKfQoKZmxvYXQgX2RldGVybWluYW50KG1hdDIgbSkgewogIHJldHVybiBtWzBdWzBdICogbVsxXVsxXSAtIG1bMF1bMV0gKiBtWzFdWzBdOwp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIHZlYzIgYmJveF9zaWduZWRfcmFkaXVzID0gMC41ICogZ2V0X21hcmtlcnNpemUoKTsgLy8gbm90ZTsgY29tcG9uZW50cyBtYXkgYmUgbmVnYXRpdmUuCiAgICB2ZWMyIHNwcml0ZV9iYm94X2NlbnRyZSA9IGdldF9xdWFkX29mZnNldCgpICsgYmJveF9zaWduZWRfcmFkaXVzOwoKICAgIG1hdDQgcHZpZXcgPSBwcm9qZWN0aW9uICogdmlldzsKICAgIC8vIENvbXB1dGUgdHJhbnNmb3JtIGZvciB0aGUgb2Zmc2V0IHZlY3RvcnMgZnJvbSB0aGUgY2VudHJhbCBwb2ludAogICAgbWF0NCB0cmFucyA9IGdldF90cmFuc2Zvcm1fbWFya2VyKCkgPyBtb2RlbCA6IG1hdDQoMS4wKTsKICAgIHRyYW5zID0gKGdldF9iaWxsYm9hcmQoKSA/IHByb2plY3Rpb24gOiBwdmlldykgKiBxbWF0KGdldF9yb3RhdGlvbnMoKSkgKiB0cmFuczsKCiAgICAvLyBDb21wdXRlIGNlbnRyZSBvZiBiaWxsYm9hcmQgaW4gY2xpcHBpbmcgY29vcmRpbmF0ZXMKICAgIHZlYzQgc3ByaXRlX2NlbnRlciA9IHRyYW5zICogdmVjNChzcHJpdGVfYmJveF9jZW50cmUsIDAsIDApOwogICAgdmVjNCBkYXRhX3BvaW50ID0gZ2V0X3ByZXByb2plY3Rpb24oKSAqIG1vZGVsICogdmVjNCh0b3ZlYzMoZ2V0X3BvcygpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gdmVjNChkYXRhX3BvaW50Lnh5eiAvIGRhdGFfcG9pbnQudyArIG1hdDMobW9kZWwpICogdG92ZWMzKGdldF9tYXJrZXJfb2Zmc2V0KCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSBwdmlldyAqIGRhdGFfcG9pbnQ7CiAgICB2ZWM0IHZjbGlwID0gZGF0YV9wb2ludCArIHNwcml0ZV9jZW50ZXI7CgogICAgLy8gRXh0cmEgYnVmZmVyaW5nIGlzIHJlcXVpcmVkIGFyb3VuZCBzcHJpdGVzIHdoaWNoIGFyZSBhbnRpYWxpYXNlZCBzbyB0aGF0CiAgICAvLyB0aGUgYW50aWFsaWFzIGJsdXIgZG9lc24ndCBnZXQgY3V0IG9mZiAoc2VlICMxNSkuIFRoaXMgYmx1ciBmYWxscyB0bwogICAgLy8gemVybyBhdCBhIHJhZGl1cyBvZiBBTlRJQUxJQVNfUkFESVVTIHBpeGVscyBpbiB0aGUgdmlld3BvcnQgY29vcmRpbmF0ZXMKICAgIC8vIGFuZCB3ZSB3YW50IHRvIGJ1ZmZlciB0aGUgdmVydGljZXMgaW4gdGhlICpzb3VyY2UqIHNwcml0ZSBjb29yZGluYXRlCiAgICAvLyBzeXN0ZW0gc28gdGhhdCB3ZSBnZXQgdGhpcyBhbW91bnQgaW4gdGhlIG91dHB1dCBjb29yZGluYXRlcy4KICAgIC8vCiAgICAvLyBIZXJlIHdlIGNhbGN1bGF0ZSB0aGUgZGVyaXZhdGl2ZSBvZiB0aGUgbWFwcGluZyBmcm9tIHNwcml0ZSB4eQogICAgLy8gY29vcmRpbmF0ZXMgKGRlZmluZWQgYnkgYHRyYW5zYCkgaW50byB0aGUgdmlld3BvcnQgcGl4ZWwgY29vcmRpbmF0ZXMuCiAgICAvLyBUaGUgZGVyaXZhdGl2ZSBuZWVkcyB0byBpbmNsdWRlIHRoZSBwcm9wZXIgdGVybSBmb3IgdGhlIHBlcnNwZWN0aXZlCiAgICAvLyBkaXZpZGUgaW50byBOREMsIGV2YWx1YXRlZCBhdCB0aGUgY2VudHJlIHBvaW50IGB2Y2xpcGAuCiAgICBtYXQ0IGRfbmRjX2RfY2xpcCA9IG1hdDQoCiAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsCiAgICAgICAgLXZjbGlwLnh5ei8odmNsaXAudyp2Y2xpcC53KSwgICAgICAgICAgMC4wCiAgICApOwogICAgbWF0MiBkeHl2X2R4eXMgPSBkaWFnbSgwLjUgKiBnZXRfcmVzb2x1dGlvbigpKSAqIG1hdDIoZF9uZGNfZF9jbGlwKnRyYW5zKTsKICAgIC8vIE5vdywgb3VyIGJ1ZmZlciBzaXplIGlzIGV4cHJlc3NlZCBpbiB2aWV3cG9ydCBwaXhlbHMgYnV0IHdlIGdldCBiYWNrIHRvCiAgICAvLyB0aGUgc3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHVzaW5nIHRoZSBzY2FsZSBmYWN0b3Igb2YgdGhlCiAgICAvLyB0cmFuc2Zvcm1hdGlvbiAoZm9yIGlzb3Ryb3BpYyB0cmFuc2Zvcm1hdGlvbnMpLiBGb3IgYW5pc290cm9waWMKICAgIC8vIHRyYW5zZm9ybWF0aW9ucywgdGhlIGdlb21ldHJpYyBtZWFuIG9mIHRoZSB0d28gcHJpbmNpcGxlIHNjYWxlIGZhY3RvcnMKICAgIC8vIGlzIGEgcmVhc29uYWJsZSBjb21wcm9taXNlOgogICAgZmxvYXQgdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgPSBzcXJ0KGFicyhfZGV0ZXJtaW5hbnQoZHh5dl9keHlzKSkpOwoKICAgIC8vIEluIHRoZSBmcmFnbWVudCBzaGFkZXIgd2Ugd2FudCBvdXIgc2lnbmVkIGRpc3RhbmNlIGluIHZpZXdwb3J0IChwaXhlbCkKICAgIC8vIGNvb3JkcyBmb3IgZGlyZWN0IHVzZSBpbiBhbnRpYWxpYXNpbmcgc3RlcCBmdW5jdGlvbnMuIFdlIHRoZXJlZm9yZSBuZWVkCiAgICAvLyBhIHNjYWxpbmcgZmFjdG9yIHNpbWlsYXIgdG8gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUsIGJ1dCBpbmNsdWRpbmcKICAgIC8vIHRoZSB1di0+c3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHNjYWxpbmcgZmFjdG9yIGFzIHdlbGwuICBXZSBjaG9vc2UgdG8KICAgIC8vIHVzZSB0aGUgYm91bmRpbmcgYm94ICp4KiB3aWR0aCBmb3IgdGhpcy4gVGhpcyBjb21lcyB3aXRoIHNvbWUKICAgIC8vIGNvbnNpc3RlbmN5IGNvbmRpdGlvbnM6CiAgICAvLyAqIEZvciBwcm9jZWR1cmFsIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0aGUgc3ByaXRlIGJvdW5kaW5nIGJveCB0byBiZQogICAgLy8gICBzcXVhcmUuIChJZiBub3QsIHRoZSB1diBjb29yZGluYXRlcyB3aWxsIGJlIGFuaXNvdHJvcGljYWxseSBzY2FsZWQgYW5kCiAgICAvLyAgIGFueSBjYWxjdWxhdGlvbiBiYXNlZCBvbiB0aGVtIHdpbGwgbm90IGJlIGEgZGlzdGFuY2UgZnVuY3Rpb24uKQogICAgLy8gKiBGb3Igc2FtcGxlZCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdG8gY29uc2lzdGVudGx5IGNob29zZSB0aGUgKngqCiAgICAvLyAgIGZvciB0aGUgc2NhbGluZyBpbiBnZXRfZGlzdGFuY2VmaWVsZF9zY2FsZSgpLgogICAgZmxvYXQgc3ByaXRlX2Zyb21fdV9zY2FsZSA9IGFicyhnZXRfbWFya2Vyc2l6ZSgpLngpOwogICAgZnJhZ191dnNjYWxlID0gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgKiBzcHJpdGVfZnJvbV91X3NjYWxlOwogICAgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlID0gZGlzdGFuY2VmaWVsZF9zY2FsZSgpOwogICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3IoKSk7CiAgICBmcmFnX3V2ID0gZ2V0X3V2KCk7CiAgICBmcmFnX3V2X29mZnNldF93aWR0aCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIC8vIHNjcmVlbiBzcGFjZSBjb29yZGluYXRlcyBvZiB0aGUgcG9zaXRpb24KICAgIHZlYzQgcXVhZF92ZXJ0ZXggPSAodHJhbnMgKiB2ZWM0KDIuMCAqIGJib3hfc2lnbmVkX3JhZGl1cyAqIGdldF9wb3NpdGlvbigpLCAwLjAsIDAuMCkpOwogICAgZ2xfUG9zaXRpb24gPSB2Y2xpcCArIHF1YWRfdmVydGV4OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaEogjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgppbiB2ZWM0IGZyYWdfY29sb3I7CmluIHZlYzIgZnJhZ191djsKCiNkZWZpbmUgQ0lSQ0xFICAgICAgICAgICAgMAojZGVmaW5lIFJFQ1RBTkdMRSAgICAgICAgIDEKI2RlZmluZSBST1VOREVEX1JFQ1RBTkdMRSAyCiNkZWZpbmUgRElTVEFOQ0VGSUVMRCAgICAgMwojZGVmaW5lIFRSSUFOR0xFICAgICAgICAgIDQKCiNkZWZpbmUgTV9TUVJUXzIgICAgICAgICAgMS40MTQyMTM1CgoKLy8gSGFsZiB3aWR0aCBvZiBhbnRpYWxpYXNpbmcgc21vb3Roc3RlcAojZGVmaW5lIEFOVElBTElBU19SQURJVVMgMC44Ci8vIFRoZXNlIHZlcnNpb25zIG9mIGFhc3RlcCBhc3N1bWUgdGhhdCBgZGlzdGAgaXMgYSBzaWduZWQgZGlzdGFuY2UgZnVuY3Rpb24KLy8gd2hpY2ggaGFzIGJlZW4gc2NhbGVkIHRvIGJlIGluIHVuaXRzIG9mIHBpeGVscy4KZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMSArIEFOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgdGhyZXNob2xkMiwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxK0FOVElBTElBU19SQURJVVMsIGRpc3QpIC0KICAgICAgICAgICBzbW9vdGhzdGVwKHRocmVzaG9sZDItQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMitBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKLy8gUHJvY2VkdXJhbCBzaWduZWQgZGlzdGFuY2UgZnVuY3Rpb25zIG9uIHRoZSB1diBjb29yZGluYXRlIHBhdGNoIFswLDFdeFswLDFdCi8vIE5vdGUgdGhhdCBmb3IgYW50aWFsaWFzaW5nIHRvIHdvcmsgcHJvcGVybHkgdGhlc2Ugc2hvdWxkIGJlICpzY2FsZSBwcmVzZXJ2aW5nKgovLyAoSWYgeW91IG11c3QgcmVzY2FsZSB1diwgbWFrZSBzdXJlIHRvIHB1dCB0aGUgc2NhbGUgZmFjdG9yIGJhY2sgaW4gbGF0ZXIuKQpmbG9hdCB0cmlhbmdsZSh2ZWMyIFApewogICAgUCAtPSB2ZWMyKDAuNSk7CiAgICBmbG9hdCB4ID0gTV9TUVJUXzIgKiAoUC54IC0gUC55KTsKICAgIGZsb2F0IHkgPSBNX1NRUlRfMiAqIChQLnggKyBQLnkpOwogICAgZmxvYXQgcjEgPSBtYXgoYWJzKHgpLCBhYnMoeSkpIC0gMS4wLygyLjAqTV9TUVJUXzIpOwogICAgZmxvYXQgcjIgPSBQLnk7CiAgICByZXR1cm4gLW1heChyMSxyMik7Cn0KCmZsb2F0IGNpcmNsZSh2ZWMyIHV2KXsKICAgIHJldHVybiAwLjUtbGVuZ3RoKHV2LXZlYzIoMC41KSk7Cn0KCmZsb2F0IHJlY3RhbmdsZSh2ZWMyIHV2KXsKICAgIHZlYzIgZCA9IG1heCgtdXYsIHV2LXZlYzIoMSkpOwogICAgcmV0dXJuIC0oKGxlbmd0aChtYXgodmVjMigwLjApLCBkKSkgKyBtaW4oMC4wLCBtYXgoZC54LCBkLnkpKSkpOwp9CgpmbG9hdCByb3VuZGVkX3JlY3RhbmdsZSh2ZWMyIHV2LCB2ZWMyIHRsLCB2ZWMyIGJyKXsKICAgIHZlYzIgZCA9IG1heCh0bC11diwgdXYtYnIpOwogICAgcmV0dXJuIC0oKGxlbmd0aChtYXgodmVjMigwLjApLCBkKSkgKyBtaW4oMC4wLCBtYXgoZC54LCBkLnkpKSktdGwueCk7Cn0KCnZvaWQgZmlsbChib29sIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIGNvbG9yID0gbWl4KGNvbG9yLCBmaWxsY29sb3IsIGluZmlsbCk7Cn0KCnZvaWQgZmlsbChzYW1wbGVyMkQgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgdmVjNCBpbV9jb2xvciA9IHRleHR1cmUoaW1hZ2UsIHV2Lnl4KTsKICAgIGNvbG9yID0gbWl4KGNvbG9yLCBpbV9jb2xvciwgaW5maWxsKTsKfQoKaW4gZmxvYXQgZnJhZ191dnNjYWxlOwppbiBmbG9hdCBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGU7CmluIHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZCwgdmVjMiB1dil7CiAgICAvLyBHbHlwaCBkaXN0YW5jZSBmaWVsZCB1bml0cyBhcmUgaW4gcGl4ZWxzLiBDb252ZXJ0IHRvIHNhbWUgZGlzdGFuY2UKICAgIC8vIHNjYWxpbmcgYXMgZl91di54IGZvciBjb25zaXN0ZW5jeSB3aXRoIHRoZSBwcm9jZWR1cmFsIHNpZ25lZF9kaXN0YW5jZQogICAgLy8gY2FsY3VsYXRpb25zLgogICAgcmV0dXJuIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSAqIHRleHR1cmUoZGlzdGFuY2VmaWVsZCwgdXYpLnI7Cn0KCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKGJvb2wgZGlzdGFuY2VmaWVsZCwgdmVjMiB1dil7CiAgICByZXR1cm4gMC4wOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewoKICAgIGludCBzaGFwZSA9IGdldF9zaGFwZV90eXBlKCk7CiAgICBmbG9hdCBzaWduZWRfZGlzdGFuY2UgPSAwLjA7CiAgICB2ZWM0IHV2X29mZiA9IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwogICAgdmVjMiB0ZXhfdXYgPSBtaXgodXZfb2ZmLnh5LCB1dl9vZmYuencsIGNsYW1wKGZyYWdfdXYsIDAuMCwgMS4wKSk7CiAgICBpZihzaGFwZSA9PSBDSVJDTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gY2lyY2xlKGZyYWdfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBESVNUQU5DRUZJRUxEKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHNjYWxlZF9kaXN0YW5jZWZpZWxkKGRpc3RhbmNlZmllbGQsIHRleF91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFJPVU5ERURfUkVDVEFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHJvdW5kZWRfcmVjdGFuZ2xlKGZyYWdfdXYsIHZlYzIoMC4yKSwgdmVjMigwLjgpKTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUkVDVEFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IDEuMDsgLy8gcmVjdGFuZ2xlKGZfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBUUklBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSB0cmlhbmdsZShmcmFnX3V2KTsKCiAgICBzaWduZWRfZGlzdGFuY2UgKj0gZnJhZ191dnNjYWxlOwogICAgZmxvYXQgaW5zaWRlID0gYWFzdGVwKDAuMCwgc2lnbmVkX2Rpc3RhbmNlKTsKICAgIHZlYzQgZmluYWxfY29sb3IgPSB2ZWM0KGZyYWdfY29sb3IueHl6LCAwKTsKICAgIGZpbGwoaW1hZ2UsIGZyYWdfY29sb3IsIGZyYWdfdXYsIGluc2lkZSwgZmluYWxfY29sb3IpOwogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZmluYWxfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KICAgIGlmIChmaW5hbF9jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZmluYWxfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOHq3F1YWRfb2Zmc2V0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF6ptYXJrZXJzaXplgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61tYXJrZXJfb2Zmc2V0gqt0eXBlX2xlbmd0aAOkZmxhdMcAF6Vjb2xvcoKrdHlwZV9sZW5ndGgEpGZsYXTHABevdXZfb2Zmc2V0X3dpZHRogqt0eXBlX2xlbmd0aASkZmxhdMcAF6Nwb3OCq3R5cGVfbGVuZ3RoA6RmbGF0xwAXqXJvdGF0aW9uc4KrdHlwZV9sZW5ndGgEpGZsYXTHABePrHRyYW5zcGFyZW5jeccUaLMzNzcwNzQxMjY5NjgyNjIwNzg3pXNwYWNlxxVotDE1MjE4MDg0MDQxNzI1MTA3MjE2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTIyOTA5MDgyMzk4NDIxNjc4NzapY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhDAABIQ6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxRoszYxNDcwOTQ3OTAzMTM1NzQ4ODKxYXR0cmlidXRlX3VwZGF0ZXLHFGizMjQyNzI0ODY1NDM0MTk0NzkxNahvdmVyZHJhd8cUaLM4ODMyNTI0NTYyMjY2ODkxNjk0r3VuaWZvcm1fdXBkYXRlcscTaLI5Mzg3OTc0OTQyMDc4MzM0OTKlZmFjZXPHFGizODAwMzc3Njk2MTQ3ODQyMTExMqR1dWlkszIyOTA5MDgyMzk4NDIxNjc4NzatdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXjqx0cmFuc3BhcmVuY3nHFWi0MTIzNDM0OTkzNjM3NDQ4NTA5NTWlc3BhY2XHFGizNzg3NDgyNDI1MDEyMzUzMjc0Mqx2ZXJ0ZXhhcnJheXOCp25vcm1hbHOCq3R5cGVfbGVuZ3RoA6RmbGF0x2AXAAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAD//38/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/qHBvc2l0aW9ugqt0eXBlX2xlbmd0aAOkZmxhdMdgF/7/D0L+/y9CAAAAAAAAOEP+/y9CAAAAAAAAOEMAADhDAAAAAP7/D0IAADhDAAAAALjoKkJcdElCAAAAAC66mEJcdElCAAAAAC66mEIWXaRCAAAAALjoKkIWXaRCAAAAAKRuYW1luW1lc2gtMTE1ODAzODk3ODU3OTIzNzY0NTipY2FtX3NwYWNlpGRhdGGodW5pZm9ybXPeABa+aW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyw6liYWNrbGlnaHTKAAAAAKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAADIQgAAgD+nZGlmZnVzZccMF83MzD7NzMw+zczMPqpjb2xvcnJhbmdlw6dsb3djbGlw2BcAAAAAAAAAAAAAAAAAAAAAqGhpZ2hjbGlw2BcAAAAAAAAAAAAAAAAAAAAAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+pbmFuX2NvbG9y2BcAAAAAAAAAAAAAAAAAAAAAp3BhdHRlcm7CrG5vcm1hbG1hdHJpeMckFwAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAP6J1dtcXAAAAAAAAAACnc2hhZGluZ8Koc3BlY3VsYXLHDBfNzEw+zcxMPs3MTD6ncGlja2luZ8Kpb2JqZWN0X2lkAK11bmlmb3JtX2NvbG9y2BcAAAAAAAAAAAAAAADNzEw+q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvcsKpc2hpbmluZXNzykIAAACoY29sb3JtYXDDp3Zpc2libGXHFWi0MTMzMDM5MjcwMDgwMzk2NTg1NDSxYXR0cmlidXRlX3VwZGF0ZXLHFGizMjA3NDkwMjkwOTU5NDY1ODc1NKhvdmVyZHJhd8cVaLQxMjE2OTU1MTExNTg1NDEzMDkyMq91bmlmb3JtX3VwZGF0ZXLHFGizMzI1MTg5OTIzNTQ1MjAyMzI1OKVmYWNlc8cVaLQxODE1MzkxMDczNDczNjA5MjI2MaR1dWlktDExNTgwMzg5Nzg1NzkyMzc2NDU4rXZlcnRleF9zb3VyY2XaFCQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzMgcG9zaXRpb247CnZlYzMgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMyBub3JtYWxzOwp2ZWMzIGdldF9ub3JtYWxzKCl7cmV0dXJuIG5vcm1hbHM7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMzIHNwZWN1bGFyOwp2ZWMzIGdldF9zcGVjdWxhcigpe3JldHVybiBzcGVjdWxhcjt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBhdHRlcm47CmJvb2wgZ2V0X3BhdHRlcm4oKXtyZXR1cm4gcGF0dGVybjt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBmbG9hdCBiYWNrbGlnaHQ7CmZsb2F0IGdldF9iYWNrbGlnaHQoKXtyZXR1cm4gYmFja2xpZ2h0O30KdW5pZm9ybSB2ZWMzIGFtYmllbnQ7CnZlYzMgZ2V0X2FtYmllbnQoKXtyZXR1cm4gYW1iaWVudDt9CnVuaWZvcm0gbWF0MyBub3JtYWxtYXRyaXg7Cm1hdDMgZ2V0X25vcm1hbG1hdHJpeCgpe3JldHVybiBub3JtYWxtYXRyaXg7fQp1bmlmb3JtIHZlYzMgbGlnaHRwb3NpdGlvbjsKdmVjMyBnZXRfbGlnaHRwb3NpdGlvbigpe3JldHVybiBsaWdodHBvc2l0aW9uO30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBjb2xvcjsKYm9vbCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIHZlYzQgdW5pZm9ybV9jb2xvcjsKdmVjNCBnZXRfdW5pZm9ybV9jb2xvcigpe3JldHVybiB1bmlmb3JtX2NvbG9yO30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KCgoKb3V0IHZlYzIgZnJhZ191djsKb3V0IHZlYzMgb19ub3JtYWw7Cm91dCB2ZWMzIG9fY2FtZGlyOwpvdXQgdmVjMyBvX2xpZ2h0ZGlyOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQoZmxvYXQgdil7cmV0dXJuIHZlYzQodiwgMC4wLCAwLjAsIDAuMCk7fQp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgdmVydGV4X2NvbG9yKHZlYzMgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcih2ZWM0IGNvbG9yLCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGNvbG9yOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihib29sIHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihmbG9hdCB2YWx1ZSwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgaWYgKGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKSkgewogICAgICAgIHJldHVybiB2ZWM0KHZhbHVlLCAwLjAsIDAuMCwgMC4wKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0KfQoKdm9pZCByZW5kZXIodmVjNCBwb3NpdGlvbl93b3JsZCwgdmVjMyBub3JtYWwsIG1hdDQgdmlldywgbWF0NCBwcm9qZWN0aW9uLCB2ZWMzIGxpZ2h0cG9zaXRpb24pCnsKICAgIC8vIG5vcm1hbCBpbiB3b3JsZCBzcGFjZQogICAgb19ub3JtYWwgPSBnZXRfbm9ybWFsbWF0cml4KCkgKiBub3JtYWw7CiAgICAvLyBwb3NpdGlvbiBpbiB2aWV3IHNwYWNlIChhcyBzZWVuIGZyb20gY2FtZXJhKQogICAgdmVjNCB2aWV3X3BvcyA9IHZpZXcgKiBwb3NpdGlvbl93b3JsZDsKICAgIC8vIHBvc2l0aW9uIGluIGNsaXAgc3BhY2UgKHcvIGRlcHRoKQogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uICogdmlld19wb3M7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKICAgIC8vIGRpcmVjdGlvbiB0byBsaWdodAogICAgb19saWdodGRpciA9IG5vcm1hbGl6ZSh2aWV3KnZlYzQobGlnaHRwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXo7CiAgICAvLyBkaXJlY3Rpb24gdG8gY2FtZXJhCiAgICAvLyBUaGlzIGlzIGVxdWl2YWxlbnQgdG8KICAgIC8vIG5vcm1hbGl6ZSh2aWV3KnZlYzQoZXllcG9zaXRpb24sIDEuMCkgLSB2aWV3X3BvcykueHl6CiAgICAvLyAoYnkgZGVmaW5pdGlvbiBgdmlldyAqIGV5ZXBvc2l0aW9uID0gMGApCiAgICBvX2NhbWRpciA9IG5vcm1hbGl6ZSgtdmlld19wb3MpLnh5ejsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICAvLyBnZXRfKiBnZXRzIHRoZSBnbG9iYWwgaW5wdXRzICh1bmlmb3JtLCBzYW1wbGVyLCBwb3NpdGlvbiBhcnJheSkKICAgIC8vIHRob3NlIGZ1bmN0aW9ucyB3aWxsIGdldCBpbnNlcnRlZCBieSB0aGUgc2hhZGVyIGNyZWF0aW9uIHBpcGVsaW5lCiAgICB2ZWMzIHZlcnRleF9wb3NpdGlvbiA9IHRvdmVjMyhnZXRfcG9zaXRpb24oKSk7CiAgICBpZiAoaXNuYW4odmVydGV4X3Bvc2l0aW9uLnopKSB7CiAgICAgICAgdmVydGV4X3Bvc2l0aW9uLnogPSAwLjA7CiAgICB9CiAgICB2ZWM0IHBvc2l0aW9uX3dvcmxkID0gbW9kZWwgKiB2ZWM0KHZlcnRleF9wb3NpdGlvbiwgMSk7CgogICAgcmVuZGVyKHBvc2l0aW9uX3dvcmxkLCBnZXRfbm9ybWFscygpLCB2aWV3LCBwcm9qZWN0aW9uLCBnZXRfbGlnaHRwb3NpdGlvbigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXYgPSB2ZWMyKDEuMCAtIGZyYWdfdXYueSwgZnJhZ191di54KTsKICAgIGZyYWdfY29sb3IgPSB2ZXJ0ZXhfY29sb3IoZ2V0X2NvbG9yKCksIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9WZXJ0ZXhJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaFRojdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBib29sIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjsKYm9vbCBnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCl7cmV0dXJuIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjt9CnVuaWZvcm0gZmxvYXQgYmFja2xpZ2h0OwpmbG9hdCBnZXRfYmFja2xpZ2h0KCl7cmV0dXJuIGJhY2tsaWdodDt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIG1hdDMgbm9ybWFsbWF0cml4OwptYXQzIGdldF9ub3JtYWxtYXRyaXgoKXtyZXR1cm4gbm9ybWFsbWF0cml4O30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSB2ZWM0IHVuaWZvcm1fY29sb3I7CnZlYzQgZ2V0X3VuaWZvcm1fY29sb3IoKXtyZXR1cm4gdW5pZm9ybV9jb2xvcjt9CnVuaWZvcm0gYm9vbCBzaGFkaW5nOwpib29sIGdldF9zaGFkaW5nKCl7cmV0dXJuIHNoYWRpbmc7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CgppbiB2ZWMyIGZyYWdfdXY7CmluIHZlYzQgZnJhZ19jb2xvcjsKZmxhdCBpbiBpbnQgc2FtcGxlX2ZyYWdfY29sb3I7CgppbiB2ZWMzIG9fbm9ybWFsOwppbiB2ZWMzIG9fY2FtZGlyOwppbiB2ZWMzIG9fbGlnaHRkaXI7Cgp2ZWMzIGJsaW5ucGhvbmcodmVjMyBOLCB2ZWMzIFYsIHZlYzMgTCwgdmVjMyBjb2xvcil7CiAgICBmbG9hdCBkaWZmX2NvZWZmID0gbWF4KGRvdChMLCBOKSwgMC4wKTsKCiAgICAvLyBzcGVjdWxhciBjb2VmZmljaWVudAogICAgdmVjMyBIID0gbm9ybWFsaXplKEwgKyBWKTsKCiAgICBmbG9hdCBzcGVjX2NvZWZmID0gcG93KG1heChkb3QoSCwgTiksIDAuMCksIGdldF9zaGluaW5lc3MoKSk7CiAgICBpZiAoZGlmZl9jb2VmZiA8PSAwLjApCiAgICAgICAgc3BlY19jb2VmZiA9IDAuMDsKICAgIC8vIGZpbmFsIGxpZ2h0aW5nIG1vZGVsCiAgICByZXR1cm4gdmVjMygKICAgICAgICBnZXRfZGlmZnVzZSgpICogZGlmZl9jb2VmZiAqIGNvbG9yICsKICAgICAgICBnZXRfc3BlY3VsYXIoKSAqIHNwZWNfY29lZmYKICAgICk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzMgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQoKdmVjNCBnZXRfY29sb3IodmVjNCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBjb2xvcjsKfQoKdmVjNCBnZXRfY29sb3IoYm9vbCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBmcmFnX2NvbG9yOyAgLy8gY29sb3Igbm90IGluIHVuaWZvcm0KfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgaWYgKGdldF9wYXR0ZXJuKCkpIHsKICAgICAgICB2ZWMyIHNpemUgPSB2ZWMyKHRleHR1cmVTaXplKGNvbG9yLCAwKSk7CiAgICAgICAgdmVjMiBwb3MgPSBnbF9GcmFnQ29vcmQueHk7CiAgICAgICAgcmV0dXJuIHRleGVsRmV0Y2goY29sb3IsIGl2ZWMyKG1vZChwb3MueCwgc2l6ZS54KSwgbW9kKHBvcy55LCBzaXplLnkpKSwgMCk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yLCB1dik7CiAgICB9Cn0KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCkpIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcChmcmFnX2NvbG9yLngsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZyYWdfY29sb3I7CiAgICB9Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCB2YWx1ZXMsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGZsb2F0IHZhbHVlID0gdGV4dHVyZSh2YWx1ZXMsIHV2KS54OwogICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgdmVjNCByZWFsX2NvbG9yID0gZ2V0X2NvbG9yKHVuaWZvcm1fY29sb3IsIGZyYWdfdXYsIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKICAgIHZlYzMgc2hhZGVkX2NvbG9yID0gcmVhbF9jb2xvci5yZ2I7CgogICAgaWYoZ2V0X3NoYWRpbmcoKSl7CiAgICAgICAgdmVjMyBMID0gbm9ybWFsaXplKG9fbGlnaHRkaXIpOwogICAgICAgIHZlYzMgTiA9IG5vcm1hbGl6ZShvX25vcm1hbCk7CiAgICAgICAgdmVjMyBsaWdodDEgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCBMLCByZWFsX2NvbG9yLnJnYik7CiAgICAgICAgdmVjMyBsaWdodDIgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCAtTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHNoYWRlZF9jb2xvciA9IGdldF9hbWJpZW50KCkgKiByZWFsX2NvbG9yLnJnYiArIGxpZ2h0MSArIGdldF9iYWNrbGlnaHQoKSAqIGxpZ2h0MjsKICAgIH0KCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChyZWFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKHJlYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IHZlYzQoc2hhZGVkX2NvbG9yLCByZWFsX2NvbG9yLmEpOwp9Cq9iYWNrZ3JvdW5kY29sb3LHFGizNjgzNTU4NTE3MjU1MDQ2MTM4OKlwaXhlbGFyZWHHFWi0MTQwMTI2OTAyNDU4OTc2MDE4MjamY2FtZXJhxxVotDEyNTM5MzkyMTc5MTI1ODY3NDE2pHV1aWS0MTQ4NDE2NDc5OTY2NTk4MTkwNTWrY2FtM2Rfc3RhdGXAqmNsZWFyc2NlbmXHFGizODQ3MDk2MDgwOTk1MTIzMDg1NqhjaGlsZHJlbpGJp3Zpc2libGXHFGizOTA2OTg5MTg3MzY1MDY4NDk3MKVwbG90c5PeABCsdHJhbnNwYXJlbmN5xxVotDE3OTM4OTkwMTkyMDIxNzAzNzYwpXNwYWNlxxRoszY3NDQwNTU1ODkzMDM5Mjg4MDisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luHRleHQtNjY4MzAyMjY1OTkyMzY1Mjg4NqljYW1fc3BhY2WlcGl4ZWyodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAAAVQwAADUOlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/p3Zpc2libGXHFWi0MTM4MDI5NDcyMDQ1NzAxMDAwMDOrbWFya2Vyc3BhY2XHFGizNzg1OTE2MTA1ODQzOTk5NjcwOLFhdHRyaWJ1dGVfdXBkYXRlcscUaLM1MzMzNTIwMDcyMTI0NDk0Mzg0qG92ZXJkcmF3xxRoszI2MTUzOTg3NzczNzM3Nzc4OTGvdW5pZm9ybV91cGRhdGVyxxRoszkzMjI2NTk0ODQxNzM5ODI5MDGlZmFjZXPHFGizNTkzOTQxMDQ2Njc1NTcyOTQwNaR1dWlkszY2ODMwMjI2NTk5MjM2NTI4ODatdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABelY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizMzQyODQzMTI2NTc4NDI4NjE0NqVzcGFjZccUaLM1NDA1NTkzMzIwMTAwMTMzMjMzrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTE2NjgwNTM5NDIzODA3MTU0MzUwqWNhbV9zcGFjZaVwaXhlbKh1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAAAVQwAADUOlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6lvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccUaLM3NDU2ODAyMzE3ODgyOTg4MzYzsWF0dHJpYnV0ZV91cGRhdGVyxxVotDE1NzUzOTczNTAxNTE0MjUxNzQ0qG92ZXJkcmF3xxVotDExNzg2NjU4NDE0NzgxMTc3MTMwr3VuaWZvcm1fdXBkYXRlcscUaLM5MzIzMzUyMTE0MjIzNjU5OTg0pWZhY2VzxxVotDEzNDM2ODc1MjI0NDc4Njk2NTM4pHV1aWS0MTY2ODA1Mzk0MjM4MDcxNTQzNTCtdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHE2iyMjE2ODE1NTcxMTYwMzg5NDgwpXNwYWNlxxVotDEyNDM3MjU4OTQyMjQzMTMzNzczrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZbhsaW5lcy02OTA5ODQzOTU2MjQ0Njk1OTCpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOKp3BpY2tpbmfCqnJlc29sdXRpb27XFwAAFUMAAA1DrWxpbmV3aWR0aF9lbmTKP4AAAKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACvbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxRoszY0NzAwMDM5MzA4NjA2MjMyMDCxYXR0cmlidXRlX3VwZGF0ZXLHFGizMzg0OTI4ODUzMDQ0NDg5MzI0NqhvdmVyZHJhd8cUaLMxMDc3OTMxMDQ3NDAwNDMxMjA5r3VuaWZvcm1fdXBkYXRlcscUaLM2NDA4OTE3ODYxOTgzNzQ2Mjg3pWZhY2VzxxVotDE3MjMzOTIxMDY2NTQ2OTM1NDY4pHV1aWSyNjkwOTg0Mzk1NjI0NDY5NTkwrXZlcnRleF9zb3VyY2XaCjEjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBSgjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4SpY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMgEEBck2Ig+xFNnPqpfAz8AAIA/JNiIPsRTZz6qXwM/AACAPyTYiD7EU2c+ql8DPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTIBBAXJNiIPsRTZz6qXwM/AACAPyTYiD7EU2c+ql8DPwAAgD8k2Ig+xFNnPqpfAz8AAIA/JNiIPsRTZz6qXwM/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/xjRDPkxq0D7ZWw4/AACAP8Y0Qz5MatA+2VsOPwAAgD/GNEM+TGrQPtlbDj8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP1w5Az7aqhA/SgcNPwAAgD9cOQM+2qoQP0oHDT8AAIA/XDkDPtqqED9KBw0/AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD/LBVU+yfw3P2sc8j4AAIA/ywVVPsn8Nz9rHPI+AACAP8sFVT7J/Dc/axzyPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD9WfA8/MGJXP4I7iD4AAIA/VnwPPzBiVz+CO4g+AACAP1Z8Dz8wYlc/gjuIPgAAgD+rc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0yAIIF8jVcECrqipA7DB2QAAAgEAAAMB/AADAfwAAgECfEdI/kKthQKuqKkCCimZAAACAQAAAwH8AAMB/AAAAAGrvJ0Crqqo/LHgbQBrEyj+rqipAq6qqP8Z6OUAAAAAA4ddqQAAAwH8AAMB/uls0QAAAAACrqipAznRcPqQhC0AAAAAAAADAfwAAwH8AAIBAlBySP1NMa0Crqqo/WIFSQKuqKkAZ5FZAAACAQAAAwH8AAMB/AAAAAGsxB0Crqqo/xmEJQF348D+rqipAq6qqPxUcS0BDH6c+AACAQAAAwH8AAMB/DsBKQAAAAACrqipAnnM2P6uqqj+sk+M9AAAAAMkw3z4AAMB/AADAfwAAAAAGO4M/q6qqP8otCT+rqipABOWaP59/N0Crqqo/IFdDQKuqKkCvPUdAAACAQAAAwH8AAMB/AAAAANbmzD+rqqo/vJbuP1CWC0CrqipAq6qqP2O9XEAyfCk/AACAQAAAwH8AAMB/YiRhQAAAAAAAAIBAZVcpPwAAwH8AAMB/w2h/PwAAgECrqqo/sl5uQHKwHkCrqipAq6oqQOffA0DoLDRAq6oqQEWXN0AAAIBAAADAfwAAwH/hdPA+q6qqP6uqqj/taco/00cDQKuqqj+rqqo/IOl1P+F08D6rqqo/AADAfwAAwH+2iHdAAAAAAAAAgECI1jk+AADAfwAAwH+tc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTIAggXAACAQL3ZCUDI1XBAq6oqQOwwdkAAAIBAAADAfwAAwH8AAIBAnxHSP5CrYUCrqipAgopmQAAAgEAAAMB/AADAfwAAAABq7ydAq6qqPyx4G0AaxMo/q6oqQKuqqj/GejlAAAAAAOHXakAAAMB/AADAf7pbNEAAAAAAq6oqQM50XD6kIQtAAAAAAAAAwH8AAMB/AACAQJQckj9TTGtAq6qqP1iBUkCrqipAGeRWQAAAgEAAAMB/AADAfwAAAABrMQdAq6qqP8ZhCUBd+PA/q6oqQKuqqj8VHEtAQx+nPgAAgEAAAMB/AADAfw7ASkAAAAAAq6oqQJ5zNj+rqqo/rJPjPQAAAADJMN8+AADAfwAAwH8AAAAABjuDP6uqqj/KLQk/q6oqQATlmj+ffzdAq6qqPyBXQ0CrqipArz1HQAAAgEAAAMB/AADAfwAAAADW5sw/q6qqP7yW7j9QlgtAq6oqQKuqqj9jvVxAMnwpPwAAgEAAAMB/AADAf2IkYUAAAAAAAACAQGVXKT8AAMB/AADAf8Nofz8AAIBAq6qqP7JebkBysB5Aq6oqQKuqKkDn3wNA6Cw0QKuqKkBFlzdAAACAQAAAwH8AAMB/4XTwPquqqj+rqqo/7WnKP9NHA0Crqqo/q6qqPyDpdT/hdPA+q6qqPwAAwH8AAMB/toh3QAAAAAAAAIBAiNY5Pq9iYWNrZ3JvdW5kY29sb3LHFGizMjA0ODAzMjA1MjM3MTM0ODczMqlwaXhlbGFyZWHHFGizODA4NzAzMDY2NTY1MTMxODgzOaZjYW1lcmHHFGizMzU1ODA0OTE5MjQ5NjQ5OTk0MaR1dWlktDExMDQ4MDgyMDQ0Mzg2MDg0MTcxq2NhbTNkX3N0YXRlwKpjbGVhcnNjZW5lxxRoszM3MjU4OTI4ODc3MjIwMjA3MDioY2hpbGRyZW6QszgxNzUzMTM4MTIxNzc4NzEyMjTHFWi0MTQzMDM4NzMwNzA1NjMyODk5MDTbABGruCgoKSA9PiB7CiAgICAgICAgICAgIGlmICghd2luZG93LkpTU0VSVkVfSU1QT1JUUykgewogICAgICAgICAgICAgICAgd2luZG93LkpTU0VSVkVfSU1QT1JUUyA9IHt9OwogICAgICAgICAgICB9CiAgICAgICAgICAgIEpTU0VSVkVfSU1QT1JUU1snY2M0YzZhYTZhMWYwNmExYjUwMTNiY2EwMTcwMmYzNmExODRjMDQzOS13Z2xtYWtpZS5qcyddID0gYGRhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdDtiYXNlNjQsTHk4Z1pHVnVieTFtYlhRdGFXZHViM0psTFdacGJHVUtMeThnWkdWdWJ5MXNhVzUwTFdsbmJtOXlaUzFtYVd4bENpOHZJRlJvYVhNZ1kyOWtaU0IzWVhNZ1luVnVaR3hsWkNCMWMybHVaeUJnWkdWdWJ5QmlkVzVrYkdWZ0lHRnVaQ0JwZENkeklHNXZkQ0J5WldOdmJXMWxibVJsWkNCMGJ5QmxaR2wwSUdsMElHMWhiblZoYkd4NUNncDJZWElnWTJFZ1BTQWlNVE0ySWl3Z1Iza2dQU0I3Q2lBZ0lDQk1SVVpVT2lBd0xBb2dJQ0FnVFVsRVJFeEZPaUF4TEFvZ0lDQWdVa2xIU0ZRNklESXNDaUFnSUNCU1QxUkJWRVU2SURBc0NpQWdJQ0JFVDB4TVdUb2dNU3dLSUNBZ0lGQkJUam9nTWdwOUxDQldlU0E5SUhzS0lDQWdJRkpQVkVGVVJUb2dNQ3dLSUNBZ0lGQkJUam9nTVN3S0lDQWdJRVJQVEV4WlgxQkJUam9nTWl3S0lDQWdJRVJQVEV4WlgxSlBWRUZVUlRvZ013cDlMQ0IxZFNBOUlEQXNJSFJzSUQwZ01Td2daSFVnUFNBeUxDQlhlU0E5SURNc0lIRjVJRDBnTUN3Z1NHTWdQU0F4TENCbWRTQTlJRElzSUdseUlEMGdNeXdnUVdrZ1BTQXdMQ0JwZENBOUlERXNJRU5wSUQwZ01pd2dhMk1nUFNBeExDQlllU0E5SURJc0lIWnVJRDBnTUN3Z2MzSWdQU0F4TENCdWJDQTlJRElzSUdsc0lEMGdNeXdnY213Z1BTQTBMQ0J3ZFNBOUlEVXNJRjlwSUQwZ01UQXdMQ0J0ZFNBOUlERXdNU3dnWjNVZ1BTQXhNRElzSUhOc0lEMGdNVEF6TENCdmJDQTlJREV3TkN3Z2VIVWdQU0F5TURBc0lIbDFJRDBnTWpBeExDQjJkU0E5SURJd01pd2dYM1VnUFNBeU1ETXNJRWRqSUQwZ01qQTBMQ0JXWXlBOUlESXdOU3dnVFhVZ1BTQXlNRFlzSUdKMUlEMGdNakEzTENCM2RTQTlJREl3T0N3Z1UzVWdQU0F5TURrc0lGUjFJRDBnTWpFd0xDQkZkU0E5SURBc0lFRjFJRDBnTVN3Z1EzVWdQU0F5TENCbFlTQTlJRE1zSUV4MUlEMGdOQ3dnVW5VZ1BTQTFMQ0JRZFNBOUlEWXNJRWwxSUQwZ055d2dWbk1nUFNBd0xDQkVkU0E5SURFc0lFWjFJRDBnTWl3Z1gyNGdQU0F3TENCT2RTQTlJREVzSUVKMUlEMGdNaXdnZW5VZ1BTQXpMQ0JWZFNBOUlEUXNJRTkxSUQwZ05Td2dhR0VnUFNBek1EQXNJRUpwSUQwZ016QXhMQ0I2YVNBOUlETXdNaXdnUkhNZ1BTQXpNRE1zSUVaeklEMGdNekEwTENCUWNpQTlJRE13Tml3Z1YzTWdQU0F6TURjc0lFNXpJRDBnTVdVekxDQjJkQ0E5SURFd01ERXNJRUp6SUQwZ01UQXdNaXdnY25RZ1BTQXhNREF6TENCMFlTQTlJREV3TURRc0lFcDVJRDBnTVRBd05Dd2dibUVnUFNBeE1EQTFMQ0JaZVNBOUlERXdNRFVzSUhSMElEMGdNVEF3Tml3Z1YyTWdQU0F4TURBM0xDQmFlU0E5SURFd01EY3NJRlZwSUQwZ01UQXdPQ3dnSkhrZ1BTQXhNREE0TENCeWJpQTlJREV3TURrc0lFaDFJRDBnTVRBeE1Dd2dhM1VnUFNBeE1ERXhMQ0JqY2lBOUlERXdNVElzSUVkMUlEMGdNVEF4TXl3Z1VITWdQU0F4TURFMExDQnViaUE5SURFd01UVXNJR3R1SUQwZ01UQXhOaXdnVm5VZ1BTQXhNREUzTENCWGRTQTlJREV3TVRnc0lIRjFJRDBnTVRBeE9Td2dWR2tnUFNBeE1ESXdMQ0JZZFNBOUlERXdNakVzSUVkdUlEMGdNVEF5TWl3Z1kzUWdQU0F4TURJekxDQktkU0E5SURFd01qUXNJRmwxSUQwZ01UQXlOU3dnVm00Z1BTQXhNREkyTENCTWFTQTlJREV3TWpjc0lGcDFJRDBnTVRBeU9Dd2dKSFVnUFNBeE1ESTVMQ0JxZFNBOUlERXdNekFzSUZGMUlEMGdNVEF6TVN3Z1MzVWdQU0F4TURNeUxDQmxaQ0E5SURFd016TXNJR0ZzSUQwZ016TTNOellzSUd4c0lEMGdNek0zTnpjc0lHTnNJRDBnTXpNM056Z3NJR2hzSUQwZ016TTNOemtzSUhWc0lEMGdNelU0TkRBc0lHUnNJRDBnTXpVNE5ERXNJR1pzSUQwZ016VTRORElzSUhCc0lEMGdNelU0TkRNc0lIUmtJRDBnTXpZeE9UWXNJRzFzSUQwZ016YzBPVElzSUdkc0lEMGdNemMwT1RZc0lHNWtJRDBnTXpjNE1EZ3NJR2xrSUQwZ016YzRNRGtzSUhKa0lEMGdNemM0TVRBc0lITmtJRDBnTXpjNE1URXNJRzlrSUQwZ016YzRNVElzSUdGa0lEMGdNemM0TVRNc0lHeGtJRDBnTXpjNE1UUXNJR05rSUQwZ016YzRNVFVzSUdoa0lEMGdNemM0TVRZc0lIVmtJRDBnTXpjNE1UY3NJR1JrSUQwZ016YzRNVGdzSUdaa0lEMGdNemM0TVRrc0lIQmtJRDBnTXpjNE1qQXNJRzFrSUQwZ016YzRNakVzSUdka0lEMGdNelkwT1RJc0lIaGtJRDBnTXpjNE5EQXNJSGxrSUQwZ016YzROREVzSUhaa0lEMGdNemM0TkRJc0lGOWtJRDBnTXpjNE5ETXNJRTFrSUQwZ016YzRORFFzSUdKa0lEMGdNemM0TkRVc0lIZGtJRDBnTXpjNE5EWXNJRk5rSUQwZ016YzRORGNzSUZSa0lEMGdNemM0TkRnc0lFVmtJRDBnTXpjNE5Ea3NJRUZrSUQwZ016YzROVEFzSUVOa0lEMGdNemM0TlRFc0lFeGtJRDBnTXpjNE5USXNJRkprSUQwZ016YzROVE1zSUZCa0lEMGdNakl3TUN3Z1NXUWdQU0F5TWpBeExDQkVaQ0E5SURJeU1ESXNJSHB6SUQwZ01qTXdNQ3dnVlhNZ1BTQXlNekF4TENCNWJ5QTlJREl6TURJc0lFMXBJRDBnTWpRd01Dd2dZbWtnUFNBeU5EQXhMQ0JQY3lBOUlESTBNRElzSUhWaElEMGdNalV3TUN3Z2NXTWdQU0F5TlRBeExDQkdaQ0E5SURBc0lHcDVJRDBnTVN3Z1VYa2dQU0F5TENCT2RDQTlJRE5sTXl3Z1Qya2dQU0F6TURBeExDQk9aQ0E5SURNeU1EQXNJRUprSUQwZ016SXdNU3dnU0drZ1BTQXdMQ0I2WkNBOUlERXNJRXQ1SUQwZ01Dd2dkbThnUFNBM05qZ3dMQ0JsTUNBOUlEYzJPREVzSUhRd0lEMGdOelk0TWl3Z2JqQWdQU0EzTmpnekxDQnBNQ0E5SURNME1EVTFMQ0J5TUNBOUlETTBNRFUyTENCek1DQTlJRFV6T0RZc0lHOHdJRDBnTlRFeUxDQmhNQ0E5SURVeE15d2diREFnUFNBMU1UUXNJR013SUQwZ05URTFMQ0JvTUNBOUlEVXhOaXdnZFRBZ1BTQTFNVGNzSUdRd0lEMGdOVEU0TENCVlpDQTlJRFV4T1N3Z2FISWdQU0F6TlRBME5Dd2dkWElnUFNBek5UQTBPQ3dnWmpBZ1BTQXpOVEEwTUN3Z2NEQWdQU0F6TlRBME5Td2diVEFnUFNBek5UQTBPU3dnWnpBZ1BTQXpOVEEwTVN3Z2VEQWdQU0F6TlRBME5pd2dlVEFnUFNBek5UQTFNQ3dnZGpBZ1BTQXpOVEEwTWl3Z1h6QWdQU0FpTVRBd0lpd2dlR3dnUFNBaU16QXdJR1Z6SWl3Z1JXNGdQU0JqYkdGemN5QjdDaUFnSUNCaFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXNhWE4wWlc1bGNuTWdQVDA5SUhadmFXUWdNQ0FtSmlBb2RHaHBjeTVmYkdsemRHVnVaWEp6SUQwZ2UzMHBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1ZmJHbHpkR1Z1WlhKek93b2dJQ0FnSUNBZ0lHNWJaVjBnUFQwOUlIWnZhV1FnTUNBbUppQW9ibHRsWFNBOUlGdGRLU3dnYmx0bFhTNXBibVJsZUU5bUtIUXBJRDA5UFNBdE1TQW1KaUJ1VzJWZExuQjFjMmdvZENrN0NpQWdJQ0I5Q2lBZ0lDQm9ZWE5GZG1WdWRFeHBjM1JsYm1WeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmJHbHpkR1Z1WlhKeklEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgyeHBjM1JsYm1WeWN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JsdGxYU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHNWJaVjB1YVc1a1pYaFBaaWgwS1NBaFBUMGdMVEU3Q2lBZ0lDQjlDaUFnSUNCeVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmJHbHpkR1Z1WlhKeklEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDJ4cGMzUmxibVZ5YzF0bFhUc0tJQ0FnSUNBZ0lDQnBaaUFvYVNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYVM1cGJtUmxlRTltS0hRcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5SUNFOVBTQXRNU0FtSmlCcExuTndiR2xqWlNoeUxDQXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCa2FYTndZWFJqYUVWMlpXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmJHbHpkR1Z1WlhKeklEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDJ4cGMzUmxibVZ5YzF0bExuUjVjR1ZkT3dvZ0lDQWdJQ0FnSUdsbUlDaHVJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaUzUwWVhKblpYUWdQU0IwYUdsek93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzR1YzJ4cFkyVW9NQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQnBMbXhsYm1kMGFEc2djaUE4SUc4N0lISXJLeWxwVzNKZExtTmhiR3dvZEdocGN5d2daU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVkR0Z5WjJWMElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wc0lIQjBJRDBnVzEwN0NtWnZjaWhzWlhRZ2N5QTlJREE3SUhNZ1BDQXlOVFk3SUhNckt5bHdkRnR6WFNBOUlDaHpJRHdnTVRZZ1B5QWlNQ0lnT2lBaUlpa2dLeUJ6TG5SdlUzUnlhVzVuS0RFMktUc0tkbUZ5SUZaeUlEMGdNVEl6TkRVMk55d2dWMjRnUFNCTllYUm9MbEJKSUM4Z01UZ3dMQ0JrY2lBOUlERTRNQ0F2SUUxaGRHZ3VVRWs3Q21aMWJtTjBhVzl1SUVWMEtDa2dld29nSUNBZ2JHVjBJSE1nUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJR1VnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJSFFnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJRzRnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQTdDaUFnSUNCeVpYUjFjbTRnS0hCMFczTWdKaUF5TlRWZElDc2djSFJiY3lBK1BpQTRJQ1lnTWpVMVhTQXJJSEIwVzNNZ1BqNGdNVFlnSmlBeU5UVmRJQ3NnY0hSYmN5QStQaUF5TkNBbUlESTFOVjBnS3lBaUxTSWdLeUJ3ZEZ0bElDWWdNalUxWFNBcklIQjBXMlVnUGo0Z09DQW1JREkxTlYwZ0t5QWlMU0lnS3lCd2RGdGxJRDQrSURFMklDWWdNVFVnZkNBMk5GMGdLeUJ3ZEZ0bElENCtJREkwSUNZZ01qVTFYU0FySUNJdElpQXJJSEIwVzNRZ0ppQTJNeUI4SURFeU9GMGdLeUJ3ZEZ0MElENCtJRGdnSmlBeU5UVmRJQ3NnSWkwaUlDc2djSFJiZENBK1BpQXhOaUFtSURJMU5WMGdLeUJ3ZEZ0MElENCtJREkwSUNZZ01qVTFYU0FySUhCMFcyNGdKaUF5TlRWZElDc2djSFJiYmlBK1BpQTRJQ1lnTWpVMVhTQXJJSEIwVzI0Z1BqNGdNVFlnSmlBeU5UVmRJQ3NnY0hSYmJpQStQaUF5TkNBbUlESTFOVjBwTG5SdlZYQndaWEpEWVhObEtDazdDbjBLWm5WdVkzUnBiMjRnYlhRb2N5d2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lITXBLVHNLZlFwbWRXNWpkR2x2YmlCa1lTaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdLSE1nSlNCbElDc2daU2tnSlNCbE93cDlDbVoxYm1OMGFXOXVJRTlrS0hNc0lHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lISmxkSFZ5YmlCdUlDc2dLSE1nTFNCbEtTQXFJQ2hwSUMwZ2Jpa2dMeUFvZENBdElHVXBPd3A5Q21aMWJtTjBhVzl1SUVoa0tITXNJR1VzSUhRcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUNFOVBTQmxJRDhnS0hRZ0xTQnpLU0F2SUNobElDMGdjeWtnT2lBd093cDlDbVoxYm1OMGFXOXVJRzl5S0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQW9NU0F0SUhRcElDb2djeUFySUhRZ0tpQmxPd3A5Q21aMWJtTjBhVzl1SUd0a0tITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lISmxkSFZ5YmlCdmNpaHpMQ0JsTENBeElDMGdUV0YwYUM1bGVIQW9MWFFnS2lCdUtTazdDbjBLWm5WdVkzUnBiMjRnUjJRb2N5d2daU0E5SURFcElIc0tJQ0FnSUhKbGRIVnliaUJsSUMwZ1RXRjBhQzVoWW5Nb1pHRW9jeXdnWlNBcUlESXBJQzBnWlNrN0NuMEtablZ1WTNScGIyNGdWbVFvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlITWdQRDBnWlNBL0lEQWdPaUJ6SUQ0OUlIUWdQeUF4SURvZ0tITWdQU0FvY3lBdElHVXBJQzhnS0hRZ0xTQmxLU3dnY3lBcUlITWdLaUFvTXlBdElESWdLaUJ6S1NrN0NuMEtablZ1WTNScGIyNGdWMlFvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlITWdQRDBnWlNBL0lEQWdPaUJ6SUQ0OUlIUWdQeUF4SURvZ0tITWdQU0FvY3lBdElHVXBJQzhnS0hRZ0xTQmxLU3dnY3lBcUlITWdLaUJ6SUNvZ0tITWdLaUFvY3lBcUlEWWdMU0F4TlNrZ0t5QXhNQ2twT3dwOUNtWjFibU4wYVc5dUlIRmtLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUNzZ1RXRjBhQzVtYkc5dmNpaE5ZWFJvTG5KaGJtUnZiU2dwSUNvZ0tHVWdMU0J6SUNzZ01Ta3BPd3A5Q21aMWJtTjBhVzl1SUZoa0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ3NnVFdGMGFDNXlZVzVrYjIwb0tTQXFJQ2hsSUMwZ2N5azdDbjBLWm5WdVkzUnBiMjRnU21Rb2N5a2dld29nSUNBZ2NtVjBkWEp1SUhNZ0tpQW9MalVnTFNCTllYUm9MbkpoYm1SdmJTZ3BLVHNLZlFwbWRXNWpkR2x2YmlCWlpDaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5QWhQVDBnZG05cFpDQXdJQ1ltSUNoV2NpQTlJSE1nSlNBeU1UUTNORGd6TmpRM0tTd2dWbklnUFNCV2NpQXFJREUyT0RBM0lDVWdNakUwTnpRNE16WTBOeXdnS0ZaeUlDMGdNU2tnTHlBeU1UUTNORGd6TmpRMk93cDlDbVoxYm1OMGFXOXVJRnBrS0hNcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUNvZ1YyNDdDbjBLWm5WdVkzUnBiMjRnSkdRb2N5a2dld29nSUNBZ2NtVjBkWEp1SUhNZ0tpQmtjanNLZlFwbWRXNWpkR2x2YmlCcFlTaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z0tITWdKaUJ6SUMwZ01Ta2dQVDA5SURBZ0ppWWdjeUFoUFQwZ01Ec0tmUXBtZFc1amRHbHZiaUJZWXloektTQjdDaUFnSUNCeVpYUjFjbTRnVFdGMGFDNXdiM2NvTWl3Z1RXRjBhQzVqWldsc0tFMWhkR2d1Ykc5bktITXBJQzhnVFdGMGFDNU1UaklwS1RzS2ZRcG1kVzVqZEdsdmJpQktZeWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdUV0YwYUM1d2IzY29NaXdnVFdGMGFDNW1iRzl2Y2loTllYUm9MbXh2WnloektTQXZJRTFoZEdndVRFNHlLU2s3Q24wS1puVnVZM1JwYjI0Z2FtUW9jeXdnWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnYkdWMElISWdQU0JOWVhSb0xtTnZjeXdnYnlBOUlFMWhkR2d1YzJsdUxDQmhJRDBnY2loMElDOGdNaWtzSUd3Z1BTQnZLSFFnTHlBeUtTd2dZeUE5SUhJb0tHVWdLeUJ1S1NBdklESXBMQ0JvSUQwZ2J5Z29aU0FySUc0cElDOGdNaWtzSUhVZ1BTQnlLQ2hsSUMwZ2Jpa2dMeUF5S1N3Z1pDQTlJRzhvS0dVZ0xTQnVLU0F2SURJcExDQm1JRDBnY2lnb2JpQXRJR1VwSUM4Z01pa3NJRzBnUFNCdktDaHVJQzBnWlNrZ0x5QXlLVHNLSUNBZ0lITjNhWFJqYUNocEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdWZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNCekxuTmxkQ2hoSUNvZ2FDd2diQ0FxSUhVc0lHd2dLaUJrTENCaElDb2dZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdJbGxhV1NJNkNpQWdJQ0FnSUNBZ0lDQWdJSE11YzJWMEtHd2dLaUJrTENCaElDb2dhQ3dnYkNBcUlIVXNJR0VnS2lCaktUc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdZMkZ6WlNBaVdsaGFJam9LSUNBZ0lDQWdJQ0FnSUNBZ2N5NXpaWFFvYkNBcUlIVXNJR3dnS2lCa0xDQmhJQ29nYUN3Z1lTQXFJR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCallYTmxJQ0pZV2xnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0J6TG5ObGRDaGhJQ29nYUN3Z2JDQXFJRzBzSUd3Z0tpQm1MQ0JoSUNvZ1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ0lsbFlXU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVjMlYwS0d3Z0tpQm1MQ0JoSUNvZ2FDd2diQ0FxSUcwc0lHRWdLaUJqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0FpV2xsYUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1elpYUW9iQ0FxSUcwc0lHd2dLaUJtTENCaElDb2dhQ3dnWVNBcUlHTXBPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkR2hWZEdsc2N6b2dMbk5sZEZGMVlYUmxjbTVwYjI1R2NtOXRVSEp2Y0dWeVJYVnNaWElvS1NCbGJtTnZkVzUwWlhKbFpDQmhiaUIxYm10dWIzZHVJRzl5WkdWeU9pQWlJQ3NnYVNrN0NpQWdJQ0I5Q24wS2RtRnlJRTB3SUQwZ1QySnFaV04wTG1aeVpXVjZaU2g3Q2lBZ0lDQmZYM0J5YjNSdlgxODZJRzUxYkd3c0NpQWdJQ0JFUlVjeVVrRkVPaUJYYml3S0lDQWdJRkpCUkRKRVJVYzZJR1J5TEFvZ0lDQWdaMlZ1WlhKaGRHVlZWVWxFT2lCRmRDd0tJQ0FnSUdOc1lXMXdPaUJ0ZEN3S0lDQWdJR1YxWTJ4cFpHVmhiazF2WkhWc2J6b2daR0VzQ2lBZ0lDQnRZWEJNYVc1bFlYSTZJRTlrTEFvZ0lDQWdhVzUyWlhKelpVeGxjbkE2SUVoa0xBb2dJQ0FnYkdWeWNEb2diM0lzQ2lBZ0lDQmtZVzF3T2lCclpDd0tJQ0FnSUhCcGJtZHdiMjVuT2lCSFpDd0tJQ0FnSUhOdGIyOTBhSE4wWlhBNklGWmtMQW9nSUNBZ2MyMXZiM1JvWlhKemRHVndPaUJYWkN3S0lDQWdJSEpoYm1SSmJuUTZJSEZrTEFvZ0lDQWdjbUZ1WkVac2IyRjBPaUJZWkN3S0lDQWdJSEpoYm1SR2JHOWhkRk53Y21WaFpEb2dTbVFzQ2lBZ0lDQnpaV1ZrWldSU1lXNWtiMjA2SUZsa0xBb2dJQ0FnWkdWblZHOVNZV1E2SUZwa0xBb2dJQ0FnY21Ga1ZHOUVaV2M2SUNSa0xBb2dJQ0FnYVhOUWIzZGxjazltVkhkdk9pQnBZU3dLSUNBZ0lHTmxhV3hRYjNkbGNrOW1WSGR2T2lCWVl5d0tJQ0FnSUdac2IyOXlVRzkzWlhKUFpsUjNiem9nU21Nc0NpQWdJQ0J6WlhSUmRXRjBaWEp1YVc5dVJuSnZiVkJ5YjNCbGNrVjFiR1Z5T2lCcVpBcDlLU3dnV0NBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXdMQ0IwSUQwZ01DbDdDaUFnSUNBZ0lDQWdkR2hwY3k1NElEMGdaU3dnZEdocGN5NTVJRDBnZERzS0lDQWdJSDBLSUNBZ0lHZGxkQ0IzYVdSMGFDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NE93b2dJQ0FnZlFvZ0lDQWdjMlYwSUhkcFpIUm9LR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbmdnUFNCbE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUdobGFXZG9kQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTVPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHaGxhV2RvZENobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1NUlEMGdaVHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE11ZVNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTENCMGFHbHpMbmtnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTVJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFTnZiWEJ2Ym1WdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2MzZHBkR05vS0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEQTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5nZ1BTQjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZVNBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaWFXNWtaWGdnYVhNZ2IzVjBJRzltSUhKaGJtZGxPaUFpSUNzZ1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBRMjl0Y0c5dVpXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmc3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuazdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbWx1WkdWNElHbHpJRzkxZENCdlppQnlZVzVuWlRvZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG5nc0lIUm9hWE11ZVNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRMQ0IwYUdsekxua2dQU0JsTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDRTlQU0IyYjJsa0lEQWdQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l5T2lBdVlXUmtLQ2tnYm05M0lHOXViSGtnWVdOalpYQjBjeUJ2Ym1VZ1lYSm5kVzFsYm5RdUlGVnpaU0F1WVdSa1ZtVmpkRzl5Y3lnZ1lTd2dZaUFwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11WVdSa1ZtVmpkRzl5Y3lobExDQjBLU2tnT2lBb2RHaHBjeTU0SUNzOUlHVXVlQ3dnZEdocGN5NTVJQ3M5SUdVdWVTd2dkR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLejBnWlN3Z2RHaHBjeTU1SUNzOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JXWldOMGIzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQ3NnZEM1NExDQjBhR2x6TG5rZ1BTQmxMbmtnS3lCMExua3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JUWTJGc1pXUldaV04wYjNJb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLejBnWlM1NElDb2dkQ3dnZEdocGN5NTVJQ3M5SUdVdWVTQXFJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZFdJb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUNFOVBTQjJiMmxrSURBZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXlPaUF1YzNWaUtDa2dibTkzSUc5dWJIa2dZV05qWlhCMGN5QnZibVVnWVhKbmRXMWxiblF1SUZWelpTQXVjM1ZpVm1WamRHOXljeWdnWVN3Z1lpQXBJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVjM1ZpVm1WamRHOXljeWhsTENCMEtTa2dPaUFvZEdocGN5NTRJQzA5SUdVdWVDd2dkR2hwY3k1NUlDMDlJR1V1ZVN3Z2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCemRXSlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0xUMGdaU3dnZEdocGN5NTVJQzA5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRXSldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDMGdkQzU0TENCMGFHbHpMbmtnUFNCbExua2dMU0IwTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBcVBTQmxMbmdzSUhSb2FYTXVlU0FxUFNCbExua3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRkV3gwYVhCc2VWTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBcVBTQmxMQ0IwYUdsekxua2dLajBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGRtbGtaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0F2UFNCbExuZ3NJSFJvYVhNdWVTQXZQU0JsTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2FYWnBaR1ZUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVUyTmhiR0Z5S0RFZ0x5QmxLVHNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE15aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuZ3NJRzRnUFNCMGFHbHpMbmtzSUdrZ1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnBXekJkSUNvZ2RDQXJJR2xiTTEwZ0tpQnVJQ3NnYVZzMlhTd2dkR2hwY3k1NUlEMGdhVnN4WFNBcUlIUWdLeUJwV3pSZElDb2diaUFySUdsYk4xMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRhVzRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbTFwYmloMGFHbHpMbmdzSUdVdWVDa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXbHVLSFJvYVhNdWVTd2daUzU1S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXRjRLSFJvYVhNdWVDd2daUzU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV0WVhnb2RHaHBjeTU1TENCbExua3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhBb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMWhlQ2hsTG5nc0lFMWhkR2d1YldsdUtIUXVlQ3dnZEdocGN5NTRLU2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV0Y0S0dVdWVTd2dUV0YwYUM1dGFXNG9kQzU1TENCMGFHbHpMbmtwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc1lXMXdVMk5oYkdGeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXRZWGdvWlN3Z1RXRjBhQzV0YVc0b2RDd2dkR2hwY3k1NEtTa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lIUm9hWE11ZVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEJNWlc1bmRHZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVzWlc1bmRHZ29LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYWnBaR1ZUWTJGc1lYSW9iaUI4ZkNBeEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loTllYUm9MbTFoZUNobExDQk5ZWFJvTG0xcGJpaDBMQ0J1S1NrcE93b2dJQ0FnZlFvZ0lDQWdabXh2YjNJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1bWJHOXZjaWgwYUdsekxua3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMlZwYkNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11ZUNrc0lIUm9hWE11ZVNBOUlFMWhkR2d1WTJWcGJDaDBhR2x6TG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVJVYjFwbGNtOG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJSFJvYVhNdWVDQThJREFnUHlCTllYUm9MbU5sYVd3b2RHaHBjeTU0S1NBNklFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdkR2hwY3k1NUlEd2dNQ0EvSUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmtwSURvZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JtVm5ZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNBdGRHaHBjeTU0TENCMGFHbHpMbmtnUFNBdGRHaHBjeTU1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkc5MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDb2daUzU0SUNzZ2RHaHBjeTU1SUNvZ1pTNTVPd29nSUNBZ2ZRb2dJQ0FnWTNKdmMzTW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLaUJsTG5rZ0xTQjBhR2x6TG5rZ0tpQmxMbmc3Q2lBZ0lDQjlDaUFnSUNCc1pXNW5kR2hUY1NncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNvZ2RHaHBjeTU0SUNzZ2RHaHBjeTU1SUNvZ2RHaHBjeTU1T3dvZ0lDQWdmUW9nSUNBZ2JHVnVaM1JvS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbk54Y25Rb2RHaHBjeTU0SUNvZ2RHaHBjeTU0SUNzZ2RHaHBjeTU1SUNvZ2RHaHBjeTU1S1RzS0lDQWdJSDBLSUNBZ0lHMWhibWhoZEhSaGJreGxibWQwYUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb2RHaHBjeTU0S1NBcklFMWhkR2d1WVdKektIUm9hWE11ZVNrN0NpQWdJQ0I5Q2lBZ0lDQnViM0p0WVd4cGVtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHbDJhV1JsVTJOaGJHRnlLSFJvYVhNdWJHVnVaM1JvS0NrZ2ZId2dNU2s3Q2lBZ0lDQjlDaUFnSUNCaGJtZHNaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhkR0Z1TWlndGRHaHBjeTU1TENBdGRHaHBjeTU0S1NBcklFMWhkR2d1VUVrN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNXpjWEowS0hSb2FYTXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aU2twT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1NElDMGdaUzU0TENCdUlEMGdkR2hwY3k1NUlDMGdaUzU1T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUNvZ2RDQXJJRzRnS2lCdU93b2dJQ0FnZlFvZ0lDQWdiV0Z1YUdGMGRHRnVSR2x6ZEdGdVkyVlVieWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VZV0p6S0hSb2FYTXVlQ0F0SUdVdWVDa2dLeUJOWVhSb0xtRmljeWgwYUdsekxua2dMU0JsTG5rcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVEdWdVozUm9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd4cGVtVW9LUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4bGNuQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS3owZ0tHVXVlQ0F0SUhSb2FYTXVlQ2tnS2lCMExDQjBhR2x6TG5rZ0t6MGdLR1V1ZVNBdElIUm9hWE11ZVNrZ0tpQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiR1Z5Y0ZabFkzUnZjbk1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTG5nZ0t5QW9kQzU0SUMwZ1pTNTRLU0FxSUc0c0lIUm9hWE11ZVNBOUlHVXVlU0FySUNoMExua2dMU0JsTG5rcElDb2diaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1ZUNBOVBUMGdkR2hwY3k1NElDWW1JR1V1ZVNBOVBUMGdkR2hwY3k1NU93b2dJQ0FnZlFvZ0lDQWdabkp2YlVGeWNtRjVLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1ZiZEYwc0lIUm9hWE11ZVNBOUlHVmJkQ0FySURGZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiZEYwZ1BTQjBhR2x6TG5nc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1NUxDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z0lUMDlJSFp2YVdRZ01DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjakk2SUc5bVpuTmxkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtJR1p5YjIwZ0xtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9LUzRpS1N3Z2RHaHBjeTU0SUQwZ1pTNW5aWFJZS0hRcExDQjBhR2x6TG5rZ1BTQmxMbWRsZEZrb2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWQmNtOTFibVFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdUV0YwYUM1amIzTW9kQ2tzSUdrZ1BTQk5ZWFJvTG5OcGJpaDBLU3dnY2lBOUlIUm9hWE11ZUNBdElHVXVlQ3dnYnlBOUlIUm9hWE11ZVNBdElHVXVlVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdjaUFxSUc0Z0xTQnZJQ29nYVNBcklHVXVlQ3dnZEdocGN5NTVJRDBnY2lBcUlHa2dLeUJ2SUNvZ2JpQXJJR1V1ZVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKaGJtUnZiU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXlZVzVrYjIwb0tTd2dkR2hwY3k1NUlEMGdUV0YwYUM1eVlXNWtiMjBvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUNwYlUzbHRZbTlzTG1sMFpYSmhkRzl5WFNncElIc0tJQ0FnSUNBZ0lDQjVhV1ZzWkNCMGFHbHpMbmdzSUhscFpXeGtJSFJvYVhNdWVUc0tJQ0FnSUgwS2ZUc0tXQzV3Y205MGIzUjVjR1V1YVhOV1pXTjBiM0l5SUQwZ0lUQTdDblpoY2lCc2RDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdkR2hwY3k1bGJHVnRaVzUwY3lBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Rb2dJQ0FnSUNBZ0lGMHNJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ2dQaUF3SUNZbUlHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFoZEhKcGVETTZJSFJvWlNCamIyNXpkSEoxWTNSdmNpQnVieUJzYjI1blpYSWdjbVZoWkhNZ1lYSm5kVzFsYm5SekxpQjFjMlVnTG5ObGRDZ3BJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5a2dld29nSUNBZ0lDQWdJR3hsZENCb0lEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYUZzd1hTQTlJR1VzSUdoYk1WMGdQU0JwTENCb1d6SmRJRDBnWVN3Z2FGc3pYU0E5SUhRc0lHaGJORjBnUFNCeUxDQm9XelZkSUQwZ2JDd2dhRnMyWFNBOUlHNHNJR2hiTjEwZ1BTQnZMQ0JvV3poZElEMGdZeXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2xrWlc1MGFYUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d4TENBd0xDQXdMQ0F3TENBeExDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2JpQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTUYwZ1BTQnVXekJkTENCMFd6RmRJRDBnYmxzeFhTd2dkRnN5WFNBOUlHNWJNbDBzSUhSYk0xMGdQU0J1V3pOZExDQjBXelJkSUQwZ2JsczBYU3dnZEZzMVhTQTlJRzViTlYwc0lIUmJObDBnUFNCdVd6WmRMQ0IwV3pkZElEMGdibHMzWFN3Z2RGczRYU0E5SUc1Yk9GMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxlSFJ5WVdOMFFtRnphWE1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5ObGRFWnliMjFOWVhSeWFYZ3pRMjlzZFcxdUtIUm9hWE1zSURBcExDQjBMbk5sZEVaeWIyMU5ZWFJ5YVhnelEyOXNkVzF1S0hSb2FYTXNJREVwTENCdUxuTmxkRVp5YjIxTllYUnlhWGd6UTI5c2RXMXVLSFJvYVhNc0lESXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVMWhkSEpwZURRb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9kRnN3WFN3Z2RGczBYU3dnZEZzNFhTd2dkRnN4WFN3Z2RGczFYU3dnZEZzNVhTd2dkRnN5WFN3Z2RGczJYU3dnZEZzeE1GMHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb2RHaHBjeXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQndjbVZ0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aGxMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVUV0YwY21salpYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWxiR1Z0Wlc1MGN5d2dhU0E5SUhRdVpXeGxiV1Z1ZEhNc0lISWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQnZJRDBnYmxzd1hTd2dZU0E5SUc1Yk0xMHNJR3dnUFNCdVd6WmRMQ0JqSUQwZ2Jsc3hYU3dnYUNBOUlHNWJORjBzSUhVZ1BTQnVXemRkTENCa0lEMGdibHN5WFN3Z1ppQTlJRzViTlYwc0lHMGdQU0J1V3poZExDQjRJRDBnYVZzd1hTd2dkaUE5SUdsYk0xMHNJR2NnUFNCcFd6WmRMQ0J3SUQwZ2FWc3hYU3dnWHlBOUlHbGJORjBzSUhrZ1BTQnBXemRkTENCaUlEMGdhVnN5WFN3Z1FTQTlJR2xiTlYwc0lFd2dQU0JwV3poZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeVd6QmRJRDBnYnlBcUlIZ2dLeUJoSUNvZ2NDQXJJR3dnS2lCaUxDQnlXek5kSUQwZ2J5QXFJSFlnS3lCaElDb2dYeUFySUd3Z0tpQkJMQ0J5V3paZElEMGdieUFxSUdjZ0t5QmhJQ29nZVNBcklHd2dLaUJNTENCeVd6RmRJRDBnWXlBcUlIZ2dLeUJvSUNvZ2NDQXJJSFVnS2lCaUxDQnlXelJkSUQwZ1l5QXFJSFlnS3lCb0lDb2dYeUFySUhVZ0tpQkJMQ0J5V3pkZElEMGdZeUFxSUdjZ0t5Qm9JQ29nZVNBcklIVWdLaUJNTENCeVd6SmRJRDBnWkNBcUlIZ2dLeUJtSUNvZ2NDQXJJRzBnS2lCaUxDQnlXelZkSUQwZ1pDQXFJSFlnS3lCbUlDb2dYeUFySUcwZ0tpQkJMQ0J5V3poZElEMGdaQ0FxSUdjZ0t5Qm1JQ29nZVNBcklHMGdLaUJNTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGxUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RGc3dYU0FxUFNCbExDQjBXek5kSUNvOUlHVXNJSFJiTmwwZ0tqMGdaU3dnZEZzeFhTQXFQU0JsTENCMFd6UmRJQ285SUdVc0lIUmJOMTBnS2owZ1pTd2dkRnN5WFNBcVBTQmxMQ0IwV3pWZElDbzlJR1VzSUhSYk9GMGdLajBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdSbGRHVnliV2x1WVc1MEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2RDQTlJR1ZiTUYwc0lHNGdQU0JsV3pGZExDQnBJRDBnWlZzeVhTd2djaUE5SUdWYk0xMHNJRzhnUFNCbFd6UmRMQ0JoSUQwZ1pWczFYU3dnYkNBOUlHVmJObDBzSUdNZ1BTQmxXemRkTENCb0lEMGdaVnM0WFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBcUlHOGdLaUJvSUMwZ2RDQXFJR0VnS2lCaklDMGdiaUFxSUhJZ0tpQm9JQ3NnYmlBcUlHRWdLaUJzSUNzZ2FTQXFJSElnS2lCaklDMGdhU0FxSUc4Z0tpQnNPd29nSUNBZ2ZRb2dJQ0FnYVc1MlpYSjBLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2dkQ0E5SUdWYk1GMHNJRzRnUFNCbFd6RmRMQ0JwSUQwZ1pWc3lYU3dnY2lBOUlHVmJNMTBzSUc4Z1BTQmxXelJkTENCaElEMGdaVnMxWFN3Z2JDQTlJR1ZiTmwwc0lHTWdQU0JsV3pkZExDQm9JRDBnWlZzNFhTd2dkU0E5SUdnZ0tpQnZJQzBnWVNBcUlHTXNJR1FnUFNCaElDb2diQ0F0SUdnZ0tpQnlMQ0JtSUQwZ1l5QXFJSElnTFNCdklDb2diQ3dnYlNBOUlIUWdLaUIxSUNzZ2JpQXFJR1FnS3lCcElDb2daanNLSUNBZ0lDQWdJQ0JwWmlBb2JTQTlQVDBnTUNrZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0RBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnTVNBdklHMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJNRjBnUFNCMUlDb2dlQ3dnWlZzeFhTQTlJQ2hwSUNvZ1l5QXRJR2dnS2lCdUtTQXFJSGdzSUdWYk1sMGdQU0FvWVNBcUlHNGdMU0JwSUNvZ2J5a2dLaUI0TENCbFd6TmRJRDBnWkNBcUlIZ3NJR1ZiTkYwZ1BTQW9hQ0FxSUhRZ0xTQnBJQ29nYkNrZ0tpQjRMQ0JsV3pWZElEMGdLR2tnS2lCeUlDMGdZU0FxSUhRcElDb2dlQ3dnWlZzMlhTQTlJR1lnS2lCNExDQmxXemRkSUQwZ0tHNGdLaUJzSUMwZ1l5QXFJSFFwSUNvZ2VDd2daVnM0WFNBOUlDaHZJQ29nZENBdElHNGdLaUJ5S1NBcUlIZ3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBjbUZ1YzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVXNJSFFnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDBnZEZzeFhTd2dkRnN4WFNBOUlIUmJNMTBzSUhSYk0xMGdQU0JsTENCbElEMGdkRnN5WFN3Z2RGc3lYU0E5SUhSYk5sMHNJSFJiTmwwZ1BTQmxMQ0JsSUQwZ2RGczFYU3dnZEZzMVhTQTlJSFJiTjEwc0lIUmJOMTBnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBUbTl5YldGc1RXRjBjbWw0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhSR2NtOXRUV0YwY21sNE5DaGxLUzVwYm5abGNuUW9LUzUwY21GdWMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6Y0c5elpVbHVkRzlCY25KaGVTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFd6QmRJRDBnZEZzd1hTd2daVnN4WFNBOUlIUmJNMTBzSUdWYk1sMGdQU0IwV3paZExDQmxXek5kSUQwZ2RGc3hYU3dnWlZzMFhTQTlJSFJiTkYwc0lHVmJOVjBnUFNCMFd6ZGRMQ0JsV3paZElEMGdkRnN5WFN3Z1pWczNYU0E5SUhSYk5WMHNJR1ZiT0YwZ1BTQjBXemhkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZYWlVjbUZ1YzJadmNtMG9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnVFdGMGFDNWpiM01vY2lrc0lHTWdQU0JOWVhSb0xuTnBiaWh5S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvYmlBcUlHd3NJRzRnS2lCakxDQXRiaUFxSUNoc0lDb2dieUFySUdNZ0tpQmhLU0FySUc4Z0t5QmxMQ0F0YVNBcUlHTXNJR2tnS2lCc0xDQXRhU0FxSUNndFl5QXFJRzhnS3lCc0lDb2dZU2tnS3lCaElDc2dkQ3dnTUN3Z01Dd2dNU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WTJGc1pTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVXekJkSUNvOUlHVXNJRzViTTEwZ0tqMGdaU3dnYmxzMlhTQXFQU0JsTENCdVd6RmRJQ285SUhRc0lHNWJORjBnS2owZ2RDd2dibHMzWFNBcVBTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkwWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndVkyOXpLR1VwTENCdUlEMGdUV0YwYUM1emFXNG9aU2tzSUdrZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCeUlEMGdhVnN3WFN3Z2J5QTlJR2xiTTEwc0lHRWdQU0JwV3paZExDQnNJRDBnYVZzeFhTd2dZeUE5SUdsYk5GMHNJR2dnUFNCcFd6ZGRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBXekJkSUQwZ2RDQXFJSElnS3lCdUlDb2diQ3dnYVZzelhTQTlJSFFnS2lCdklDc2diaUFxSUdNc0lHbGJObDBnUFNCMElDb2dZU0FySUc0Z0tpQm9MQ0JwV3pGZElEMGdMVzRnS2lCeUlDc2dkQ0FxSUd3c0lHbGJORjBnUFNBdGJpQXFJRzhnS3lCMElDb2dZeXdnYVZzM1hTQTlJQzF1SUNvZ1lTQXJJSFFnS2lCb0xDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5zWVhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWJNRjBnS3owZ1pTQXFJRzViTWwwc0lHNWJNMTBnS3owZ1pTQXFJRzViTlYwc0lHNWJObDBnS3owZ1pTQXFJRzViT0Ywc0lHNWJNVjBnS3owZ2RDQXFJRzViTWwwc0lHNWJORjBnS3owZ2RDQXFJRzViTlYwc0lHNWJOMTBnS3owZ2RDQXFJRzViT0Ywc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGNYVmhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYmlBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTURzZ2FTQThJRGs3SUdrckt5bHBaaUFvZEZ0cFhTQWhQVDBnYmx0cFhTa2djbVYwZFhKdUlDRXhPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhNRHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUJjbkpoZVNobExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQTVPeUJ1S3lzcGRHaHBjeTVsYkdWdFpXNTBjMXR1WFNBOUlHVmJiaUFySUhSZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5QmNuSmhlU2hsSUQwZ1cxMHNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzNSZElEMGdibHN3WFN3Z1pWdDBJQ3NnTVYwZ1BTQnVXekZkTENCbFczUWdLeUF5WFNBOUlHNWJNbDBzSUdWYmRDQXJJRE5kSUQwZ2Jsc3pYU3dnWlZ0MElDc2dORjBnUFNCdVd6UmRMQ0JsVzNRZ0t5QTFYU0E5SUc1Yk5WMHNJR1ZiZENBcklEWmRJRDBnYmxzMlhTd2daVnQwSUNzZ04xMGdQU0J1V3pkZExDQmxXM1FnS3lBNFhTQTlJRzViT0Ywc0lHVTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1bWNtOXRRWEp5WVhrb2RHaHBjeTVsYkdWdFpXNTBjeWs3Q2lBZ0lDQjlDbjA3Q214MExuQnliM1J2ZEhsd1pTNXBjMDFoZEhKcGVETWdQU0FoTURzS1puVnVZM1JwYjI0Z1dXTW9jeWtnZXdvZ0lDQWdhV1lnS0hNdWJHVnVaM1JvSUQwOVBTQXdLU0J5WlhSMWNtNGdMVEVnTHlBd093b2dJQ0FnYkdWMElHVWdQU0J6V3pCZE93b2dJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Td2diaUE5SUhNdWJHVnVaM1JvT3lCMElEd2dianNnS3l0MEtYTmJkRjBnUGlCbElDWW1JQ2hsSUQwZ2MxdDBYU2s3Q2lBZ0lDQnlaWFIxY200Z1pUc0tmUXAyWVhJZ1VXUWdQU0I3Q2lBZ0lDQkpiblE0UVhKeVlYa3NDaUFnSUNCVmFXNTBPRUZ5Y21GNUxBb2dJQ0FnVldsdWREaERiR0Z0Y0dWa1FYSnlZWGtzQ2lBZ0lDQkpiblF4TmtGeWNtRjVMQW9nSUNBZ1ZXbHVkREUyUVhKeVlYa3NDaUFnSUNCSmJuUXpNa0Z5Y21GNUxBb2dJQ0FnVldsdWRETXlRWEp5WVhrc0NpQWdJQ0JHYkc5aGRETXlRWEp5WVhrc0NpQWdJQ0JHYkc5aGREWTBRWEp5WVhrS2ZUc0tablZ1WTNScGIyNGdkMmtvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUc1bGR5QlJaRnR6WFNobEtUc0tmUXBtZFc1amRHbHZiaUJ4Y3loektTQjdDaUFnSUNCeVpYUjFjbTRnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRFNVRLQ0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUwzaG9kRzFzSWl3Z2N5azdDbjBLZG1GeUlIUnBMQ0JaYmlBOUlHTnNZWE56SUhzS0lDQWdJSE4wWVhScFl5Qm5aWFJFWVhSaFZWSk1LR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9MMTVrWVhSaE9pOXBMblJsYzNRb1pTNXpjbU1wSUh4OElIUjVjR1Z2WmlCSVZFMU1RMkZ1ZG1GelJXeGxiV1Z1ZENBK0lDSjFJaWtnY21WMGRYSnVJR1V1YzNKak93b2dJQ0FnSUNBZ0lHeGxkQ0IwT3dvZ0lDQWdJQ0FnSUdsbUlDaGxJR2x1YzNSaGJtTmxiMllnU0ZSTlRFTmhiblpoYzBWc1pXMWxiblFwSUhRZ1BTQmxPd29nSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwYVNBOVBUMGdkbTlwWkNBd0lDWW1JQ2gwYVNBOUlIRnpLQ0pqWVc1MllYTWlLU2tzSUhScExuZHBaSFJvSUQwZ1pTNTNhV1IwYUN3Z2RHa3VhR1ZwWjJoMElEMGdaUzVvWldsbmFIUTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdrdVoyVjBRMjl1ZEdWNGRDZ2lNbVFpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaU0JwYm5OMFlXNWpaVzltSUVsdFlXZGxSR0YwWVNBL0lHNHVjSFYwU1cxaFoyVkVZWFJoS0dVc0lEQXNJREFwSURvZ2JpNWtjbUYzU1cxaFoyVW9aU3dnTUN3Z01Dd2daUzUzYVdSMGFDd2daUzVvWldsbmFIUXBMQ0IwSUQwZ2RHazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbmRwWkhSb0lENGdNakEwT0NCOGZDQjBMbWhsYVdkb2RDQStJREl3TkRnZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYldGblpWVjBhV3h6TG1kbGRFUmhkR0ZWVWt3NklFbHRZV2RsSUdOdmJuWmxjblJsWkNCMGJ5QnFjR2NnWm05eUlIQmxjbVp2Y20xaGJtTmxJSEpsWVhOdmJuTWlMQ0JsS1N3Z2RDNTBiMFJoZEdGVlVrd29JbWx0WVdkbEwycHdaV2NpTENBdU5pa3BJRG9nZEM1MGIwUmhkR0ZWVWt3b0ltbHRZV2RsTDNCdVp5SXBPd29nSUNBZ2ZRcDlMQ0JMWkNBOUlEQXNJRzkwSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdiM1F1UkVWR1FWVk1WRjlKVFVGSFJTd2dkQ0E5SUc5MExrUkZSa0ZWVEZSZlRVRlFVRWxPUnl3Z2JpQTlJSFowTENCcElEMGdkblFzSUhJZ1BTQjBkQ3dnYnlBOUlGVnBMQ0JoSUQwZ1kzUXNJR3dnUFNCeWJpd2dZeUE5SURFc0lHZ2dQU0JPZENsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29kR2hwY3l3Z0ltbGtJaXdnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1MyUXJLd29nSUNBZ0lDQWdJSDBwTENCMGFHbHpMblYxYVdRZ1BTQkZkQ2dwTENCMGFHbHpMbTVoYldVZ1BTQWlJaXdnZEdocGN5NXBiV0ZuWlNBOUlHVXNJSFJvYVhNdWJXbHdiV0Z3Y3lBOUlGdGRMQ0IwYUdsekxtMWhjSEJwYm1jZ1BTQjBMQ0IwYUdsekxuZHlZWEJUSUQwZ2Jpd2dkR2hwY3k1M2NtRndWQ0E5SUdrc0lIUm9hWE11YldGblJtbHNkR1Z5SUQwZ2Npd2dkR2hwY3k1dGFXNUdhV3gwWlhJZ1BTQnZMQ0IwYUdsekxtRnVhWE52ZEhKdmNIa2dQU0JqTENCMGFHbHpMbVp2Y20xaGRDQTlJR0VzSUhSb2FYTXVhVzUwWlhKdVlXeEdiM0p0WVhRZ1BTQnVkV3hzTENCMGFHbHpMblI1Y0dVZ1BTQnNMQ0IwYUdsekxtOW1abk5sZENBOUlHNWxkeUJZS0RBc0lEQXBMQ0IwYUdsekxuSmxjR1ZoZENBOUlHNWxkeUJZS0RFc0lERXBMQ0IwYUdsekxtTmxiblJsY2lBOUlHNWxkeUJZS0RBc0lEQXBMQ0IwYUdsekxuSnZkR0YwYVc5dUlEMGdNQ3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEFzSUhSb2FYTXViV0YwY21sNElEMGdibVYzSUd4MExDQjBhR2x6TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUNFd0xDQjBhR2x6TG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VnUFNBaE1Td2dkR2hwY3k1bWJHbHdXU0E5SUNFd0xDQjBhR2x6TG5WdWNHRmphMEZzYVdkdWJXVnVkQ0E5SURRc0lIUm9hWE11Wlc1amIyUnBibWNnUFNCb0xDQjBhR2x6TG5WelpYSkVZWFJoSUQwZ2UzMHNJSFJvYVhNdWRtVnljMmx2YmlBOUlEQXNJSFJvYVhNdWIyNVZjR1JoZEdVZ1BTQnVkV3hzTENCMGFHbHpMbWx6VW1WdVpHVnlWR0Z5WjJWMFZHVjRkSFZ5WlNBOUlDRXhPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJXRjBjbWw0TG5ObGRGVjJWSEpoYm5ObWIzSnRLSFJvYVhNdWIyWm1jMlYwTG5nc0lIUm9hWE11YjJabWMyVjBMbmtzSUhSb2FYTXVjbVZ3WldGMExuZ3NJSFJvYVhNdWNtVndaV0YwTG5rc0lIUm9hWE11Y205MFlYUnBiMjRzSUhSb2FYTXVZMlZ1ZEdWeUxuZ3NJSFJvYVhNdVkyVnVkR1Z5TG5rcE93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTVoYldVZ1BTQmxMbTVoYldVc0lIUm9hWE11YVcxaFoyVWdQU0JsTG1sdFlXZGxMQ0IwYUdsekxtMXBjRzFoY0hNZ1BTQmxMbTFwY0cxaGNITXVjMnhwWTJVb01Da3NJSFJvYVhNdWJXRndjR2x1WnlBOUlHVXViV0Z3Y0dsdVp5d2dkR2hwY3k1M2NtRndVeUE5SUdVdWQzSmhjRk1zSUhSb2FYTXVkM0poY0ZRZ1BTQmxMbmR5WVhCVUxDQjBhR2x6TG0xaFowWnBiSFJsY2lBOUlHVXViV0ZuUm1sc2RHVnlMQ0IwYUdsekxtMXBia1pwYkhSbGNpQTlJR1V1YldsdVJtbHNkR1Z5TENCMGFHbHpMbUZ1YVhOdmRISnZjSGtnUFNCbExtRnVhWE52ZEhKdmNIa3NJSFJvYVhNdVptOXliV0YwSUQwZ1pTNW1iM0p0WVhRc0lIUm9hWE11YVc1MFpYSnVZV3hHYjNKdFlYUWdQU0JsTG1sdWRHVnlibUZzUm05eWJXRjBMQ0IwYUdsekxuUjVjR1VnUFNCbExuUjVjR1VzSUhSb2FYTXViMlptYzJWMExtTnZjSGtvWlM1dlptWnpaWFFwTENCMGFHbHpMbkpsY0dWaGRDNWpiM0I1S0dVdWNtVndaV0YwS1N3Z2RHaHBjeTVqWlc1MFpYSXVZMjl3ZVNobExtTmxiblJsY2lrc0lIUm9hWE11Y205MFlYUnBiMjRnUFNCbExuSnZkR0YwYVc5dUxDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNCbExtMWhkSEpwZUVGMWRHOVZjR1JoZEdVc0lIUm9hWE11YldGMGNtbDRMbU52Y0hrb1pTNXRZWFJ5YVhncExDQjBhR2x6TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUdVdVoyVnVaWEpoZEdWTmFYQnRZWEJ6TENCMGFHbHpMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRWdQU0JsTG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VzSUhSb2FYTXVabXhwY0ZrZ1BTQmxMbVpzYVhCWkxDQjBhR2x6TG5WdWNHRmphMEZzYVdkdWJXVnVkQ0E5SUdVdWRXNXdZV05yUVd4cFoyNXRaVzUwTENCMGFHbHpMbVZ1WTI5a2FXNW5JRDBnWlM1bGJtTnZaR2x1Wnl3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvWlM1MWMyVnlSR0YwWVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVWdQVDA5SUhadmFXUWdNQ0I4ZkNCMGVYQmxiMllnWlNBOVBTQWljM1J5YVc1bklqc0tJQ0FnSUNBZ0lDQnBaaUFvSVhRZ0ppWWdaUzUwWlhoMGRYSmxjMXQwYUdsekxuVjFhV1JkSUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCbExuUmxlSFIxY21WelczUm9hWE11ZFhWcFpGMDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUcxbGRHRmtZWFJoT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMlpYSnphVzl1T2lBMExqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVZHVjRkSFZ5WlNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpXNWxjbUYwYjNJNklDSlVaWGgwZFhKbExuUnZTbE5QVGlJS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RYVnBaRG9nZEdocGN5NTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lCMGFHbHpMbTVoYldVc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoY0hCcGJtYzZJSFJvYVhNdWJXRndjR2x1Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdjbVZ3WldGME9pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGNHVmhkQzU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaWEJsWVhRdWVRb2dJQ0FnSUNBZ0lDQWdJQ0JkTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhRNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YjJabWMyVjBMbmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtOW1abk5sZEM1NUNpQWdJQ0FnSUNBZ0lDQWdJRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTmxiblJsY2pvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqWlc1MFpYSXVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyVnVkR1Z5TG5rS0lDQWdJQ0FnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtOTBZWFJwYjI0NklIUm9hWE11Y205MFlYUnBiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHlZWEE2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkM0poY0ZNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmR5WVhCVUNpQWdJQ0FnSUNBZ0lDQWdJRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjbTFoZERvZ2RHaHBjeTVtYjNKdFlYUXNDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSFJvYVhNdWRIbHdaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pXNWpiMlJwYm1jNklIUm9hWE11Wlc1amIyUnBibWNzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMXBia1pwYkhSbGNqb2dkR2hwY3k1dGFXNUdhV3gwWlhJc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoWjBacGJIUmxjam9nZEdocGN5NXRZV2RHYVd4MFpYSXNDaUFnSUNBZ0lDQWdJQ0FnSUdGdWFYTnZkSEp2Y0hrNklIUm9hWE11WVc1cGMyOTBjbTl3ZVN3S0lDQWdJQ0FnSUNBZ0lDQWdabXhwY0ZrNklIUm9hWE11Wm14cGNGa3NDaUFnSUNBZ0lDQWdJQ0FnSUhCeVpXMTFiSFJwY0d4NVFXeHdhR0U2SUhSb2FYTXVjSEpsYlhWc2RHbHdiSGxCYkhCb1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnZFc1d1lXTnJRV3hwWjI1dFpXNTBPaUIwYUdsekxuVnVjR0ZqYTBGc2FXZHViV1Z1ZEFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFXMWhaMlVnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwTG5WMWFXUWdQVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTFkV2xrSUQwZ1JYUW9LU2tzSUNGMElDWW1JR1V1YVcxaFoyVnpXMmt1ZFhWcFpGMGdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaHBLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3TENCaElEMGdhUzVzWlc1bmRHZzdJRzhnUENCaE95QnZLeXNwYVZ0dlhTNXBjMFJoZEdGVVpYaDBkWEpsSUQ4Z2NpNXdkWE5vS0Y5dktHbGJiMTB1YVcxaFoyVXBLU0E2SUhJdWNIVnphQ2hmYnlocFcyOWRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdjaUE5SUY5dktHa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzVwYldGblpYTmJhUzUxZFdsa1hTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWRXbGtPaUJwTG5WMWFXUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhKc09pQnlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRzR1YVcxaFoyVWdQU0JwTG5WMWFXUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQktVMDlPTG5OMGNtbHVaMmxtZVNoMGFHbHpMblZ6WlhKRVlYUmhLU0FoUFQwZ0ludDlJaUFtSmlBb2JpNTFjMlZ5UkdGMFlTQTlJSFJvYVhNdWRYTmxja1JoZEdFcExDQjBJSHg4SUNobExuUmxlSFIxY21WelczUm9hWE11ZFhWcFpGMGdQU0J1S1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltUnBjM0J2YzJVaUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyWnZjbTFWZGlobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXViV0Z3Y0dsdVp5QWhQVDBnYUdFcElISmxkSFZ5YmlCbE93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1Gd2NHeDVUV0YwY21sNE15aDBhR2x6TG0xaGRISnBlQ2tzSUdVdWVDQThJREFnZkh3Z1pTNTRJRDRnTVNrZ2MzZHBkR05vS0hSb2FYTXVkM0poY0ZNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFNXpPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzU0SUQwZ1pTNTRJQzBnVFdGMGFDNW1iRzl2Y2lobExuZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2RuUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxMbmdnUFNCbExuZ2dQQ0F3SUQ4Z01DQTZJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQkNjem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRTFoZEdndVlXSnpLRTFoZEdndVpteHZiM0lvWlM1NEtTQWxJRElwSUQwOVBTQXhJRDhnWlM1NElEMGdUV0YwYUM1alpXbHNLR1V1ZUNrZ0xTQmxMbmdnT2lCbExuZ2dQU0JsTG5nZ0xTQk5ZWFJvTG1ac2IyOXlLR1V1ZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVlU0E4SURBZ2ZId2daUzU1SUQ0Z01Ta2djM2RwZEdOb0tIUm9hWE11ZDNKaGNGUXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJRTV6T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlM1NUlEMGdaUzU1SUMwZ1RXRjBhQzVtYkc5dmNpaGxMbmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdkblE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsTG5rZ1BTQmxMbmtnUENBd0lEOGdNQ0E2SURFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JDY3pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUUxaGRHZ3VZV0p6S0UxaGRHZ3VabXh2YjNJb1pTNTVLU0FsSURJcElEMDlQU0F4SUQ4Z1pTNTVJRDBnVFdGMGFDNWpaV2xzS0dVdWVTa2dMU0JsTG5rZ09pQmxMbmtnUFNCbExua2dMU0JOWVhSb0xtWnNiMjl5S0dVdWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabXhwY0ZrZ0ppWWdLR1V1ZVNBOUlERWdMU0JsTG5rcExDQmxPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHNWxaV1J6VlhCa1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCbElEMDlQU0FoTUNBbUppQjBhR2x6TG5abGNuTnBiMjRyS3pzS0lDQWdJSDBLZlRzS2IzUXVSRVZHUVZWTVZGOUpUVUZIUlNBOUlIWnZhV1FnTURzS2IzUXVSRVZHUVZWTVZGOU5RVkJRU1U1SElEMGdhR0U3Q205MExuQnliM1J2ZEhsd1pTNXBjMVJsZUhSMWNtVWdQU0FoTURzS1puVnVZM1JwYjI0Z1gyOG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlIUjVjR1Z2WmlCSVZFMU1TVzFoWjJWRmJHVnRaVzUwSUR3Z0luVWlJQ1ltSUhNZ2FXNXpkR0Z1WTJWdlppQklWRTFNU1cxaFoyVkZiR1Z0Wlc1MElIeDhJSFI1Y0dWdlppQklWRTFNUTJGdWRtRnpSV3hsYldWdWRDQThJQ0oxSWlBbUppQnpJR2x1YzNSaGJtTmxiMllnU0ZSTlRFTmhiblpoYzBWc1pXMWxiblFnZkh3Z2RIbHdaVzltSUVsdFlXZGxRbWwwYldGd0lEd2dJblVpSUNZbUlITWdhVzV6ZEdGdVkyVnZaaUJKYldGblpVSnBkRzFoY0NBL0lGbHVMbWRsZEVSaGRHRlZVa3dvY3lrZ09pQnpMbVJoZEdFZ1B5QjdDaUFnSUNBZ0lDQWdaR0YwWVRvZ1FYSnlZWGt1Y0hKdmRHOTBlWEJsTG5Oc2FXTmxMbU5oYkd3b2N5NWtZWFJoS1N3S0lDQWdJQ0FnSUNCM2FXUjBhRG9nY3k1M2FXUjBhQ3dLSUNBZ0lDQWdJQ0JvWldsbmFIUTZJSE11YUdWcFoyaDBMQW9nSUNBZ0lDQWdJSFI1Y0dVNklITXVaR0YwWVM1amIyNXpkSEoxWTNSdmNpNXVZVzFsQ2lBZ0lDQjlJRG9nS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZHVjRkSFZ5WlRvZ1ZXNWhZbXhsSUhSdklITmxjbWxoYkdsNlpTQlVaWGgwZFhKbExpSXBMQ0I3ZlNrN0NuMEtkbUZ5SUZabElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREFzSUhRZ1BTQXdMQ0J1SUQwZ01Dd2dhU0E5SURFcGV3b2dJQ0FnSUNBZ0lIUm9hWE11ZUNBOUlHVXNJSFJvYVhNdWVTQTlJSFFzSUhSb2FYTXVlaUE5SUc0c0lIUm9hWE11ZHlBOUlHazdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2QybGtkR2dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlanNLSUNBZ0lIMEtJQ0FnSUhObGRDQjNhV1IwYUNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1NklEMGdaVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQm9aV2xuYUhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZHpzS0lDQWdJSDBLSUNBZ0lITmxkQ0JvWldsbmFIUW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkeUE5SUdVN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExDQjBhR2x6TG5rZ1BTQjBMQ0IwYUdsekxub2dQU0J1TENCMGFHbHpMbmNnUFNCcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaU3dnZEdocGN5NTVJRDBnWlN3Z2RHaHBjeTU2SUQwZ1pTd2dkR2hwY3k1M0lEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV1NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZVNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJhS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU2SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmNvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmNnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBRMjl0Y0c5dVpXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWVDQTlJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXhPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1NUlEMGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElESTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5vZ1BTQjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ016b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZHlBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaWFXNWtaWGdnYVhNZ2IzVjBJRzltSUhKaGJtZGxPaUFpSUNzZ1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBRMjl0Y0c5dVpXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmc3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuazdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5vN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ016b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmM3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW1sdVpHVjRJR2x6SUc5MWRDQnZaaUJ5WVc1blpUb2dJaUFySUdVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxuZ3NJSFJvYVhNdWVTd2dkR2hwY3k1NkxDQjBhR2x6TG5jcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXVlQ3dnZEdocGN5NTVJRDBnWlM1NUxDQjBhR2x6TG5vZ1BTQmxMbm9zSUhSb2FYTXVkeUE5SUdVdWR5QWhQVDBnZG05cFpDQXdJRDhnWlM1M0lEb2dNU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlIWnZhV1FnTUNBL0lDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqUTZJQzVoWkdRb0tTQnViM2NnYjI1c2VTQmhZMk5sY0hSeklHOXVaU0JoY21kMWJXVnVkQzRnVlhObElDNWhaR1JXWldOMGIzSnpLQ0JoTENCaUlDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NWhaR1JXWldOMGIzSnpLR1VzSUhRcEtTQTZJQ2gwYUdsekxuZ2dLejBnWlM1NExDQjBhR2x6TG5rZ0t6MGdaUzU1TENCMGFHbHpMbm9nS3owZ1pTNTZMQ0IwYUdsekxuY2dLejBnWlM1M0xDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHRmtaRk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXJQU0JsTENCMGFHbHpMbmtnS3owZ1pTd2dkR2hwY3k1NklDczlJR1VzSUhSb2FYTXVkeUFyUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtWbVZqZEc5eWN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVdWVDQXJJSFF1ZUN3Z2RHaHBjeTU1SUQwZ1pTNTVJQ3NnZEM1NUxDQjBhR2x6TG5vZ1BTQmxMbm9nS3lCMExub3NJSFJvYVhNdWR5QTlJR1V1ZHlBcklIUXVkeXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkZOallXeGxaRlpsWTNSdmNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FyUFNCbExuZ2dLaUIwTENCMGFHbHpMbmtnS3owZ1pTNTVJQ29nZEN3Z2RHaHBjeTU2SUNzOUlHVXVlaUFxSUhRc0lIUm9hWE11ZHlBclBTQmxMbmNnS2lCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MzVmlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnZG05cFpDQXdJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TkRvZ0xuTjFZaWdwSUc1dmR5QnZibXg1SUdGalkyVndkSE1nYjI1bElHRnlaM1Z0Wlc1MExpQlZjMlVnTG5OMVlsWmxZM1J2Y25Nb0lHRXNJR0lnS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG5OMVlsWmxZM1J2Y25Nb1pTd2dkQ2twSURvZ0tIUm9hWE11ZUNBdFBTQmxMbmdzSUhSb2FYTXVlU0F0UFNCbExua3NJSFJvYVhNdWVpQXRQU0JsTG5vc0lIUm9hWE11ZHlBdFBTQmxMbmNzSUhSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnYzNWaVUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUMwOUlHVXNJSFJvYVhNdWVTQXRQU0JsTENCMGFHbHpMbm9nTFQwZ1pTd2dkR2hwY3k1M0lDMDlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZFdKV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUMwZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0xTQjBMbmtzSUhSb2FYTXVlaUE5SUdVdWVpQXRJSFF1ZWl3Z2RHaHBjeTUzSUQwZ1pTNTNJQzBnZEM1M0xDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3Ykhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tqMGdaUzU0TENCMGFHbHpMbmtnS2owZ1pTNTVMQ0IwYUdsekxub2dLajBnWlM1NkxDQjBhR2x6TG5jZ0tqMGdaUzUzTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGxUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLajBnWlN3Z2RHaHBjeTU1SUNvOUlHVXNJSFJvYVhNdWVpQXFQU0JsTENCMGFHbHpMbmNnS2owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDROQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbmdzSUc0Z1BTQjBhR2x6TG5rc0lHa2dQU0IwYUdsekxub3NJSElnUFNCMGFHbHpMbmNzSUc4Z1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnZXekJkSUNvZ2RDQXJJRzliTkYwZ0tpQnVJQ3NnYjFzNFhTQXFJR2tnS3lCdld6RXlYU0FxSUhJc0lIUm9hWE11ZVNBOUlHOWJNVjBnS2lCMElDc2diMXMxWFNBcUlHNGdLeUJ2V3psZElDb2dhU0FySUc5Yk1UTmRJQ29nY2l3Z2RHaHBjeTU2SUQwZ2Ixc3lYU0FxSUhRZ0t5QnZXelpkSUNvZ2JpQXJJRzliTVRCZElDb2dhU0FySUc5Yk1UUmRJQ29nY2l3Z2RHaHBjeTUzSUQwZ2Ixc3pYU0FxSUhRZ0t5QnZXemRkSUNvZ2JpQXJJRzliTVRGZElDb2dhU0FySUc5Yk1UVmRJQ29nY2l3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGRtbGtaVk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJYVnNkR2x3YkhsVFkyRnNZWElvTVNBdklHVXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFFYaHBjMEZ1WjJ4bFJuSnZiVkYxWVhSbGNtNXBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZHlBOUlESWdLaUJOWVhSb0xtRmpiM01vWlM1M0tUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlFMWhkR2d1YzNGeWRDZ3hJQzBnWlM1M0lDb2daUzUzS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBOElERmxMVFFnUHlBb2RHaHBjeTU0SUQwZ01Td2dkR2hwY3k1NUlEMGdNQ3dnZEdocGN5NTZJRDBnTUNrZ09pQW9kR2hwY3k1NElEMGdaUzU0SUM4Z2RDd2dkR2hwY3k1NUlEMGdaUzU1SUM4Z2RDd2dkR2hwY3k1NklEMGdaUzU2SUM4Z2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJCZUdselFXNW5iR1ZHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwTENCdUxDQnBMQ0J5TENCc0lEMGdaUzVsYkdWdFpXNTBjeXdnWXlBOUlHeGJNRjBzSUdnZ1BTQnNXelJkTENCMUlEMGdiRnM0WFN3Z1pDQTlJR3hiTVYwc0lHWWdQU0JzV3pWZExDQnRJRDBnYkZzNVhTd2dlQ0E5SUd4Yk1sMHNJSFlnUFNCc1d6WmRMQ0JuSUQwZ2JGc3hNRjA3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMWhkR2d1WVdKektHZ2dMU0JrS1NBOElDNHdNU0FtSmlCTllYUm9MbUZpY3loMUlDMGdlQ2tnUENBdU1ERWdKaVlnVFdGMGFDNWhZbk1vYlNBdElIWXBJRHdnTGpBeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaE5ZWFJvTG1GaWN5aG9JQ3NnWkNrZ1BDQXVNU0FtSmlCTllYUm9MbUZpY3loMUlDc2dlQ2tnUENBdU1TQW1KaUJOWVhSb0xtRmljeWh0SUNzZ2Rpa2dQQ0F1TVNBbUppQk5ZWFJvTG1GaWN5aGpJQ3NnWmlBcklHY2dMU0F6S1NBOElDNHhLU0J5WlhSMWNtNGdkR2hwY3k1elpYUW9NU3dnTUN3Z01Dd2dNQ2tzSUhSb2FYTTdDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQk5ZWFJvTGxCSk93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJQ2hqSUNzZ01Ta2dMeUF5TENCNUlEMGdLR1lnS3lBeEtTQXZJRElzSUdJZ1BTQW9aeUFySURFcElDOGdNaXdnUVNBOUlDaG9JQ3NnWkNrZ0x5QTBMQ0JNSUQwZ0tIVWdLeUI0S1NBdklEUXNJRWtnUFNBb2JTQXJJSFlwSUM4Z05Ec0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRjhnUGlCNUlDWW1JRjhnUGlCaUlEOGdYeUE4SUM0d01TQS9JQ2h1SUQwZ01Dd2dhU0E5SUM0M01EY3hNRFkzT0RFc0lISWdQU0F1TnpBM01UQTJOemd4S1NBNklDaHVJRDBnVFdGMGFDNXpjWEowS0Y4cExDQnBJRDBnUVNBdklHNHNJSElnUFNCTUlDOGdiaWtnT2lCNUlENGdZaUEvSUhrZ1BDQXVNREVnUHlBb2JpQTlJQzQzTURjeE1EWTNPREVzSUdrZ1BTQXdMQ0J5SUQwZ0xqY3dOekV3TmpjNE1Ta2dPaUFvYVNBOUlFMWhkR2d1YzNGeWRDaDVLU3dnYmlBOUlFRWdMeUJwTENCeUlEMGdTU0F2SUdrcElEb2dZaUE4SUM0d01TQS9JQ2h1SUQwZ0xqY3dOekV3TmpjNE1Td2dhU0E5SUM0M01EY3hNRFkzT0RFc0lISWdQU0F3S1NBNklDaHlJRDBnVFdGMGFDNXpjWEowS0dJcExDQnVJRDBnVENBdklISXNJR2tnUFNCSklDOGdjaWtzSUhSb2FYTXVjMlYwS0c0c0lHa3NJSElzSUhRcExDQjBhR2x6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUUxaGRHZ3VjM0Z5ZENnb2RpQXRJRzBwSUNvZ0tIWWdMU0J0S1NBcklDaDFJQzBnZUNrZ0tpQW9kU0F0SUhncElDc2dLR1FnTFNCb0tTQXFJQ2hrSUMwZ2FDa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GaWN5aHdLU0E4SUM0d01ERWdKaVlnS0hBZ1BTQXhLU3dnZEdocGN5NTRJRDBnS0hZZ0xTQnRLU0F2SUhBc0lIUm9hWE11ZVNBOUlDaDFJQzBnZUNrZ0x5QndMQ0IwYUdsekxub2dQU0FvWkNBdElHZ3BJQzhnY0N3Z2RHaHBjeTUzSUQwZ1RXRjBhQzVoWTI5ektDaGpJQ3NnWmlBcklHY2dMU0F4S1NBdklESXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV2x1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV0YVc0b2RHaHBjeTU0TENCbExuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtMXBiaWgwYUdsekxua3NJR1V1ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1YldsdUtIUm9hWE11ZWl3Z1pTNTZLU3dnZEdocGN5NTNJRDBnVFdGMGFDNXRhVzRvZEdocGN5NTNMQ0JsTG5jcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRjRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTRMQ0JsTG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xaGVDaDBhR2x6TG5rc0lHVXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3ViV0Y0S0hSb2FYTXVlaXdnWlM1NktTd2dkR2hwY3k1M0lEMGdUV0YwYUM1dFlYZ29kR2hwY3k1M0xDQmxMbmNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbTFoZUNobExuZ3NJRTFoZEdndWJXbHVLSFF1ZUN3Z2RHaHBjeTU0S1Nrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldGNEtHVXVlU3dnVFdGMGFDNXRhVzRvZEM1NUxDQjBhR2x6TG5rcEtTd2dkR2hwY3k1NklEMGdUV0YwYUM1dFlYZ29aUzU2TENCTllYUm9MbTFwYmloMExub3NJSFJvYVhNdWVpa3BMQ0IwYUdsekxuY2dQU0JOWVhSb0xtMWhlQ2hsTG5jc0lFMWhkR2d1YldsdUtIUXVkeXdnZEdocGN5NTNLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNGTmpZV3hoY2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lIUm9hWE11ZUNrcExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xaGVDaGxMQ0JOWVhSb0xtMXBiaWgwTENCMGFHbHpMbmtwS1N3Z2RHaHBjeTU2SUQwZ1RXRjBhQzV0WVhnb1pTd2dUV0YwYUM1dGFXNG9kQ3dnZEdocGN5NTZLU2tzSUhSb2FYTXVkeUE5SUUxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJSFJvYVhNdWR5a3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhCTVpXNW5kR2dvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1c1pXNW5kR2dvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWthWFpwWkdWVFkyRnNZWElvYmlCOGZDQXhLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaE5ZWFJvTG0xaGVDaGxMQ0JOWVhSb0xtMXBiaWgwTENCdUtTa3BPd29nSUNBZ2ZRb2dJQ0FnWm14dmIzSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndVpteHZiM0lvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNW1iRzl2Y2loMGFHbHpMbmtwTENCMGFHbHpMbm9nUFNCTllYUm9MbVpzYjI5eUtIUm9hWE11ZWlrc0lIUm9hWE11ZHlBOUlFMWhkR2d1Wm14dmIzSW9kR2hwY3k1M0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTmxhV3dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MbU5sYVd3b2RHaHBjeTU1S1N3Z2RHaHBjeTU2SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11ZWlrc0lIUm9hWE11ZHlBOUlFMWhkR2d1WTJWcGJDaDBhR2x6TG5jcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG5KdmRXNWtLSFJvYVhNdWVpa3NJSFJvYVhNdWR5QTlJRTFoZEdndWNtOTFibVFvZEdocGN5NTNLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEp2ZFc1a1ZHOWFaWEp2S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCMGFHbHpMbmdnUENBd0lEOGdUV0YwYUM1alpXbHNLSFJvYVhNdWVDa2dPaUJOWVhSb0xtWnNiMjl5S0hSb2FYTXVlQ2tzSUhSb2FYTXVlU0E5SUhSb2FYTXVlU0E4SURBZ1B5Qk5ZWFJvTG1ObGFXd29kR2hwY3k1NUtTQTZJRTFoZEdndVpteHZiM0lvZEdocGN5NTVLU3dnZEdocGN5NTZJRDBnZEdocGN5NTZJRHdnTUNBL0lFMWhkR2d1WTJWcGJDaDBhR2x6TG5vcElEb2dUV0YwYUM1bWJHOXZjaWgwYUdsekxub3BMQ0IwYUdsekxuY2dQU0IwYUdsekxuY2dQQ0F3SUQ4Z1RXRjBhQzVqWldsc0tIUm9hWE11ZHlrZ09pQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWR5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnVaV2RoZEdVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlDMTBhR2x6TG5nc0lIUm9hWE11ZVNBOUlDMTBhR2x6TG5rc0lIUm9hWE11ZWlBOUlDMTBhR2x6TG5vc0lIUm9hWE11ZHlBOUlDMTBhR2x6TG5jc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2IzUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLaUJsTG5nZ0t5QjBhR2x6TG5rZ0tpQmxMbmtnS3lCMGFHbHpMbm9nS2lCbExub2dLeUIwYUdsekxuY2dLaUJsTG5jN0NpQWdJQ0I5Q2lBZ0lDQnNaVzVuZEdoVGNTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDb2dkR2hwY3k1NElDc2dkR2hwY3k1NUlDb2dkR2hwY3k1NUlDc2dkR2hwY3k1NklDb2dkR2hwY3k1NklDc2dkR2hwY3k1M0lDb2dkR2hwY3k1M093b2dJQ0FnZlFvZ0lDQWdiR1Z1WjNSb0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5OeGNuUW9kR2hwY3k1NElDb2dkR2hwY3k1NElDc2dkR2hwY3k1NUlDb2dkR2hwY3k1NUlDc2dkR2hwY3k1NklDb2dkR2hwY3k1NklDc2dkR2hwY3k1M0lDb2dkR2hwY3k1M0tUc0tJQ0FnSUgwS0lDQWdJRzFoYm1oaGRIUmhia3hsYm1kMGFDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFluTW9kR2hwY3k1NEtTQXJJRTFoZEdndVlXSnpLSFJvYVhNdWVTa2dLeUJOWVhSb0xtRmljeWgwYUdsekxub3BJQ3NnVFdGMGFDNWhZbk1vZEdocGN5NTNLVHNLSUNBZ0lIMEtJQ0FnSUc1dmNtMWhiR2w2WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhacFpHVlRZMkZzWVhJb2RHaHBjeTVzWlc1bmRHZ29LU0I4ZkNBeEtUc0tJQ0FnSUgwS0lDQWdJSE5sZEV4bGJtZDBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc2FYcGxLQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc1pYSndLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNzOUlDaGxMbmdnTFNCMGFHbHpMbmdwSUNvZ2RDd2dkR2hwY3k1NUlDczlJQ2hsTG5rZ0xTQjBhR2x6TG5rcElDb2dkQ3dnZEdocGN5NTZJQ3M5SUNobExub2dMU0IwYUdsekxub3BJQ29nZEN3Z2RHaHBjeTUzSUNzOUlDaGxMbmNnTFNCMGFHbHpMbmNwSUNvZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeGxjbkJXWldOMGIzSnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUNzZ0tIUXVlQ0F0SUdVdWVDa2dLaUJ1TENCMGFHbHpMbmtnUFNCbExua2dLeUFvZEM1NUlDMGdaUzU1S1NBcUlHNHNJSFJvYVhNdWVpQTlJR1V1ZWlBcklDaDBMbm9nTFNCbExub3BJQ29nYml3Z2RHaHBjeTUzSUQwZ1pTNTNJQ3NnS0hRdWR5QXRJR1V1ZHlrZ0tpQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzU0SUQwOVBTQjBhR2x6TG5nZ0ppWWdaUzU1SUQwOVBTQjBhR2x6TG5rZ0ppWWdaUzU2SUQwOVBTQjBhR2x6TG5vZ0ppWWdaUzUzSUQwOVBTQjBhR2x6TG5jN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UVhKeVlYa29aU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaVnQwWFN3Z2RHaHBjeTU1SUQwZ1pWdDBJQ3NnTVYwc0lIUm9hWE11ZWlBOUlHVmJkQ0FySURKZExDQjBhR2x6TG5jZ1BTQmxXM1FnS3lBelhTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZRWEp5WVhrb1pTQTlJRnRkTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzNSZElEMGdkR2hwY3k1NExDQmxXM1FnS3lBeFhTQTlJSFJvYVhNdWVTd2daVnQwSUNzZ01sMGdQU0IwYUdsekxub3NJR1ZiZENBcklETmRJRDBnZEdocGN5NTNMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdJVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pRNklHOW1abk5sZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrSUdaeWIyMGdMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvS1M0aUtTd2dkR2hwY3k1NElEMGdaUzVuWlhSWUtIUXBMQ0IwYUdsekxua2dQU0JsTG1kbGRGa29kQ2tzSUhSb2FYTXVlaUE5SUdVdVoyVjBXaWgwS1N3Z2RHaHBjeTUzSUQwZ1pTNW5aWFJYS0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtRnVaRzl0S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpMbmNnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdLbHRUZVcxaWIyd3VhWFJsY21GMGIzSmRLQ2tnZXdvZ0lDQWdJQ0FnSUhscFpXeGtJSFJvYVhNdWVDd2dlV2xsYkdRZ2RHaHBjeTU1TENCNWFXVnNaQ0IwYUdsekxub3NJSGxwWld4a0lIUm9hWE11ZHpzS0lDQWdJSDBLZlRzS1ZtVXVjSEp2ZEc5MGVYQmxMbWx6Vm1WamRHOXlOQ0E5SUNFd093cDJZWElnUVhRZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVWdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0Z1BTQjdmU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuZHBaSFJvSUQwZ1pTd2dkR2hwY3k1b1pXbG5hSFFnUFNCMExDQjBhR2x6TG1SbGNIUm9JRDBnTVN3Z2RHaHBjeTV6WTJsemMyOXlJRDBnYm1WM0lGWmxLREFzSURBc0lHVXNJSFFwTENCMGFHbHpMbk5qYVhOemIzSlVaWE4wSUQwZ0lURXNJSFJvYVhNdWRtbGxkM0J2Y25RZ1BTQnVaWGNnVm1Vb01Dd2dNQ3dnWlN3Z2RDa3NJSFJvYVhNdWRHVjRkSFZ5WlNBOUlHNWxkeUJ2ZENoMmIybGtJREFzSUc0dWJXRndjR2x1Wnl3Z2JpNTNjbUZ3VXl3Z2JpNTNjbUZ3VkN3Z2JpNXRZV2RHYVd4MFpYSXNJRzR1YldsdVJtbHNkR1Z5TENCdUxtWnZjbTFoZEN3Z2JpNTBlWEJsTENCdUxtRnVhWE52ZEhKdmNIa3NJRzR1Wlc1amIyUnBibWNwTENCMGFHbHpMblJsZUhSMWNtVXVhWE5TWlc1a1pYSlVZWEpuWlhSVVpYaDBkWEpsSUQwZ0lUQXNJSFJvYVhNdWRHVjRkSFZ5WlM1cGJXRm5aU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdnNklERUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ2JpNW5aVzVsY21GMFpVMXBjRzFoY0hNZ0lUMDlJSFp2YVdRZ01DQS9JRzR1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRG9nSVRFc0lIUm9hWE11ZEdWNGRIVnlaUzVwYm5SbGNtNWhiRVp2Y20xaGRDQTlJRzR1YVc1MFpYSnVZV3hHYjNKdFlYUWdJVDA5SUhadmFXUWdNQ0EvSUc0dWFXNTBaWEp1WVd4R2IzSnRZWFFnT2lCdWRXeHNMQ0IwYUdsekxuUmxlSFIxY21VdWJXbHVSbWxzZEdWeUlEMGdiaTV0YVc1R2FXeDBaWElnSVQwOUlIWnZhV1FnTUNBL0lHNHViV2x1Um1sc2RHVnlJRG9nZEhRc0lIUm9hWE11WkdWd2RHaENkV1ptWlhJZ1BTQnVMbVJsY0hSb1FuVm1abVZ5SUNFOVBTQjJiMmxrSURBZ1B5QnVMbVJsY0hSb1FuVm1abVZ5SURvZ0lUQXNJSFJvYVhNdWMzUmxibU5wYkVKMVptWmxjaUE5SUc0dWMzUmxibU5wYkVKMVptWmxjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z2JpNXpkR1Z1WTJsc1FuVm1abVZ5SURvZ0lURXNJSFJvYVhNdVpHVndkR2hVWlhoMGRYSmxJRDBnYmk1a1pYQjBhRlJsZUhSMWNtVWdJVDA5SUhadmFXUWdNQ0EvSUc0dVpHVndkR2hVWlhoMGRYSmxJRG9nYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJSE5sZEZSbGVIUjFjbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHVXVhVzFoWjJVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUIwYUdsekxuZHBaSFJvTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklIUm9hWE11YUdWcFoyaDBMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRG9nZEdocGN5NWtaWEIwYUFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZEdWNGRIVnlaU0E5SUdVN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJUYVhwbEtHVXNJSFFzSUc0Z1BTQXhLU0I3Q2lBZ0lDQWdJQ0FnS0hSb2FYTXVkMmxrZEdnZ0lUMDlJR1VnZkh3Z2RHaHBjeTVvWldsbmFIUWdJVDA5SUhRZ2ZId2dkR2hwY3k1a1pYQjBhQ0FoUFQwZ2Jpa2dKaVlnS0hSb2FYTXVkMmxrZEdnZ1BTQmxMQ0IwYUdsekxtaGxhV2RvZENBOUlIUXNJSFJvYVhNdVpHVndkR2dnUFNCdUxDQjBhR2x6TG5SbGVIUjFjbVV1YVcxaFoyVXVkMmxrZEdnZ1BTQmxMQ0IwYUdsekxuUmxlSFIxY21VdWFXMWhaMlV1YUdWcFoyaDBJRDBnZEN3Z2RHaHBjeTUwWlhoMGRYSmxMbWx0WVdkbExtUmxjSFJvSUQwZ2Jpd2dkR2hwY3k1a2FYTndiM05sS0NrcExDQjBhR2x6TG5acFpYZHdiM0owTG5ObGRDZ3dMQ0F3TENCbExDQjBLU3dnZEdocGN5NXpZMmx6YzI5eUxuTmxkQ2d3TENBd0xDQmxMQ0IwS1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTNhV1IwYUNBOUlHVXVkMmxrZEdnc0lIUm9hWE11YUdWcFoyaDBJRDBnWlM1b1pXbG5hSFFzSUhSb2FYTXVaR1Z3ZEdnZ1BTQmxMbVJsY0hSb0xDQjBhR2x6TG5acFpYZHdiM0owTG1OdmNIa29aUzUyYVdWM2NHOXlkQ2tzSUhSb2FYTXVkR1Y0ZEhWeVpTQTlJR1V1ZEdWNGRIVnlaUzVqYkc5dVpTZ3BMQ0IwYUdsekxuUmxlSFIxY21VdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQzR1TG5Sb2FYTXVkR1Y0ZEhWeVpTNXBiV0ZuWlFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WkdWd2RHaENkV1ptWlhJZ1BTQmxMbVJsY0hSb1FuVm1abVZ5TENCMGFHbHpMbk4wWlc1amFXeENkV1ptWlhJZ1BTQmxMbk4wWlc1amFXeENkV1ptWlhJc0lIUm9hWE11WkdWd2RHaFVaWGgwZFhKbElEMGdaUzVrWlhCMGFGUmxlSFIxY21Vc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0prYVhOd2IzTmxJZ29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUXA5T3dwQmRDNXdjbTkwYjNSNWNHVXVhWE5YWldKSFRGSmxibVJsY2xSaGNtZGxkQ0E5SUNFd093cDJZWElnV21NZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVGMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXBPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1MFpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkR1Y0ZEhWeVpTQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnUENCdU95QnlLeXNwZEdocGN5NTBaWGgwZFhKbFczSmRJRDBnYVM1amJHOXVaU2dwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVMmw2WlNobExDQjBMQ0J1SUQwZ01Ta2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbmRwWkhSb0lDRTlQU0JsSUh4OElIUm9hWE11YUdWcFoyaDBJQ0U5UFNCMElIeDhJSFJvYVhNdVpHVndkR2dnSVQwOUlHNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUzYVdSMGFDQTlJR1VzSUhSb2FYTXVhR1ZwWjJoMElEMGdkQ3dnZEdocGN5NWtaWEIwYUNBOUlHNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCMGFHbHpMblJsZUhSMWNtVXViR1Z1WjNSb095QnBJRHdnY2pzZ2FTc3JLWFJvYVhNdWRHVjRkSFZ5WlZ0cFhTNXBiV0ZuWlM1M2FXUjBhQ0E5SUdVc0lIUm9hWE11ZEdWNGRIVnlaVnRwWFM1cGJXRm5aUzVvWldsbmFIUWdQU0IwTENCMGFHbHpMblJsZUhSMWNtVmJhVjB1YVcxaFoyVXVaR1Z3ZEdnZ1BTQnVPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVJwYzNCdmMyVW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRtbGxkM0J2Y25RdWMyVjBLREFzSURBc0lHVXNJSFFwTENCMGFHbHpMbk5qYVhOemIzSXVjMlYwS0RBc0lEQXNJR1VzSUhRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVrYVhOd2IzTmxLQ2tzSUhSb2FYTXVkMmxrZEdnZ1BTQmxMbmRwWkhSb0xDQjBhR2x6TG1obGFXZG9kQ0E5SUdVdWFHVnBaMmgwTENCMGFHbHpMbVJsY0hSb0lEMGdaUzVrWlhCMGFDd2dkR2hwY3k1MmFXVjNjRzl5ZEM1elpYUW9NQ3dnTUN3Z2RHaHBjeTUzYVdSMGFDd2dkR2hwY3k1b1pXbG5hSFFwTENCMGFHbHpMbk5qYVhOemIzSXVjMlYwS0RBc0lEQXNJSFJvYVhNdWQybGtkR2dzSUhSb2FYTXVhR1ZwWjJoMEtTd2dkR2hwY3k1a1pYQjBhRUoxWm1abGNpQTlJR1V1WkdWd2RHaENkV1ptWlhJc0lIUm9hWE11YzNSbGJtTnBiRUoxWm1abGNpQTlJR1V1YzNSbGJtTnBiRUoxWm1abGNpd2dkR2hwY3k1a1pYQjBhRlJsZUhSMWNtVWdQU0JsTG1SbGNIUm9WR1Y0ZEhWeVpTd2dkR2hwY3k1MFpYaDBkWEpsTG14bGJtZDBhQ0E5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVkR1Y0ZEhWeVpTNXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3BkR2hwY3k1MFpYaDBkWEpsVzNSZElEMGdaUzUwWlhoMGRYSmxXM1JkTG1Oc2IyNWxLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q24wN0NscGpMbkJ5YjNSdmRIbHdaUzVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6SUQwZ0lUQTdDblpoY2lCWWN5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FYUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpQTlJSHQ5S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMExDQnVLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuTmhiWEJzWlhNZ1BTQTBMQ0IwYUdsekxtbG5ibTl5WlVSbGNIUm9SbTl5VFhWc2RHbHpZVzF3YkdWRGIzQjVJRDBnYmk1cFoyNXZjbVZFWlhCMGFDQWhQVDBnZG05cFpDQXdJRDhnYmk1cFoyNXZjbVZFWlhCMGFDQTZJQ0V3TENCMGFHbHpMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0E5SUc0dWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbElDRTlQU0IyYjJsa0lEQWdQeUJ1TG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlNBNklDRXhMQ0IwYUdsekxuVnpaVkpsYm1SbGNtSjFabVpsY2lBOUlIUm9hWE11ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUQwOVBTQWhNVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1TG1OaGJHd29kR2hwY3l3Z1pTa3NJSFJvYVhNdWMyRnRjR3hsY3lBOUlHVXVjMkZ0Y0d4bGN5d2dkR2hwY3k1MWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VZ1BTQmxMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU3dnZEdocGN5NTFjMlZTWlc1a1pYSmlkV1ptWlhJZ1BTQmxMblZ6WlZKbGJtUmxjbUoxWm1abGNpd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1dITXVjSEp2ZEc5MGVYQmxMbWx6VjJWaVIweE5kV3gwYVhOaGJYQnNaVkpsYm1SbGNsUmhjbWRsZENBOUlDRXdPd3AyWVhJZ1ozUWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTUN3Z2RDQTlJREFzSUc0Z1BTQXdMQ0JwSUQwZ01TbDdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1VzSUhSb2FYTXVYM2tnUFNCMExDQjBhR2x6TGw5NklEMGdiaXdnZEdocGN5NWZkeUE5SUdrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2MyeGxjbkFvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsRjFZWFJsY201cGIyNDZJRk4wWVhScFl5QXVjMnhsY25Bb0tTQm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJWYzJVZ2NXMHVjMnhsY25CUmRXRjBaWEp1YVc5dWN5Z2djV0VzSUhGaUxDQjBJQ2tnYVc1emRHVmhaQzRpS1N3Z2JpNXpiR1Z5Y0ZGMVlYUmxjbTVwYjI1ektHVXNJSFFzSUdrcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklITnNaWEp3Um14aGRDaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0J1VzJrZ0t5QXdYU3dnWXlBOUlHNWJhU0FySURGZExDQm9JRDBnYmx0cElDc2dNbDBzSUhVZ1BTQnVXMmtnS3lBelhTd2daQ0E5SUhKYmJ5QXJJREJkTENCbUlEMGdjbHR2SUNzZ01WMHNJRzBnUFNCeVcyOGdLeUF5WFN3Z2VDQTlJSEpiYnlBcklETmRPd29nSUNBZ0lDQWdJR2xtSUNoaElEMDlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZiZENBcklEQmRJRDBnYkN3Z1pWdDBJQ3NnTVYwZ1BTQmpMQ0JsVzNRZ0t5QXlYU0E5SUdnc0lHVmJkQ0FySUROZElEMGdkVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9ZU0E5UFQwZ01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCbFczUWdLeUF3WFNBOUlHUXNJR1ZiZENBcklERmRJRDBnWml3Z1pWdDBJQ3NnTWwwZ1BTQnRMQ0JsVzNRZ0t5QXpYU0E5SUhnN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hVZ0lUMDlJSGdnZkh3Z2JDQWhQVDBnWkNCOGZDQmpJQ0U5UFNCbUlIeDhJR2dnSVQwOUlHMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNBeElDMGdZU3dnWnlBOUlHd2dLaUJrSUNzZ1l5QXFJR1lnS3lCb0lDb2diU0FySUhVZ0tpQjRMQ0J3SUQwZ1p5QStQU0F3SUQ4Z01TQTZJQzB4TENCZklEMGdNU0F0SUdjZ0tpQm5Pd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9YeUErSUU1MWJXSmxjaTVGVUZOSlRFOU9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJRTFoZEdndWMzRnlkQ2hmS1N3Z1FTQTlJRTFoZEdndVlYUmhiaklvWWl3Z1p5QXFJSEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGlBOUlFMWhkR2d1YzJsdUtIWWdLaUJCS1NBdklHSXNJR0VnUFNCTllYUm9Mbk5wYmloaElDb2dRU2tnTHlCaU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ1lTQXFJSEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzSUQwZ2JDQXFJSFlnS3lCa0lDb2dlU3dnWXlBOUlHTWdLaUIySUNzZ1ppQXFJSGtzSUdnZ1BTQm9JQ29nZGlBcklHMGdLaUI1TENCMUlEMGdkU0FxSUhZZ0t5QjRJQ29nZVN3Z2RpQTlQVDBnTVNBdElHRXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdNU0F2SUUxaGRHZ3VjM0Z5ZENoc0lDb2diQ0FySUdNZ0tpQmpJQ3NnYUNBcUlHZ2dLeUIxSUNvZ2RTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNJQ285SUdJc0lHTWdLajBnWWl3Z2FDQXFQU0JpTENCMUlDbzlJR0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdaVnQwWFNBOUlHd3NJR1ZiZENBcklERmRJRDBnWXl3Z1pWdDBJQ3NnTWwwZ1BTQm9MQ0JsVzNRZ0t5QXpYU0E5SUhVN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2JYVnNkR2x3YkhsUmRXRjBaWEp1YVc5dWMwWnNZWFFvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnYmx0cFhTd2diQ0E5SUc1YmFTQXJJREZkTENCaklEMGdibHRwSUNzZ01sMHNJR2dnUFNCdVcya2dLeUF6WFN3Z2RTQTlJSEpiYjEwc0lHUWdQU0J5VzI4Z0t5QXhYU3dnWmlBOUlISmJieUFySURKZExDQnRJRDBnY2x0dklDc2dNMTA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiZEYwZ1BTQmhJQ29nYlNBcklHZ2dLaUIxSUNzZ2JDQXFJR1lnTFNCaklDb2daQ3dnWlZ0MElDc2dNVjBnUFNCc0lDb2diU0FySUdnZ0tpQmtJQ3NnWXlBcUlIVWdMU0JoSUNvZ1ppd2daVnQwSUNzZ01sMGdQU0JqSUNvZ2JTQXJJR2dnS2lCbUlDc2dZU0FxSUdRZ0xTQnNJQ29nZFN3Z1pWdDBJQ3NnTTEwZ1BTQm9JQ29nYlNBdElHRWdLaUIxSUMwZ2JDQXFJR1FnTFNCaklDb2daaXdnWlRzS0lDQWdJSDBLSUNBZ0lHZGxkQ0I0S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk0T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSGdvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDNnZ1BTQmxMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDazdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2VTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVUc0tJQ0FnSUgwS0lDQWdJSE5sZENCNUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOTVJRDBnWlN3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSG9vS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM283Q2lBZ0lDQjlDaUFnSUNCelpYUWdlaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZWlBOUlHVXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZENCM0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5M093b2dJQ0FnZlFvZ0lDQWdjMlYwSUhjb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgzY2dQU0JsTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2s3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTRJRDBnWlN3Z2RHaHBjeTVmZVNBOUlIUXNJSFJvYVhNdVgzb2dQU0J1TENCMGFHbHpMbDkzSUQwZ2FTd2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtIUm9hWE11WDNnc0lIUm9hWE11WDNrc0lIUm9hWE11WDNvc0lIUm9hWE11WDNjcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnZ1BTQmxMbmdzSUhSb2FYTXVYM2tnUFNCbExua3NJSFJvYVhNdVgzb2dQU0JsTG5vc0lIUm9hWE11WDNjZ1BTQmxMbmNzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMUZkV3hsY2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tDRW9aU0FtSmlCbExtbHpSWFZzWlhJcEtTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lsUklVa1ZGTGxGMVlYUmxjbTVwYjI0NklDNXpaWFJHY205dFJYVnNaWElvS1NCdWIzY2daWGh3WldOMGN5QmhiaUJGZFd4bGNpQnliM1JoZEdsdmJpQnlZWFJvWlhJZ2RHaGhiaUJoSUZabFkzUnZjak1nWVc1a0lHOXlaR1Z5TGlJcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWZlQ3dnYVNBOUlHVXVYM2tzSUhJZ1BTQmxMbDk2TENCdklEMGdaUzVmYjNKa1pYSXNJR0VnUFNCTllYUm9MbU52Y3l3Z2JDQTlJRTFoZEdndWMybHVMQ0JqSUQwZ1lTaHVJQzhnTWlrc0lHZ2dQU0JoS0drZ0x5QXlLU3dnZFNBOUlHRW9jaUF2SURJcExDQmtJRDBnYkNodUlDOGdNaWtzSUdZZ1BTQnNLR2tnTHlBeUtTd2diU0E5SUd3b2NpQXZJRElwT3dvZ0lDQWdJQ0FnSUhOM2FYUmphQ2h2S1hzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVdGbGFJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzZ2dQU0JrSUNvZ2FDQXFJSFVnS3lCaklDb2daaUFxSUcwc0lIUm9hWE11WDNrZ1BTQmpJQ29nWmlBcUlIVWdMU0JrSUNvZ2FDQXFJRzBzSUhSb2FYTXVYM29nUFNCaklDb2dhQ0FxSUcwZ0t5QmtJQ29nWmlBcUlIVXNJSFJvYVhNdVgzY2dQU0JqSUNvZ2FDQXFJSFVnTFNCa0lDb2daaUFxSUcwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpV1ZoYUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNnZ1BTQmtJQ29nYUNBcUlIVWdLeUJqSUNvZ1ppQXFJRzBzSUhSb2FYTXVYM2tnUFNCaklDb2daaUFxSUhVZ0xTQmtJQ29nYUNBcUlHMHNJSFJvYVhNdVgzb2dQU0JqSUNvZ2FDQXFJRzBnTFNCa0lDb2daaUFxSUhVc0lIUm9hWE11WDNjZ1BTQmpJQ29nYUNBcUlIVWdLeUJrSUNvZ1ppQXFJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXbGhaSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2dnUFNCa0lDb2dhQ0FxSUhVZ0xTQmpJQ29nWmlBcUlHMHNJSFJvYVhNdVgza2dQU0JqSUNvZ1ppQXFJSFVnS3lCa0lDb2dhQ0FxSUcwc0lIUm9hWE11WDNvZ1BTQmpJQ29nYUNBcUlHMGdLeUJrSUNvZ1ppQXFJSFVzSUhSb2FYTXVYM2NnUFNCaklDb2dhQ0FxSUhVZ0xTQmtJQ29nWmlBcUlHMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVdsbFlJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzZ2dQU0JrSUNvZ2FDQXFJSFVnTFNCaklDb2daaUFxSUcwc0lIUm9hWE11WDNrZ1BTQmpJQ29nWmlBcUlIVWdLeUJrSUNvZ2FDQXFJRzBzSUhSb2FYTXVYM29nUFNCaklDb2dhQ0FxSUcwZ0xTQmtJQ29nWmlBcUlIVXNJSFJvYVhNdVgzY2dQU0JqSUNvZ2FDQXFJSFVnS3lCa0lDb2daaUFxSUcwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpV1ZwWUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNnZ1BTQmtJQ29nYUNBcUlIVWdLeUJqSUNvZ1ppQXFJRzBzSUhSb2FYTXVYM2tnUFNCaklDb2daaUFxSUhVZ0t5QmtJQ29nYUNBcUlHMHNJSFJvYVhNdVgzb2dQU0JqSUNvZ2FDQXFJRzBnTFNCa0lDb2daaUFxSUhVc0lIUm9hWE11WDNjZ1BTQmpJQ29nYUNBcUlIVWdMU0JrSUNvZ1ppQXFJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXRnBaSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2dnUFNCa0lDb2dhQ0FxSUhVZ0xTQmpJQ29nWmlBcUlHMHNJSFJvYVhNdVgza2dQU0JqSUNvZ1ppQXFJSFVnTFNCa0lDb2dhQ0FxSUcwc0lIUm9hWE11WDNvZ1BTQmpJQ29nYUNBcUlHMGdLeUJrSUNvZ1ppQXFJSFVzSUhSb2FYTXVYM2NnUFNCaklDb2dhQ0FxSUhVZ0t5QmtJQ29nWmlBcUlHMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVWFZoZEdWeWJtbHZiam9nTG5ObGRFWnliMjFGZFd4bGNpZ3BJR1Z1WTI5MWJuUmxjbVZrSUdGdUlIVnVhMjV2ZDI0Z2IzSmtaWEk2SUNJZ0t5QnZLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlDRXhJQ1ltSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMUJlR2x6UVc1bmJHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RDQXZJRElzSUdrZ1BTQk5ZWFJvTG5OcGJpaHVLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVDQTlJR1V1ZUNBcUlHa3NJSFJvYVhNdVgza2dQU0JsTG5rZ0tpQnBMQ0IwYUdsekxsOTZJRDBnWlM1NklDb2dhU3dnZEdocGN5NWZkeUE5SUUxaGRHZ3VZMjl6S0c0cExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VW05MFlYUnBiMjVOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1bGJHVnRaVzUwY3l3Z2JpQTlJSFJiTUYwc0lHa2dQU0IwV3pSZExDQnlJRDBnZEZzNFhTd2dieUE5SUhSYk1WMHNJR0VnUFNCMFd6VmRMQ0JzSUQwZ2RGczVYU3dnWXlBOUlIUmJNbDBzSUdnZ1BTQjBXelpkTENCMUlEMGdkRnN4TUYwc0lHUWdQU0J1SUNzZ1lTQXJJSFU3Q2lBZ0lDQWdJQ0FnYVdZZ0tHUWdQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdMalVnTHlCTllYUm9Mbk54Y25Rb1pDQXJJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5M0lEMGdMakkxSUM4Z1ppd2dkR2hwY3k1ZmVDQTlJQ2hvSUMwZ2JDa2dLaUJtTENCMGFHbHpMbDk1SUQwZ0tISWdMU0JqS1NBcUlHWXNJSFJvYVhNdVgzb2dQU0FvYnlBdElHa3BJQ29nWmpzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHNGdQaUJoSUNZbUlHNGdQaUIxS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdNaUFxSUUxaGRHZ3VjM0Z5ZENneElDc2diaUF0SUdFZ0xTQjFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZHlBOUlDaG9JQzBnYkNrZ0x5Qm1MQ0IwYUdsekxsOTRJRDBnTGpJMUlDb2daaXdnZEdocGN5NWZlU0E5SUNocElDc2dieWtnTHlCbUxDQjBhR2x6TGw5NklEMGdLSElnS3lCaktTQXZJR1k3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoaElENGdkU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlESWdLaUJOWVhSb0xuTnhjblFvTVNBcklHRWdMU0J1SUMwZ2RTazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2NnUFNBb2NpQXRJR01wSUM4Z1ppd2dkR2hwY3k1ZmVDQTlJQ2hwSUNzZ2J5a2dMeUJtTENCMGFHbHpMbDk1SUQwZ0xqSTFJQ29nWml3Z2RHaHBjeTVmZWlBOUlDaHNJQ3NnYUNrZ0x5Qm1Pd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnTWlBcUlFMWhkR2d1YzNGeWRDZ3hJQ3NnZFNBdElHNGdMU0JoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmR5QTlJQ2h2SUMwZ2FTa2dMeUJtTENCMGFHbHpMbDk0SUQwZ0tISWdLeUJqS1NBdklHWXNJSFJvYVhNdVgza2dQU0FvYkNBcklHZ3BJQzhnWml3Z2RHaHBjeTVmZWlBOUlDNHlOU0FxSUdZN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRWVzVwZEZabFkzUnZjbk1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVrYjNRb2RDa2dLeUF4T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1SUR3Z1RuVnRZbVZ5TGtWUVUwbE1UMDRnUHlBb2JpQTlJREFzSUUxaGRHZ3VZV0p6S0dVdWVDa2dQaUJOWVhSb0xtRmljeWhsTG5vcElEOGdLSFJvYVhNdVgzZ2dQU0F0WlM1NUxDQjBhR2x6TGw5NUlEMGdaUzU0TENCMGFHbHpMbDk2SUQwZ01Dd2dkR2hwY3k1ZmR5QTlJRzRwSURvZ0tIUm9hWE11WDNnZ1BTQXdMQ0IwYUdsekxsOTVJRDBnTFdVdWVpd2dkR2hwY3k1ZmVpQTlJR1V1ZVN3Z2RHaHBjeTVmZHlBOUlHNHBLU0E2SUNoMGFHbHpMbDk0SUQwZ1pTNTVJQ29nZEM1NklDMGdaUzU2SUNvZ2RDNTVMQ0IwYUdsekxsOTVJRDBnWlM1NklDb2dkQzU0SUMwZ1pTNTRJQ29nZEM1NkxDQjBhR2x6TGw5NklEMGdaUzU0SUNvZ2RDNTVJQzBnWlM1NUlDb2dkQzU0TENCMGFHbHpMbDkzSUQwZ2Jpa3NJSFJvYVhNdWJtOXliV0ZzYVhwbEtDazdDaUFnSUNCOUNpQWdJQ0JoYm1kc1pWUnZLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnTWlBcUlFMWhkR2d1WVdOdmN5aE5ZWFJvTG1GaWN5aHRkQ2gwYUdsekxtUnZkQ2hsS1N3Z0xURXNJREVwS1NrN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWVWIzZGhjbVJ6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVlXNW5iR1ZVYnlobEtUc0tJQ0FnSUNBZ0lDQnBaaUFvYmlBOVBUMGdNQ2tnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCTllYUm9MbTFwYmlneExDQjBJQzhnYmlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMnhsY25Bb1pTd2dhU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JwWkdWdWRHbDBlU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvTUN3Z01Dd2dNQ3dnTVNrN0NpQWdJQ0I5Q2lBZ0lDQnBiblpsY25Rb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dWFuVm5ZWFJsS0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiMjVxZFdkaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dLajBnTFRFc0lIUm9hWE11WDNrZ0tqMGdMVEVzSUhSb2FYTXVYM29nS2owZ0xURXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnZkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnS2lCbExsOTRJQ3NnZEdocGN5NWZlU0FxSUdVdVgza2dLeUIwYUdsekxsOTZJQ29nWlM1ZmVpQXJJSFJvYVhNdVgzY2dLaUJsTGw5M093b2dJQ0FnZlFvZ0lDQWdiR1Z1WjNSb1UzRW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dLaUIwYUdsekxsOTRJQ3NnZEdocGN5NWZlU0FxSUhSb2FYTXVYM2tnS3lCMGFHbHpMbDk2SUNvZ2RHaHBjeTVmZWlBcklIUm9hWE11WDNjZ0tpQjBhR2x6TGw5M093b2dJQ0FnZlFvZ0lDQWdiR1Z1WjNSb0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5OeGNuUW9kR2hwY3k1ZmVDQXFJSFJvYVhNdVgzZ2dLeUIwYUdsekxsOTVJQ29nZEdocGN5NWZlU0FySUhSb2FYTXVYM29nS2lCMGFHbHpMbDk2SUNzZ2RHaHBjeTVmZHlBcUlIUm9hWE11WDNjcE93b2dJQ0FnZlFvZ0lDQWdibTl5YldGc2FYcGxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQTlQVDBnTUNBL0lDaDBhR2x6TGw5NElEMGdNQ3dnZEdocGN5NWZlU0E5SURBc0lIUm9hWE11WDNvZ1BTQXdMQ0IwYUdsekxsOTNJRDBnTVNrZ09pQW9aU0E5SURFZ0x5QmxMQ0IwYUdsekxsOTRJRDBnZEdocGN5NWZlQ0FxSUdVc0lIUm9hWE11WDNrZ1BTQjBhR2x6TGw5NUlDb2daU3dnZEdocGN5NWZlaUE5SUhSb2FYTXVYM29nS2lCbExDQjBhR2x6TGw5M0lEMGdkR2hwY3k1ZmR5QXFJR1VwTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUhadmFXUWdNQ0EvSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsRjFZWFJsY201cGIyNDZJQzV0ZFd4MGFYQnNlU2dwSUc1dmR5QnZibXg1SUdGalkyVndkSE1nYjI1bElHRnlaM1Z0Wlc1MExpQlZjMlVnTG0xMWJIUnBjR3g1VVhWaGRHVnlibWx2Ym5Nb0lHRXNJR0lnS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG0xMWJIUnBjR3g1VVhWaGRHVnlibWx2Ym5Nb1pTd2dkQ2twSURvZ2RHaHBjeTV0ZFd4MGFYQnNlVkYxWVhSbGNtNXBiMjV6S0hSb2FYTXNJR1VwT3dvZ0lDQWdmUW9nSUNBZ2NISmxiWFZzZEdsd2JIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVVYVmhkR1Z5Ym1sdmJuTW9aU3dnZEdocGN5azdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlVkYxWVhSbGNtNXBiMjV6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1WDNnc0lHa2dQU0JsTGw5NUxDQnlJRDBnWlM1ZmVpd2dieUE5SUdVdVgzY3NJR0VnUFNCMExsOTRMQ0JzSUQwZ2RDNWZlU3dnWXlBOUlIUXVYM29zSUdnZ1BTQjBMbDkzT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTRJRDBnYmlBcUlHZ2dLeUJ2SUNvZ1lTQXJJR2tnS2lCaklDMGdjaUFxSUd3c0lIUm9hWE11WDNrZ1BTQnBJQ29nYUNBcklHOGdLaUJzSUNzZ2NpQXFJR0VnTFNCdUlDb2dZeXdnZEdocGN5NWZlaUE5SUhJZ0tpQm9JQ3NnYnlBcUlHTWdLeUJ1SUNvZ2JDQXRJR2tnS2lCaExDQjBhR2x6TGw5M0lEMGdieUFxSUdnZ0xTQnVJQ29nWVNBdElHa2dLaUJzSUMwZ2NpQXFJR01zSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5zWlhKd0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kQ0E5UFQwZ01Da2djbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdQVDA5SURFcElISmxkSFZ5YmlCMGFHbHpMbU52Y0hrb1pTazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TGw5NExDQnBJRDBnZEdocGN5NWZlU3dnY2lBOUlIUm9hWE11WDNvc0lHOGdQU0IwYUdsekxsOTNMQ0JoSUQwZ2J5QXFJR1V1WDNjZ0t5QnVJQ29nWlM1ZmVDQXJJR2tnS2lCbExsOTVJQ3NnY2lBcUlHVXVYM283Q2lBZ0lDQWdJQ0FnYVdZZ0tHRWdQQ0F3SUQ4Z0tIUm9hWE11WDNjZ1BTQXRaUzVmZHl3Z2RHaHBjeTVmZUNBOUlDMWxMbDk0TENCMGFHbHpMbDk1SUQwZ0xXVXVYM2tzSUhSb2FYTXVYM29nUFNBdFpTNWZlaXdnWVNBOUlDMWhLU0E2SUhSb2FYTXVZMjl3ZVNobEtTd2dZU0ErUFNBeEtTQnlaWFIxY200Z2RHaHBjeTVmZHlBOUlHOHNJSFJvYVhNdVgzZ2dQU0J1TENCMGFHbHpMbDk1SUQwZ2FTd2dkR2hwY3k1ZmVpQTlJSElzSUhSb2FYTTdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQXhJQzBnWVNBcUlHRTdDaUFnSUNBZ0lDQWdhV1lnS0d3Z1BEMGdUblZ0WW1WeUxrVlFVMGxNVDA0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0F4SUMwZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzY2dQU0JtSUNvZ2J5QXJJSFFnS2lCMGFHbHpMbDkzTENCMGFHbHpMbDk0SUQwZ1ppQXFJRzRnS3lCMElDb2dkR2hwY3k1ZmVDd2dkR2hwY3k1ZmVTQTlJR1lnS2lCcElDc2dkQ0FxSUhSb2FYTXVYM2tzSUhSb2FYTXVYM29nUFNCbUlDb2djaUFySUhRZ0tpQjBhR2x6TGw5NkxDQjBhR2x6TG01dmNtMWhiR2w2WlNncExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnVFdGMGFDNXpjWEowS0d3cExDQm9JRDBnVFdGMGFDNWhkR0Z1TWloakxDQmhLU3dnZFNBOUlFMWhkR2d1YzJsdUtDZ3hJQzBnZENrZ0tpQm9LU0F2SUdNc0lHUWdQU0JOWVhSb0xuTnBiaWgwSUNvZ2FDa2dMeUJqT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTNJRDBnYnlBcUlIVWdLeUIwYUdsekxsOTNJQ29nWkN3Z2RHaHBjeTVmZUNBOUlHNGdLaUIxSUNzZ2RHaHBjeTVmZUNBcUlHUXNJSFJvYVhNdVgza2dQU0JwSUNvZ2RTQXJJSFJvYVhNdVgza2dLaUJrTENCMGFHbHpMbDk2SUQwZ2NpQXFJSFVnS3lCMGFHbHpMbDk2SUNvZ1pDd2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyeGxjbkJSZFdGMFpYSnVhVzl1Y3lobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYjNCNUtHVXBMbk5zWlhKd0tIUXNJRzRwT3dvZ0lDQWdmUW9nSUNBZ2NtRnVaRzl0S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ1RXRjBhQzV5WVc1a2IyMG9LU3dnZENBOUlFMWhkR2d1YzNGeWRDZ3hJQzBnWlNrc0lHNGdQU0JOWVhSb0xuTnhjblFvWlNrc0lHa2dQU0F5SUNvZ1RXRjBhQzVRU1NBcUlFMWhkR2d1Y21GdVpHOXRLQ2tzSUhJZ1BTQXlJQ29nVFdGMGFDNVFTU0FxSUUxaGRHZ3VjbUZ1Wkc5dEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtIUWdLaUJOWVhSb0xtTnZjeWhwS1N3Z2JpQXFJRTFoZEdndWMybHVLSElwTENCdUlDb2dUV0YwYUM1amIzTW9jaWtzSUhRZ0tpQk5ZWFJvTG5OcGJpaHBLU2s3Q2lBZ0lDQjlDaUFnSUNCbGNYVmhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExsOTRJRDA5UFNCMGFHbHpMbDk0SUNZbUlHVXVYM2tnUFQwOUlIUm9hWE11WDNrZ0ppWWdaUzVmZWlBOVBUMGdkR2hwY3k1ZmVpQW1KaUJsTGw5M0lEMDlQU0IwYUdsekxsOTNPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVRnljbUY1S0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnUFNCbFczUmRMQ0IwYUdsekxsOTVJRDBnWlZ0MElDc2dNVjBzSUhSb2FYTXVYM29nUFNCbFczUWdLeUF5WFN3Z2RHaHBjeTVmZHlBOUlHVmJkQ0FySUROZExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwRnljbUY1S0dVZ1BTQmJYU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnQwWFNBOUlIUm9hWE11WDNnc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1ZmVTd2daVnQwSUNzZ01sMGdQU0IwYUdsekxsOTZMQ0JsVzNRZ0t5QXpYU0E5SUhSb2FYTXVYM2NzSUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBOUlHVXVaMlYwV0NoMEtTd2dkR2hwY3k1ZmVTQTlJR1V1WjJWMFdTaDBLU3dnZEdocGN5NWZlaUE5SUdVdVoyVjBXaWgwS1N3Z2RHaHBjeTVmZHlBOUlHVXVaMlYwVnloMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lGOXZia05vWVc1blpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU0I3ZlFwOU93cG5kQzV3Y205MGIzUjVjR1V1YVhOUmRXRjBaWEp1YVc5dUlEMGdJVEE3Q25aaGNpQk5JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURBc0lIUWdQU0F3TENCdUlEMGdNQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NTRJRDBnWlN3Z2RHaHBjeTU1SUQwZ2RDd2dkR2hwY3k1NklEMGdianNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdQVDA5SUhadmFXUWdNQ0FtSmlBb2JpQTlJSFJvYVhNdWVpa3NJSFJvYVhNdWVDQTlJR1VzSUhSb2FYTXVlU0E5SUhRc0lIUm9hWE11ZWlBOUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTENCMGFHbHpMbmtnUFNCbExDQjBhR2x6TG5vZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV0NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU1SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRm9vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbm9nUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBRMjl0Y0c5dVpXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWVDQTlJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXhPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1NUlEMGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElESTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5vZ1BTQjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ltbHVaR1Y0SUdseklHOTFkQ0J2WmlCeVlXNW5aVG9nSWlBcklHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRU52YlhCdmJtVnVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2MzZHBkR05vS0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEQTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0T3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURFNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTVPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJREk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1Nk93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSnBibVJsZUNCcGN5QnZkWFFnYjJZZ2NtRnVaMlU2SUNJZ0t5QmxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb2RHaHBjeTU0TENCMGFHbHpMbmtzSUhSb2FYTXVlaWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NExDQjBhR2x6TG5rZ1BTQmxMbmtzSUhSb2FYTXVlaUE5SUdVdWVpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUhadmFXUWdNQ0EvSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pNNklDNWhaR1FvS1NCdWIzY2diMjVzZVNCaFkyTmxjSFJ6SUc5dVpTQmhjbWQxYldWdWRDNGdWWE5sSUM1aFpHUldaV04wYjNKektDQmhMQ0JpSUNrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1aFpHUldaV04wYjNKektHVXNJSFFwS1NBNklDaDBhR2x6TG5nZ0t6MGdaUzU0TENCMGFHbHpMbmtnS3owZ1pTNTVMQ0IwYUdsekxub2dLejBnWlM1NkxDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHRmtaRk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXJQU0JsTENCMGFHbHpMbmtnS3owZ1pTd2dkR2hwY3k1NklDczlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUNzZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0t5QjBMbmtzSUhSb2FYTXVlaUE5SUdVdWVpQXJJSFF1ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGa1pGTmpZV3hsWkZabFkzUnZjaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBclBTQmxMbmdnS2lCMExDQjBhR2x6TG5rZ0t6MGdaUzU1SUNvZ2RDd2dkR2hwY3k1NklDczlJR1V1ZWlBcUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0lvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ0U5UFNCMmIybGtJREFnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJek9pQXVjM1ZpS0NrZ2JtOTNJRzl1YkhrZ1lXTmpaWEIwY3lCdmJtVWdZWEpuZFcxbGJuUXVJRlZ6WlNBdWMzVmlWbVZqZEc5eWN5Z2dZU3dnWWlBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWMzVmlWbVZqZEc5eWN5aGxMQ0IwS1NrZ09pQW9kR2hwY3k1NElDMDlJR1V1ZUN3Z2RHaHBjeTU1SUMwOUlHVXVlU3dnZEdocGN5NTZJQzA5SUdVdWVpd2dkR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnpkV0pUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dMVDBnWlN3Z2RHaHBjeTU1SUMwOUlHVXNJSFJvYVhNdWVpQXRQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNWaVZtVmpkRzl5Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1V1ZUNBdElIUXVlQ3dnZEdocGN5NTVJRDBnWlM1NUlDMGdkQzU1TENCMGFHbHpMbm9nUFNCbExub2dMU0IwTG5vc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlIWnZhV1FnTUNBL0lDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqTTZJQzV0ZFd4MGFYQnNlU2dwSUc1dmR5QnZibXg1SUdGalkyVndkSE1nYjI1bElHRnlaM1Z0Wlc1MExpQlZjMlVnTG0xMWJIUnBjR3g1Vm1WamRHOXljeWdnWVN3Z1lpQXBJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXViWFZzZEdsd2JIbFdaV04wYjNKektHVXNJSFFwS1NBNklDaDBhR2x6TG5nZ0tqMGdaUzU0TENCMGFHbHpMbmtnS2owZ1pTNTVMQ0IwYUdsekxub2dLajBnWlM1NkxDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NVUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNvOUlHVXNJSFJvYVhNdWVTQXFQU0JsTENCMGFHbHpMbm9nS2owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NVZtVmpkRzl5Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1V1ZUNBcUlIUXVlQ3dnZEdocGN5NTVJRDBnWlM1NUlDb2dkQzU1TENCMGFHbHpMbm9nUFNCbExub2dLaUIwTG5vc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVVYxYkdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0FtSmlCbExtbHpSWFZzWlhJZ2ZId2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG1Gd2NHeDVSWFZzWlhJb0tTQnViM2NnWlhod1pXTjBjeUJoYmlCRmRXeGxjaUJ5YjNSaGRHbHZiaUJ5WVhSb1pYSWdkR2hoYmlCaElGWmxZM1J2Y2pNZ1lXNWtJRzl5WkdWeUxpSXBMQ0IwYUdsekxtRndjR3g1VVhWaGRHVnlibWx2YmloNWJDNXpaWFJHY205dFJYVnNaWElvWlNrcE93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsQmVHbHpRVzVuYkdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRndjR3g1VVhWaGRHVnlibWx2YmloNWJDNXpaWFJHY205dFFYaHBjMEZ1WjJ4bEtHVXNJSFFwS1RzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDRNeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbmdzSUc0Z1BTQjBhR2x6TG5rc0lHa2dQU0IwYUdsekxub3NJSElnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCeVd6QmRJQ29nZENBcklISmJNMTBnS2lCdUlDc2djbHMyWFNBcUlHa3NJSFJvYVhNdWVTQTlJSEpiTVYwZ0tpQjBJQ3NnY2xzMFhTQXFJRzRnS3lCeVd6ZGRJQ29nYVN3Z2RHaHBjeTU2SUQwZ2Nsc3lYU0FxSUhRZ0t5QnlXelZkSUNvZ2JpQXJJSEpiT0YwZ0tpQnBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsT2IzSnRZV3hOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRndjR3g1VFdGMGNtbDRNeWhsS1M1dWIzSnRZV3hwZW1Vb0tUc0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TkNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCMGFHbHpMbm9zSUhJZ1BTQmxMbVZzWlcxbGJuUnpMQ0J2SUQwZ01TQXZJQ2h5V3pOZElDb2dkQ0FySUhKYk4xMGdLaUJ1SUNzZ2Nsc3hNVjBnS2lCcElDc2djbHN4TlYwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNBb2Nsc3dYU0FxSUhRZ0t5QnlXelJkSUNvZ2JpQXJJSEpiT0YwZ0tpQnBJQ3NnY2xzeE1sMHBJQ29nYnl3Z2RHaHBjeTU1SUQwZ0tISmJNVjBnS2lCMElDc2djbHMxWFNBcUlHNGdLeUJ5V3psZElDb2dhU0FySUhKYk1UTmRLU0FxSUc4c0lIUm9hWE11ZWlBOUlDaHlXekpkSUNvZ2RDQXJJSEpiTmwwZ0tpQnVJQ3NnY2xzeE1GMGdLaUJwSUNzZ2Nsc3hORjBwSUNvZ2J5d2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VVhWaGRHVnlibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCMGFHbHpMbm9zSUhJZ1BTQmxMbmdzSUc4Z1BTQmxMbmtzSUdFZ1BTQmxMbm9zSUd3Z1BTQmxMbmNzSUdNZ1BTQnNJQ29nZENBcklHOGdLaUJwSUMwZ1lTQXFJRzRzSUdnZ1BTQnNJQ29nYmlBcklHRWdLaUIwSUMwZ2NpQXFJR2tzSUhVZ1BTQnNJQ29nYVNBcklISWdLaUJ1SUMwZ2J5QXFJSFFzSUdRZ1BTQXRjaUFxSUhRZ0xTQnZJQ29nYmlBdElHRWdLaUJwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JqSUNvZ2JDQXJJR1FnS2lBdGNpQXJJR2dnS2lBdFlTQXRJSFVnS2lBdGJ5d2dkR2hwY3k1NUlEMGdhQ0FxSUd3Z0t5QmtJQ29nTFc4Z0t5QjFJQ29nTFhJZ0xTQmpJQ29nTFdFc0lIUm9hWE11ZWlBOUlIVWdLaUJzSUNzZ1pDQXFJQzFoSUNzZ1l5QXFJQzF2SUMwZ2FDQXFJQzF5TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY0hKdmFtVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0dVdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtTNWhjSEJzZVUxaGRISnBlRFFvWlM1d2NtOXFaV04wYVc5dVRXRjBjbWw0S1RzS0lDQWdJSDBLSUNBZ0lIVnVjSEp2YW1WamRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLR1V1Y0hKdmFtVmpkR2x2YmsxaGRISnBlRWx1ZG1WeWMyVXBMbUZ3Y0d4NVRXRjBjbWw0TkNobExtMWhkSEpwZUZkdmNteGtLVHNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCMGFHbHpMbm9zSUhJZ1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnlXekJkSUNvZ2RDQXJJSEpiTkYwZ0tpQnVJQ3NnY2xzNFhTQXFJR2tzSUhSb2FYTXVlU0E5SUhKYk1WMGdLaUIwSUNzZ2NsczFYU0FxSUc0Z0t5QnlXemxkSUNvZ2FTd2dkR2hwY3k1NklEMGdjbHN5WFNBcUlIUWdLeUJ5V3paZElDb2diaUFySUhKYk1UQmRJQ29nYVN3Z2RHaHBjeTV1YjNKdFlXeHBlbVVvS1RzS0lDQWdJSDBLSUNBZ0lHUnBkbWxrWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBdlBTQmxMbmdzSUhSb2FYTXVlU0F2UFNCbExua3NJSFJvYVhNdWVpQXZQU0JsTG5vc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2FYWnBaR1ZUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVUyTmhiR0Z5S0RFZ0x5QmxLVHNLSUNBZ0lIMEtJQ0FnSUcxcGJpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXbHVLSFJvYVhNdWVDd2daUzU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV0YVc0b2RHaHBjeTU1TENCbExua3BMQ0IwYUdsekxub2dQU0JOWVhSb0xtMXBiaWgwYUdsekxub3NJR1V1ZWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlYZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMWhlQ2gwYUdsekxuZ3NJR1V1ZUNrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldGNEtIUm9hWE11ZVN3Z1pTNTVLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTZMQ0JsTG5vcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xaGVDaGxMbmdzSUUxaGRHZ3ViV2x1S0hRdWVDd2dkR2hwY3k1NEtTa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXRjRLR1V1ZVN3Z1RXRjBhQzV0YVc0b2RDNTVMQ0IwYUdsekxua3BLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRZWGdvWlM1NkxDQk5ZWFJvTG0xcGJpaDBMbm9zSUhSb2FYTXVlaWtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQlRZMkZzWVhJb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQjBhR2x6TG5ncEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1dFlYZ29aU3dnVFdGMGFDNXRhVzRvZEN3Z2RHaHBjeTU1S1Nrc0lIUm9hWE11ZWlBOUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhSb2FYTXVlaWtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQk1aVzVuZEdnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhacFpHVlRZMkZzWVhJb2JpQjhmQ0F4S1M1dGRXeDBhWEJzZVZOallXeGhjaWhOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQnVLU2twT3dvZ0lDQWdmUW9nSUNBZ1pteHZiM0lvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpaV2xzS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbU5sYVd3b2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1WTJWcGJDaDBhR2x6TG5vcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG5KdmRXNWtLSFJvYVhNdWVpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1Z1WkZSdldtVnlieWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnZEdocGN5NTRJRHdnTUNBL0lFMWhkR2d1WTJWcGJDaDBhR2x6TG5ncElEb2dUV0YwYUM1bWJHOXZjaWgwYUdsekxuZ3BMQ0IwYUdsekxua2dQU0IwYUdsekxua2dQQ0F3SUQ4Z1RXRjBhQzVqWldsc0tIUm9hWE11ZVNrZ09pQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVTa3NJSFJvYVhNdWVpQTlJSFJvYVhNdWVpQThJREFnUHlCTllYUm9MbU5sYVd3b2RHaHBjeTU2S1NBNklFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHNWxaMkYwWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ0xYUm9hWE11ZUN3Z2RHaHBjeTU1SUQwZ0xYUm9hWE11ZVN3Z2RHaHBjeTU2SUQwZ0xYUm9hWE11ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdSdmRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXFJR1V1ZUNBcklIUm9hWE11ZVNBcUlHVXVlU0FySUhSb2FYTXVlaUFxSUdVdWVqc0tJQ0FnSUgwS0lDQWdJR3hsYm1kMGFGTnhLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLaUIwYUdsekxuZ2dLeUIwYUdsekxua2dLaUIwYUdsekxua2dLeUIwYUdsekxub2dLaUIwYUdsekxubzdDaUFnSUNCOUNpQWdJQ0JzWlc1bmRHZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWMzRnlkQ2gwYUdsekxuZ2dLaUIwYUdsekxuZ2dLeUIwYUdsekxua2dLaUIwYUdsekxua2dLeUIwYUdsekxub2dLaUIwYUdsekxub3BPd29nSUNBZ2ZRb2dJQ0FnYldGdWFHRjBkR0Z1VEdWdVozUm9LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRmljeWgwYUdsekxuZ3BJQ3NnVFdGMGFDNWhZbk1vZEdocGN5NTVLU0FySUUxaGRHZ3VZV0p6S0hSb2FYTXVlaWs3Q2lBZ0lDQjlDaUFnSUNCdWIzSnRZV3hwZW1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdsMmFXUmxVMk5oYkdGeUtIUm9hWE11YkdWdVozUm9LQ2tnZkh3Z01TazdDaUFnSUNCOUNpQWdJQ0J6WlhSTVpXNW5kR2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTV2Y20xaGJHbDZaU2dwTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1VwT3dvZ0lDQWdmUW9nSUNBZ2JHVnljQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBclBTQW9aUzU0SUMwZ2RHaHBjeTU0S1NBcUlIUXNJSFJvYVhNdWVTQXJQU0FvWlM1NUlDMGdkR2hwY3k1NUtTQXFJSFFzSUhSb2FYTXVlaUFyUFNBb1pTNTZJQzBnZEdocGN5NTZLU0FxSUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCc1pYSndWbVZqZEc5eWN5aGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXVlQ0FySUNoMExuZ2dMU0JsTG5ncElDb2diaXdnZEdocGN5NTVJRDBnWlM1NUlDc2dLSFF1ZVNBdElHVXVlU2tnS2lCdUxDQjBhR2x6TG5vZ1BTQmxMbm9nS3lBb2RDNTZJQzBnWlM1NktTQXFJRzRzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqY205emN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ0lUMDlJSFp2YVdRZ01DQS9JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjak02SUM1amNtOXpjeWdwSUc1dmR5QnZibXg1SUdGalkyVndkSE1nYjI1bElHRnlaM1Z0Wlc1MExpQlZjMlVnTG1OeWIzTnpWbVZqZEc5eWN5Z2dZU3dnWWlBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdVkzSnZjM05XWldOMGIzSnpLR1VzSUhRcEtTQTZJSFJvYVhNdVkzSnZjM05XWldOMGIzSnpLSFJvYVhNc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnWTNKdmMzTldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdWVDd2dhU0E5SUdVdWVTd2djaUE5SUdVdWVpd2dieUE5SUhRdWVDd2dZU0E5SUhRdWVTd2diQ0E5SUhRdWVqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ2FTQXFJR3dnTFNCeUlDb2dZU3dnZEdocGN5NTVJRDBnY2lBcUlHOGdMU0J1SUNvZ2JDd2dkR2hwY3k1NklEMGdiaUFxSUdFZ0xTQnBJQ29nYnl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhCeWIycGxZM1JQYmxabFkzUnZjaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExteGxibWQwYUZOeEtDazdDaUFnSUNBZ0lDQWdhV1lnS0hRZ1BUMDlJREFwSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d3TENBd0xDQXdLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1Wkc5MEtIUm9hWE1wSUM4Z2REc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjNCNUtHVXBMbTExYkhScGNHeDVVMk5oYkdGeUtHNHBPd29nSUNBZ2ZRb2dJQ0FnY0hKdmFtVmpkRTl1VUd4aGJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOYnk1amIzQjVLSFJvYVhNcExuQnliMnBsWTNSUGJsWmxZM1J2Y2lobEtTd2dkR2hwY3k1emRXSW9UVzhwT3dvZ0lDQWdmUW9nSUNBZ2NtVm1iR1ZqZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzNWaUtFMXZMbU52Y0hrb1pTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb01pQXFJSFJvYVhNdVpHOTBLR1VwS1NrN0NpQWdJQ0I5Q2lBZ0lDQmhibWRzWlZSdktHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndWMzRnlkQ2gwYUdsekxteGxibWQwYUZOeEtDa2dLaUJsTG14bGJtZDBhRk54S0NrcE93b2dJQ0FnSUNBZ0lHbG1JQ2gwSUQwOVBTQXdLU0J5WlhSMWNtNGdUV0YwYUM1UVNTQXZJREk3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtUnZkQ2hsS1NBdklIUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1WVdOdmN5aHRkQ2h1TENBdE1Td2dNU2twT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVWJ5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWMzRnlkQ2gwYUdsekxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tHVXBLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVkc5VGNYVmhjbVZrS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZUNBdElHVXVlQ3dnYmlBOUlIUm9hWE11ZVNBdElHVXVlU3dnYVNBOUlIUm9hWE11ZWlBdElHVXVlanNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FxSUhRZ0t5QnVJQ29nYmlBcklHa2dLaUJwT3dvZ0lDQWdmUW9nSUNBZ2JXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndVlXSnpLSFJvYVhNdWVDQXRJR1V1ZUNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5rZ0xTQmxMbmtwSUNzZ1RXRjBhQzVoWW5Nb2RHaHBjeTU2SUMwZ1pTNTZLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFUY0dobGNtbGpZV3dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEVaeWIyMVRjR2hsY21sallXeERiMjl5WkhNb1pTNXlZV1JwZFhNc0lHVXVjR2hwTENCbExuUm9aWFJoS1RzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxVGNHaGxjbWxqWVd4RGIyOXlaSE1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnVFdGMGFDNXphVzRvZENrZ0tpQmxPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnBJQ29nVFdGMGFDNXphVzRvYmlrc0lIUm9hWE11ZVNBOUlFMWhkR2d1WTI5ektIUXBJQ29nWlN3Z2RHaHBjeTU2SUQwZ2FTQXFJRTFoZEdndVkyOXpLRzRwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVU41YkdsdVpISnBZMkZzS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhSR2NtOXRRM2xzYVc1a2NtbGpZV3hEYjI5eVpITW9aUzV5WVdScGRYTXNJR1V1ZEdobGRHRXNJR1V1ZVNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEzbHNhVzVrY21sallXeERiMjl5WkhNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbElDb2dUV0YwYUM1emFXNG9kQ2tzSUhSb2FYTXVlU0E5SUc0c0lIUm9hWE11ZWlBOUlHVWdLaUJOWVhSb0xtTnZjeWgwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0IwV3pFeVhTd2dkR2hwY3k1NUlEMGdkRnN4TTEwc0lIUm9hWE11ZWlBOUlIUmJNVFJkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVTFoZEhKcGVGTmpZV3hsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXdLUzVzWlc1bmRHZ29LU3dnYmlBOUlIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXhLUzVzWlc1bmRHZ29LU3dnYVNBOUlIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXlLUzVzWlc1bmRHZ29LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdkQ3dnZEdocGN5NTVJRDBnYml3Z2RHaHBjeTU2SUQwZ2FTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxTllYUnlhWGhEYjJ4MWJXNG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVp5YjIxQmNuSmhlU2hsTG1Wc1pXMWxiblJ6TENCMElDb2dOQ2s3Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VFdGMGNtbDRNME52YkhWdGJpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabkp2YlVGeWNtRjVLR1V1Wld4bGJXVnVkSE1zSUhRZ0tpQXpLVHNLSUNBZ0lIMEtJQ0FnSUdWeGRXRnNjeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWVDQTlQVDBnZEdocGN5NTRJQ1ltSUdVdWVTQTlQVDBnZEdocGN5NTVJQ1ltSUdVdWVpQTlQVDBnZEdocGN5NTZPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVRnljbUY1S0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdWYmRGMHNJSFJvYVhNdWVTQTlJR1ZiZENBcklERmRMQ0IwYUdsekxub2dQU0JsVzNRZ0t5QXlYU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2UVhKeVlYa29aU0E5SUZ0ZExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFczUmRJRDBnZEdocGN5NTRMQ0JsVzNRZ0t5QXhYU0E5SUhSb2FYTXVlU3dnWlZ0MElDc2dNbDBnUFNCMGFHbHpMbm9zSUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2diMlptYzJWMElHaGhjeUJpWldWdUlISmxiVzkyWldRZ1puSnZiU0F1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNncExpSXBMQ0IwYUdsekxuZ2dQU0JsTG1kbGRGZ29kQ2tzSUhSb2FYTXVlU0E5SUdVdVoyVjBXU2gwS1N3Z2RHaHBjeTU2SUQwZ1pTNW5aWFJhS0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtRnVaRzl0S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY21GdVpHOXRSR2x5WldOMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnS0UxaGRHZ3VjbUZ1Wkc5dEtDa2dMU0F1TlNrZ0tpQXlMQ0IwSUQwZ1RXRjBhQzV5WVc1a2IyMG9LU0FxSUUxaGRHZ3VVRWtnS2lBeUxDQnVJRDBnVFdGMGFDNXpjWEowS0RFZ0xTQmxJQ29xSURJcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCdUlDb2dUV0YwYUM1amIzTW9kQ2tzSUhSb2FYTXVlU0E5SUc0Z0tpQk5ZWFJvTG5OcGJpaDBLU3dnZEdocGN5NTZJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUNwYlUzbHRZbTlzTG1sMFpYSmhkRzl5WFNncElIc0tJQ0FnSUNBZ0lDQjVhV1ZzWkNCMGFHbHpMbmdzSUhscFpXeGtJSFJvYVhNdWVTd2dlV2xsYkdRZ2RHaHBjeTU2T3dvZ0lDQWdmUXA5T3dwTkxuQnliM1J2ZEhsd1pTNXBjMVpsWTNSdmNqTWdQU0FoTURzS2RtRnlJRTF2SUQwZ2JtVjNJRTBzSUhsc0lEMGdibVYzSUdkMExDQk1kQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dUU2d4SUM4Z01Dd2dNU0F2SURBc0lERWdMeUF3S1N3Z2RDQTlJRzVsZHlCTktDMHhJQzhnTUN3Z0xURWdMeUF3TENBdE1TQXZJREFwS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTFwYmlBOUlHVXNJSFJvYVhNdWJXRjRJRDBnZERzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtTnZjSGtvWlNrc0lIUm9hWE11YldGNExtTnZjSGtvZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UVhKeVlYa29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnTVNBdklEQXNJRzRnUFNBeElDOGdNQ3dnYVNBOUlERWdMeUF3TENCeUlEMGdMVEVnTHlBd0xDQnZJRDBnTFRFZ0x5QXdMQ0JoSUQwZ0xURWdMeUF3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlEQXNJR01nUFNCbExteGxibWQwYURzZ2JDQThJR003SUd3Z0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ1pWdHNYU3dnZFNBOUlHVmJiQ0FySURGZExDQmtJRDBnWlZ0c0lDc2dNbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZ2dQQ0IwSUNZbUlDaDBJRDBnYUNrc0lIVWdQQ0J1SUNZbUlDaHVJRDBnZFNrc0lHUWdQQ0JwSUNZbUlDaHBJRDBnWkNrc0lHZ2dQaUJ5SUNZbUlDaHlJRDBnYUNrc0lIVWdQaUJ2SUNZbUlDaHZJRDBnZFNrc0lHUWdQaUJoSUNZbUlDaGhJRDBnWkNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1elpYUW9kQ3dnYml3Z2FTa3NJSFJvYVhNdWJXRjRMbk5sZENoeUxDQnZMQ0JoS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnTVNBdklEQXNJRzRnUFNBeElDOGdNQ3dnYVNBOUlERWdMeUF3TENCeUlEMGdMVEVnTHlBd0xDQnZJRDBnTFRFZ0x5QXdMQ0JoSUQwZ0xURWdMeUF3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlEQXNJR01nUFNCbExtTnZkVzUwT3lCc0lEd2dZenNnYkNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JsTG1kbGRGZ29iQ2tzSUhVZ1BTQmxMbWRsZEZrb2JDa3NJR1FnUFNCbExtZGxkRm9vYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJR2dnUENCMElDWW1JQ2gwSUQwZ2FDa3NJSFVnUENCdUlDWW1JQ2h1SUQwZ2RTa3NJR1FnUENCcElDWW1JQ2hwSUQwZ1pDa3NJR2dnUGlCeUlDWW1JQ2h5SUQwZ2FDa3NJSFVnUGlCdklDWW1JQ2h2SUQwZ2RTa3NJR1FnUGlCaElDWW1JQ2hoSUQwZ1pDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNXpaWFFvZEN3Z2Jpd2dhU2tzSUhSb2FYTXViV0Y0TG5ObGRDaHlMQ0J2TENCaEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxUWIybHVkSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGclpVVnRjSFI1S0NrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWFJvYVhNdVpYaHdZVzVrUW5sUWIybHVkQ2hsVzNSZEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFEWlc1MFpYSkJibVJUYVhwbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUVwcExtTnZjSGtvZENrdWJYVnNkR2x3YkhsVFkyRnNZWElvTGpVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1amIzQjVLR1VwTG5OMVlpaHVLU3dnZEdocGN5NXRZWGd1WTI5d2VTaGxLUzVoWkdRb2Jpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFQySnFaV04wS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0WVd0bFJXMXdkSGtvS1N3Z2RHaHBjeTVsZUhCaGJtUkNlVTlpYW1WamRDaGxLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVZMjl3ZVNobExtMXBiaWtzSUhSb2FYTXViV0Y0TG1OdmNIa29aUzV0WVhncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVVZ0Y0hSNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNTRJRDBnZEdocGN5NXRhVzR1ZVNBOUlIUm9hWE11YldsdUxub2dQU0F4SUM4Z01Dd2dkR2hwY3k1dFlYZ3VlQ0E5SUhSb2FYTXViV0Y0TG5rZ1BTQjBhR2x6TG0xaGVDNTZJRDBnTFRFZ0x5QXdMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdhWE5GYlhCMGVTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dFlYZ3VlQ0E4SUhSb2FYTXViV2x1TG5nZ2ZId2dkR2hwY3k1dFlYZ3VlU0E4SUhSb2FYTXViV2x1TG5rZ2ZId2dkR2hwY3k1dFlYZ3VlaUE4SUhSb2FYTXViV2x1TG5vN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEWlc1MFpYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHpSVzF3ZEhrb0tTQS9JR1V1YzJWMEtEQXNJREFzSURBcElEb2daUzVoWkdSV1pXTjBiM0p6S0hSb2FYTXViV2x1TENCMGFHbHpMbTFoZUNrdWJYVnNkR2x3YkhsVFkyRnNZWElvTGpVcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVTJsNlpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTkZiWEIwZVNncElEOGdaUzV6WlhRb01Dd2dNQ3dnTUNrZ09pQmxMbk4xWWxabFkzUnZjbk1vZEdocGN5NXRZWGdzSUhSb2FYTXViV2x1S1RzS0lDQWdJSDBLSUNBZ0lHVjRjR0Z1WkVKNVVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1dGFXNG9aU2tzSUhSb2FYTXViV0Y0TG0xaGVDaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Y0Y0dGdVpFSjVWbVZqZEc5eUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVjM1ZpS0dVcExDQjBhR2x6TG0xaGVDNWhaR1FvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGVIQmhibVJDZVZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1Ga1pGTmpZV3hoY2lndFpTa3NJSFJvYVhNdWJXRjRMbUZrWkZOallXeGhjaWhsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdWNGNHRnVaRUo1VDJKcVpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCbExuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXhMQ0FoTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lIUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2RDNWliM1Z1WkdsdVowSnZlQ0E5UFQwZ2JuVnNiQ0FtSmlCMExtTnZiWEIxZEdWQ2IzVnVaR2x1WjBKdmVDZ3BMQ0JpYnk1amIzQjVLSFF1WW05MWJtUnBibWRDYjNncExDQmlieTVoY0hCc2VVMWhkSEpwZURRb1pTNXRZWFJ5YVhoWGIzSnNaQ2tzSUhSb2FYTXVkVzVwYjI0b1ltOHBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1WTJocGJHUnlaVzQ3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUc0dWJHVnVaM1JvT3lCcElEd2djanNnYVNzcktYUm9hWE11Wlhod1lXNWtRbmxQWW1wbFkzUW9ibHRwWFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjI1MFlXbHVjMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJU2hsTG5nZ1BDQjBhR2x6TG0xcGJpNTRJSHg4SUdVdWVDQStJSFJvYVhNdWJXRjRMbmdnZkh3Z1pTNTVJRHdnZEdocGN5NXRhVzR1ZVNCOGZDQmxMbmtnUGlCMGFHbHpMbTFoZUM1NUlIeDhJR1V1ZWlBOElIUm9hWE11YldsdUxub2dmSHdnWlM1NklENGdkR2hwY3k1dFlYZ3VlaWs3Q2lBZ0lDQjlDaUFnSUNCamIyNTBZV2x1YzBKdmVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbmdnUEQwZ1pTNXRhVzR1ZUNBbUppQmxMbTFoZUM1NElEdzlJSFJvYVhNdWJXRjRMbmdnSmlZZ2RHaHBjeTV0YVc0dWVTQThQU0JsTG0xcGJpNTVJQ1ltSUdVdWJXRjRMbmtnUEQwZ2RHaHBjeTV0WVhndWVTQW1KaUIwYUdsekxtMXBiaTU2SUR3OUlHVXViV2x1TG5vZ0ppWWdaUzV0WVhndWVpQThQU0IwYUdsekxtMWhlQzU2T3dvZ0lDQWdmUW9nSUNBZ1oyVjBVR0Z5WVcxbGRHVnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNXpaWFFvS0dVdWVDQXRJSFJvYVhNdWJXbHVMbmdwSUM4Z0tIUm9hWE11YldGNExuZ2dMU0IwYUdsekxtMXBiaTU0S1N3Z0tHVXVlU0F0SUhSb2FYTXViV2x1TG5rcElDOGdLSFJvYVhNdWJXRjRMbmtnTFNCMGFHbHpMbTFwYmk1NUtTd2dLR1V1ZWlBdElIUm9hWE11YldsdUxub3BJQzhnS0hSb2FYTXViV0Y0TG5vZ0xTQjBhR2x6TG0xcGJpNTZLU2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSVNobExtMWhlQzU0SUR3Z2RHaHBjeTV0YVc0dWVDQjhmQ0JsTG0xcGJpNTRJRDRnZEdocGN5NXRZWGd1ZUNCOGZDQmxMbTFoZUM1NUlEd2dkR2hwY3k1dGFXNHVlU0I4ZkNCbExtMXBiaTU1SUQ0Z2RHaHBjeTV0WVhndWVTQjhmQ0JsTG0xaGVDNTZJRHdnZEdocGN5NXRhVzR1ZWlCOGZDQmxMbTFwYmk1NklENGdkR2hwY3k1dFlYZ3VlaWs3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelUzQm9aWEpsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYkdGdGNGQnZhVzUwS0dVdVkyVnVkR1Z5TENCS2FTa3NJRXBwTG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0dVdVkyVnVkR1Z5S1NBOFBTQmxMbkpoWkdsMWN5QXFJR1V1Y21Ga2FYVnpPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzFCc1lXNWxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ3dnYmpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dWIzSnRZV3d1ZUNBK0lEQWdQeUFvZENBOUlHVXVibTl5YldGc0xuZ2dLaUIwYUdsekxtMXBiaTU0TENCdUlEMGdaUzV1YjNKdFlXd3VlQ0FxSUhSb2FYTXViV0Y0TG5ncElEb2dLSFFnUFNCbExtNXZjbTFoYkM1NElDb2dkR2hwY3k1dFlYZ3VlQ3dnYmlBOUlHVXVibTl5YldGc0xuZ2dLaUIwYUdsekxtMXBiaTU0S1N3Z1pTNXViM0p0WVd3dWVTQStJREFnUHlBb2RDQXJQU0JsTG01dmNtMWhiQzU1SUNvZ2RHaHBjeTV0YVc0dWVTd2diaUFyUFNCbExtNXZjbTFoYkM1NUlDb2dkR2hwY3k1dFlYZ3VlU2tnT2lBb2RDQXJQU0JsTG01dmNtMWhiQzU1SUNvZ2RHaHBjeTV0WVhndWVTd2diaUFyUFNCbExtNXZjbTFoYkM1NUlDb2dkR2hwY3k1dGFXNHVlU2tzSUdVdWJtOXliV0ZzTG5vZ1BpQXdJRDhnS0hRZ0t6MGdaUzV1YjNKdFlXd3VlaUFxSUhSb2FYTXViV2x1TG5vc0lHNGdLejBnWlM1dWIzSnRZV3d1ZWlBcUlIUm9hWE11YldGNExub3BJRG9nS0hRZ0t6MGdaUzV1YjNKdFlXd3VlaUFxSUhSb2FYTXViV0Y0TG5vc0lHNGdLejBnWlM1dWIzSnRZV3d1ZWlBcUlIUm9hWE11YldsdUxub3BMQ0IwSUR3OUlDMWxMbU52Ym5OMFlXNTBJQ1ltSUc0Z1BqMGdMV1V1WTI5dWMzUmhiblE3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelZISnBZVzVuYkdVb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbWx6Ulcxd2RIa29LU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdJQ0FnSUhSb2FYTXVaMlYwUTJWdWRHVnlLRmxwS1N3Z1YzSXVjM1ZpVm1WamRHOXljeWgwYUdsekxtMWhlQ3dnV1drcExDQnVhUzV6ZFdKV1pXTjBiM0p6S0dVdVlTd2dXV2twTENCcGFTNXpkV0pXWldOMGIzSnpLR1V1WWl3Z1dXa3BMQ0J5YVM1emRXSldaV04wYjNKektHVXVZeXdnV1drcExDQjFiaTV6ZFdKV1pXTjBiM0p6S0dscExDQnVhU2tzSUdSdUxuTjFZbFpsWTNSdmNuTW9jbWtzSUdscEtTd2dVRzR1YzNWaVZtVmpkRzl5Y3lodWFTd2djbWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdGRXNHVlaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RXNHVlU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFdSdUxub3NDaUFnSUNBZ0lDQWdJQ0FnSUdSdUxua3NDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzFRYmk1NkxBb2dJQ0FnSUNBZ0lDQWdJQ0JRYmk1NUxBb2dJQ0FnSUNBZ0lDQWdJQ0IxYmk1NkxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRkVzR1ZUN3S0lDQWdJQ0FnSUNBZ0lDQWdaRzR1ZWl3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXUnVMbmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lGQnVMbm9zQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMxUWJpNTRMQW9nSUNBZ0lDQWdJQ0FnSUNBdGRXNHVlU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RXNHVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFdSdUxua3NDaUFnSUNBZ0lDQWdJQ0FnSUdSdUxuZ3NDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzFRYmk1NUxBb2dJQ0FnSUNBZ0lDQWdJQ0JRYmk1NExBb2dJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSVhkdktIUXNJRzVwTENCcGFTd2djbWtzSUZkeUtTQjhmQ0FvZENBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Rb2dJQ0FnSUNBZ0lGMHNJQ0YzYnloMExDQnVhU3dnYVdrc0lISnBMQ0JYY2lrcElEOGdJVEVnT2lBb2NYSXVZM0p2YzNOV1pXTjBiM0p6S0hWdUxDQmtiaWtzSUhRZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUhGeUxuZ3NDaUFnSUNBZ0lDQWdJQ0FnSUhGeUxua3NDaUFnSUNBZ0lDQWdJQ0FnSUhGeUxub0tJQ0FnSUNBZ0lDQmRMQ0IzYnloMExDQnVhU3dnYVdrc0lISnBMQ0JYY2lrcE93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhCUWIybHVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVZMjl3ZVNobEtTNWpiR0Z0Y0NoMGFHbHpMbTFwYml3Z2RHaHBjeTV0WVhncE93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdTbWt1WTI5d2VTaGxLUzVqYkdGdGNDaDBhR2x6TG0xcGJpd2dkR2hwY3k1dFlYZ3BMbk4xWWlobEtTNXNaVzVuZEdnb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZEVKdmRXNWthVzVuVTNCb1pYSmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJEWlc1MFpYSW9aUzVqWlc1MFpYSXBMQ0JsTG5KaFpHbDFjeUE5SUhSb2FYTXVaMlYwVTJsNlpTaEthU2t1YkdWdVozUm9LQ2tnS2lBdU5Td2daVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtMWhlQ2hsTG0xcGJpa3NJSFJvYVhNdWJXRjRMbTFwYmlobExtMWhlQ2tzSUhSb2FYTXVhWE5GYlhCMGVTZ3BJQ1ltSUhSb2FYTXViV0ZyWlVWdGNIUjVLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IxYm1sdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbTFwYmlobExtMXBiaWtzSUhSb2FYTXViV0Y0TG0xaGVDaGxMbTFoZUNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVTFoZEhKcGVEUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHpSVzF3ZEhrb0tTQS9JSFJvYVhNZ09pQW9KSFJiTUYwdWMyVjBLSFJvYVhNdWJXbHVMbmdzSUhSb2FYTXViV2x1TG5rc0lIUm9hWE11YldsdUxub3BMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dKSFJiTVYwdWMyVjBLSFJvYVhNdWJXbHVMbmdzSUhSb2FYTXViV2x1TG5rc0lIUm9hWE11YldGNExub3BMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dKSFJiTWwwdWMyVjBLSFJvYVhNdWJXbHVMbmdzSUhSb2FYTXViV0Y0TG5rc0lIUm9hWE11YldsdUxub3BMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dKSFJiTTEwdWMyVjBLSFJvYVhNdWJXbHVMbmdzSUhSb2FYTXViV0Y0TG5rc0lIUm9hWE11YldGNExub3BMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dKSFJiTkYwdWMyVjBLSFJvYVhNdWJXRjRMbmdzSUhSb2FYTXViV2x1TG5rc0lIUm9hWE11YldsdUxub3BMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dKSFJiTlYwdWMyVjBLSFJvYVhNdWJXRjRMbmdzSUhSb2FYTXViV2x1TG5rc0lIUm9hWE11YldGNExub3BMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dKSFJiTmwwdWMyVjBLSFJvYVhNdWJXRjRMbmdzSUhSb2FYTXViV0Y0TG5rc0lIUm9hWE11YldsdUxub3BMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dKSFJiTjEwdWMyVjBLSFJvYVhNdWJXRjRMbmdzSUhSb2FYTXViV0Y0TG5rc0lIUm9hWE11YldGNExub3BMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dkR2hwY3k1elpYUkdjbTl0VUc5cGJuUnpLQ1IwS1N3Z2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCMGNtRnVjMnhoZEdVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNWhaR1FvWlNrc0lIUm9hWE11YldGNExtRmtaQ2hsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdWeGRXRnNjeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWJXbHVMbVZ4ZFdGc2N5aDBhR2x6TG0xcGJpa2dKaVlnWlM1dFlYZ3VaWEYxWVd4ektIUm9hWE11YldGNEtUc0tJQ0FnSUgwS2ZUc0tUSFF1Y0hKdmRHOTBlWEJsTG1selFtOTRNeUE5SUNFd093cDJZWElnSkhRZ1BTQmJDaUFnSUNCdVpYY2dUU3dLSUNBZ0lHNWxkeUJOTEFvZ0lDQWdibVYzSUUwc0NpQWdJQ0J1WlhjZ1RTd0tJQ0FnSUc1bGR5Qk5MQW9nSUNBZ2JtVjNJRTBzQ2lBZ0lDQnVaWGNnVFN3S0lDQWdJRzVsZHlCTkNsMHNJRXBwSUQwZ2JtVjNJRTBzSUdKdklEMGdibVYzSUV4MExDQnVhU0E5SUc1bGR5Qk5MQ0JwYVNBOUlHNWxkeUJOTENCeWFTQTlJRzVsZHlCTkxDQjFiaUE5SUc1bGR5Qk5MQ0JrYmlBOUlHNWxkeUJOTENCUWJpQTlJRzVsZHlCTkxDQlphU0E5SUc1bGR5Qk5MQ0JYY2lBOUlHNWxkeUJOTENCeGNpQTlJRzVsZHlCTkxDQkpiaUE5SUc1bGR5Qk5Pd3BtZFc1amRHbHZiaUIzYnloekxDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQm1iM0lvYkdWMElISWdQU0F3TENCdklEMGdjeTVzWlc1bmRHZ2dMU0F6T3lCeUlEdzlJRzg3SUhJZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnU1c0dVpuSnZiVUZ5Y21GNUtITXNJSElwT3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnYVM1NElDb2dUV0YwYUM1aFluTW9TVzR1ZUNrZ0t5QnBMbmtnS2lCTllYUm9MbUZpY3loSmJpNTVLU0FySUdrdWVpQXFJRTFoZEdndVlXSnpLRWx1TG5vcExDQnNJRDBnWlM1a2IzUW9TVzRwTENCaklEMGdkQzVrYjNRb1NXNHBMQ0JvSUQwZ2JpNWtiM1FvU1c0cE93b2dJQ0FnSUNBZ0lHbG1JQ2hOWVhSb0xtMWhlQ2d0VFdGMGFDNXRZWGdvYkN3Z1l5d2dhQ2tzSUUxaGRHZ3ViV2x1S0d3c0lHTXNJR2dwS1NBK0lHRXBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUFoTURzS2ZRcDJZWElnWldZZ1BTQnVaWGNnVEhRc0lIWnNJRDBnYm1WM0lFMHNJRmh5SUQwZ2JtVjNJRTBzSUZOdklEMGdibVYzSUUwc0lFRnVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5Qk5MQ0IwSUQwZ0xURXBld29nSUNBZ0lDQWdJSFJvYVhNdVkyVnVkR1Z5SUQwZ1pTd2dkR2hwY3k1eVlXUnBkWE1nUFNCME93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXlZV1JwZFhNZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWQnZhVzUwY3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtTmxiblJsY2pzS0lDQWdJQ0FnSUNCMElDRTlQU0IyYjJsa0lEQWdQeUJ1TG1OdmNIa29kQ2tnT2lCbFppNXpaWFJHY205dFVHOXBiblJ6S0dVcExtZGxkRU5sYm5SbGNpaHVLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUdVdWJHVnVaM1JvT3lCeUlEd2dienNnY2lzcktXa2dQU0JOWVhSb0xtMWhlQ2hwTENCdUxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tHVmJjbDBwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlZV1JwZFhNZ1BTQk5ZWFJvTG5OeGNuUW9hU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1WTI5d2VTaGxMbU5sYm5SbGNpa3NJSFJvYVhNdWNtRmthWFZ6SUQwZ1pTNXlZV1JwZFhNc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCcGMwVnRjSFI1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpoWkdsMWN5QThJREE3Q2lBZ0lDQjlDaUFnSUNCdFlXdGxSVzF3ZEhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJWdWRHVnlMbk5sZENnd0xDQXdMQ0F3S1N3Z2RHaHBjeTV5WVdScGRYTWdQU0F0TVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmJuUmhhVzV6VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0hSb2FYTXVZMlZ1ZEdWeUtTQThQU0IwYUdsekxuSmhaR2wxY3lBcUlIUm9hWE11Y21Ga2FYVnpPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlZVYjFCdmFXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1a2FYTjBZVzVqWlZSdktIUm9hWE11WTJWdWRHVnlLU0F0SUhSb2FYTXVjbUZrYVhWek93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMU53YUdWeVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuSmhaR2wxY3lBcklHVXVjbUZrYVhWek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtTmxiblJsY2k1a2FYTjBZVzVqWlZSdlUzRjFZWEpsWkNoMGFHbHpMbU5sYm5SbGNpa2dQRDBnZENBcUlIUTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVwYm5SbGNuTmxZM1J6VTNCb1pYSmxLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMUJzWVc1bEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFluTW9aUzVrYVhOMFlXNWpaVlJ2VUc5cGJuUW9kR2hwY3k1alpXNTBaWElwS1NBOFBTQjBhR2x6TG5KaFpHbDFjenNLSUNBZ0lIMEtJQ0FnSUdOc1lXMXdVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWpaVzUwWlhJdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVZMjl3ZVNobEtTd2diaUErSUhSb2FYTXVjbUZrYVhWeklDb2dkR2hwY3k1eVlXUnBkWE1nSmlZZ0tIUXVjM1ZpS0hSb2FYTXVZMlZ1ZEdWeUtTNXViM0p0WVd4cGVtVW9LU3dnZEM1dGRXeDBhWEJzZVZOallXeGhjaWgwYUdsekxuSmhaR2wxY3lrdVlXUmtLSFJvYVhNdVkyVnVkR1Z5S1Nrc0lIUTdDaUFnSUNCOUNpQWdJQ0JuWlhSQ2IzVnVaR2x1WjBKdmVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTkZiWEIwZVNncElEOGdLR1V1YldGclpVVnRjSFI1S0Nrc0lHVXBJRG9nS0dVdWMyVjBLSFJvYVhNdVkyVnVkR1Z5TENCMGFHbHpMbU5sYm5SbGNpa3NJR1V1Wlhod1lXNWtRbmxUWTJGc1lYSW9kR2hwY3k1eVlXUnBkWE1wTENCbEtUc0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJWdWRHVnlMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dkR2hwY3k1eVlXUnBkWE1nUFNCMGFHbHpMbkpoWkdsMWN5QXFJR1V1WjJWMFRXRjRVMk5oYkdWUGJrRjRhWE1vS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJWdWRHVnlMbUZrWkNobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVjRjR0Z1WkVKNVVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lGTnZMbk4xWWxabFkzUnZjbk1vWlN3Z2RHaHBjeTVqWlc1MFpYSXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdVMjh1YkdWdVozUm9VM0VvS1RzS0lDQWdJQ0FnSUNCcFppQW9kQ0ErSUhSb2FYTXVjbUZrYVhWeklDb2dkR2hwY3k1eVlXUnBkWE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQk5ZWFJvTG5OeGNuUW9kQ2tzSUdrZ1BTQW9iaUF0SUhSb2FYTXVjbUZrYVhWektTQXFJQzQxT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1ObGJuUmxjaTVoWkdRb1UyOHViWFZzZEdsd2JIbFRZMkZzWVhJb2FTQXZJRzRwS1N3Z2RHaHBjeTV5WVdScGRYTWdLejBnYVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IxYm1sdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyVnVkR1Z5TG1WeGRXRnNjeWhsTG1ObGJuUmxjaWtnUFQwOUlDRXdJRDhnV0hJdWMyVjBLREFzSURBc0lERXBMbTExYkhScGNHeDVVMk5oYkdGeUtHVXVjbUZrYVhWektTQTZJRmh5TG5OMVlsWmxZM1J2Y25Nb1pTNWpaVzUwWlhJc0lIUm9hWE11WTJWdWRHVnlLUzV1YjNKdFlXeHBlbVVvS1M1dGRXeDBhWEJzZVZOallXeGhjaWhsTG5KaFpHbDFjeWtzSUhSb2FYTXVaWGh3WVc1a1FubFFiMmx1ZENoMmJDNWpiM0I1S0dVdVkyVnVkR1Z5S1M1aFpHUW9XSElwS1N3Z2RHaHBjeTVsZUhCaGJtUkNlVkJ2YVc1MEtIWnNMbU52Y0hrb1pTNWpaVzUwWlhJcExuTjFZaWhZY2lrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWpaVzUwWlhJdVpYRjFZV3h6S0hSb2FYTXVZMlZ1ZEdWeUtTQW1KaUJsTG5KaFpHbDFjeUE5UFQwZ2RHaHBjeTV5WVdScGRYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFwOUxDQnFkQ0E5SUc1bGR5Qk5MQ0JVYnlBOUlHNWxkeUJOTENCS2NpQTlJRzVsZHlCTkxDQm1iaUE5SUc1bGR5Qk5MQ0JGYnlBOUlHNWxkeUJOTENCWmNpQTlJRzVsZHlCTkxDQkJieUE5SUc1bGR5Qk5MQ0JEYmlBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnVFN3Z2RDQTlJRzVsZHlCTktEQXNJREFzSUMweEtTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1dmNtbG5hVzRnUFNCbExDQjBhR2x6TG1ScGNtVmpkR2x2YmlBOUlIUTdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtOXlhV2RwYmk1amIzQjVLR1VwTENCMGFHbHpMbVJwY21WamRHbHZiaTVqYjNCNUtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YjNKcFoybHVMbU52Y0hrb1pTNXZjbWxuYVc0cExDQjBhR2x6TG1ScGNtVmpkR2x2Ymk1amIzQjVLR1V1WkdseVpXTjBhVzl1S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1amIzQjVLSFJvYVhNdVpHbHlaV04wYVc5dUtTNXRkV3gwYVhCc2VWTmpZV3hoY2lobEtTNWhaR1FvZEdocGN5NXZjbWxuYVc0cE93b2dJQ0FnZlFvZ0lDQWdiRzl2YTBGMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYSmxZM1JwYjI0dVkyOXdlU2hsS1M1emRXSW9kR2hwY3k1dmNtbG5hVzRwTG01dmNtMWhiR2w2WlNncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtVmpZWE4wS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2Y21sbmFXNHVZMjl3ZVNoMGFHbHpMbUYwS0dVc0lHcDBLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5elpYTjBVRzlwYm5SVWIxQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwTG5OMVlsWmxZM1J2Y25Nb1pTd2dkR2hwY3k1dmNtbG5hVzRwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEM1a2IzUW9kR2hwY3k1a2FYSmxZM1JwYjI0cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUlEd2dNQ0EvSUhRdVkyOXdlU2gwYUdsekxtOXlhV2RwYmlrZ09pQjBMbU52Y0hrb2RHaHBjeTVrYVhKbFkzUnBiMjRwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRzRwTG1Ga1pDaDBhR2x6TG05eWFXZHBiaWs3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdlVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbk54Y25Rb2RHaHBjeTVrYVhOMFlXNWpaVk54Vkc5UWIybHVkQ2hsS1NrN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWTnhWRzlRYjJsdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JxZEM1emRXSldaV04wYjNKektHVXNJSFJvYVhNdWIzSnBaMmx1S1M1a2IzUW9kR2hwY3k1a2FYSmxZM1JwYjI0cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElEd2dNQ0EvSUhSb2FYTXViM0pwWjJsdUxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tHVXBJRG9nS0dwMExtTnZjSGtvZEdocGN5NWthWEpsWTNScGIyNHBMbTExYkhScGNHeDVVMk5oYkdGeUtIUXBMbUZrWkNoMGFHbHpMbTl5YVdkcGJpa3NJR3AwTG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0dVcEtUc0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxVM0ZVYjFObFoyMWxiblFvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lGUnZMbU52Y0hrb1pTa3VZV1JrS0hRcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0MUtTd2dTbkl1WTI5d2VTaDBLUzV6ZFdJb1pTa3VibTl5YldGc2FYcGxLQ2tzSUdadUxtTnZjSGtvZEdocGN5NXZjbWxuYVc0cExuTjFZaWhVYnlrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCbExtUnBjM1JoYm1ObFZHOG9kQ2tnS2lBdU5Td2dieUE5SUMxMGFHbHpMbVJwY21WamRHbHZiaTVrYjNRb1NuSXBMQ0JoSUQwZ1ptNHVaRzkwS0hSb2FYTXVaR2x5WldOMGFXOXVLU3dnYkNBOUlDMW1iaTVrYjNRb1NuSXBMQ0JqSUQwZ1ptNHViR1Z1WjNSb1UzRW9LU3dnYUNBOUlFMWhkR2d1WVdKektERWdMU0J2SUNvZ2J5a3NJSFVzSUdRc0lHWXNJRzA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHZ2dQaUF3S1NCcFppQW9kU0E5SUc4Z0tpQnNJQzBnWVN3Z1pDQTlJRzhnS2lCaElDMGdiQ3dnYlNBOUlISWdLaUJvTENCMUlENDlJREFwSUdsbUlDaGtJRDQ5SUMxdEtTQnBaaUFvWkNBOFBTQnRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ01TQXZJR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVWdLajBnZUN3Z1pDQXFQU0I0TENCbUlEMGdkU0FxSUNoMUlDc2dieUFxSUdRZ0t5QXlJQ29nWVNrZ0t5QmtJQ29nS0c4Z0tpQjFJQ3NnWkNBcklESWdLaUJzS1NBcklHTTdDaUFnSUNBZ0lDQWdmU0JsYkhObElHUWdQU0J5TENCMUlEMGdUV0YwYUM1dFlYZ29NQ3dnTFNodklDb2daQ0FySUdFcEtTd2daaUE5SUMxMUlDb2dkU0FySUdRZ0tpQW9aQ0FySURJZ0tpQnNLU0FySUdNN0NpQWdJQ0FnSUNBZ1pXeHpaU0JrSUQwZ0xYSXNJSFVnUFNCTllYUm9MbTFoZUNnd0xDQXRLRzhnS2lCa0lDc2dZU2twTENCbUlEMGdMWFVnS2lCMUlDc2daQ0FxSUNoa0lDc2dNaUFxSUd3cElDc2dZenNLSUNBZ0lDQWdJQ0JsYkhObElHUWdQRDBnTFcwZ1B5QW9kU0E5SUUxaGRHZ3ViV0Y0S0RBc0lDMG9MVzhnS2lCeUlDc2dZU2twTENCa0lEMGdkU0ErSURBZ1B5QXRjaUE2SUUxaGRHZ3ViV2x1S0UxaGRHZ3ViV0Y0S0MxeUxDQXRiQ2tzSUhJcExDQm1JRDBnTFhVZ0tpQjFJQ3NnWkNBcUlDaGtJQ3NnTWlBcUlHd3BJQ3NnWXlrZ09pQmtJRHc5SUcwZ1B5QW9kU0E5SURBc0lHUWdQU0JOWVhSb0xtMXBiaWhOWVhSb0xtMWhlQ2d0Y2l3Z0xXd3BMQ0J5S1N3Z1ppQTlJR1FnS2lBb1pDQXJJRElnS2lCc0tTQXJJR01wSURvZ0tIVWdQU0JOWVhSb0xtMWhlQ2d3TENBdEtHOGdLaUJ5SUNzZ1lTa3BMQ0JrSUQwZ2RTQStJREFnUHlCeUlEb2dUV0YwYUM1dGFXNG9UV0YwYUM1dFlYZ29MWElzSUMxc0tTd2djaWtzSUdZZ1BTQXRkU0FxSUhVZ0t5QmtJQ29nS0dRZ0t5QXlJQ29nYkNrZ0t5QmpLVHNLSUNBZ0lDQWdJQ0JsYkhObElHUWdQU0J2SUQ0Z01DQS9JQzF5SURvZ2Npd2dkU0E5SUUxaGRHZ3ViV0Y0S0RBc0lDMG9ieUFxSUdRZ0t5QmhLU2tzSUdZZ1BTQXRkU0FxSUhVZ0t5QmtJQ29nS0dRZ0t5QXlJQ29nYkNrZ0t5QmpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVJQ1ltSUc0dVkyOXdlU2gwYUdsekxtUnBjbVZqZEdsdmJpa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2RTa3VZV1JrS0hSb2FYTXViM0pwWjJsdUtTd2dhU0FtSmlCcExtTnZjSGtvU25JcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0dRcExtRmtaQ2hVYnlrc0lHWTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1JUY0dobGNtVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHcDBMbk4xWWxabFkzUnZjbk1vWlM1alpXNTBaWElzSUhSb2FYTXViM0pwWjJsdUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHcDBMbVJ2ZENoMGFHbHpMbVJwY21WamRHbHZiaWtzSUdrZ1BTQnFkQzVrYjNRb2FuUXBJQzBnYmlBcUlHNHNJSElnUFNCbExuSmhaR2wxY3lBcUlHVXVjbUZrYVhWek93b2dJQ0FnSUNBZ0lHbG1JQ2hwSUQ0Z2Npa2djbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JOWVhSb0xuTnhjblFvY2lBdElHa3BMQ0JoSUQwZ2JpQXRJRzhzSUd3Z1BTQnVJQ3NnYnpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVNBOElEQWdKaVlnYkNBOElEQWdQeUJ1ZFd4c0lEb2dZU0E4SURBZ1B5QjBhR2x6TG1GMEtHd3NJSFFwSURvZ2RHaHBjeTVoZENoaExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOVGNHaGxjbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJwYzNSaGJtTmxVM0ZVYjFCdmFXNTBLR1V1WTJWdWRHVnlLU0E4UFNCbExuSmhaR2wxY3lBcUlHVXVjbUZrYVhWek93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVlViMUJzWVc1bEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1Ym05eWJXRnNMbVJ2ZENoMGFHbHpMbVJwY21WamRHbHZiaWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdQVDA5SURBcElISmxkSFZ5YmlCbExtUnBjM1JoYm1ObFZHOVFiMmx1ZENoMGFHbHpMbTl5YVdkcGJpa2dQVDA5SURBZ1B5QXdJRG9nYm5Wc2JEc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlDMG9kR2hwY3k1dmNtbG5hVzR1Wkc5MEtHVXVibTl5YldGc0tTQXJJR1V1WTI5dWMzUmhiblFwSUM4Z2REc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQStQU0F3SUQ4Z2JpQTZJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUlFiR0Z1WlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtUnBjM1JoYm1ObFZHOVFiR0Z1WlNobEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQTlQVDBnYm5Wc2JDQS9JRzUxYkd3Z09pQjBhR2x6TG1GMEtHNHNJSFFwT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMGMxQnNZVzVsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVaR2x6ZEdGdVkyVlViMUJ2YVc1MEtIUm9hWE11YjNKcFoybHVLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0E5UFQwZ01DQjhmQ0JsTG01dmNtMWhiQzVrYjNRb2RHaHBjeTVrYVhKbFkzUnBiMjRwSUNvZ2RDQThJREE3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSQ2IzZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1TENCcExDQnlMQ0J2TENCaExDQnNMQ0JqSUQwZ01TQXZJSFJvYVhNdVpHbHlaV04wYVc5dUxuZ3NJR2dnUFNBeElDOGdkR2hwY3k1a2FYSmxZM1JwYjI0dWVTd2dkU0E5SURFZ0x5QjBhR2x6TG1ScGNtVmpkR2x2Ymk1NkxDQmtJRDBnZEdocGN5NXZjbWxuYVc0N0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdNZ1BqMGdNQ0EvSUNodUlEMGdLR1V1YldsdUxuZ2dMU0JrTG5ncElDb2dZeXdnYVNBOUlDaGxMbTFoZUM1NElDMGdaQzU0S1NBcUlHTXBJRG9nS0c0Z1BTQW9aUzV0WVhndWVDQXRJR1F1ZUNrZ0tpQmpMQ0JwSUQwZ0tHVXViV2x1TG5nZ0xTQmtMbmdwSUNvZ1l5a3NJR2dnUGowZ01DQS9JQ2h5SUQwZ0tHVXViV2x1TG5rZ0xTQmtMbmtwSUNvZ2FDd2dieUE5SUNobExtMWhlQzU1SUMwZ1pDNTVLU0FxSUdncElEb2dLSElnUFNBb1pTNXRZWGd1ZVNBdElHUXVlU2tnS2lCb0xDQnZJRDBnS0dVdWJXbHVMbmtnTFNCa0xua3BJQ29nYUNrc0lHNGdQaUJ2SUh4OElISWdQaUJwSUh4OElDZ29jaUErSUc0Z2ZId2diaUFoUFQwZ2Jpa2dKaVlnS0c0Z1BTQnlLU3dnS0c4Z1BDQnBJSHg4SUdrZ0lUMDlJR2twSUNZbUlDaHBJRDBnYnlrc0lIVWdQajBnTUNBL0lDaGhJRDBnS0dVdWJXbHVMbm9nTFNCa0xub3BJQ29nZFN3Z2JDQTlJQ2hsTG0xaGVDNTZJQzBnWkM1NktTQXFJSFVwSURvZ0tHRWdQU0FvWlM1dFlYZ3VlaUF0SUdRdWVpa2dLaUIxTENCc0lEMGdLR1V1YldsdUxub2dMU0JrTG5vcElDb2dkU2tzSUc0Z1BpQnNJSHg4SUdFZ1BpQnBLU0I4ZkNBb0tHRWdQaUJ1SUh4OElHNGdJVDA5SUc0cElDWW1JQ2h1SUQwZ1lTa3NJQ2hzSUR3Z2FTQjhmQ0JwSUNFOVBTQnBLU0FtSmlBb2FTQTlJR3dwTENCcElEd2dNQ2tnUHlCdWRXeHNJRG9nZEdocGN5NWhkQ2h1SUQ0OUlEQWdQeUJ1SURvZ2FTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBiblJsY25ObFkzUkNiM2dvWlN3Z2FuUXBJQ0U5UFNCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wVkhKcFlXNW5iR1VvWlN3Z2RDd2diaXdnYVN3Z2Npa2dld29nSUNBZ0lDQWdJRVZ2TG5OMVlsWmxZM1J2Y25Nb2RDd2daU2tzSUZseUxuTjFZbFpsWTNSdmNuTW9iaXdnWlNrc0lFRnZMbU55YjNOelZtVmpkRzl5Y3loRmJ5d2dXWElwT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnZEdocGN5NWthWEpsWTNScGIyNHVaRzkwS0VGdktTd2dZVHNLSUNBZ0lDQWdJQ0JwWmlBb2J5QStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drcElISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCaElEMGdNVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0c4Z1BDQXdLU0JoSUQwZ0xURXNJRzhnUFNBdGJ6c0tJQ0FnSUNBZ0lDQmxiSE5sSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHWnVMbk4xWWxabFkzUnZjbk1vZEdocGN5NXZjbWxuYVc0c0lHVXBPd29nSUNBZ0lDQWdJR3hsZENCc0lEMGdZU0FxSUhSb2FYTXVaR2x5WldOMGFXOXVMbVJ2ZENoWmNpNWpjbTl6YzFabFkzUnZjbk1vWm00c0lGbHlLU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tHd2dQQ0F3S1NCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHRWdLaUIwYUdsekxtUnBjbVZqZEdsdmJpNWtiM1FvUlc4dVkzSnZjM01vWm00cEtUc0tJQ0FnSUNBZ0lDQnBaaUFvWXlBOElEQWdmSHdnYkNBcklHTWdQaUJ2S1NCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlDMWhJQ29nWm00dVpHOTBLRUZ2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYUNBOElEQWdQeUJ1ZFd4c0lEb2dkR2hwY3k1aGRDaG9JQzhnYnl3Z2NpazdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVMWhkSEpwZURRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG05eWFXZHBiaTVoY0hCc2VVMWhkSEpwZURRb1pTa3NJSFJvYVhNdVpHbHlaV04wYVc5dUxuUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YjNKcFoybHVMbVZ4ZFdGc2N5aDBhR2x6TG05eWFXZHBiaWtnSmlZZ1pTNWthWEpsWTNScGIyNHVaWEYxWVd4ektIUm9hWE11WkdseVpXTjBhVzl1S1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDbjBzSUhCbElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblJ6SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4Q2lBZ0lDQWdJQ0FnWFN3Z1lYSm5kVzFsYm5SekxteGxibWQwYUNBK0lEQWdKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ2RHaGxJR052Ym5OMGNuVmpkRzl5SUc1dklHeHZibWRsY2lCeVpXRmtjeUJoY21kMWJXVnVkSE11SUhWelpTQXVjMlYwS0NrZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaExDQnNMQ0JqTENCb0xDQjFMQ0JrTENCbUxDQnRMQ0I0TENCMktTQjdDaUFnSUNBZ0lDQWdiR1YwSUdjZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJuV3pCZElEMGdaU3dnWjFzMFhTQTlJSFFzSUdkYk9GMGdQU0J1TENCbld6RXlYU0E5SUdrc0lHZGJNVjBnUFNCeUxDQm5XelZkSUQwZ2J5d2daMXM1WFNBOUlHRXNJR2RiTVROZElEMGdiQ3dnWjFzeVhTQTlJR01zSUdkYk5sMGdQU0JvTENCbld6RXdYU0E5SUhVc0lHZGJNVFJkSUQwZ1pDd2daMXN6WFNBOUlHWXNJR2RiTjEwZ1BTQnRMQ0JuV3pFeFhTQTlJSGdzSUdkYk1UVmRJRDBnZGl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdsa1pXNTBhWFI1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENneExDQXdMQ0F3TENBd0xDQXdMQ0F4TENBd0xDQXdMQ0F3TENBd0xDQXhMQ0F3TENBd0xDQXdMQ0F3TENBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2djR1VvS1M1bWNtOXRRWEp5WVhrb2RHaHBjeTVsYkdWdFpXNTBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaV3hsYldWdWRITXNJRzRnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMFd6QmRJRDBnYmxzd1hTd2dkRnN4WFNBOUlHNWJNVjBzSUhSYk1sMGdQU0J1V3pKZExDQjBXek5kSUQwZ2Jsc3pYU3dnZEZzMFhTQTlJRzViTkYwc0lIUmJOVjBnUFNCdVd6VmRMQ0IwV3paZElEMGdibHMyWFN3Z2RGczNYU0E5SUc1Yk4xMHNJSFJiT0YwZ1BTQnVXemhkTENCMFd6bGRJRDBnYmxzNVhTd2dkRnN4TUYwZ1BTQnVXekV3WFN3Z2RGc3hNVjBnUFNCdVd6RXhYU3dnZEZzeE1sMGdQU0J1V3pFeVhTd2dkRnN4TTEwZ1BTQnVXekV6WFN3Z2RGc3hORjBnUFNCdVd6RTBYU3dnZEZzeE5WMGdQU0J1V3pFMVhTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGxRYjNOcGRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0J1SUQwZ1pTNWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RGc3hNbDBnUFNCdVd6RXlYU3dnZEZzeE0xMGdQU0J1V3pFelhTd2dkRnN4TkYwZ1BTQnVXekUwWFN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFOWVhSeWFYZ3pLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0hSYk1GMHNJSFJiTTEwc0lIUmJObDBzSURBc0lIUmJNVjBzSUhSYk5GMHNJSFJiTjEwc0lEQXNJSFJiTWwwc0lIUmJOVjBzSUhSYk9GMHNJREFzSURBc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYaDBjbUZqZEVKaGMybHpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV6WlhSR2NtOXRUV0YwY21sNFEyOXNkVzF1S0hSb2FYTXNJREFwTENCMExuTmxkRVp5YjIxTllYUnlhWGhEYjJ4MWJXNG9kR2hwY3l3Z01Ta3NJRzR1YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmloMGFHbHpMQ0F5S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGEyVkNZWE5wY3lobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0dVdWVDd2dkQzU0TENCdUxuZ3NJREFzSUdVdWVTd2dkQzU1TENCdUxua3NJREFzSUdVdWVpd2dkQzU2TENCdUxub3NJREFzSURBc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYaDBjbUZqZEZKdmRHRjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUc0Z1BTQmxMbVZzWlcxbGJuUnpMQ0JwSUQwZ01TQXZJSE5wTG5ObGRFWnliMjFOWVhSeWFYaERiMngxYlc0b1pTd2dNQ2t1YkdWdVozUm9LQ2tzSUhJZ1BTQXhJQzhnYzJrdWMyVjBSbkp2YlUxaGRISnBlRU52YkhWdGJpaGxMQ0F4S1M1c1pXNW5kR2dvS1N3Z2J5QTlJREVnTHlCemFTNXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLR1VzSURJcExteGxibWQwYUNncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMFd6QmRJRDBnYmxzd1hTQXFJR2tzSUhSYk1WMGdQU0J1V3pGZElDb2dhU3dnZEZzeVhTQTlJRzViTWwwZ0tpQnBMQ0IwV3pOZElEMGdNQ3dnZEZzMFhTQTlJRzViTkYwZ0tpQnlMQ0IwV3pWZElEMGdibHMxWFNBcUlISXNJSFJiTmwwZ1BTQnVXelpkSUNvZ2Npd2dkRnMzWFNBOUlEQXNJSFJiT0YwZ1BTQnVXemhkSUNvZ2J5d2dkRnM1WFNBOUlHNWJPVjBnS2lCdkxDQjBXekV3WFNBOUlHNWJNVEJkSUNvZ2J5d2dkRnN4TVYwZ1BTQXdMQ0IwV3pFeVhTQTlJREFzSUhSYk1UTmRJRDBnTUN3Z2RGc3hORjBnUFNBd0xDQjBXekUxWFNBOUlERXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVW05MFlYUnBiMjVHY205dFJYVnNaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lHVWdKaVlnWlM1cGMwVjFiR1Z5SUh4OElHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzV0WVd0bFVtOTBZWFJwYjI1R2NtOXRSWFZzWlhJb0tTQnViM2NnWlhod1pXTjBjeUJoSUVWMWJHVnlJSEp2ZEdGMGFXOXVJSEpoZEdobGNpQjBhR0Z1SUdFZ1ZtVmpkRzl5TXlCaGJtUWdiM0prWlhJdUlpazdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCdUlEMGdaUzU0TENCcElEMGdaUzU1TENCeUlEMGdaUzU2TENCdklEMGdUV0YwYUM1amIzTW9iaWtzSUdFZ1BTQk5ZWFJvTG5OcGJpaHVLU3dnYkNBOUlFMWhkR2d1WTI5ektHa3BMQ0JqSUQwZ1RXRjBhQzV6YVc0b2FTa3NJR2dnUFNCTllYUm9MbU52Y3loeUtTd2dkU0E5SUUxaGRHZ3VjMmx1S0hJcE93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG05eVpHVnlJRDA5UFNBaVdGbGFJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlHOGdLaUJvTENCbUlEMGdieUFxSUhVc0lHMGdQU0JoSUNvZ2FDd2dlQ0E5SUdFZ0tpQjFPd29nSUNBZ0lDQWdJQ0FnSUNCMFd6QmRJRDBnYkNBcUlHZ3NJSFJiTkYwZ1BTQXRiQ0FxSUhVc0lIUmJPRjBnUFNCakxDQjBXekZkSUQwZ1ppQXJJRzBnS2lCakxDQjBXelZkSUQwZ1pDQXRJSGdnS2lCakxDQjBXemxkSUQwZ0xXRWdLaUJzTENCMFd6SmRJRDBnZUNBdElHUWdLaUJqTENCMFd6WmRJRDBnYlNBcklHWWdLaUJqTENCMFd6RXdYU0E5SUc4Z0tpQnNPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWlM1dmNtUmxjaUE5UFQwZ0lsbFlXaUlwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQnNJQ29nYUN3Z1ppQTlJR3dnS2lCMUxDQnRJRDBnWXlBcUlHZ3NJSGdnUFNCaklDb2dkVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RGc3dYU0E5SUdRZ0t5QjRJQ29nWVN3Z2RGczBYU0E5SUcwZ0tpQmhJQzBnWml3Z2RGczRYU0E5SUc4Z0tpQmpMQ0IwV3pGZElEMGdieUFxSUhVc0lIUmJOVjBnUFNCdklDb2dhQ3dnZEZzNVhTQTlJQzFoTENCMFd6SmRJRDBnWmlBcUlHRWdMU0J0TENCMFd6WmRJRDBnZUNBcklHUWdLaUJoTENCMFd6RXdYU0E5SUc4Z0tpQnNPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWlM1dmNtUmxjaUE5UFQwZ0lscFlXU0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQnNJQ29nYUN3Z1ppQTlJR3dnS2lCMUxDQnRJRDBnWXlBcUlHZ3NJSGdnUFNCaklDb2dkVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RGc3dYU0E5SUdRZ0xTQjRJQ29nWVN3Z2RGczBYU0E5SUMxdklDb2dkU3dnZEZzNFhTQTlJRzBnS3lCbUlDb2dZU3dnZEZzeFhTQTlJR1lnS3lCdElDb2dZU3dnZEZzMVhTQTlJRzhnS2lCb0xDQjBXemxkSUQwZ2VDQXRJR1FnS2lCaExDQjBXekpkSUQwZ0xXOGdLaUJqTENCMFd6WmRJRDBnWVN3Z2RGc3hNRjBnUFNCdklDb2diRHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dVdWIzSmtaWElnUFQwOUlDSmFXVmdpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdieUFxSUdnc0lHWWdQU0J2SUNvZ2RTd2diU0E5SUdFZ0tpQm9MQ0I0SUQwZ1lTQXFJSFU3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmJNRjBnUFNCc0lDb2dhQ3dnZEZzMFhTQTlJRzBnS2lCaklDMGdaaXdnZEZzNFhTQTlJR1FnS2lCaklDc2dlQ3dnZEZzeFhTQTlJR3dnS2lCMUxDQjBXelZkSUQwZ2VDQXFJR01nS3lCa0xDQjBXemxkSUQwZ1ppQXFJR01nTFNCdExDQjBXekpkSUQwZ0xXTXNJSFJiTmwwZ1BTQmhJQ29nYkN3Z2RGc3hNRjBnUFNCdklDb2diRHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dVdWIzSmtaWElnUFQwOUlDSlpXbGdpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdieUFxSUd3c0lHWWdQU0J2SUNvZ1l5d2diU0E5SUdFZ0tpQnNMQ0I0SUQwZ1lTQXFJR003Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmJNRjBnUFNCc0lDb2dhQ3dnZEZzMFhTQTlJSGdnTFNCa0lDb2dkU3dnZEZzNFhTQTlJRzBnS2lCMUlDc2daaXdnZEZzeFhTQTlJSFVzSUhSYk5WMGdQU0J2SUNvZ2FDd2dkRnM1WFNBOUlDMWhJQ29nYUN3Z2RGc3lYU0E5SUMxaklDb2dhQ3dnZEZzMlhTQTlJR1lnS2lCMUlDc2diU3dnZEZzeE1GMGdQU0JrSUMwZ2VDQXFJSFU3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNobExtOXlaR1Z5SUQwOVBTQWlXRnBaSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJRzhnS2lCc0xDQm1JRDBnYnlBcUlHTXNJRzBnUFNCaElDb2diQ3dnZUNBOUlHRWdLaUJqT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBXekJkSUQwZ2JDQXFJR2dzSUhSYk5GMGdQU0F0ZFN3Z2RGczRYU0E5SUdNZ0tpQm9MQ0IwV3pGZElEMGdaQ0FxSUhVZ0t5QjRMQ0IwV3pWZElEMGdieUFxSUdnc0lIUmJPVjBnUFNCbUlDb2dkU0F0SUcwc0lIUmJNbDBnUFNCdElDb2dkU0F0SUdZc0lIUmJObDBnUFNCaElDb2dhQ3dnZEZzeE1GMGdQU0I0SUNvZ2RTQXJJR1E3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwV3pOZElEMGdNQ3dnZEZzM1hTQTlJREFzSUhSYk1URmRJRDBnTUN3Z2RGc3hNbDBnUFNBd0xDQjBXekV6WFNBOUlEQXNJSFJiTVRSZElEMGdNQ3dnZEZzeE5WMGdQU0F4TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpWSnZkR0YwYVc5dVJuSnZiVkYxWVhSbGNtNXBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU52YlhCdmMyVW9kR1lzSUdVc0lHNW1LVHNLSUNBZ0lIMEtJQ0FnSUd4dmIydEJkQ2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVGRDNXpkV0pXWldOMGIzSnpLR1VzSUhRcExDQlRkQzVzWlc1bmRHaFRjU2dwSUQwOVBTQXdJQ1ltSUNoVGRDNTZJRDBnTVNrc0lGTjBMbTV2Y20xaGJHbDZaU2dwTENCd2JpNWpjbTl6YzFabFkzUnZjbk1vYml3Z1UzUXBMQ0J3Ymk1c1pXNW5kR2hUY1NncElEMDlQU0F3SUNZbUlDaE5ZWFJvTG1GaWN5aHVMbm9wSUQwOVBTQXhJRDhnVTNRdWVDQXJQU0F4WlMwMElEb2dVM1F1ZWlBclBTQXhaUzAwTENCVGRDNXViM0p0WVd4cGVtVW9LU3dnY0c0dVkzSnZjM05XWldOMGIzSnpLRzRzSUZOMEtTa3NJSEJ1TG01dmNtMWhiR2w2WlNncExDQmFjaTVqY205emMxWmxZM1J2Y25Nb1UzUXNJSEJ1S1N3Z2FWc3dYU0E5SUhCdUxuZ3NJR2xiTkYwZ1BTQmFjaTU0TENCcFd6aGRJRDBnVTNRdWVDd2dhVnN4WFNBOUlIQnVMbmtzSUdsYk5WMGdQU0JhY2k1NUxDQnBXemxkSUQwZ1UzUXVlU3dnYVZzeVhTQTlJSEJ1TG5vc0lHbGJObDBnUFNCYWNpNTZMQ0JwV3pFd1hTQTlJRk4wTG5vc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlIWnZhV1FnTUNBL0lDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzV0ZFd4MGFYQnNlU2dwSUc1dmR5QnZibXg1SUdGalkyVndkSE1nYjI1bElHRnlaM1Z0Wlc1MExpQlZjMlVnTG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vSUdFc0lHSWdLU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbTExYkhScGNHeDVUV0YwY21salpYTW9aU3dnZENrcElEb2dkR2hwY3k1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0hSb2FYTXNJR1VwT3dvZ0lDQWdmUW9nSUNBZ2NISmxiWFZzZEdsd2JIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb1pTd2dkR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnRkV3gwYVhCc2VVMWhkSEpwWTJWektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdVpXeGxiV1Z1ZEhNc0lHa2dQU0IwTG1Wc1pXMWxiblJ6TENCeUlEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2J5QTlJRzViTUYwc0lHRWdQU0J1V3pSZExDQnNJRDBnYmxzNFhTd2dZeUE5SUc1Yk1USmRMQ0JvSUQwZ2Jsc3hYU3dnZFNBOUlHNWJOVjBzSUdRZ1BTQnVXemxkTENCbUlEMGdibHN4TTEwc0lHMGdQU0J1V3pKZExDQjRJRDBnYmxzMlhTd2dkaUE5SUc1Yk1UQmRMQ0JuSUQwZ2Jsc3hORjBzSUhBZ1BTQnVXek5kTENCZklEMGdibHMzWFN3Z2VTQTlJRzViTVRGZExDQmlJRDBnYmxzeE5WMHNJRUVnUFNCcFd6QmRMQ0JNSUQwZ2FWczBYU3dnU1NBOUlHbGJPRjBzSUdzZ1BTQnBXekV5WFN3Z1FpQTlJR2xiTVYwc0lGQWdQU0JwV3pWZExDQjNJRDBnYVZzNVhTd2dSU0E5SUdsYk1UTmRMQ0JFSUQwZ2FWc3lYU3dnVlNBOUlHbGJObDBzSUVZZ1BTQnBXekV3WFN3Z1R5QTlJR2xiTVRSZExDQnVaU0E5SUdsYk0xMHNJR05sSUQwZ2FWczNYU3dnVmlBOUlHbGJNVEZkTENCWElEMGdhVnN4TlYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKYk1GMGdQU0J2SUNvZ1FTQXJJR0VnS2lCQ0lDc2diQ0FxSUVRZ0t5QmpJQ29nYm1Vc0lISmJORjBnUFNCdklDb2dUQ0FySUdFZ0tpQlFJQ3NnYkNBcUlGVWdLeUJqSUNvZ1kyVXNJSEpiT0YwZ1BTQnZJQ29nU1NBcklHRWdLaUIzSUNzZ2JDQXFJRVlnS3lCaklDb2dWaXdnY2xzeE1sMGdQU0J2SUNvZ2F5QXJJR0VnS2lCRklDc2diQ0FxSUU4Z0t5QmpJQ29nVnl3Z2Nsc3hYU0E5SUdnZ0tpQkJJQ3NnZFNBcUlFSWdLeUJrSUNvZ1JDQXJJR1lnS2lCdVpTd2djbHMxWFNBOUlHZ2dLaUJNSUNzZ2RTQXFJRkFnS3lCa0lDb2dWU0FySUdZZ0tpQmpaU3dnY2xzNVhTQTlJR2dnS2lCSklDc2dkU0FxSUhjZ0t5QmtJQ29nUmlBcklHWWdLaUJXTENCeVd6RXpYU0E5SUdnZ0tpQnJJQ3NnZFNBcUlFVWdLeUJrSUNvZ1R5QXJJR1lnS2lCWExDQnlXekpkSUQwZ2JTQXFJRUVnS3lCNElDb2dRaUFySUhZZ0tpQkVJQ3NnWnlBcUlHNWxMQ0J5V3paZElEMGdiU0FxSUV3Z0t5QjRJQ29nVUNBcklIWWdLaUJWSUNzZ1p5QXFJR05sTENCeVd6RXdYU0E5SUcwZ0tpQkpJQ3NnZUNBcUlIY2dLeUIySUNvZ1JpQXJJR2NnS2lCV0xDQnlXekUwWFNBOUlHMGdLaUJySUNzZ2VDQXFJRVVnS3lCMklDb2dUeUFySUdjZ0tpQlhMQ0J5V3pOZElEMGdjQ0FxSUVFZ0t5QmZJQ29nUWlBcklIa2dLaUJFSUNzZ1lpQXFJRzVsTENCeVd6ZGRJRDBnY0NBcUlFd2dLeUJmSUNvZ1VDQXJJSGtnS2lCVklDc2dZaUFxSUdObExDQnlXekV4WFNBOUlIQWdLaUJKSUNzZ1h5QXFJSGNnS3lCNUlDb2dSaUFySUdJZ0tpQldMQ0J5V3pFMVhTQTlJSEFnS2lCcklDc2dYeUFxSUVVZ0t5QjVJQ29nVHlBcklHSWdLaUJYTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGxUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RGc3dYU0FxUFNCbExDQjBXelJkSUNvOUlHVXNJSFJiT0YwZ0tqMGdaU3dnZEZzeE1sMGdLajBnWlN3Z2RGc3hYU0FxUFNCbExDQjBXelZkSUNvOUlHVXNJSFJiT1YwZ0tqMGdaU3dnZEZzeE0xMGdLajBnWlN3Z2RGc3lYU0FxUFNCbExDQjBXelpkSUNvOUlHVXNJSFJiTVRCZElDbzlJR1VzSUhSYk1UUmRJQ285SUdVc0lIUmJNMTBnS2owZ1pTd2dkRnMzWFNBcVBTQmxMQ0IwV3pFeFhTQXFQU0JsTENCMFd6RTFYU0FxUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHVjBaWEp0YVc1aGJuUW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQjBJRDBnWlZzd1hTd2diaUE5SUdWYk5GMHNJR2tnUFNCbFd6aGRMQ0J5SUQwZ1pWc3hNbDBzSUc4Z1BTQmxXekZkTENCaElEMGdaVnMxWFN3Z2JDQTlJR1ZiT1Ywc0lHTWdQU0JsV3pFelhTd2dhQ0E5SUdWYk1sMHNJSFVnUFNCbFd6WmRMQ0JrSUQwZ1pWc3hNRjBzSUdZZ1BTQmxXekUwWFN3Z2JTQTlJR1ZiTTEwc0lIZ2dQU0JsV3pkZExDQjJJRDBnWlZzeE1WMHNJR2NnUFNCbFd6RTFYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiU0FxSUNncmNpQXFJR3dnS2lCMUlDMGdhU0FxSUdNZ0tpQjFJQzBnY2lBcUlHRWdLaUJrSUNzZ2JpQXFJR01nS2lCa0lDc2dhU0FxSUdFZ0tpQm1JQzBnYmlBcUlHd2dLaUJtS1NBcklIZ2dLaUFvSzNRZ0tpQnNJQ29nWmlBdElIUWdLaUJqSUNvZ1pDQXJJSElnS2lCdklDb2daQ0F0SUdrZ0tpQnZJQ29nWmlBcklHa2dLaUJqSUNvZ2FDQXRJSElnS2lCc0lDb2dhQ2tnS3lCMklDb2dLQ3QwSUNvZ1l5QXFJSFVnTFNCMElDb2dZU0FxSUdZZ0xTQnlJQ29nYnlBcUlIVWdLeUJ1SUNvZ2J5QXFJR1lnS3lCeUlDb2dZU0FxSUdnZ0xTQnVJQ29nWXlBcUlHZ3BJQ3NnWnlBcUlDZ3RhU0FxSUdFZ0tpQm9JQzBnZENBcUlHd2dLaUIxSUNzZ2RDQXFJR0VnS2lCa0lDc2dhU0FxSUc4Z0tpQjFJQzBnYmlBcUlHOGdLaUJrSUNzZ2JpQXFJR3dnS2lCb0tUc0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVaV3hsYldWdWRITXNJSFE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnUFNCbFd6RmRMQ0JsV3pGZElEMGdaVnMwWFN3Z1pWczBYU0E5SUhRc0lIUWdQU0JsV3pKZExDQmxXekpkSUQwZ1pWczRYU3dnWlZzNFhTQTlJSFFzSUhRZ1BTQmxXelpkTENCbFd6WmRJRDBnWlZzNVhTd2daVnM1WFNBOUlIUXNJSFFnUFNCbFd6TmRMQ0JsV3pOZElEMGdaVnN4TWwwc0lHVmJNVEpkSUQwZ2RDd2dkQ0E5SUdWYk4xMHNJR1ZiTjEwZ1BTQmxXekV6WFN3Z1pWc3hNMTBnUFNCMExDQjBJRDBnWlZzeE1WMHNJR1ZiTVRGZElEMGdaVnN4TkYwc0lHVmJNVFJkSUQwZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRkJ2YzJsMGFXOXVLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWFYTldaV04wYjNJeklEOGdLR2xiTVRKZElEMGdaUzU0TENCcFd6RXpYU0E5SUdVdWVTd2dhVnN4TkYwZ1BTQmxMbm9wSURvZ0tHbGJNVEpkSUQwZ1pTd2dhVnN4TTEwZ1BTQjBMQ0JwV3pFMFhTQTlJRzRwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYVc1MlpYSjBLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2dkQ0E5SUdWYk1GMHNJRzRnUFNCbFd6RmRMQ0JwSUQwZ1pWc3lYU3dnY2lBOUlHVmJNMTBzSUc4Z1BTQmxXelJkTENCaElEMGdaVnMxWFN3Z2JDQTlJR1ZiTmwwc0lHTWdQU0JsV3pkZExDQm9JRDBnWlZzNFhTd2dkU0E5SUdWYk9WMHNJR1FnUFNCbFd6RXdYU3dnWmlBOUlHVmJNVEZkTENCdElEMGdaVnN4TWwwc0lIZ2dQU0JsV3pFelhTd2dkaUE5SUdWYk1UUmRMQ0JuSUQwZ1pWc3hOVjBzSUhBZ1BTQjFJQ29nZGlBcUlHTWdMU0I0SUNvZ1pDQXFJR01nS3lCNElDb2diQ0FxSUdZZ0xTQmhJQ29nZGlBcUlHWWdMU0IxSUNvZ2JDQXFJR2NnS3lCaElDb2daQ0FxSUdjc0lGOGdQU0J0SUNvZ1pDQXFJR01nTFNCb0lDb2dkaUFxSUdNZ0xTQnRJQ29nYkNBcUlHWWdLeUJ2SUNvZ2RpQXFJR1lnS3lCb0lDb2diQ0FxSUdjZ0xTQnZJQ29nWkNBcUlHY3NJSGtnUFNCb0lDb2dlQ0FxSUdNZ0xTQnRJQ29nZFNBcUlHTWdLeUJ0SUNvZ1lTQXFJR1lnTFNCdklDb2dlQ0FxSUdZZ0xTQm9JQ29nWVNBcUlHY2dLeUJ2SUNvZ2RTQXFJR2NzSUdJZ1BTQnRJQ29nZFNBcUlHd2dMU0JvSUNvZ2VDQXFJR3dnTFNCdElDb2dZU0FxSUdRZ0t5QnZJQ29nZUNBcUlHUWdLeUJvSUNvZ1lTQXFJSFlnTFNCdklDb2dkU0FxSUhZc0lFRWdQU0IwSUNvZ2NDQXJJRzRnS2lCZklDc2dhU0FxSUhrZ0t5QnlJQ29nWWpzS0lDQWdJQ0FnSUNCcFppQW9RU0E5UFQwZ01Da2djbVYwZFhKdUlIUm9hWE11YzJWMEtEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJR3hsZENCTUlEMGdNU0F2SUVFN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWYk1GMGdQU0J3SUNvZ1RDd2daVnN4WFNBOUlDaDRJQ29nWkNBcUlISWdMU0IxSUNvZ2RpQXFJSElnTFNCNElDb2dhU0FxSUdZZ0t5QnVJQ29nZGlBcUlHWWdLeUIxSUNvZ2FTQXFJR2NnTFNCdUlDb2daQ0FxSUdjcElDb2dUQ3dnWlZzeVhTQTlJQ2hoSUNvZ2RpQXFJSElnTFNCNElDb2diQ0FxSUhJZ0t5QjRJQ29nYVNBcUlHTWdMU0J1SUNvZ2RpQXFJR01nTFNCaElDb2dhU0FxSUdjZ0t5QnVJQ29nYkNBcUlHY3BJQ29nVEN3Z1pWc3pYU0E5SUNoMUlDb2diQ0FxSUhJZ0xTQmhJQ29nWkNBcUlISWdMU0IxSUNvZ2FTQXFJR01nS3lCdUlDb2daQ0FxSUdNZ0t5QmhJQ29nYVNBcUlHWWdMU0J1SUNvZ2JDQXFJR1lwSUNvZ1RDd2daVnMwWFNBOUlGOGdLaUJNTENCbFd6VmRJRDBnS0dnZ0tpQjJJQ29nY2lBdElHMGdLaUJrSUNvZ2NpQXJJRzBnS2lCcElDb2daaUF0SUhRZ0tpQjJJQ29nWmlBdElHZ2dLaUJwSUNvZ1p5QXJJSFFnS2lCa0lDb2daeWtnS2lCTUxDQmxXelpkSUQwZ0tHMGdLaUJzSUNvZ2NpQXRJRzhnS2lCMklDb2djaUF0SUcwZ0tpQnBJQ29nWXlBcklIUWdLaUIySUNvZ1l5QXJJRzhnS2lCcElDb2daeUF0SUhRZ0tpQnNJQ29nWnlrZ0tpQk1MQ0JsV3pkZElEMGdLRzhnS2lCa0lDb2djaUF0SUdnZ0tpQnNJQ29nY2lBcklHZ2dLaUJwSUNvZ1l5QXRJSFFnS2lCa0lDb2dZeUF0SUc4Z0tpQnBJQ29nWmlBcklIUWdLaUJzSUNvZ1ppa2dLaUJNTENCbFd6aGRJRDBnZVNBcUlFd3NJR1ZiT1YwZ1BTQW9iU0FxSUhVZ0tpQnlJQzBnYUNBcUlIZ2dLaUJ5SUMwZ2JTQXFJRzRnS2lCbUlDc2dkQ0FxSUhnZ0tpQm1JQ3NnYUNBcUlHNGdLaUJuSUMwZ2RDQXFJSFVnS2lCbktTQXFJRXdzSUdWYk1UQmRJRDBnS0c4Z0tpQjRJQ29nY2lBdElHMGdLaUJoSUNvZ2NpQXJJRzBnS2lCdUlDb2dZeUF0SUhRZ0tpQjRJQ29nWXlBdElHOGdLaUJ1SUNvZ1p5QXJJSFFnS2lCaElDb2daeWtnS2lCTUxDQmxXekV4WFNBOUlDaG9JQ29nWVNBcUlISWdMU0J2SUNvZ2RTQXFJSElnTFNCb0lDb2diaUFxSUdNZ0t5QjBJQ29nZFNBcUlHTWdLeUJ2SUNvZ2JpQXFJR1lnTFNCMElDb2dZU0FxSUdZcElDb2dUQ3dnWlZzeE1sMGdQU0JpSUNvZ1RDd2daVnN4TTEwZ1BTQW9hQ0FxSUhnZ0tpQnBJQzBnYlNBcUlIVWdLaUJwSUNzZ2JTQXFJRzRnS2lCa0lDMGdkQ0FxSUhnZ0tpQmtJQzBnYUNBcUlHNGdLaUIySUNzZ2RDQXFJSFVnS2lCMktTQXFJRXdzSUdWYk1UUmRJRDBnS0cwZ0tpQmhJQ29nYVNBdElHOGdLaUI0SUNvZ2FTQXRJRzBnS2lCdUlDb2diQ0FySUhRZ0tpQjRJQ29nYkNBcklHOGdLaUJ1SUNvZ2RpQXRJSFFnS2lCaElDb2dkaWtnS2lCTUxDQmxXekUxWFNBOUlDaHZJQ29nZFNBcUlHa2dMU0JvSUNvZ1lTQXFJR2tnS3lCb0lDb2diaUFxSUd3Z0xTQjBJQ29nZFNBcUlHd2dMU0J2SUNvZ2JpQXFJR1FnS3lCMElDb2dZU0FxSUdRcElDb2dUQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5qWVd4bEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lHNGdQU0JsTG5nc0lHa2dQU0JsTG5rc0lISWdQU0JsTG5vN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYk1GMGdLajBnYml3Z2RGczBYU0FxUFNCcExDQjBXemhkSUNvOUlISXNJSFJiTVYwZ0tqMGdiaXdnZEZzMVhTQXFQU0JwTENCMFd6bGRJQ285SUhJc0lIUmJNbDBnS2owZ2Jpd2dkRnMyWFNBcVBTQnBMQ0IwV3pFd1hTQXFQU0J5TENCMFd6TmRJQ285SUc0c0lIUmJOMTBnS2owZ2FTd2dkRnN4TVYwZ0tqMGdjaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEUxaGVGTmpZV3hsVDI1QmVHbHpLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2dkQ0E5SUdWYk1GMGdLaUJsV3pCZElDc2daVnN4WFNBcUlHVmJNVjBnS3lCbFd6SmRJQ29nWlZzeVhTd2diaUE5SUdWYk5GMGdLaUJsV3pSZElDc2daVnMxWFNBcUlHVmJOVjBnS3lCbFd6WmRJQ29nWlZzMlhTd2dhU0E5SUdWYk9GMGdLaUJsV3poZElDc2daVnM1WFNBcUlHVmJPVjBnS3lCbFd6RXdYU0FxSUdWYk1UQmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5OeGNuUW9UV0YwYUM1dFlYZ29kQ3dnYml3Z2FTa3BPd29nSUNBZ2ZRb2dJQ0FnYldGclpWUnlZVzV6YkdGMGFXOXVLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9NU3dnTUN3Z01Dd2daU3dnTUN3Z01Td2dNQ3dnZEN3Z01Dd2dNQ3dnTVN3Z2Jpd2dNQ3dnTUN3Z01Dd2dNU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFVtOTBZWFJwYjI1WUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndVkyOXpLR1VwTENCdUlEMGdUV0YwYUM1emFXNG9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLREVzSURBc0lEQXNJREFzSURBc0lIUXNJQzF1TENBd0xDQXdMQ0J1TENCMExDQXdMQ0F3TENBd0xDQXdMQ0F4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGEyVlNiM1JoZEdsdmJsa29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVFdGMGFDNWpiM01vWlNrc0lHNGdQU0JOWVhSb0xuTnBiaWhsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvZEN3Z01Dd2diaXdnTUN3Z01Dd2dNU3dnTUN3Z01Dd2dMVzRzSURBc0lIUXNJREFzSURBc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVkp2ZEdGMGFXOXVXaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCTllYUm9MbU52Y3lobEtTd2diaUE5SUUxaGRHZ3VjMmx1S0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENoMExDQXRiaXdnTUN3Z01Dd2diaXdnZEN3Z01Dd2dNQ3dnTUN3Z01Dd2dNU3dnTUN3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVW05MFlYUnBiMjVCZUdsektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUUxaGRHZ3VZMjl6S0hRcExDQnBJRDBnVFdGMGFDNXphVzRvZENrc0lISWdQU0F4SUMwZ2Jpd2dieUE5SUdVdWVDd2dZU0E5SUdVdWVTd2diQ0E5SUdVdWVpd2dZeUE5SUhJZ0tpQnZMQ0JvSUQwZ2NpQXFJR0U3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLR01nS2lCdklDc2diaXdnWXlBcUlHRWdMU0JwSUNvZ2JDd2dZeUFxSUd3Z0t5QnBJQ29nWVN3Z01Dd2dZeUFxSUdFZ0t5QnBJQ29nYkN3Z2FDQXFJR0VnS3lCdUxDQm9JQ29nYkNBdElHa2dLaUJ2TENBd0xDQmpJQ29nYkNBdElHa2dLaUJoTENCb0lDb2diQ0FySUdrZ0tpQnZMQ0J5SUNvZ2JDQXFJR3dnS3lCdUxDQXdMQ0F3TENBd0xDQXdMQ0F4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGEyVlRZMkZzWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0dVc0lEQXNJREFzSURBc0lEQXNJSFFzSURBc0lEQXNJREFzSURBc0lHNHNJREFzSURBc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVk5vWldGeUtHVXNJSFFzSUc0c0lHa3NJSElzSUc4cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb01Td2diaXdnY2l3Z01Dd2daU3dnTVN3Z2J5d2dNQ3dnZEN3Z2FTd2dNU3dnTUN3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiMjF3YjNObEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUhJZ1BTQjBMbDk0TENCdklEMGdkQzVmZVN3Z1lTQTlJSFF1WDNvc0lHd2dQU0IwTGw5M0xDQmpJRDBnY2lBcklISXNJR2dnUFNCdklDc2dieXdnZFNBOUlHRWdLeUJoTENCa0lEMGdjaUFxSUdNc0lHWWdQU0J5SUNvZ2FDd2diU0E5SUhJZ0tpQjFMQ0I0SUQwZ2J5QXFJR2dzSUhZZ1BTQnZJQ29nZFN3Z1p5QTlJR0VnS2lCMUxDQndJRDBnYkNBcUlHTXNJRjhnUFNCc0lDb2dhQ3dnZVNBOUlHd2dLaUIxTENCaUlEMGdiaTU0TENCQklEMGdiaTU1TENCTUlEMGdiaTU2T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwV3pCZElEMGdLREVnTFNBb2VDQXJJR2NwS1NBcUlHSXNJR2xiTVYwZ1BTQW9aaUFySUhrcElDb2dZaXdnYVZzeVhTQTlJQ2h0SUMwZ1h5a2dLaUJpTENCcFd6TmRJRDBnTUN3Z2FWczBYU0E5SUNobUlDMGdlU2tnS2lCQkxDQnBXelZkSUQwZ0tERWdMU0FvWkNBcklHY3BLU0FxSUVFc0lHbGJObDBnUFNBb2RpQXJJSEFwSUNvZ1FTd2dhVnMzWFNBOUlEQXNJR2xiT0YwZ1BTQW9iU0FySUY4cElDb2dUQ3dnYVZzNVhTQTlJQ2gySUMwZ2NDa2dLaUJNTENCcFd6RXdYU0E5SUNneElDMGdLR1FnS3lCNEtTa2dLaUJNTENCcFd6RXhYU0E5SURBc0lHbGJNVEpkSUQwZ1pTNTRMQ0JwV3pFelhTQTlJR1V1ZVN3Z2FWc3hORjBnUFNCbExub3NJR2xiTVRWZElEMGdNU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JsWTI5dGNHOXpaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxtVnNaVzFsYm5SekxDQnlJRDBnYzJrdWMyVjBLR2xiTUYwc0lHbGJNVjBzSUdsYk1sMHBMbXhsYm1kMGFDZ3BMQ0J2SUQwZ2Mya3VjMlYwS0dsYk5GMHNJR2xiTlYwc0lHbGJObDBwTG14bGJtZDBhQ2dwTENCaElEMGdjMmt1YzJWMEtHbGJPRjBzSUdsYk9WMHNJR2xiTVRCZEtTNXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1SbGRHVnliV2x1WVc1MEtDa2dQQ0F3SUNZbUlDaHlJRDBnTFhJcExDQmxMbmdnUFNCcFd6RXlYU3dnWlM1NUlEMGdhVnN4TTEwc0lHVXVlaUE5SUdsYk1UUmRMQ0JKZEM1amIzQjVLSFJvYVhNcE93b2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ01TQXZJSElzSUdnZ1BTQXhJQzhnYnl3Z2RTQTlJREVnTHlCaE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCSmRDNWxiR1Z0Wlc1MGMxc3dYU0FxUFNCakxDQkpkQzVsYkdWdFpXNTBjMXN4WFNBcVBTQmpMQ0JKZEM1bGJHVnRaVzUwYzFzeVhTQXFQU0JqTENCSmRDNWxiR1Z0Wlc1MGMxczBYU0FxUFNCb0xDQkpkQzVsYkdWdFpXNTBjMXMxWFNBcVBTQm9MQ0JKZEM1bGJHVnRaVzUwYzFzMlhTQXFQU0JvTENCSmRDNWxiR1Z0Wlc1MGMxczRYU0FxUFNCMUxDQkpkQzVsYkdWdFpXNTBjMXM1WFNBcVBTQjFMQ0JKZEM1bGJHVnRaVzUwYzFzeE1GMGdLajBnZFN3Z2RDNXpaWFJHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvU1hRcExDQnVMbmdnUFNCeUxDQnVMbmtnUFNCdkxDQnVMbm9nUFNCaExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVkJsY25Od1pXTjBhWFpsS0dVc0lIUXNJRzRzSUdrc0lISXNJRzhwSUhzS0lDQWdJQ0FnSUNCdklEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWJXRnJaVkJsY25Od1pXTjBhWFpsS0NrZ2FHRnpJR0psWlc0Z2NtVmtaV1pwYm1Wa0lHRnVaQ0JvWVhNZ1lTQnVaWGNnYzJsbmJtRjBkWEpsTGlCUWJHVmhjMlVnWTJobFkyc2dkR2hsSUdSdlkzTXVJaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQnNJRDBnTWlBcUlISWdMeUFvZENBdElHVXBMQ0JqSUQwZ01pQXFJSElnTHlBb2JpQXRJR2twTENCb0lEMGdLSFFnS3lCbEtTQXZJQ2gwSUMwZ1pTa3NJSFVnUFNBb2JpQXJJR2twSUM4Z0tHNGdMU0JwS1N3Z1pDQTlJQzBvYnlBcklISXBJQzhnS0c4Z0xTQnlLU3dnWmlBOUlDMHlJQ29nYnlBcUlISWdMeUFvYnlBdElISXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmhXekJkSUQwZ2JDd2dZVnMwWFNBOUlEQXNJR0ZiT0YwZ1BTQm9MQ0JoV3pFeVhTQTlJREFzSUdGYk1WMGdQU0F3TENCaFd6VmRJRDBnWXl3Z1lWczVYU0E5SUhVc0lHRmJNVE5kSUQwZ01Dd2dZVnN5WFNBOUlEQXNJR0ZiTmwwZ1BTQXdMQ0JoV3pFd1hTQTlJR1FzSUdGYk1UUmRJRDBnWml3Z1lWc3pYU0E5SURBc0lHRmJOMTBnUFNBd0xDQmhXekV4WFNBOUlDMHhMQ0JoV3pFMVhTQTlJREFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFQzSjBhRzluY21Gd2FHbGpLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lHd2dQU0F4SUM4Z0tIUWdMU0JsS1N3Z1l5QTlJREVnTHlBb2JpQXRJR2twTENCb0lEMGdNU0F2SUNodklDMGdjaWtzSUhVZ1BTQW9kQ0FySUdVcElDb2diQ3dnWkNBOUlDaHVJQ3NnYVNrZ0tpQmpMQ0JtSUQwZ0tHOGdLeUJ5S1NBcUlHZzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRmJNRjBnUFNBeUlDb2diQ3dnWVZzMFhTQTlJREFzSUdGYk9GMGdQU0F3TENCaFd6RXlYU0E5SUMxMUxDQmhXekZkSUQwZ01Dd2dZVnMxWFNBOUlESWdLaUJqTENCaFd6bGRJRDBnTUN3Z1lWc3hNMTBnUFNBdFpDd2dZVnN5WFNBOUlEQXNJR0ZiTmwwZ1BTQXdMQ0JoV3pFd1hTQTlJQzB5SUNvZ2FDd2dZVnN4TkYwZ1BTQXRaaXdnWVZzelhTQTlJREFzSUdGYk4xMGdQU0F3TENCaFd6RXhYU0E5SURBc0lHRmJNVFZkSUQwZ01Td2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCdUlEMGdaUzVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd095QnBJRHdnTVRZN0lHa3JLeWxwWmlBb2RGdHBYU0FoUFQwZ2JsdHBYU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoTURzS0lDQWdJSDBLSUNBZ0lHWnliMjFCY25KaGVTaGxMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0F4TmpzZ2Jpc3JLWFJvYVhNdVpXeGxiV1Z1ZEhOYmJsMGdQU0JsVzI0Z0t5QjBYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZRWEp5WVhrb1pTQTlJRnRkTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pWdDBYU0E5SUc1Yk1GMHNJR1ZiZENBcklERmRJRDBnYmxzeFhTd2daVnQwSUNzZ01sMGdQU0J1V3pKZExDQmxXM1FnS3lBelhTQTlJRzViTTEwc0lHVmJkQ0FySURSZElEMGdibHMwWFN3Z1pWdDBJQ3NnTlYwZ1BTQnVXelZkTENCbFczUWdLeUEyWFNBOUlHNWJObDBzSUdWYmRDQXJJRGRkSUQwZ2JsczNYU3dnWlZ0MElDc2dPRjBnUFNCdVd6aGRMQ0JsVzNRZ0t5QTVYU0E5SUc1Yk9WMHNJR1ZiZENBcklERXdYU0E5SUc1Yk1UQmRMQ0JsVzNRZ0t5QXhNVjBnUFNCdVd6RXhYU3dnWlZ0MElDc2dNVEpkSUQwZ2Jsc3hNbDBzSUdWYmRDQXJJREV6WFNBOUlHNWJNVE5kTENCbFczUWdLeUF4TkYwZ1BTQnVXekUwWFN3Z1pWdDBJQ3NnTVRWZElEMGdibHN4TlYwc0lHVTdDaUFnSUNCOUNuMDdDbkJsTG5CeWIzUnZkSGx3WlM1cGMwMWhkSEpwZURRZ1BTQWhNRHNLZG1GeUlITnBJRDBnYm1WM0lFMHNJRWwwSUQwZ2JtVjNJSEJsTENCMFppQTlJRzVsZHlCTktEQXNJREFzSURBcExDQnVaaUE5SUc1bGR5Qk5LREVzSURFc0lERXBMQ0J3YmlBOUlHNWxkeUJOTENCYWNpQTlJRzVsZHlCTkxDQlRkQ0E5SUc1bGR5Qk5MQ0JmYkNBOUlHNWxkeUJ3WlN3Z1RXd2dQU0J1WlhjZ1ozUXNJRnB1SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlEQXNJSFFnUFNBd0xDQnVJRDBnTUN3Z2FTQTlJRnB1TGtSbFptRjFiSFJQY21SbGNpbDdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1VzSUhSb2FYTXVYM2tnUFNCMExDQjBhR2x6TGw5NklEMGdiaXdnZEdocGN5NWZiM0prWlhJZ1BTQnBPd29nSUNBZ2ZRb2dJQ0FnWjJWMElIZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZzdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2VDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdVc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1RzS0lDQWdJSDBLSUNBZ0lHZGxkQ0I1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDNrZ1BTQmxMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDazdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2VpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVqc0tJQ0FnSUgwS0lDQWdJSE5sZENCNktHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOTZJRDBnWlN3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJRzl5WkdWeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5dmNtUmxjanNLSUNBZ0lIMEtJQ0FnSUhObGRDQnZjbVJsY2lobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmIzSmtaWElnUFNCbExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0NrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDd2diaXdnYVNBOUlIUm9hWE11WDI5eVpHVnlLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dQU0JsTENCMGFHbHpMbDk1SUQwZ2RDd2dkR2hwY3k1ZmVpQTlJRzRzSUhSb2FYTXVYMjl5WkdWeUlEMGdhU3dnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLSFJvYVhNdVgzZ3NJSFJvYVhNdVgza3NJSFJvYVhNdVgzb3NJSFJvYVhNdVgyOXlaR1Z5S1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk0SUQwZ1pTNWZlQ3dnZEdocGN5NWZlU0E5SUdVdVgza3NJSFJvYVhNdVgzb2dQU0JsTGw5NkxDQjBhR2x6TGw5dmNtUmxjaUE5SUdVdVgyOXlaR1Z5TENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVbTkwWVhScGIyNU5ZWFJ5YVhnb1pTd2dkQ0E5SUhSb2FYTXVYMjl5WkdWeUxDQnVJRDBnSVRBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVXVaV3hsYldWdWRITXNJSElnUFNCcFd6QmRMQ0J2SUQwZ2FWczBYU3dnWVNBOUlHbGJPRjBzSUd3Z1BTQnBXekZkTENCaklEMGdhVnMxWFN3Z2FDQTlJR2xiT1Ywc0lIVWdQU0JwV3pKZExDQmtJRDBnYVZzMlhTd2daaUE5SUdsYk1UQmRPd29nSUNBZ0lDQWdJSE4zYVhSamFDaDBLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpV0ZsYUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNrZ1BTQk5ZWFJvTG1GemFXNG9iWFFvWVN3Z0xURXNJREVwS1N3Z1RXRjBhQzVoWW5Nb1lTa2dQQ0F1T1RrNU9UazVPU0EvSUNoMGFHbHpMbDk0SUQwZ1RXRjBhQzVoZEdGdU1pZ3RhQ3dnWmlrc0lIUm9hWE11WDNvZ1BTQk5ZWFJvTG1GMFlXNHlLQzF2TENCeUtTa2dPaUFvZEdocGN5NWZlQ0E5SUUxaGRHZ3VZWFJoYmpJb1pDd2dZeWtzSUhSb2FYTXVYM29nUFNBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKWldGb2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJRTFoZEdndVlYTnBiaWd0YlhRb2FDd2dMVEVzSURFcEtTd2dUV0YwYUM1aFluTW9hQ2tnUENBdU9UazVPVGs1T1NBL0lDaDBhR2x6TGw5NUlEMGdUV0YwYUM1aGRHRnVNaWhoTENCbUtTd2dkR2hwY3k1ZmVpQTlJRTFoZEdndVlYUmhiaklvYkN3Z1l5a3BJRG9nS0hSb2FYTXVYM2tnUFNCTllYUm9MbUYwWVc0eUtDMTFMQ0J5S1N3Z2RHaHBjeTVmZWlBOUlEQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lscFlXU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTRJRDBnVFdGMGFDNWhjMmx1S0cxMEtHUXNJQzB4TENBeEtTa3NJRTFoZEdndVlXSnpLR1FwSUR3Z0xqazVPVGs1T1RrZ1B5QW9kR2hwY3k1ZmVTQTlJRTFoZEdndVlYUmhiaklvTFhVc0lHWXBMQ0IwYUdsekxsOTZJRDBnVFdGMGFDNWhkR0Z1TWlndGJ5d2dZeWtwSURvZ0tIUm9hWE11WDNrZ1BTQXdMQ0IwYUdsekxsOTZJRDBnVFdGMGFDNWhkR0Z1TWloc0xDQnlLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXbGxZSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2tnUFNCTllYUm9MbUZ6YVc0b0xXMTBLSFVzSUMweExDQXhLU2tzSUUxaGRHZ3VZV0p6S0hVcElEd2dMams1T1RrNU9Ua2dQeUFvZEdocGN5NWZlQ0E5SUUxaGRHZ3VZWFJoYmpJb1pDd2daaWtzSUhSb2FYTXVYM29nUFNCTllYUm9MbUYwWVc0eUtHd3NJSElwS1NBNklDaDBhR2x6TGw5NElEMGdNQ3dnZEdocGN5NWZlaUE5SUUxaGRHZ3VZWFJoYmpJb0xXOHNJR01wS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0paV2xnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZWlBOUlFMWhkR2d1WVhOcGJpaHRkQ2hzTENBdE1Td2dNU2twTENCTllYUm9MbUZpY3loc0tTQThJQzQ1T1RrNU9UazVJRDhnS0hSb2FYTXVYM2dnUFNCTllYUm9MbUYwWVc0eUtDMW9MQ0JqS1N3Z2RHaHBjeTVmZVNBOUlFMWhkR2d1WVhSaGJqSW9MWFVzSUhJcEtTQTZJQ2gwYUdsekxsOTRJRDBnTUN3Z2RHaHBjeTVmZVNBOUlFMWhkR2d1WVhSaGJqSW9ZU3dnWmlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxoYVdTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5NklEMGdUV0YwYUM1aGMybHVLQzF0ZENodkxDQXRNU3dnTVNrcExDQk5ZWFJvTG1GaWN5aHZLU0E4SUM0NU9UazVPVGs1SUQ4Z0tIUm9hWE11WDNnZ1BTQk5ZWFJvTG1GMFlXNHlLR1FzSUdNcExDQjBhR2x6TGw5NUlEMGdUV0YwYUM1aGRHRnVNaWhoTENCeUtTa2dPaUFvZEdocGN5NWZlQ0E5SUUxaGRHZ3VZWFJoYmpJb0xXZ3NJR1lwTENCMGFHbHpMbDk1SUQwZ01DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVSWFZzWlhJNklDNXpaWFJHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvS1NCbGJtTnZkVzUwWlhKbFpDQmhiaUIxYm10dWIzZHVJRzl5WkdWeU9pQWlJQ3NnZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl2Y21SbGNpQTlJSFFzSUc0Z1BUMDlJQ0V3SUNZbUlIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFSZFdGMFpYSnVhVzl1S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWDJ3dWJXRnJaVkp2ZEdGMGFXOXVSbkp2YlZGMVlYUmxjbTVwYjI0b1pTa3NJSFJvYVhNdWMyVjBSbkp2YlZKdmRHRjBhVzl1VFdGMGNtbDRLRjlzTENCMExDQnVLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFXWldOMGIzSXpLR1VzSUhRZ1BTQjBhR2x6TGw5dmNtUmxjaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2hsTG5nc0lHVXVlU3dnWlM1NkxDQjBLVHNLSUNBZ0lIMEtJQ0FnSUhKbGIzSmtaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTmJDNXpaWFJHY205dFJYVnNaWElvZEdocGN5a3NJSFJvYVhNdWMyVjBSbkp2YlZGMVlYUmxjbTVwYjI0b1RXd3NJR1VwT3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWZlQ0E5UFQwZ2RHaHBjeTVmZUNBbUppQmxMbDk1SUQwOVBTQjBhR2x6TGw5NUlDWW1JR1V1WDNvZ1BUMDlJSFJvYVhNdVgzb2dKaVlnWlM1ZmIzSmtaWElnUFQwOUlIUm9hWE11WDI5eVpHVnlPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVRnljbUY1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBOUlHVmJNRjBzSUhSb2FYTXVYM2tnUFNCbFd6RmRMQ0IwYUdsekxsOTZJRDBnWlZzeVhTd2daVnN6WFNBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwYUdsekxsOXZjbVJsY2lBOUlHVmJNMTBwTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBGeWNtRjVLR1VnUFNCYlhTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pWdDBYU0E5SUhSb2FYTXVYM2dzSUdWYmRDQXJJREZkSUQwZ2RHaHBjeTVmZVN3Z1pWdDBJQ3NnTWwwZ1BTQjBhR2x6TGw5NkxDQmxXM1FnS3lBelhTQTlJSFJvYVhNdVgyOXlaR1Z5TENCbE93b2dJQ0FnZlFvZ0lDQWdkRzlXWldOMGIzSXpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBL0lHVXVjMlYwS0hSb2FYTXVYM2dzSUhSb2FYTXVYM2tzSUhSb2FYTXVYM29wSURvZ2JtVjNJRTBvZEdocGN5NWZlQ3dnZEdocGN5NWZlU3dnZEdocGN5NWZlaWs3Q2lBZ0lDQjlDaUFnSUNCZmIyNURhR0Z1WjJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05ySUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lGOXZia05vWVc1blpVTmhiR3hpWVdOcktDa2dlMzBLZlRzS1dtNHVjSEp2ZEc5MGVYQmxMbWx6UlhWc1pYSWdQU0FoTURzS1dtNHVSR1ZtWVhWc2RFOXlaR1Z5SUQwZ0lsaFpXaUk3Q2xwdUxsSnZkR0YwYVc5dVQzSmtaWEp6SUQwZ1d3b2dJQ0FnSWxoWldpSXNDaUFnSUNBaVdWcFlJaXdLSUNBZ0lDSmFXRmtpTEFvZ0lDQWdJbGhhV1NJc0NpQWdJQ0FpV1ZoYUlpd0tJQ0FnSUNKYVdWZ2lDbDA3Q25aaGNpQktjeUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWE5ySUQwZ01Uc0tJQ0FnSUgwS0lDQWdJSE5sZENobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlYTnJJRDBnS0RFZ1BEd2daU0I4SURBcElENCtQaUF3T3dvZ0lDQWdmUW9nSUNBZ1pXNWhZbXhsS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGMyc2dmRDBnTVNBOFBDQmxJSHdnTURzS0lDQWdJSDBLSUNBZ0lHVnVZV0pzWlVGc2JDZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWhjMnNnUFNBdE1Uc0tJQ0FnSUgwS0lDQWdJSFJ2WjJkc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWE5ySUY0OUlERWdQRHdnWlNCOElEQTdDaUFnSUNCOUNpQWdJQ0JrYVhOaFlteGxLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoYzJzZ0pqMGdmaWd4SUR3OElHVWdmQ0F3S1RzS0lDQWdJSDBLSUNBZ0lHUnBjMkZpYkdWQmJHd29LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWE5ySUQwZ01Ec0tJQ0FnSUgwS0lDQWdJSFJsYzNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQW9kR2hwY3k1dFlYTnJJQ1lnWlM1dFlYTnJLU0FoUFQwZ01Ec0tJQ0FnSUgwS0lDQWdJR2x6Ulc1aFlteGxaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNoMGFHbHpMbTFoYzJzZ0ppQW9NU0E4UENCbElId2dNQ2twSUNFOVBTQXdPd29nSUNBZ2ZRcDlMQ0J5WmlBOUlEQXNJR0pzSUQwZ2JtVjNJRTBzSUc5cElEMGdibVYzSUdkMExDQlJkQ0E5SUc1bGR5QndaU3dnSkhJZ1BTQnVaWGNnVFN3Z1dta2dQU0J1WlhjZ1RTd2djMllnUFNCdVpYY2dUU3dnYjJZZ1BTQnVaWGNnWjNRc0lIZHNJRDBnYm1WM0lFMG9NU3dnTUN3Z01Da3NJRk5zSUQwZ2JtVjNJRTBvTUN3Z01Td2dNQ2tzSUZSc0lEMGdibVYzSUUwb01Dd2dNQ3dnTVNrc0lHRm1JRDBnZXdvZ0lDQWdkSGx3WlRvZ0ltRmtaR1ZrSWdwOUxDQkZiQ0E5SUhzS0lDQWdJSFI1Y0dVNklDSnlaVzF2ZG1Wa0lncDlMQ0JPWlNBOUlHTnNZWE56SUdWNGRHVnVaSE1nUlc0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2gwYUdsekxDQWlhV1FpTENCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnlaaXNyQ2lBZ0lDQWdJQ0FnZlNrc0lIUm9hWE11ZFhWcFpDQTlJRVYwS0Nrc0lIUm9hWE11Ym1GdFpTQTlJQ0lpTENCMGFHbHpMblI1Y0dVZ1BTQWlUMkpxWldOME0wUWlMQ0IwYUdsekxuQmhjbVZ1ZENBOUlHNTFiR3dzSUhSb2FYTXVZMmhwYkdSeVpXNGdQU0JiWFN3Z2RHaHBjeTUxY0NBOUlFNWxMa1JsWm1GMWJIUlZjQzVqYkc5dVpTZ3BPd29nSUNBZ0lDQWdJR3hsZENCbElEMGdibVYzSUUwc0lIUWdQU0J1WlhjZ1dtNHNJRzRnUFNCdVpYY2daM1FzSUdrZ1BTQnVaWGNnVFNneExDQXhMQ0F4S1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCeUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCdUxuTmxkRVp5YjIxRmRXeGxjaWgwTENBaE1TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzhvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1YzJWMFJuSnZiVkYxWVhSbGNtNXBiMjRvYml3Z2RtOXBaQ0F3TENBaE1TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFF1WDI5dVEyaGhibWRsS0hJcExDQnVMbDl2YmtOb1lXNW5aU2h2S1N3Z1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUnBaWE1vZEdocGN5d2dld29nSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVabWxuZFhKaFlteGxPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdWRXMWxjbUZpYkdVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHVUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjbTkwWVhScGIyNDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym1acFozVnlZV0pzWlRvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiblZ0WlhKaFlteGxPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUIwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhGMVlYUmxjbTVwYjI0NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibVpwWjNWeVlXSnNaVG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJuVnRaWEpoWW14bE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5qWVd4bE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjVtYVdkMWNtRmliR1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNTFiV1Z5WVdKc1pUb2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dhUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J0YjJSbGJGWnBaWGROWVhSeWFYZzZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnY0dVS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtOXliV0ZzVFdGMGNtbDRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUd4MENpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTV0WVhSeWFYZ2dQU0J1WlhjZ2NHVXNJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUWdQU0J1WlhjZ2NHVXNJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlFNWxMa1JsWm1GMWJIUk5ZWFJ5YVhoQmRYUnZWWEJrWVhSbExDQjBhR2x6TG0xaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVzWVhsbGNuTWdQU0J1WlhjZ1NuTXNJSFJvYVhNdWRtbHphV0pzWlNBOUlDRXdMQ0IwYUdsekxtTmhjM1JUYUdGa2IzY2dQU0FoTVN3Z2RHaHBjeTV5WldObGFYWmxVMmhoWkc5M0lEMGdJVEVzSUhSb2FYTXVabkoxYzNSMWJVTjFiR3hsWkNBOUlDRXdMQ0IwYUdsekxuSmxibVJsY2s5eVpHVnlJRDBnTUN3Z2RHaHBjeTVoYm1sdFlYUnBiMjV6SUQwZ1cxMHNJSFJvYVhNdWRYTmxja1JoZEdFZ1BTQjdmVHNLSUNBZ0lIMEtJQ0FnSUc5dVFtVm1iM0psVW1WdVpHVnlLQ2tnZTMwS0lDQWdJRzl1UVdaMFpYSlNaVzVrWlhJb0tTQjdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdKaVlnZEdocGN5NTFjR1JoZEdWTllYUnlhWGdvS1N3Z2RHaHBjeTV0WVhSeWFYZ3VjSEpsYlhWc2RHbHdiSGtvWlNrc0lIUm9hWE11YldGMGNtbDRMbVJsWTI5dGNHOXpaU2gwYUdsekxuQnZjMmwwYVc5dUxDQjBhR2x6TG5GMVlYUmxjbTVwYjI0c0lIUm9hWE11YzJOaGJHVXBPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbFJkV0YwWlhKdWFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXhkV0YwWlhKdWFXOXVMbkJ5WlcxMWJIUnBjR3g1S0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbTkwWVhScGIyNUdjbTl0UVhocGMwRnVaMnhsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuRjFZWFJsY201cGIyNHVjMlYwUm5KdmJVRjRhWE5CYm1kc1pTaGxMQ0IwS1RzS0lDQWdJSDBLSUNBZ0lITmxkRkp2ZEdGMGFXOXVSbkp2YlVWMWJHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkYxWVhSbGNtNXBiMjR1YzJWMFJuSnZiVVYxYkdWeUtHVXNJQ0V3S1RzS0lDQWdJSDBLSUNBZ0lITmxkRkp2ZEdGMGFXOXVSbkp2YlUxaGRISnBlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG5ObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDaGxLVHNLSUNBZ0lIMEtJQ0FnSUhObGRGSnZkR0YwYVc5dVJuSnZiVkYxWVhSbGNtNXBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Y1hWaGRHVnlibWx2Ymk1amIzQjVLR1VwT3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsVDI1QmVHbHpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2Iya3VjMlYwUm5KdmJVRjRhWE5CYm1kc1pTaGxMQ0IwS1N3Z2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG0xMWJIUnBjR3g1S0c5cEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISnZkR0YwWlU5dVYyOXliR1JCZUdsektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYjJrdWMyVjBSbkp2YlVGNGFYTkJibWRzWlNobExDQjBLU3dnZEdocGN5NXhkV0YwWlhKdWFXOXVMbkJ5WlcxMWJIUnBjR3g1S0c5cEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISnZkR0YwWlZnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KdmRHRjBaVTl1UVhocGN5aDNiQ3dnWlNrN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eWIzUmhkR1ZQYmtGNGFYTW9VMndzSUdVcE93b2dJQ0FnZlFvZ0lDQWdjbTkwWVhSbFdpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtOTBZWFJsVDI1QmVHbHpLRlJzTENCbEtUc0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaVTl1UVhocGN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdKc0xtTnZjSGtvWlNrdVlYQndiSGxSZFdGMFpYSnVhVzl1S0hSb2FYTXVjWFZoZEdWeWJtbHZiaWtzSUhSb2FYTXVjRzl6YVhScGIyNHVZV1JrS0dKc0xtMTFiSFJwY0d4NVUyTmhiR0Z5S0hRcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6YkdGMFpWZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuUnlZVzV6YkdGMFpVOXVRWGhwY3loM2JDd2daU2s3Q2lBZ0lDQjlDaUFnSUNCMGNtRnVjMnhoZEdWWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MGNtRnVjMnhoZEdWUGJrRjRhWE1vVTJ3c0lHVXBPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTnNZWFJsV2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEhKaGJuTnNZWFJsVDI1QmVHbHpLRlJzTENCbEtUc0tJQ0FnSUgwS0lDQWdJR3h2WTJGc1ZHOVhiM0pzWkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdmUW9nSUNBZ2QyOXliR1JVYjB4dlkyRnNLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1aGNIQnNlVTFoZEhKcGVEUW9VWFF1WTI5d2VTaDBhR2x6TG0xaGRISnBlRmR2Y214a0tTNXBiblpsY25Rb0tTazdDaUFnSUNCOUNpQWdJQ0JzYjI5clFYUW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR1V1YVhOV1pXTjBiM0l6SUQ4Z0pISXVZMjl3ZVNobEtTQTZJQ1J5TG5ObGRDaGxMQ0IwTENCdUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11Y0dGeVpXNTBPd29nSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lUQXNJQ0V4S1N3Z1dta3VjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hSb2FYTXViV0YwY21sNFYyOXliR1FwTENCMGFHbHpMbWx6UTJGdFpYSmhJSHg4SUhSb2FYTXVhWE5NYVdkb2RDQS9JRkYwTG14dmIydEJkQ2hhYVN3Z0pISXNJSFJvYVhNdWRYQXBJRG9nVVhRdWJHOXZhMEYwS0NSeUxDQmFhU3dnZEdocGN5NTFjQ2tzSUhSb2FYTXVjWFZoZEdWeWJtbHZiaTV6WlhSR2NtOXRVbTkwWVhScGIyNU5ZWFJ5YVhnb1VYUXBMQ0JwSUNZbUlDaFJkQzVsZUhSeVlXTjBVbTkwWVhScGIyNG9hUzV0WVhSeWFYaFhiM0pzWkNrc0lHOXBMbk5sZEVaeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNoUmRDa3NJSFJvYVhNdWNYVmhkR1Z5Ym1sdmJpNXdjbVZ0ZFd4MGFYQnNlU2h2YVM1cGJuWmxjblFvS1NrcE93b2dJQ0FnZlFvZ0lDQWdZV1JrS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWVhKbmRXMWxiblJ6TG14bGJtZDBhQ0ErSURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Ec2dkQ0E4SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUhRckt5bDBhR2x6TG1Ga1pDaGhjbWQxYldWdWRITmJkRjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnUFQwOUlIUm9hWE1nUHlBb1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUMkpxWldOME0wUXVZV1JrT2lCdlltcGxZM1FnWTJGdUozUWdZbVVnWVdSa1pXUWdZWE1nWVNCamFHbHNaQ0J2WmlCcGRITmxiR1l1SWl3Z1pTa3NJSFJvYVhNcElEb2dLR1VnSmlZZ1pTNXBjMDlpYW1WamRETkVJRDhnS0dVdWNHRnlaVzUwSUNFOVBTQnVkV3hzSUNZbUlHVXVjR0Z5Wlc1MExuSmxiVzkyWlNobEtTd2daUzV3WVhKbGJuUWdQU0IwYUdsekxDQjBhR2x6TG1Ob2FXeGtjbVZ1TG5CMWMyZ29aU2tzSUdVdVpHbHpjR0YwWTJoRmRtVnVkQ2hoWmlrcElEb2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VDJKcVpXTjBNMFF1WVdSa09pQnZZbXBsWTNRZ2JtOTBJR0Z1SUdsdWMzUmhibU5sSUc5bUlGUklVa1ZGTGs5aWFtVmpkRE5FTGlJc0lHVXBMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJSEpsYlc5MlpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ1BpQXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQmhjbWQxYldWdWRITXViR1Z1WjNSb095QnVLeXNwZEdocGN5NXlaVzF2ZG1Vb1lYSm5kVzFsYm5SelcyNWRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1amFHbHNaSEpsYmk1cGJtUmxlRTltS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDRTlQU0F0TVNBbUppQW9aUzV3WVhKbGJuUWdQU0J1ZFd4c0xDQjBhR2x6TG1Ob2FXeGtjbVZ1TG5Od2JHbGpaU2gwTENBeEtTd2daUzVrYVhOd1lYUmphRVYyWlc1MEtFVnNLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5WlcxdmRtVkdjbTl0VUdGeVpXNTBLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NXdZWEpsYm5RN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ0lUMDlJRzUxYkd3Z0ppWWdaUzV5WlcxdmRtVW9kR2hwY3lrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHVmhjaWdwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdVZ1BTQXdPeUJsSUR3Z2RHaHBjeTVqYUdsc1pISmxiaTVzWlc1bmRHZzdJR1VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1amFHbHNaSEpsYmx0bFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1d1lYSmxiblFnUFNCdWRXeHNMQ0IwTG1ScGMzQmhkR05vUlhabGJuUW9SV3dwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWphR2xzWkhKbGJpNXNaVzVuZEdnZ1BTQXdMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWFIwWVdOb0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Dd2dJVEVwTENCUmRDNWpiM0I1S0hSb2FYTXViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwTENCbExuQmhjbVZ1ZENBaFBUMGdiblZzYkNBbUppQW9aUzV3WVhKbGJuUXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEFzSUNFeEtTd2dVWFF1YlhWc2RHbHdiSGtvWlM1d1lYSmxiblF1YldGMGNtbDRWMjl5YkdRcEtTd2daUzVoY0hCc2VVMWhkSEpwZURRb1VYUXBMQ0IwYUdsekxtRmtaQ2hsS1N3Z1pTNTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNU3dnSVRBcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBUMkpxWldOMFFubEpaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwVDJKcVpXTjBRbmxRY205d1pYSjBlU2dpYVdRaUxDQmxLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFOWlhbVZqZEVKNVRtRnRaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwVDJKcVpXTjBRbmxRY205d1pYSjBlU2dpYm1GdFpTSXNJR1VwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBUMkpxWldOMFFubFFjbTl3WlhKMGVTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhOYlpWMGdQVDA5SUhRcElISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwYUdsekxtTm9hV3hrY21WdUxteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnZEdocGN5NWphR2xzWkhKbGJsdHVYUzVuWlhSUFltcGxZM1JDZVZCeWIzQmxjblI1S0dVc0lIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ieUFoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnYnpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm5aWFJYYjNKc1pGQnZjMmwwYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Dd2dJVEVwTENCbExuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWgwYUdsekxtMWhkSEpwZUZkdmNteGtLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGZHZjbXhrVVhWaGRHVnlibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvSVRBc0lDRXhLU3dnZEdocGN5NXRZWFJ5YVhoWGIzSnNaQzVrWldOdmJYQnZjMlVvV21rc0lHVXNJSE5tS1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR2RsZEZkdmNteGtVMk5oYkdVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0NFd0xDQWhNU2tzSUhSb2FYTXViV0YwY21sNFYyOXliR1F1WkdWamIyMXdiM05sS0ZwcExDQnZaaXdnWlNrc0lHVTdDaUFnSUNCOUNpQWdJQ0JuWlhSWGIzSnNaRVJwY21WamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2doTUN3Z0lURXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1dFlYUnlhWGhYYjNKc1pDNWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXpaWFFvZEZzNFhTd2dkRnM1WFN3Z2RGc3hNRjBwTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnZlFvZ0lDQWdjbUY1WTJGemRDZ3BJSHQ5Q2lBZ0lDQjBjbUYyWlhKelpTaGxLU0I3Q2lBZ0lDQWdJQ0FnWlNoMGFHbHpLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyaHBiR1J5Wlc0N0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlIUXViR1Z1WjNSb095QnVJRHdnYVRzZ2Jpc3JLWFJiYmwwdWRISmhkbVZ5YzJVb1pTazdDaUFnSUNCOUNpQWdJQ0IwY21GMlpYSnpaVlpwYzJsaWJHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5acGMybGliR1VnUFQwOUlDRXhLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdaU2gwYUdsektUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJocGJHUnlaVzQ3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUhRdWJHVnVaM1JvT3lCdUlEd2dhVHNnYmlzcktYUmJibDB1ZEhKaGRtVnljMlZXYVhOcFlteGxLR1VwT3dvZ0lDQWdmUW9nSUNBZ2RISmhkbVZ5YzJWQmJtTmxjM1J2Y25Nb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1d1lYSmxiblE3Q2lBZ0lDQWdJQ0FnZENBaFBUMGdiblZzYkNBbUppQW9aU2gwS1N3Z2RDNTBjbUYyWlhKelpVRnVZMlZ6ZEc5eWN5aGxLU2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1ZOWVhSeWFYZ29LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWFJ5YVhndVkyOXRjRzl6WlNoMGFHbHpMbkJ2YzJsMGFXOXVMQ0IwYUdsekxuRjFZWFJsY201cGIyNHNJSFJvYVhNdWMyTmhiR1VwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnSmlZZ2RHaHBjeTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2dLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU0I4ZkNCbEtTQW1KaUFvZEdocGN5NXdZWEpsYm5RZ1BUMDlJRzUxYkd3Z1B5QjBhR2x6TG0xaGRISnBlRmR2Y214a0xtTnZjSGtvZEdocGN5NXRZWFJ5YVhncElEb2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pDNXRkV3gwYVhCc2VVMWhkSEpwWTJWektIUm9hWE11Y0dGeVpXNTBMbTFoZEhKcGVGZHZjbXhrTENCMGFHbHpMbTFoZEhKcGVDa3NJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU0E5SUNFeExDQmxJRDBnSVRBcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYUdsc1pISmxianNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGRGdHVYUzUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlZkdmNteGtUV0YwY21sNEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVjR0Z5Wlc1ME93b2dJQ0FnSUNBZ0lHbG1JQ2hsSUQwOVBTQWhNQ0FtSmlCdUlDRTlQU0J1ZFd4c0lDWW1JRzR1ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvSVRBc0lDRXhLU3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElDWW1JSFJvYVhNdWRYQmtZWFJsVFdGMGNtbDRLQ2tzSUhSb2FYTXVjR0Z5Wlc1MElEMDlQU0J1ZFd4c0lEOGdkR2hwY3k1dFlYUnlhWGhYYjNKc1pDNWpiM0I1S0hSb2FYTXViV0YwY21sNEtTQTZJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aDBhR2x6TG5CaGNtVnVkQzV0WVhSeWFYaFhiM0pzWkN3Z2RHaHBjeTV0WVhSeWFYZ3BMQ0IwSUQwOVBTQWhNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WTJocGJHUnlaVzQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQnBMbXhsYm1kMGFEc2djaUE4SUc4N0lISXJLeWxwVzNKZExuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXhMQ0FoTUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1VnUFQwOUlIWnZhV1FnTUNCOGZDQjBlWEJsYjJZZ1pTQTlQU0FpYzNSeWFXNW5JaXdnYmlBOUlIdDlPd29nSUNBZ0lDQWdJSFFnSmlZZ0tHVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxiMjFsZEhKcFpYTTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnRZWFJsY21saGJITTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwZFhKbGN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHRZV2RsY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxjem9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5yWld4bGRHOXVjem9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJR0Z1YVcxaGRHbHZibk02SUh0OUNpQWdJQ0FnSUNBZ2ZTd2diaTV0WlhSaFpHRjBZU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5YzJsdmJqb2dOQzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVQySnFaV04wSWl3S0lDQWdJQ0FnSUNBZ0lDQWdaMlZ1WlhKaGRHOXlPaUFpVDJKcVpXTjBNMFF1ZEc5S1UwOU9JZ29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZTMwN0NpQWdJQ0FnSUNBZ2FTNTFkV2xrSUQwZ2RHaHBjeTUxZFdsa0xDQnBMblI1Y0dVZ1BTQjBhR2x6TG5SNWNHVXNJSFJvYVhNdWJtRnRaU0FoUFQwZ0lpSWdKaVlnS0drdWJtRnRaU0E5SUhSb2FYTXVibUZ0WlNrc0lIUm9hWE11WTJGemRGTm9ZV1J2ZHlBOVBUMGdJVEFnSmlZZ0tHa3VZMkZ6ZEZOb1lXUnZkeUE5SUNFd0tTd2dkR2hwY3k1eVpXTmxhWFpsVTJoaFpHOTNJRDA5UFNBaE1DQW1KaUFvYVM1eVpXTmxhWFpsVTJoaFpHOTNJRDBnSVRBcExDQjBhR2x6TG5acGMybGliR1VnUFQwOUlDRXhJQ1ltSUNocExuWnBjMmxpYkdVZ1BTQWhNU2tzSUhSb2FYTXVabkoxYzNSMWJVTjFiR3hsWkNBOVBUMGdJVEVnSmlZZ0tHa3VabkoxYzNSMWJVTjFiR3hsWkNBOUlDRXhLU3dnZEdocGN5NXlaVzVrWlhKUGNtUmxjaUFoUFQwZ01DQW1KaUFvYVM1eVpXNWtaWEpQY21SbGNpQTlJSFJvYVhNdWNtVnVaR1Z5VDNKa1pYSXBMQ0JLVTA5T0xuTjBjbWx1WjJsbWVTaDBhR2x6TG5WelpYSkVZWFJoS1NBaFBUMGdJbnQ5SWlBbUppQW9hUzUxYzJWeVJHRjBZU0E5SUhSb2FYTXVkWE5sY2tSaGRHRXBMQ0JwTG14aGVXVnljeUE5SUhSb2FYTXViR0Y1WlhKekxtMWhjMnNzSUdrdWJXRjBjbWw0SUQwZ2RHaHBjeTV0WVhSeWFYZ3VkRzlCY25KaGVTZ3BMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BUMDlJQ0V4SUNZbUlDaHBMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVNrc0lIUm9hWE11YVhOSmJuTjBZVzVqWldSTlpYTm9JQ1ltSUNocExuUjVjR1VnUFNBaVNXNXpkR0Z1WTJWa1RXVnphQ0lzSUdrdVkyOTFiblFnUFNCMGFHbHpMbU52ZFc1MExDQnBMbWx1YzNSaGJtTmxUV0YwY21sNElEMGdkR2hwY3k1cGJuTjBZVzVqWlUxaGRISnBlQzUwYjBwVFQwNG9LU3dnZEdocGN5NXBibk4wWVc1alpVTnZiRzl5SUNFOVBTQnVkV3hzSUNZbUlDaHBMbWx1YzNSaGJtTmxRMjlzYjNJZ1BTQjBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSXVkRzlLVTA5T0tDa3BLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ5S0dFc0lHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGYmJDNTFkV2xrWFNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hoVzJ3dWRYVnBaRjBnUFNCc0xuUnZTbE5QVGlobEtTa3NJR3d1ZFhWcFpEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhWE5UWTJWdVpTa2dkR2hwY3k1aVlXTnJaM0p2ZFc1a0lDWW1JQ2gwYUdsekxtSmhZMnRuY205MWJtUXVhWE5EYjJ4dmNpQS9JR2t1WW1GamEyZHliM1Z1WkNBOUlIUm9hWE11WW1GamEyZHliM1Z1WkM1MGIwcFRUMDRvS1NBNklIUm9hWE11WW1GamEyZHliM1Z1WkM1cGMxUmxlSFIxY21VZ0ppWWdLR2t1WW1GamEyZHliM1Z1WkNBOUlIUm9hWE11WW1GamEyZHliM1Z1WkM1MGIwcFRUMDRvWlNrdWRYVnBaQ2twTENCMGFHbHpMbVZ1ZG1seWIyNXRaVzUwSUNZbUlIUm9hWE11Wlc1MmFYSnZibTFsYm5RdWFYTlVaWGgwZFhKbElDWW1JQ2hwTG1WdWRtbHliMjV0Wlc1MElEMGdkR2hwY3k1bGJuWnBjbTl1YldWdWRDNTBiMHBUVDA0b1pTa3VkWFZwWkNrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb2RHaHBjeTVwYzAxbGMyZ2dmSHdnZEdocGN5NXBjMHhwYm1VZ2ZId2dkR2hwY3k1cGMxQnZhVzUwY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwTG1kbGIyMWxkSEo1SUQwZ2NpaGxMbWRsYjIxbGRISnBaWE1zSUhSb2FYTXVaMlZ2YldWMGNua3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVaMlZ2YldWMGNua3VjR0Z5WVcxbGRHVnljenNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0VnSVQwOUlIWnZhV1FnTUNBbUppQmhMbk5vWVhCbGN5QWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR0V1YzJoaGNHVnpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29iQ2twSUdadmNpaHNaWFFnWXlBOUlEQXNJR2dnUFNCc0xteGxibWQwYURzZ1l5QThJR2c3SUdNckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0JzVzJOZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSElvWlM1emFHRndaWE1zSUhVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0J5S0dVdWMyaGhjR1Z6TENCc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1cGMxTnJhVzV1WldSTlpYTm9JQ1ltSUNocExtSnBibVJOYjJSbElEMGdkR2hwY3k1aWFXNWtUVzlrWlN3Z2FTNWlhVzVrVFdGMGNtbDRJRDBnZEdocGN5NWlhVzVrVFdGMGNtbDRMblJ2UVhKeVlYa29LU3dnZEdocGN5NXphMlZzWlhSdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUNoeUtHVXVjMnRsYkdWMGIyNXpMQ0IwYUdsekxuTnJaV3hsZEc5dUtTd2dhUzV6YTJWc1pYUnZiaUE5SUhSb2FYTXVjMnRsYkdWMGIyNHVkWFZwWkNrcExDQjBhR2x6TG0xaGRHVnlhV0ZzSUNFOVBTQjJiMmxrSURBcElHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtIUm9hWE11YldGMFpYSnBZV3dwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJREFzSUdNZ1BTQjBhR2x6TG0xaGRHVnlhV0ZzTG14bGJtZDBhRHNnYkNBOElHTTdJR3dyS3lsaExuQjFjMmdvY2lobExtMWhkR1Z5YVdGc2N5d2dkR2hwY3k1dFlYUmxjbWxoYkZ0c1hTa3BPd29nSUNBZ0lDQWdJQ0FnSUNCcExtMWhkR1Z5YVdGc0lEMGdZVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhUzV0WVhSbGNtbGhiQ0E5SUhJb1pTNXRZWFJsY21saGJITXNJSFJvYVhNdWJXRjBaWEpwWVd3cE93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtTm9hV3hrY21WdUxteGxibWQwYUNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTNWphR2xzWkhKbGJpQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdQU0F3T3lCaElEd2dkR2hwY3k1amFHbHNaSEpsYmk1c1pXNW5kR2c3SUdFckt5bHBMbU5vYVd4a2NtVnVMbkIxYzJnb2RHaHBjeTVqYUdsc1pISmxibHRoWFM1MGIwcFRUMDRvWlNrdWIySnFaV04wS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVlXNXBiV0YwYVc5dWN5NXNaVzVuZEdnZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa3VZVzVwYldGMGFXOXVjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd095QmhJRHdnZEdocGN5NWhibWx0WVhScGIyNXpMbXhsYm1kMGFEc2dZU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnZEdocGN5NWhibWx0WVhScGIyNXpXMkZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1aGJtbHRZWFJwYjI1ekxuQjFjMmdvY2lobExtRnVhVzFoZEdsdmJuTXNJR3dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2RDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc4b1pTNW5aVzl0WlhSeWFXVnpLU3dnYkNBOUlHOG9aUzV0WVhSbGNtbGhiSE1wTENCaklEMGdieWhsTG5SbGVIUjFjbVZ6S1N3Z2FDQTlJRzhvWlM1cGJXRm5aWE1wTENCMUlEMGdieWhsTG5Ob1lYQmxjeWtzSUdRZ1BTQnZLR1V1YzJ0bGJHVjBiMjV6S1N3Z1ppQTlJRzhvWlM1aGJtbHRZWFJwYjI1ektUc0tJQ0FnSUNBZ0lDQWdJQ0FnWVM1c1pXNW5kR2dnUGlBd0lDWW1JQ2h1TG1kbGIyMWxkSEpwWlhNZ1BTQmhLU3dnYkM1c1pXNW5kR2dnUGlBd0lDWW1JQ2h1TG0xaGRHVnlhV0ZzY3lBOUlHd3BMQ0JqTG14bGJtZDBhQ0ErSURBZ0ppWWdLRzR1ZEdWNGRIVnlaWE1nUFNCaktTd2dhQzVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbWx0WVdkbGN5QTlJR2dwTENCMUxteGxibWQwYUNBK0lEQWdKaVlnS0c0dWMyaGhjR1Z6SUQwZ2RTa3NJR1F1YkdWdVozUm9JRDRnTUNBbUppQW9iaTV6YTJWc1pYUnZibk1nUFNCa0tTd2daaTVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbUZ1YVcxaGRHbHZibk1nUFNCbUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHViMkpxWldOMElEMGdhU3dnYmpzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdktHRXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUdsdUlHRXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQmhXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWc1pYUmxJR2d1YldWMFlXUmhkR0VzSUd3dWNIVnphQ2hvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6TENCbEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTd2dkQ0E5SUNFd0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVibUZ0WlNBOUlHVXVibUZ0WlN3Z2RHaHBjeTUxY0M1amIzQjVLR1V1ZFhBcExDQjBhR2x6TG5CdmMybDBhVzl1TG1OdmNIa29aUzV3YjNOcGRHbHZiaWtzSUhSb2FYTXVjbTkwWVhScGIyNHViM0prWlhJZ1BTQmxMbkp2ZEdGMGFXOXVMbTl5WkdWeUxDQjBhR2x6TG5GMVlYUmxjbTVwYjI0dVkyOXdlU2hsTG5GMVlYUmxjbTVwYjI0cExDQjBhR2x6TG5OallXeGxMbU52Y0hrb1pTNXpZMkZzWlNrc0lIUm9hWE11YldGMGNtbDRMbU52Y0hrb1pTNXRZWFJ5YVhncExDQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtTnZjSGtvWlM1dFlYUnlhWGhYYjNKc1pDa3NJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlHVXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJRDBnWlM1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxMQ0IwYUdsekxteGhlV1Z5Y3k1dFlYTnJJRDBnWlM1c1lYbGxjbk11YldGemF5d2dkR2hwY3k1MmFYTnBZbXhsSUQwZ1pTNTJhWE5wWW14bExDQjBhR2x6TG1OaGMzUlRhR0ZrYjNjZ1BTQmxMbU5oYzNSVGFHRmtiM2NzSUhSb2FYTXVjbVZqWldsMlpWTm9ZV1J2ZHlBOUlHVXVjbVZqWldsMlpWTm9ZV1J2ZHl3Z2RHaHBjeTVtY25WemRIVnRRM1ZzYkdWa0lEMGdaUzVtY25WemRIVnRRM1ZzYkdWa0xDQjBhR2x6TG5KbGJtUmxjazl5WkdWeUlEMGdaUzV5Wlc1a1pYSlBjbVJsY2l3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvWlM1MWMyVnlSR0YwWVNrcExDQjBJRDA5UFNBaE1Da2dabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJR1V1WTJocGJHUnlaVzR1YkdWdVozUm9PeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1V1WTJocGJHUnlaVzViYmwwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtLR2t1WTJ4dmJtVW9LU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFwOU93cE9aUzVFWldaaGRXeDBWWEFnUFNCdVpYY2dUU2d3TENBeExDQXdLVHNLVG1VdVJHVm1ZWFZzZEUxaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Ec0tUbVV1Y0hKdmRHOTBlWEJsTG1selQySnFaV04wTTBRZ1BTQWhNRHNLZG1GeUlFUjBJRDBnYm1WM0lFMHNJRXQwSUQwZ2JtVjNJRTBzSUVOdklEMGdibVYzSUUwc0lHVnVJRDBnYm1WM0lFMHNJR0ZwSUQwZ2JtVjNJRTBzSUd4cElEMGdibVYzSUUwc0lFRnNJRDBnYm1WM0lFMHNJRXh2SUQwZ2JtVjNJRTBzSUZKdklEMGdibVYzSUUwc0lGQnZJRDBnYm1WM0lFMHNJRzUwSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJOTENCMElEMGdibVYzSUUwc0lHNGdQU0J1WlhjZ1RTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1aElEMGdaU3dnZEdocGN5NWlJRDBnZEN3Z2RHaHBjeTVqSUQwZ2Jqc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm5aWFJPYjNKdFlXd29aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUdrdWMzVmlWbVZqZEc5eWN5aHVMQ0IwS1N3Z1JIUXVjM1ZpVm1WamRHOXljeWhsTENCMEtTd2dhUzVqY205emN5aEVkQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JwTG14bGJtZDBhRk54S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJZ1BpQXdJRDhnYVM1dGRXeDBhWEJzZVZOallXeGhjaWd4SUM4Z1RXRjBhQzV6Y1hKMEtISXBLU0E2SUdrdWMyVjBLREFzSURBc0lEQXBPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR2RsZEVKaGNubGpiMjl5WkNobExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQWdJQ0FnUkhRdWMzVmlWbVZqZEc5eWN5aHBMQ0IwS1N3Z1MzUXVjM1ZpVm1WamRHOXljeWh1TENCMEtTd2dRMjh1YzNWaVZtVmpkRzl5Y3lobExDQjBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRVIwTG1SdmRDaEVkQ2tzSUdFZ1BTQkVkQzVrYjNRb1MzUXBMQ0JzSUQwZ1JIUXVaRzkwS0VOdktTd2dZeUE5SUV0MExtUnZkQ2hMZENrc0lHZ2dQU0JMZEM1a2IzUW9RMjhwTENCMUlEMGdieUFxSUdNZ0xTQmhJQ29nWVRzS0lDQWdJQ0FnSUNCcFppQW9kU0E5UFQwZ01Da2djbVYwZFhKdUlISXVjMlYwS0MweUxDQXRNU3dnTFRFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ01TQXZJSFVzSUdZZ1BTQW9ZeUFxSUd3Z0xTQmhJQ29nYUNrZ0tpQmtMQ0J0SUQwZ0tHOGdLaUJvSUMwZ1lTQXFJR3dwSUNvZ1pEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2NpNXpaWFFvTVNBdElHWWdMU0J0TENCdExDQm1LVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJqYjI1MFlXbHVjMUJ2YVc1MEtHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUkNZWEo1WTI5dmNtUW9aU3dnZEN3Z2Jpd2dhU3dnWlc0cExDQmxiaTU0SUQ0OUlEQWdKaVlnWlc0dWVTQStQU0F3SUNZbUlHVnVMbmdnS3lCbGJpNTVJRHc5SURFN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1oyVjBWVllvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRFSmhjbmxqYjI5eVpDaGxMQ0IwTENCdUxDQnBMQ0JsYmlrc0lHd3VjMlYwS0RBc0lEQXBMQ0JzTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh5TENCbGJpNTRLU3dnYkM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYnl3Z1pXNHVlU2tzSUd3dVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0dFc0lHVnVMbm9wTENCc093b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHbHpSbkp2Ym5SR1lXTnBibWNvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCRWRDNXpkV0pXWldOMGIzSnpLRzRzSUhRcExDQkxkQzV6ZFdKV1pXTjBiM0p6S0dVc0lIUXBMQ0JFZEM1amNtOXpjeWhMZENrdVpHOTBLR2twSUR3Z01Ec0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZUzVqYjNCNUtHVXBMQ0IwYUdsekxtSXVZMjl3ZVNoMEtTd2dkR2hwY3k1akxtTnZjSGtvYmlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VUc5cGJuUnpRVzVrU1c1a2FXTmxjeWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZUzVqYjNCNUtHVmJkRjBwTENCMGFHbHpMbUl1WTI5d2VTaGxXMjVkS1N3Z2RHaHBjeTVqTG1OdmNIa29aVnRwWFNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UVhSMGNtbGlkWFJsUVc1a1NXNWthV05sY3lobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHVXNJSFFwTENCMGFHbHpMbUl1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQnVLU3dnZEdocGN5NWpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2FTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZUzVqYjNCNUtHVXVZU2tzSUhSb2FYTXVZaTVqYjNCNUtHVXVZaWtzSUhSb2FYTXVZeTVqYjNCNUtHVXVZeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSQmNtVmhLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJFZEM1emRXSldaV04wYjNKektIUm9hWE11WXl3Z2RHaHBjeTVpS1N3Z1MzUXVjM1ZpVm1WamRHOXljeWgwYUdsekxtRXNJSFJvYVhNdVlpa3NJRVIwTG1OeWIzTnpLRXQwS1M1c1pXNW5kR2dvS1NBcUlDNDFPd29nSUNBZ2ZRb2dJQ0FnWjJWMFRXbGtjRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbUZrWkZabFkzUnZjbk1vZEdocGN5NWhMQ0IwYUdsekxtSXBMbUZrWkNoMGFHbHpMbU1wTG0xMWJIUnBjR3g1VTJOaGJHRnlLREVnTHlBektUc0tJQ0FnSUgwS0lDQWdJR2RsZEU1dmNtMWhiQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MExtZGxkRTV2Y20xaGJDaDBhR2x6TG1Fc0lIUm9hWE11WWl3Z2RHaHBjeTVqTENCbEtUc0tJQ0FnSUgwS0lDQWdJR2RsZEZCc1lXNWxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1elpYUkdjbTl0UTI5d2JHRnVZWEpRYjJsdWRITW9kR2hwY3k1aExDQjBhR2x6TG1Jc0lIUm9hWE11WXlrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJDWVhKNVkyOXZjbVFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVkQzVuWlhSQ1lYSjVZMjl2Y21Rb1pTd2dkR2hwY3k1aExDQjBhR2x6TG1Jc0lIUm9hWE11WXl3Z2RDazdDaUFnSUNCOUNpQWdJQ0JuWlhSVlZpaGxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MExtZGxkRlZXS0dVc0lIUm9hWE11WVN3Z2RHaHBjeTVpTENCMGFHbHpMbU1zSUhRc0lHNHNJR2tzSUhJcE93b2dJQ0FnZlFvZ0lDQWdZMjl1ZEdGcGJuTlFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNTBMbU52Ym5SaGFXNXpVRzlwYm5Rb1pTd2dkR2hwY3k1aExDQjBhR2x6TG1Jc0lIUm9hWE11WXlrN0NpQWdJQ0I5Q2lBZ0lDQnBjMFp5YjI1MFJtRmphVzVuS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuUXVhWE5HY205dWRFWmhZMmx1WnloMGFHbHpMbUVzSUhSb2FYTXVZaXdnZEdocGN5NWpMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITkNiM2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtbHVkR1Z5YzJWamRITlVjbWxoYm1kc1pTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHTnNiM05sYzNSUWIybHVkRlJ2VUc5cGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVoTENCcElEMGdkR2hwY3k1aUxDQnlJRDBnZEdocGN5NWpMQ0J2TENCaE93b2dJQ0FnSUNBZ0lHRnBMbk4xWWxabFkzUnZjbk1vYVN3Z2Jpa3NJR3hwTG5OMVlsWmxZM1J2Y25Nb2Npd2diaWtzSUV4dkxuTjFZbFpsWTNSdmNuTW9aU3dnYmlrN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCaGFTNWtiM1FvVEc4cExDQmpJRDBnYkdrdVpHOTBLRXh2S1RzS0lDQWdJQ0FnSUNCcFppQW9iQ0E4UFNBd0lDWW1JR01nUEQwZ01Da2djbVYwZFhKdUlIUXVZMjl3ZVNodUtUc0tJQ0FnSUNBZ0lDQlNieTV6ZFdKV1pXTjBiM0p6S0dVc0lHa3BPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdZV2t1Wkc5MEtGSnZLU3dnZFNBOUlHeHBMbVJ2ZENoU2J5azdDaUFnSUNBZ0lDQWdhV1lnS0dnZ1BqMGdNQ0FtSmlCMUlEdzlJR2dwSUhKbGRIVnliaUIwTG1OdmNIa29hU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0JzSUNvZ2RTQXRJR2dnS2lCak93b2dJQ0FnSUNBZ0lHbG1JQ2hrSUR3OUlEQWdKaVlnYkNBK1BTQXdJQ1ltSUdnZ1BEMGdNQ2tnY21WMGRYSnVJRzhnUFNCc0lDOGdLR3dnTFNCb0tTd2dkQzVqYjNCNUtHNHBMbUZrWkZOallXeGxaRlpsWTNSdmNpaGhhU3dnYnlrN0NpQWdJQ0FnSUNBZ1VHOHVjM1ZpVm1WamRHOXljeWhsTENCeUtUc0tJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlHRnBMbVJ2ZENoUWJ5a3NJRzBnUFNCc2FTNWtiM1FvVUc4cE93b2dJQ0FnSUNBZ0lHbG1JQ2h0SUQ0OUlEQWdKaVlnWmlBOFBTQnRLU0J5WlhSMWNtNGdkQzVqYjNCNUtISXBPd29nSUNBZ0lDQWdJR3hsZENCNElEMGdaaUFxSUdNZ0xTQnNJQ29nYlRzS0lDQWdJQ0FnSUNCcFppQW9lQ0E4UFNBd0lDWW1JR01nUGowZ01DQW1KaUJ0SUR3OUlEQXBJSEpsZEhWeWJpQmhJRDBnWXlBdklDaGpJQzBnYlNrc0lIUXVZMjl3ZVNodUtTNWhaR1JUWTJGc1pXUldaV04wYjNJb2JHa3NJR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnYUNBcUlHMGdMU0JtSUNvZ2RUc0tJQ0FnSUNBZ0lDQnBaaUFvZGlBOFBTQXdJQ1ltSUhVZ0xTQm9JRDQ5SURBZ0ppWWdaaUF0SUcwZ1BqMGdNQ2tnY21WMGRYSnVJRUZzTG5OMVlsWmxZM1J2Y25Nb2Npd2dhU2tzSUdFZ1BTQW9kU0F0SUdncElDOGdLSFVnTFNCb0lDc2dLR1lnTFNCdEtTa3NJSFF1WTI5d2VTaHBLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9RV3dzSUdFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JuSUQwZ01TQXZJQ2gySUNzZ2VDQXJJR1FwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2SUQwZ2VDQXFJR2NzSUdFZ1BTQmtJQ29nWnl3Z2RDNWpiM0I1S0c0cExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loaGFTd2dieWt1WVdSa1UyTmhiR1ZrVm1WamRHOXlLR3hwTENCaEtUc0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WVM1bGNYVmhiSE1vZEdocGN5NWhLU0FtSmlCbExtSXVaWEYxWVd4ektIUm9hWE11WWlrZ0ppWWdaUzVqTG1WeGRXRnNjeWgwYUdsekxtTXBPd29nSUNBZ2ZRcDlMQ0JzWmlBOUlEQXNJR1IwSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnBaQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHeG1LeXNLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUxZFdsa0lEMGdSWFFvS1N3Z2RHaHBjeTV1WVcxbElEMGdJaUlzSUhSb2FYTXVkSGx3WlNBOUlDSk5ZWFJsY21saGJDSXNJSFJvYVhNdVptOW5JRDBnSVRBc0lIUm9hWE11WW14bGJtUnBibWNnUFNCemNpd2dkR2hwY3k1emFXUmxJRDBnUVdrc0lIUm9hWE11ZG1WeWRHVjRRMjlzYjNKeklEMGdJVEVzSUhSb2FYTXViM0JoWTJsMGVTQTlJREVzSUhSb2FYTXVabTl5YldGMElEMGdZM1FzSUhSb2FYTXVkSEpoYm5Od1lYSmxiblFnUFNBaE1Td2dkR2hwY3k1aWJHVnVaRk55WXlBOUlFZGpMQ0IwYUdsekxtSnNaVzVrUkhOMElEMGdWbU1zSUhSb2FYTXVZbXhsYm1SRmNYVmhkR2x2YmlBOUlGOXBMQ0IwYUdsekxtSnNaVzVrVTNKalFXeHdhR0VnUFNCdWRXeHNMQ0IwYUdsekxtSnNaVzVrUkhOMFFXeHdhR0VnUFNCdWRXeHNMQ0IwYUdsekxtSnNaVzVrUlhGMVlYUnBiMjVCYkhCb1lTQTlJRzUxYkd3c0lIUm9hWE11WkdWd2RHaEdkVzVqSUQwZ1pXRXNJSFJvYVhNdVpHVndkR2hVWlhOMElEMGdJVEFzSUhSb2FYTXVaR1Z3ZEdoWGNtbDBaU0E5SUNFd0xDQjBhR2x6TG5OMFpXNWphV3hYY21sMFpVMWhjMnNnUFNBeU5UVXNJSFJvYVhNdWMzUmxibU5wYkVaMWJtTWdQU0JWWkN3Z2RHaHBjeTV6ZEdWdVkybHNVbVZtSUQwZ01Dd2dkR2hwY3k1emRHVnVZMmxzUm5WdVkwMWhjMnNnUFNBeU5UVXNJSFJvYVhNdWMzUmxibU5wYkVaaGFXd2dQU0IyYnl3Z2RHaHBjeTV6ZEdWdVkybHNXa1poYVd3Z1BTQjJieXdnZEdocGN5NXpkR1Z1WTJsc1dsQmhjM01nUFNCMmJ5d2dkR2hwY3k1emRHVnVZMmxzVjNKcGRHVWdQU0FoTVN3Z2RHaHBjeTVqYkdsd2NHbHVaMUJzWVc1bGN5QTlJRzUxYkd3c0lIUm9hWE11WTJ4cGNFbHVkR1Z5YzJWamRHbHZiaUE5SUNFeExDQjBhR2x6TG1Oc2FYQlRhR0ZrYjNkeklEMGdJVEVzSUhSb2FYTXVjMmhoWkc5M1UybGtaU0E5SUc1MWJHd3NJSFJvYVhNdVkyOXNiM0pYY21sMFpTQTlJQ0V3TENCMGFHbHpMbkJ5WldOcGMybHZiaUE5SUc1MWJHd3NJSFJvYVhNdWNHOXNlV2R2Yms5bVpuTmxkQ0E5SUNFeExDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJZ1BTQXdMQ0IwYUdsekxuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5QTlJREFzSUhSb2FYTXVaR2wwYUdWeWFXNW5JRDBnSVRFc0lIUm9hWE11WVd4d2FHRlViME52ZG1WeVlXZGxJRDBnSVRFc0lIUm9hWE11Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoSUQwZ0lURXNJSFJvYVhNdWRtbHphV0pzWlNBOUlDRXdMQ0IwYUdsekxuUnZibVZOWVhCd1pXUWdQU0FoTUN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUh0OUxDQjBhR2x6TG5abGNuTnBiMjRnUFNBd0xDQjBhR2x6TGw5aGJIQm9ZVlJsYzNRZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWjJWMElHRnNjR2hoVkdWemRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZllXeHdhR0ZVWlhOME93b2dJQ0FnZlFvZ0lDQWdjMlYwSUdGc2NHaGhWR1Z6ZENobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZllXeHdhR0ZVWlhOMElENGdNQ0FoUFNCbElENGdNQ0FtSmlCMGFHbHpMblpsY25OcGIyNHJLeXdnZEdocGN5NWZZV3h3YUdGVVpYTjBJRDBnWlRzS0lDQWdJSDBLSUNBZ0lHOXVRblZwYkdRb0tTQjdmUW9nSUNBZ2IyNUNaV1p2Y21WU1pXNWtaWElvS1NCN2ZRb2dJQ0FnYjI1Q1pXWnZjbVZEYjIxd2FXeGxLQ2tnZTMwS0lDQWdJR04xYzNSdmJWQnliMmR5WVcxRFlXTm9aVXRsZVNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2YmtKbFptOXlaVU52YlhCcGJHVXVkRzlUZEhKcGJtY29LVHNLSUNBZ0lIMEtJQ0FnSUhObGRGWmhiSFZsY3lobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dabTl5S0d4bGRDQjBJR2x1SUdVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1ZiZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUlEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMFpYSnBZV3c2SUNjaUlDc2dkQ0FySUNJbklIQmhjbUZ0WlhSbGNpQnBjeUIxYm1SbFptbHVaV1F1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNTBhVzUxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kQ0E5UFQwZ0luTm9ZV1JwYm1jaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMaUlnS3lCMGFHbHpMblI1Y0dVZ0t5QWlPaUF1YzJoaFpHbHVaeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2RHaGxJR0p2YjJ4bFlXNGdMbVpzWVhSVGFHRmthVzVuSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11Wm14aGRGTm9ZV1JwYm1jZ1BTQnVJRDA5UFNCcll6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzRpSUNzZ2RHaHBjeTUwZVhCbElDc2dJam9nSnlJZ0t5QjBJQ3NnSWljZ2FYTWdibTkwSUdFZ2NISnZjR1Z5ZEhrZ2IyWWdkR2hwY3lCdFlYUmxjbWxoYkM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHa2dKaVlnYVM1cGMwTnZiRzl5SUQ4Z2FTNXpaWFFvYmlrZ09pQnBJQ1ltSUdrdWFYTldaV04wYjNJeklDWW1JRzRnSmlZZ2JpNXBjMVpsWTNSdmNqTWdQeUJwTG1OdmNIa29iaWtnT2lCMGFHbHpXM1JkSUQwZ2Jqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlNBOVBUMGdkbTlwWkNBd0lIeDhJSFI1Y0dWdlppQmxJRDA5SUNKemRISnBibWNpT3dvZ0lDQWdJQ0FnSUhRZ0ppWWdLR1VnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSMWNtVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzFoWjJWek9pQjdmUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJoWkdGMFlUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5YzJsdmJqb2dOQzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJazFoZEdWeWFXRnNJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsYm1WeVlYUnZjam9nSWsxaGRHVnlhV0ZzTG5SdlNsTlBUaUlLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiaTUxZFdsa0lEMGdkR2hwY3k1MWRXbGtMQ0J1TG5SNWNHVWdQU0IwYUdsekxuUjVjR1VzSUhSb2FYTXVibUZ0WlNBaFBUMGdJaUlnSmlZZ0tHNHVibUZ0WlNBOUlIUm9hWE11Ym1GdFpTa3NJSFJvYVhNdVkyOXNiM0lnSmlZZ2RHaHBjeTVqYjJ4dmNpNXBjME52Ykc5eUlDWW1JQ2h1TG1OdmJHOXlJRDBnZEdocGN5NWpiMnh2Y2k1blpYUklaWGdvS1Nrc0lIUm9hWE11Y205MVoyaHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1Y205MVoyaHVaWE56SUQwZ2RHaHBjeTV5YjNWbmFHNWxjM01wTENCMGFHbHpMbTFsZEdGc2JtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbTFsZEdGc2JtVnpjeUE5SUhSb2FYTXViV1YwWVd4dVpYTnpLU3dnZEdocGN5NXphR1ZsYmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5Ob1pXVnVJRDBnZEdocGN5NXphR1ZsYmlrc0lIUm9hWE11YzJobFpXNURiMnh2Y2lBbUppQjBhR2x6TG5Ob1pXVnVRMjlzYjNJdWFYTkRiMnh2Y2lBbUppQW9iaTV6YUdWbGJrTnZiRzl5SUQwZ2RHaHBjeTV6YUdWbGJrTnZiRzl5TG1kbGRFaGxlQ2dwS1N3Z2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuTm9aV1Z1VW05MVoyaHVaWE56SUQwZ2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemN5a3NJSFJvYVhNdVpXMXBjM05wZG1VZ0ppWWdkR2hwY3k1bGJXbHpjMmwyWlM1cGMwTnZiRzl5SUNZbUlDaHVMbVZ0YVhOemFYWmxJRDBnZEdocGN5NWxiV2x6YzJsMlpTNW5aWFJJWlhnb0tTa3NJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ0ppWWdkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBaFBUMGdNU0FtSmlBb2JpNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrcExDQjBhR2x6TG5Od1pXTjFiR0Z5SUNZbUlIUm9hWE11YzNCbFkzVnNZWEl1YVhORGIyeHZjaUFtSmlBb2JpNXpjR1ZqZFd4aGNpQTlJSFJvYVhNdWMzQmxZM1ZzWVhJdVoyVjBTR1Y0S0NrcExDQjBhR2x6TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGtnUFNCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVLU3dnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5SUNZbUlIUm9hWE11YzNCbFkzVnNZWEpEYjJ4dmNpNXBjME52Ykc5eUlDWW1JQ2h1TG5Od1pXTjFiR0Z5UTI5c2IzSWdQU0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0l1WjJWMFNHVjRLQ2twTENCMGFHbHpMbk5vYVc1cGJtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbk5vYVc1cGJtVnpjeUE5SUhSb2FYTXVjMmhwYm1sdVpYTnpLU3dnZEdocGN5NWpiR1ZoY21OdllYUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNWpiR1ZoY21OdllYUWdQU0IwYUdsekxtTnNaV0Z5WTI5aGRDa3NJSFJvYVhNdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklEMGdkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNcExDQjBhR2x6TG1Oc1pXRnlZMjloZEUxaGNDQW1KaUIwYUdsekxtTnNaV0Z5WTI5aGRFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZMnhsWVhKamIyRjBUV0Z3SUQwZ2RHaHBjeTVqYkdWaGNtTnZZWFJOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NBbUppQjBhR2x6TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndJRDBnZEdocGN5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDQW1KaUIwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lEMGdkR2hwY3k1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVWdQU0IwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxMblJ2UVhKeVlYa29LU2tzSUhSb2FYTXViV0Z3SUNZbUlIUm9hWE11YldGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1dFlYQWdQU0IwYUdsekxtMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdWJXRjBZMkZ3SUNZbUlIUm9hWE11YldGMFkyRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXRZWFJqWVhBZ1BTQjBhR2x6TG0xaGRHTmhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdVlXeHdhR0ZOWVhBZ0ppWWdkR2hwY3k1aGJIQm9ZVTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WVd4d2FHRk5ZWEFnUFNCMGFHbHpMbUZzY0doaFRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1c2FXZG9kRTFoY0NBbUppQjBhR2x6TG14cFoyaDBUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTVzYVdkb2RFMWhjQ0E5SUhSb2FYTXViR2xuYUhSTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRc0lHNHViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0IwYUdsekxteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUtTd2dkR2hwY3k1aGIwMWhjQ0FtSmlCMGFHbHpMbUZ2VFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1aGIwMWhjQ0E5SUhSb2FYTXVZVzlOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUtTd2dkR2hwY3k1aWRXMXdUV0Z3SUNZbUlIUm9hWE11WW5WdGNFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZblZ0Y0UxaGNDQTlJSFJvYVhNdVluVnRjRTFoY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ3dnYmk1aWRXMXdVMk5oYkdVZ1BTQjBhR2x6TG1KMWJYQlRZMkZzWlNrc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUNZbUlIUm9hWE11Ym05eWJXRnNUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTV1YjNKdFlXeE5ZWEFnUFNCMGFHbHpMbTV2Y20xaGJFMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDd2diaTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxMQ0J1TG01dmNtMWhiRk5qWVd4bElEMGdkR2hwY3k1dWIzSnRZV3hUWTJGc1pTNTBiMEZ5Y21GNUtDa3BMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXNJRzR1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0J1TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXBMQ0IwYUdsekxuSnZkV2RvYm1WemMwMWhjQ0FtSmlCMGFHbHpMbkp2ZFdkb2JtVnpjMDFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1Y205MVoyaHVaWE56VFdGd0lEMGdkR2hwY3k1eWIzVm5hRzVsYzNOTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG0xbGRHRnNibVZ6YzAxaGNDQW1KaUIwYUdsekxtMWxkR0ZzYm1WemMwMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHViV1YwWVd4dVpYTnpUV0Z3SUQwZ2RHaHBjeTV0WlhSaGJHNWxjM05OWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbVZ0YVhOemFYWmxUV0Z3SUNZbUlIUm9hWE11WlcxcGMzTnBkbVZOWVhBdWFYTlVaWGgwZFhKbElDWW1JQ2h1TG1WdGFYTnphWFpsVFdGd0lEMGdkR2hwY3k1bGJXbHpjMmwyWlUxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11YzNCbFkzVnNZWEpOWVhBZ0ppWWdkR2hwY3k1emNHVmpkV3hoY2sxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dWMzQmxZM1ZzWVhKTllYQWdQU0IwYUdsekxuTndaV04xYkdGeVRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQW1KaUIwYUdsekxuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0E5SUhSb2FYTXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0pOWVhBZ0ppWWdkR2hwY3k1emNHVmpkV3hoY2tOdmJHOXlUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTV6Y0dWamRXeGhja052Ykc5eVRXRndJRDBnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTVsYm5aTllYQWdKaVlnZEdocGN5NWxiblpOWVhBdWFYTlVaWGgwZFhKbElDWW1JQ2h1TG1WdWRrMWhjQ0E5SUhSb2FYTXVaVzUyVFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrTENCMGFHbHpMbU52YldKcGJtVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNWpiMjFpYVc1bElEMGdkR2hwY3k1amIyMWlhVzVsS1Nrc0lIUm9hWE11Wlc1MlRXRndTVzUwWlc1emFYUjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVaVzUyVFdGd1NXNTBaVzV6YVhSNUlEMGdkR2hwY3k1bGJuWk5ZWEJKYm5SbGJuTnBkSGtwTENCMGFHbHpMbkpsWm14bFkzUnBkbWwwZVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5KbFpteGxZM1JwZG1sMGVTQTlJSFJvYVhNdWNtVm1iR1ZqZEdsMmFYUjVLU3dnZEdocGN5NXlaV1p5WVdOMGFXOXVVbUYwYVc4Z0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1eVpXWnlZV04wYVc5dVVtRjBhVzhnUFNCMGFHbHpMbkpsWm5KaFkzUnBiMjVTWVhScGJ5a3NJSFJvYVhNdVozSmhaR2xsYm5STllYQWdKaVlnZEdocGN5NW5jbUZrYVdWdWRFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVaM0poWkdsbGJuUk5ZWEFnUFNCMGFHbHpMbWR5WVdScFpXNTBUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtLU3dnZEdocGN5NTBjbUZ1YzIxcGMzTnBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTUwY21GdWMyMXBjM05wYjI0Z1BTQjBhR2x6TG5SeVlXNXpiV2x6YzJsdmJpa3NJSFJvYVhNdWRISmhibk50YVhOemFXOXVUV0Z3SUNZbUlIUm9hWE11ZEhKaGJuTnRhWE56YVc5dVRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ1BTQjBhR2x6TG5SeVlXNXpiV2x6YzJsdmJrMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdWRHaHBZMnR1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dWRHaHBZMnR1WlhOeklEMGdkR2hwY3k1MGFHbGphMjVsYzNNcExDQjBhR2x6TG5Sb2FXTnJibVZ6YzAxaGNDQW1KaUIwYUdsekxuUm9hV05yYm1WemMwMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVkR2hwWTJ0dVpYTnpUV0Z3SUQwZ2RHaHBjeTUwYUdsamEyNWxjM05OWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbUYwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlVnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sSUQwZ2RHaHBjeTVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sS1N3Z2RHaHBjeTVoZEhSbGJuVmhkR2x2YmtOdmJHOXlJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpQTlJSFJvYVhNdVlYUjBaVzUxWVhScGIyNURiMnh2Y2k1blpYUklaWGdvS1Nrc0lIUm9hWE11YzJsNlpTQWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuTnBlbVVnUFNCMGFHbHpMbk5wZW1VcExDQjBhR2x6TG5Ob1lXUnZkMU5wWkdVZ0lUMDlJRzUxYkd3Z0ppWWdLRzR1YzJoaFpHOTNVMmxrWlNBOUlIUm9hWE11YzJoaFpHOTNVMmxrWlNrc0lIUm9hWE11YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVjMmw2WlVGMGRHVnVkV0YwYVc5dUlEMGdkR2hwY3k1emFYcGxRWFIwWlc1MVlYUnBiMjRwTENCMGFHbHpMbUpzWlc1a2FXNW5JQ0U5UFNCemNpQW1KaUFvYmk1aWJHVnVaR2x1WnlBOUlIUm9hWE11WW14bGJtUnBibWNwTENCMGFHbHpMbk5wWkdVZ0lUMDlJRUZwSUNZbUlDaHVMbk5wWkdVZ1BTQjBhR2x6TG5OcFpHVXBMQ0IwYUdsekxuWmxjblJsZUVOdmJHOXljeUFtSmlBb2JpNTJaWEowWlhoRGIyeHZjbk1nUFNBaE1Da3NJSFJvYVhNdWIzQmhZMmwwZVNBOElERWdKaVlnS0c0dWIzQmhZMmwwZVNBOUlIUm9hWE11YjNCaFkybDBlU2tzSUhSb2FYTXVabTl5YldGMElDRTlQU0JqZENBbUppQW9iaTVtYjNKdFlYUWdQU0IwYUdsekxtWnZjbTFoZENrc0lIUm9hWE11ZEhKaGJuTndZWEpsYm5RZ1BUMDlJQ0V3SUNZbUlDaHVMblJ5WVc1emNHRnlaVzUwSUQwZ2RHaHBjeTUwY21GdWMzQmhjbVZ1ZENrc0lHNHVaR1Z3ZEdoR2RXNWpJRDBnZEdocGN5NWtaWEIwYUVaMWJtTXNJRzR1WkdWd2RHaFVaWE4wSUQwZ2RHaHBjeTVrWlhCMGFGUmxjM1FzSUc0dVpHVndkR2hYY21sMFpTQTlJSFJvYVhNdVpHVndkR2hYY21sMFpTd2diaTVqYjJ4dmNsZHlhWFJsSUQwZ2RHaHBjeTVqYjJ4dmNsZHlhWFJsTENCdUxuTjBaVzVqYVd4WGNtbDBaU0E5SUhSb2FYTXVjM1JsYm1OcGJGZHlhWFJsTENCdUxuTjBaVzVqYVd4WGNtbDBaVTFoYzJzZ1BTQjBhR2x6TG5OMFpXNWphV3hYY21sMFpVMWhjMnNzSUc0dWMzUmxibU5wYkVaMWJtTWdQU0IwYUdsekxuTjBaVzVqYVd4R2RXNWpMQ0J1TG5OMFpXNWphV3hTWldZZ1BTQjBhR2x6TG5OMFpXNWphV3hTWldZc0lHNHVjM1JsYm1OcGJFWjFibU5OWVhOcklEMGdkR2hwY3k1emRHVnVZMmxzUm5WdVkwMWhjMnNzSUc0dWMzUmxibU5wYkVaaGFXd2dQU0IwYUdsekxuTjBaVzVqYVd4R1lXbHNMQ0J1TG5OMFpXNWphV3hhUm1GcGJDQTlJSFJvYVhNdWMzUmxibU5wYkZwR1lXbHNMQ0J1TG5OMFpXNWphV3hhVUdGemN5QTlJSFJvYVhNdWMzUmxibU5wYkZwUVlYTnpMQ0IwYUdsekxuSnZkR0YwYVc5dUlDWW1JSFJvYVhNdWNtOTBZWFJwYjI0Z0lUMDlJREFnSmlZZ0tHNHVjbTkwWVhScGIyNGdQU0IwYUdsekxuSnZkR0YwYVc5dUtTd2dkR2hwY3k1d2IyeDVaMjl1VDJabWMyVjBJRDA5UFNBaE1DQW1KaUFvYmk1d2IyeDVaMjl1VDJabWMyVjBJRDBnSVRBcExDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJZ0lUMDlJREFnSmlZZ0tHNHVjRzlzZVdkdmJrOW1abk5sZEVaaFkzUnZjaUE5SUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZEVaaFkzUnZjaWtzSUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZEZWdWFYUnpJQ0U5UFNBd0lDWW1JQ2h1TG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBOUlIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRGVnVhWFJ6S1N3Z2RHaHBjeTVzYVc1bGQybGtkR2dnSmlZZ2RHaHBjeTVzYVc1bGQybGtkR2dnSVQwOUlERWdKaVlnS0c0dWJHbHVaWGRwWkhSb0lEMGdkR2hwY3k1c2FXNWxkMmxrZEdncExDQjBhR2x6TG1SaGMyaFRhWHBsSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WkdGemFGTnBlbVVnUFNCMGFHbHpMbVJoYzJoVGFYcGxLU3dnZEdocGN5NW5ZWEJUYVhwbElDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVoyRndVMmw2WlNBOUlIUm9hWE11WjJGd1UybDZaU2tzSUhSb2FYTXVjMk5oYkdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1elkyRnNaU0E5SUhSb2FYTXVjMk5oYkdVcExDQjBhR2x6TG1ScGRHaGxjbWx1WnlBOVBUMGdJVEFnSmlZZ0tHNHVaR2wwYUdWeWFXNW5JRDBnSVRBcExDQjBhR2x6TG1Gc2NHaGhWR1Z6ZENBK0lEQWdKaVlnS0c0dVlXeHdhR0ZVWlhOMElEMGdkR2hwY3k1aGJIQm9ZVlJsYzNRcExDQjBhR2x6TG1Gc2NHaGhWRzlEYjNabGNtRm5aU0E5UFQwZ0lUQWdKaVlnS0c0dVlXeHdhR0ZVYjBOdmRtVnlZV2RsSUQwZ2RHaHBjeTVoYkhCb1lWUnZRMjkyWlhKaFoyVXBMQ0IwYUdsekxuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQTlQVDBnSVRBZ0ppWWdLRzR1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoSUQwZ2RHaHBjeTV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VwTENCMGFHbHpMbmRwY21WbWNtRnRaU0E5UFQwZ0lUQWdKaVlnS0c0dWQybHlaV1p5WVcxbElEMGdkR2hwY3k1M2FYSmxabkpoYldVcExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBK0lERWdKaVlnS0c0dWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdncExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFnSVQwOUlDSnliM1Z1WkNJZ0ppWWdLRzR1ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDa3NJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z0lUMDlJQ0p5YjNWdVpDSWdKaVlnS0c0dWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1S1N3Z2RHaHBjeTVtYkdGMFUyaGhaR2x1WnlBOVBUMGdJVEFnSmlZZ0tHNHVabXhoZEZOb1lXUnBibWNnUFNCMGFHbHpMbVpzWVhSVGFHRmthVzVuS1N3Z2RHaHBjeTUyYVhOcFlteGxJRDA5UFNBaE1TQW1KaUFvYmk1MmFYTnBZbXhsSUQwZ0lURXBMQ0IwYUdsekxuUnZibVZOWVhCd1pXUWdQVDA5SUNFeElDWW1JQ2h1TG5SdmJtVk5ZWEJ3WldRZ1BTQWhNU2tzSUVwVFQwNHVjM1J5YVc1bmFXWjVLSFJvYVhNdWRYTmxja1JoZEdFcElDRTlQU0FpZTMwaUlDWW1JQ2h1TG5WelpYSkVZWFJoSUQwZ2RHaHBjeTUxYzJWeVJHRjBZU2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYVNoeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0JwYmlCeUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2NsdGhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQnNMbTFsZEdGa1lYUmhMQ0J2TG5CMWMyZ29iQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzg3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2FTaGxMblJsZUhSMWNtVnpLU3dnYnlBOUlHa29aUzVwYldGblpYTXBPd29nSUNBZ0lDQWdJQ0FnSUNCeUxteGxibWQwYUNBK0lEQWdKaVlnS0c0dWRHVjRkSFZ5WlhNZ1BTQnlLU3dnYnk1c1pXNW5kR2dnUGlBd0lDWW1JQ2h1TG1sdFlXZGxjeUE5SUc4cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2Jqc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0JsTG01aGJXVXNJSFJvYVhNdVptOW5JRDBnWlM1bWIyY3NJSFJvYVhNdVlteGxibVJwYm1jZ1BTQmxMbUpzWlc1a2FXNW5MQ0IwYUdsekxuTnBaR1VnUFNCbExuTnBaR1VzSUhSb2FYTXVkbVZ5ZEdWNFEyOXNiM0p6SUQwZ1pTNTJaWEowWlhoRGIyeHZjbk1zSUhSb2FYTXViM0JoWTJsMGVTQTlJR1V1YjNCaFkybDBlU3dnZEdocGN5NW1iM0p0WVhRZ1BTQmxMbVp2Y20xaGRDd2dkR2hwY3k1MGNtRnVjM0JoY21WdWRDQTlJR1V1ZEhKaGJuTndZWEpsYm5Rc0lIUm9hWE11WW14bGJtUlRjbU1nUFNCbExtSnNaVzVrVTNKakxDQjBhR2x6TG1Kc1pXNWtSSE4wSUQwZ1pTNWliR1Z1WkVSemRDd2dkR2hwY3k1aWJHVnVaRVZ4ZFdGMGFXOXVJRDBnWlM1aWJHVnVaRVZ4ZFdGMGFXOXVMQ0IwYUdsekxtSnNaVzVrVTNKalFXeHdhR0VnUFNCbExtSnNaVzVrVTNKalFXeHdhR0VzSUhSb2FYTXVZbXhsYm1SRWMzUkJiSEJvWVNBOUlHVXVZbXhsYm1SRWMzUkJiSEJvWVN3Z2RHaHBjeTVpYkdWdVpFVnhkV0YwYVc5dVFXeHdhR0VnUFNCbExtSnNaVzVrUlhGMVlYUnBiMjVCYkhCb1lTd2dkR2hwY3k1a1pYQjBhRVoxYm1NZ1BTQmxMbVJsY0hSb1JuVnVZeXdnZEdocGN5NWtaWEIwYUZSbGMzUWdQU0JsTG1SbGNIUm9WR1Z6ZEN3Z2RHaHBjeTVrWlhCMGFGZHlhWFJsSUQwZ1pTNWtaWEIwYUZkeWFYUmxMQ0IwYUdsekxuTjBaVzVqYVd4WGNtbDBaVTFoYzJzZ1BTQmxMbk4wWlc1amFXeFhjbWwwWlUxaGMyc3NJSFJvYVhNdWMzUmxibU5wYkVaMWJtTWdQU0JsTG5OMFpXNWphV3hHZFc1akxDQjBhR2x6TG5OMFpXNWphV3hTWldZZ1BTQmxMbk4wWlc1amFXeFNaV1lzSUhSb2FYTXVjM1JsYm1OcGJFWjFibU5OWVhOcklEMGdaUzV6ZEdWdVkybHNSblZ1WTAxaGMyc3NJSFJvYVhNdWMzUmxibU5wYkVaaGFXd2dQU0JsTG5OMFpXNWphV3hHWVdsc0xDQjBhR2x6TG5OMFpXNWphV3hhUm1GcGJDQTlJR1V1YzNSbGJtTnBiRnBHWVdsc0xDQjBhR2x6TG5OMFpXNWphV3hhVUdGemN5QTlJR1V1YzNSbGJtTnBiRnBRWVhOekxDQjBhR2x6TG5OMFpXNWphV3hYY21sMFpTQTlJR1V1YzNSbGJtTnBiRmR5YVhSbE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWpiR2x3Y0dsdVoxQnNZVzVsY3l3Z2JpQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2FXWWdLSFFnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBMbXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnYmlBOUlHNWxkeUJCY25KaGVTaHBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNRHNnY2lBaFBUMGdhVHNnS3l0eUtXNWJjbDBnUFNCMFczSmRMbU5zYjI1bEtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Oc2FYQndhVzVuVUd4aGJtVnpJRDBnYml3Z2RHaHBjeTVqYkdsd1NXNTBaWEp6WldOMGFXOXVJRDBnWlM1amJHbHdTVzUwWlhKelpXTjBhVzl1TENCMGFHbHpMbU5zYVhCVGFHRmtiM2R6SUQwZ1pTNWpiR2x3VTJoaFpHOTNjeXdnZEdocGN5NXphR0ZrYjNkVGFXUmxJRDBnWlM1emFHRmtiM2RUYVdSbExDQjBhR2x6TG1OdmJHOXlWM0pwZEdVZ1BTQmxMbU52Ykc5eVYzSnBkR1VzSUhSb2FYTXVjSEpsWTJsemFXOXVJRDBnWlM1d2NtVmphWE5wYjI0c0lIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRDQTlJR1V1Y0c5c2VXZHZiazltWm5ObGRDd2dkR2hwY3k1d2IyeDVaMjl1VDJabWMyVjBSbUZqZEc5eUlEMGdaUzV3YjJ4NVoyOXVUMlptYzJWMFJtRmpkRzl5TENCMGFHbHpMbkJ2YkhsbmIyNVBabVp6WlhSVmJtbDBjeUE5SUdVdWNHOXNlV2R2Yms5bVpuTmxkRlZ1YVhSekxDQjBhR2x6TG1ScGRHaGxjbWx1WnlBOUlHVXVaR2wwYUdWeWFXNW5MQ0IwYUdsekxtRnNjR2hoVkdWemRDQTlJR1V1WVd4d2FHRlVaWE4wTENCMGFHbHpMbUZzY0doaFZHOURiM1psY21GblpTQTlJR1V1WVd4d2FHRlViME52ZG1WeVlXZGxMQ0IwYUdsekxuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQTlJR1V1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoTENCMGFHbHpMblpwYzJsaWJHVWdQU0JsTG5acGMybGliR1VzSUhSb2FYTXVkRzl1WlUxaGNIQmxaQ0E5SUdVdWRHOXVaVTFoY0hCbFpDd2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlFcFRUMDR1Y0dGeWMyVW9TbE5QVGk1emRISnBibWRwWm5rb1pTNTFjMlZ5UkdGMFlTa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVpHbHpjRzl6WlNJS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS0lDQWdJSE5sZENCdVpXVmtjMVZ3WkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnWlNBOVBUMGdJVEFnSmlZZ2RHaHBjeTUyWlhKemFXOXVLeXM3Q2lBZ0lDQjlDbjA3Q21SMExuQnliM1J2ZEhsd1pTNXBjMDFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUFrWXlBOUlIc0tJQ0FnSUdGc2FXTmxZbXgxWlRvZ01UVTNPVEl6T0RNc0NpQWdJQ0JoYm5ScGNYVmxkMmhwZEdVNklERTJORFEwTXpjMUxBb2dJQ0FnWVhGMVlUb2dOalUxTXpVc0NpQWdJQ0JoY1hWaGJXRnlhVzVsT2lBNE16ZzROVFkwTEFvZ0lDQWdZWHAxY21VNklERTFOemswTVRjMUxBb2dJQ0FnWW1WcFoyVTZJREUyTVRFNU1qWXdMQW9nSUNBZ1ltbHpjWFZsT2lBeE5qYzNNREkwTkN3S0lDQWdJR0pzWVdOck9pQXdMQW9nSUNBZ1lteGhibU5vWldSaGJHMXZibVE2SURFMk56Y3lNRFExTEFvZ0lDQWdZbXgxWlRvZ01qVTFMQW9nSUNBZ1lteDFaWFpwYjJ4bGREb2dPVEExTlRJd01pd0tJQ0FnSUdKeWIzZHVPaUF4TURneU5ESXpOQ3dLSUNBZ0lHSjFjbXg1ZDI5dlpEb2dNVFExT1RZeU16RXNDaUFnSUNCallXUmxkR0pzZFdVNklEWXlOalkxTWpnc0NpQWdJQ0JqYUdGeWRISmxkWE5sT2lBNE16ZzRNelV5TEFvZ0lDQWdZMmh2WTI5c1lYUmxPaUF4TXpjNE9UUTNNQ3dLSUNBZ0lHTnZjbUZzT2lBeE5qYzBOREkzTWl3S0lDQWdJR052Y201bWJHOTNaWEppYkhWbE9pQTJOVGt4T1RneExBb2dJQ0FnWTI5eWJuTnBiR3M2SURFMk56YzFNemc0TEFvZ0lDQWdZM0pwYlhOdmJqb2dNVFEwTWpNeE1EQXNDaUFnSUNCamVXRnVPaUEyTlRVek5Td0tJQ0FnSUdSaGNtdGliSFZsT2lBeE16a3NDaUFnSUNCa1lYSnJZM2xoYmpvZ016VTNNak1zQ2lBZ0lDQmtZWEpyWjI5c1pHVnVjbTlrT2lBeE1qQTVNamt6T1N3S0lDQWdJR1JoY210bmNtRjVPaUF4TVRFeE9UQXhOeXdLSUNBZ0lHUmhjbXRuY21WbGJqb2dNalUyTURBc0NpQWdJQ0JrWVhKclozSmxlVG9nTVRFeE1Ua3dNVGNzQ2lBZ0lDQmtZWEpyYTJoaGEyazZJREV5TkRNek1qVTVMQW9nSUNBZ1pHRnlhMjFoWjJWdWRHRTZJRGt4TURrMk5ETXNDaUFnSUNCa1lYSnJiMnhwZG1WbmNtVmxiam9nTlRVNU56azVPU3dLSUNBZ0lHUmhjbXR2Y21GdVoyVTZJREUyTnpRM05USXdMQW9nSUNBZ1pHRnlhMjl5WTJocFpEb2dNVEF3TkRBd01USXNDaUFnSUNCa1lYSnJjbVZrT2lBNU1UQTVOVEEwTEFvZ0lDQWdaR0Z5YTNOaGJHMXZiam9nTVRVek1EZzBNVEFzQ2lBZ0lDQmtZWEpyYzJWaFozSmxaVzQ2SURrME1UazVNVGtzQ2lBZ0lDQmtZWEpyYzJ4aGRHVmliSFZsT2lBME56TTBNelEzTEFvZ0lDQWdaR0Z5YTNOc1lYUmxaM0poZVRvZ016RXdNRFE1TlN3S0lDQWdJR1JoY210emJHRjBaV2R5WlhrNklETXhNREEwT1RVc0NpQWdJQ0JrWVhKcmRIVnljWFZ2YVhObE9pQTFNamswTlN3S0lDQWdJR1JoY210MmFXOXNaWFE2SURrMk9UazFNemtzQ2lBZ0lDQmtaV1Z3Y0dsdWF6b2dNVFkzTVRZNU5EY3NDaUFnSUNCa1pXVndjMnQ1WW14MVpUb2dORGt4TlRFc0NpQWdJQ0JrYVcxbmNtRjVPaUEyT1RBNE1qWTFMQW9nSUNBZ1pHbHRaM0psZVRvZ05qa3dPREkyTlN3S0lDQWdJR1J2WkdkbGNtSnNkV1U2SURJd01ETXhPVGtzQ2lBZ0lDQm1hWEpsWW5KcFkyczZJREV4TmpjME1UUTJMQW9nSUNBZ1pteHZjbUZzZDJocGRHVTZJREUyTnpjMU9USXdMQW9nSUNBZ1ptOXlaWE4wWjNKbFpXNDZJREl5TmpNNE5ESXNDaUFnSUNCbWRXTm9jMmxoT2lBeE5qY3hNVGt6TlN3S0lDQWdJR2RoYVc1elltOXliem9nTVRRME56UTBOakFzQ2lBZ0lDQm5hRzl6ZEhkb2FYUmxPaUF4TmpNeE5qWTNNU3dLSUNBZ0lHZHZiR1E2SURFMk56WTJOekl3TEFvZ0lDQWdaMjlzWkdWdWNtOWtPaUF4TkRNeU9URXlNQ3dLSUNBZ0lHZHlZWGs2SURnME1qRTFNRFFzQ2lBZ0lDQm5jbVZsYmpvZ016STNOamdzQ2lBZ0lDQm5jbVZsYm5sbGJHeHZkem9nTVRFME1ETXdOVFVzQ2lBZ0lDQm5jbVY1T2lBNE5ESXhOVEEwTEFvZ0lDQWdhRzl1Wlhsa1pYYzZJREUxTnprME1UWXdMQW9nSUNBZ2FHOTBjR2x1YXpvZ01UWTNNemczTkRBc0NpQWdJQ0JwYm1ScFlXNXlaV1E2SURFek5EVTROVEkwTEFvZ0lDQWdhVzVrYVdkdk9pQTBPVEUxTXpNd0xBb2dJQ0FnYVhadmNuazZJREUyTnpjM01qQXdMQW9nSUNBZ2EyaGhhMms2SURFMU56ZzNOall3TEFvZ0lDQWdiR0YyWlc1a1pYSTZJREUxTVRNeU5ERXdMQW9nSUNBZ2JHRjJaVzVrWlhKaWJIVnphRG9nTVRZM056TXpOalVzQ2lBZ0lDQnNZWGR1WjNKbFpXNDZJRGd4T1RBNU56WXNDaUFnSUNCc1pXMXZibU5vYVdabWIyNDZJREUyTnpjMU9EZzFMQW9nSUNBZ2JHbG5hSFJpYkhWbE9pQXhNVE01TXpJMU5Dd0tJQ0FnSUd4cFoyaDBZMjl5WVd3NklERTFOell4TlRNMkxBb2dJQ0FnYkdsbmFIUmplV0Z1T2lBeE5EYzBOVFU1T1N3S0lDQWdJR3hwWjJoMFoyOXNaR1Z1Y205a2VXVnNiRzkzT2lBeE5qUTBPREl4TUN3S0lDQWdJR3hwWjJoMFozSmhlVG9nTVRNNE9ESXpNak1zQ2lBZ0lDQnNhV2RvZEdkeVpXVnVPaUE1TkRrNE1qVTJMQW9nSUNBZ2JHbG5hSFJuY21WNU9pQXhNemc0TWpNeU15d0tJQ0FnSUd4cFoyaDBjR2x1YXpvZ01UWTNOVGcwTmpVc0NpQWdJQ0JzYVdkb2RITmhiRzF2YmpvZ01UWTNOVEkzTmpJc0NpQWdJQ0JzYVdkb2RITmxZV2R5WldWdU9pQXlNVFF5T0Rrd0xBb2dJQ0FnYkdsbmFIUnphM2xpYkhWbE9pQTRPVEF3TXpRMkxBb2dJQ0FnYkdsbmFIUnpiR0YwWldkeVlYazZJRGM0TXpNM05UTXNDaUFnSUNCc2FXZG9kSE5zWVhSbFozSmxlVG9nTnpnek16YzFNeXdLSUNBZ0lHeHBaMmgwYzNSbFpXeGliSFZsT2lBeE1UVTRORGN6TkN3S0lDQWdJR3hwWjJoMGVXVnNiRzkzT2lBeE5qYzNOekU0TkN3S0lDQWdJR3hwYldVNklEWTFNamd3TEFvZ0lDQWdiR2x0WldkeVpXVnVPaUF6TXpJNU16TXdMQW9nSUNBZ2JHbHVaVzQ2SURFMk5EUTFOamN3TEFvZ0lDQWdiV0ZuWlc1MFlUb2dNVFkzTVRFNU16VXNDaUFnSUNCdFlYSnZiMjQ2SURnek9EZzJNRGdzQ2lBZ0lDQnRaV1JwZFcxaGNYVmhiV0Z5YVc1bE9pQTJOek0zTXpJeUxBb2dJQ0FnYldWa2FYVnRZbXgxWlRvZ01qQTFMQW9nSUNBZ2JXVmthWFZ0YjNKamFHbGtPaUF4TWpJeE1UWTJOeXdLSUNBZ0lHMWxaR2wxYlhCMWNuQnNaVG9nT1RZMk1qWTRNeXdLSUNBZ0lHMWxaR2wxYlhObFlXZHlaV1Z1T2lBek9UYzRNRGszTEFvZ0lDQWdiV1ZrYVhWdGMyeGhkR1ZpYkhWbE9pQTRNRGczTnprd0xBb2dJQ0FnYldWa2FYVnRjM0J5YVc1blozSmxaVzQ2SURZME1UVTBMQW9nSUNBZ2JXVmthWFZ0ZEhWeWNYVnZhWE5sT2lBME56Y3lNekF3TEFvZ0lDQWdiV1ZrYVhWdGRtbHZiR1YwY21Wa09pQXhNekEwTnpFM015d0tJQ0FnSUcxcFpHNXBaMmgwWW14MVpUb2dNVFkwTkRreE1pd0tJQ0FnSUcxcGJuUmpjbVZoYlRvZ01UWXhNakU0TlRBc0NpQWdJQ0J0YVhOMGVYSnZjMlU2SURFMk56Y3dNamN6TEFvZ0lDQWdiVzlqWTJGemFXNDZJREUyTnpjd01qSTVMQW9nSUNBZ2JtRjJZV3B2ZDJocGRHVTZJREUyTnpZNE5qZzFMQW9nSUNBZ2JtRjJlVG9nTVRJNExBb2dJQ0FnYjJ4a2JHRmpaVG9nTVRZMk5ETTFOVGdzQ2lBZ0lDQnZiR2wyWlRvZ09EUXlNVE0zTml3S0lDQWdJRzlzYVhabFpISmhZam9nTnpBME9EY3pPU3dLSUNBZ0lHOXlZVzVuWlRvZ01UWTNOVE01TWpBc0NpQWdJQ0J2Y21GdVoyVnlaV1E2SURFMk56STVNelEwTEFvZ0lDQWdiM0pqYUdsa09pQXhORE14TlRjek5Dd0tJQ0FnSUhCaGJHVm5iMnhrWlc1eWIyUTZJREUxTmpVM01UTXdMQW9nSUNBZ2NHRnNaV2R5WldWdU9pQXhNREF5TlRnNE1Dd0tJQ0FnSUhCaGJHVjBkWEp4ZFc5cGMyVTZJREV4TlRJNU9UWTJMQW9nSUNBZ2NHRnNaWFpwYjJ4bGRISmxaRG9nTVRRek9ERXlNRE1zQ2lBZ0lDQndZWEJoZVdGM2FHbHdPaUF4TmpjM016QTNOeXdLSUNBZ0lIQmxZV05vY0hWbVpqb2dNVFkzTmpjMk56TXNDaUFnSUNCd1pYSjFPaUF4TXpRMk9EazVNU3dLSUNBZ0lIQnBibXM2SURFMk56WXhNRE0xTEFvZ0lDQWdjR3gxYlRvZ01UUTFNalEyTXpjc0NpQWdJQ0J3YjNka1pYSmliSFZsT2lBeE1UVTVNVGt4TUN3S0lDQWdJSEIxY25Cc1pUb2dPRE00T0Rjek5pd0tJQ0FnSUhKbFltVmpZMkZ3ZFhKd2JHVTZJRFkyT1RjNE9ERXNDaUFnSUNCeVpXUTZJREUyTnpFeE5qZ3dMQW9nSUNBZ2NtOXplV0p5YjNkdU9pQXhNak0xTnpVeE9Td0tJQ0FnSUhKdmVXRnNZbXgxWlRvZ05ESTROamswTlN3S0lDQWdJSE5oWkdSc1pXSnliM2R1T2lBNU1USTNNVGczTEFvZ0lDQWdjMkZzYlc5dU9pQXhOalF4TmpnNE1pd0tJQ0FnSUhOaGJtUjVZbkp2ZDI0NklERTJNRE15T0RZMExBb2dJQ0FnYzJWaFozSmxaVzQ2SURNd05UQXpNamNzQ2lBZ0lDQnpaV0Z6YUdWc2JEb2dNVFkzTnpRMk16Z3NDaUFnSUNCemFXVnVibUU2SURFd05UQTJOemszTEFvZ0lDQWdjMmxzZG1WeU9pQXhNall6TWpJMU5pd0tJQ0FnSUhOcmVXSnNkV1U2SURnNU1EQXpNekVzQ2lBZ0lDQnpiR0YwWldKc2RXVTZJRFk1TnpBd05qRXNDaUFnSUNCemJHRjBaV2R5WVhrNklEY3pOekk1TkRRc0NpQWdJQ0J6YkdGMFpXZHlaWGs2SURjek56STVORFFzQ2lBZ0lDQnpibTkzT2lBeE5qYzNOVGt6TUN3S0lDQWdJSE53Y21sdVoyZHlaV1Z1T2lBMk5UUXdOeXdLSUNBZ0lITjBaV1ZzWW14MVpUb2dORFl5TURrNE1Dd0tJQ0FnSUhSaGJqb2dNVE00TURnM09EQXNDaUFnSUNCMFpXRnNPaUF6TWpnNU5pd0tJQ0FnSUhSb2FYTjBiR1U2SURFME1qQTBPRGc0TEFvZ0lDQWdkRzl0WVhSdk9pQXhOamN6TnpBNU5Td0tJQ0FnSUhSMWNuRjFiMmx6WlRvZ05ESTFNVGcxTml3S0lDQWdJSFpwYjJ4bGREb2dNVFUyTXpFd09EWXNDaUFnSUNCM2FHVmhkRG9nTVRZeE1UTXpNekVzQ2lBZ0lDQjNhR2wwWlRvZ01UWTNOemN5TVRVc0NpQWdJQ0IzYUdsMFpYTnRiMnRsT2lBeE5qRXhPVEk0TlN3S0lDQWdJSGxsYkd4dmR6b2dNVFkzTnpZNU5qQXNDaUFnSUNCNVpXeHNiM2RuY21WbGJqb2dNVEF4TkRVd056UUtmU3dnUm5RZ1BTQjdDaUFnSUNCb09pQXdMQW9nSUNBZ2N6b2dNQ3dLSUNBZ0lHdzZJREFLZlN3Z2FuSWdQU0I3Q2lBZ0lDQm9PaUF3TEFvZ0lDQWdjem9nTUN3S0lDQWdJR3c2SURBS2ZUc0tablZ1WTNScGIyNGdTVzhvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlIUWdQQ0F3SUNZbUlDaDBJQ3M5SURFcExDQjBJRDRnTVNBbUppQW9kQ0F0UFNBeEtTd2dkQ0E4SURFZ0x5QTJJRDhnY3lBcklDaGxJQzBnY3lrZ0tpQTJJQ29nZENBNklIUWdQQ0F4SUM4Z01pQS9JR1VnT2lCMElEd2dNaUF2SURNZ1B5QnpJQ3NnS0dVZ0xTQnpLU0FxSURZZ0tpQW9NaUF2SURNZ0xTQjBLU0E2SUhNN0NuMEtablZ1WTNScGIyNGdSRzhvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nUENBdU1EUXdORFVnUHlCeklDb2dMakEzTnpNNU9UTTRNRGdnT2lCTllYUm9MbkJ2ZHloeklDb2dMamswTnpnMk56STVPRFlnS3lBdU1EVXlNVE15TnpBeE5Dd2dNaTQwS1RzS2ZRcG1kVzVqZEdsdmJpQkdieWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdjeUE4SUM0d01ETXhNekE0SUQ4Z2N5QXFJREV5TGpreUlEb2dNUzR3TlRVZ0tpQk5ZWFJvTG5CdmR5aHpMQ0F1TkRFMk5qWXBJQzBnTGpBMU5Uc0tmUXAyWVhJZ1lXVWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQTlQVDBnZG05cFpDQXdJQ1ltSUc0Z1BUMDlJSFp2YVdRZ01DQS9JSFJvYVhNdWMyVjBLR1VwSURvZ2RHaHBjeTV6WlhSU1IwSW9aU3dnZEN3Z2JpazdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ1ltSUdVdWFYTkRiMnh2Y2lBL0lIUm9hWE11WTI5d2VTaGxLU0E2SUhSNWNHVnZaaUJsSUQwOUlDSnVkVzFpWlhJaUlEOGdkR2hwY3k1elpYUklaWGdvWlNrZ09pQjBlWEJsYjJZZ1pTQTlQU0FpYzNSeWFXNW5JaUFtSmlCMGFHbHpMbk5sZEZOMGVXeGxLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1pTd2dkR2hwY3k1bklEMGdaU3dnZEdocGN5NWlJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFaGxlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ1BTQk5ZWFJvTG1ac2IyOXlLR1VwTENCMGFHbHpMbklnUFNBb1pTQStQaUF4TmlBbUlESTFOU2tnTHlBeU5UVXNJSFJvYVhNdVp5QTlJQ2hsSUQ0K0lEZ2dKaUF5TlRVcElDOGdNalUxTENCMGFHbHpMbUlnUFNBb1pTQW1JREkxTlNrZ0x5QXlOVFVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSU1IwSW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQmxMQ0IwYUdsekxtY2dQU0IwTENCMGFHbHpMbUlnUFNCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBTRk5NS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCcFppQW9aU0E5SUdSaEtHVXNJREVwTENCMElEMGdiWFFvZEN3Z01Dd2dNU2tzSUc0Z1BTQnRkQ2h1TENBd0xDQXhLU3dnZENBOVBUMGdNQ2tnZEdocGN5NXlJRDBnZEdocGN5NW5JRDBnZEdocGN5NWlJRDBnYmpzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUlEdzlJQzQxSUQ4Z2JpQXFJQ2d4SUNzZ2RDa2dPaUJ1SUNzZ2RDQXRJRzRnS2lCMExDQnlJRDBnTWlBcUlHNGdMU0JwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5JZ1BTQkpieWh5TENCcExDQmxJQ3NnTVNBdklETXBMQ0IwYUdsekxtY2dQU0JKYnloeUxDQnBMQ0JsS1N3Z2RHaHBjeTVpSUQwZ1NXOG9jaXdnYVN3Z1pTQXRJREVnTHlBektUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlRkSGxzWlNobEtTQjdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdkQ2hwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2tnSVQwOUlIWnZhV1FnTUNBbUppQndZWEp6WlVac2IyRjBLR2twSUR3Z01TQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtOdmJHOXlPaUJCYkhCb1lTQmpiMjF3YjI1bGJuUWdiMllnSWlBcklHVWdLeUFpSUhkcGJHd2dZbVVnYVdkdWIzSmxaQzRpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJRzQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNGdQU0F2WGlnb1B6cHlaMko4YUhOc0tXRS9LVndvS0Z0ZVhDbGRLaWxjS1M4dVpYaGxZeWhsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTd2djaUE5SUc1Yk1WMHNJRzhnUFNCdVd6SmRPd29nSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvY2lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0p5WjJJaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpY21kaVlTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQU0F2WGx4ektpaGNaQ3NwWEhNcUxGeHpLaWhjWkNzcFhITXFMRnh6S2loY1pDc3BYSE1xS0Q4NkxGeHpLaWhjWkNwY0xqOWNaQ3NwWEhNcUtUOGtMeTVsZUdWaktHOHBLU0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdUV0YwYUM1dGFXNG9NalUxTENCd1lYSnpaVWx1ZENocFd6RmRMQ0F4TUNrcElDOGdNalUxTENCMGFHbHpMbWNnUFNCTllYUm9MbTFwYmlneU5UVXNJSEJoY25ObFNXNTBLR2xiTWwwc0lERXdLU2tnTHlBeU5UVXNJSFJvYVhNdVlpQTlJRTFoZEdndWJXbHVLREkxTlN3Z2NHRnljMlZKYm5Rb2FWc3pYU3dnTVRBcEtTQXZJREkxTlN3Z2RDaHBXelJkS1N3Z2RHaHBjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0E5SUM5ZVhITXFLRnhrS3lsY0pWeHpLaXhjY3lvb1hHUXJLVndsWEhNcUxGeHpLaWhjWkNzcFhDVmNjeW9vUHpvc1hITXFLRnhrS2x3dVAxeGtLeWxjY3lvcFB5UXZMbVY0WldNb2J5a3BJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQk5ZWFJvTG0xcGJpZ3hNREFzSUhCaGNuTmxTVzUwS0dsYk1WMHNJREV3S1NrZ0x5QXhNREFzSUhSb2FYTXVaeUE5SUUxaGRHZ3ViV2x1S0RFd01Dd2djR0Z5YzJWSmJuUW9hVnN5WFN3Z01UQXBLU0F2SURFd01Dd2dkR2hwY3k1aUlEMGdUV0YwYUM1dGFXNG9NVEF3TENCd1lYSnpaVWx1ZENocFd6TmRMQ0F4TUNrcElDOGdNVEF3TENCMEtHbGJORjBwTENCMGFHbHpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWFITnNJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0ltaHpiR0VpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQwZ0wxNWNjeW9vWEdRcVhDNC9YR1FyS1Z4ektpeGNjeW9vWEdRcktWd2xYSE1xTEZ4ektpaGNaQ3NwWENWY2N5b29Qem9zWEhNcUtGeGtLbHd1UDF4a0t5bGNjeW9wUHlRdkxtVjRaV01vYnlrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCd1lYSnpaVVpzYjJGMEtHbGJNVjBwSUM4Z016WXdMQ0JzSUQwZ2NHRnljMlZKYm5Rb2FWc3lYU3dnTVRBcElDOGdNVEF3TENCaklEMGdjR0Z5YzJWSmJuUW9hVnN6WFN3Z01UQXBJQzhnTVRBd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENocFd6UmRLU3dnZEdocGN5NXpaWFJJVTB3b1lTd2diQ3dnWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHVJRDBnTDE1Y0l5aGJRUzFHWVMxbVhHUmRLeWtrTHk1bGVHVmpLR1VwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdibHN4WFN3Z2NpQTlJR2t1YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ015a2djbVYwZFhKdUlIUm9hWE11Y2lBOUlIQmhjbk5sU1c1MEtHa3VZMmhoY2tGMEtEQXBJQ3NnYVM1amFHRnlRWFFvTUNrc0lERTJLU0F2SURJMU5Td2dkR2hwY3k1bklEMGdjR0Z5YzJWSmJuUW9hUzVqYUdGeVFYUW9NU2tnS3lCcExtTm9ZWEpCZENneEtTd2dNVFlwSUM4Z01qVTFMQ0IwYUdsekxtSWdQU0J3WVhKelpVbHVkQ2hwTG1Ob1lYSkJkQ2d5S1NBcklHa3VZMmhoY2tGMEtESXBMQ0F4TmlrZ0x5QXlOVFVzSUhSb2FYTTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNBMktTQnlaWFIxY200Z2RHaHBjeTV5SUQwZ2NHRnljMlZKYm5Rb2FTNWphR0Z5UVhRb01Da2dLeUJwTG1Ob1lYSkJkQ2d4S1N3Z01UWXBJQzhnTWpVMUxDQjBhR2x6TG1jZ1BTQndZWEp6WlVsdWRDaHBMbU5vWVhKQmRDZ3lLU0FySUdrdVkyaGhja0YwS0RNcExDQXhOaWtnTHlBeU5UVXNJSFJvYVhNdVlpQTlJSEJoY25ObFNXNTBLR2t1WTJoaGNrRjBLRFFwSUNzZ2FTNWphR0Z5UVhRb05Ta3NJREUyS1NBdklESTFOU3dnZEdocGN6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdKaVlnWlM1c1pXNW5kR2dnUGlBd0lEOGdkR2hwY3k1elpYUkRiMnh2Y2s1aGJXVW9aU2tnT2lCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFEyOXNiM0pPWVcxbEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJQ1JqVzJVdWRHOU1iM2RsY2tOaGMyVW9LVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlIWnZhV1FnTUNBL0lIUm9hWE11YzJWMFNHVjRLSFFwSURvZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNURiMnh2Y2pvZ1ZXNXJibTkzYmlCamIyeHZjaUFpSUNzZ1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9kR2hwY3k1eUxDQjBhR2x6TG1jc0lIUm9hWE11WWlrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1pTNXlMQ0IwYUdsekxtY2dQU0JsTG1jc0lIUm9hWE11WWlBOUlHVXVZaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hsVFVrZENWRzlNYVc1bFlYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JFYnlobExuSXBMQ0IwYUdsekxtY2dQU0JFYnlobExtY3BMQ0IwYUdsekxtSWdQU0JFYnlobExtSXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVV4cGJtVmhjbFJ2VTFKSFFpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNpQTlJRVp2S0dVdWNpa3NJSFJvYVhNdVp5QTlJRVp2S0dVdVp5a3NJSFJvYVhNdVlpQTlJRVp2S0dVdVlpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiMjUyWlhKMFUxSkhRbFJ2VEdsdVpXRnlLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZjSGxUVWtkQ1ZHOU1hVzVsWVhJb2RHaHBjeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjI1MlpYSjBUR2x1WldGeVZHOVRVa2RDS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU52Y0hsTWFXNWxZWEpVYjFOU1IwSW9kR2hwY3lrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUklaWGdvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUFxSURJMU5TQThQQ0F4TmlCZUlIUm9hWE11WnlBcUlESTFOU0E4UENBNElGNGdkR2hwY3k1aUlDb2dNalUxSUR3OElEQTdDaUFnSUNCOUNpQWdJQ0JuWlhSSVpYaFRkSEpwYm1jb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDZ2lNREF3TURBd0lpQXJJSFJvYVhNdVoyVjBTR1Y0S0NrdWRHOVRkSEpwYm1jb01UWXBLUzV6YkdsalpTZ3ROaWs3Q2lBZ0lDQjlDaUFnSUNCblpYUklVMHdvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV5TENCdUlEMGdkR2hwY3k1bkxDQnBJRDBnZEdocGN5NWlMQ0J5SUQwZ1RXRjBhQzV0WVhnb2RDd2diaXdnYVNrc0lHOGdQU0JOWVhSb0xtMXBiaWgwTENCdUxDQnBLU3dnWVN3Z2JDd2dZeUE5SUNodklDc2djaWtnTHlBeU93b2dJQ0FnSUNBZ0lHbG1JQ2h2SUQwOVBTQnlLU0JoSUQwZ01Dd2diQ0E5SURBN0NpQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2NpQXRJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNoc0lEMGdZeUE4UFNBdU5TQS9JR2dnTHlBb2NpQXJJRzhwSURvZ2FDQXZJQ2d5SUMwZ2NpQXRJRzhwTENCeUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnS0c0Z0xTQnBLU0F2SUdnZ0t5QW9iaUE4SUdrZ1B5QTJJRG9nTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRzQ2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTQTlJQ2hwSUMwZ2RDa2dMeUJvSUNzZ01qc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnYVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnS0hRZ0xTQnVLU0F2SUdnZ0t5QTBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR0VnTHowZ05qc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVhQ0E5SUdFc0lHVXVjeUE5SUd3c0lHVXViQ0E5SUdNc0lHVTdDaUFnSUNCOUNpQWdJQ0JuWlhSVGRIbHNaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSW5KbllpZ2lJQ3NnS0hSb2FYTXVjaUFxSURJMU5TQjhJREFwSUNzZ0lpd2lJQ3NnS0hSb2FYTXVaeUFxSURJMU5TQjhJREFwSUNzZ0lpd2lJQ3NnS0hSb2FYTXVZaUFxSURJMU5TQjhJREFwSUNzZ0lpa2lPd29nSUNBZ2ZRb2dJQ0FnYjJabWMyVjBTRk5NS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJJVTB3b1JuUXBMQ0JHZEM1b0lDczlJR1VzSUVaMExuTWdLejBnZEN3Z1JuUXViQ0FyUFNCdUxDQjBhR2x6TG5ObGRFaFRUQ2hHZEM1b0xDQkdkQzV6TENCR2RDNXNLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBclBTQmxMbklzSUhSb2FYTXVaeUFyUFNCbExtY3NJSFJvYVhNdVlpQXJQU0JsTG1Jc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUkRiMnh2Y25Nb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JsTG5JZ0t5QjBMbklzSUhSb2FYTXVaeUE5SUdVdVp5QXJJSFF1Wnl3Z2RHaHBjeTVpSUQwZ1pTNWlJQ3NnZEM1aUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlDczlJR1VzSUhSb2FYTXVaeUFyUFNCbExDQjBhR2x6TG1JZ0t6MGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE4xWWlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBOUlFMWhkR2d1YldGNEtEQXNJSFJvYVhNdWNpQXRJR1V1Y2lrc0lIUm9hWE11WnlBOUlFMWhkR2d1YldGNEtEQXNJSFJvYVhNdVp5QXRJR1V1Wnlrc0lIUm9hWE11WWlBOUlFMWhkR2d1YldGNEtEQXNJSFJvYVhNdVlpQXRJR1V1WWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBcVBTQmxMbklzSUhSb2FYTXVaeUFxUFNCbExtY3NJSFJvYVhNdVlpQXFQU0JsTG1Jc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUFxUFNCbExDQjBhR2x6TG1jZ0tqMGdaU3dnZEdocGN5NWlJQ285SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCc1pYSndLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUNzOUlDaGxMbklnTFNCMGFHbHpMbklwSUNvZ2RDd2dkR2hwY3k1bklDczlJQ2hsTG1jZ0xTQjBhR2x6TG1jcElDb2dkQ3dnZEdocGN5NWlJQ3M5SUNobExtSWdMU0IwYUdsekxtSXBJQ29nZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4bGNuQkRiMnh2Y25Nb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbklnUFNCbExuSWdLeUFvZEM1eUlDMGdaUzV5S1NBcUlHNHNJSFJvYVhNdVp5QTlJR1V1WnlBcklDaDBMbWNnTFNCbExtY3BJQ29nYml3Z2RHaHBjeTVpSUQwZ1pTNWlJQ3NnS0hRdVlpQXRJR1V1WWlrZ0tpQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiR1Z5Y0VoVFRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVuWlhSSVUwd29SblFwTENCbExtZGxkRWhUVENocWNpazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQnZjaWhHZEM1b0xDQnFjaTVvTENCMEtTd2dhU0E5SUc5eUtFWjBMbk1zSUdweUxuTXNJSFFwTENCeUlEMGdiM0lvUm5RdWJDd2dhbkl1YkN3Z2RDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMFNGTk1LRzRzSUdrc0lISXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV5SUQwOVBTQjBhR2x6TG5JZ0ppWWdaUzVuSUQwOVBTQjBhR2x6TG1jZ0ppWWdaUzVpSUQwOVBTQjBhR2x6TG1JN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UVhKeVlYa29aU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdaVnQwWFN3Z2RHaHBjeTVuSUQwZ1pWdDBJQ3NnTVYwc0lIUm9hWE11WWlBOUlHVmJkQ0FySURKZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiZEYwZ1BTQjBhR2x6TG5Jc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1bkxDQmxXM1FnS3lBeVhTQTlJSFJvYVhNdVlpd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JsTG1kbGRGZ29kQ2tzSUhSb2FYTXVaeUE5SUdVdVoyVjBXU2gwS1N3Z2RHaHBjeTVpSUQwZ1pTNW5aWFJhS0hRcExDQmxMbTV2Y20xaGJHbDZaV1FnUFQwOUlDRXdJQ1ltSUNoMGFHbHpMbklnTHowZ01qVTFMQ0IwYUdsekxtY2dMejBnTWpVMUxDQjBhR2x6TG1JZ0x6MGdNalUxS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJJWlhnb0tUc0tJQ0FnSUgwS2ZUc0tZV1V1VGtGTlJWTWdQU0FrWXpzS1lXVXVjSEp2ZEc5MGVYQmxMbWx6UTI5c2IzSWdQU0FoTURzS1lXVXVjSEp2ZEc5MGVYQmxMbklnUFNBeE93cGhaUzV3Y205MGIzUjVjR1V1WnlBOUlERTdDbUZsTG5CeWIzUnZkSGx3WlM1aUlEMGdNVHNLZG1GeUlHaHVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk5aWE5vUW1GemFXTk5ZWFJsY21saGJDSXNJSFJvYVhNdVkyOXNiM0lnUFNCdVpYY2dZV1VvTVRZM056Y3lNVFVwTENCMGFHbHpMbTFoY0NBOUlHNTFiR3dzSUhSb2FYTXViR2xuYUhSTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1SUQwZ01Td2dkR2hwY3k1aGIwMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG5Od1pXTjFiR0Z5VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpXNTJUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWpiMjFpYVc1bElEMGdWbk1zSUhSb2FYTXVjbVZtYkdWamRHbDJhWFI1SUQwZ01Td2dkR2hwY3k1eVpXWnlZV04wYVc5dVVtRjBhVzhnUFNBdU9UZ3NJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bFkyRndJRDBnSW5KdmRXNWtJaXdnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WTI5c2IzSXVZMjl3ZVNobExtTnZiRzl5S1N3Z2RHaHBjeTV0WVhBZ1BTQmxMbTFoY0N3Z2RHaHBjeTVzYVdkb2RFMWhjQ0E5SUdVdWJHbG5hSFJOWVhBc0lIUm9hWE11YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNCbExteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUxDQjBhR2x6TG1GdlRXRndJRDBnWlM1aGIwMWhjQ3dnZEdocGN5NWhiMDFoY0VsdWRHVnVjMmwwZVNBOUlHVXVZVzlOWVhCSmJuUmxibk5wZEhrc0lIUm9hWE11YzNCbFkzVnNZWEpOWVhBZ1BTQmxMbk53WldOMWJHRnlUV0Z3TENCMGFHbHpMbUZzY0doaFRXRndJRDBnWlM1aGJIQm9ZVTFoY0N3Z2RHaHBjeTVsYm5aTllYQWdQU0JsTG1WdWRrMWhjQ3dnZEdocGN5NWpiMjFpYVc1bElEMGdaUzVqYjIxaWFXNWxMQ0IwYUdsekxuSmxabXhsWTNScGRtbDBlU0E5SUdVdWNtVm1iR1ZqZEdsMmFYUjVMQ0IwYUdsekxuSmxabkpoWTNScGIyNVNZWFJwYnlBOUlHVXVjbVZtY21GamRHbHZibEpoZEdsdkxDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlHVXVkMmx5WldaeVlXMWxMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WallYQWdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1TENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BvYmk1d2NtOTBiM1I1Y0dVdWFYTk5aWE5vUW1GemFXTk5ZWFJsY21saGJDQTlJQ0V3T3dwMllYSWdTbVVnUFNCdVpYY2dUU3dnVVhJZ1BTQnVaWGNnV0N3Z1ZXVWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGxLU2tnZEdoeWIzY2dibVYzSUZSNWNHVkZjbkp2Y2lnaVZFaFNSVVV1UW5WbVptVnlRWFIwY21saWRYUmxPaUJoY25KaGVTQnphRzkxYkdRZ1ltVWdZU0JVZVhCbFpDQkJjbkpoZVM0aUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0FpSWl3Z2RHaHBjeTVoY25KaGVTQTlJR1VzSUhSb2FYTXVhWFJsYlZOcGVtVWdQU0IwTENCMGFHbHpMbU52ZFc1MElEMGdaU0FoUFQwZ2RtOXBaQ0F3SUQ4Z1pTNXNaVzVuZEdnZ0x5QjBJRG9nTUN3Z2RHaHBjeTV1YjNKdFlXeHBlbVZrSUQwZ2JpQTlQVDBnSVRBc0lIUm9hWE11ZFhOaFoyVWdQU0JvY2l3Z2RHaHBjeTUxY0dSaGRHVlNZVzVuWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYjJabWMyVjBPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiM1Z1ZERvZ0xURUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuWmxjbk5wYjI0Z1BTQXdPd29nSUNBZ2ZRb2dJQ0FnYjI1VmNHeHZZV1JEWVd4c1ltRmpheWdwSUh0OUNpQWdJQ0J6WlhRZ2JtVmxaSE5WY0dSaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVZ1BUMDlJQ0V3SUNZbUlIUm9hWE11ZG1WeWMybHZiaXNyT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWWE5oWjJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5WellXZGxJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNWhiV1VnUFNCbExtNWhiV1VzSUhSb2FYTXVZWEp5WVhrZ1BTQnVaWGNnWlM1aGNuSmhlUzVqYjI1emRISjFZM1J2Y2lobExtRnljbUY1S1N3Z2RHaHBjeTVwZEdWdFUybDZaU0E5SUdVdWFYUmxiVk5wZW1Vc0lIUm9hWE11WTI5MWJuUWdQU0JsTG1OdmRXNTBMQ0IwYUdsekxtNXZjbTFoYkdsNlpXUWdQU0JsTG01dmNtMWhiR2w2WldRc0lIUm9hWE11ZFhOaFoyVWdQU0JsTG5WellXZGxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVVGMEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQmxJQ285SUhSb2FYTXVhWFJsYlZOcGVtVXNJRzRnS2owZ2RDNXBkR1Z0VTJsNlpUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdkR2hwY3k1cGRHVnRVMmw2WlRzZ2FTQThJSEk3SUdrckt5bDBhR2x6TG1GeWNtRjVXMlVnS3lCcFhTQTlJSFF1WVhKeVlYbGJiaUFySUdsZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VVRnljbUY1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVTNXpaWFFvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVRMjlzYjNKelFYSnlZWGtvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVoY25KaGVTd2diaUE5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHVXViR1Z1WjNSb095QnBJRHdnY2pzZ2FTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbFcybGRPd29nSUNBZ0lDQWdJQ0FnSUNCdklEMDlQU0IyYjJsa0lEQWdKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UVhSMGNtbGlkWFJsTG1OdmNIbERiMnh2Y25OQmNuSmhlU2dwT2lCamIyeHZjaUJwY3lCMWJtUmxabWx1WldRaUxDQnBLU3dnYnlBOUlHNWxkeUJoWlNrc0lIUmJiaXNyWFNBOUlHOHVjaXdnZEZ0dUt5dGRJRDBnYnk1bkxDQjBXMjRySzEwZ1BTQnZMbUk3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVZabFkzUnZjakp6UVhKeVlYa29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWhjbkpoZVN3Z2JpQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUdVdWJHVnVaM1JvT3lCcElEd2djanNnYVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsVzJsZE93b2dJQ0FnSUNBZ0lDQWdJQ0J2SUQwOVBTQjJiMmxrSURBZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlRWFIwY21saWRYUmxMbU52Y0hsV1pXTjBiM0l5YzBGeWNtRjVLQ2s2SUhabFkzUnZjaUJwY3lCMWJtUmxabWx1WldRaUxDQnBLU3dnYnlBOUlHNWxkeUJZS1N3Z2RGdHVLeXRkSUQwZ2J5NTRMQ0IwVzI0cksxMGdQU0J2TG5rN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VWWmxZM1J2Y2pOelFYSnlZWGtvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVoY25KaGVTd2diaUE5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHVXViR1Z1WjNSb095QnBJRHdnY2pzZ2FTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbFcybGRPd29nSUNBZ0lDQWdJQ0FnSUNCdklEMDlQU0IyYjJsa0lEQWdKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UVhSMGNtbGlkWFJsTG1OdmNIbFdaV04wYjNJemMwRnljbUY1S0NrNklIWmxZM1J2Y2lCcGN5QjFibVJsWm1sdVpXUWlMQ0JwS1N3Z2J5QTlJRzVsZHlCTktTd2dkRnR1S3l0ZElEMGdieTU0TENCMFcyNHJLMTBnUFNCdkxua3NJSFJiYmlzclhTQTlJRzh1ZWpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVZtVmpkRzl5TkhOQmNuSmhlU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbUZ5Y21GNUxDQnVJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ1pTNXNaVzVuZEdnN0lHa2dQQ0J5T3lCcEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdWYmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z1BUMDlJSFp2YVdRZ01DQW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1V1WTI5d2VWWmxZM1J2Y2pSelFYSnlZWGtvS1RvZ2RtVmpkRzl5SUdseklIVnVaR1ZtYVc1bFpDSXNJR2twTENCdklEMGdibVYzSUZabEtTd2dkRnR1S3l0ZElEMGdieTU0TENCMFcyNHJLMTBnUFNCdkxua3NJSFJiYmlzclhTQTlJRzh1ZWl3Z2RGdHVLeXRkSUQwZ2J5NTNPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDRNeWhsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFYUmxiVk5wZW1VZ1BUMDlJRElwSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbU52ZFc1ME95QjBJRHdnYmpzZ2RDc3JLVkZ5TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RHaHBjeXdnZENrc0lGRnlMbUZ3Y0d4NVRXRjBjbWw0TXlobEtTd2dkR2hwY3k1elpYUllXU2gwTENCUmNpNTRMQ0JSY2k1NUtUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaDBhR2x6TG1sMFpXMVRhWHBsSUQwOVBTQXpLU0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NWpiM1Z1ZERzZ2RDQThJRzQ3SUhRckt5bEtaUzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hSb2FYTXNJSFFwTENCS1pTNWhjSEJzZVUxaGRISnBlRE1vWlNrc0lIUm9hWE11YzJWMFdGbGFLSFFzSUVwbExuZ3NJRXBsTG5rc0lFcGxMbm9wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGcwS0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1amIzVnVkRHNnZENBOElHNDdJSFFyS3lsS1pTNTRJRDBnZEdocGN5NW5aWFJZS0hRcExDQktaUzU1SUQwZ2RHaHBjeTVuWlhSWktIUXBMQ0JLWlM1NklEMGdkR2hwY3k1blpYUmFLSFFwTENCS1pTNWhjSEJzZVUxaGRISnBlRFFvWlNrc0lIUm9hWE11YzJWMFdGbGFLSFFzSUVwbExuZ3NJRXBsTG5rc0lFcGxMbm9wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsT2IzSnRZV3hOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbU52ZFc1ME95QjBJRHdnYmpzZ2RDc3JLVXBsTG5nZ1BTQjBhR2x6TG1kbGRGZ29kQ2tzSUVwbExua2dQU0IwYUdsekxtZGxkRmtvZENrc0lFcGxMbm9nUFNCMGFHbHpMbWRsZEZvb2RDa3NJRXBsTG1Gd2NHeDVUbTl5YldGc1RXRjBjbWw0S0dVcExDQjBhR2x6TG5ObGRGaFpXaWgwTENCS1pTNTRMQ0JLWlM1NUxDQktaUzU2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1elptOXliVVJwY21WamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlIUm9hWE11WTI5MWJuUTdJSFFnUENCdU95QjBLeXNwU21VdWVDQTlJSFJvYVhNdVoyVjBXQ2gwS1N3Z1NtVXVlU0E5SUhSb2FYTXVaMlYwV1NoMEtTd2dTbVV1ZWlBOUlIUm9hWE11WjJWMFdpaDBLU3dnU21VdWRISmhibk5tYjNKdFJHbHlaV04wYVc5dUtHVXBMQ0IwYUdsekxuTmxkRmhaV2loMExDQktaUzU0TENCS1pTNTVMQ0JLWlM1NktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeWNtRjVMbk5sZENobExDQjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEZnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeWNtRjVXMlVnS2lCMGFHbHpMbWwwWlcxVGFYcGxYVHNLSUNBZ0lIMEtJQ0FnSUhObGRGZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNVcyVWdLaUIwYUdsekxtbDBaVzFUYVhwbFhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaU0FySURGZE93b2dJQ0FnZlFvZ0lDQWdjMlYwV1NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYSnlZWGxiWlNBcUlIUm9hWE11YVhSbGJWTnBlbVVnS3lBeFhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSYUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaU0FySURKZE93b2dJQ0FnZlFvZ0lDQWdjMlYwV2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYSnlZWGxiWlNBcUlIUm9hWE11YVhSbGJWTnBlbVVnS3lBeVhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSWEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaU0FySUROZE93b2dJQ0FnZlFvZ0lDQWdjMlYwVnlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYSnlZWGxiWlNBcUlIUm9hWE11YVhSbGJWTnBlbVVnS3lBelhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWVdTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdLajBnZEdocGN5NXBkR1Z0VTJsNlpTd2dkR2hwY3k1aGNuSmhlVnRsSUNzZ01GMGdQU0IwTENCMGFHbHpMbUZ5Y21GNVcyVWdLeUF4WFNBOUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1Zvb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ285SUhSb2FYTXVhWFJsYlZOcGVtVXNJSFJvYVhNdVlYSnlZWGxiWlNBcklEQmRJRDBnZEN3Z2RHaHBjeTVoY25KaGVWdGxJQ3NnTVYwZ1BTQnVMQ0IwYUdsekxtRnljbUY1VzJVZ0t5QXlYU0E5SUdrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllXVnBYS0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0FxUFNCMGFHbHpMbWwwWlcxVGFYcGxMQ0IwYUdsekxtRnljbUY1VzJVZ0t5QXdYU0E5SUhRc0lIUm9hWE11WVhKeVlYbGJaU0FySURGZElEMGdiaXdnZEdocGN5NWhjbkpoZVZ0bElDc2dNbDBnUFNCcExDQjBhR2x6TG1GeWNtRjVXMlVnS3lBelhTQTlJSElzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J2YmxWd2JHOWhaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViMjVWY0d4dllXUkRZV3hzWW1GamF5QTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvZEdocGN5NWhjbkpoZVN3Z2RHaHBjeTVwZEdWdFUybDZaU2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJWTnBlbVU2SUhSb2FYTXVhWFJsYlZOcGVtVXNDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSFJvYVhNdVlYSnlZWGt1WTI5dWMzUnlkV04wYjNJdWJtRnRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lYSnlZWGs2SUVGeWNtRjVMbkJ5YjNSdmRIbHdaUzV6YkdsalpTNWpZV3hzS0hSb2FYTXVZWEp5WVhrcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeHBlbVZrT2lCMGFHbHpMbTV2Y20xaGJHbDZaV1FLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNWhiV1VnSVQwOUlDSWlJQ1ltSUNobExtNWhiV1VnUFNCMGFHbHpMbTVoYldVcExDQjBhR2x6TG5WellXZGxJQ0U5UFNCb2NpQW1KaUFvWlM1MWMyRm5aU0E5SUhSb2FYTXVkWE5oWjJVcExDQW9kR2hwY3k1MWNHUmhkR1ZTWVc1blpTNXZabVp6WlhRZ0lUMDlJREFnZkh3Z2RHaHBjeTUxY0dSaGRHVlNZVzVuWlM1amIzVnVkQ0FoUFQwZ0xURXBJQ1ltSUNobExuVndaR0YwWlZKaGJtZGxJRDBnZEdocGN5NTFjR1JoZEdWU1lXNW5aU2tzSUdVN0NpQWdJQ0I5Q24wN0NsVmxMbkJ5YjNSdmRIbHdaUzVwYzBKMVptWmxja0YwZEhKcFluVjBaU0E5SUNFd093cDJZWElnYW1NZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5QkpiblE0UVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0JSWXlBOUlHTnNZWE56SUdWNGRHVnVaSE1nVldVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lGVnBiblE0UVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0JMWXlBOUlHTnNZWE56SUdWNGRHVnVaSE1nVldVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lGVnBiblE0UTJ4aGJYQmxaRUZ5Y21GNUtHVXBMQ0IwTENCdUtUc0tJQ0FnSUgwS2ZTd2daV2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzVsZHlCSmJuUXhOa0Z5Y21GNUtHVXBMQ0IwTENCdUtUc0tJQ0FnSUgwS2ZTd2dXWE1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzVsZHlCVmFXNTBNVFpCY25KaGVTaGxLU3dnZEN3Z2JpazdDaUFnSUNCOUNuMHNJSFJvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJWWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1WlhjZ1NXNTBNekpCY25KaGVTaGxLU3dnZEN3Z2JpazdDaUFnSUNCOUNuMHNJRnB6SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJWWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1WlhjZ1ZXbHVkRE15UVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0J1YUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVldVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lGVnBiblF4TmtGeWNtRjVLR1VwTENCMExDQnVLVHNLSUNBZ0lIMEtmVHNLYm1ndWNISnZkRzkwZVhCbExtbHpSbXh2WVhReE5rSjFabVpsY2tGMGRISnBZblYwWlNBOUlDRXdPd3AyWVhJZ1pHVWdQU0JqYkdGemN5QmxlSFJsYm1SeklGVmxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1pTa3NJSFFzSUc0cE93b2dJQ0FnZlFwOUxDQnBhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWV1VnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUVac2IyRjBOalJCY25KaGVTaGxLU3dnZEN3Z2JpazdDaUFnSUNCOUNuMHNJR05tSUQwZ01Dd2dVblFnUFNCdVpYY2djR1VzSUU1dklEMGdibVYzSUU1bExDQmphU0E5SUc1bGR5Qk5MQ0JVZENBOUlHNWxkeUJNZEN3Z0pHa2dQU0J1WlhjZ1RIUXNJR2gwSUQwZ2JtVjNJRTBzSUY5bElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRmJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0hSb2FYTXNJQ0pwWkNJc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJR05tS3lzS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1MWRXbGtJRDBnUlhRb0tTd2dkR2hwY3k1dVlXMWxJRDBnSWlJc0lIUm9hWE11ZEhsd1pTQTlJQ0pDZFdabVpYSkhaVzl0WlhSeWVTSXNJSFJvYVhNdWFXNWtaWGdnUFNCdWRXeHNMQ0IwYUdsekxtRjBkSEpwWW5WMFpYTWdQU0I3ZlN3Z2RHaHBjeTV0YjNKd2FFRjBkSEpwWW5WMFpYTWdQU0I3ZlN3Z2RHaHBjeTV0YjNKd2FGUmhjbWRsZEhOU1pXeGhkR2wyWlNBOUlDRXhMQ0IwYUdsekxtZHliM1Z3Y3lBOUlGdGRMQ0IwYUdsekxtSnZkVzVrYVc1blFtOTRJRDBnYm5Wc2JDd2dkR2hwY3k1aWIzVnVaR2x1WjFOd2FHVnlaU0E5SUc1MWJHd3NJSFJvYVhNdVpISmhkMUpoYm1kbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRG9nTUN3S0lDQWdJQ0FnSUNBZ0lDQWdZMjkxYm5RNklERWdMeUF3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUh0OU93b2dJQ0FnZlFvZ0lDQWdaMlYwU1c1a1pYZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFXNWtaWGc3Q2lBZ0lDQjlDaUFnSUNCelpYUkpibVJsZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFRnljbUY1TG1selFYSnlZWGtvWlNrZ1B5QjBhR2x6TG1sdVpHVjRJRDBnYm1WM0lDaFpZeWhsS1NBK0lEWTFOVE0xSUQ4Z1duTWdPaUJaY3lrb1pTd2dNU2tnT2lCMGFHbHpMbWx1WkdWNElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVGMGRISnBZblYwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhSMGNtbGlkWFJsYzF0bFhUc0tJQ0FnSUgwS0lDQWdJSE5sZEVGMGRISnBZblYwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYUjBjbWxpZFhSbGMxdGxYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa1pXeGxkR1ZCZEhSeWFXSjFkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCa1pXeGxkR1VnZEdocGN5NWhkSFJ5YVdKMWRHVnpXMlZkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYUdGelFYUjBjbWxpZFhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGRIUnlhV0oxZEdWelcyVmRJQ0U5UFNCMmIybGtJREE3Q2lBZ0lDQjlDaUFnSUNCaFpHUkhjbTkxY0NobExDQjBMQ0J1SUQwZ01Da2dld29nSUNBZ0lDQWdJSFJvYVhNdVozSnZkWEJ6TG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMjkxYm5RNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUcxaGRHVnlhV0ZzU1c1a1pYZzZJRzRLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLSUNBZ0lHTnNaV0Z5UjNKdmRYQnpLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaM0p2ZFhCeklEMGdXMTA3Q2lBZ0lDQjlDaUFnSUNCelpYUkVjbUYzVW1GdVoyVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WkhKaGQxSmhibWRsTG5OMFlYSjBJRDBnWlN3Z2RHaHBjeTVrY21GM1VtRnVaMlV1WTI5MWJuUWdQU0IwT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZWFIwY21saWRYUmxjeTV3YjNOcGRHbHZianNLSUNBZ0lDQWdJQ0IwSUNFOVBTQjJiMmxrSURBZ0ppWWdLSFF1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0IwTG01bFpXUnpWWEJrWVhSbElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWhkSFJ5YVdKMWRHVnpMbTV2Y20xaGJEc0tJQ0FnSUNBZ0lDQnBaaUFvYmlBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lHeDBLQ2t1WjJWMFRtOXliV0ZzVFdGMGNtbDRLR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVMbUZ3Y0d4NVRtOXliV0ZzVFdGMGNtbDRLSElwTENCdUxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6TG5SaGJtZGxiblE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2tnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvWlNrc0lHa3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Da3NJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ2dJVDA5SUc1MWJHd2dKaVlnZEdocGN5NWpiMjF3ZFhSbFFtOTFibVJwYm1kQ2IzZ29LU3dnZEdocGN5NWliM1Z1WkdsdVoxTndhR1Z5WlNBaFBUMGdiblZzYkNBbUppQjBhR2x6TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMU53YUdWeVpTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsUmRXRjBaWEp1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVblF1YldGclpWSnZkR0YwYVc5dVJuSnZiVkYxWVhSbGNtNXBiMjRvWlNrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtGSjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEp2ZEdGMFpWZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJTZEM1dFlXdGxVbTkwWVhScGIyNVlLR1VwTENCMGFHbHpMbUZ3Y0d4NVRXRjBjbWw0TkNoU2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVblF1YldGclpWSnZkR0YwYVc5dVdTaGxLU3dnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvVW5RcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsV2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGSjBMbTFoYTJWU2IzUmhkR2x2Ymxvb1pTa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLRkowS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZKMExtMWhhMlZVY21GdWMyeGhkR2x2YmlobExDQjBMQ0J1S1N3Z2RHaHBjeTVoY0hCc2VVMWhkSEpwZURRb1VuUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMk5oYkdVb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCU2RDNXRZV3RsVTJOaGJHVW9aU3dnZEN3Z2Jpa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLRkowS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4dmIydEJkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUU1dkxteHZiMnRCZENobEtTd2dUbTh1ZFhCa1lYUmxUV0YwY21sNEtDa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLRTV2TG0xaGRISnBlQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqWlc1MFpYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXRjSFYwWlVKdmRXNWthVzVuUW05NEtDa3NJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3VaMlYwUTJWdWRHVnlLR05wS1M1dVpXZGhkR1VvS1N3Z2RHaHBjeTUwY21GdWMyeGhkR1VvWTJrdWVDd2dZMmt1ZVN3Z1kya3VlaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVRzlwYm5SektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCbExteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnWlZ0dVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1d2RYTm9LSEl1ZUN3Z2NpNTVMQ0J5TG5vZ2ZId2dNQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvZEN3Z015a3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0hWMFpVSnZkVzVrYVc1blFtOTRLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZbTkxYm1ScGJtZENiM2dnUFQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WW05MWJtUnBibWRDYjNnZ1BTQnVaWGNnVEhRcE93b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCMElEMGdkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdKaVlnWlM1cGMwZE1RblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9KMVJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMEp2ZUNncE9pQkhURUoxWm1abGNrRjBkSEpwWW5WMFpTQnlaWEYxYVhKbGN5QmhJRzFoYm5WaGJDQmliM1Z1WkdsdVp5QmliM2d1SUVGc2RHVnlibUYwYVhabGJIa2djMlYwSUNKdFpYTm9MbVp5ZFhOMGRXMURkV3hzWldRaUlIUnZJQ0ptWVd4elpTSXVKeXdnZEdocGN5a3NJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3VjMlYwS0c1bGR5Qk5LQzB4SUM4Z01Dd2dMVEVnTHlBd0xDQXRNU0F2SURBcExDQnVaWGNnVFNneElDOGdNQ3dnTVNBdklEQXNJREVnTHlBd0tTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWliM1Z1WkdsdVowSnZlQzV6WlhSR2NtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHVXBMQ0IwS1NCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RDNXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBXMjVkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVkhRdWMyVjBSbkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h5S1N3Z2RHaHBjeTV0YjNKd2FGUmhjbWRsZEhOU1pXeGhkR2wyWlNBL0lDaG9kQzVoWkdSV1pXTjBiM0p6S0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldsdUxDQlVkQzV0YVc0cExDQjBhR2x6TG1KdmRXNWthVzVuUW05NExtVjRjR0Z1WkVKNVVHOXBiblFvYUhRcExDQm9kQzVoWkdSV1pXTjBiM0p6S0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldGNExDQlVkQzV0WVhncExDQjBhR2x6TG1KdmRXNWthVzVuUW05NExtVjRjR0Z1WkVKNVVHOXBiblFvYUhRcEtTQTZJQ2gwYUdsekxtSnZkVzVrYVc1blFtOTRMbVY0Y0dGdVpFSjVVRzlwYm5Rb1ZIUXViV2x1S1N3Z2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUM1bGVIQmhibVJDZVZCdmFXNTBLRlIwTG0xaGVDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldGclpVVnRjSFI1S0NrN0NpQWdJQ0FnSUNBZ0tHbHpUbUZPS0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldsdUxuZ3BJSHg4SUdselRtRk9LSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV2x1TG5rcElIeDhJR2x6VG1GT0tIUm9hWE11WW05MWJtUnBibWRDYjNndWJXbHVMbm9wS1NBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NkVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTNWpiMjF3ZFhSbFFtOTFibVJwYm1kQ2IzZ29LVG9nUTI5dGNIVjBaV1FnYldsdUwyMWhlQ0JvWVhabElFNWhUaUIyWVd4MVpYTXVJRlJvWlNBaWNHOXphWFJwYjI0aUlHRjBkSEpwWW5WMFpTQnBjeUJzYVd0bGJIa2dkRzhnYUdGMlpTQk9ZVTRnZG1Gc2RXVnpMaWNzSUhSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVVnUFQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVWdQU0J1WlhjZ1FXNHBPd29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQjBJRDBnZEdocGN5NXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSmlZZ1pTNXBjMGRNUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSjFSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwT2lCSFRFSjFabVpsY2tGMGRISnBZblYwWlNCeVpYRjFhWEpsY3lCaElHMWhiblZoYkNCaWIzVnVaR2x1WnlCemNHaGxjbVV1SUVGc2RHVnlibUYwYVhabGJIa2djMlYwSUNKdFpYTm9MbVp5ZFhOMGRXMURkV3hzWldRaUlIUnZJQ0ptWVd4elpTSXVKeXdnZEdocGN5a3NJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVV1YzJWMEtHNWxkeUJOTENBeElDOGdNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxMbU5sYm5SbGNqc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGUjBMbk5sZEVaeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTa3NJSFFwSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCMExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUmJjbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrYVM1elpYUkdjbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR0VwTENCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsSUQ4Z0tHaDBMbUZrWkZabFkzUnZjbk1vVkhRdWJXbHVMQ0FrYVM1dGFXNHBMQ0JVZEM1bGVIQmhibVJDZVZCdmFXNTBLR2gwS1N3Z2FIUXVZV1JrVm1WamRHOXljeWhVZEM1dFlYZ3NJQ1JwTG0xaGVDa3NJRlIwTG1WNGNHRnVaRUo1VUc5cGJuUW9hSFFwS1NBNklDaFVkQzVsZUhCaGJtUkNlVkJ2YVc1MEtDUnBMbTFwYmlrc0lGUjBMbVY0Y0dGdVpFSjVVRzlwYm5Rb0pHa3ViV0Y0S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ZIUXVaMlYwUTJWdWRHVnlLRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlEQTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCbExtTnZkVzUwT3lCeUlEd2dienNnY2lzcktXaDBMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2Npa3NJR2tnUFNCTllYUm9MbTFoZUNocExDQnVMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLR2gwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMEtTQm1iM0lvYkdWMElISWdQU0F3TENCdklEMGdkQzVzWlc1bmRHZzdJSElnUENCdk95QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwVzNKZExDQnNJRDBnZEdocGN5NXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZeUE5SURBc0lHZ2dQU0JoTG1OdmRXNTBPeUJqSUR3Z2FEc2dZeXNyS1doMExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnWXlrc0lHd2dKaVlnS0dOcExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnWXlrc0lHaDBMbUZrWkNoamFTa3BMQ0JwSUQwZ1RXRjBhQzV0WVhnb2FTd2diaTVrYVhOMFlXNWpaVlJ2VTNGMVlYSmxaQ2hvZENrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVXVjbUZrYVhWeklEMGdUV0YwYUM1emNYSjBLR2twTENCcGMwNWhUaWgwYUdsekxtSnZkVzVrYVc1blUzQm9aWEpsTG5KaFpHbDFjeWtnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWduVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rdVkyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2s2SUVOdmJYQjFkR1ZrSUhKaFpHbDFjeUJwY3lCT1lVNHVJRlJvWlNBaWNHOXphWFJwYjI0aUlHRjBkSEpwWW5WMFpTQnBjeUJzYVd0bGJIa2dkRzhnYUdGMlpTQk9ZVTRnZG1Gc2RXVnpMaWNzSUhSb2FYTXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdOdmJYQjFkR1ZVWVc1blpXNTBjeWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVhVzVrWlhnc0lIUWdQU0IwYUdsekxtRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdhV1lnS0dVZ1BUMDlJRzUxYkd3Z2ZId2dkQzV3YjNOcGRHbHZiaUE5UFQwZ2RtOXBaQ0F3SUh4OElIUXVibTl5YldGc0lEMDlQU0IyYjJsa0lEQWdmSHdnZEM1MWRpQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNU9pQXVZMjl0Y0hWMFpWUmhibWRsYm5SektDa2dabUZwYkdWa0xpQk5hWE56YVc1bklISmxjWFZwY21Wa0lHRjBkSEpwWW5WMFpYTWdLR2x1WkdWNExDQndiM05wZEdsdmJpd2dibTl5YldGc0lHOXlJSFYyS1NJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVoY25KaGVTd2dhU0E5SUhRdWNHOXphWFJwYjI0dVlYSnlZWGtzSUhJZ1BTQjBMbTV2Y20xaGJDNWhjbkpoZVN3Z2J5QTlJSFF1ZFhZdVlYSnlZWGtzSUdFZ1BTQnBMbXhsYm1kMGFDQXZJRE03Q2lBZ0lDQWdJQ0FnZEM1MFlXNW5aVzUwSUQwOVBTQjJiMmxrSURBZ0ppWWdkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblJoYm1kbGJuUWlMQ0J1WlhjZ1ZXVW9ibVYzSUVac2IyRjBNekpCY25KaGVTZzBJQ29nWVNrc0lEUXBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJSFF1ZEdGdVoyVnVkQzVoY25KaGVTd2dZeUE5SUZ0ZExDQm9JRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCQ0lEMGdNRHNnUWlBOElHRTdJRUlyS3lsalcwSmRJRDBnYm1WM0lFMHNJR2hiUWwwZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUc1bGR5Qk5MQ0JrSUQwZ2JtVjNJRTBzSUdZZ1BTQnVaWGNnVFN3Z2JTQTlJRzVsZHlCWUxDQjRJRDBnYm1WM0lGZ3NJSFlnUFNCdVpYY2dXQ3dnWnlBOUlHNWxkeUJOTENCd0lEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1h5aENMQ0JRTENCM0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhVdVpuSnZiVUZ5Y21GNUtHa3NJRUlnS2lBektTd2daQzVtY205dFFYSnlZWGtvYVN3Z1VDQXFJRE1wTENCbUxtWnliMjFCY25KaGVTaHBMQ0IzSUNvZ015a3NJRzB1Wm5KdmJVRnljbUY1S0c4c0lFSWdLaUF5S1N3Z2VDNW1jbTl0UVhKeVlYa29ieXdnVUNBcUlESXBMQ0IyTG1aeWIyMUJjbkpoZVNodkxDQjNJQ29nTWlrc0lHUXVjM1ZpS0hVcExDQm1Mbk4xWWloMUtTd2dlQzV6ZFdJb2JTa3NJSFl1YzNWaUtHMHBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSU0E5SURFZ0x5QW9lQzU0SUNvZ2RpNTVJQzBnZGk1NElDb2dlQzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJV2x6Um1sdWFYUmxLRVVwSUh4OElDaG5MbU52Y0hrb1pDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2RpNTVLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9aaXdnTFhndWVTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1JTa3NJSEF1WTI5d2VTaG1LUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaDRMbmdwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhrTENBdGRpNTRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaEZLU3dnWTF0Q1hTNWhaR1FvWnlrc0lHTmJVRjB1WVdSa0tHY3BMQ0JqVzNkZExtRmtaQ2huS1N3Z2FGdENYUzVoWkdRb2NDa3NJR2hiVUYwdVlXUmtLSEFwTENCb1czZGRMbUZrWkNod0tTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCNUlEMGdkR2hwY3k1bmNtOTFjSE03Q2lBZ0lDQWdJQ0FnZVM1c1pXNW5kR2dnUFQwOUlEQWdKaVlnS0hrZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMFlYSjBPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5MWJuUTZJRzR1YkdWdVozUm9DaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFSWdQU0F3TENCUUlEMGdlUzVzWlc1bmRHZzdJRUlnUENCUU95QXJLMElwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZHlBOUlIbGJRbDBzSUVVZ1BTQjNMbk4wWVhKMExDQkVJRDBnZHk1amIzVnVkRHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCVklEMGdSU3dnUmlBOUlFVWdLeUJFT3lCVklEd2dSanNnVlNBclBTQXpLVjhvYmx0VklDc2dNRjBzSUc1YlZTQXJJREZkTENCdVcxVWdLeUF5WFNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JpSUQwZ2JtVjNJRTBzSUVFZ1BTQnVaWGNnVFN3Z1RDQTlJRzVsZHlCTkxDQkpJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdheWhDS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRXd1Wm5KdmJVRnljbUY1S0hJc0lFSWdLaUF6S1N3Z1NTNWpiM0I1S0V3cE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VDQTlJR05iUWwwN0NpQWdJQ0FnSUNBZ0lDQWdJR0l1WTI5d2VTaFFLU3dnWWk1emRXSW9UQzV0ZFd4MGFYQnNlVk5qWVd4aGNpaE1MbVJ2ZENoUUtTa3BMbTV2Y20xaGJHbDZaU2dwTENCQkxtTnliM056Vm1WamRHOXljeWhKTENCUUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JCTG1SdmRDaG9XMEpkS1NBOElEQWdQeUF0TVNBNklERTdDaUFnSUNBZ0lDQWdJQ0FnSUd4YlFpQXFJRFJkSUQwZ1lpNTRMQ0JzVzBJZ0tpQTBJQ3NnTVYwZ1BTQmlMbmtzSUd4YlFpQXFJRFFnS3lBeVhTQTlJR0l1ZWl3Z2JGdENJQ29nTkNBcklETmRJRDBnUlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCQ0lEMGdNQ3dnVUNBOUlIa3ViR1Z1WjNSb095QkNJRHdnVURzZ0t5dENLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGNnUFNCNVcwSmRMQ0JGSUQwZ2R5NXpkR0Z5ZEN3Z1JDQTlJSGN1WTI5MWJuUTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVlNBOUlFVXNJRVlnUFNCRklDc2dSRHNnVlNBOElFWTdJRlVnS3owZ015bHJLRzViVlNBcklEQmRLU3dnYXlodVcxVWdLeUF4WFNrc0lHc29ibHRWSUNzZ01sMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdOdmJYQjFkR1ZXWlhKMFpYaE9iM0p0WVd4ektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1cGJtUmxlQ3dnZENBOUlIUm9hWE11WjJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXBPd29nSUNBZ0lDQWdJR2xtSUNoMElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbWRsZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUlEMDlQU0IyYjJsa0lEQXBJRzRnUFNCdVpYY2dWV1VvYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2gwTG1OdmRXNTBJQ29nTXlrc0lETXBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ1ptOXlLR3hsZENCa0lEMGdNQ3dnWmlBOUlHNHVZMjkxYm5RN0lHUWdQQ0JtT3lCa0t5c3BiaTV6WlhSWVdWb29aQ3dnTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJRTBzSUhJZ1BTQnVaWGNnVFN3Z2J5QTlJRzVsZHlCTkxDQmhJRDBnYm1WM0lFMHNJR3dnUFNCdVpYY2dUU3dnWXlBOUlHNWxkeUJOTENCb0lEMGdibVYzSUUwc0lIVWdQU0J1WlhjZ1RUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHVXBJR1p2Y2loc1pYUWdaQ0E5SURBc0lHWWdQU0JsTG1OdmRXNTBPeUJrSUR3Z1pqc2daQ0FyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0SUQwZ1pTNW5aWFJZS0dRZ0t5QXdLU3dnZUNBOUlHVXVaMlYwV0Noa0lDc2dNU2tzSUhZZ1BTQmxMbWRsZEZnb1pDQXJJRElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIUXNJRzBwTENCeUxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kQ3dnZUNrc0lHOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCMktTd2dhQzV6ZFdKV1pXTjBiM0p6S0c4c0lISXBMQ0IxTG5OMVlsWmxZM1J2Y25Nb2FTd2djaWtzSUdndVkzSnZjM01vZFNrc0lHRXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h1TENCdEtTd2diQzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0c0c0lIZ3BMQ0JqTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2Jpd2dkaWtzSUdFdVlXUmtLR2dwTENCc0xtRmtaQ2hvS1N3Z1l5NWhaR1FvYUNrc0lHNHVjMlYwV0ZsYUtHMHNJR0V1ZUN3Z1lTNTVMQ0JoTG5vcExDQnVMbk5sZEZoWldpaDRMQ0JzTG5nc0lHd3VlU3dnYkM1NktTd2diaTV6WlhSWVdWb29kaXdnWXk1NExDQmpMbmtzSUdNdWVpazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCbWIzSW9iR1YwSUdRZ1BTQXdMQ0JtSUQwZ2RDNWpiM1Z1ZERzZ1pDQThJR1k3SUdRZ0t6MGdNeWxwTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2daQ0FySURBcExDQnlMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEN3Z1pDQXJJREVwTENCdkxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kQ3dnWkNBcklESXBMQ0JvTG5OMVlsWmxZM1J2Y25Nb2J5d2djaWtzSUhVdWMzVmlWbVZqZEc5eWN5aHBMQ0J5S1N3Z2FDNWpjbTl6Y3loMUtTd2diaTV6WlhSWVdWb29aQ0FySURBc0lHZ3VlQ3dnYUM1NUxDQm9Mbm9wTENCdUxuTmxkRmhaV2loa0lDc2dNU3dnYUM1NExDQm9MbmtzSUdndWVpa3NJRzR1YzJWMFdGbGFLR1FnS3lBeUxDQm9MbmdzSUdndWVTd2dhQzU2S1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dWIzSnRZV3hwZW1WT2IzSnRZV3h6S0Nrc0lHNHVibVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J0WlhKblpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLQ0VvWlNBbUppQmxMbWx6UW5WbVptVnlSMlZ2YldWMGNua3BLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUxtMWxjbWRsS0NrNklHZGxiMjFsZEhKNUlHNXZkQ0JoYmlCcGJuTjBZVzVqWlNCdlppQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllUzRpTENCbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwSUQwOVBTQjJiMmxrSURBZ0ppWWdLSFFnUFNBd0xDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUxtMWxjbWRsS0NrNklFOTJaWEozY21sMGFXNW5JRzl5YVdkcGJtRnNJR2RsYjIxbGRISjVMQ0J6ZEdGeWRHbHVaeUJoZENCdlptWnpaWFE5TUM0Z1ZYTmxJRUoxWm1abGNrZGxiMjFsZEhKNVZYUnBiSE11YldWeVoyVkNkV1ptWlhKSFpXOXRaWFJ5YVdWektDa2dabTl5SUd4dmMzTnNaWE56SUcxbGNtZGxMaUlwS1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnYVc0Z2JpbDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxMbUYwZEhKcFluVjBaWE5iYVYwZ1BUMDlJSFp2YVdRZ01Da2dZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYmx0cFhTNWhjbkpoZVN3Z1lTQTlJR1V1WVhSMGNtbGlkWFJsYzF0cFhTd2diQ0E5SUdFdVlYSnlZWGtzSUdNZ1BTQmhMbWwwWlcxVGFYcGxJQ29nZEN3Z2FDQTlJRTFoZEdndWJXbHVLR3d1YkdWdVozUm9MQ0J2TG14bGJtZDBhQ0F0SUdNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnWXpzZ2RTQThJR2c3SUhVckt5d2daQ3NyS1c5YlpGMGdQU0JzVzNWZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUc1dmNtMWhiR2w2WlU1dmNtMWhiSE1vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbUYwZEhKcFluVjBaWE11Ym05eWJXRnNPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0JsTG1OdmRXNTBPeUIwSUR3Z2Jqc2dkQ3NyS1doMExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnZENrc0lHaDBMbTV2Y20xaGJHbDZaU2dwTENCbExuTmxkRmhaV2loMExDQm9kQzU0TENCb2RDNTVMQ0JvZEM1NktUc0tJQ0FnSUgwS0lDQWdJSFJ2VG05dVNXNWtaWGhsWkNncElIc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmxLR0VzSUd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0JoTG1GeWNtRjVMQ0JvSUQwZ1lTNXBkR1Z0VTJsNlpTd2dkU0E5SUdFdWJtOXliV0ZzYVhwbFpDd2daQ0E5SUc1bGR5QmpMbU52Ym5OMGNuVmpkRzl5S0d3dWJHVnVaM1JvSUNvZ2FDa3NJR1lnUFNBd0xDQnRJRDBnTURzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjRJRDBnTUN3Z2RpQTlJR3d1YkdWdVozUm9PeUI0SUR3Z2Rqc2dlQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFdWFYTkpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTQS9JR1lnUFNCc1czaGRJQ29nWVM1a1lYUmhMbk4wY21sa1pTQXJJR0V1YjJabWMyVjBJRG9nWmlBOUlHeGJlRjBnS2lCb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbklEMGdNRHNnWnlBOElHZzdJR2NyS3lsa1cyMHJLMTBnUFNCalcyWXJLMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCVlpTaGtMQ0JvTENCMUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhVzVrWlhnZ1BUMDlJRzUxYkd3cElISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG5SdlRtOXVTVzVrWlhobFpDZ3BPaUJDZFdabVpYSkhaVzl0WlhSeWVTQnBjeUJoYkhKbFlXUjVJRzV2YmkxcGJtUmxlR1ZrTGlJcExDQjBhR2x6T3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYm1WM0lGOWxMQ0J1SUQwZ2RHaHBjeTVwYm1SbGVDNWhjbkpoZVN3Z2FTQTlJSFJvYVhNdVlYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdhVzRnYVNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdhVnRoWFN3Z1l5QTlJR1VvYkN3Z2JpazdDaUFnSUNBZ0lDQWdJQ0FnSUhRdWMyVjBRWFIwY21saWRYUmxLR0VzSUdNcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0JwYmlCeUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JiWFN3Z1l5QTlJSEpiWVYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBc0lIVWdQU0JqTG14bGJtZDBhRHNnYUNBOElIVTdJR2dyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUdOYmFGMHNJR1lnUFNCbEtHUXNJRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkM1d2RYTm9LR1lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhRdWJXOXljR2hCZEhSeWFXSjFkR1Z6VzJGZElEMGdiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEM1dGIzSndhRlJoY21kbGRITlNaV3hoZEdsMlpTQTlJSFJvYVhNdWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVTdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBhR2x6TG1keWIzVndjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd0xDQnNJRDBnYnk1c1pXNW5kR2c3SUdFZ1BDQnNPeUJoS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzliWVYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1WVdSa1IzSnZkWEFvWXk1emRHRnlkQ3dnWXk1amIzVnVkQ3dnWXk1dFlYUmxjbWxoYkVsdVpHVjRLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFE3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGa1lYUmhPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUEwTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpUW5WbVptVnlSMlZ2YldWMGNua2lMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlZ1WlhKaGRHOXlPaUFpUW5WbVptVnlSMlZ2YldWMGNua3VkRzlLVTA5T0lnb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCcFppQW9aUzUxZFdsa0lEMGdkR2hwY3k1MWRXbGtMQ0JsTG5SNWNHVWdQU0IwYUdsekxuUjVjR1VzSUhSb2FYTXVibUZ0WlNBaFBUMGdJaUlnSmlZZ0tHVXVibUZ0WlNBOUlIUm9hWE11Ym1GdFpTa3NJRTlpYW1WamRDNXJaWGx6S0hSb2FYTXVkWE5sY2tSaGRHRXBMbXhsYm1kMGFDQStJREFnSmlZZ0tHVXVkWE5sY2tSaGRHRWdQU0IwYUdsekxuVnpaWEpFWVhSaEtTd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCMGFHbHpMbkJoY21GdFpYUmxjbk03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QnBiaUJzS1d4YlkxMGdJVDA5SUhadmFXUWdNQ0FtSmlBb1pWdGpYU0E5SUd4YlkxMHBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1pTNWtZWFJoSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JoZEhSeWFXSjFkR1Z6T2lCN2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1sdVpHVjRPd29nSUNBZ0lDQWdJSFFnSVQwOUlHNTFiR3dnSmlZZ0tHVXVaR0YwWVM1cGJtUmxlQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ2RDNWhjbkpoZVM1amIyNXpkSEoxWTNSdmNpNXVZVzFsTEFvZ0lDQWdJQ0FnSUNBZ0lDQmhjbkpoZVRvZ1FYSnlZWGt1Y0hKdmRHOTBlWEJsTG5Oc2FXTmxMbU5oYkd3b2RDNWhjbkpoZVNrS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WVhSMGNtbGlkWFJsY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUd3Z2FXNGdiaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2JsdHNYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNWtZWFJoTG1GMGRISnBZblYwWlhOYmJGMGdQU0JqTG5SdlNsTlBUaWhsTG1SaGRHRXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSHQ5TENCeUlEMGdJVEU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzSUdsdUlIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCMGFHbHpMbTF2Y25Cb1FYUjBjbWxpZFhSbGMxdHNYU3dnYUNBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhVZ1BTQXdMQ0JrSUQwZ1l5NXNaVzVuZEdnN0lIVWdQQ0JrT3lCMUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQmpXM1ZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUM1d2RYTm9LR1l1ZEc5S1UwOU9LR1V1WkdGMFlTa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2d1YkdWdVozUm9JRDRnTUNBbUppQW9hVnRzWFNBOUlHZ3NJSElnUFNBaE1DazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSElnSmlZZ0tHVXVaR0YwWVM1dGIzSndhRUYwZEhKcFluVjBaWE1nUFNCcExDQmxMbVJoZEdFdWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVWdQU0IwYUdsekxtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVozSnZkWEJ6T3dvZ0lDQWdJQ0FnSUc4dWJHVnVaM1JvSUQ0Z01DQW1KaUFvWlM1a1lYUmhMbWR5YjNWd2N5QTlJRXBUVDA0dWNHRnljMlVvU2xOUFRpNXpkSEpwYm1kcFpua29ieWtwS1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ0lUMDlJRzUxYkd3Z0ppWWdLR1V1WkdGMFlTNWliM1Z1WkdsdVoxTndhR1Z5WlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJWdWRHVnlPaUJoTG1ObGJuUmxjaTUwYjBGeWNtRjVLQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxY3pvZ1lTNXlZV1JwZFhNS0lDQWdJQ0FnSUNCOUtTd2daVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHVaR1Y0SUQwZ2JuVnNiQ3dnZEdocGN5NWhkSFJ5YVdKMWRHVnpJRDBnZTMwc0lIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpJRDBnZTMwc0lIUm9hWE11WjNKdmRYQnpJRDBnVzEwc0lIUm9hWE11WW05MWJtUnBibWRDYjNnZ1BTQnVkV3hzTENCMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUh0OU93b2dJQ0FnSUNBZ0lIUm9hWE11Ym1GdFpTQTlJR1V1Ym1GdFpUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVhVzVrWlhnN0NpQWdJQ0FnSUNBZ2JpQWhQVDBnYm5Wc2JDQW1KaUIwYUdsekxuTmxkRWx1WkdWNEtHNHVZMnh2Ym1Vb2RDa3BPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdaUzVoZEhSeWFXSjFkR1Z6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlCcGJpQnBLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCcFcyTmRPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNoakxDQm9MbU5zYjI1bEtIUXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JsTG0xdmNuQm9RWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nYVc0Z2NpbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnVzEwc0lIVWdQU0J5VzJOZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1FnUFNBd0xDQm1JRDBnZFM1c1pXNW5kR2c3SUdRZ1BDQm1PeUJrS3lzcGFDNXdkWE5vS0hWYlpGMHVZMnh2Ym1Vb2RDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2Y25Cb1FYUjBjbWxpZFhSbGMxdGpYU0E5SUdnN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VZ1BTQmxMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWlM1bmNtOTFjSE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Dd2dhQ0E5SUc4dWJHVnVaM1JvT3lCaklEd2dhRHNnWXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0J2VzJOZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtRmtaRWR5YjNWd0tIVXVjM1JoY25Rc0lIVXVZMjkxYm5Rc0lIVXViV0YwWlhKcFlXeEpibVJsZUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1pTNWliM1Z1WkdsdVowSnZlRHNLSUNBZ0lDQWdJQ0JoSUNFOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG1KdmRXNWthVzVuUW05NElEMGdZUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR1V1WW05MWJtUnBibWRUY0dobGNtVTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHd2dJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VZ1BTQnNMbU5zYjI1bEtDa3BMQ0IwYUdsekxtUnlZWGRTWVc1blpTNXpkR0Z5ZENBOUlHVXVaSEpoZDFKaGJtZGxMbk4wWVhKMExDQjBhR2x6TG1SeVlYZFNZVzVuWlM1amIzVnVkQ0E5SUdVdVpISmhkMUpoYm1kbExtTnZkVzUwTENCMGFHbHpMblZ6WlhKRVlYUmhJRDBnWlM1MWMyVnlSR0YwWVN3Z1pTNXdZWEpoYldWMFpYSnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHVXVjR0Z5WVcxbGRHVnljeWtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlaR2x6Y0c5elpTSUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtmVHNLWDJVdWNISnZkRzkwZVhCbExtbHpRblZtWm1WeVIyVnZiV1YwY25rZ1BTQWhNRHNLZG1GeUlFTnNJRDBnYm1WM0lIQmxMQ0JvYVNBOUlHNWxkeUJEYml3Z1FtOGdQU0J1WlhjZ1FXNHNJRzF1SUQwZ2JtVjNJRTBzSUdkdUlEMGdibVYzSUUwc0lIaHVJRDBnYm1WM0lFMHNJSHB2SUQwZ2JtVjNJRTBzSUZWdklEMGdibVYzSUUwc0lFOXZJRDBnYm1WM0lFMHNJRXR5SUQwZ2JtVjNJRTBzSUdWeklEMGdibVYzSUUwc0lIUnpJRDBnYm1WM0lFMHNJRzV6SUQwZ2JtVjNJRmdzSUdseklEMGdibVYzSUZnc0lISnpJRDBnYm1WM0lGZ3NJRWh2SUQwZ2JtVjNJRTBzSUhOeklEMGdibVYzSUUwc0lITjBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk9aU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRjlsTENCMElEMGdibVYzSUdodUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb0lpd2dkR2hwY3k1blpXOXRaWFJ5ZVNBOUlHVXNJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQjBMQ0IwYUdsekxuVndaR0YwWlUxdmNuQm9WR0Z5WjJWMGN5Z3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lHVXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUNFOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJRDBnWlM1dGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTXVjMnhwWTJVb0tTa3NJR1V1Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1SUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z1pTNXRiM0p3YUZSaGNtZGxkRVJwWTNScGIyNWhjbmtwS1N3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUdVdWJXRjBaWEpwWVd3c0lIUm9hWE11WjJWdmJXVjBjbmtnUFNCbExtZGxiMjFsZEhKNUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1blpXOXRaWFJ5ZVRzS0lDQWdJQ0FnSUNCcFppQW9aUzVwYzBKMVptWmxja2RsYjIxbGRISjVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNXRiM0p3YUVGMGRISnBZblYwWlhNc0lHNGdQU0JQWW1wbFkzUXVhMlY1Y3loMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNHViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwVzI1Yk1GMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUQwZ1cxMHNJSFJvYVhNdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVJRDBnZTMwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR2t1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0JwVzNKZExtNWhiV1VnZkh3Z1UzUnlhVzVuS0hJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3k1d2RYTm9LREFwTENCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwUkdsamRHbHZibUZ5ZVZ0aFhTQTlJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExtMXZjbkJvVkdGeVoyVjBjenNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQWhQVDBnZG05cFpDQXdJQ1ltSUhRdWJHVnVaM1JvSUQ0Z01DQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TlpYTm9MblZ3WkdGMFpVMXZjbkJvVkdGeVoyVjBjeWdwSUc1dklHeHZibWRsY2lCemRYQndiM0owY3lCVVNGSkZSUzVIWlc5dFpYUnllUzRnVlhObElGUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2NtRjVZMkZ6ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtZGxiMjFsZEhKNUxDQnBJRDBnZEdocGN5NXRZWFJsY21saGJDd2djaUE5SUhSb2FYTXViV0YwY21sNFYyOXliR1E3Q2lBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUhadmFXUWdNQ0I4ZkNBb2JpNWliM1Z1WkdsdVoxTndhR1Z5WlNBOVBUMGdiblZzYkNBbUppQnVMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncExDQkNieTVqYjNCNUtHNHVZbTkxYm1ScGJtZFRjR2hsY21VcExDQkNieTVoY0hCc2VVMWhkSEpwZURRb2Npa3NJR1V1Y21GNUxtbHVkR1Z5YzJWamRITlRjR2hsY21Vb1FtOHBJRDA5UFNBaE1Ta2dmSHdnS0VOc0xtTnZjSGtvY2lrdWFXNTJaWEowS0Nrc0lHaHBMbU52Y0hrb1pTNXlZWGtwTG1Gd2NHeDVUV0YwY21sNE5DaERiQ2tzSUc0dVltOTFibVJwYm1kQ2IzZ2dJVDA5SUc1MWJHd2dKaVlnYUdrdWFXNTBaWEp6WldOMGMwSnZlQ2h1TG1KdmRXNWthVzVuUW05NEtTQTlQVDBnSVRFcEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJRzg3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNHVhWE5DZFdabVpYSkhaVzl0WlhSeWVTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc0dWFXNWtaWGdzSUd3Z1BTQnVMbUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRzSUdNZ1BTQnVMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpd2dhQ0E5SUc0dWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVXNJSFVnUFNCdUxtRjBkSEpwWW5WMFpYTXVkWFlzSUdRZ1BTQnVMbUYwZEhKcFluVjBaWE11ZFhZeUxDQm1JRDBnYmk1bmNtOTFjSE1zSUcwZ1BTQnVMbVJ5WVhkU1lXNW5aVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0VnSVQwOUlHNTFiR3dwSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0drcEtTQm1iM0lvYkdWMElIZ2dQU0F3TENCMklEMGdaaTVzWlc1bmRHZzdJSGdnUENCMk95QjRLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHY2dQU0JtVzNoZExDQndJRDBnYVZ0bkxtMWhkR1Z5YVdGc1NXNWtaWGhkTENCZklEMGdUV0YwYUM1dFlYZ29aeTV6ZEdGeWRDd2diUzV6ZEdGeWRDa3NJSGtnUFNCTllYUm9MbTFwYmloaExtTnZkVzUwTENCTllYUm9MbTFwYmlobkxuTjBZWEowSUNzZ1p5NWpiM1Z1ZEN3Z2JTNXpkR0Z5ZENBcklHMHVZMjkxYm5RcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lpQTlJRjhzSUVFZ1BTQjVPeUJpSUR3Z1FUc2dZaUFyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1RDQTlJR0V1WjJWMFdDaGlLU3dnU1NBOUlHRXVaMlYwV0NoaUlDc2dNU2tzSUdzZ1BTQmhMbWRsZEZnb1lpQXJJRElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J2Y3loMGFHbHpMQ0J3TENCbExDQm9hU3dnYkN3Z1l5d2dhQ3dnZFN3Z1pDd2dUQ3dnU1N3Z2F5a3NJRzhnSmlZZ0tHOHVabUZqWlVsdVpHVjRJRDBnVFdGMGFDNW1iRzl2Y2loaUlDOGdNeWtzSUc4dVptRmpaUzV0WVhSbGNtbGhiRWx1WkdWNElEMGdaeTV0WVhSbGNtbGhiRWx1WkdWNExDQjBMbkIxYzJnb2J5a3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCTllYUm9MbTFoZUNnd0xDQnRMbk4wWVhKMEtTd2dkaUE5SUUxaGRHZ3ViV2x1S0dFdVkyOTFiblFzSUcwdWMzUmhjblFnS3lCdExtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnlBOUlIZ3NJSEFnUFNCMk95Qm5JRHdnY0RzZ1p5QXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlHRXVaMlYwV0NobktTd2dlU0E5SUdFdVoyVjBXQ2huSUNzZ01Ta3NJR0lnUFNCaExtZGxkRmdvWnlBcklESXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnZjeWgwYUdsekxDQnBMQ0JsTENCb2FTd2diQ3dnWXl3Z2FDd2dkU3dnWkN3Z1h5d2dlU3dnWWlrc0lHOGdKaVlnS0c4dVptRmpaVWx1WkdWNElEMGdUV0YwYUM1bWJHOXZjaWhuSUM4Z015a3NJSFF1Y0hWemFDaHZLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnBaaUFvYkNBaFBUMGdkbTlwWkNBd0tTQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaHBLU2tnWm05eUtHeGxkQ0I0SUQwZ01Dd2dkaUE5SUdZdWJHVnVaM1JvT3lCNElEd2dkanNnZUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JuSUQwZ1psdDRYU3dnY0NBOUlHbGJaeTV0WVhSbGNtbGhiRWx1WkdWNFhTd2dYeUE5SUUxaGRHZ3ViV0Y0S0djdWMzUmhjblFzSUcwdWMzUmhjblFwTENCNUlEMGdUV0YwYUM1dGFXNG9iQzVqYjNWdWRDd2dUV0YwYUM1dGFXNG9aeTV6ZEdGeWRDQXJJR2N1WTI5MWJuUXNJRzB1YzNSaGNuUWdLeUJ0TG1OdmRXNTBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0lnUFNCZkxDQkJJRDBnZVRzZ1lpQThJRUU3SUdJZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRXdnUFNCaUxDQkpJRDBnWWlBcklERXNJR3NnUFNCaUlDc2dNanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdiM01vZEdocGN5d2djQ3dnWlN3Z2FHa3NJR3dzSUdNc0lHZ3NJSFVzSUdRc0lFd3NJRWtzSUdzcExDQnZJQ1ltSUNodkxtWmhZMlZKYm1SbGVDQTlJRTFoZEdndVpteHZiM0lvWWlBdklETXBMQ0J2TG1aaFkyVXViV0YwWlhKcFlXeEpibVJsZUNBOUlHY3ViV0YwWlhKcFlXeEpibVJsZUN3Z2RDNXdkWE5vS0c4cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnVFdGMGFDNXRZWGdvTUN3Z2JTNXpkR0Z5ZENrc0lIWWdQU0JOWVhSb0xtMXBiaWhzTG1OdmRXNTBMQ0J0TG5OMFlYSjBJQ3NnYlM1amIzVnVkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2NnUFNCNExDQndJRDBnZGpzZ1p5QThJSEE3SUdjZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjhnUFNCbkxDQjVJRDBnWnlBcklERXNJR0lnUFNCbklDc2dNanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdiM01vZEdocGN5d2dhU3dnWlN3Z2FHa3NJR3dzSUdNc0lHZ3NJSFVzSUdRc0lGOHNJSGtzSUdJcExDQnZJQ1ltSUNodkxtWmhZMlZKYm1SbGVDQTlJRTFoZEdndVpteHZiM0lvWnlBdklETXBMQ0IwTG5CMWMyZ29ieWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElHNHVhWE5IWlc5dFpYUnllU0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5aWE5vTG5KaGVXTmhjM1FvS1NCdWJ5QnNiMjVuWlhJZ2MzVndjRzl5ZEhNZ1ZFaFNSVVV1UjJWdmJXVjBjbmt1SUZWelpTQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdmUXA5T3dwemRDNXdjbTkwYjNSNWNHVXVhWE5OWlhOb0lEMGdJVEE3Q21aMWJtTjBhVzl1SUdobUtITXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VwSUhzS0lDQWdJR3hsZENCc093b2dJQ0FnYVdZZ0tHVXVjMmxrWlNBOVBUMGdhWFFnUHlCc0lEMGdiaTVwYm5SbGNuTmxZM1JVY21saGJtZHNaU2h2TENCeUxDQnBMQ0FoTUN3Z1lTa2dPaUJzSUQwZ2JpNXBiblJsY25ObFkzUlVjbWxoYm1kc1pTaHBMQ0J5TENCdkxDQmxMbk5wWkdVZ0lUMDlJRU5wTENCaEtTd2diQ0E5UFQwZ2JuVnNiQ2tnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0J6Y3k1amIzQjVLR0VwTENCemN5NWhjSEJzZVUxaGRISnBlRFFvY3k1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNCc1pYUWdZeUE5SUhRdWNtRjVMbTl5YVdkcGJpNWthWE4wWVc1alpWUnZLSE56S1RzS0lDQWdJSEpsZEhWeWJpQmpJRHdnZEM1dVpXRnlJSHg4SUdNZ1BpQjBMbVpoY2lBL0lHNTFiR3dnT2lCN0NpQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklHTXNDaUFnSUNBZ0lDQWdjRzlwYm5RNklITnpMbU5zYjI1bEtDa3NDaUFnSUNBZ0lDQWdiMkpxWldOME9pQnpDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJRzl6S0hNc0lHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNc0lHZ3NJSFVwSUhzS0lDQWdJRzF1TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2FTd2dZeWtzSUdkdUxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9hU3dnYUNrc0lIaHVMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYVN3Z2RTazdDaUFnSUNCc1pYUWdaQ0E5SUhNdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpPd29nSUNBZ2FXWWdLSElnSmlZZ1pDa2dld29nSUNBZ0lDQWdJRXR5TG5ObGRDZ3dMQ0F3TENBd0tTd2daWE11YzJWMEtEQXNJREFzSURBcExDQjBjeTV6WlhRb01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdNQ3dnZUNBOUlISXViR1Z1WjNSb095QnRJRHdnZURzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCa1cyMWRMQ0JuSUQwZ2NsdHRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RpQWhQVDBnTUNBbUppQW9lbTh1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobkxDQmpLU3dnVlc4dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaG5MQ0JvS1N3Z1QyOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2huTENCMUtTd2dieUEvSUNoTGNpNWhaR1JUWTJGc1pXUldaV04wYjNJb2VtOHNJSFlwTENCbGN5NWhaR1JUWTJGc1pXUldaV04wYjNJb1ZXOHNJSFlwTENCMGN5NWhaR1JUWTJGc1pXUldaV04wYjNJb1QyOHNJSFlwS1NBNklDaExjaTVoWkdSVFkyRnNaV1JXWldOMGIzSW9lbTh1YzNWaUtHMXVLU3dnZGlrc0lHVnpMbUZrWkZOallXeGxaRlpsWTNSdmNpaFZieTV6ZFdJb1oyNHBMQ0IyS1N3Z2RITXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtFOXZMbk4xWWloNGJpa3NJSFlwS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHMXVMbUZrWkNoTGNpa3NJR2R1TG1Ga1pDaGxjeWtzSUhodUxtRmtaQ2gwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnpMbWx6VTJ0cGJtNWxaRTFsYzJnZ0ppWWdLSE11WW05dVpWUnlZVzV6Wm05eWJTaGpMQ0J0Ymlrc0lITXVZbTl1WlZSeVlXNXpabTl5YlNob0xDQm5iaWtzSUhNdVltOXVaVlJ5WVc1elptOXliU2gxTENCNGJpa3BPd29nSUNBZ2JHVjBJR1lnUFNCb1ppaHpMQ0JsTENCMExDQnVMQ0J0Yml3Z1oyNHNJSGh1TENCSWJ5azdDaUFnSUNCcFppQW9aaWtnZXdvZ0lDQWdJQ0FnSUdFZ0ppWWdLRzV6TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dZeWtzSUdsekxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnYUNrc0lISnpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWVN3Z2RTa3NJR1l1ZFhZZ1BTQnVkQzVuWlhSVlZpaElieXdnYlc0c0lHZHVMQ0I0Yml3Z2JuTXNJR2x6TENCeWN5d2dibVYzSUZncEtTd2diQ0FtSmlBb2JuTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hzTENCaktTd2dhWE11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoc0xDQm9LU3dnY25NdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHNMQ0IxS1N3Z1ppNTFkaklnUFNCdWRDNW5aWFJWVmloSWJ5d2diVzRzSUdkdUxDQjRiaXdnYm5Nc0lHbHpMQ0J5Y3l3Z2JtVjNJRmdwS1RzS0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdZVG9nWXl3S0lDQWdJQ0FnSUNBZ0lDQWdZam9nYUN3S0lDQWdJQ0FnSUNBZ0lDQWdZem9nZFN3S0lDQWdJQ0FnSUNBZ0lDQWdibTl5YldGc09pQnVaWGNnVFN3S0lDQWdJQ0FnSUNBZ0lDQWdiV0YwWlhKcFlXeEpibVJsZURvZ01Bb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiblF1WjJWMFRtOXliV0ZzS0cxdUxDQm5iaXdnZUc0c0lHMHVibTl5YldGc0tTd2daaTVtWVdObElEMGdiVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJtT3dwOUNuWmhjaUIzYmlBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXhMQ0J1SUQwZ01Td2dhU0E5SURFc0lISWdQU0F4TENCdklEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVFtOTRSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvT2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFGTmxaMjFsYm5Sek9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFJUWldkdFpXNTBjem9nY2l3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVFpXZHRaVzUwY3pvZ2J3b2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6T3dvZ0lDQWdJQ0FnSUdrZ1BTQk5ZWFJvTG1ac2IyOXlLR2twTENCeUlEMGdUV0YwYUM1bWJHOXZjaWh5S1N3Z2J5QTlJRTFoZEdndVpteHZiM0lvYnlrN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCYlhTd2dZeUE5SUZ0ZExDQm9JRDBnVzEwc0lIVWdQU0JiWFN3Z1pDQTlJREFzSUdZZ1BTQXdPd29nSUNBZ0lDQWdJRzBvSW5vaUxDQWllU0lzSUNKNElpd2dMVEVzSUMweExDQnVMQ0IwTENCbExDQnZMQ0J5TENBd0tTd2diU2dpZWlJc0lDSjVJaXdnSW5naUxDQXhMQ0F0TVN3Z2Jpd2dkQ3dnTFdVc0lHOHNJSElzSURFcExDQnRLQ0o0SWl3Z0lub2lMQ0FpZVNJc0lERXNJREVzSUdVc0lHNHNJSFFzSUdrc0lHOHNJRElwTENCdEtDSjRJaXdnSW5vaUxDQWllU0lzSURFc0lDMHhMQ0JsTENCdUxDQXRkQ3dnYVN3Z2J5d2dNeWtzSUcwb0luZ2lMQ0FpZVNJc0lDSjZJaXdnTVN3Z0xURXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lEUXBMQ0J0S0NKNElpd2dJbmtpTENBaWVpSXNJQzB4TENBdE1Td2daU3dnZEN3Z0xXNHNJR2tzSUhJc0lEVXBMQ0IwYUdsekxuTmxkRWx1WkdWNEtHd3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvWXl3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLR2dzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0hVc0lESXBLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ0S0hnc0lIWXNJR2NzSUhBc0lGOHNJSGtzSUdJc0lFRXNJRXdzSUVrc0lHc3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUlnUFNCNUlDOGdUQ3dnVUNBOUlHSWdMeUJKTENCM0lEMGdlU0F2SURJc0lFVWdQU0JpSUM4Z01pd2dSQ0E5SUVFZ0x5QXlMQ0JWSUQwZ1RDQXJJREVzSUVZZ1BTQkpJQ3NnTVN3Z1R5QTlJREFzSUc1bElEMGdNQ3dnWTJVZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQldJRDBnTURzZ1ZpQThJRVk3SUZZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVnlBOUlGWWdLaUJRSUMwZ1JUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FHVWdQU0F3T3lCb1pTQThJRlU3SUdobEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaU0E5SUdobElDb2dRaUF0SUhjN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMlZiZUYwZ1BTQnNaU0FxSUhBc0lHTmxXM1pkSUQwZ1Z5QXFJRjhzSUdObFcyZGRJRDBnUkN3Z1l5NXdkWE5vS0dObExuZ3NJR05sTG5rc0lHTmxMbm9wTENCalpWdDRYU0E5SURBc0lHTmxXM1pkSUQwZ01Dd2dZMlZiWjEwZ1BTQkJJRDRnTUNBL0lERWdPaUF0TVN3Z2FDNXdkWE5vS0dObExuZ3NJR05sTG5rc0lHTmxMbm9wTENCMUxuQjFjMmdvYUdVZ0x5Qk1LU3dnZFM1d2RYTm9LREVnTFNCV0lDOGdTU2tzSUU4Z0t6MGdNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRllnUFNBd095QldJRHdnU1RzZ1Zpc3JLV1p2Y2loc1pYUWdWeUE5SURBN0lGY2dQQ0JNT3lCWEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdobElEMGdaQ0FySUZjZ0t5QlZJQ29nVml3Z2JHVWdQU0JrSUNzZ1Z5QXJJRlVnS2lBb1ZpQXJJREVwTENCbVpTQTlJR1FnS3lBb1Z5QXJJREVwSUNzZ1ZTQXFJQ2hXSUNzZ01Ta3NJRUpsSUQwZ1pDQXJJQ2hYSUNzZ01Ta2dLeUJWSUNvZ1Zqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHd3VjSFZ6YUNob1pTd2diR1VzSUVKbEtTd2diQzV3ZFhOb0tHeGxMQ0JtWlN3Z1FtVXBMQ0J1WlNBclBTQTJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR0V1WVdSa1IzSnZkWEFvWml3Z2JtVXNJR3NwTENCbUlDczlJRzVsTENCa0lDczlJRTg3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSGR1S0dVdWQybGtkR2dzSUdVdWFHVnBaMmgwTENCbExtUmxjSFJvTENCbExuZHBaSFJvVTJWbmJXVnVkSE1zSUdVdWFHVnBaMmgwVTJWbmJXVnVkSE1zSUdVdVpHVndkR2hUWldkdFpXNTBjeWs3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUZKcEtITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2UzMDdDaUFnSUNCbWIzSW9iR1YwSUhRZ2FXNGdjeWw3Q2lBZ0lDQWdJQ0FnWlZ0MFhTQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlCcGJpQnpXM1JkS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQnpXM1JkVzI1ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwSUNZbUlDaHBMbWx6UTI5c2IzSWdmSHdnYVM1cGMwMWhkSEpwZURNZ2ZId2dhUzVwYzAxaGRISnBlRFFnZkh3Z2FTNXBjMVpsWTNSdmNqSWdmSHdnYVM1cGMxWmxZM1J2Y2pNZ2ZId2dhUzVwYzFabFkzUnZjalFnZkh3Z2FTNXBjMVJsZUhSMWNtVWdmSHdnYVM1cGMxRjFZWFJsY201cGIyNHBJRDhnWlZ0MFhWdHVYU0E5SUdrdVkyeHZibVVvS1NBNklFRnljbUY1TG1selFYSnlZWGtvYVNrZ1B5QmxXM1JkVzI1ZElEMGdhUzV6YkdsalpTZ3BJRG9nWlZ0MFhWdHVYU0E5SUdrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlHVTdDbjBLWm5WdVkzUnBiMjRnZVhRb2N5a2dld29nSUNBZ2JHVjBJR1VnUFNCN2ZUc0tJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENCekxteGxibWQwYURzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRkpwS0hOYmRGMHBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0JwYmlCdUtXVmJhVjBnUFNCdVcybGRPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJR1U3Q24wS2RtRnlJSFZtSUQwZ2V3b2dJQ0FnWTJ4dmJtVTZJRkpwTEFvZ0lDQWdiV1Z5WjJVNklIbDBDbjBzSUdSbUlEMGdZSFp2YVdRZ2JXRnBiaWdwSUhzS0NXZHNYMUJ2YzJsMGFXOXVJRDBnY0hKdmFtVmpkR2x2YmsxaGRISnBlQ0FxSUcxdlpHVnNWbWxsZDAxaGRISnBlQ0FxSUhabFl6UW9JSEJ2YzJsMGFXOXVMQ0F4TGpBZ0tUc0tmV0FzSUdabUlEMGdZSFp2YVdRZ2JXRnBiaWdwSUhzS0NXZHNYMFp5WVdkRGIyeHZjaUE5SUhabFl6UW9JREV1TUN3Z01DNHdMQ0F3TGpBc0lERXVNQ0FwT3dwOVlDd2djMjRnUFNCamJHRnpjeUJsZUhSbGJtUnpJR1IwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbE5vWVdSbGNrMWhkR1Z5YVdGc0lpd2dkR2hwY3k1a1pXWnBibVZ6SUQwZ2UzMHNJSFJvYVhNdWRXNXBabTl5YlhNZ1BTQjdmU3dnZEdocGN5NTJaWEowWlhoVGFHRmtaWElnUFNCa1ppd2dkR2hwY3k1bWNtRm5iV1Z1ZEZOb1lXUmxjaUE5SUdabUxDQjBhR2x6TG14cGJtVjNhV1IwYUNBOUlERXNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTVtYjJjZ1BTQWhNU3dnZEdocGN5NXNhV2RvZEhNZ1BTQWhNU3dnZEdocGN5NWpiR2x3Y0dsdVp5QTlJQ0V4TENCMGFHbHpMbVY0ZEdWdWMybHZibk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsY21sMllYUnBkbVZ6T2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnWm5KaFowUmxjSFJvT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnWkhKaGQwSjFabVpsY25NNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCemFHRmtaWEpVWlhoMGRYSmxURTlFT2lBaE1Rb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVpHVm1ZWFZzZEVGMGRISnBZblYwWlZaaGJIVmxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNUW9nSUNBZ0lDQWdJQ0FnSUNCZExBb2dJQ0FnSUNBZ0lDQWdJQ0IxZGpvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQWdJQ0FnWFN3S0lDQWdJQ0FnSUNBZ0lDQWdkWFl5T2lCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0JkQ2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVwYm1SbGVEQkJkSFJ5YVdKMWRHVk9ZVzFsSUQwZ2RtOXBaQ0F3TENCMGFHbHpMblZ1YVdadmNtMXpUbVZsWkZWd1pHRjBaU0E5SUNFeExDQjBhR2x6TG1kc2MyeFdaWEp6YVc5dUlEMGdiblZzYkN3Z1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNobExtRjBkSEpwWW5WMFpYTWdJVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVRhR0ZrWlhKTllYUmxjbWxoYkRvZ1lYUjBjbWxpZFhSbGN5QnphRzkxYkdRZ2JtOTNJR0psSUdSbFptbHVaV1FnYVc0Z1ZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNua2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2twT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVpuSmhaMjFsYm5SVGFHRmtaWElnUFNCbExtWnlZV2R0Wlc1MFUyaGhaR1Z5TENCMGFHbHpMblpsY25SbGVGTm9ZV1JsY2lBOUlHVXVkbVZ5ZEdWNFUyaGhaR1Z5TENCMGFHbHpMblZ1YVdadmNtMXpJRDBnVW1rb1pTNTFibWxtYjNKdGN5a3NJSFJvYVhNdVpHVm1hVzVsY3lBOUlFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHVXVaR1ZtYVc1bGN5a3NJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lIUm9hWE11YkdsbmFIUnpJRDBnWlM1c2FXZG9kSE1zSUhSb2FYTXVZMnhwY0hCcGJtY2dQU0JsTG1Oc2FYQndhVzVuTENCMGFHbHpMbVY0ZEdWdWMybHZibk1nUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCbExtVjRkR1Z1YzJsdmJuTXBMQ0IwYUdsekxtZHNjMnhXWlhKemFXOXVJRDBnWlM1bmJITnNWbVZ5YzJsdmJpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnpkWEJsY2k1MGIwcFRUMDRvWlNrN0NpQWdJQ0FnSUNBZ2RDNW5iSE5zVm1WeWMybHZiaUE5SUhSb2FYTXVaMnh6YkZabGNuTnBiMjRzSUhRdWRXNXBabTl5YlhNZ1BTQjdmVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnYVc0Z2RHaHBjeTUxYm1sbWIzSnRjeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2RHaHBjeTUxYm1sbWIzSnRjMXRwWFM1MllXeDFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5QW1KaUJ2TG1selZHVjRkSFZ5WlNBL0lIUXVkVzVwWm05eWJYTmJhVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpZENJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYnk1MGIwcFRUMDRvWlNrdWRYVnBaQW9nSUNBZ0lDQWdJQ0FnSUNCOUlEb2dieUFtSmlCdkxtbHpRMjlzYjNJZ1B5QjBMblZ1YVdadmNtMXpXMmxkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1NaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc4dVoyVjBTR1Y0S0NrS0lDQWdJQ0FnSUNBZ0lDQWdmU0E2SUc4Z0ppWWdieTVwYzFabFkzUnZjaklnUHlCMExuVnVhV1p2Y20xelcybGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbll5SWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ2TG5SdlFYSnlZWGtvS1FvZ0lDQWdJQ0FnSUNBZ0lDQjlJRG9nYnlBbUppQnZMbWx6Vm1WamRHOXlNeUEvSUhRdWRXNXBabTl5YlhOYmFWMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlkak1pTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzh1ZEc5QmNuSmhlU2dwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMGdPaUJ2SUNZbUlHOHVhWE5XWldOMGIzSTBJRDhnZEM1MWJtbG1iM0p0YzF0cFhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSjJOQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dieTUwYjBGeWNtRjVLQ2tLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQTZJRzhnSmlZZ2J5NXBjMDFoZEhKcGVETWdQeUIwTG5WdWFXWnZjbTF6VzJsZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltMHpJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnZMblJ2UVhKeVlYa29LUW9nSUNBZ0lDQWdJQ0FnSUNCOUlEb2dieUFtSmlCdkxtbHpUV0YwY21sNE5DQS9JSFF1ZFc1cFptOXliWE5iYVYwZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaWJUUWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHOHVkRzlCY25KaGVTZ3BDaUFnSUNBZ0lDQWdJQ0FnSUgwZ09pQjBMblZ1YVdadmNtMXpXMmxkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc4S0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnVDJKcVpXTjBMbXRsZVhNb2RHaHBjeTVrWldacGJtVnpLUzVzWlc1bmRHZ2dQaUF3SUNZbUlDaDBMbVJsWm1sdVpYTWdQU0IwYUdsekxtUmxabWx1WlhNcExDQjBMblpsY25SbGVGTm9ZV1JsY2lBOUlIUm9hWE11ZG1WeWRHVjRVMmhoWkdWeUxDQjBMbVp5WVdkdFpXNTBVMmhoWkdWeUlEMGdkR2hwY3k1bWNtRm5iV1Z1ZEZOb1lXUmxjanNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNCcGJpQjBhR2x6TG1WNGRHVnVjMmx2Ym5NcGRHaHBjeTVsZUhSbGJuTnBiMjV6VzJsZElEMDlQU0FoTUNBbUppQW9ibHRwWFNBOUlDRXdLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUMkpxWldOMExtdGxlWE1vYmlrdWJHVnVaM1JvSUQ0Z01DQW1KaUFvZEM1bGVIUmxibk5wYjI1eklEMGdiaWtzSUhRN0NpQWdJQ0I5Q24wN0NuTnVMbkJ5YjNSdmRIbHdaUzVwYzFOb1lXUmxjazFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJKY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pEWVcxbGNtRWlMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTQTlJRzVsZHlCd1pTd2dkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0SUQwZ2JtVjNJSEJsTENCMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYaEpiblpsY25ObElEMGdibVYzSUhCbE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlN3Z2RDa3NJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObExtTnZjSGtvWlM1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVcExDQjBhR2x6TG5CeWIycGxZM1JwYjI1TllYUnlhWGd1WTI5d2VTaGxMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BMQ0IwYUdsekxuQnliMnBsWTNScGIyNU5ZWFJ5YVhoSmJuWmxjbk5sTG1OdmNIa29aUzV3Y205cVpXTjBhVzl1VFdGMGNtbDRTVzUyWlhKelpTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJYYjNKc1pFUnBjbVZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV0WVhSeWFYaFhiM0pzWkM1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1elpYUW9MWFJiT0Ywc0lDMTBXemxkTENBdGRGc3hNRjBwTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaUzVqYjNCNUtIUm9hWE11YldGMGNtbDRWMjl5YkdRcExtbHVkbVZ5ZENncE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0dVc0lIUXBMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTNWpiM0I1S0hSb2FYTXViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtmVHNLU1hJdWNISnZkRzkwZVhCbExtbHpRMkZ0WlhKaElEMGdJVEE3Q25aaGNpQjFkQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdTWElnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlEVXdMQ0IwSUQwZ01Td2diaUE5SUM0eExDQnBJRDBnTW1VektYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pRWlhKemNHVmpkR2wyWlVOaGJXVnlZU0lzSUhSb2FYTXVabTkySUQwZ1pTd2dkR2hwY3k1NmIyOXRJRDBnTVN3Z2RHaHBjeTV1WldGeUlEMGdiaXdnZEdocGN5NW1ZWElnUFNCcExDQjBhR2x6TG1adlkzVnpJRDBnTVRBc0lIUm9hWE11WVhOd1pXTjBJRDBnZEN3Z2RHaHBjeTUyYVdWM0lEMGdiblZzYkN3Z2RHaHBjeTVtYVd4dFIyRjFaMlVnUFNBek5Td2dkR2hwY3k1bWFXeHRUMlptYzJWMElEMGdNQ3dnZEdocGN5NTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsTENCMEtTd2dkR2hwY3k1bWIzWWdQU0JsTG1admRpd2dkR2hwY3k1NmIyOXRJRDBnWlM1NmIyOXRMQ0IwYUdsekxtNWxZWElnUFNCbExtNWxZWElzSUhSb2FYTXVabUZ5SUQwZ1pTNW1ZWElzSUhSb2FYTXVabTlqZFhNZ1BTQmxMbVp2WTNWekxDQjBhR2x6TG1GemNHVmpkQ0E5SUdVdVlYTndaV04wTENCMGFHbHpMblpwWlhjZ1BTQmxMblpwWlhjZ1BUMDlJRzUxYkd3Z1B5QnVkV3hzSURvZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z1pTNTJhV1YzS1N3Z2RHaHBjeTVtYVd4dFIyRjFaMlVnUFNCbExtWnBiRzFIWVhWblpTd2dkR2hwY3k1bWFXeHRUMlptYzJWMElEMGdaUzVtYVd4dFQyWm1jMlYwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJtOWpZV3hNWlc1bmRHZ29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnTGpVZ0tpQjBhR2x6TG1kbGRFWnBiRzFJWldsbmFIUW9LU0F2SUdVN0NpQWdJQ0FnSUNBZ2RHaHBjeTVtYjNZZ1BTQmtjaUFxSURJZ0tpQk5ZWFJvTG1GMFlXNG9kQ2tzSUhSb2FYTXVkWEJrWVhSbFVISnZhbVZqZEdsdmJrMWhkSEpwZUNncE93b2dJQ0FnZlFvZ0lDQWdaMlYwUm05allXeE1aVzVuZEdnb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQk5ZWFJvTG5SaGJpaFhiaUFxSUM0MUlDb2dkR2hwY3k1bWIzWXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQXVOU0FxSUhSb2FYTXVaMlYwUm1sc2JVaGxhV2RvZENncElDOGdaVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFVm1abVZqZEdsMlpVWlBWaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWkhJZ0tpQXlJQ29nVFdGMGFDNWhkR0Z1S0UxaGRHZ3VkR0Z1S0ZkdUlDb2dMalVnS2lCMGFHbHpMbVp2ZGlrZ0x5QjBhR2x6TG5wdmIyMHBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFJtbHNiVmRwWkhSb0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1acGJHMUhZWFZuWlNBcUlFMWhkR2d1YldsdUtIUm9hWE11WVhOd1pXTjBMQ0F4S1RzS0lDQWdJSDBLSUNBZ0lHZGxkRVpwYkcxSVpXbG5hSFFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabWxzYlVkaGRXZGxJQzhnVFdGMGFDNXRZWGdvZEdocGN5NWhjM0JsWTNRc0lERXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZtbGxkMDltWm5ObGRDaGxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1aGMzQmxZM1FnUFNCbElDOGdkQ3dnZEdocGN5NTJhV1YzSUQwOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG5acFpYY2dQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnVZV0pzWldRNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCbWRXeHNWMmxrZEdnNklERXNDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJHeElaV2xuYUhRNklERXNDaUFnSUNBZ0lDQWdJQ0FnSUc5bVpuTmxkRmc2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJRzltWm5ObGRGazZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJREVLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUyYVdWM0xtVnVZV0pzWldRZ1BTQWhNQ3dnZEdocGN5NTJhV1YzTG1aMWJHeFhhV1IwYUNBOUlHVXNJSFJvYVhNdWRtbGxkeTVtZFd4c1NHVnBaMmgwSUQwZ2RDd2dkR2hwY3k1MmFXVjNMbTltWm5ObGRGZ2dQU0J1TENCMGFHbHpMblpwWlhjdWIyWm1jMlYwV1NBOUlHa3NJSFJvYVhNdWRtbGxkeTUzYVdSMGFDQTlJSElzSUhSb2FYTXVkbWxsZHk1b1pXbG5hSFFnUFNCdkxDQjBhR2x6TG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LVHNLSUNBZ0lIMEtJQ0FnSUdOc1pXRnlWbWxsZDA5bVpuTmxkQ2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMblpwWlhjZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdWRtbGxkeTVsYm1GaWJHVmtJRDBnSVRFcExDQjBhR2x6TG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtNWxZWElzSUhRZ1BTQmxJQ29nVFdGMGFDNTBZVzRvVjI0Z0tpQXVOU0FxSUhSb2FYTXVabTkyS1NBdklIUm9hWE11ZW05dmJTd2diaUE5SURJZ0tpQjBMQ0JwSUQwZ2RHaHBjeTVoYzNCbFkzUWdLaUJ1TENCeUlEMGdMUzQxSUNvZ2FTd2dieUE5SUhSb2FYTXVkbWxsZHpzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1MmFXVjNJQ0U5UFNCdWRXeHNJQ1ltSUhSb2FYTXVkbWxsZHk1bGJtRmliR1ZrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdieTVtZFd4c1YybGtkR2dzSUdNZ1BTQnZMbVoxYkd4SVpXbG5hSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lISWdLejBnYnk1dlptWnpaWFJZSUNvZ2FTQXZJR3dzSUhRZ0xUMGdieTV2Wm1aelpYUlpJQ29nYmlBdklHTXNJR2tnS2owZ2J5NTNhV1IwYUNBdklHd3NJRzRnS2owZ2J5NW9aV2xuYUhRZ0x5QmpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVptbHNiVTltWm5ObGREc0tJQ0FnSUNBZ0lDQmhJQ0U5UFNBd0lDWW1JQ2h5SUNzOUlHVWdLaUJoSUM4Z2RHaHBjeTVuWlhSR2FXeHRWMmxrZEdnb0tTa3NJSFJvYVhNdWNISnZhbVZqZEdsdmJrMWhkSEpwZUM1dFlXdGxVR1Z5YzNCbFkzUnBkbVVvY2l3Z2NpQXJJR2tzSUhRc0lIUWdMU0J1TENCbExDQjBhR2x6TG1aaGNpa3NJSFJvYVhNdWNISnZhbVZqZEdsdmJrMWhkSEpwZUVsdWRtVnljMlV1WTI5d2VTaDBhR2x6TG5CeWIycGxZM1JwYjI1TllYUnlhWGdwTG1sdWRtVnlkQ2dwT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlITjFjR1Z5TG5SdlNsTlBUaWhsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1dlltcGxZM1F1Wm05MklEMGdkR2hwY3k1bWIzWXNJSFF1YjJKcVpXTjBMbnB2YjIwZ1BTQjBhR2x6TG5wdmIyMHNJSFF1YjJKcVpXTjBMbTVsWVhJZ1BTQjBhR2x6TG01bFlYSXNJSFF1YjJKcVpXTjBMbVpoY2lBOUlIUm9hWE11Wm1GeUxDQjBMbTlpYW1WamRDNW1iMk4xY3lBOUlIUm9hWE11Wm05amRYTXNJSFF1YjJKcVpXTjBMbUZ6Y0dWamRDQTlJSFJvYVhNdVlYTndaV04wTENCMGFHbHpMblpwWlhjZ0lUMDlJRzUxYkd3Z0ppWWdLSFF1YjJKcVpXTjBMblpwWlhjZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQjBhR2x6TG5acFpYY3BLU3dnZEM1dlltcGxZM1F1Wm1sc2JVZGhkV2RsSUQwZ2RHaHBjeTVtYVd4dFIyRjFaMlVzSUhRdWIySnFaV04wTG1acGJHMVBabVp6WlhRZ1BTQjBhR2x6TG1acGJHMVBabVp6WlhRc0lIUTdDaUFnSUNCOUNuMDdDblYwTG5CeWIzUnZkSGx3WlM1cGMxQmxjbk53WldOMGFYWmxRMkZ0WlhKaElEMGdJVEE3Q25aaGNpQjFhU0E5SURrd0xDQmthU0E5SURFc0lDUnpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk9aU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMblI1Y0dVZ1BTQWlRM1ZpWlVOaGJXVnlZU0lzSUc0dWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFnSVQwOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa04xWW1WRFlXMWxjbUU2SUZSb1pTQmpiMjV6ZEhKMVkzUnZjaUJ1YjNjZ1pYaHdaV04wY3lCaGJpQnBibk4wWVc1alpTQnZaaUJYWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRZ1lYTWdkR2hwY21RZ2NHRnlZVzFsZEdWeUxpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ1WkdWeVZHRnlaMlYwSUQwZ2Jqc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHNWxkeUIxZENoMWFTd2daR2tzSUdVc0lIUXBPd29nSUNBZ0lDQWdJR2t1YkdGNVpYSnpJRDBnZEdocGN5NXNZWGxsY25Nc0lHa3VkWEF1YzJWMEtEQXNJQzB4TENBd0tTd2dhUzVzYjI5clFYUW9ibVYzSUUwb01Td2dNQ3dnTUNrcExDQjBhR2x6TG1Ga1pDaHBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCMWRDaDFhU3dnWkdrc0lHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhJdWJHRjVaWEp6SUQwZ2RHaHBjeTVzWVhsbGNuTXNJSEl1ZFhBdWMyVjBLREFzSUMweExDQXdLU3dnY2k1c2IyOXJRWFFvYm1WM0lFMG9MVEVzSURBc0lEQXBLU3dnZEdocGN5NWhaR1FvY2lrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCdVpYY2dkWFFvZFdrc0lHUnBMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQnZMbXhoZVdWeWN5QTlJSFJvYVhNdWJHRjVaWEp6TENCdkxuVndMbk5sZENnd0xDQXdMQ0F4S1N3Z2J5NXNiMjlyUVhRb2JtVjNJRTBvTUN3Z01Td2dNQ2twTENCMGFHbHpMbUZrWkNodktUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHNWxkeUIxZENoMWFTd2daR2tzSUdVc0lIUXBPd29nSUNBZ0lDQWdJR0V1YkdGNVpYSnpJRDBnZEdocGN5NXNZWGxsY25Nc0lHRXVkWEF1YzJWMEtEQXNJREFzSUMweEtTd2dZUzVzYjI5clFYUW9ibVYzSUUwb01Dd2dMVEVzSURBcEtTd2dkR2hwY3k1aFpHUW9ZU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0J1WlhjZ2RYUW9kV2tzSUdScExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCc0xteGhlV1Z5Y3lBOUlIUm9hWE11YkdGNVpYSnpMQ0JzTG5Wd0xuTmxkQ2d3TENBdE1Td2dNQ2tzSUd3dWJHOXZhMEYwS0c1bGR5Qk5LREFzSURBc0lERXBLU3dnZEdocGN5NWhaR1FvYkNrN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNCdVpYY2dkWFFvZFdrc0lHUnBMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQmpMbXhoZVdWeWN5QTlJSFJvYVhNdWJHRjVaWEp6TENCakxuVndMbk5sZENnd0xDQXRNU3dnTUNrc0lHTXViRzl2YTBGMEtHNWxkeUJOS0RBc0lEQXNJQzB4S1Nrc0lIUm9hWE11WVdSa0tHTXBPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CaGNtVnVkQ0E5UFQwZ2JuVnNiQ0FtSmlCMGFHbHpMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxuSmxibVJsY2xSaGNtZGxkQ3dnVzJrc0lISXNJRzhzSUdFc0lHd3NJR05kSUQwZ2RHaHBjeTVqYUdsc1pISmxiaXdnYUNBOUlHVXVlSEl1Wlc1aFlteGxaQ3dnZFNBOUlHVXVaMlYwVW1WdVpHVnlWR0Z5WjJWMEtDazdDaUFnSUNBZ0lDQWdaUzU0Y2k1bGJtRmliR1ZrSUQwZ0lURTdDaUFnSUNBZ0lDQWdiR1YwSUdRZ1BTQnVMblJsZUhSMWNtVXVaMlZ1WlhKaGRHVk5hWEJ0WVhCek93b2dJQ0FnSUNBZ0lHNHVkR1Y0ZEhWeVpTNW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNU3dnWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvYml3Z01Da3NJR1V1Y21WdVpHVnlLSFFzSUdrcExDQmxMbk5sZEZKbGJtUmxjbFJoY21kbGRDaHVMQ0F4S1N3Z1pTNXlaVzVrWlhJb2RDd2djaWtzSUdVdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0c0c0lESXBMQ0JsTG5KbGJtUmxjaWgwTENCdktTd2daUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9iaXdnTXlrc0lHVXVjbVZ1WkdWeUtIUXNJR0VwTENCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENodUxDQTBLU3dnWlM1eVpXNWtaWElvZEN3Z2JDa3NJRzR1ZEdWNGRIVnlaUzVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0JrTENCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENodUxDQTFLU3dnWlM1eVpXNWtaWElvZEN3Z1l5a3NJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLSFVwTENCbExuaHlMbVZ1WVdKc1pXUWdQU0JvT3dvZ0lDQWdmUXA5TENCcmFTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2IzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5d2dhQ2w3Q2lBZ0lDQWdJQ0FnWlNBOUlHVWdJVDA5SUhadmFXUWdNQ0EvSUdVZ09pQmJYU3dnZENBOUlIUWdJVDA5SUhadmFXUWdNQ0EvSUhRZ09pQkNhVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhMQ0JzTENCakxDQm9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxtWnNhWEJaSUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2FXMWhaMlZ6S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWx0WVdkbE93b2dJQ0FnZlFvZ0lDQWdjMlYwSUdsdFlXZGxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVwYldGblpTQTlJR1U3Q2lBZ0lDQjlDbjA3Q210cExuQnliM1J2ZEhsd1pTNXBjME4xWW1WVVpYaDBkWEpsSUQwZ0lUQTdDblpoY2lCcWN5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FYUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdUblZ0WW1WeUxtbHpTVzUwWldkbGNpaDBLU0FtSmlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFE2SUdOdmJuTjBjblZqZEc5eUlITnBaMjVoZEhWeVpTQnBjeUJ1YjNjZ1YyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBLQ0J6YVhwbExDQnZjSFJwYjI1eklDa2lLU3dnZENBOUlHNHBPd29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUWdQU0IwSUh4OElIdDlMQ0IwYUdsekxuUmxlSFIxY21VZ1BTQnVaWGNnYTJrb2RtOXBaQ0F3TENCMExtMWhjSEJwYm1jc0lIUXVkM0poY0ZNc0lIUXVkM0poY0ZRc0lIUXViV0ZuUm1sc2RHVnlMQ0IwTG0xcGJrWnBiSFJsY2l3Z2RDNW1iM0p0WVhRc0lIUXVkSGx3WlN3Z2RDNWhibWx6YjNSeWIzQjVMQ0IwTG1WdVkyOWthVzVuS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbWx6VW1WdVpHVnlWR0Z5WjJWMFZHVjRkSFZ5WlNBOUlDRXdMQ0IwYUdsekxuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ2RDNW5aVzVsY21GMFpVMXBjRzFoY0hNZ0lUMDlJSFp2YVdRZ01DQS9JSFF1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRG9nSVRFc0lIUm9hWE11ZEdWNGRIVnlaUzV0YVc1R2FXeDBaWElnUFNCMExtMXBia1pwYkhSbGNpQWhQVDBnZG05cFpDQXdJRDhnZEM1dGFXNUdhV3gwWlhJZ09pQjBkQ3dnZEdocGN5NTBaWGgwZFhKbExsOXVaV1ZrYzBac2FYQkZiblpOWVhBZ1BTQWhNVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUZjWFZwY21WamRHRnVaM1ZzWVhKVVpYaDBkWEpsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuUmxlSFIxY21VdWRIbHdaU0E5SUhRdWRIbHdaU3dnZEdocGN5NTBaWGgwZFhKbExtWnZjbTFoZENBOUlHTjBMQ0IwYUdsekxuUmxlSFIxY21VdVpXNWpiMlJwYm1jZ1BTQjBMbVZ1WTI5a2FXNW5MQ0IwYUdsekxuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ2RDNW5aVzVsY21GMFpVMXBjRzFoY0hNc0lIUm9hWE11ZEdWNGRIVnlaUzV0YVc1R2FXeDBaWElnUFNCMExtMXBia1pwYkhSbGNpd2dkR2hwY3k1MFpYaDBkWEpsTG0xaFowWnBiSFJsY2lBOUlIUXViV0ZuUm1sc2RHVnlPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdld29nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RFVnhkV2x5WldOME9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJnQ2dvSkNRa0pkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRVJwY21WamRHbHZianNLQ2drSkNRbDJaV016SUhSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2FXNGdkbVZqTXlCa2FYSXNJR2x1SUcxaGREUWdiV0YwY21sNElDa2dld29LQ1FrSkNRbHlaWFIxY200Z2JtOXliV0ZzYVhwbEtDQW9JRzFoZEhKcGVDQXFJSFpsWXpRb0lHUnBjaXdnTUM0d0lDa2dLUzU0ZVhvZ0tUc0tDZ2tKQ1FsOUNnb0pDUWtKZG05cFpDQnRZV2x1S0NrZ2V3b0tDUWtKQ1FsMlYyOXliR1JFYVhKbFkzUnBiMjRnUFNCMGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lIQnZjMmwwYVc5dUxDQnRiMlJsYkUxaGRISnBlQ0FwT3dvS0NRa0pDUWtqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pDUWtKQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ2drSkNRbDlDZ2tKQ1dBc0NpQWdJQ0FnSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQmdDZ29KQ1FrSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2RFVnhkV2x5WldOME93b0tDUWtKQ1haaGNubHBibWNnZG1Wak15QjJWMjl5YkdSRWFYSmxZM1JwYjI0N0Nnb0pDUWtKSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLQ2drSkNRbDJiMmxrSUcxaGFXNG9LU0I3Q2dvSkNRa0pDWFpsWXpNZ1pHbHlaV04wYVc5dUlEMGdibTl5YldGc2FYcGxLQ0IyVjI5eWJHUkVhWEpsWTNScGIyNGdLVHNLQ2drSkNRa0pkbVZqTWlCellXMXdiR1ZWVmlBOUlHVnhkV2x5WldOMFZYWW9JR1JwY21WamRHbHZiaUFwT3dvS0NRa0pDUWxuYkY5R2NtRm5RMjlzYjNJZ1BTQjBaWGgwZFhKbE1rUW9JSFJGY1hWcGNtVmpkQ3dnYzJGdGNHeGxWVllnS1RzS0Nna0pDUWw5Q2drSkNXQUtJQ0FnSUNBZ0lDQjlMQ0JwSUQwZ2JtVjNJSGR1S0RVc0lEVXNJRFVwTENCeUlEMGdibVYzSUhOdUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dJa04xWW1WdFlYQkdjbTl0UlhGMWFYSmxZM1FpTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dVbWtvYmk1MWJtbG1iM0p0Y3lrc0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ2JpNTJaWEowWlhoVGFHRmtaWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCdUxtWnlZV2R0Wlc1MFUyaGhaR1Z5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphV1JsT2lCcGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnWW14bGJtUnBibWM2SUhadUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdjaTUxYm1sbWIzSnRjeTUwUlhGMWFYSmxZM1F1ZG1Gc2RXVWdQU0IwT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYm1WM0lITjBLR2tzSUhJcExDQmhJRDBnZEM1dGFXNUdhV3gwWlhJN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdWJXbHVSbWxzZEdWeUlEMDlQU0JWYVNBbUppQW9kQzV0YVc1R2FXeDBaWElnUFNCMGRDa3NJRzVsZHlBa2N5Z3hMQ0F4TUN3Z2RHaHBjeWt1ZFhCa1lYUmxLR1VzSUc4cExDQjBMbTFwYmtacGJIUmxjaUE5SUdFc0lHOHVaMlZ2YldWMGNua3VaR2x6Y0c5elpTZ3BMQ0J2TG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc1pXRnlLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdVoyVjBVbVZ1WkdWeVZHRnlaMlYwS0NrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklEMGdNRHNnYnlBOElEWTdJRzhyS3lsbExuTmxkRkpsYm1SbGNsUmhjbWRsZENoMGFHbHpMQ0J2S1N3Z1pTNWpiR1ZoY2loMExDQnVMQ0JwS1RzS0lDQWdJQ0FnSUNCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENoeUtUc0tJQ0FnSUgwS2ZUc0thbk11Y0hKdmRHOTBlWEJsTG1selYyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBJRDBnSVRBN0NuWmhjaUJyYnlBOUlHNWxkeUJOTENCd1ppQTlJRzVsZHlCTkxDQnRaaUE5SUc1bGR5QnNkQ3dnVjNRZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUUwb01Td2dNQ3dnTUNrc0lIUWdQU0F3S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTV2Y20xaGJDQTlJR1VzSUhSb2FYTXVZMjl1YzNSaGJuUWdQU0IwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV1YjNKdFlXd3VZMjl3ZVNobEtTd2dkR2hwY3k1amIyNXpkR0Z1ZENBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJEYjIxd2IyNWxiblJ6S0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV1YjNKdFlXd3VjMlYwS0dVc0lIUXNJRzRwTENCMGFHbHpMbU52Ym5OMFlXNTBJRDBnYVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFPYjNKdFlXeEJibVJEYjNCc1lXNWhjbEJ2YVc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd3dVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjI1emRHRnVkQ0E5SUMxMExtUnZkQ2gwYUdsekxtNXZjbTFoYkNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UTI5d2JHRnVZWEpRYjJsdWRITW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdhMjh1YzNWaVZtVmpkRzl5Y3lodUxDQjBLUzVqY205emN5aHdaaTV6ZFdKV1pXTjBiM0p6S0dVc0lIUXBLUzV1YjNKdFlXeHBlbVVvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFJHY205dFRtOXliV0ZzUVc1a1EyOXdiR0Z1WVhKUWIybHVkQ2hwTENCbEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTV2Y20xaGJDNWpiM0I1S0dVdWJtOXliV0ZzS1N3Z2RHaHBjeTVqYjI1emRHRnVkQ0E5SUdVdVkyOXVjM1JoYm5Rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdWIzSnRZV3hwZW1Vb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQXhJQzhnZEdocGN5NXViM0p0WVd3dWJHVnVaM1JvS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc0xtMTFiSFJwY0d4NVUyTmhiR0Z5S0dVcExDQjBhR2x6TG1OdmJuTjBZVzUwSUNvOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnVaV2RoZEdVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dWMzUmhiblFnS2owZ0xURXNJSFJvYVhNdWJtOXliV0ZzTG01bFoyRjBaU2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlZVYjFCdmFXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd3dVpHOTBLR1VwSUNzZ2RHaHBjeTVqYjI1emRHRnVkRHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVkc5VGNHaGxjbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaGxMbU5sYm5SbGNpa2dMU0JsTG5KaFpHbDFjenNLSUNBZ0lIMEtJQ0FnSUhCeWIycGxZM1JRYjJsdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVkyOXdlU2gwYUdsekxtNXZjbTFoYkNrdWJYVnNkR2x3YkhsVFkyRnNZWElvTFhSb2FYTXVaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHVXBLUzVoWkdRb1pTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1JNYVc1bEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdVpHVnNkR0VvYTI4cExDQnBJRDBnZEdocGN5NXViM0p0WVd3dVpHOTBLRzRwT3dvZ0lDQWdJQ0FnSUdsbUlDaHBJRDA5UFNBd0tTQnlaWFIxY200Z2RHaHBjeTVrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aUzV6ZEdGeWRDa2dQVDA5SURBZ1B5QjBMbU52Y0hrb1pTNXpkR0Z5ZENrZ09pQnVkV3hzT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnTFNobExuTjBZWEowTG1SdmRDaDBhR2x6TG01dmNtMWhiQ2tnS3lCMGFHbHpMbU52Ym5OMFlXNTBLU0F2SUdrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJZ1BDQXdJSHg4SUhJZ1BpQXhJRDhnYm5Wc2JDQTZJSFF1WTI5d2VTaHVLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHlLUzVoWkdRb1pTNXpkR0Z5ZENrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpUR2x1WlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1ScGMzUmhibU5sVkc5UWIybHVkQ2hsTG5OMFlYSjBLU3dnYmlBOUlIUm9hWE11WkdsemRHRnVZMlZVYjFCdmFXNTBLR1V1Wlc1a0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQThJREFnSmlZZ2JpQStJREFnZkh3Z2JpQThJREFnSmlZZ2RDQStJREE3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1cGJuUmxjbk5sWTNSelVHeGhibVVvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VTNCb1pYSmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1cGJuUmxjbk5sWTNSelVHeGhibVVvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCc1lXNWhjbEJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVqYjNCNUtIUm9hWE11Ym05eWJXRnNLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3RkR2hwY3k1amIyNXpkR0Z1ZENrN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVUxaGRISnBlRFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ0I4ZkNCdFppNW5aWFJPYjNKdFlXeE5ZWFJ5YVhnb1pTa3NJR2tnUFNCMGFHbHpMbU52Y0d4aGJtRnlVRzlwYm5Rb2EyOHBMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2djaUE5SUhSb2FYTXVibTl5YldGc0xtRndjR3g1VFdGMGNtbDRNeWh1S1M1dWIzSnRZV3hwZW1Vb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjI1emRHRnVkQ0E5SUMxcExtUnZkQ2h5S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dWMzUmhiblFnTFQwZ1pTNWtiM1FvZEdocGN5NXViM0p0WVd3cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXViM0p0WVd3dVpYRjFZV3h6S0hSb2FYTXVibTl5YldGc0tTQW1KaUJsTG1OdmJuTjBZVzUwSUQwOVBTQjBhR2x6TG1OdmJuTjBZVzUwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtmVHNLVjNRdWNISnZkRzkwZVhCbExtbHpVR3hoYm1VZ1BTQWhNRHNLZG1GeUlHWnBJRDBnYm1WM0lFRnVMQ0JoY3lBOUlHNWxkeUJOTENCRWNpQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1YzUXNJSFFnUFNCdVpYY2dWM1FzSUc0Z1BTQnVaWGNnVjNRc0lHa2dQU0J1WlhjZ1YzUXNJSElnUFNCdVpYY2dWM1FzSUc4Z1BTQnVaWGNnVjNRcGV3b2dJQ0FnSUNBZ0lIUm9hWE11Y0d4aGJtVnpJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMExBb2dJQ0FnSUNBZ0lDQWdJQ0J1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCeUxBb2dJQ0FnSUNBZ0lDQWdJQ0J2Q2lBZ0lDQWdJQ0FnWFRzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVMQ0JwTENCeUxDQnZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxuQnNZVzVsY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVZzd1hTNWpiM0I1S0dVcExDQmhXekZkTG1OdmNIa29kQ2tzSUdGYk1sMHVZMjl3ZVNodUtTd2dZVnN6WFM1amIzQjVLR2twTENCaFd6UmRMbU52Y0hrb2Npa3NJR0ZiTlYwdVkyOXdlU2h2S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXdiR0Z1WlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElEWTdJRzRyS3lsMFcyNWRMbU52Y0hrb1pTNXdiR0Z1WlhOYmJsMHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZCeWIycGxZM1JwYjI1TllYUnlhWGdvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV3YkdGdVpYTXNJRzRnUFNCbExtVnNaVzFsYm5SekxDQnBJRDBnYmxzd1hTd2djaUE5SUc1Yk1WMHNJRzhnUFNCdVd6SmRMQ0JoSUQwZ2Jsc3pYU3dnYkNBOUlHNWJORjBzSUdNZ1BTQnVXelZkTENCb0lEMGdibHMyWFN3Z2RTQTlJRzViTjEwc0lHUWdQU0J1V3poZExDQm1JRDBnYmxzNVhTd2diU0E5SUc1Yk1UQmRMQ0I0SUQwZ2Jsc3hNVjBzSUhZZ1BTQnVXekV5WFN3Z1p5QTlJRzViTVROZExDQndJRDBnYmxzeE5GMHNJRjhnUFNCdVd6RTFYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRnN3WFM1elpYUkRiMjF3YjI1bGJuUnpLR0VnTFNCcExDQjFJQzBnYkN3Z2VDQXRJR1FzSUY4Z0xTQjJLUzV1YjNKdFlXeHBlbVVvS1N3Z2RGc3hYUzV6WlhSRGIyMXdiMjVsYm5SektHRWdLeUJwTENCMUlDc2diQ3dnZUNBcklHUXNJRjhnS3lCMktTNXViM0p0WVd4cGVtVW9LU3dnZEZzeVhTNXpaWFJEYjIxd2IyNWxiblJ6S0dFZ0t5QnlMQ0IxSUNzZ1l5d2dlQ0FySUdZc0lGOGdLeUJuS1M1dWIzSnRZV3hwZW1Vb0tTd2dkRnN6WFM1elpYUkRiMjF3YjI1bGJuUnpLR0VnTFNCeUxDQjFJQzBnWXl3Z2VDQXRJR1lzSUY4Z0xTQm5LUzV1YjNKdFlXeHBlbVVvS1N3Z2RGczBYUzV6WlhSRGIyMXdiMjVsYm5SektHRWdMU0J2TENCMUlDMGdhQ3dnZUNBdElHMHNJRjhnTFNCd0tTNXViM0p0WVd4cGVtVW9LU3dnZEZzMVhTNXpaWFJEYjIxd2IyNWxiblJ6S0dFZ0t5QnZMQ0IxSUNzZ2FDd2dlQ0FySUcwc0lGOGdLeUJ3S1M1dWIzSnRZV3hwZW1Vb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITlBZbXBsWTNRb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVuWlc5dFpYUnllVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVpYjNWdVpHbHVaMU53YUdWeVpTQTlQVDBnYm5Wc2JDQW1KaUIwTG1OdmJYQjFkR1ZDYjNWdVpHbHVaMU53YUdWeVpTZ3BMQ0JtYVM1amIzQjVLSFF1WW05MWJtUnBibWRUY0dobGNtVXBMbUZ3Y0d4NVRXRjBjbWw0TkNobExtMWhkSEpwZUZkdmNteGtLU3dnZEdocGN5NXBiblJsY25ObFkzUnpVM0JvWlhKbEtHWnBLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOVGNISnBkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbWFTNWpaVzUwWlhJdWMyVjBLREFzSURBc0lEQXBMQ0JtYVM1eVlXUnBkWE1nUFNBdU56QTNNVEEyTnpneE1UZzJOVFEzTml3Z1pta3VZWEJ3YkhsTllYUnlhWGcwS0dVdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxtbHVkR1Z5YzJWamRITlRjR2hsY21Vb1pta3BPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzFOd2FHVnlaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbkJzWVc1bGN5d2diaUE5SUdVdVkyVnVkR1Z5TENCcElEMGdMV1V1Y21Ga2FYVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdQQ0EyT3lCeUt5c3BhV1lnS0hSYmNsMHVaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHNHBJRHdnYVNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaE1Ec0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5DYjNnb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1d2JHRnVaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURZN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RGdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0Z6TG5nZ1BTQnBMbTV2Y20xaGJDNTRJRDRnTUNBL0lHVXViV0Y0TG5nZ09pQmxMbTFwYmk1NExDQmhjeTU1SUQwZ2FTNXViM0p0WVd3dWVTQStJREFnUHlCbExtMWhlQzU1SURvZ1pTNXRhVzR1ZVN3Z1lYTXVlaUE5SUdrdWJtOXliV0ZzTG5vZ1BpQXdJRDhnWlM1dFlYZ3VlaUE2SUdVdWJXbHVMbm9zSUdrdVpHbHpkR0Z1WTJWVWIxQnZhVzUwS0dGektTQThJREFwSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNFd093b2dJQ0FnZlFvZ0lDQWdZMjl1ZEdGcGJuTlFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5Cc1lXNWxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnTmpzZ2Jpc3JLV2xtSUNoMFcyNWRMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaGxLU0E4SURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0lUQTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQnlhQ2dwSUhzS0lDQWdJR3hsZENCeklEMGdiblZzYkN3Z1pTQTlJQ0V4TENCMElEMGdiblZzYkN3Z2JpQTlJRzUxYkd3N0NpQWdJQ0JtZFc1amRHbHZiaUJwS0hJc0lHOHBJSHNLSUNBZ0lDQWdJQ0IwS0hJc0lHOHBMQ0J1SUQwZ2N5NXlaWEYxWlhOMFFXNXBiV0YwYVc5dVJuSmhiV1VvYVNrN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lITjBZWEowT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlNBaFBUMGdJVEFnSmlZZ2RDQWhQVDBnYm5Wc2JDQW1KaUFvYmlBOUlITXVjbVZ4ZFdWemRFRnVhVzFoZEdsdmJrWnlZVzFsS0drcExDQmxJRDBnSVRBcE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjM1J2Y0RvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdVkyRnVZMlZzUVc1cGJXRjBhVzl1Um5KaGJXVW9iaWtzSUdVZ1BTQWhNVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGRFRnVhVzFoZEdsdmJreHZiM0E2SUdaMWJtTjBhVzl1S0hJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlISTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhSRGIyNTBaWGgwT2lCbWRXNWpkR2x2YmloeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNZ1BTQnlPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnWjJZb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQmxMbWx6VjJWaVIwd3lMQ0J1SUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCbWRXNWpkR2x2YmlCcEtHTXNJR2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUdNdVlYSnlZWGtzSUdRZ1BTQmpMblZ6WVdkbExDQm1JRDBnY3k1amNtVmhkR1ZDZFdabVpYSW9LVHNLSUNBZ0lDQWdJQ0J6TG1KcGJtUkNkV1ptWlhJb2FDd2daaWtzSUhNdVluVm1abVZ5UkdGMFlTaG9MQ0IxTENCa0tTd2dZeTV2YmxWd2JHOWhaRU5oYkd4aVlXTnJLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHMGdQU0ExTVRJMk93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMUlHbHVjM1JoYm1ObGIyWWdSbXh2WVhRek1rRnljbUY1SUQ4Z2JTQTlJRFV4TWpZZ09pQjFJR2x1YzNSaGJtTmxiMllnUm14dllYUTJORUZ5Y21GNUlEOGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRFRjBkSEpwWW5WMFpYTTZJRlZ1YzNWd2NHOXlkR1ZrSUdSaGRHRWdZblZtWm1WeUlHWnZjbTFoZERvZ1JteHZZWFEyTkVGeWNtRjVMaUlwSURvZ2RTQnBibk4wWVc1alpXOW1JRlZwYm5ReE5rRnljbUY1SUQ4Z1l5NXBjMFpzYjJGME1UWkNkV1ptWlhKQmRIUnlhV0oxZEdVZ1B5QjBJRDhnYlNBOUlEVXhNekVnT2lCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNUVhSMGNtbGlkWFJsY3pvZ1ZYTmhaMlVnYjJZZ1JteHZZWFF4TmtKMVptWmxja0YwZEhKcFluVjBaU0J5WlhGMWFYSmxjeUJYWldKSFRESXVJaWtnT2lCdElEMGdOVEV5TXlBNklIVWdhVzV6ZEdGdVkyVnZaaUJKYm5ReE5rRnljbUY1SUQ4Z2JTQTlJRFV4TWpJZ09pQjFJR2x1YzNSaGJtTmxiMllnVldsdWRETXlRWEp5WVhrZ1B5QnRJRDBnTlRFeU5TQTZJSFVnYVc1emRHRnVZMlZ2WmlCSmJuUXpNa0Z5Y21GNUlEOGdiU0E5SURVeE1qUWdPaUIxSUdsdWMzUmhibU5sYjJZZ1NXNTBPRUZ5Y21GNUlEOGdiU0E5SURVeE1qQWdPaUFvZFNCcGJuTjBZVzVqWlc5bUlGVnBiblE0UVhKeVlYa2dmSHdnZFNCcGJuTjBZVzVqWlc5bUlGVnBiblE0UTJ4aGJYQmxaRUZ5Y21GNUtTQW1KaUFvYlNBOUlEVXhNakVwTENCN0NpQWdJQ0FnSUNBZ0lDQWdJR0oxWm1abGNqb2daaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nYlN3S0lDQWdJQ0FnSUNBZ0lDQWdZbmwwWlhOUVpYSkZiR1Z0Wlc1ME9pQjFMa0paVkVWVFgxQkZVbDlGVEVWTlJVNVVMQW9nSUNBZ0lDQWdJQ0FnSUNCMlpYSnphVzl1T2lCakxuWmxjbk5wYjI0S0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdjaWhqTENCb0xDQjFLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0JvTG1GeWNtRjVMQ0JtSUQwZ2FDNTFjR1JoZEdWU1lXNW5aVHNLSUNBZ0lDQWdJQ0J6TG1KcGJtUkNkV1ptWlhJb2RTd2dZeWtzSUdZdVkyOTFiblFnUFQwOUlDMHhJRDhnY3k1aWRXWm1aWEpUZFdKRVlYUmhLSFVzSURBc0lHUXBJRG9nS0hRZ1B5QnpMbUoxWm1abGNsTjFZa1JoZEdFb2RTd2daaTV2Wm1aelpYUWdLaUJrTGtKWlZFVlRYMUJGVWw5RlRFVk5SVTVVTENCa0xDQm1MbTltWm5ObGRDd2daaTVqYjNWdWRDa2dPaUJ6TG1KMVptWmxjbE4xWWtSaGRHRW9kU3dnWmk1dlptWnpaWFFnS2lCa0xrSlpWRVZUWDFCRlVsOUZURVZOUlU1VUxDQmtMbk4xWW1GeWNtRjVLR1l1YjJabWMyVjBMQ0JtTG05bVpuTmxkQ0FySUdZdVkyOTFiblFwS1N3Z1ppNWpiM1Z1ZENBOUlDMHhLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc4b1l5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmpMbWx6U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VnSmlZZ0tHTWdQU0JqTG1SaGRHRXBMQ0J1TG1kbGRDaGpLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdFb1l5a2dld29nSUNBZ0lDQWdJR011YVhOSmJuUmxjbXhsWVhabFpFSjFabVpsY2tGMGRISnBZblYwWlNBbUppQW9ZeUE5SUdNdVpHRjBZU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHZ2dQU0J1TG1kbGRDaGpLVHNLSUNBZ0lDQWdJQ0JvSUNZbUlDaHpMbVJsYkdWMFpVSjFabVpsY2lob0xtSjFabVpsY2lrc0lHNHVaR1ZzWlhSbEtHTXBLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUd3b1l5d2dhQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGpMbWx6UjB4Q2RXWm1aWEpCZEhSeWFXSjFkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQnVMbWRsZENoaktUc0tJQ0FnSUNBZ0lDQWdJQ0FnS0NGa0lIeDhJR1F1ZG1WeWMybHZiaUE4SUdNdWRtVnljMmx2YmlrZ0ppWWdiaTV6WlhRb1l5d2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZblZtWm1WeU9pQmpMbUoxWm1abGNpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUdNdWRIbHdaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0o1ZEdWelVHVnlSV3hsYldWdWREb2dZeTVsYkdWdFpXNTBVMmw2WlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhabGNuTnBiMjQ2SUdNdWRtVnljMmx2YmdvZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCakxtbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVWdKaVlnS0dNZ1BTQmpMbVJoZEdFcE93b2dJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JpNW5aWFFvWXlrN0NpQWdJQ0FnSUNBZ2RTQTlQVDBnZG05cFpDQXdJRDhnYmk1elpYUW9ZeXdnYVNoakxDQm9LU2tnT2lCMUxuWmxjbk5wYjI0Z1BDQmpMblpsY25OcGIyNGdKaVlnS0hJb2RTNWlkV1ptWlhJc0lHTXNJR2dwTENCMUxuWmxjbk5wYjI0Z1BTQmpMblpsY25OcGIyNHBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHOHNDaUFnSUNBZ0lDQWdjbVZ0YjNabE9pQmhMQW9nSUNBZ0lDQWdJSFZ3WkdGMFpUb2diQW9nSUNBZ2ZUc0tmUXAyWVhJZ1VHa2dQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTVN3Z2JpQTlJREVzSUdrZ1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKUWJHRnVaVWRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUZObFoyMWxiblJ6T2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUlRaV2R0Wlc1MGN6b2dhUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JsSUM4Z01pd2dieUE5SUhRZ0x5QXlMQ0JoSUQwZ1RXRjBhQzVtYkc5dmNpaHVLU3dnYkNBOUlFMWhkR2d1Wm14dmIzSW9hU2tzSUdNZ1BTQmhJQ3NnTVN3Z2FDQTlJR3dnS3lBeExDQjFJRDBnWlNBdklHRXNJR1FnUFNCMElDOGdiQ3dnWmlBOUlGdGRMQ0J0SUQwZ1cxMHNJSGdnUFNCYlhTd2dkaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p5QTlJREE3SUdjZ1BDQm9PeUJuS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJR2NnS2lCa0lDMGdienNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCZklEMGdNRHNnWHlBOElHTTdJRjhyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUY4Z0tpQjFJQzBnY2pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcwdWNIVnphQ2g1TENBdGNDd2dNQ2tzSUhndWNIVnphQ2d3TENBd0xDQXhLU3dnZGk1d2RYTm9LRjhnTHlCaEtTd2dkaTV3ZFhOb0tERWdMU0JuSUM4Z2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbklEMGdNRHNnWnlBOElHdzdJR2NyS3lsbWIzSW9iR1YwSUhBZ1BTQXdPeUJ3SUR3Z1lUc2djQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQndJQ3NnWXlBcUlHY3NJSGtnUFNCd0lDc2dZeUFxSUNobklDc2dNU2tzSUdJZ1BTQndJQ3NnTVNBcklHTWdLaUFvWnlBcklERXBMQ0JCSUQwZ2NDQXJJREVnS3lCaklDb2daenNLSUNBZ0lDQWdJQ0FnSUNBZ1ppNXdkWE5vS0Y4c0lIa3NJRUVwTENCbUxuQjFjMmdvZVN3Z1lpd2dRU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVjMlYwU1c1a1pYZ29aaWtzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNodExDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKdWIzSnRZV3dpTENCdVpYY2daR1VvZUN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpZFhZaUxDQnVaWGNnWkdVb2Rpd2dNaWtwT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRkJwS0dVdWQybGtkR2dzSUdVdWFHVnBaMmgwTENCbExuZHBaSFJvVTJWbmJXVnVkSE1zSUdVdWFHVnBaMmgwVTJWbmJXVnVkSE1wT3dvZ0lDQWdmUXA5TENCNFppQTlJR0FqYVdaa1pXWWdWVk5GWDBGTVVFaEJUVUZRQ2dsa2FXWm1kWE5sUTI5c2IzSXVZU0FxUFNCMFpYaDBkWEpsTWtRb0lHRnNjR2hoVFdGd0xDQjJWWFlnS1M1bk93b2paVzVrYVdaZ0xDQjVaaUE5SUdBamFXWmtaV1lnVlZORlgwRk1VRWhCVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmhiSEJvWVUxaGNEc0tJMlZ1WkdsbVlDd2dkbVlnUFNCZ0kybG1aR1ZtSUZWVFJWOUJURkJJUVZSRlUxUUtDV2xtSUNnZ1pHbG1ablZ6WlVOdmJHOXlMbUVnUENCaGJIQm9ZVlJsYzNRZ0tTQmthWE5qWVhKa093b2paVzVrYVdaZ0xDQmZaaUE5SUdBamFXWmtaV1lnVlZORlgwRk1VRWhCVkVWVFZBb0pkVzVwWm05eWJTQm1iRzloZENCaGJIQm9ZVlJsYzNRN0NpTmxibVJwWm1Bc0lFMW1JRDBnWUNOcFptUmxaaUJWVTBWZlFVOU5RVkFLQ1dac2IyRjBJR0Z0WW1sbGJuUlBZMk5zZFhOcGIyNGdQU0FvSUhSbGVIUjFjbVV5UkNnZ1lXOU5ZWEFzSUhaVmRqSWdLUzV5SUMwZ01TNHdJQ2tnS2lCaGIwMWhjRWx1ZEdWdWMybDBlU0FySURFdU1Ec0tDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBcVBTQmhiV0pwWlc1MFQyTmpiSFZ6YVc5dU93b0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOUZUbFpOUVZBZ0tTQW1KaUJrWldacGJtVmtLQ0JUVkVGT1JFRlNSQ0FwQ2drSlpteHZZWFFnWkc5MFRsWWdQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJZ0tTQXBPd29KQ1hKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBVM0JsWTNWc1lYSWdLajBnWTI5dGNIVjBaVk53WldOMWJHRnlUMk5qYkhWemFXOXVLQ0JrYjNST1Zpd2dZVzFpYVdWdWRFOWpZMngxYzJsdmJpd2diV0YwWlhKcFlXd3VjbTkxWjJodVpYTnpJQ2s3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnWW1ZZ1BTQmdJMmxtWkdWbUlGVlRSVjlCVDAxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdZVzlOWVhBN0NnbDFibWxtYjNKdElHWnNiMkYwSUdGdlRXRndTVzUwWlc1emFYUjVPd29qWlc1a2FXWmdMQ0IzWmlBOUlDSjJaV016SUhSeVlXNXpabTl5YldWa0lEMGdkbVZqTXlnZ2NHOXphWFJwYjI0Z0tUc2lMQ0JUWmlBOUlHQjJaV016SUc5aWFtVmpkRTV2Y20xaGJDQTlJSFpsWXpNb0lHNXZjbTFoYkNBcE93b2phV1prWldZZ1ZWTkZYMVJCVGtkRlRsUUtDWFpsWXpNZ2IySnFaV04wVkdGdVoyVnVkQ0E5SUhabFl6TW9JSFJoYm1kbGJuUXVlSGw2SUNrN0NpTmxibVJwWm1Bc0lGUm1JRDBnWUhabFl6TWdRbEpFUmw5TVlXMWlaWEowS0NCamIyNXpkQ0JwYmlCMlpXTXpJR1JwWm1aMWMyVkRiMnh2Y2lBcElIc0tDWEpsZEhWeWJpQlNSVU5KVUZKUFEwRk1YMUJKSUNvZ1pHbG1ablZ6WlVOdmJHOXlPd3A5Q25abFl6TWdSbDlUWTJoc2FXTnJLQ0JqYjI1emRDQnBiaUIyWldNeklHWXdMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQm1PVEFzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1J2ZEZaSUlDa2dld29KWm14dllYUWdabkpsYzI1bGJDQTlJR1Y0Y0RJb0lDZ2dMU0ExTGpVMU5EY3pJQ29nWkc5MFZrZ2dMU0EyTGprNE16RTJJQ2tnS2lCa2IzUldTQ0FwT3dvSmNtVjBkWEp1SUdZd0lDb2dLQ0F4TGpBZ0xTQm1jbVZ6Ym1Wc0lDa2dLeUFvSUdZNU1DQXFJR1p5WlhOdVpXd2dLVHNLZlFwbWJHOWhkQ0JXWDBkSFdGOVRiV2wwYUVOdmNuSmxiR0YwWldRb0lHTnZibk4wSUdsdUlHWnNiMkYwSUdGc2NHaGhMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQmtiM1JPVEN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWkc5MFRsWWdLU0I3Q2dsbWJHOWhkQ0JoTWlBOUlIQnZkeklvSUdGc2NHaGhJQ2s3Q2dsbWJHOWhkQ0JuZGlBOUlHUnZkRTVNSUNvZ2MzRnlkQ2dnWVRJZ0t5QW9JREV1TUNBdElHRXlJQ2tnS2lCd2IzY3lLQ0JrYjNST1ZpQXBJQ2s3Q2dsbWJHOWhkQ0JuYkNBOUlHUnZkRTVXSUNvZ2MzRnlkQ2dnWVRJZ0t5QW9JREV1TUNBdElHRXlJQ2tnS2lCd2IzY3lLQ0JrYjNST1RDQXBJQ2s3Q2dseVpYUjFjbTRnTUM0MUlDOGdiV0Y0S0NCbmRpQXJJR2RzTENCRlVGTkpURTlPSUNrN0NuMEtabXh2WVhRZ1JGOUhSMWdvSUdOdmJuTjBJR2x1SUdac2IyRjBJR0ZzY0doaExDQmpiMjV6ZENCcGJpQm1iRzloZENCa2IzUk9TQ0FwSUhzS0NXWnNiMkYwSUdFeUlEMGdjRzkzTWlnZ1lXeHdhR0VnS1RzS0NXWnNiMkYwSUdSbGJtOXRJRDBnY0c5M01pZ2daRzkwVGtnZ0tTQXFJQ2dnWVRJZ0xTQXhMakFnS1NBcklERXVNRHNLQ1hKbGRIVnliaUJTUlVOSlVGSlBRMEZNWDFCSklDb2dZVElnTHlCd2IzY3lLQ0JrWlc1dmJTQXBPd3A5Q25abFl6TWdRbEpFUmw5SFIxZ29JR052Ym5OMElHbHVJSFpsWXpNZ2JHbG5hSFJFYVhJc0lHTnZibk4wSUdsdUlIWmxZek1nZG1sbGQwUnBjaXdnWTI5dWMzUWdhVzRnZG1Wak15QnViM0p0WVd3c0lHTnZibk4wSUdsdUlIWmxZek1nWmpBc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdZNU1Dd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2NtOTFaMmh1WlhOeklDa2dld29KWm14dllYUWdZV3h3YUdFZ1BTQndiM2N5S0NCeWIzVm5hRzVsYzNNZ0tUc0tDWFpsWXpNZ2FHRnNaa1JwY2lBOUlHNXZjbTFoYkdsNlpTZ2diR2xuYUhSRWFYSWdLeUIyYVdWM1JHbHlJQ2s3Q2dsbWJHOWhkQ0JrYjNST1RDQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHNXZjbTFoYkN3Z2JHbG5hSFJFYVhJZ0tTQXBPd29KWm14dllYUWdaRzkwVGxZZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCdWIzSnRZV3dzSUhacFpYZEVhWElnS1NBcE93b0pabXh2WVhRZ1pHOTBUa2dnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0J1YjNKdFlXd3NJR2hoYkdaRWFYSWdLU0FwT3dvSlpteHZZWFFnWkc5MFZrZ2dQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQjJhV1YzUkdseUxDQm9ZV3htUkdseUlDa2dLVHNLQ1habFl6TWdSaUE5SUVaZlUyTm9iR2xqYXlnZ1pqQXNJR1k1TUN3Z1pHOTBWa2dnS1RzS0NXWnNiMkYwSUZZZ1BTQldYMGRIV0Y5VGJXbDBhRU52Y25KbGJHRjBaV1FvSUdGc2NHaGhMQ0JrYjNST1RDd2daRzkwVGxZZ0tUc0tDV1pzYjJGMElFUWdQU0JFWDBkSFdDZ2dZV3h3YUdFc0lHUnZkRTVJSUNrN0NnbHlaWFIxY200Z1JpQXFJQ2dnVmlBcUlFUWdLVHNLZlFwMlpXTXlJRXhVUTE5VmRpZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCT0xDQmpiMjV6ZENCcGJpQjJaV016SUZZc0lHTnZibk4wSUdsdUlHWnNiMkYwSUhKdmRXZG9ibVZ6Y3lBcElIc0tDV052Ym5OMElHWnNiMkYwSUV4VlZGOVRTVnBGSUQwZ05qUXVNRHNLQ1dOdmJuTjBJR1pzYjJGMElFeFZWRjlUUTBGTVJTQTlJQ2dnVEZWVVgxTkpXa1VnTFNBeExqQWdLU0F2SUV4VlZGOVRTVnBGT3dvSlkyOXVjM1FnWm14dllYUWdURlZVWDBKSlFWTWdQU0F3TGpVZ0x5Qk1WVlJmVTBsYVJUc0tDV1pzYjJGMElHUnZkRTVXSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnVGl3Z1ZpQXBJQ2s3Q2dsMlpXTXlJSFYySUQwZ2RtVmpNaWdnY205MVoyaHVaWE56TENCemNYSjBLQ0F4TGpBZ0xTQmtiM1JPVmlBcElDazdDZ2wxZGlBOUlIVjJJQ29nVEZWVVgxTkRRVXhGSUNzZ1RGVlVYMEpKUVZNN0NnbHlaWFIxY200Z2RYWTdDbjBLWm14dllYUWdURlJEWDBOc2FYQndaV1JUY0dobGNtVkdiM0p0Um1GamRHOXlLQ0JqYjI1emRDQnBiaUIyWldNeklHWWdLU0I3Q2dsbWJHOWhkQ0JzSUQwZ2JHVnVaM1JvS0NCbUlDazdDZ2x5WlhSMWNtNGdiV0Y0S0NBb0lHd2dLaUJzSUNzZ1ppNTZJQ2tnTHlBb0lHd2dLeUF4TGpBZ0tTd2dNQzR3SUNrN0NuMEtkbVZqTXlCTVZFTmZSV1JuWlZabFkzUnZja1p2Y20xR1lXTjBiM0lvSUdOdmJuTjBJR2x1SUhabFl6TWdkakVzSUdOdmJuTjBJR2x1SUhabFl6TWdkaklnS1NCN0NnbG1iRzloZENCNElEMGdaRzkwS0NCMk1Td2dkaklnS1RzS0NXWnNiMkYwSUhrZ1BTQmhZbk1vSUhnZ0tUc0tDV1pzYjJGMElHRWdQU0F3TGpnMU5ETTVPRFVnS3lBb0lEQXVORGsyTlRFMU5TQXJJREF1TURFME5USXdOaUFxSUhrZ0tTQXFJSGs3Q2dsbWJHOWhkQ0JpSUQwZ015NDBNVGMxT1RRd0lDc2dLQ0EwTGpFMk1UWTNNalFnS3lCNUlDa2dLaUI1T3dvSlpteHZZWFFnZGlBOUlHRWdMeUJpT3dvSlpteHZZWFFnZEdobGRHRmZjMmx1ZEdobGRHRWdQU0FvSUhnZ1BpQXdMakFnS1NBL0lIWWdPaUF3TGpVZ0tpQnBiblpsY25ObGMzRnlkQ2dnYldGNEtDQXhMakFnTFNCNElDb2dlQ3dnTVdVdE55QXBJQ2tnTFNCMk93b0pjbVYwZFhKdUlHTnliM056S0NCMk1Td2dkaklnS1NBcUlIUm9aWFJoWDNOcGJuUm9aWFJoT3dwOUNuWmxZek1nVEZSRFgwVjJZV3gxWVhSbEtDQmpiMjV6ZENCcGJpQjJaV016SUU0c0lHTnZibk4wSUdsdUlIWmxZek1nVml3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJRTENCamIyNXpkQ0JwYmlCdFlYUXpJRzFKYm5Zc0lHTnZibk4wSUdsdUlIWmxZek1nY21WamRFTnZiM0prYzFzZ05DQmRJQ2tnZXdvSmRtVmpNeUIyTVNBOUlISmxZM1JEYjI5eVpITmJJREVnWFNBdElISmxZM1JEYjI5eVpITmJJREFnWFRzS0NYWmxZek1nZGpJZ1BTQnlaV04wUTI5dmNtUnpXeUF6SUYwZ0xTQnlaV04wUTI5dmNtUnpXeUF3SUYwN0NnbDJaV016SUd4cFoyaDBUbTl5YldGc0lEMGdZM0p2YzNNb0lIWXhMQ0IyTWlBcE93b0phV1lvSUdSdmRDZ2diR2xuYUhST2IzSnRZV3dzSUZBZ0xTQnlaV04wUTI5dmNtUnpXeUF3SUYwZ0tTQThJREF1TUNBcElISmxkSFZ5YmlCMlpXTXpLQ0F3TGpBZ0tUc0tDWFpsWXpNZ1ZERXNJRlF5T3dvSlZERWdQU0J1YjNKdFlXeHBlbVVvSUZZZ0xTQk9JQ29nWkc5MEtDQldMQ0JPSUNrZ0tUc0tDVlF5SUQwZ0xTQmpjbTl6Y3lnZ1Rpd2dWREVnS1RzS0NXMWhkRE1nYldGMElEMGdiVWx1ZGlBcUlIUnlZVzV6Y0c5elpVMWhkRE1vSUcxaGRETW9JRlF4TENCVU1pd2dUaUFwSUNrN0NnbDJaV016SUdOdmIzSmtjMXNnTkNCZE93b0pZMjl2Y21Seld5QXdJRjBnUFNCdFlYUWdLaUFvSUhKbFkzUkRiMjl5WkhOYklEQWdYU0F0SUZBZ0tUc0tDV052YjNKa2Mxc2dNU0JkSUQwZ2JXRjBJQ29nS0NCeVpXTjBRMjl2Y21Seld5QXhJRjBnTFNCUUlDazdDZ2xqYjI5eVpITmJJRElnWFNBOUlHMWhkQ0FxSUNnZ2NtVmpkRU52YjNKa2Mxc2dNaUJkSUMwZ1VDQXBPd29KWTI5dmNtUnpXeUF6SUYwZ1BTQnRZWFFnS2lBb0lISmxZM1JEYjI5eVpITmJJRE1nWFNBdElGQWdLVHNLQ1dOdmIzSmtjMXNnTUNCZElEMGdibTl5YldGc2FYcGxLQ0JqYjI5eVpITmJJREFnWFNBcE93b0pZMjl2Y21Seld5QXhJRjBnUFNCdWIzSnRZV3hwZW1Vb0lHTnZiM0prYzFzZ01TQmRJQ2s3Q2dsamIyOXlaSE5iSURJZ1hTQTlJRzV2Y20xaGJHbDZaU2dnWTI5dmNtUnpXeUF5SUYwZ0tUc0tDV052YjNKa2Mxc2dNeUJkSUQwZ2JtOXliV0ZzYVhwbEtDQmpiMjl5WkhOYklETWdYU0FwT3dvSmRtVmpNeUIyWldOMGIzSkdiM0p0Um1GamRHOXlJRDBnZG1Wak15Z2dNQzR3SUNrN0NnbDJaV04wYjNKR2IzSnRSbUZqZEc5eUlDczlJRXhVUTE5RlpHZGxWbVZqZEc5eVJtOXliVVpoWTNSdmNpZ2dZMjl2Y21Seld5QXdJRjBzSUdOdmIzSmtjMXNnTVNCZElDazdDZ2wyWldOMGIzSkdiM0p0Um1GamRHOXlJQ3M5SUV4VVExOUZaR2RsVm1WamRHOXlSbTl5YlVaaFkzUnZjaWdnWTI5dmNtUnpXeUF4SUYwc0lHTnZiM0prYzFzZ01pQmRJQ2s3Q2dsMlpXTjBiM0pHYjNKdFJtRmpkRzl5SUNzOUlFeFVRMTlGWkdkbFZtVmpkRzl5Um05eWJVWmhZM1J2Y2lnZ1kyOXZjbVJ6V3lBeUlGMHNJR052YjNKa2Mxc2dNeUJkSUNrN0NnbDJaV04wYjNKR2IzSnRSbUZqZEc5eUlDczlJRXhVUTE5RlpHZGxWbVZqZEc5eVJtOXliVVpoWTNSdmNpZ2dZMjl2Y21Seld5QXpJRjBzSUdOdmIzSmtjMXNnTUNCZElDazdDZ2xtYkc5aGRDQnlaWE4xYkhRZ1BTQk1WRU5mUTJ4cGNIQmxaRk53YUdWeVpVWnZjbTFHWVdOMGIzSW9JSFpsWTNSdmNrWnZjbTFHWVdOMGIzSWdLVHNLQ1hKbGRIVnliaUIyWldNektDQnlaWE4xYkhRZ0tUc0tmUXBtYkc5aGRDQkhYMEpzYVc1dVVHaHZibWRmU1cxd2JHbGphWFFvSUNrZ2V3b0pjbVYwZFhKdUlEQXVNalU3Q24wS1pteHZZWFFnUkY5Q2JHbHVibEJvYjI1bktDQmpiMjV6ZENCcGJpQm1iRzloZENCemFHbHVhVzVsYzNNc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdSdmRFNUlJQ2tnZXdvSmNtVjBkWEp1SUZKRlEwbFFVazlEUVV4ZlVFa2dLaUFvSUhOb2FXNXBibVZ6Y3lBcUlEQXVOU0FySURFdU1DQXBJQ29nY0c5M0tDQmtiM1JPU0N3Z2MyaHBibWx1WlhOeklDazdDbjBLZG1Wak15QkNVa1JHWDBKc2FXNXVVR2h2Ym1jb0lHTnZibk4wSUdsdUlIWmxZek1nYkdsbmFIUkVhWElzSUdOdmJuTjBJR2x1SUhabFl6TWdkbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dzSUdOdmJuTjBJR2x1SUhabFl6TWdjM0JsWTNWc1lYSkRiMnh2Y2l3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnYzJocGJtbHVaWE56SUNrZ2V3b0pkbVZqTXlCb1lXeG1SR2x5SUQwZ2JtOXliV0ZzYVhwbEtDQnNhV2RvZEVScGNpQXJJSFpwWlhkRWFYSWdLVHNLQ1dac2IyRjBJR1J2ZEU1SUlEMGdjMkYwZFhKaGRHVW9JR1J2ZENnZ2JtOXliV0ZzTENCb1lXeG1SR2x5SUNrZ0tUc0tDV1pzYjJGMElHUnZkRlpJSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnZG1sbGQwUnBjaXdnYUdGc1prUnBjaUFwSUNrN0NnbDJaV016SUVZZ1BTQkdYMU5qYUd4cFkyc29JSE53WldOMWJHRnlRMjlzYjNJc0lERXVNQ3dnWkc5MFZrZ2dLVHNLQ1dac2IyRjBJRWNnUFNCSFgwSnNhVzV1VUdodmJtZGZTVzF3YkdsamFYUW9JQ2s3Q2dsbWJHOWhkQ0JFSUQwZ1JGOUNiR2x1YmxCb2IyNW5LQ0J6YUdsdWFXNWxjM01zSUdSdmRFNUlJQ2s3Q2dseVpYUjFjbTRnUmlBcUlDZ2dSeUFxSUVRZ0tUc0tmUW9qYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMU5JUlVWT0lDa0tabXh2WVhRZ1JGOURhR0Z5YkdsbEtDQm1iRzloZENCeWIzVm5hRzVsYzNNc0lHWnNiMkYwSUdSdmRFNUlJQ2tnZXdvSlpteHZZWFFnWVd4d2FHRWdQU0J3YjNjeUtDQnliM1ZuYUc1bGMzTWdLVHNLQ1dac2IyRjBJR2x1ZGtGc2NHaGhJRDBnTVM0d0lDOGdZV3h3YUdFN0NnbG1iRzloZENCamIzTXlhQ0E5SUdSdmRFNUlJQ29nWkc5MFRrZzdDZ2xtYkc5aGRDQnphVzR5YUNBOUlHMWhlQ2dnTVM0d0lDMGdZMjl6TW1nc0lEQXVNREEzT0RFeU5TQXBPd29KY21WMGRYSnVJQ2dnTWk0d0lDc2dhVzUyUVd4d2FHRWdLU0FxSUhCdmR5Z2djMmx1TW1nc0lHbHVka0ZzY0doaElDb2dNQzQxSUNrZ0x5QW9JREl1TUNBcUlGQkpJQ2s3Q24wS1pteHZZWFFnVmw5T1pYVmlaV3gwS0NCbWJHOWhkQ0JrYjNST1Zpd2dabXh2WVhRZ1pHOTBUa3dnS1NCN0NnbHlaWFIxY200Z2MyRjBkWEpoZEdVb0lERXVNQ0F2SUNnZ05DNHdJQ29nS0NCa2IzUk9UQ0FySUdSdmRFNVdJQzBnWkc5MFRrd2dLaUJrYjNST1ZpQXBJQ2tnS1RzS2ZRcDJaV016SUVKU1JFWmZVMmhsWlc0b0lHTnZibk4wSUdsdUlIWmxZek1nYkdsbmFIUkVhWElzSUdOdmJuTjBJR2x1SUhabFl6TWdkbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dzSUhabFl6TWdjMmhsWlc1RGIyeHZjaXdnWTI5dWMzUWdhVzRnWm14dllYUWdjMmhsWlc1U2IzVm5hRzVsYzNNZ0tTQjdDZ2wyWldNeklHaGhiR1pFYVhJZ1BTQnViM0p0WVd4cGVtVW9JR3hwWjJoMFJHbHlJQ3NnZG1sbGQwUnBjaUFwT3dvSlpteHZZWFFnWkc5MFRrd2dQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQnViM0p0WVd3c0lHeHBaMmgwUkdseUlDa2dLVHNLQ1dac2IyRjBJR1J2ZEU1V0lEMGdjMkYwZFhKaGRHVW9JR1J2ZENnZ2JtOXliV0ZzTENCMmFXVjNSR2x5SUNrZ0tUc0tDV1pzYjJGMElHUnZkRTVJSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnYm05eWJXRnNMQ0JvWVd4bVJHbHlJQ2tnS1RzS0NXWnNiMkYwSUVRZ1BTQkVYME5vWVhKc2FXVW9JSE5vWldWdVVtOTFaMmh1WlhOekxDQmtiM1JPU0NBcE93b0pabXh2WVhRZ1ZpQTlJRlpmVG1WMVltVnNkQ2dnWkc5MFRsWXNJR1J2ZEU1TUlDazdDZ2x5WlhSMWNtNGdjMmhsWlc1RGIyeHZjaUFxSUNnZ1JDQXFJRllnS1RzS2ZRb2paVzVrYVdaZ0xDQkZaaUE5SUdBamFXWmtaV1lnVlZORlgwSlZUVkJOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHSjFiWEJOWVhBN0NnbDFibWxtYjNKdElHWnNiMkYwSUdKMWJYQlRZMkZzWlRzS0NYWmxZeklnWkVoa2VIbGZabmRrS0NrZ2V3b0pDWFpsWXpJZ1pGTlVaSGdnUFNCa1JtUjRLQ0IyVlhZZ0tUc0tDUWwyWldNeUlHUlRWR1I1SUQwZ1pFWmtlU2dnZGxWMklDazdDZ2tKWm14dllYUWdTR3hzSUQwZ1luVnRjRk5qWVd4bElDb2dkR1Y0ZEhWeVpUSkVLQ0JpZFcxd1RXRndMQ0IyVlhZZ0tTNTRPd29KQ1dac2IyRjBJR1JDZUNBOUlHSjFiWEJUWTJGc1pTQXFJSFJsZUhSMWNtVXlSQ2dnWW5WdGNFMWhjQ3dnZGxWMklDc2daRk5VWkhnZ0tTNTRJQzBnU0d4c093b0pDV1pzYjJGMElHUkNlU0E5SUdKMWJYQlRZMkZzWlNBcUlIUmxlSFIxY21VeVJDZ2dZblZ0Y0UxaGNDd2dkbFYySUNzZ1pGTlVaSGtnS1M1NElDMGdTR3hzT3dvSkNYSmxkSFZ5YmlCMlpXTXlLQ0JrUW5nc0lHUkNlU0FwT3dvSmZRb0pkbVZqTXlCd1pYSjBkWEppVG05eWJXRnNRWEppS0NCMlpXTXpJSE4xY21aZmNHOXpMQ0IyWldNeklITjFjbVpmYm05eWJTd2dkbVZqTWlCa1NHUjRlU3dnWm14dllYUWdabUZqWlVScGNtVmpkR2x2YmlBcElIc0tDUWwyWldNeklIWlRhV2R0WVZnZ1BTQjJaV016S0NCa1JtUjRLQ0J6ZFhKbVgzQnZjeTU0SUNrc0lHUkdaSGdvSUhOMWNtWmZjRzl6TG5rZ0tTd2daRVprZUNnZ2MzVnlabDl3YjNNdWVpQXBJQ2s3Q2drSmRtVmpNeUIyVTJsbmJXRlpJRDBnZG1Wak15Z2daRVprZVNnZ2MzVnlabDl3YjNNdWVDQXBMQ0JrUm1SNUtDQnpkWEptWDNCdmN5NTVJQ2tzSUdSR1pIa29JSE4xY21aZmNHOXpMbm9nS1NBcE93b0pDWFpsWXpNZ2RrNGdQU0J6ZFhKbVgyNXZjbTA3Q2drSmRtVmpNeUJTTVNBOUlHTnliM056S0NCMlUybG5iV0ZaTENCMlRpQXBPd29KQ1habFl6TWdVaklnUFNCamNtOXpjeWdnZGs0c0lIWlRhV2R0WVZnZ0tUc0tDUWxtYkc5aGRDQm1SR1YwSUQwZ1pHOTBLQ0IyVTJsbmJXRllMQ0JTTVNBcElDb2dabUZqWlVScGNtVmpkR2x2YmpzS0NRbDJaV016SUhaSGNtRmtJRDBnYzJsbmJpZ2daa1JsZENBcElDb2dLQ0JrU0dSNGVTNTRJQ29nVWpFZ0t5QmtTR1I0ZVM1NUlDb2dVaklnS1RzS0NRbHlaWFIxY200Z2JtOXliV0ZzYVhwbEtDQmhZbk1vSUdaRVpYUWdLU0FxSUhOMWNtWmZibTl5YlNBdElIWkhjbUZrSUNrN0NnbDlDaU5sYm1ScFptQXNJRUZtSUQwZ1lDTnBaaUJPVlUxZlEweEpVRkJKVGtkZlVFeEJUa1ZUSUQ0Z01Bb0pkbVZqTkNCd2JHRnVaVHNLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElGVk9TVTlPWDBOTVNWQlFTVTVIWDFCTVFVNUZVenNnYVNBckt5QXBJSHNLQ1Fsd2JHRnVaU0E5SUdOc2FYQndhVzVuVUd4aGJtVnpXeUJwSUYwN0Nna0phV1lnS0NCa2IzUW9JSFpEYkdsd1VHOXphWFJwYjI0c0lIQnNZVzVsTG5oNWVpQXBJRDRnY0d4aGJtVXVkeUFwSUdScGMyTmhjbVE3Q2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvSkkybG1JRlZPU1U5T1gwTk1TVkJRU1U1SFgxQk1RVTVGVXlBOElFNVZUVjlEVEVsUVVFbE9SMTlRVEVGT1JWTUtDUWxpYjI5c0lHTnNhWEJ3WldRZ1BTQjBjblZsT3dvSkNTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NRbG1iM0lnS0NCcGJuUWdhU0E5SUZWT1NVOU9YME5NU1ZCUVNVNUhYMUJNUVU1RlV6c2dhU0E4SUU1VlRWOURURWxRVUVsT1IxOVFURUZPUlZNN0lHa2dLeXNnS1NCN0Nna0pDWEJzWVc1bElEMGdZMnhwY0hCcGJtZFFiR0Z1WlhOYklHa2dYVHNLQ1FrSlkyeHBjSEJsWkNBOUlDZ2daRzkwS0NCMlEyeHBjRkJ2YzJsMGFXOXVMQ0J3YkdGdVpTNTRlWG9nS1NBK0lIQnNZVzVsTG5jZ0tTQW1KaUJqYkdsd2NHVmtPd29KQ1gwS0NRa2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvSkNXbG1JQ2dnWTJ4cGNIQmxaQ0FwSUdScGMyTmhjbVE3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnUTJZZ1BTQmdJMmxtSUU1VlRWOURURWxRVUVsT1IxOVFURUZPUlZNZ1BpQXdDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RrTnNhWEJRYjNOcGRHbHZianNLQ1hWdWFXWnZjbTBnZG1Wak5DQmpiR2x3Y0dsdVoxQnNZVzVsYzFzZ1RsVk5YME5NU1ZCUVNVNUhYMUJNUVU1RlV5QmRPd29qWlc1a2FXWmdMQ0JNWmlBOUlHQWphV1lnVGxWTlgwTk1TVkJRU1U1SFgxQk1RVTVGVXlBK0lEQUtDWFpoY25scGJtY2dkbVZqTXlCMlEyeHBjRkJ2YzJsMGFXOXVPd29qWlc1a2FXWmdMQ0JTWmlBOUlHQWphV1lnVGxWTlgwTk1TVkJRU1U1SFgxQk1RVTVGVXlBK0lEQUtDWFpEYkdsd1VHOXphWFJwYjI0Z1BTQXRJRzEyVUc5emFYUnBiMjR1ZUhsNk93b2paVzVrYVdaZ0xDQlFaaUE5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBOUFRFOVNYMEZNVUVoQklDa0tDV1JwWm1aMWMyVkRiMnh2Y2lBcVBTQjJRMjlzYjNJN0NpTmxiR2xtSUdSbFptbHVaV1FvSUZWVFJWOURUMHhQVWlBcENnbGthV1ptZFhObFEyOXNiM0l1Y21kaUlDbzlJSFpEYjJ4dmNqc0tJMlZ1WkdsbVlDd2dTV1lnUFNCZ0kybG1JR1JsWm1sdVpXUW9JRlZUUlY5RFQweFBVbDlCVEZCSVFTQXBDZ2wyWVhKNWFXNW5JSFpsWXpRZ2RrTnZiRzl5T3dvalpXeHBaaUJrWldacGJtVmtLQ0JWVTBWZlEwOU1UMUlnS1FvSmRtRnllV2x1WnlCMlpXTXpJSFpEYjJ4dmNqc0tJMlZ1WkdsbVlDd2dSR1lnUFNCZ0kybG1JR1JsWm1sdVpXUW9JRlZUUlY5RFQweFBVbDlCVEZCSVFTQXBDZ2wyWVhKNWFXNW5JSFpsWXpRZ2RrTnZiRzl5T3dvalpXeHBaaUJrWldacGJtVmtLQ0JWVTBWZlEwOU1UMUlnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmU1U1VFZFRk9RMGxPUjE5RFQweFBVaUFwQ2dsMllYSjVhVzVuSUhabFl6TWdka052Ykc5eU93b2paVzVrYVdaZ0xDQkdaaUE5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBOUFRFOVNYMEZNVUVoQklDa0tDWFpEYjJ4dmNpQTlJSFpsWXpRb0lERXVNQ0FwT3dvalpXeHBaaUJrWldacGJtVmtLQ0JWVTBWZlEwOU1UMUlnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmU1U1VFZFRk9RMGxPUjE5RFQweFBVaUFwQ2dsMlEyOXNiM0lnUFNCMlpXTXpLQ0F4TGpBZ0tUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRMDlNVDFJS0NYWkRiMnh2Y2lBcVBTQmpiMnh2Y2pzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlNVNVRWRUZPUTBsT1IxOURUMHhQVWdvSmRrTnZiRzl5TG5oNWVpQXFQU0JwYm5OMFlXNWpaVU52Ykc5eUxuaDVlanNLSTJWdVpHbG1ZQ3dnVG1ZZ1BTQmdJMlJsWm1sdVpTQlFTU0F6TGpFME1UVTVNalkxTXpVNE9UYzVNd29qWkdWbWFXNWxJRkJKTWlBMkxqSTRNekU0TlRNd056RTNPVFU0TmdvalpHVm1hVzVsSUZCSlgwaEJURVlnTVM0MU56QTNPVFl6TWpZM09UUTRPVFkyQ2lOa1pXWnBibVVnVWtWRFNWQlNUME5CVEY5UVNTQXdMak14T0RNd09UZzROakU0TXpjNU1EY0tJMlJsWm1sdVpTQlNSVU5KVUZKUFEwRk1YMUJKTWlBd0xqRTFPVEUxTkRrME16QTVNVGc1TlRNMUNpTmtaV1pwYm1VZ1JWQlRTVXhQVGlBeFpTMDJDaU5wWm01a1pXWWdjMkYwZFhKaGRHVUtJMlJsWm1sdVpTQnpZWFIxY21GMFpTZ2dZU0FwSUdOc1lXMXdLQ0JoTENBd0xqQXNJREV1TUNBcENpTmxibVJwWmdvalpHVm1hVzVsSUhkb2FYUmxRMjl0Y0d4bGJXVnVkQ2dnWVNBcElDZ2dNUzR3SUMwZ2MyRjBkWEpoZEdVb0lHRWdLU0FwQ21ac2IyRjBJSEJ2ZHpJb0lHTnZibk4wSUdsdUlHWnNiMkYwSUhnZ0tTQjdJSEpsZEhWeWJpQjRLbmc3SUgwS1pteHZZWFFnY0c5M015Z2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2VDQXBJSHNnY21WMGRYSnVJSGdxZUNwNE95QjlDbVpzYjJGMElIQnZkelFvSUdOdmJuTjBJR2x1SUdac2IyRjBJSGdnS1NCN0lHWnNiMkYwSUhneUlEMGdlQ3A0T3lCeVpYUjFjbTRnZURJcWVESTdJSDBLWm14dllYUWdiV0Y0TXlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUIySUNrZ2V5QnlaWFIxY200Z2JXRjRLQ0J0WVhnb0lIWXVlQ3dnZGk1NUlDa3NJSFl1ZWlBcE95QjlDbVpzYjJGMElHRjJaWEpoWjJVb0lHTnZibk4wSUdsdUlIWmxZek1nWTI5c2IzSWdLU0I3SUhKbGRIVnliaUJrYjNRb0lHTnZiRzl5TENCMlpXTXpLQ0F3TGpNek16TWdLU0FwT3lCOUNtaHBaMmh3SUdac2IyRjBJSEpoYm1Rb0lHTnZibk4wSUdsdUlIWmxZeklnZFhZZ0tTQjdDZ2xqYjI1emRDQm9hV2RvY0NCbWJHOWhkQ0JoSUQwZ01USXVPVGc1T0N3Z1lpQTlJRGM0TGpJek15d2dZeUE5SURRek56VTRMalUwTlRNN0NnbG9hV2RvY0NCbWJHOWhkQ0JrZENBOUlHUnZkQ2dnZFhZdWVIa3NJSFpsWXpJb0lHRXNZaUFwSUNrc0lITnVJRDBnYlc5a0tDQmtkQ3dnVUVrZ0tUc0tDWEpsZEhWeWJpQm1jbUZqZENnZ2MybHVLQ0J6YmlBcElDb2dZeUFwT3dwOUNpTnBabVJsWmlCSVNVZElYMUJTUlVOSlUwbFBUZ29KWm14dllYUWdjSEpsWTJsemFXOXVVMkZtWlV4bGJtZDBhQ2dnZG1Wak15QjJJQ2tnZXlCeVpYUjFjbTRnYkdWdVozUm9LQ0IySUNrN0lIMEtJMlZzYzJVS0NXWnNiMkYwSUhCeVpXTnBjMmx2YmxOaFptVk1aVzVuZEdnb0lIWmxZek1nZGlBcElIc0tDUWxtYkc5aGRDQnRZWGhEYjIxd2IyNWxiblFnUFNCdFlYZ3pLQ0JoWW5Nb0lIWWdLU0FwT3dvSkNYSmxkSFZ5YmlCc1pXNW5kR2dvSUhZZ0x5QnRZWGhEYjIxd2IyNWxiblFnS1NBcUlHMWhlRU52YlhCdmJtVnVkRHNLQ1gwS0kyVnVaR2xtQ25OMGNuVmpkQ0JKYm1OcFpHVnVkRXhwWjJoMElIc0tDWFpsWXpNZ1kyOXNiM0k3Q2dsMlpXTXpJR1JwY21WamRHbHZianNLQ1dKdmIyd2dkbWx6YVdKc1pUc0tmVHNLYzNSeWRXTjBJRkpsWm14bFkzUmxaRXhwWjJoMElIc0tDWFpsWXpNZ1pHbHlaV04wUkdsbVpuVnpaVHNLQ1habFl6TWdaR2x5WldOMFUzQmxZM1ZzWVhJN0NnbDJaV016SUdsdVpHbHlaV04wUkdsbVpuVnpaVHNLQ1habFl6TWdhVzVrYVhKbFkzUlRjR1ZqZFd4aGNqc0tmVHNLYzNSeWRXTjBJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdld29KZG1Wak15QndiM05wZEdsdmJqc0tDWFpsWXpNZ2JtOXliV0ZzT3dvSmRtVmpNeUIyYVdWM1JHbHlPd29qYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkFvSmRtVmpNeUJqYkdWaGNtTnZZWFJPYjNKdFlXdzdDaU5sYm1ScFpncDlPd3AyWldNeklIUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2dhVzRnZG1Wak15QmthWElzSUdsdUlHMWhkRFFnYldGMGNtbDRJQ2tnZXdvSmNtVjBkWEp1SUc1dmNtMWhiR2w2WlNnZ0tDQnRZWFJ5YVhnZ0tpQjJaV00wS0NCa2FYSXNJREF1TUNBcElDa3VlSGw2SUNrN0NuMEtkbVZqTXlCcGJuWmxjbk5sVkhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCcGJpQjJaV016SUdScGNpd2dhVzRnYldGME5DQnRZWFJ5YVhnZ0tTQjdDZ2x5WlhSMWNtNGdibTl5YldGc2FYcGxLQ0FvSUhabFl6UW9JR1JwY2l3Z01DNHdJQ2tnS2lCdFlYUnlhWGdnS1M1NGVYb2dLVHNLZlFwdFlYUXpJSFJ5WVc1emNHOXpaVTFoZERNb0lHTnZibk4wSUdsdUlHMWhkRE1nYlNBcElIc0tDVzFoZERNZ2RHMXdPd29KZEcxd1d5QXdJRjBnUFNCMlpXTXpLQ0J0V3lBd0lGMHVlQ3dnYlZzZ01TQmRMbmdzSUcxYklESWdYUzU0SUNrN0NnbDBiWEJiSURFZ1hTQTlJSFpsWXpNb0lHMWJJREFnWFM1NUxDQnRXeUF4SUYwdWVTd2diVnNnTWlCZExua2dLVHNLQ1hSdGNGc2dNaUJkSUQwZ2RtVmpNeWdnYlZzZ01DQmRMbm9zSUcxYklERWdYUzU2TENCdFd5QXlJRjB1ZWlBcE93b0pjbVYwZFhKdUlIUnRjRHNLZlFwbWJHOWhkQ0JzYVc1bFlYSlViMUpsYkdGMGFYWmxUSFZ0YVc1aGJtTmxLQ0JqYjI1emRDQnBiaUIyWldNeklHTnZiRzl5SUNrZ2V3b0pkbVZqTXlCM1pXbG5hSFJ6SUQwZ2RtVmpNeWdnTUM0eU1USTJMQ0F3TGpjeE5USXNJREF1TURjeU1pQXBPd29KY21WMGRYSnVJR1J2ZENnZ2QyVnBaMmgwY3l3Z1kyOXNiM0l1Y21kaUlDazdDbjBLWW05dmJDQnBjMUJsY25Od1pXTjBhWFpsVFdGMGNtbDRLQ0J0WVhRMElHMGdLU0I3Q2dseVpYUjFjbTRnYlZzZ01pQmRXeUF6SUYwZ1BUMGdMU0F4TGpBN0NuMEtkbVZqTWlCbGNYVnBjbVZqZEZWMktDQnBiaUIyWldNeklHUnBjaUFwSUhzS0NXWnNiMkYwSUhVZ1BTQmhkR0Z1S0NCa2FYSXVlaXdnWkdseUxuZ2dLU0FxSUZKRlEwbFFVazlEUVV4ZlVFa3lJQ3NnTUM0MU93b0pabXh2WVhRZ2RpQTlJR0Z6YVc0b0lHTnNZVzF3S0NCa2FYSXVlU3dnTFNBeExqQXNJREV1TUNBcElDa2dLaUJTUlVOSlVGSlBRMEZNWDFCSklDc2dNQzQxT3dvSmNtVjBkWEp1SUhabFl6SW9JSFVzSUhZZ0tUc0tmV0FzSUVKbUlEMGdZQ05wWm1SbFppQkZUbFpOUVZCZlZGbFFSVjlEVlVKRlgxVldDZ2tqWkdWbWFXNWxJR04xWW1WVlZsOXRZWGhOYVhCTVpYWmxiQ0E0TGpBS0NTTmtaV1pwYm1VZ1kzVmlaVlZXWDIxcGJrMXBjRXhsZG1Wc0lEUXVNQW9KSTJSbFptbHVaU0JqZFdKbFZWWmZiV0Y0Vkdsc1pWTnBlbVVnTWpVMkxqQUtDU05rWldacGJtVWdZM1ZpWlZWV1gyMXBibFJwYkdWVGFYcGxJREUyTGpBS0NXWnNiMkYwSUdkbGRFWmhZMlVvSUhabFl6TWdaR2x5WldOMGFXOXVJQ2tnZXdvSkNYWmxZek1nWVdKelJHbHlaV04wYVc5dUlEMGdZV0p6S0NCa2FYSmxZM1JwYjI0Z0tUc0tDUWxtYkc5aGRDQm1ZV05sSUQwZ0xTQXhMakE3Q2drSmFXWWdLQ0JoWW5ORWFYSmxZM1JwYjI0dWVDQStJR0ZpYzBScGNtVmpkR2x2Ymk1NklDa2dld29KQ1FscFppQW9JR0ZpYzBScGNtVmpkR2x2Ymk1NElENGdZV0p6UkdseVpXTjBhVzl1TG5rZ0tRb0pDUWtKWm1GalpTQTlJR1JwY21WamRHbHZiaTU0SUQ0Z01DNHdJRDhnTUM0d0lEb2dNeTR3T3dvSkNRbGxiSE5sQ2drSkNRbG1ZV05sSUQwZ1pHbHlaV04wYVc5dUxua2dQaUF3TGpBZ1B5QXhMakFnT2lBMExqQTdDZ2tKZlNCbGJITmxJSHNLQ1FrSmFXWWdLQ0JoWW5ORWFYSmxZM1JwYjI0dWVpQStJR0ZpYzBScGNtVmpkR2x2Ymk1NUlDa0tDUWtKQ1daaFkyVWdQU0JrYVhKbFkzUnBiMjR1ZWlBK0lEQXVNQ0EvSURJdU1DQTZJRFV1TURzS0NRa0paV3h6WlFvSkNRa0pabUZqWlNBOUlHUnBjbVZqZEdsdmJpNTVJRDRnTUM0d0lEOGdNUzR3SURvZ05DNHdPd29KQ1gwS0NRbHlaWFIxY200Z1ptRmpaVHNLQ1gwS0NYWmxZeklnWjJWMFZWWW9JSFpsWXpNZ1pHbHlaV04wYVc5dUxDQm1iRzloZENCbVlXTmxJQ2tnZXdvSkNYWmxZeklnZFhZN0Nna0phV1lnS0NCbVlXTmxJRDA5SURBdU1DQXBJSHNLQ1FrSmRYWWdQU0IyWldNeUtDQmthWEpsWTNScGIyNHVlaXdnWkdseVpXTjBhVzl1TG5rZ0tTQXZJR0ZpY3lnZ1pHbHlaV04wYVc5dUxuZ2dLVHNLQ1FsOUlHVnNjMlVnYVdZZ0tDQm1ZV05sSUQwOUlERXVNQ0FwSUhzS0NRa0pkWFlnUFNCMlpXTXlLQ0F0SUdScGNtVmpkR2x2Ymk1NExDQXRJR1JwY21WamRHbHZiaTU2SUNrZ0x5QmhZbk1vSUdScGNtVmpkR2x2Ymk1NUlDazdDZ2tKZlNCbGJITmxJR2xtSUNnZ1ptRmpaU0E5UFNBeUxqQWdLU0I3Q2drSkNYVjJJRDBnZG1Wak1pZ2dMU0JrYVhKbFkzUnBiMjR1ZUN3Z1pHbHlaV04wYVc5dUxua2dLU0F2SUdGaWN5Z2daR2x5WldOMGFXOXVMbm9nS1RzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0JtWVdObElEMDlJRE11TUNBcElIc0tDUWtKZFhZZ1BTQjJaV015S0NBdElHUnBjbVZqZEdsdmJpNTZMQ0JrYVhKbFkzUnBiMjR1ZVNBcElDOGdZV0p6S0NCa2FYSmxZM1JwYjI0dWVDQXBPd29KQ1gwZ1pXeHpaU0JwWmlBb0lHWmhZMlVnUFQwZ05DNHdJQ2tnZXdvSkNRbDFkaUE5SUhabFl6SW9JQzBnWkdseVpXTjBhVzl1TG5nc0lHUnBjbVZqZEdsdmJpNTZJQ2tnTHlCaFluTW9JR1JwY21WamRHbHZiaTU1SUNrN0Nna0pmU0JsYkhObElIc0tDUWtKZFhZZ1BTQjJaV015S0NCa2FYSmxZM1JwYjI0dWVDd2daR2x5WldOMGFXOXVMbmtnS1NBdklHRmljeWdnWkdseVpXTjBhVzl1TG5vZ0tUc0tDUWw5Q2drSmNtVjBkWEp1SURBdU5TQXFJQ2dnZFhZZ0t5QXhMakFnS1RzS0NYMEtDWFpsWXpNZ1ltbHNhVzVsWVhKRGRXSmxWVllvSUhOaGJYQnNaWEl5UkNCbGJuWk5ZWEFzSUhabFl6TWdaR2x5WldOMGFXOXVMQ0JtYkc5aGRDQnRhWEJKYm5RZ0tTQjdDZ2tKWm14dllYUWdabUZqWlNBOUlHZGxkRVpoWTJVb0lHUnBjbVZqZEdsdmJpQXBPd29KQ1dac2IyRjBJR1pwYkhSbGNrbHVkQ0E5SUcxaGVDZ2dZM1ZpWlZWV1gyMXBiazFwY0V4bGRtVnNJQzBnYldsd1NXNTBMQ0F3TGpBZ0tUc0tDUWx0YVhCSmJuUWdQU0J0WVhnb0lHMXBjRWx1ZEN3Z1kzVmlaVlZXWDIxcGJrMXBjRXhsZG1Wc0lDazdDZ2tKWm14dllYUWdabUZqWlZOcGVtVWdQU0JsZUhBeUtDQnRhWEJKYm5RZ0tUc0tDUWxtYkc5aGRDQjBaWGhsYkZOcGVtVWdQU0F4TGpBZ0x5QW9JRE11TUNBcUlHTjFZbVZWVmw5dFlYaFVhV3hsVTJsNlpTQXBPd29KQ1habFl6SWdkWFlnUFNCblpYUlZWaWdnWkdseVpXTjBhVzl1TENCbVlXTmxJQ2tnS2lBb0lHWmhZMlZUYVhwbElDMGdNUzR3SUNrZ0t5QXdMalU3Q2drSmFXWWdLQ0JtWVdObElENGdNaTR3SUNrZ2V3b0pDUWwxZGk1NUlDczlJR1poWTJWVGFYcGxPd29KQ1FsbVlXTmxJQzA5SURNdU1Ec0tDUWw5Q2drSmRYWXVlQ0FyUFNCbVlXTmxJQ29nWm1GalpWTnBlbVU3Q2drSmFXWWdLQ0J0YVhCSmJuUWdQQ0JqZFdKbFZWWmZiV0Y0VFdsd1RHVjJaV3dnS1NCN0Nna0pDWFYyTG5rZ0t6MGdNaTR3SUNvZ1kzVmlaVlZXWDIxaGVGUnBiR1ZUYVhwbE93b0pDWDBLQ1FsMWRpNTVJQ3M5SUdacGJIUmxja2x1ZENBcUlESXVNQ0FxSUdOMVltVlZWbDl0YVc1VWFXeGxVMmw2WlRzS0NRbDFkaTU0SUNzOUlETXVNQ0FxSUcxaGVDZ2dNQzR3TENCamRXSmxWVlpmYldGNFZHbHNaVk5wZW1VZ0xTQXlMakFnS2lCbVlXTmxVMmw2WlNBcE93b0pDWFYySUNvOUlIUmxlR1ZzVTJsNlpUc0tDUWx5WlhSMWNtNGdkR1Y0ZEhWeVpUSkVLQ0JsYm5aTllYQXNJSFYySUNrdWNtZGlPd29KZlFvSkkyUmxabWx1WlNCeU1DQXhMakFLQ1NOa1pXWnBibVVnZGpBZ01DNHpNemtLQ1NOa1pXWnBibVVnYlRBZ0xTQXlMakFLQ1NOa1pXWnBibVVnY2pFZ01DNDRDZ2tqWkdWbWFXNWxJSFl4SURBdU1qYzJDZ2tqWkdWbWFXNWxJRzB4SUMwZ01TNHdDZ2tqWkdWbWFXNWxJSEkwSURBdU5Bb0pJMlJsWm1sdVpTQjJOQ0F3TGpBME5nb0pJMlJsWm1sdVpTQnROQ0F5TGpBS0NTTmtaV1pwYm1VZ2NqVWdNQzR6TURVS0NTTmtaV1pwYm1VZ2RqVWdNQzR3TVRZS0NTTmtaV1pwYm1VZ2JUVWdNeTR3Q2dralpHVm1hVzVsSUhJMklEQXVNakVLQ1NOa1pXWnBibVVnZGpZZ01DNHdNRE00Q2dralpHVm1hVzVsSUcwMklEUXVNQW9KWm14dllYUWdjbTkxWjJodVpYTnpWRzlOYVhBb0lHWnNiMkYwSUhKdmRXZG9ibVZ6Y3lBcElIc0tDUWxtYkc5aGRDQnRhWEFnUFNBd0xqQTdDZ2tKYVdZZ0tDQnliM1ZuYUc1bGMzTWdQajBnY2pFZ0tTQjdDZ2tKQ1cxcGNDQTlJQ2dnY2pBZ0xTQnliM1ZuYUc1bGMzTWdLU0FxSUNnZ2JURWdMU0J0TUNBcElDOGdLQ0J5TUNBdElISXhJQ2tnS3lCdE1Ec0tDUWw5SUdWc2MyVWdhV1lnS0NCeWIzVm5hRzVsYzNNZ1BqMGdjalFnS1NCN0Nna0pDVzFwY0NBOUlDZ2djakVnTFNCeWIzVm5hRzVsYzNNZ0tTQXFJQ2dnYlRRZ0xTQnRNU0FwSUM4Z0tDQnlNU0F0SUhJMElDa2dLeUJ0TVRzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0J5YjNWbmFHNWxjM01nUGowZ2NqVWdLU0I3Q2drSkNXMXBjQ0E5SUNnZ2NqUWdMU0J5YjNWbmFHNWxjM01nS1NBcUlDZ2diVFVnTFNCdE5DQXBJQzhnS0NCeU5DQXRJSEkxSUNrZ0t5QnRORHNLQ1FsOUlHVnNjMlVnYVdZZ0tDQnliM1ZuYUc1bGMzTWdQajBnY2pZZ0tTQjdDZ2tKQ1cxcGNDQTlJQ2dnY2pVZ0xTQnliM1ZuYUc1bGMzTWdLU0FxSUNnZ2JUWWdMU0J0TlNBcElDOGdLQ0J5TlNBdElISTJJQ2tnS3lCdE5Uc0tDUWw5SUdWc2MyVWdld29KQ1FsdGFYQWdQU0F0SURJdU1DQXFJR3h2WnpJb0lERXVNVFlnS2lCeWIzVm5hRzVsYzNNZ0tUc0pDWDBLQ1FseVpYUjFjbTRnYldsd093b0pmUW9KZG1Wak5DQjBaWGgwZFhKbFEzVmlaVlZXS0NCellXMXdiR1Z5TWtRZ1pXNTJUV0Z3TENCMlpXTXpJSE5oYlhCc1pVUnBjaXdnWm14dllYUWdjbTkxWjJodVpYTnpJQ2tnZXdvSkNXWnNiMkYwSUcxcGNDQTlJR05zWVcxd0tDQnliM1ZuYUc1bGMzTlViMDFwY0NnZ2NtOTFaMmh1WlhOeklDa3NJRzB3TENCamRXSmxWVlpmYldGNFRXbHdUR1YyWld3Z0tUc0tDUWxtYkc5aGRDQnRhWEJHSUQwZ1puSmhZM1FvSUcxcGNDQXBPd29KQ1dac2IyRjBJRzFwY0VsdWRDQTlJR1pzYjI5eUtDQnRhWEFnS1RzS0NRbDJaV016SUdOdmJHOXlNQ0E5SUdKcGJHbHVaV0Z5UTNWaVpWVldLQ0JsYm5aTllYQXNJSE5oYlhCc1pVUnBjaXdnYldsd1NXNTBJQ2s3Q2drSmFXWWdLQ0J0YVhCR0lEMDlJREF1TUNBcElIc0tDUWtKY21WMGRYSnVJSFpsWXpRb0lHTnZiRzl5TUN3Z01TNHdJQ2s3Q2drSmZTQmxiSE5sSUhzS0NRa0pkbVZqTXlCamIyeHZjakVnUFNCaWFXeHBibVZoY2tOMVltVlZWaWdnWlc1MlRXRndMQ0J6WVcxd2JHVkVhWElzSUcxcGNFbHVkQ0FySURFdU1DQXBPd29KQ1FseVpYUjFjbTRnZG1Wak5DZ2diV2w0S0NCamIyeHZjakFzSUdOdmJHOXlNU3dnYldsd1JpQXBMQ0F4TGpBZ0tUc0tDUWw5Q2dsOUNpTmxibVJwWm1Bc0lIcG1JRDBnWUhabFl6TWdkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd2dQU0J2WW1wbFkzUk9iM0p0WVd3N0NpTnBabVJsWmlCVlUwVmZTVTVUVkVGT1EwbE9Sd29KYldGME15QnRJRDBnYldGME15Z2dhVzV6ZEdGdVkyVk5ZWFJ5YVhnZ0tUc0tDWFJ5WVc1elptOXliV1ZrVG05eWJXRnNJQzg5SUhabFl6TW9JR1J2ZENnZ2JWc2dNQ0JkTENCdFd5QXdJRjBnS1N3Z1pHOTBLQ0J0V3lBeElGMHNJRzFiSURFZ1hTQXBMQ0JrYjNRb0lHMWJJRElnWFN3Z2JWc2dNaUJkSUNrZ0tUc0tDWFJ5WVc1elptOXliV1ZrVG05eWJXRnNJRDBnYlNBcUlIUnlZVzV6Wm05eWJXVmtUbTl5YldGc093b2paVzVrYVdZS2RISmhibk5tYjNKdFpXUk9iM0p0WVd3Z1BTQnViM0p0WVd4TllYUnlhWGdnS2lCMGNtRnVjMlp2Y20xbFpFNXZjbTFoYkRzS0kybG1aR1ZtSUVaTVNWQmZVMGxFUlVRS0NYUnlZVzV6Wm05eWJXVmtUbTl5YldGc0lEMGdMU0IwY21GdWMyWnZjbTFsWkU1dmNtMWhiRHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVkVGT1IwVk9WQW9KZG1Wak15QjBjbUZ1YzJadmNtMWxaRlJoYm1kbGJuUWdQU0FvSUcxdlpHVnNWbWxsZDAxaGRISnBlQ0FxSUhabFl6UW9JRzlpYW1WamRGUmhibWRsYm5Rc0lEQXVNQ0FwSUNrdWVIbDZPd29KSTJsbVpHVm1JRVpNU1ZCZlUwbEVSVVFLQ1FsMGNtRnVjMlp2Y20xbFpGUmhibWRsYm5RZ1BTQXRJSFJ5WVc1elptOXliV1ZrVkdGdVoyVnVkRHNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JWWmlBOUlHQWphV1prWldZZ1ZWTkZYMFJKVTFCTVFVTkZUVVZPVkUxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdaR2x6Y0d4aFkyVnRaVzUwVFdGd093b0pkVzVwWm05eWJTQm1iRzloZENCa2FYTndiR0ZqWlcxbGJuUlRZMkZzWlRzS0NYVnVhV1p2Y20wZ1pteHZZWFFnWkdsemNHeGhZMlZ0Wlc1MFFtbGhjenNLSTJWdVpHbG1ZQ3dnVDJZZ1BTQmdJMmxtWkdWbUlGVlRSVjlFU1ZOUVRFRkRSVTFGVGxSTlFWQUtDWFJ5WVc1elptOXliV1ZrSUNzOUlHNXZjbTFoYkdsNlpTZ2diMkpxWldOMFRtOXliV0ZzSUNrZ0tpQW9JSFJsZUhSMWNtVXlSQ2dnWkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0IyVlhZZ0tTNTRJQ29nWkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnS3lCa2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUNrN0NpTmxibVJwWm1Bc0lFaG1JRDBnWUNOcFptUmxaaUJWVTBWZlJVMUpVMU5KVmtWTlFWQUtDWFpsWXpRZ1pXMXBjM05wZG1WRGIyeHZjaUE5SUhSbGVIUjFjbVV5UkNnZ1pXMXBjM05wZG1WTllYQXNJSFpWZGlBcE93b0paVzFwYzNOcGRtVkRiMnh2Y2k1eVoySWdQU0JsYldsemMybDJaVTFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JR1Z0YVhOemFYWmxRMjlzYjNJZ0tTNXlaMkk3Q2dsMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVWdLajBnWlcxcGMzTnBkbVZEYjJ4dmNpNXlaMkk3Q2lObGJtUnBabUFzSUd0bUlEMGdZQ05wWm1SbFppQlZVMFZmUlUxSlUxTkpWa1ZOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHVnRhWE56YVhabFRXRndPd29qWlc1a2FXWmdMQ0JIWmlBOUlDSm5iRjlHY21GblEyOXNiM0lnUFNCc2FXNWxZWEpVYjA5MWRIQjFkRlJsZUdWc0tDQm5iRjlHY21GblEyOXNiM0lnS1RzaUxDQldaaUE5SUdCMlpXTTBJRXhwYm1WaGNsUnZUR2x1WldGeUtDQnBiaUIyWldNMElIWmhiSFZsSUNrZ2V3b0pjbVYwZFhKdUlIWmhiSFZsT3dwOUNuWmxZelFnYzFKSFFsUnZUR2x1WldGeUtDQnBiaUIyWldNMElIWmhiSFZsSUNrZ2V3b0pjbVYwZFhKdUlIWmxZelFvSUcxcGVDZ2djRzkzS0NCMllXeDFaUzV5WjJJZ0tpQXdMamswTnpnMk56STVPRFlnS3lCMlpXTXpLQ0F3TGpBMU1qRXpNamN3TVRRZ0tTd2dkbVZqTXlnZ01pNDBJQ2tnS1N3Z2RtRnNkV1V1Y21kaUlDb2dNQzR3Tnpjek9Ua3pPREE0TENCMlpXTXpLQ0JzWlhOelZHaGhia1Z4ZFdGc0tDQjJZV3gxWlM1eVoySXNJSFpsWXpNb0lEQXVNRFF3TkRVZ0tTQXBJQ2tnS1N3Z2RtRnNkV1V1WVNBcE93cDlDblpsWXpRZ1RHbHVaV0Z5Vkc5elVrZENLQ0JwYmlCMlpXTTBJSFpoYkhWbElDa2dld29KY21WMGRYSnVJSFpsWXpRb0lHMXBlQ2dnY0c5M0tDQjJZV3gxWlM1eVoySXNJSFpsWXpNb0lEQXVOREUyTmpZZ0tTQXBJQ29nTVM0d05UVWdMU0IyWldNektDQXdMakExTlNBcExDQjJZV3gxWlM1eVoySWdLaUF4TWk0NU1pd2dkbVZqTXlnZ2JHVnpjMVJvWVc1RmNYVmhiQ2dnZG1Gc2RXVXVjbWRpTENCMlpXTXpLQ0F3TGpBd016RXpNRGdnS1NBcElDa2dLU3dnZG1Gc2RXVXVZU0FwT3dwOVlDd2dWMllnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUbFpOUVZBS0NTTnBabVJsWmlCRlRsWmZWMDlTVEVSUVQxTUtDUWwyWldNeklHTmhiV1Z5WVZSdlJuSmhaenNLQ1FscFppQW9JR2x6VDNKMGFHOW5jbUZ3YUdsaklDa2dld29KQ1FsallXMWxjbUZVYjBaeVlXY2dQU0J1YjNKdFlXeHBlbVVvSUhabFl6TW9JQzBnZG1sbGQwMWhkSEpwZUZzZ01DQmRXeUF5SUYwc0lDMGdkbWxsZDAxaGRISnBlRnNnTVNCZFd5QXlJRjBzSUMwZ2RtbGxkMDFoZEhKcGVGc2dNaUJkV3lBeUlGMGdLU0FwT3dvSkNYMGdaV3h6WlNCN0Nna0pDV05oYldWeVlWUnZSbkpoWnlBOUlHNXZjbTFoYkdsNlpTZ2dkbGR2Y214a1VHOXphWFJwYjI0Z0xTQmpZVzFsY21GUWIzTnBkR2x2YmlBcE93b0pDWDBLQ1FsMlpXTXpJSGR2Y214a1RtOXliV0ZzSUQwZ2FXNTJaWEp6WlZSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2JtOXliV0ZzTENCMmFXVjNUV0YwY21sNElDazdDZ2tKSTJsbVpHVm1JRVZPVmsxQlVGOU5UMFJGWDFKRlJreEZRMVJKVDA0S0NRa0pkbVZqTXlCeVpXWnNaV04wVm1WaklEMGdjbVZtYkdWamRDZ2dZMkZ0WlhKaFZHOUdjbUZuTENCM2IzSnNaRTV2Y20xaGJDQXBPd29KQ1NObGJITmxDZ2tKQ1habFl6TWdjbVZtYkdWamRGWmxZeUE5SUhKbFpuSmhZM1FvSUdOaGJXVnlZVlJ2Um5KaFp5d2dkMjl5YkdST2IzSnRZV3dzSUhKbFpuSmhZM1JwYjI1U1lYUnBieUFwT3dvSkNTTmxibVJwWmdvSkkyVnNjMlVLQ1FsMlpXTXpJSEpsWm14bFkzUldaV01nUFNCMlVtVm1iR1ZqZERzS0NTTmxibVJwWmdvSkkybG1aR1ZtSUVWT1ZrMUJVRjlVV1ZCRlgwTlZRa1VLQ1FsMlpXTTBJR1Z1ZGtOdmJHOXlJRDBnZEdWNGRIVnlaVU4xWW1Vb0lHVnVkazFoY0N3Z2RtVmpNeWdnWm14cGNFVnVkazFoY0NBcUlISmxabXhsWTNSV1pXTXVlQ3dnY21WbWJHVmpkRlpsWXk1NWVpQXBJQ2s3Q2drSlpXNTJRMjlzYjNJZ1BTQmxiblpOWVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0JsYm5aRGIyeHZjaUFwT3dvSkkyVnNhV1lnWkdWbWFXNWxaQ2dnUlU1V1RVRlFYMVJaVUVWZlExVkNSVjlWVmlBcENna0pkbVZqTkNCbGJuWkRiMnh2Y2lBOUlIUmxlSFIxY21WRGRXSmxWVllvSUdWdWRrMWhjQ3dnY21WbWJHVmpkRlpsWXl3Z01DNHdJQ2s3Q2dralpXeHpaUW9KQ1habFl6UWdaVzUyUTI5c2IzSWdQU0IyWldNMEtDQXdMakFnS1RzS0NTTmxibVJwWmdvSkkybG1aR1ZtSUVWT1ZrMUJVRjlDVEVWT1JFbE9SMTlOVlV4VVNWQk1XUW9KQ1c5MWRHZHZhVzVuVEdsbmFIUWdQU0J0YVhnb0lHOTFkR2R2YVc1blRHbG5hSFFzSUc5MWRHZHZhVzVuVEdsbmFIUWdLaUJsYm5aRGIyeHZjaTU0ZVhvc0lITndaV04xYkdGeVUzUnlaVzVuZEdnZ0tpQnlaV1pzWldOMGFYWnBkSGtnS1RzS0NTTmxiR2xtSUdSbFptbHVaV1FvSUVWT1ZrMUJVRjlDVEVWT1JFbE9SMTlOU1ZnZ0tRb0pDVzkxZEdkdmFXNW5UR2xuYUhRZ1BTQnRhWGdvSUc5MWRHZHZhVzVuVEdsbmFIUXNJR1Z1ZGtOdmJHOXlMbmg1ZWl3Z2MzQmxZM1ZzWVhKVGRISmxibWQwYUNBcUlISmxabXhsWTNScGRtbDBlU0FwT3dvSkkyVnNhV1lnWkdWbWFXNWxaQ2dnUlU1V1RVRlFYMEpNUlU1RVNVNUhYMEZFUkNBcENna0piM1YwWjI5cGJtZE1hV2RvZENBclBTQmxiblpEYjJ4dmNpNTRlWG9nS2lCemNHVmpkV3hoY2xOMGNtVnVaM1JvSUNvZ2NtVm1iR1ZqZEdsMmFYUjVPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJSEZtSUQwZ1lDTnBabVJsWmlCVlUwVmZSVTVXVFVGUUNnbDFibWxtYjNKdElHWnNiMkYwSUdWdWRrMWhjRWx1ZEdWdWMybDBlVHNLQ1hWdWFXWnZjbTBnWm14dllYUWdabXhwY0VWdWRrMWhjRHNLQ1NOcFptUmxaaUJGVGxaTlFWQmZWRmxRUlY5RFZVSkZDZ2tKZFc1cFptOXliU0J6WVcxd2JHVnlRM1ZpWlNCbGJuWk5ZWEE3Q2dralpXeHpaUW9KQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdWdWRrMWhjRHNLQ1NObGJtUnBaZ29KQ2lObGJtUnBabUFzSUZobUlEMGdZQ05wWm1SbFppQlZVMFZmUlU1V1RVRlFDZ2wxYm1sbWIzSnRJR1pzYjJGMElISmxabXhsWTNScGRtbDBlVHNLQ1NOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUWxWTlVFMUJVQ0FwSUh4OElHUmxabWx1WldRb0lGVlRSVjlPVDFKTlFVeE5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlFTRTlPUnlBcENna0pJMlJsWm1sdVpTQkZUbFpmVjA5U1RFUlFUMU1LQ1NObGJtUnBaZ29KSTJsbVpHVm1JRVZPVmw5WFQxSk1SRkJQVXdvSkNYWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUlFiM05wZEdsdmJqc0tDUWwxYm1sbWIzSnRJR1pzYjJGMElISmxabkpoWTNScGIyNVNZWFJwYnpzS0NTTmxiSE5sQ2drSmRtRnllV2x1WnlCMlpXTXpJSFpTWldac1pXTjBPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRXBtSUQwZ1lDTnBabVJsWmlCVlUwVmZSVTVXVFVGUUNna2phV1lnWkdWbWFXNWxaQ2dnVlZORlgwSlZUVkJOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlRrOVNUVUZNVFVGUUlDa2dmSHhrWldacGJtVmtLQ0JRU0U5T1J5QXBDZ2tKSTJSbFptbHVaU0JGVGxaZlYwOVNURVJRVDFNS0NTTmxibVJwWmdvSkkybG1aR1ZtSUVWT1ZsOVhUMUpNUkZCUFV3b0pDUW9KQ1haaGNubHBibWNnZG1Wak15QjJWMjl5YkdSUWIzTnBkR2x2YmpzS0NTTmxiSE5sQ2drSmRtRnllV2x1WnlCMlpXTXpJSFpTWldac1pXTjBPd29KQ1hWdWFXWnZjbTBnWm14dllYUWdjbVZtY21GamRHbHZibEpoZEdsdk93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lGbG1JRDBnWUNOcFptUmxaaUJWVTBWZlJVNVdUVUZRQ2dramFXWmtaV1lnUlU1V1gxZFBVa3hFVUU5VENna0pkbGR2Y214a1VHOXphWFJwYjI0Z1BTQjNiM0pzWkZCdmMybDBhVzl1TG5oNWVqc0tDU05sYkhObENna0pkbVZqTXlCallXMWxjbUZVYjFabGNuUmxlRHNLQ1FscFppQW9JR2x6VDNKMGFHOW5jbUZ3YUdsaklDa2dld29KQ1FsallXMWxjbUZVYjFabGNuUmxlQ0E5SUc1dmNtMWhiR2w2WlNnZ2RtVmpNeWdnTFNCMmFXVjNUV0YwY21sNFd5QXdJRjFiSURJZ1hTd2dMU0IyYVdWM1RXRjBjbWw0V3lBeElGMWJJRElnWFN3Z0xTQjJhV1YzVFdGMGNtbDRXeUF5SUYxYklESWdYU0FwSUNrN0Nna0pmU0JsYkhObElIc0tDUWtKWTJGdFpYSmhWRzlXWlhKMFpYZ2dQU0J1YjNKdFlXeHBlbVVvSUhkdmNteGtVRzl6YVhScGIyNHVlSGw2SUMwZ1kyRnRaWEpoVUc5emFYUnBiMjRnS1RzS0NRbDlDZ2tKZG1Wak15QjNiM0pzWkU1dmNtMWhiQ0E5SUdsdWRtVnljMlZVY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUhSeVlXNXpabTl5YldWa1RtOXliV0ZzTENCMmFXVjNUV0YwY21sNElDazdDZ2tKSTJsbVpHVm1JRVZPVmsxQlVGOU5UMFJGWDFKRlJreEZRMVJKVDA0S0NRa0pkbEpsWm14bFkzUWdQU0J5Wldac1pXTjBLQ0JqWVcxbGNtRlViMVpsY25SbGVDd2dkMjl5YkdST2IzSnRZV3dnS1RzS0NRa2paV3h6WlFvSkNRbDJVbVZtYkdWamRDQTlJSEpsWm5KaFkzUW9JR05oYldWeVlWUnZWbVZ5ZEdWNExDQjNiM0pzWkU1dmNtMWhiQ3dnY21WbWNtRmpkR2x2YmxKaGRHbHZJQ2s3Q2drSkkyVnVaR2xtQ2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnV21ZZ1BTQmdJMmxtWkdWbUlGVlRSVjlHVDBjS0NYWkdiMmRFWlhCMGFDQTlJQzBnYlhaUWIzTnBkR2x2Ymk1Nk93b2paVzVrYVdaZ0xDQWtaaUE5SUdBamFXWmtaV1lnVlZORlgwWlBSd29KZG1GeWVXbHVaeUJtYkc5aGRDQjJSbTluUkdWd2RHZzdDaU5sYm1ScFptQXNJR3BtSUQwZ1lDTnBabVJsWmlCVlUwVmZSazlIQ2dramFXWmtaV1lnUms5SFgwVllVRElLQ1FsbWJHOWhkQ0JtYjJkR1lXTjBiM0lnUFNBeExqQWdMU0JsZUhBb0lDMGdabTluUkdWdWMybDBlU0FxSUdadlowUmxibk5wZEhrZ0tpQjJSbTluUkdWd2RHZ2dLaUIyUm05blJHVndkR2dnS1RzS0NTTmxiSE5sQ2drSlpteHZZWFFnWm05blJtRmpkRzl5SUQwZ2MyMXZiM1JvYzNSbGNDZ2dabTluVG1WaGNpd2dabTluUm1GeUxDQjJSbTluUkdWd2RHZ2dLVHNLQ1NObGJtUnBaZ29KWjJ4ZlJuSmhaME52Ykc5eUxuSm5ZaUE5SUcxcGVDZ2daMnhmUm5KaFowTnZiRzl5TG5Kbllpd2dabTluUTI5c2IzSXNJR1p2WjBaaFkzUnZjaUFwT3dvalpXNWthV1pnTENCUlppQTlJR0FqYVdaa1pXWWdWVk5GWDBaUFJ3b0pkVzVwWm05eWJTQjJaV016SUdadlowTnZiRzl5T3dvSmRtRnllV2x1WnlCbWJHOWhkQ0IyUm05blJHVndkR2c3Q2dramFXWmtaV1lnUms5SFgwVllVRElLQ1FsMWJtbG1iM0p0SUdac2IyRjBJR1p2WjBSbGJuTnBkSGs3Q2dralpXeHpaUW9KQ1hWdWFXWnZjbTBnWm14dllYUWdabTluVG1WaGNqc0tDUWwxYm1sbWIzSnRJR1pzYjJGMElHWnZaMFpoY2pzS0NTTmxibVJwWmdvalpXNWthV1pnTENCTFppQTlJR0FqYVdaa1pXWWdWVk5GWDBkU1FVUkpSVTVVVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQm5jbUZrYVdWdWRFMWhjRHNLSTJWdVpHbG1DblpsWXpNZ1oyVjBSM0poWkdsbGJuUkpjbkpoWkdsaGJtTmxLQ0IyWldNeklHNXZjbTFoYkN3Z2RtVmpNeUJzYVdkb2RFUnBjbVZqZEdsdmJpQXBJSHNLQ1dac2IyRjBJR1J2ZEU1TUlEMGdaRzkwS0NCdWIzSnRZV3dzSUd4cFoyaDBSR2x5WldOMGFXOXVJQ2s3Q2dsMlpXTXlJR052YjNKa0lEMGdkbVZqTWlnZ1pHOTBUa3dnS2lBd0xqVWdLeUF3TGpVc0lEQXVNQ0FwT3dvSkkybG1aR1ZtSUZWVFJWOUhVa0ZFU1VWT1ZFMUJVQW9KQ1hKbGRIVnliaUIyWldNektDQjBaWGgwZFhKbE1rUW9JR2R5WVdScFpXNTBUV0Z3TENCamIyOXlaQ0FwTG5JZ0tUc0tDU05sYkhObENna0pjbVYwZFhKdUlDZ2dZMjl2Y21RdWVDQThJREF1TnlBcElEOGdkbVZqTXlnZ01DNDNJQ2tnT2lCMlpXTXpLQ0F4TGpBZ0tUc0tDU05sYm1ScFpncDlZQ3dnWlhBZ1BTQmdJMmxtWkdWbUlGVlRSVjlNU1VkSVZFMUJVQW9KZG1Wak5DQnNhV2RvZEUxaGNGUmxlR1ZzSUQwZ2RHVjRkSFZ5WlRKRUtDQnNhV2RvZEUxaGNDd2dkbFYyTWlBcE93b0pkbVZqTXlCc2FXZG9kRTFoY0VseWNtRmthV0Z1WTJVZ1BTQnNhV2RvZEUxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUd4cFoyaDBUV0Z3VkdWNFpXd2dLUzV5WjJJZ0tpQnNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVUc0tDU05wWm01a1pXWWdVRWhaVTBsRFFVeE1XVjlEVDFKU1JVTlVYMHhKUjBoVVV3b0pDV3hwWjJoMFRXRndTWEp5WVdScFlXNWpaU0FxUFNCUVNUc0tDU05sYm1ScFpnb0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNzOUlHeHBaMmgwVFdGd1NYSnlZV1JwWVc1alpUc0tJMlZ1WkdsbVlDd2dkSEFnUFNCZ0kybG1aR1ZtSUZWVFJWOU1TVWRJVkUxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdiR2xuYUhSTllYQTdDZ2wxYm1sbWIzSnRJR1pzYjJGMElHeHBaMmgwVFdGd1NXNTBaVzV6YVhSNU93b2paVzVrYVdaZ0xDQnVjQ0E5SUdCMlpXTXpJR1JwWm1aMWMyVWdQU0IyWldNektDQXhMakFnS1RzS1IyVnZiV1YwY21salEyOXVkR1Y0ZENCblpXOXRaWFJ5ZVRzS1oyVnZiV1YwY25rdWNHOXphWFJwYjI0Z1BTQnRkbEJ2YzJsMGFXOXVMbmg1ZWpzS1oyVnZiV1YwY25rdWJtOXliV0ZzSUQwZ2JtOXliV0ZzYVhwbEtDQjBjbUZ1YzJadmNtMWxaRTV2Y20xaGJDQXBPd3BuWlc5dFpYUnllUzUyYVdWM1JHbHlJRDBnS0NCcGMwOXlkR2h2WjNKaGNHaHBZeUFwSUQ4Z2RtVmpNeWdnTUN3Z01Dd2dNU0FwSURvZ2JtOXliV0ZzYVhwbEtDQXRiWFpRYjNOcGRHbHZiaTU0ZVhvZ0tUc0tSMlZ2YldWMGNtbGpRMjl1ZEdWNGRDQmlZV05yUjJWdmJXVjBjbms3Q21KaFkydEhaVzl0WlhSeWVTNXdiM05wZEdsdmJpQTlJR2RsYjIxbGRISjVMbkJ2YzJsMGFXOXVPd3BpWVdOclIyVnZiV1YwY25rdWJtOXliV0ZzSUQwZ0xXZGxiMjFsZEhKNUxtNXZjbTFoYkRzS1ltRmphMGRsYjIxbGRISjVMblpwWlhkRWFYSWdQU0JuWlc5dFpYUnllUzUyYVdWM1JHbHlPd3AyVEdsbmFIUkdjbTl1ZENBOUlIWmxZek1vSURBdU1DQXBPd3AyU1c1a2FYSmxZM1JHY205dWRDQTlJSFpsWXpNb0lEQXVNQ0FwT3dvamFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNnbDJUR2xuYUhSQ1lXTnJJRDBnZG1Wak15Z2dNQzR3SUNrN0NnbDJTVzVrYVhKbFkzUkNZV05ySUQwZ2RtVmpNeWdnTUM0d0lDazdDaU5sYm1ScFpncEpibU5wWkdWdWRFeHBaMmgwSUdScGNtVmpkRXhwWjJoME93cG1iRzloZENCa2IzUk9URHNLZG1Wak15QmthWEpsWTNSTWFXZG9kRU52Ykc5eVgwUnBabVoxYzJVN0NuWkpibVJwY21WamRFWnliMjUwSUNzOUlHZGxkRUZ0WW1sbGJuUk1hV2RvZEVseWNtRmthV0Z1WTJVb0lHRnRZbWxsYm5STWFXZG9kRU52Ykc5eUlDazdDblpKYm1ScGNtVmpkRVp5YjI1MElDczlJR2RsZEV4cFoyaDBVSEp2WW1WSmNuSmhaR2xoYm1ObEtDQnNhV2RvZEZCeWIySmxMQ0JuWlc5dFpYUnllUzV1YjNKdFlXd2dLVHNLSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSmRrbHVaR2x5WldOMFFtRmpheUFyUFNCblpYUkJiV0pwWlc1MFRHbG5hSFJKY25KaFpHbGhibU5sS0NCaGJXSnBaVzUwVEdsbmFIUkRiMnh2Y2lBcE93b0pka2x1WkdseVpXTjBRbUZqYXlBclBTQm5aWFJNYVdkb2RGQnliMkpsU1hKeVlXUnBZVzVqWlNnZ2JHbG5hSFJRY205aVpTd2dZbUZqYTBkbGIyMWxkSEo1TG01dmNtMWhiQ0FwT3dvalpXNWthV1lLSTJsbUlFNVZUVjlRVDBsT1ZGOU1TVWRJVkZNZ1BpQXdDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZVRTlKVGxSZlRFbEhTRlJUT3lCcElDc3JJQ2tnZXdvSkNXZGxkRkJ2YVc1MFRHbG5hSFJKYm1adktDQndiMmx1ZEV4cFoyaDBjMXNnYVNCZExDQm5aVzl0WlhSeWVTd2daR2x5WldOMFRHbG5hSFFnS1RzS0NRbGtiM1JPVENBOUlHUnZkQ2dnWjJWdmJXVjBjbmt1Ym05eWJXRnNMQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0Z0tUc0tDUWxrYVhKbFkzUk1hV2RvZEVOdmJHOXlYMFJwWm1aMWMyVWdQU0JrYVhKbFkzUk1hV2RvZEM1amIyeHZjanNLQ1FsMlRHbG5hSFJHY205dWRDQXJQU0J6WVhSMWNtRjBaU2dnWkc5MFRrd2dLU0FxSUdScGNtVmpkRXhwWjJoMFEyOXNiM0pmUkdsbVpuVnpaVHNLQ1FramFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNna0pDWFpNYVdkb2RFSmhZMnNnS3owZ2MyRjBkWEpoZEdVb0lDMGdaRzkwVGt3Z0tTQXFJR1JwY21WamRFeHBaMmgwUTI5c2IzSmZSR2xtWm5WelpUc0tDUWtqWlc1a2FXWUtDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDaU5sYm1ScFpnb2phV1lnVGxWTlgxTlFUMVJmVEVsSFNGUlRJRDRnTUFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDFOUVQxUmZURWxIU0ZSVE95QnBJQ3NySUNrZ2V3b0pDV2RsZEZOd2IzUk1hV2RvZEVsdVptOG9JSE53YjNSTWFXZG9kSE5iSUdrZ1hTd2daMlZ2YldWMGNua3NJR1JwY21WamRFeHBaMmgwSUNrN0Nna0paRzkwVGt3Z1BTQmtiM1FvSUdkbGIyMWxkSEo1TG01dmNtMWhiQ3dnWkdseVpXTjBUR2xuYUhRdVpHbHlaV04wYVc5dUlDazdDZ2tKWkdseVpXTjBUR2xuYUhSRGIyeHZjbDlFYVdabWRYTmxJRDBnWkdseVpXTjBUR2xuYUhRdVkyOXNiM0k3Q2drSmRreHBaMmgwUm5KdmJuUWdLejBnYzJGMGRYSmhkR1VvSUdSdmRFNU1JQ2tnS2lCa2FYSmxZM1JNYVdkb2RFTnZiRzl5WDBScFptWjFjMlU3Q2drSkkybG1aR1ZtSUVSUFZVSk1SVjlUU1VSRlJBb0pDUWwyVEdsbmFIUkNZV05ySUNzOUlITmhkSFZ5WVhSbEtDQXRJR1J2ZEU1TUlDa2dLaUJrYVhKbFkzUk1hV2RvZEVOdmJHOXlYMFJwWm1aMWMyVTdDZ2tKSTJWdVpHbG1DZ2w5Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQW9qWlc1a2FXWUtJMmxtSUU1VlRWOUVTVkpmVEVsSFNGUlRJRDRnTUFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDBSSlVsOU1TVWRJVkZNN0lHa2dLeXNnS1NCN0Nna0paMlYwUkdseVpXTjBhVzl1WVd4TWFXZG9kRWx1Wm04b0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhSeld5QnBJRjBzSUdkbGIyMWxkSEo1TENCa2FYSmxZM1JNYVdkb2RDQXBPd29KQ1dSdmRFNU1JRDBnWkc5MEtDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHUnBjbVZqZEV4cFoyaDBMbVJwY21WamRHbHZiaUFwT3dvSkNXUnBjbVZqZEV4cFoyaDBRMjlzYjNKZlJHbG1ablZ6WlNBOUlHUnBjbVZqZEV4cFoyaDBMbU52Ykc5eU93b0pDWFpNYVdkb2RFWnliMjUwSUNzOUlITmhkSFZ5WVhSbEtDQmtiM1JPVENBcElDb2daR2x5WldOMFRHbG5hSFJEYjJ4dmNsOUVhV1ptZFhObE93b0pDU05wWm1SbFppQkVUMVZDVEVWZlUwbEVSVVFLQ1FrSmRreHBaMmgwUW1GamF5QXJQU0J6WVhSMWNtRjBaU2dnTFNCa2IzUk9UQ0FwSUNvZ1pHbHlaV04wVEdsbmFIUkRiMnh2Y2w5RWFXWm1kWE5sT3dvSkNTTmxibVJwWmdvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0kyVnVaR2xtQ2lOcFppQk9WVTFmU0VWTlNWOU1TVWRJVkZNZ1BpQXdDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZTRVZOU1Y5TVNVZElWRk03SUdrZ0t5c2dLU0I3Q2drSmRrbHVaR2x5WldOMFJuSnZiblFnS3owZ1oyVjBTR1Z0YVhOd2FHVnlaVXhwWjJoMFNYSnlZV1JwWVc1alpTZ2dhR1Z0YVhOd2FHVnlaVXhwWjJoMGMxc2dhU0JkTENCblpXOXRaWFJ5ZVM1dWIzSnRZV3dnS1RzS0NRa2phV1prWldZZ1JFOVZRa3hGWDFOSlJFVkVDZ2tKQ1haSmJtUnBjbVZqZEVKaFkyc2dLejBnWjJWMFNHVnRhWE53YUdWeVpVeHBaMmgwU1hKeVlXUnBZVzVqWlNnZ2FHVnRhWE53YUdWeVpVeHBaMmgwYzFzZ2FTQmRMQ0JpWVdOclIyVnZiV1YwY25rdWJtOXliV0ZzSUNrN0Nna0pJMlZ1WkdsbUNnbDlDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDJWdVpBb2paVzVrYVdaZ0xDQnBjQ0E5SUdCMWJtbG1iM0p0SUdKdmIyd2djbVZqWldsMlpWTm9ZV1J2ZHpzS2RXNXBabTl5YlNCMlpXTXpJR0Z0WW1sbGJuUk1hV2RvZEVOdmJHOXlPd3AxYm1sbWIzSnRJSFpsWXpNZ2JHbG5hSFJRY205aVpWc2dPU0JkT3dwMlpXTXpJSE5vUjJWMFNYSnlZV1JwWVc1alpVRjBLQ0JwYmlCMlpXTXpJRzV2Y20xaGJDd2dhVzRnZG1Wak15QnphRU52WldabWFXTnBaVzUwYzFzZ09TQmRJQ2tnZXdvSlpteHZZWFFnZUNBOUlHNXZjbTFoYkM1NExDQjVJRDBnYm05eWJXRnNMbmtzSUhvZ1BTQnViM0p0WVd3dWVqc0tDWFpsWXpNZ2NtVnpkV3gwSUQwZ2MyaERiMlZtWm1samFXVnVkSE5iSURBZ1hTQXFJREF1T0RnMk1qSTNPd29KY21WemRXeDBJQ3M5SUhOb1EyOWxabVpwWTJsbGJuUnpXeUF4SUYwZ0tpQXlMakFnS2lBd0xqVXhNVFkyTkNBcUlIazdDZ2x5WlhOMWJIUWdLejBnYzJoRGIyVm1abWxqYVdWdWRITmJJRElnWFNBcUlESXVNQ0FxSURBdU5URXhOalkwSUNvZ2Vqc0tDWEpsYzNWc2RDQXJQU0J6YUVOdlpXWm1hV05wWlc1MGMxc2dNeUJkSUNvZ01pNHdJQ29nTUM0MU1URTJOalFnS2lCNE93b0pjbVZ6ZFd4MElDczlJSE5vUTI5bFptWnBZMmxsYm5Seld5QTBJRjBnS2lBeUxqQWdLaUF3TGpReU9UQTBNeUFxSUhnZ0tpQjVPd29KY21WemRXeDBJQ3M5SUhOb1EyOWxabVpwWTJsbGJuUnpXeUExSUYwZ0tpQXlMakFnS2lBd0xqUXlPVEEwTXlBcUlIa2dLaUI2T3dvSmNtVnpkV3gwSUNzOUlITm9RMjlsWm1acFkybGxiblJ6V3lBMklGMGdLaUFvSURBdU56UXpNVEkxSUNvZ2VpQXFJSG9nTFNBd0xqSTBOemN3T0NBcE93b0pjbVZ6ZFd4MElDczlJSE5vUTI5bFptWnBZMmxsYm5Seld5QTNJRjBnS2lBeUxqQWdLaUF3TGpReU9UQTBNeUFxSUhnZ0tpQjZPd29KY21WemRXeDBJQ3M5SUhOb1EyOWxabVpwWTJsbGJuUnpXeUE0SUYwZ0tpQXdMalF5T1RBME15QXFJQ2dnZUNBcUlIZ2dMU0I1SUNvZ2VTQXBPd29KY21WMGRYSnVJSEpsYzNWc2REc0tmUXAyWldNeklHZGxkRXhwWjJoMFVISnZZbVZKY25KaFpHbGhibU5sS0NCamIyNXpkQ0JwYmlCMlpXTXpJR3hwWjJoMFVISnZZbVZiSURrZ1hTd2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dnS1NCN0NnbDJaV016SUhkdmNteGtUbTl5YldGc0lEMGdhVzUyWlhKelpWUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2dibTl5YldGc0xDQjJhV1YzVFdGMGNtbDRJQ2s3Q2dsMlpXTXpJR2x5Y21Ga2FXRnVZMlVnUFNCemFFZGxkRWx5Y21Ga2FXRnVZMlZCZENnZ2QyOXliR1JPYjNKdFlXd3NJR3hwWjJoMFVISnZZbVVnS1RzS0NYSmxkSFZ5YmlCcGNuSmhaR2xoYm1ObE93cDlDblpsWXpNZ1oyVjBRVzFpYVdWdWRFeHBaMmgwU1hKeVlXUnBZVzVqWlNnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJoYldKcFpXNTBUR2xuYUhSRGIyeHZjaUFwSUhzS0NYWmxZek1nYVhKeVlXUnBZVzVqWlNBOUlHRnRZbWxsYm5STWFXZG9kRU52Ykc5eU93b0pjbVYwZFhKdUlHbHljbUZrYVdGdVkyVTdDbjBLWm14dllYUWdaMlYwUkdsemRHRnVZMlZCZEhSbGJuVmhkR2x2YmlnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnYkdsbmFIUkVhWE4wWVc1alpTd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1kzVjBiMlptUkdsemRHRnVZMlVzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1JsWTJGNVJYaHdiMjVsYm5RZ0tTQjdDZ2tqYVdZZ1pHVm1hVzVsWkNBb0lGQklXVk5KUTBGTVRGbGZRMDlTVWtWRFZGOU1TVWRJVkZNZ0tRb0pDV1pzYjJGMElHUnBjM1JoYm1ObFJtRnNiRzltWmlBOUlERXVNQ0F2SUcxaGVDZ2djRzkzS0NCc2FXZG9kRVJwYzNSaGJtTmxMQ0JrWldOaGVVVjRjRzl1Wlc1MElDa3NJREF1TURFZ0tUc0tDUWxwWmlBb0lHTjFkRzltWmtScGMzUmhibU5sSUQ0Z01DNHdJQ2tnZXdvSkNRbGthWE4wWVc1alpVWmhiR3h2Wm1ZZ0tqMGdjRzkzTWlnZ2MyRjBkWEpoZEdVb0lERXVNQ0F0SUhCdmR6UW9JR3hwWjJoMFJHbHpkR0Z1WTJVZ0x5QmpkWFJ2Wm1aRWFYTjBZVzVqWlNBcElDa2dLVHNLQ1FsOUNna0pjbVYwZFhKdUlHUnBjM1JoYm1ObFJtRnNiRzltWmpzS0NTTmxiSE5sQ2drSmFXWWdLQ0JqZFhSdlptWkVhWE4wWVc1alpTQStJREF1TUNBbUppQmtaV05oZVVWNGNHOXVaVzUwSUQ0Z01DNHdJQ2tnZXdvSkNRbHlaWFIxY200Z2NHOTNLQ0J6WVhSMWNtRjBaU2dnTFNCc2FXZG9kRVJwYzNSaGJtTmxJQzhnWTNWMGIyWm1SR2x6ZEdGdVkyVWdLeUF4TGpBZ0tTd2daR1ZqWVhsRmVIQnZibVZ1ZENBcE93b0pDWDBLQ1FseVpYUjFjbTRnTVM0d093b0pJMlZ1WkdsbUNuMEtabXh2WVhRZ1oyVjBVM0J2ZEVGMGRHVnVkV0YwYVc5dUtDQmpiMjV6ZENCcGJpQm1iRzloZENCamIyNWxRMjl6YVc1bExDQmpiMjV6ZENCcGJpQm1iRzloZENCd1pXNTFiV0p5WVVOdmMybHVaU3dnWTI5dWMzUWdhVzRnWm14dllYUWdZVzVuYkdWRGIzTnBibVVnS1NCN0NnbHlaWFIxY200Z2MyMXZiM1JvYzNSbGNDZ2dZMjl1WlVOdmMybHVaU3dnY0dWdWRXMWljbUZEYjNOcGJtVXNJR0Z1WjJ4bFEyOXphVzVsSUNrN0NuMEtJMmxtSUU1VlRWOUVTVkpmVEVsSFNGUlRJRDRnTUFvSmMzUnlkV04wSUVScGNtVmpkR2x2Ym1Gc1RHbG5hSFFnZXdvSkNYWmxZek1nWkdseVpXTjBhVzl1T3dvSkNYWmxZek1nWTI5c2IzSTdDZ2w5T3dvSmRXNXBabTl5YlNCRWFYSmxZM1JwYjI1aGJFeHBaMmgwSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJ6V3lCT1ZVMWZSRWxTWDB4SlIwaFVVeUJkT3dvSmRtOXBaQ0JuWlhSRWFYSmxZM1JwYjI1aGJFeHBaMmgwU1c1bWJ5Z2dZMjl1YzNRZ2FXNGdSR2x5WldOMGFXOXVZV3hNYVdkb2RDQmthWEpsWTNScGIyNWhiRXhwWjJoMExDQmpiMjV6ZENCcGJpQkhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNUxDQnZkWFFnU1c1amFXUmxiblJNYVdkb2RDQnNhV2RvZENBcElIc0tDUWxzYVdkb2RDNWpiMnh2Y2lBOUlHUnBjbVZqZEdsdmJtRnNUR2xuYUhRdVkyOXNiM0k3Q2drSmJHbG5hSFF1WkdseVpXTjBhVzl1SUQwZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEM1a2FYSmxZM1JwYjI0N0Nna0piR2xuYUhRdWRtbHphV0pzWlNBOUlIUnlkV1U3Q2dsOUNpTmxibVJwWmdvamFXWWdUbFZOWDFCUFNVNVVYMHhKUjBoVVV5QStJREFLQ1hOMGNuVmpkQ0JRYjJsdWRFeHBaMmgwSUhzS0NRbDJaV016SUhCdmMybDBhVzl1T3dvSkNYWmxZek1nWTI5c2IzSTdDZ2tKWm14dllYUWdaR2x6ZEdGdVkyVTdDZ2tKWm14dllYUWdaR1ZqWVhrN0NnbDlPd29KZFc1cFptOXliU0JRYjJsdWRFeHBaMmgwSUhCdmFXNTBUR2xuYUhSeld5Qk9WVTFmVUU5SlRsUmZURWxIU0ZSVElGMDdDZ2wyYjJsa0lHZGxkRkJ2YVc1MFRHbG5hSFJKYm1adktDQmpiMjV6ZENCcGJpQlFiMmx1ZEV4cFoyaDBJSEJ2YVc1MFRHbG5hSFFzSUdOdmJuTjBJR2x1SUVkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbmtzSUc5MWRDQkpibU5wWkdWdWRFeHBaMmgwSUd4cFoyaDBJQ2tnZXdvSkNYWmxZek1nYkZabFkzUnZjaUE5SUhCdmFXNTBUR2xuYUhRdWNHOXphWFJwYjI0Z0xTQm5aVzl0WlhSeWVTNXdiM05wZEdsdmJqc0tDUWxzYVdkb2RDNWthWEpsWTNScGIyNGdQU0J1YjNKdFlXeHBlbVVvSUd4V1pXTjBiM0lnS1RzS0NRbG1iRzloZENCc2FXZG9kRVJwYzNSaGJtTmxJRDBnYkdWdVozUm9LQ0JzVm1WamRHOXlJQ2s3Q2drSmJHbG5hSFF1WTI5c2IzSWdQU0J3YjJsdWRFeHBaMmgwTG1OdmJHOXlPd29KQ1d4cFoyaDBMbU52Ykc5eUlDbzlJR2RsZEVScGMzUmhibU5sUVhSMFpXNTFZWFJwYjI0b0lHeHBaMmgwUkdsemRHRnVZMlVzSUhCdmFXNTBUR2xuYUhRdVpHbHpkR0Z1WTJVc0lIQnZhVzUwVEdsbmFIUXVaR1ZqWVhrZ0tUc0tDUWxzYVdkb2RDNTJhWE5wWW14bElEMGdLQ0JzYVdkb2RDNWpiMnh2Y2lBaFBTQjJaV016S0NBd0xqQWdLU0FwT3dvSmZRb2paVzVrYVdZS0kybG1JRTVWVFY5VFVFOVVYMHhKUjBoVVV5QStJREFLQ1hOMGNuVmpkQ0JUY0c5MFRHbG5hSFFnZXdvSkNYWmxZek1nY0c5emFYUnBiMjQ3Q2drSmRtVmpNeUJrYVhKbFkzUnBiMjQ3Q2drSmRtVmpNeUJqYjJ4dmNqc0tDUWxtYkc5aGRDQmthWE4wWVc1alpUc0tDUWxtYkc5aGRDQmtaV05oZVRzS0NRbG1iRzloZENCamIyNWxRMjl6T3dvSkNXWnNiMkYwSUhCbGJuVnRZbkpoUTI5ek93b0pmVHNLQ1hWdWFXWnZjbTBnVTNCdmRFeHBaMmgwSUhOd2IzUk1hV2RvZEhOYklFNVZUVjlUVUU5VVgweEpSMGhVVXlCZE93b0pkbTlwWkNCblpYUlRjRzkwVEdsbmFIUkpibVp2S0NCamIyNXpkQ0JwYmlCVGNHOTBUR2xuYUhRZ2MzQnZkRXhwWjJoMExDQmpiMjV6ZENCcGJpQkhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNUxDQnZkWFFnU1c1amFXUmxiblJNYVdkb2RDQnNhV2RvZENBcElIc0tDUWwyWldNeklHeFdaV04wYjNJZ1BTQnpjRzkwVEdsbmFIUXVjRzl6YVhScGIyNGdMU0JuWlc5dFpYUnllUzV3YjNOcGRHbHZianNLQ1Fsc2FXZG9kQzVrYVhKbFkzUnBiMjRnUFNCdWIzSnRZV3hwZW1Vb0lHeFdaV04wYjNJZ0tUc0tDUWxtYkc5aGRDQmhibWRzWlVOdmN5QTlJR1J2ZENnZ2JHbG5hSFF1WkdseVpXTjBhVzl1TENCemNHOTBUR2xuYUhRdVpHbHlaV04wYVc5dUlDazdDZ2tKWm14dllYUWdjM0J2ZEVGMGRHVnVkV0YwYVc5dUlEMGdaMlYwVTNCdmRFRjBkR1Z1ZFdGMGFXOXVLQ0J6Y0c5MFRHbG5hSFF1WTI5dVpVTnZjeXdnYzNCdmRFeHBaMmgwTG5CbGJuVnRZbkpoUTI5ekxDQmhibWRzWlVOdmN5QXBPd29KQ1dsbUlDZ2djM0J2ZEVGMGRHVnVkV0YwYVc5dUlENGdNQzR3SUNrZ2V3b0pDUWxtYkc5aGRDQnNhV2RvZEVScGMzUmhibU5sSUQwZ2JHVnVaM1JvS0NCc1ZtVmpkRzl5SUNrN0Nna0pDV3hwWjJoMExtTnZiRzl5SUQwZ2MzQnZkRXhwWjJoMExtTnZiRzl5SUNvZ2MzQnZkRUYwZEdWdWRXRjBhVzl1T3dvSkNRbHNhV2RvZEM1amIyeHZjaUFxUFNCblpYUkVhWE4wWVc1alpVRjBkR1Z1ZFdGMGFXOXVLQ0JzYVdkb2RFUnBjM1JoYm1ObExDQnpjRzkwVEdsbmFIUXVaR2x6ZEdGdVkyVXNJSE53YjNSTWFXZG9kQzVrWldOaGVTQXBPd29KQ1Fsc2FXZG9kQzUyYVhOcFlteGxJRDBnS0NCc2FXZG9kQzVqYjJ4dmNpQWhQU0IyWldNektDQXdMakFnS1NBcE93b0pDWDBnWld4elpTQjdDZ2tKQ1d4cFoyaDBMbU52Ykc5eUlEMGdkbVZqTXlnZ01DNHdJQ2s3Q2drSkNXeHBaMmgwTG5acGMybGliR1VnUFNCbVlXeHpaVHNLQ1FsOUNnbDlDaU5sYm1ScFpnb2phV1lnVGxWTlgxSkZRMVJmUVZKRlFWOU1TVWRJVkZNZ1BpQXdDZ2x6ZEhKMVkzUWdVbVZqZEVGeVpXRk1hV2RvZENCN0Nna0pkbVZqTXlCamIyeHZjanNLQ1FsMlpXTXpJSEJ2YzJsMGFXOXVPd29KQ1habFl6TWdhR0ZzWmxkcFpIUm9Pd29KQ1habFl6TWdhR0ZzWmtobGFXZG9kRHNLQ1gwN0NnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnNkR05mTVRzSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2JIUmpYekk3Q2dsMWJtbG1iM0p0SUZKbFkzUkJjbVZoVEdsbmFIUWdjbVZqZEVGeVpXRk1hV2RvZEhOYklFNVZUVjlTUlVOVVgwRlNSVUZmVEVsSFNGUlRJRjA3Q2lObGJtUnBaZ29qYVdZZ1RsVk5YMGhGVFVsZlRFbEhTRlJUSUQ0Z01Bb0pjM1J5ZFdOMElFaGxiV2x6Y0dobGNtVk1hV2RvZENCN0Nna0pkbVZqTXlCa2FYSmxZM1JwYjI0N0Nna0pkbVZqTXlCemEzbERiMnh2Y2pzS0NRbDJaV016SUdkeWIzVnVaRU52Ykc5eU93b0pmVHNLQ1hWdWFXWnZjbTBnU0dWdGFYTndhR1Z5WlV4cFoyaDBJR2hsYldsemNHaGxjbVZNYVdkb2RITmJJRTVWVFY5SVJVMUpYMHhKUjBoVVV5QmRPd29KZG1Wak15Qm5aWFJJWlcxcGMzQm9aWEpsVEdsbmFIUkpjbkpoWkdsaGJtTmxLQ0JqYjI1emRDQnBiaUJJWlcxcGMzQm9aWEpsVEdsbmFIUWdhR1Z0YVV4cFoyaDBMQ0JqYjI1emRDQnBiaUIyWldNeklHNXZjbTFoYkNBcElIc0tDUWxtYkc5aGRDQmtiM1JPVENBOUlHUnZkQ2dnYm05eWJXRnNMQ0JvWlcxcFRHbG5hSFF1WkdseVpXTjBhVzl1SUNrN0Nna0pabXh2WVhRZ2FHVnRhVVJwWm1aMWMyVlhaV2xuYUhRZ1BTQXdMalVnS2lCa2IzUk9UQ0FySURBdU5Uc0tDUWwyWldNeklHbHljbUZrYVdGdVkyVWdQU0J0YVhnb0lHaGxiV2xNYVdkb2RDNW5jbTkxYm1SRGIyeHZjaXdnYUdWdGFVeHBaMmgwTG5OcmVVTnZiRzl5TENCb1pXMXBSR2xtWm5WelpWZGxhV2RvZENBcE93b0pDWEpsZEhWeWJpQnBjbkpoWkdsaGJtTmxPd29KZlFvalpXNWthV1pnTENCeWNDQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMFZPVmsxQlVDQXBDZ2tqYVdaa1pXWWdSVTVXVFVGUVgwMVBSRVZmVWtWR1VrRkRWRWxQVGdvSkNYVnVhV1p2Y20wZ1pteHZZWFFnY21WbWNtRmpkR2x2YmxKaGRHbHZPd29KSTJWdVpHbG1DZ2wyWldNeklHZGxkRWxDVEVseWNtRmthV0Z1WTJVb0lHTnZibk4wSUdsdUlIWmxZek1nYm05eWJXRnNJQ2tnZXdvSkNTTnBaaUJrWldacGJtVmtLQ0JGVGxaTlFWQmZWRmxRUlY5RFZVSkZYMVZXSUNrS0NRa0pkbVZqTXlCM2IzSnNaRTV2Y20xaGJDQTlJR2x1ZG1WeWMyVlVjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9JRzV2Y20xaGJDd2dkbWxsZDAxaGRISnBlQ0FwT3dvSkNRbDJaV00wSUdWdWRrMWhjRU52Ykc5eUlEMGdkR1Y0ZEhWeVpVTjFZbVZWVmlnZ1pXNTJUV0Z3TENCM2IzSnNaRTV2Y20xaGJDd2dNUzR3SUNrN0Nna0pDWEpsZEhWeWJpQlFTU0FxSUdWdWRrMWhjRU52Ykc5eUxuSm5ZaUFxSUdWdWRrMWhjRWx1ZEdWdWMybDBlVHNLQ1FralpXeHpaUW9KQ1FseVpYUjFjbTRnZG1Wak15Z2dNQzR3SUNrN0Nna0pJMlZ1WkdsbUNnbDlDZ2wyWldNeklHZGxkRWxDVEZKaFpHbGhibU5sS0NCamIyNXpkQ0JwYmlCMlpXTXpJSFpwWlhkRWFYSXNJR052Ym5OMElHbHVJSFpsWXpNZ2JtOXliV0ZzTENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J5YjNWbmFHNWxjM01nS1NCN0Nna0pJMmxtSUdSbFptbHVaV1FvSUVWT1ZrMUJVRjlVV1ZCRlgwTlZRa1ZmVlZZZ0tRb0pDUWwyWldNeklISmxabXhsWTNSV1pXTTdDZ2tKQ1NOcFptUmxaaUJGVGxaTlFWQmZUVTlFUlY5U1JVWk1SVU5VU1U5T0Nna0pDUWx5Wldac1pXTjBWbVZqSUQwZ2NtVm1iR1ZqZENnZ0xTQjJhV1YzUkdseUxDQnViM0p0WVd3Z0tUc0tDUWtKQ1hKbFpteGxZM1JXWldNZ1BTQnViM0p0WVd4cGVtVW9JRzFwZUNnZ2NtVm1iR1ZqZEZabFl5d2dibTl5YldGc0xDQnliM1ZuYUc1bGMzTWdLaUJ5YjNWbmFHNWxjM01wSUNrN0Nna0pDU05sYkhObENna0pDUWx5Wldac1pXTjBWbVZqSUQwZ2NtVm1jbUZqZENnZ0xTQjJhV1YzUkdseUxDQnViM0p0WVd3c0lISmxabkpoWTNScGIyNVNZWFJwYnlBcE93b0pDUWtqWlc1a2FXWUtDUWtKY21WbWJHVmpkRlpsWXlBOUlHbHVkbVZ5YzJWVWNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lISmxabXhsWTNSV1pXTXNJSFpwWlhkTllYUnlhWGdnS1RzS0NRa0pkbVZqTkNCbGJuWk5ZWEJEYjJ4dmNpQTlJSFJsZUhSMWNtVkRkV0psVlZZb0lHVnVkazFoY0N3Z2NtVm1iR1ZqZEZabFl5d2djbTkxWjJodVpYTnpJQ2s3Q2drSkNYSmxkSFZ5YmlCbGJuWk5ZWEJEYjJ4dmNpNXlaMklnS2lCbGJuWk5ZWEJKYm5SbGJuTnBkSGs3Q2drSkkyVnNjMlVLQ1FrSmNtVjBkWEp1SUhabFl6TW9JREF1TUNBcE93b0pDU05sYm1ScFpnb0pmUW9qWlc1a2FXWmdMQ0J6Y0NBOUlHQlViMjl1VFdGMFpYSnBZV3dnYldGMFpYSnBZV3c3Q20xaGRHVnlhV0ZzTG1ScFptWjFjMlZEYjJ4dmNpQTlJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySTdZQ3dnYjNBZ1BTQmdkbUZ5ZVdsdVp5QjJaV016SUhaV2FXVjNVRzl6YVhScGIyNDdDbk4wY25WamRDQlViMjl1VFdGMFpYSnBZV3dnZXdvSmRtVmpNeUJrYVdabWRYTmxRMjlzYjNJN0NuMDdDblp2YVdRZ1VrVmZSR2x5WldOMFgxUnZiMjRvSUdOdmJuTjBJR2x1SUVsdVkybGtaVzUwVEdsbmFIUWdaR2x5WldOMFRHbG5hSFFzSUdOdmJuTjBJR2x1SUVkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbmtzSUdOdmJuTjBJR2x1SUZSdmIyNU5ZWFJsY21saGJDQnRZWFJsY21saGJDd2dhVzV2ZFhRZ1VtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdLU0I3Q2dsMlpXTXpJR2x5Y21Ga2FXRnVZMlVnUFNCblpYUkhjbUZrYVdWdWRFbHljbUZrYVdGdVkyVW9JR2RsYjIxbGRISjVMbTV2Y20xaGJDd2daR2x5WldOMFRHbG5hSFF1WkdseVpXTjBhVzl1SUNrZ0tpQmthWEpsWTNSTWFXZG9kQzVqYjJ4dmNqc0tDWEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnS3owZ2FYSnlZV1JwWVc1alpTQXFJRUpTUkVaZlRHRnRZbVZ5ZENnZ2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJQ2s3Q24wS2RtOXBaQ0JTUlY5SmJtUnBjbVZqZEVScFptWjFjMlZmVkc5dmJpZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCcGNuSmhaR2xoYm1ObExDQmpiMjV6ZENCcGJpQkhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNUxDQmpiMjV6ZENCcGJpQlViMjl1VFdGMFpYSnBZV3dnYldGMFpYSnBZV3dzSUdsdWIzVjBJRkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUNrZ2V3b0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNzOUlHbHljbUZrYVdGdVkyVWdLaUJDVWtSR1gweGhiV0psY25Rb0lHMWhkR1Z5YVdGc0xtUnBabVoxYzJWRGIyeHZjaUFwT3dwOUNpTmtaV1pwYm1VZ1VrVmZSR2x5WldOMENRa0pDVkpGWDBScGNtVmpkRjlVYjI5dUNpTmtaV1pwYm1VZ1VrVmZTVzVrYVhKbFkzUkVhV1ptZFhObENRbFNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVmZWRzl2YmdvalpHVm1hVzVsSUUxaGRHVnlhV0ZzWDB4cFoyaDBVSEp2WW1WTVQwUW9JRzFoZEdWeWFXRnNJQ2tKS0RBcFlDd2dZWEFnUFNCZ1FteHBibTVRYUc5dVowMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc093cHRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpT3dwdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tOdmJHOXlJRDBnYzNCbFkzVnNZWEk3Q20xaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5VTJocGJtbHVaWE56SUQwZ2MyaHBibWx1WlhOek93cHRZWFJsY21saGJDNXpjR1ZqZFd4aGNsTjBjbVZ1WjNSb0lEMGdjM0JsWTNWc1lYSlRkSEpsYm1kMGFEdGdMQ0JzY0NBOUlHQjJZWEo1YVc1bklIWmxZek1nZGxacFpYZFFiM05wZEdsdmJqc0tjM1J5ZFdOMElFSnNhVzV1VUdodmJtZE5ZWFJsY21saGJDQjdDZ2wyWldNeklHUnBabVoxYzJWRGIyeHZjanNLQ1habFl6TWdjM0JsWTNWc1lYSkRiMnh2Y2pzS0NXWnNiMkYwSUhOd1pXTjFiR0Z5VTJocGJtbHVaWE56T3dvSlpteHZZWFFnYzNCbFkzVnNZWEpUZEhKbGJtZDBhRHNLZlRzS2RtOXBaQ0JTUlY5RWFYSmxZM1JmUW14cGJtNVFhRzl1WnlnZ1kyOXVjM1FnYVc0Z1NXNWphV1JsYm5STWFXZG9kQ0JrYVhKbFkzUk1hV2RvZEN3Z1kyOXVjM1FnYVc0Z1IyVnZiV1YwY21salEyOXVkR1Y0ZENCblpXOXRaWFJ5ZVN3Z1kyOXVjM1FnYVc0Z1FteHBibTVRYUc5dVowMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc0xDQnBibTkxZENCU1pXWnNaV04wWldSTWFXZG9kQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBJSHNLQ1dac2IyRjBJR1J2ZEU1TUlEMGdjMkYwZFhKaGRHVW9JR1J2ZENnZ1oyVnZiV1YwY25rdWJtOXliV0ZzTENCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNGdLU0FwT3dvSmRtVmpNeUJwY25KaFpHbGhibU5sSUQwZ1pHOTBUa3dnS2lCa2FYSmxZM1JNYVdkb2RDNWpiMnh2Y2pzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmVEdGdFltVnlkQ2dnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDazdDZ2x5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSVGNHVmpkV3hoY2lBclBTQnBjbkpoWkdsaGJtTmxJQ29nUWxKRVJsOUNiR2x1YmxCb2IyNW5LQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJc0lHZGxiMjFsZEhKNUxtNXZjbTFoYkN3Z2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKRGIyeHZjaXdnYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpUYUdsdWFXNWxjM01nS1NBcUlHMWhkR1Z5YVdGc0xuTndaV04xYkdGeVUzUnlaVzVuZEdnN0NuMEtkbTlwWkNCU1JWOUpibVJwY21WamRFUnBabVoxYzJWZlFteHBibTVRYUc5dVp5Z2dZMjl1YzNRZ2FXNGdkbVZqTXlCcGNuSmhaR2xoYm1ObExDQmpiMjV6ZENCcGJpQkhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNUxDQmpiMjV6ZENCcGJpQkNiR2x1YmxCb2IyNW5UV0YwWlhKcFlXd2diV0YwWlhKcFlXd3NJR2x1YjNWMElGSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2tnZXdvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3M5SUdseWNtRmthV0Z1WTJVZ0tpQkNVa1JHWDB4aGJXSmxjblFvSUcxaGRHVnlhV0ZzTG1ScFptWjFjMlZEYjJ4dmNpQXBPd3A5Q2lOa1pXWnBibVVnVWtWZlJHbHlaV04wQ1FrSkNWSkZYMFJwY21WamRGOUNiR2x1YmxCb2IyNW5DaU5rWldacGJtVWdVa1ZmU1c1a2FYSmxZM1JFYVdabWRYTmxDUWxTUlY5SmJtUnBjbVZqZEVScFptWjFjMlZmUW14cGJtNVFhRzl1WndvalpHVm1hVzVsSUUxaGRHVnlhV0ZzWDB4cFoyaDBVSEp2WW1WTVQwUW9JRzFoZEdWeWFXRnNJQ2tKS0RBcFlDd2dZM0FnUFNCZ1VHaDVjMmxqWVd4TllYUmxjbWxoYkNCdFlYUmxjbWxoYkRzS2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJRDBnWkdsbVpuVnpaVU52Ykc5eUxuSm5ZaUFxSUNnZ01TNHdJQzBnYldWMFlXeHVaWE56Um1GamRHOXlJQ2s3Q25abFl6TWdaSGg1SUQwZ2JXRjRLQ0JoWW5Nb0lHUkdaSGdvSUdkbGIyMWxkSEo1VG05eWJXRnNJQ2tnS1N3Z1lXSnpLQ0JrUm1SNUtDQm5aVzl0WlhSeWVVNXZjbTFoYkNBcElDa2dLVHNLWm14dllYUWdaMlZ2YldWMGNubFNiM1ZuYUc1bGMzTWdQU0J0WVhnb0lHMWhlQ2dnWkhoNUxuZ3NJR1I0ZVM1NUlDa3NJR1I0ZVM1NklDazdDbTFoZEdWeWFXRnNMbkp2ZFdkb2JtVnpjeUE5SUcxaGVDZ2djbTkxWjJodVpYTnpSbUZqZEc5eUxDQXdMakExTWpVZ0tUdHRZWFJsY21saGJDNXliM1ZuYUc1bGMzTWdLejBnWjJWdmJXVjBjbmxTYjNWbmFHNWxjM003Q20xaGRHVnlhV0ZzTG5KdmRXZG9ibVZ6Y3lBOUlHMXBiaWdnYldGMFpYSnBZV3d1Y205MVoyaHVaWE56TENBeExqQWdLVHNLSTJsbVpHVm1JRWxQVWdvSkkybG1aR1ZtSUZOUVJVTlZURUZTQ2drSlpteHZZWFFnYzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxHWVdOMGIzSWdQU0J6Y0dWamRXeGhja2x1ZEdWdWMybDBlVHNLQ1FsMlpXTXpJSE53WldOMWJHRnlRMjlzYjNKR1lXTjBiM0lnUFNCemNHVmpkV3hoY2tOdmJHOXlPd29KQ1NOcFptUmxaaUJWVTBWZlUxQkZRMVZNUVZKSlRsUkZUbE5KVkZsTlFWQUtDUWtKYzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxHWVdOMGIzSWdLajBnZEdWNGRIVnlaVEpFS0NCemNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDd2dkbFYySUNrdVlUc0tDUWtqWlc1a2FXWUtDUWtqYVdaa1pXWWdWVk5GWDFOUVJVTlZURUZTUTA5TVQxSk5RVkFLQ1FrSmMzQmxZM1ZzWVhKRGIyeHZja1poWTNSdmNpQXFQU0J6Y0dWamRXeGhja052Ykc5eVRXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2RHVjRkSFZ5WlRKRUtDQnpjR1ZqZFd4aGNrTnZiRzl5VFdGd0xDQjJWWFlnS1NBcExuSm5ZanNLQ1FralpXNWthV1lLQ1FsdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tZNU1DQTlJRzFwZUNnZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsR1lXTjBiM0lzSURFdU1Dd2diV1YwWVd4dVpYTnpSbUZqZEc5eUlDazdDZ2tqWld4elpRb0pDV1pzYjJGMElITndaV04xYkdGeVNXNTBaVzV6YVhSNVJtRmpkRzl5SUQwZ01TNHdPd29KQ1habFl6TWdjM0JsWTNWc1lYSkRiMnh2Y2taaFkzUnZjaUE5SUhabFl6TW9JREV1TUNBcE93b0pDVzFoZEdWeWFXRnNMbk53WldOMWJHRnlSamt3SUQwZ01TNHdPd29KSTJWdVpHbG1DZ2x0WVhSbGNtbGhiQzV6Y0dWamRXeGhja052Ykc5eUlEMGdiV2w0S0NCdGFXNG9JSEJ2ZHpJb0lDZ2dhVzl5SUMwZ01TNHdJQ2tnTHlBb0lHbHZjaUFySURFdU1DQXBJQ2tnS2lCemNHVmpkV3hoY2tOdmJHOXlSbUZqZEc5eUxDQjJaV016S0NBeExqQWdLU0FwSUNvZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsR1lXTjBiM0lzSUdScFptWjFjMlZEYjJ4dmNpNXlaMklzSUcxbGRHRnNibVZ6YzBaaFkzUnZjaUFwT3dvalpXeHpaUW9KYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpEYjJ4dmNpQTlJRzFwZUNnZ2RtVmpNeWdnTUM0d05DQXBMQ0JrYVdabWRYTmxRMjlzYjNJdWNtZGlMQ0J0WlhSaGJHNWxjM05HWVdOMGIzSWdLVHNLQ1cxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5Umprd0lEMGdNUzR3T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZRS0NXMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRDQTlJR05zWldGeVkyOWhkRHNLQ1cxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBOUlHTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN6c0tDVzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRVl3SUQwZ2RtVmpNeWdnTUM0d05DQXBPd29KYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwUmprd0lEMGdNUzR3T3dvSkkybG1aR1ZtSUZWVFJWOURURVZCVWtOUFFWUk5RVkFLQ1FsdFlYUmxjbWxoYkM1amJHVmhjbU52WVhRZ0tqMGdkR1Y0ZEhWeVpUSkVLQ0JqYkdWaGNtTnZZWFJOWVhBc0lIWlZkaUFwTG5nN0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVYMUpQVlVkSVRrVlRVMDFCVUFvSkNXMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5QXFQU0IwWlhoMGRYSmxNa1FvSUdOc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDd2dkbFYySUNrdWVUc0tDU05sYm1ScFpnb0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBJRDBnYzJGMGRYSmhkR1VvSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZENBcE93bHRZWFJsY21saGJDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdQU0J0WVhnb0lHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5d2dNQzR3TlRJMUlDazdDZ2x0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM01nS3owZ1oyVnZiV1YwY25sU2IzVm5hRzVsYzNNN0NnbHRZWFJsY21saGJDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdQU0J0YVc0b0lHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5d2dNUzR3SUNrN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgxTklSVVZPQ2dsdFlYUmxjbWxoYkM1emFHVmxia052Ykc5eUlEMGdjMmhsWlc1RGIyeHZjanNLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTVEVDB4UFVrMUJVQW9KQ1cxaGRHVnlhV0ZzTG5Ob1pXVnVRMjlzYjNJZ0tqMGdjMmhsWlc1RGIyeHZjazFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JSFJsZUhSMWNtVXlSQ2dnYzJobFpXNURiMnh2Y2sxaGNDd2dkbFYySUNrZ0tTNXlaMkk3Q2dralpXNWthV1lLQ1cxaGRHVnlhV0ZzTG5Ob1pXVnVVbTkxWjJodVpYTnpJRDBnWTJ4aGJYQW9JSE5vWldWdVVtOTFaMmh1WlhOekxDQXdMakEzTENBeExqQWdLVHNLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTVTVDFWSFNFNUZVMU5OUVZBS0NRbHRZWFJsY21saGJDNXphR1ZsYmxKdmRXZG9ibVZ6Y3lBcVBTQjBaWGgwZFhKbE1rUW9JSE5vWldWdVVtOTFaMmh1WlhOelRXRndMQ0IyVlhZZ0tTNWhPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJR2h3SUQwZ1lITjBjblZqZENCUWFIbHphV05oYkUxaGRHVnlhV0ZzSUhzS0NYWmxZek1nWkdsbVpuVnpaVU52Ykc5eU93b0pabXh2WVhRZ2NtOTFaMmh1WlhOek93b0pkbVZqTXlCemNHVmpkV3hoY2tOdmJHOXlPd29KWm14dllYUWdjM0JsWTNWc1lYSkdPVEE3Q2dramFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZBb0pDV1pzYjJGMElHTnNaV0Z5WTI5aGREc0tDUWxtYkc5aGRDQmpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTTdDZ2tKZG1Wak15QmpiR1ZoY21OdllYUkdNRHNLQ1FsbWJHOWhkQ0JqYkdWaGNtTnZZWFJHT1RBN0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZVMGhGUlU0S0NRbDJaV016SUhOb1pXVnVRMjlzYjNJN0Nna0pabXh2WVhRZ2MyaGxaVzVTYjNWbmFHNWxjM003Q2dralpXNWthV1lLZlRzS2RtVmpNeUJqYkdWaGNtTnZZWFJUY0dWamRXeGhjaUE5SUhabFl6TW9JREF1TUNBcE93cDJaV016SUhOb1pXVnVVM0JsWTNWc1lYSWdQU0IyWldNektDQXdMakFnS1RzS1pteHZZWFFnU1VKTVUyaGxaVzVDVWtSR0tDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnZG1Wak15QjJhV1YzUkdseUxDQmpiMjV6ZENCcGJpQm1iRzloZENCeWIzVm5hRzVsYzNNcElIc0tDV1pzYjJGMElHUnZkRTVXSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnYm05eWJXRnNMQ0IyYVdWM1JHbHlJQ2tnS1RzS0NXWnNiMkYwSUhJeUlEMGdjbTkxWjJodVpYTnpJQ29nY205MVoyaHVaWE56T3dvSlpteHZZWFFnWVNBOUlISnZkV2RvYm1WemN5QThJREF1TWpVZ1B5QXRNek01TGpJZ0tpQnlNaUFySURFMk1TNDBJQ29nY205MVoyaHVaWE56SUMwZ01qVXVPU0E2SUMwNExqUTRJQ29nY2pJZ0t5QXhOQzR6SUNvZ2NtOTFaMmh1WlhOeklDMGdPUzQ1TlRzS0NXWnNiMkYwSUdJZ1BTQnliM1ZuYUc1bGMzTWdQQ0F3TGpJMUlEOGdORFF1TUNBcUlISXlJQzBnTWpNdU55QXFJSEp2ZFdkb2JtVnpjeUFySURNdU1qWWdPaUF4TGprM0lDb2djaklnTFNBekxqSTNJQ29nY205MVoyaHVaWE56SUNzZ01DNDNNanNLQ1dac2IyRjBJRVJISUQwZ1pYaHdLQ0JoSUNvZ1pHOTBUbFlnS3lCaUlDa2dLeUFvSUhKdmRXZG9ibVZ6Y3lBOElEQXVNalVnUHlBd0xqQWdPaUF3TGpFZ0tpQW9JSEp2ZFdkb2JtVnpjeUF0SURBdU1qVWdLU0FwT3dvSmNtVjBkWEp1SUhOaGRIVnlZWFJsS0NCRVJ5QXFJRkpGUTBsUVVrOURRVXhmVUVrZ0tUc0tmUXAyWldNeUlFUkdSMEZ3Y0hKdmVDZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dzSUdOdmJuTjBJR2x1SUhabFl6TWdkbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2NtOTFaMmh1WlhOeklDa2dld29KWm14dllYUWdaRzkwVGxZZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCdWIzSnRZV3dzSUhacFpYZEVhWElnS1NBcE93b0pZMjl1YzNRZ2RtVmpOQ0JqTUNBOUlIWmxZelFvSUMwZ01Td2dMU0F3TGpBeU56VXNJQzBnTUM0MU56SXNJREF1TURJeUlDazdDZ2xqYjI1emRDQjJaV00wSUdNeElEMGdkbVZqTkNnZ01Td2dNQzR3TkRJMUxDQXhMakEwTENBdElEQXVNRFFnS1RzS0NYWmxZelFnY2lBOUlISnZkV2RvYm1WemN5QXFJR013SUNzZ1l6RTdDZ2xtYkc5aGRDQmhNREEwSUQwZ2JXbHVLQ0J5TG5nZ0tpQnlMbmdzSUdWNGNESW9JQzBnT1M0eU9DQXFJR1J2ZEU1V0lDa2dLU0FxSUhJdWVDQXJJSEl1ZVRzS0NYWmxZeklnWm1GaUlEMGdkbVZqTWlnZ0xTQXhMakEwTENBeExqQTBJQ2tnS2lCaE1EQTBJQ3NnY2k1NmR6c0tDWEpsZEhWeWJpQm1ZV0k3Q24wS2RtVmpNeUJGYm5acGNtOXViV1Z1ZEVKU1JFWW9JR052Ym5OMElHbHVJSFpsWXpNZ2JtOXliV0ZzTENCamIyNXpkQ0JwYmlCMlpXTXpJSFpwWlhkRWFYSXNJR052Ym5OMElHbHVJSFpsWXpNZ2MzQmxZM1ZzWVhKRGIyeHZjaXdnWTI5dWMzUWdhVzRnWm14dllYUWdjM0JsWTNWc1lYSkdPVEFzSUdOdmJuTjBJR2x1SUdac2IyRjBJSEp2ZFdkb2JtVnpjeUFwSUhzS0NYWmxZeklnWm1GaUlEMGdSRVpIUVhCd2NtOTRLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSXNJSEp2ZFdkb2JtVnpjeUFwT3dvSmNtVjBkWEp1SUhOd1pXTjFiR0Z5UTI5c2IzSWdLaUJtWVdJdWVDQXJJSE53WldOMWJHRnlSamt3SUNvZ1ptRmlMbms3Q24wS2RtOXBaQ0JqYjIxd2RYUmxUWFZzZEdselkyRjBkR1Z5YVc1bktDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnZG1Wak15QjJhV1YzUkdseUxDQmpiMjV6ZENCcGJpQjJaV016SUhOd1pXTjFiR0Z5UTI5c2IzSXNJR052Ym5OMElHbHVJR1pzYjJGMElITndaV04xYkdGeVJqa3dMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnliM1ZuYUc1bGMzTXNJR2x1YjNWMElIWmxZek1nYzJsdVoyeGxVMk5oZEhSbGNpd2dhVzV2ZFhRZ2RtVmpNeUJ0ZFd4MGFWTmpZWFIwWlhJZ0tTQjdDZ2wyWldNeUlHWmhZaUE5SUVSR1IwRndjSEp2ZUNnZ2JtOXliV0ZzTENCMmFXVjNSR2x5TENCeWIzVm5hRzVsYzNNZ0tUc0tDWFpsWXpNZ1JuTnpSWE56SUQwZ2MzQmxZM1ZzWVhKRGIyeHZjaUFxSUdaaFlpNTRJQ3NnYzNCbFkzVnNZWEpHT1RBZ0tpQm1ZV0l1ZVRzS0NXWnNiMkYwSUVWemN5QTlJR1poWWk1NElDc2dabUZpTG5rN0NnbG1iRzloZENCRmJYTWdQU0F4TGpBZ0xTQkZjM003Q2dsMlpXTXpJRVpoZG1jZ1BTQnpjR1ZqZFd4aGNrTnZiRzl5SUNzZ0tDQXhMakFnTFNCemNHVmpkV3hoY2tOdmJHOXlJQ2tnS2lBd0xqQTBOell4T1RzSmRtVmpNeUJHYlhNZ1BTQkdjM05GYzNNZ0tpQkdZWFpuSUM4Z0tDQXhMakFnTFNCRmJYTWdLaUJHWVhabklDazdDZ2x6YVc1bmJHVlRZMkYwZEdWeUlDczlJRVp6YzBWemN6c0tDVzExYkhScFUyTmhkSFJsY2lBclBTQkdiWE1nS2lCRmJYTTdDbjBLSTJsbUlFNVZUVjlTUlVOVVgwRlNSVUZmVEVsSFNGUlRJRDRnTUFvSmRtOXBaQ0JTUlY5RWFYSmxZM1JmVW1WamRFRnlaV0ZmVUdoNWMybGpZV3dvSUdOdmJuTjBJR2x1SUZKbFkzUkJjbVZoVEdsbmFIUWdjbVZqZEVGeVpXRk1hV2RvZEN3Z1kyOXVjM1FnYVc0Z1IyVnZiV1YwY21salEyOXVkR1Y0ZENCblpXOXRaWFJ5ZVN3Z1kyOXVjM1FnYVc0Z1VHaDVjMmxqWVd4TllYUmxjbWxoYkNCdFlYUmxjbWxoYkN3Z2FXNXZkWFFnVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ0tTQjdDZ2tKZG1Wak15QnViM0p0WVd3Z1BTQm5aVzl0WlhSeWVTNXViM0p0WVd3N0Nna0pkbVZqTXlCMmFXVjNSR2x5SUQwZ1oyVnZiV1YwY25rdWRtbGxkMFJwY2pzS0NRbDJaV016SUhCdmMybDBhVzl1SUQwZ1oyVnZiV1YwY25rdWNHOXphWFJwYjI0N0Nna0pkbVZqTXlCc2FXZG9kRkJ2Y3lBOUlISmxZM1JCY21WaFRHbG5hSFF1Y0c5emFYUnBiMjQ3Q2drSmRtVmpNeUJvWVd4bVYybGtkR2dnUFNCeVpXTjBRWEpsWVV4cFoyaDBMbWhoYkdaWGFXUjBhRHNLQ1FsMlpXTXpJR2hoYkdaSVpXbG5hSFFnUFNCeVpXTjBRWEpsWVV4cFoyaDBMbWhoYkdaSVpXbG5hSFE3Q2drSmRtVmpNeUJzYVdkb2RFTnZiRzl5SUQwZ2NtVmpkRUZ5WldGTWFXZG9kQzVqYjJ4dmNqc0tDUWxtYkc5aGRDQnliM1ZuYUc1bGMzTWdQU0J0WVhSbGNtbGhiQzV5YjNWbmFHNWxjM003Q2drSmRtVmpNeUJ5WldOMFEyOXZjbVJ6V3lBMElGMDdDZ2tKY21WamRFTnZiM0prYzFzZ01DQmRJRDBnYkdsbmFIUlFiM01nS3lCb1lXeG1WMmxrZEdnZ0xTQm9ZV3htU0dWcFoyaDBPd2tKY21WamRFTnZiM0prYzFzZ01TQmRJRDBnYkdsbmFIUlFiM01nTFNCb1lXeG1WMmxrZEdnZ0xTQm9ZV3htU0dWcFoyaDBPd29KQ1hKbFkzUkRiMjl5WkhOYklESWdYU0E5SUd4cFoyaDBVRzl6SUMwZ2FHRnNabGRwWkhSb0lDc2dhR0ZzWmtobGFXZG9kRHNLQ1FseVpXTjBRMjl2Y21Seld5QXpJRjBnUFNCc2FXZG9kRkJ2Y3lBcklHaGhiR1pYYVdSMGFDQXJJR2hoYkdaSVpXbG5hSFE3Q2drSmRtVmpNaUIxZGlBOUlFeFVRMTlWZGlnZ2JtOXliV0ZzTENCMmFXVjNSR2x5TENCeWIzVm5hRzVsYzNNZ0tUc0tDUWwyWldNMElIUXhJRDBnZEdWNGRIVnlaVEpFS0NCc2RHTmZNU3dnZFhZZ0tUc0tDUWwyWldNMElIUXlJRDBnZEdWNGRIVnlaVEpFS0NCc2RHTmZNaXdnZFhZZ0tUc0tDUWx0WVhReklHMUpibllnUFNCdFlYUXpLQW9KQ1FsMlpXTXpLQ0IwTVM1NExDQXdMQ0IwTVM1NUlDa3NDZ2tKQ1habFl6TW9JQ0FnSURBc0lERXNJQ0FnSURBZ0tTd0tDUWtKZG1Wak15Z2dkREV1ZWl3Z01Dd2dkREV1ZHlBcENna0pLVHNLQ1FsMlpXTXpJR1p5WlhOdVpXd2dQU0FvSUcxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5UTI5c2IzSWdLaUIwTWk1NElDc2dLQ0IyWldNektDQXhMakFnS1NBdElHMWhkR1Z5YVdGc0xuTndaV04xYkdGeVEyOXNiM0lnS1NBcUlIUXlMbmtnS1RzS0NRbHlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JUY0dWamRXeGhjaUFyUFNCc2FXZG9kRU52Ykc5eUlDb2dabkpsYzI1bGJDQXFJRXhVUTE5RmRtRnNkV0YwWlNnZ2JtOXliV0ZzTENCMmFXVjNSR2x5TENCd2IzTnBkR2x2Yml3Z2JVbHVkaXdnY21WamRFTnZiM0prY3lBcE93b0pDWEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnS3owZ2JHbG5hSFJEYjJ4dmNpQXFJRzFoZEdWeWFXRnNMbVJwWm1aMWMyVkRiMnh2Y2lBcUlFeFVRMTlGZG1Gc2RXRjBaU2dnYm05eWJXRnNMQ0IyYVdWM1JHbHlMQ0J3YjNOcGRHbHZiaXdnYldGME15Z2dNUzR3SUNrc0lISmxZM1JEYjI5eVpITWdLVHNLQ1gwS0kyVnVaR2xtQ25admFXUWdVa1ZmUkdseVpXTjBYMUJvZVhOcFkyRnNLQ0JqYjI1emRDQnBiaUJKYm1OcFpHVnVkRXhwWjJoMElHUnBjbVZqZEV4cFoyaDBMQ0JqYjI1emRDQnBiaUJIWlc5dFpYUnlhV05EYjI1MFpYaDBJR2RsYjIxbGRISjVMQ0JqYjI1emRDQnBiaUJRYUhsemFXTmhiRTFoZEdWeWFXRnNJRzFoZEdWeWFXRnNMQ0JwYm05MWRDQlNaV1pzWldOMFpXUk1hV2RvZENCeVpXWnNaV04wWldSTWFXZG9kQ0FwSUhzS0NXWnNiMkYwSUdSdmRFNU1JRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2daMlZ2YldWMGNua3VibTl5YldGc0xDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1NBcE93b0pkbVZqTXlCcGNuSmhaR2xoYm1ObElEMGdaRzkwVGt3Z0tpQmthWEpsWTNSTWFXZG9kQzVqYjJ4dmNqc0tDU05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2drSlpteHZZWFFnWkc5MFRreGpZeUE5SUhOaGRIVnlZWFJsS0NCa2IzUW9JR2RsYjIxbGRISjVMbU5zWldGeVkyOWhkRTV2Y20xaGJDd2daR2x5WldOMFRHbG5hSFF1WkdseVpXTjBhVzl1SUNrZ0tUc0tDUWwyWldNeklHTmpTWEp5WVdScFlXNWpaU0E5SUdSdmRFNU1ZMk1nS2lCa2FYSmxZM1JNYVdkb2RDNWpiMnh2Y2pzS0NRbGpiR1ZoY21OdllYUlRjR1ZqZFd4aGNpQXJQU0JqWTBseWNtRmthV0Z1WTJVZ0tpQkNVa1JHWDBkSFdDZ2daR2x5WldOMFRHbG5hSFF1WkdseVpXTjBhVzl1TENCblpXOXRaWFJ5ZVM1MmFXVjNSR2x5TENCblpXOXRaWFJ5ZVM1amJHVmhjbU52WVhST2IzSnRZV3dzSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEVZd0xDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUkdPVEFzSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBcE93b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYMU5JUlVWT0Nna0pjMmhsWlc1VGNHVmpkV3hoY2lBclBTQnBjbkpoWkdsaGJtTmxJQ29nUWxKRVJsOVRhR1ZsYmlnZ1pHbHlaV04wVEdsbmFIUXVaR2x5WldOMGFXOXVMQ0JuWlc5dFpYUnllUzUyYVdWM1JHbHlMQ0JuWlc5dFpYUnllUzV1YjNKdFlXd3NJRzFoZEdWeWFXRnNMbk5vWldWdVEyOXNiM0lzSUcxaGRHVnlhV0ZzTG5Ob1pXVnVVbTkxWjJodVpYTnpJQ2s3Q2dralpXNWthV1lLQ1hKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRGTndaV04xYkdGeUlDczlJR2x5Y21Ga2FXRnVZMlVnS2lCQ1VrUkdYMGRIV0NnZ1pHbHlaV04wVEdsbmFIUXVaR2x5WldOMGFXOXVMQ0JuWlc5dFpYUnllUzUyYVdWM1JHbHlMQ0JuWlc5dFpYUnllUzV1YjNKdFlXd3NJRzFoZEdWeWFXRnNMbk53WldOMWJHRnlRMjlzYjNJc0lHMWhkR1Z5YVdGc0xuTndaV04xYkdGeVJqa3dMQ0J0WVhSbGNtbGhiQzV5YjNWbmFHNWxjM01nS1RzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmVEdGdFltVnlkQ2dnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDazdDbjBLZG05cFpDQlNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVmZVR2g1YzJsallXd29JR052Ym5OMElHbHVJSFpsWXpNZ2FYSnlZV1JwWVc1alpTd2dZMjl1YzNRZ2FXNGdSMlZ2YldWMGNtbGpRMjl1ZEdWNGRDQm5aVzl0WlhSeWVTd2dZMjl1YzNRZ2FXNGdVR2g1YzJsallXeE5ZWFJsY21saGJDQnRZWFJsY21saGJDd2dhVzV2ZFhRZ1VtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdLU0I3Q2dseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmVEdGdFltVnlkQ2dnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDazdDbjBLZG05cFpDQlNSVjlKYm1ScGNtVmpkRk53WldOMWJHRnlYMUJvZVhOcFkyRnNLQ0JqYjI1emRDQnBiaUIyWldNeklISmhaR2xoYm1ObExDQmpiMjV6ZENCcGJpQjJaV016SUdseWNtRmthV0Z1WTJVc0lHTnZibk4wSUdsdUlIWmxZek1nWTJ4bFlYSmpiMkYwVW1Ga2FXRnVZMlVzSUdOdmJuTjBJR2x1SUVkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbmtzSUdOdmJuTjBJR2x1SUZCb2VYTnBZMkZzVFdGMFpYSnBZV3dnYldGMFpYSnBZV3dzSUdsdWIzVjBJRkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwS1NCN0Nna2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWQW9KQ1dOc1pXRnlZMjloZEZOd1pXTjFiR0Z5SUNzOUlHTnNaV0Z5WTI5aGRGSmhaR2xoYm1ObElDb2dSVzUyYVhKdmJtMWxiblJDVWtSR0tDQm5aVzl0WlhSeWVTNWpiR1ZoY21OdllYUk9iM0p0WVd3c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJc0lHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRFWXdMQ0J0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFJHT1RBc0lHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5QXBPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdWVk5GWDFOSVJVVk9DZ2tKYzJobFpXNVRjR1ZqZFd4aGNpQXJQU0JwY25KaFpHbGhibU5sSUNvZ2JXRjBaWEpwWVd3dWMyaGxaVzVEYjJ4dmNpQXFJRWxDVEZOb1pXVnVRbEpFUmlnZ1oyVnZiV1YwY25rdWJtOXliV0ZzTENCblpXOXRaWFJ5ZVM1MmFXVjNSR2x5TENCdFlYUmxjbWxoYkM1emFHVmxibEp2ZFdkb2JtVnpjeUFwT3dvSkkyVnVaR2xtQ2dsMlpXTXpJSE5wYm1kc1pWTmpZWFIwWlhKcGJtY2dQU0IyWldNektDQXdMakFnS1RzS0NYWmxZek1nYlhWc2RHbFRZMkYwZEdWeWFXNW5JRDBnZG1Wak15Z2dNQzR3SUNrN0NnbDJaV016SUdOdmMybHVaVmRsYVdkb2RHVmtTWEp5WVdScFlXNWpaU0E5SUdseWNtRmthV0Z1WTJVZ0tpQlNSVU5KVUZKUFEwRk1YMUJKT3dvSlkyOXRjSFYwWlUxMWJIUnBjMk5oZEhSbGNtbHVaeWdnWjJWdmJXVjBjbmt1Ym05eWJXRnNMQ0JuWlc5dFpYUnllUzUyYVdWM1JHbHlMQ0J0WVhSbGNtbGhiQzV6Y0dWamRXeGhja052Ykc5eUxDQnRZWFJsY21saGJDNXpjR1ZqZFd4aGNrWTVNQ3dnYldGMFpYSnBZV3d1Y205MVoyaHVaWE56TENCemFXNW5iR1ZUWTJGMGRHVnlhVzVuTENCdGRXeDBhVk5qWVhSMFpYSnBibWNnS1RzS0NYWmxZek1nWkdsbVpuVnpaU0E5SUcxaGRHVnlhV0ZzTG1ScFptWjFjMlZEYjJ4dmNpQXFJQ2dnTVM0d0lDMGdLQ0J6YVc1bmJHVlRZMkYwZEdWeWFXNW5JQ3NnYlhWc2RHbFRZMkYwZEdWeWFXNW5JQ2tnS1RzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wVTNCbFkzVnNZWElnS3owZ2NtRmthV0Z1WTJVZ0tpQnphVzVuYkdWVFkyRjBkR1Z5YVc1bk93b0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSVGNHVmpkV3hoY2lBclBTQnRkV3gwYVZOallYUjBaWEpwYm1jZ0tpQmpiM05wYm1WWFpXbG5hSFJsWkVseWNtRmthV0Z1WTJVN0NnbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3owZ1pHbG1ablZ6WlNBcUlHTnZjMmx1WlZkbGFXZG9kR1ZrU1hKeVlXUnBZVzVqWlRzS2ZRb2paR1ZtYVc1bElGSkZYMFJwY21WamRBa0pDUWxTUlY5RWFYSmxZM1JmVUdoNWMybGpZV3dLSTJSbFptbHVaU0JTUlY5RWFYSmxZM1JmVW1WamRFRnlaV0VKQ1ZKRlgwUnBjbVZqZEY5U1pXTjBRWEpsWVY5UWFIbHphV05oYkFvalpHVm1hVzVsSUZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlFrSlVrVmZTVzVrYVhKbFkzUkVhV1ptZFhObFgxQm9lWE5wWTJGc0NpTmtaV1pwYm1VZ1VrVmZTVzVrYVhKbFkzUlRjR1ZqZFd4aGNna0pVa1ZmU1c1a2FYSmxZM1JUY0dWamRXeGhjbDlRYUhsemFXTmhiQXBtYkc5aGRDQmpiMjF3ZFhSbFUzQmxZM1ZzWVhKUFkyTnNkWE5wYjI0b0lHTnZibk4wSUdsdUlHWnNiMkYwSUdSdmRFNVdMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQmhiV0pwWlc1MFQyTmpiSFZ6YVc5dUxDQmpiMjV6ZENCcGJpQm1iRzloZENCeWIzVm5hRzVsYzNNZ0tTQjdDZ2x5WlhSMWNtNGdjMkYwZFhKaGRHVW9JSEJ2ZHlnZ1pHOTBUbFlnS3lCaGJXSnBaVzUwVDJOamJIVnphVzl1TENCbGVIQXlLQ0F0SURFMkxqQWdLaUJ5YjNWbmFHNWxjM01nTFNBeExqQWdLU0FwSUMwZ01TNHdJQ3NnWVcxaWFXVnVkRTlqWTJ4MWMybHZiaUFwT3dwOVlDd2dkWEFnUFNCZ0NrZGxiMjFsZEhKcFkwTnZiblJsZUhRZ1oyVnZiV1YwY25rN0NtZGxiMjFsZEhKNUxuQnZjMmwwYVc5dUlEMGdMU0IyVm1sbGQxQnZjMmwwYVc5dU93cG5aVzl0WlhSeWVTNXViM0p0WVd3Z1BTQnViM0p0WVd3N0NtZGxiMjFsZEhKNUxuWnBaWGRFYVhJZ1BTQW9JR2x6VDNKMGFHOW5jbUZ3YUdsaklDa2dQeUIyWldNektDQXdMQ0F3TENBeElDa2dPaUJ1YjNKdFlXeHBlbVVvSUhaV2FXVjNVRzl6YVhScGIyNGdLVHNLSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZRS0NXZGxiMjFsZEhKNUxtTnNaV0Z5WTI5aGRFNXZjbTFoYkNBOUlHTnNaV0Z5WTI5aGRFNXZjbTFoYkRzS0kyVnVaR2xtQ2tsdVkybGtaVzUwVEdsbmFIUWdaR2x5WldOMFRHbG5hSFE3Q2lOcFppQW9JRTVWVFY5UVQwbE9WRjlNU1VkSVZGTWdQaUF3SUNrZ0ppWWdaR1ZtYVc1bFpDZ2dVa1ZmUkdseVpXTjBJQ2tLQ1ZCdmFXNTBUR2xuYUhRZ2NHOXBiblJNYVdkb2REc0tDU05wWmlCa1pXWnBibVZrS0NCVlUwVmZVMGhCUkU5WFRVRlFJQ2tnSmlZZ1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0NnbFFiMmx1ZEV4cFoyaDBVMmhoWkc5M0lIQnZhVzUwVEdsbmFIUlRhR0ZrYjNjN0Nna2paVzVrYVdZS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5UVQwbE9WRjlNU1VkSVZGTTdJR2tnS3lzZ0tTQjdDZ2tKY0c5cGJuUk1hV2RvZENBOUlIQnZhVzUwVEdsbmFIUnpXeUJwSUYwN0Nna0paMlYwVUc5cGJuUk1hV2RvZEVsdVptOG9JSEJ2YVc1MFRHbG5hSFFzSUdkbGIyMWxkSEo1TENCa2FYSmxZM1JNYVdkb2RDQXBPd29KQ1NOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVTBoQlJFOVhUVUZRSUNrZ0ppWWdLQ0JWVGxKUFRFeEZSRjlNVDA5UVgwbE9SRVZZSUR3Z1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nS1FvSkNYQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ1BTQndiMmx1ZEV4cFoyaDBVMmhoWkc5M2Mxc2dhU0JkT3dvSkNXUnBjbVZqZEV4cFoyaDBMbU52Ykc5eUlDbzlJR0ZzYkNnZ1luWmxZeklvSUdScGNtVmpkRXhwWjJoMExuWnBjMmxpYkdVc0lISmxZMlZwZG1WVGFHRmtiM2NnS1NBcElEOGdaMlYwVUc5cGJuUlRhR0ZrYjNjb0lIQnZhVzUwVTJoaFpHOTNUV0Z3V3lCcElGMHNJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzY3VjMmhoWkc5M1RXRndVMmw2WlN3Z2NHOXBiblJNYVdkb2RGTm9ZV1J2ZHk1emFHRmtiM2RDYVdGekxDQndiMmx1ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDFKaFpHbDFjeXdnZGxCdmFXNTBVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTd2djRzlwYm5STWFXZG9kRk5vWVdSdmR5NXphR0ZrYjNkRFlXMWxjbUZPWldGeUxDQndiMmx1ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDBOaGJXVnlZVVpoY2lBcElEb2dNUzR3T3dvSkNTTmxibVJwWmdvSkNWSkZYMFJwY21WamRDZ2daR2x5WldOMFRHbG5hSFFzSUdkbGIyMWxkSEo1TENCdFlYUmxjbWxoYkN3Z2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1RzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0NpTmxibVJwWmdvamFXWWdLQ0JPVlUxZlUxQlBWRjlNU1VkSVZGTWdQaUF3SUNrZ0ppWWdaR1ZtYVc1bFpDZ2dVa1ZmUkdseVpXTjBJQ2tLQ1ZOd2IzUk1hV2RvZENCemNHOTBUR2xuYUhRN0Nna2phV1lnWkdWbWFXNWxaQ2dnVlZORlgxTklRVVJQVjAxQlVDQXBJQ1ltSUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dsVGNHOTBUR2xuYUhSVGFHRmtiM2NnYzNCdmRFeHBaMmgwVTJoaFpHOTNPd29KSTJWdVpHbG1DZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZVMUJQVkY5TVNVZElWRk03SUdrZ0t5c2dLU0I3Q2drSmMzQnZkRXhwWjJoMElEMGdjM0J2ZEV4cFoyaDBjMXNnYVNCZE93b0pDV2RsZEZOd2IzUk1hV2RvZEVsdVptOG9JSE53YjNSTWFXZG9kQ3dnWjJWdmJXVjBjbmtzSUdScGNtVmpkRXhwWjJoMElDazdDZ2tKSTJsbUlHUmxabWx1WldRb0lGVlRSVjlUU0VGRVQxZE5RVkFnS1NBbUppQW9JRlZPVWs5TVRFVkVYMHhQVDFCZlNVNUVSVmdnUENCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJQ2tLQ1FsemNHOTBUR2xuYUhSVGFHRmtiM2NnUFNCemNHOTBUR2xuYUhSVGFHRmtiM2R6V3lCcElGMDdDZ2tKWkdseVpXTjBUR2xuYUhRdVkyOXNiM0lnS2owZ1lXeHNLQ0JpZG1Wak1pZ2daR2x5WldOMFRHbG5hSFF1ZG1semFXSnNaU3dnY21WalpXbDJaVk5vWVdSdmR5QXBJQ2tnUHlCblpYUlRhR0ZrYjNjb0lITndiM1JUYUdGa2IzZE5ZWEJiSUdrZ1hTd2djM0J2ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDAxaGNGTnBlbVVzSUhOd2IzUk1hV2RvZEZOb1lXUnZkeTV6YUdGa2IzZENhV0Z6TENCemNHOTBUR2xuYUhSVGFHRmtiM2N1YzJoaFpHOTNVbUZrYVhWekxDQjJVM0J2ZEZOb1lXUnZkME52YjNKa1d5QnBJRjBnS1NBNklERXVNRHNLQ1FralpXNWthV1lLQ1FsU1JWOUVhWEpsWTNRb0lHUnBjbVZqZEV4cFoyaDBMQ0JuWlc5dFpYUnllU3dnYldGMFpYSnBZV3dzSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2s3Q2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvalpXNWthV1lLSTJsbUlDZ2dUbFZOWDBSSlVsOU1TVWRJVkZNZ1BpQXdJQ2tnSmlZZ1pHVm1hVzVsWkNnZ1VrVmZSR2x5WldOMElDa0tDVVJwY21WamRHbHZibUZzVEdsbmFIUWdaR2x5WldOMGFXOXVZV3hNYVdkb2REc0tDU05wWmlCa1pXWnBibVZrS0NCVlUwVmZVMGhCUkU5WFRVRlFJQ2tnSmlZZ1RsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSlJHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkeUJrYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M093b0pJMlZ1WkdsbUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlJFbFNYMHhKUjBoVVV6c2dhU0FyS3lBcElIc0tDUWxrYVhKbFkzUnBiMjVoYkV4cFoyaDBJRDBnWkdseVpXTjBhVzl1WVd4TWFXZG9kSE5iSUdrZ1hUc0tDUWxuWlhSRWFYSmxZM1JwYjI1aGJFeHBaMmgwU1c1bWJ5Z2daR2x5WldOMGFXOXVZV3hNYVdkb2RDd2daMlZ2YldWMGNua3NJR1JwY21WamRFeHBaMmgwSUNrN0Nna0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOVRTRUZFVDFkTlFWQWdLU0FtSmlBb0lGVk9VazlNVEVWRVgweFBUMUJmU1U1RVJWZ2dQQ0JPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ0tRb0pDV1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNjZ1BTQmthWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzYzFzZ2FTQmRPd29KQ1dScGNtVmpkRXhwWjJoMExtTnZiRzl5SUNvOUlHRnNiQ2dnWW5abFl6SW9JR1JwY21WamRFeHBaMmgwTG5acGMybGliR1VzSUhKbFkyVnBkbVZUYUdGa2IzY2dLU0FwSUQ4Z1oyVjBVMmhoWkc5M0tDQmthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjRnNnYVNCZExDQmthWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkMDFoY0ZOcGVtVXNJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNjdWMyaGhaRzkzUW1saGN5d2daR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZHk1emFHRmtiM2RTWVdScGRYTXNJSFpFYVhKbFkzUnBiMjVoYkZOb1lXUnZkME52YjNKa1d5QnBJRjBnS1NBNklERXVNRHNLQ1FralpXNWthV1lLQ1FsU1JWOUVhWEpsWTNRb0lHUnBjbVZqZEV4cFoyaDBMQ0JuWlc5dFpYUnllU3dnYldGMFpYSnBZV3dzSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2s3Q2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvalpXNWthV1lLSTJsbUlDZ2dUbFZOWDFKRlExUmZRVkpGUVY5TVNVZElWRk1nUGlBd0lDa2dKaVlnWkdWbWFXNWxaQ2dnVWtWZlJHbHlaV04wWDFKbFkzUkJjbVZoSUNrS0NWSmxZM1JCY21WaFRHbG5hSFFnY21WamRFRnlaV0ZNYVdkb2REc0tDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUU1VlRWOVNSVU5VWDBGU1JVRmZURWxIU0ZSVE95QnBJQ3NySUNrZ2V3b0pDWEpsWTNSQmNtVmhUR2xuYUhRZ1BTQnlaV04wUVhKbFlVeHBaMmgwYzFzZ2FTQmRPd29KQ1ZKRlgwUnBjbVZqZEY5U1pXTjBRWEpsWVNnZ2NtVmpkRUZ5WldGTWFXZG9kQ3dnWjJWdmJXVjBjbmtzSUcxaGRHVnlhV0ZzTENCeVpXWnNaV04wWldSTWFXZG9kQ0FwT3dvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0kyVnVaR2xtQ2lOcFppQmtaV1pwYm1Wa0tDQlNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVWdLUW9KZG1Wak15QnBZbXhKY25KaFpHbGhibU5sSUQwZ2RtVmpNeWdnTUM0d0lDazdDZ2wyWldNeklHbHljbUZrYVdGdVkyVWdQU0JuWlhSQmJXSnBaVzUwVEdsbmFIUkpjbkpoWkdsaGJtTmxLQ0JoYldKcFpXNTBUR2xuYUhSRGIyeHZjaUFwT3dvSmFYSnlZV1JwWVc1alpTQXJQU0JuWlhSTWFXZG9kRkJ5YjJKbFNYSnlZV1JwWVc1alpTZ2diR2xuYUhSUWNtOWlaU3dnWjJWdmJXVjBjbmt1Ym05eWJXRnNJQ2s3Q2dramFXWWdLQ0JPVlUxZlNFVk5TVjlNU1VkSVZGTWdQaUF3SUNrS0NRa2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENna0pabTl5SUNnZ2FXNTBJR2tnUFNBd095QnBJRHdnVGxWTlgwaEZUVWxmVEVsSFNGUlRPeUJwSUNzcklDa2dld29KQ1FscGNuSmhaR2xoYm1ObElDczlJR2RsZEVobGJXbHpjR2hsY21WTWFXZG9kRWx5Y21Ga2FXRnVZMlVvSUdobGJXbHpjR2hsY21WTWFXZG9kSE5iSUdrZ1hTd2daMlZ2YldWMGNua3VibTl5YldGc0lDazdDZ2tKZlFvSkNTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2dralpXNWthV1lLSTJWdVpHbG1DaU5wWmlCa1pXWnBibVZrS0NCU1JWOUpibVJwY21WamRGTndaV04xYkdGeUlDa0tDWFpsWXpNZ2NtRmthV0Z1WTJVZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1habFl6TWdZMnhsWVhKamIyRjBVbUZrYVdGdVkyVWdQU0IyWldNektDQXdMakFnS1RzS0kyVnVaR2xtWUN3Z1pIQWdQU0JnSTJsbUlHUmxabWx1WldRb0lGSkZYMGx1WkdseVpXTjBSR2xtWm5WelpTQXBDZ2tqYVdaa1pXWWdWVk5GWDB4SlIwaFVUVUZRQ2drSmRtVmpOQ0JzYVdkb2RFMWhjRlJsZUdWc0lEMGdkR1Y0ZEhWeVpUSkVLQ0JzYVdkb2RFMWhjQ3dnZGxWMk1pQXBPd29KQ1habFl6TWdiR2xuYUhSTllYQkpjbkpoWkdsaGJtTmxJRDBnYkdsbmFIUk5ZWEJVWlhobGJGUnZUR2x1WldGeUtDQnNhV2RvZEUxaGNGUmxlR1ZzSUNrdWNtZGlJQ29nYkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGs3Q2drSkkybG1ibVJsWmlCUVNGbFRTVU5CVEV4WlgwTlBVbEpGUTFSZlRFbEhTRlJUQ2drSkNXeHBaMmgwVFdGd1NYSnlZV1JwWVc1alpTQXFQU0JRU1RzS0NRa2paVzVrYVdZS0NRbHBjbkpoWkdsaGJtTmxJQ3M5SUd4cFoyaDBUV0Z3U1hKeVlXUnBZVzVqWlRzS0NTTmxibVJwWmdvSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5RlRsWk5RVkFnS1NBbUppQmtaV1pwYm1Wa0tDQlRWRUZPUkVGU1JDQXBJQ1ltSUdSbFptbHVaV1FvSUVWT1ZrMUJVRjlVV1ZCRlgwTlZRa1ZmVlZZZ0tRb0pDV2xpYkVseWNtRmthV0Z1WTJVZ0t6MGdaMlYwU1VKTVNYSnlZV1JwWVc1alpTZ2daMlZ2YldWMGNua3VibTl5YldGc0lDazdDZ2tqWlc1a2FXWUtJMlZ1WkdsbUNpTnBaaUJrWldacGJtVmtLQ0JWVTBWZlJVNVdUVUZRSUNrZ0ppWWdaR1ZtYVc1bFpDZ2dVa1ZmU1c1a2FYSmxZM1JUY0dWamRXeGhjaUFwQ2dseVlXUnBZVzVqWlNBclBTQm5aWFJKUWt4U1lXUnBZVzVqWlNnZ1oyVnZiV1YwY25rdWRtbGxkMFJwY2l3Z1oyVnZiV1YwY25rdWJtOXliV0ZzTENCdFlYUmxjbWxoYkM1eWIzVm5hRzVsYzNNZ0tUc0tDU05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2drSlkyeGxZWEpqYjJGMFVtRmthV0Z1WTJVZ0t6MGdaMlYwU1VKTVVtRmthV0Z1WTJVb0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJc0lHZGxiMjFsZEhKNUxtTnNaV0Z5WTI5aGRFNXZjbTFoYkN3Z2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklDazdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dabkFnUFNCZ0kybG1JR1JsWm1sdVpXUW9JRkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaU0FwQ2dsU1JWOUpibVJwY21WamRFUnBabVoxYzJVb0lHbHljbUZrYVdGdVkyVXNJR2RsYjIxbGRISjVMQ0J0WVhSbGNtbGhiQ3dnY21WbWJHVmpkR1ZrVEdsbmFIUWdLVHNLSTJWdVpHbG1DaU5wWmlCa1pXWnBibVZrS0NCU1JWOUpibVJwY21WamRGTndaV04xYkdGeUlDa0tDVkpGWDBsdVpHbHlaV04wVTNCbFkzVnNZWElvSUhKaFpHbGhibU5sTENCcFlteEpjbkpoWkdsaGJtTmxMQ0JqYkdWaGNtTnZZWFJTWVdScFlXNWpaU3dnWjJWdmJXVjBjbmtzSUcxaGRHVnlhV0ZzTENCeVpXWnNaV04wWldSTWFXZG9kQ0FwT3dvalpXNWthV1pnTENCd2NDQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMHhQUjBSRlVGUklRbFZHSUNrZ0ppWWdaR1ZtYVc1bFpDZ2dWVk5GWDB4UFIwUkZVRlJJUWxWR1gwVllWQ0FwQ2dsbmJGOUdjbUZuUkdWd2RHaEZXRlFnUFNCMlNYTlFaWEp6Y0dWamRHbDJaU0E5UFNBd0xqQWdQeUJuYkY5R2NtRm5RMjl2Y21RdWVpQTZJR3h2WnpJb0lIWkdjbUZuUkdWd2RHZ2dLU0FxSUd4dlowUmxjSFJvUW5WbVJrTWdLaUF3TGpVN0NpTmxibVJwWm1Bc0lHMXdJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVEU5SFJFVlFWRWhDVlVZZ0tTQW1KaUJrWldacGJtVmtLQ0JWVTBWZlRFOUhSRVZRVkVoQ1ZVWmZSVmhVSUNrS0NYVnVhV1p2Y20wZ1pteHZZWFFnYkc5blJHVndkR2hDZFdaR1F6c0tDWFpoY25scGJtY2dabXh2WVhRZ2RrWnlZV2RFWlhCMGFEc0tDWFpoY25scGJtY2dabXh2WVhRZ2RrbHpVR1Z5YzNCbFkzUnBkbVU3Q2lObGJtUnBabUFzSUdkd0lEMGdZQ05wWm1SbFppQlZVMFZmVEU5SFJFVlFWRWhDVlVZS0NTTnBabVJsWmlCVlUwVmZURTlIUkVWUVZFaENWVVpmUlZoVUNna0pkbUZ5ZVdsdVp5Qm1iRzloZENCMlJuSmhaMFJsY0hSb093b0pDWFpoY25scGJtY2dabXh2WVhRZ2RrbHpVR1Z5YzNCbFkzUnBkbVU3Q2dralpXeHpaUW9KQ1hWdWFXWnZjbTBnWm14dllYUWdiRzluUkdWd2RHaENkV1pHUXpzS0NTTmxibVJwWmdvalpXNWthV1pnTENCNGNDQTlJR0FqYVdaa1pXWWdWVk5GWDB4UFIwUkZVRlJJUWxWR0Nna2phV1prWldZZ1ZWTkZYMHhQUjBSRlVGUklRbFZHWDBWWVZBb0pDWFpHY21GblJHVndkR2dnUFNBeExqQWdLeUJuYkY5UWIzTnBkR2x2Ymk1M093b0pDWFpKYzFCbGNuTndaV04wYVhabElEMGdabXh2WVhRb0lHbHpVR1Z5YzNCbFkzUnBkbVZOWVhSeWFYZ29JSEJ5YjJwbFkzUnBiMjVOWVhSeWFYZ2dLU0FwT3dvSkkyVnNjMlVLQ1FscFppQW9JR2x6VUdWeWMzQmxZM1JwZG1WTllYUnlhWGdvSUhCeWIycGxZM1JwYjI1TllYUnlhWGdnS1NBcElIc0tDUWtKWjJ4ZlVHOXphWFJwYjI0dWVpQTlJR3h2WnpJb0lHMWhlQ2dnUlZCVFNVeFBUaXdnWjJ4ZlVHOXphWFJwYjI0dWR5QXJJREV1TUNBcElDa2dLaUJzYjJkRVpYQjBhRUoxWmtaRElDMGdNUzR3T3dvSkNRbG5iRjlRYjNOcGRHbHZiaTU2SUNvOUlHZHNYMUJ2YzJsMGFXOXVMbmM3Q2drSmZRb0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lIbHdJRDBnWUNOcFptUmxaaUJWVTBWZlRVRlFDZ2wyWldNMElIUmxlR1ZzUTI5c2IzSWdQU0IwWlhoMGRYSmxNa1FvSUcxaGNDd2dkbFYySUNrN0NnbDBaWGhsYkVOdmJHOXlJRDBnYldGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnZEdWNFpXeERiMnh2Y2lBcE93b0paR2xtWm5WelpVTnZiRzl5SUNvOUlIUmxlR1ZzUTI5c2IzSTdDaU5sYm1ScFptQXNJSFp3SUQwZ1lDTnBabVJsWmlCVlUwVmZUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCdFlYQTdDaU5sYm1ScFptQXNJRjl3SUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlRVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1ZWTkZYMEZNVUVoQlRVRlFJQ2tLQ1habFl6SWdkWFlnUFNBb0lIVjJWSEpoYm5ObWIzSnRJQ29nZG1Wak15Z2daMnhmVUc5cGJuUkRiMjl5WkM1NExDQXhMakFnTFNCbmJGOVFiMmx1ZEVOdmIzSmtMbmtzSURFZ0tTQXBMbmg1T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5TlFWQUtDWFpsWXpRZ2JXRndWR1Y0Wld3Z1BTQjBaWGgwZFhKbE1rUW9JRzFoY0N3Z2RYWWdLVHNLQ1dScFptWjFjMlZEYjJ4dmNpQXFQU0J0WVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0J0WVhCVVpYaGxiQ0FwT3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5QlRGQklRVTFCVUFvSlpHbG1ablZ6WlVOdmJHOXlMbUVnS2owZ2RHVjRkSFZ5WlRKRUtDQmhiSEJvWVUxaGNDd2dkWFlnS1M1bk93b2paVzVrYVdaZ0xDQk5jQ0E5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDAxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZWVFJWOUJURkJJUVUxQlVDQXBDZ2wxYm1sbWIzSnRJRzFoZERNZ2RYWlVjbUZ1YzJadmNtMDdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMDFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2JXRndPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlCVEZCSVFVMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWVd4d2FHRk5ZWEE3Q2lObGJtUnBabUFzSUdKd0lEMGdZR1pzYjJGMElHMWxkR0ZzYm1WemMwWmhZM1J2Y2lBOUlHMWxkR0ZzYm1WemN6c0tJMmxtWkdWbUlGVlRSVjlOUlZSQlRFNUZVMU5OUVZBS0NYWmxZelFnZEdWNFpXeE5aWFJoYkc1bGMzTWdQU0IwWlhoMGRYSmxNa1FvSUcxbGRHRnNibVZ6YzAxaGNDd2dkbFYySUNrN0NnbHRaWFJoYkc1bGMzTkdZV04wYjNJZ0tqMGdkR1Y0Wld4TlpYUmhiRzVsYzNNdVlqc0tJMlZ1WkdsbVlDd2dkM0FnUFNCZ0kybG1aR1ZtSUZWVFJWOU5SVlJCVEU1RlUxTk5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUcxbGRHRnNibVZ6YzAxaGNEc0tJMlZ1WkdsbVlDd2dVM0FnUFNCZ0kybG1aR1ZtSUZWVFJWOU5UMUpRU0U1UFVrMUJURk1LQ1c5aWFtVmpkRTV2Y20xaGJDQXFQU0J0YjNKd2FGUmhjbWRsZEVKaGMyVkpibVpzZFdWdVkyVTdDZ2tqYVdaa1pXWWdUVTlTVUVoVVFWSkhSVlJUWDFSRldGUlZVa1VLQ1FsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk5UMUpRU0ZSQlVrZEZWRk5mUTA5VlRsUTdJR2tnS3lzZ0tTQjdDZ2tKQ1dsbUlDZ2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lCcElGMGdQaUF3TGpBZ0tTQnZZbXBsWTNST2IzSnRZV3dnS3owZ1oyVjBUVzl5Y0dnb0lHZHNYMVpsY25SbGVFbEVMQ0JwTENBeExDQXlJQ2tnS2lCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJR2tnWFRzS0NRbDlDZ2tqWld4elpRb0pDVzlpYW1WamRFNXZjbTFoYkNBclBTQnRiM0p3YUU1dmNtMWhiREFnS2lCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJREFnWFRzS0NRbHZZbXBsWTNST2IzSnRZV3dnS3owZ2JXOXljR2hPYjNKdFlXd3hJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QXhJRjA3Q2drSmIySnFaV04wVG05eWJXRnNJQ3M5SUcxdmNuQm9UbTl5YldGc01pQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ01pQmRPd29KQ1c5aWFtVmpkRTV2Y20xaGJDQXJQU0J0YjNKd2FFNXZjbTFoYkRNZ0tpQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSURNZ1hUc0tDU05sYm1ScFpnb2paVzVrYVdaZ0xDQlVjQ0E5SUdBamFXWmtaV1lnVlZORlgwMVBVbEJJVkVGU1IwVlVVd29KZFc1cFptOXliU0JtYkc5aGRDQnRiM0p3YUZSaGNtZGxkRUpoYzJWSmJtWnNkV1Z1WTJVN0Nna2phV1prWldZZ1RVOVNVRWhVUVZKSFJWUlRYMVJGV0ZSVlVrVUtDUWwxYm1sbWIzSnRJR1pzYjJGMElHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnVFU5U1VFaFVRVkpIUlZSVFgwTlBWVTVVSUYwN0Nna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUkJjbkpoZVNCdGIzSndhRlJoY21kbGRITlVaWGgwZFhKbE93b0pDWFZ1YVdadmNtMGdkbVZqTWlCdGIzSndhRlJoY21kbGRITlVaWGgwZFhKbFUybDZaVHNLQ1FsMlpXTXpJR2RsZEUxdmNuQm9LQ0JqYjI1emRDQnBiaUJwYm5RZ2RtVnlkR1Y0U1c1a1pYZ3NJR052Ym5OMElHbHVJR2x1ZENCdGIzSndhRlJoY21kbGRFbHVaR1Y0TENCamIyNXpkQ0JwYmlCcGJuUWdiMlptYzJWMExDQmpiMjV6ZENCcGJpQnBiblFnYzNSeWFXUmxJQ2tnZXdvSkNRbG1iRzloZENCMFpYaGxiRWx1WkdWNElEMGdabXh2WVhRb0lIWmxjblJsZUVsdVpHVjRJQ29nYzNSeWFXUmxJQ3NnYjJabWMyVjBJQ2s3Q2drSkNXWnNiMkYwSUhrZ1BTQm1iRzl2Y2lnZ2RHVjRaV3hKYm1SbGVDQXZJRzF2Y25Cb1ZHRnlaMlYwYzFSbGVIUjFjbVZUYVhwbExuZ2dLVHNLQ1FrSlpteHZZWFFnZUNBOUlIUmxlR1ZzU1c1a1pYZ2dMU0I1SUNvZ2JXOXljR2hVWVhKblpYUnpWR1Y0ZEhWeVpWTnBlbVV1ZURzS0NRa0pkbVZqTXlCdGIzSndhRlZXSUQwZ2RtVmpNeWdnS0NCNElDc2dNQzQxSUNrZ0x5QnRiM0p3YUZSaGNtZGxkSE5VWlhoMGRYSmxVMmw2WlM1NExDQjVJQzhnYlc5eWNHaFVZWEpuWlhSelZHVjRkSFZ5WlZOcGVtVXVlU3dnYlc5eWNHaFVZWEpuWlhSSmJtUmxlQ0FwT3dvSkNRbHlaWFIxY200Z2RHVjRkSFZ5WlNnZ2JXOXljR2hVWVhKblpYUnpWR1Y0ZEhWeVpTd2diVzl5Y0doVlZpQXBMbmg1ZWpzS0NRbDlDZ2tqWld4elpRb0pDU05wWm01a1pXWWdWVk5GWDAxUFVsQklUazlTVFVGTVV3b0pDUWwxYm1sbWIzSnRJR1pzYjJGMElHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnT0NCZE93b0pDU05sYkhObENna0pDWFZ1YVdadmNtMGdabXh2WVhRZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUEwSUYwN0Nna0pJMlZ1WkdsbUNna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1JYQWdQU0JnSTJsbVpHVm1JRlZUUlY5TlQxSlFTRlJCVWtkRlZGTUtDWFJ5WVc1elptOXliV1ZrSUNvOUlHMXZjbkJvVkdGeVoyVjBRbUZ6WlVsdVpteDFaVzVqWlRzS0NTTnBabVJsWmlCTlQxSlFTRlJCVWtkRlZGTmZWRVZZVkZWU1JRb0pDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUUxUFVsQklWRUZTUjBWVVUxOURUMVZPVkRzZ2FTQXJLeUFwSUhzS0NRa0pJMmxtYm1SbFppQlZVMFZmVFU5U1VFaE9UMUpOUVV4VENna0pDUWxwWmlBb0lHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnYVNCZElENGdNQzR3SUNrZ2RISmhibk5tYjNKdFpXUWdLejBnWjJWMFRXOXljR2dvSUdkc1gxWmxjblJsZUVsRUxDQnBMQ0F3TENBeElDa2dLaUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklHa2dYVHNLQ1FrSkkyVnNjMlVLQ1FrSkNXbG1JQ2dnYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QnBJRjBnUGlBd0xqQWdLU0IwY21GdWMyWnZjbTFsWkNBclBTQm5aWFJOYjNKd2FDZ2daMnhmVm1WeWRHVjRTVVFzSUdrc0lEQXNJRElnS1NBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnYVNCZE93b0pDUWtqWlc1a2FXWUtDUWw5Q2dralpXeHpaUW9KQ1hSeVlXNXpabTl5YldWa0lDczlJRzF2Y25Cb1ZHRnlaMlYwTUNBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTUNCZE93b0pDWFJ5WVc1elptOXliV1ZrSUNzOUlHMXZjbkJvVkdGeVoyVjBNU0FxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dNU0JkT3dvSkNYUnlZVzV6Wm05eWJXVmtJQ3M5SUcxdmNuQm9WR0Z5WjJWME1pQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ01pQmRPd29KQ1hSeVlXNXpabTl5YldWa0lDczlJRzF2Y25Cb1ZHRnlaMlYwTXlBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTXlCZE93b0pDU05wWm01a1pXWWdWVk5GWDAxUFVsQklUazlTVFVGTVV3b0pDUWwwY21GdWMyWnZjbTFsWkNBclBTQnRiM0p3YUZSaGNtZGxkRFFnS2lCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJRFFnWFRzS0NRa0pkSEpoYm5ObWIzSnRaV1FnS3owZ2JXOXljR2hVWVhKblpYUTFJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QTFJRjA3Q2drSkNYUnlZVzV6Wm05eWJXVmtJQ3M5SUcxdmNuQm9WR0Z5WjJWME5pQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ05pQmRPd29KQ1FsMGNtRnVjMlp2Y20xbFpDQXJQU0J0YjNKd2FGUmhjbWRsZERjZ0tpQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSURjZ1hUc0tDUWtqWlc1a2FXWUtDU05sYm1ScFpnb2paVzVrYVdaZ0xDQkJjQ0E5SUdCbWJHOWhkQ0JtWVdObFJHbHlaV04wYVc5dUlEMGdaMnhmUm5KdmJuUkdZV05wYm1jZ1B5QXhMakFnT2lBdElERXVNRHNLSTJsbVpHVm1JRVpNUVZSZlUwaEJSRVZFQ2dsMlpXTXpJR1prZUNBOUlIWmxZek1vSUdSR1pIZ29JSFpXYVdWM1VHOXphWFJwYjI0dWVDQXBMQ0JrUm1SNEtDQjJWbWxsZDFCdmMybDBhVzl1TG5rZ0tTd2daRVprZUNnZ2RsWnBaWGRRYjNOcGRHbHZiaTU2SUNrZ0tUc0tDWFpsWXpNZ1ptUjVJRDBnZG1Wak15Z2daRVprZVNnZ2RsWnBaWGRRYjNOcGRHbHZiaTU0SUNrc0lHUkdaSGtvSUhaV2FXVjNVRzl6YVhScGIyNHVlU0FwTENCa1JtUjVLQ0IyVm1sbGQxQnZjMmwwYVc5dUxub2dLU0FwT3dvSmRtVmpNeUJ1YjNKdFlXd2dQU0J1YjNKdFlXeHBlbVVvSUdOeWIzTnpLQ0JtWkhnc0lHWmtlU0FwSUNrN0NpTmxiSE5sQ2dsMlpXTXpJRzV2Y20xaGJDQTlJRzV2Y20xaGJHbDZaU2dnZGs1dmNtMWhiQ0FwT3dvSkkybG1aR1ZtSUVSUFZVSk1SVjlUU1VSRlJBb0pDVzV2Y20xaGJDQTlJRzV2Y20xaGJDQXFJR1poWTJWRWFYSmxZM1JwYjI0N0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZWRUZPUjBWT1ZBb0pDWFpsWXpNZ2RHRnVaMlZ1ZENBOUlHNXZjbTFoYkdsNlpTZ2dkbFJoYm1kbGJuUWdLVHNLQ1FsMlpXTXpJR0pwZEdGdVoyVnVkQ0E5SUc1dmNtMWhiR2w2WlNnZ2RrSnBkR0Z1WjJWdWRDQXBPd29KQ1NOcFptUmxaaUJFVDFWQ1RFVmZVMGxFUlVRS0NRa0pkR0Z1WjJWdWRDQTlJSFJoYm1kbGJuUWdLaUJtWVdObFJHbHlaV04wYVc5dU93b0pDUWxpYVhSaGJtZGxiblFnUFNCaWFYUmhibWRsYm5RZ0tpQm1ZV05sUkdseVpXTjBhVzl1T3dvSkNTTmxibVJwWmdvSkNTTnBaaUJrWldacGJtVmtLQ0JVUVU1SFJVNVVVMUJCUTBWZlRrOVNUVUZNVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwTk1SVUZTUTA5QlZGOU9UMUpOUVV4TlFWQWdLUW9KQ1FsdFlYUXpJSFpVUWs0Z1BTQnRZWFF6S0NCMFlXNW5aVzUwTENCaWFYUmhibWRsYm5Rc0lHNXZjbTFoYkNBcE93b0pDU05sYm1ScFpnb0pJMlZ1WkdsbUNpTmxibVJwWmdwMlpXTXpJR2RsYjIxbGRISjVUbTl5YldGc0lEMGdibTl5YldGc08yQXNJRU53SUQwZ1lDTnBabVJsWmlCUFFrcEZRMVJUVUVGRFJWOU9UMUpOUVV4TlFWQUtDVzV2Y20xaGJDQTlJSFJsZUhSMWNtVXlSQ2dnYm05eWJXRnNUV0Z3TENCMlZYWWdLUzU0ZVhvZ0tpQXlMakFnTFNBeExqQTdDZ2tqYVdaa1pXWWdSa3hKVUY5VFNVUkZSQW9KQ1c1dmNtMWhiQ0E5SUMwZ2JtOXliV0ZzT3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNna0pibTl5YldGc0lEMGdibTl5YldGc0lDb2dabUZqWlVScGNtVmpkR2x2YmpzS0NTTmxibVJwWmdvSmJtOXliV0ZzSUQwZ2JtOXliV0ZzYVhwbEtDQnViM0p0WVd4TllYUnlhWGdnS2lCdWIzSnRZV3dnS1RzS0kyVnNhV1lnWkdWbWFXNWxaQ2dnVkVGT1IwVk9WRk5RUVVORlgwNVBVazFCVEUxQlVDQXBDZ2wyWldNeklHMWhjRTRnUFNCMFpYaDBkWEpsTWtRb0lHNXZjbTFoYkUxaGNDd2dkbFYySUNrdWVIbDZJQ29nTWk0d0lDMGdNUzR3T3dvSmJXRndUaTU0ZVNBcVBTQnViM0p0WVd4VFkyRnNaVHNLQ1NOcFptUmxaaUJWVTBWZlZFRk9SMFZPVkFvSkNXNXZjbTFoYkNBOUlHNXZjbTFoYkdsNlpTZ2dkbFJDVGlBcUlHMWhjRTRnS1RzS0NTTmxiSE5sQ2drSmJtOXliV0ZzSUQwZ2NHVnlkSFZ5WWs1dmNtMWhiREpCY21Jb0lDMGdkbFpwWlhkUWIzTnBkR2x2Yml3Z2JtOXliV0ZzTENCdFlYQk9MQ0JtWVdObFJHbHlaV04wYVc5dUlDazdDZ2tqWlc1a2FXWUtJMlZzYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMEpWVFZCTlFWQWdLUW9KYm05eWJXRnNJRDBnY0dWeWRIVnlZazV2Y20xaGJFRnlZaWdnTFNCMlZtbGxkMUJ2YzJsMGFXOXVMQ0J1YjNKdFlXd3NJR1JJWkhoNVgyWjNaQ2dwTENCbVlXTmxSR2x5WldOMGFXOXVJQ2s3Q2lObGJtUnBabUFzSUV4d0lEMGdZQ05wWm01a1pXWWdSa3hCVkY5VFNFRkVSVVFLQ1haaGNubHBibWNnZG1Wak15QjJUbTl5YldGc093b0pJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVDZ2tKZG1GeWVXbHVaeUIyWldNeklIWlVZVzVuWlc1ME93b0pDWFpoY25scGJtY2dkbVZqTXlCMlFtbDBZVzVuWlc1ME93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lGSndJRDBnWUNOcFptNWtaV1lnUmt4QlZGOVRTRUZFUlVRS0NYWmhjbmxwYm1jZ2RtVmpNeUIyVG05eWJXRnNPd29KSTJsbVpHVm1JRlZUUlY5VVFVNUhSVTVVQ2drSmRtRnllV2x1WnlCMlpXTXpJSFpVWVc1blpXNTBPd29KQ1haaGNubHBibWNnZG1Wak15QjJRbWwwWVc1blpXNTBPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRkJ3SUQwZ1lDTnBabTVrWldZZ1JreEJWRjlUU0VGRVJVUUtDWFpPYjNKdFlXd2dQU0J1YjNKdFlXeHBlbVVvSUhSeVlXNXpabTl5YldWa1RtOXliV0ZzSUNrN0Nna2phV1prWldZZ1ZWTkZYMVJCVGtkRlRsUUtDUWwyVkdGdVoyVnVkQ0E5SUc1dmNtMWhiR2w2WlNnZ2RISmhibk5tYjNKdFpXUlVZVzVuWlc1MElDazdDZ2tKZGtKcGRHRnVaMlZ1ZENBOUlHNXZjbTFoYkdsNlpTZ2dZM0p2YzNNb0lIWk9iM0p0WVd3c0lIWlVZVzVuWlc1MElDa2dLaUIwWVc1blpXNTBMbmNnS1RzS0NTTmxibVJwWmdvalpXNWthV1pnTENCSmNDQTlJR0FqYVdaa1pXWWdWVk5GWDA1UFVrMUJURTFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2JtOXliV0ZzVFdGd093b0pkVzVwWm05eWJTQjJaV015SUc1dmNtMWhiRk5qWVd4bE93b2paVzVrYVdZS0kybG1aR1ZtSUU5Q1NrVkRWRk5RUVVORlgwNVBVazFCVEUxQlVBb0pkVzVwWm05eWJTQnRZWFF6SUc1dmNtMWhiRTFoZEhKcGVEc0tJMlZ1WkdsbUNpTnBaaUFoSUdSbFptbHVaV1FnS0NCVlUwVmZWRUZPUjBWT1ZDQXBJQ1ltSUNnZ1pHVm1hVzVsWkNBb0lGUkJUa2RGVGxSVFVFRkRSVjlPVDFKTlFVeE5RVkFnS1NCOGZDQmtaV1pwYm1Wa0lDZ2dWVk5GWDBOTVJVRlNRMDlCVkY5T1QxSk5RVXhOUVZBZ0tTQXBDZ2wyWldNeklIQmxjblIxY21KT2IzSnRZV3d5UVhKaUtDQjJaV016SUdWNVpWOXdiM01zSUhabFl6TWdjM1Z5Wmw5dWIzSnRMQ0IyWldNeklHMWhjRTRzSUdac2IyRjBJR1poWTJWRWFYSmxZM1JwYjI0Z0tTQjdDZ2tKZG1Wak15QnhNQ0E5SUhabFl6TW9JR1JHWkhnb0lHVjVaVjl3YjNNdWVDQXBMQ0JrUm1SNEtDQmxlV1ZmY0c5ekxua2dLU3dnWkVaa2VDZ2daWGxsWDNCdmN5NTZJQ2tnS1RzS0NRbDJaV016SUhFeElEMGdkbVZqTXlnZ1pFWmtlU2dnWlhsbFgzQnZjeTU0SUNrc0lHUkdaSGtvSUdWNVpWOXdiM011ZVNBcExDQmtSbVI1S0NCbGVXVmZjRzl6TG5vZ0tTQXBPd29KQ1habFl6SWdjM1F3SUQwZ1pFWmtlQ2dnZGxWMkxuTjBJQ2s3Q2drSmRtVmpNaUJ6ZERFZ1BTQmtSbVI1S0NCMlZYWXVjM1FnS1RzS0NRbDJaV016SUU0Z1BTQnpkWEptWDI1dmNtMDdDZ2tKZG1Wak15QnhNWEJsY25BZ1BTQmpjbTl6Y3lnZ2NURXNJRTRnS1RzS0NRbDJaV016SUhFd2NHVnljQ0E5SUdOeWIzTnpLQ0JPTENCeE1DQXBPd29KQ1habFl6TWdWQ0E5SUhFeGNHVnljQ0FxSUhOME1DNTRJQ3NnY1RCd1pYSndJQ29nYzNReExuZzdDZ2tKZG1Wak15QkNJRDBnY1RGd1pYSndJQ29nYzNRd0xua2dLeUJ4TUhCbGNuQWdLaUJ6ZERFdWVUc0tDUWxtYkc5aGRDQmtaWFFnUFNCdFlYZ29JR1J2ZENnZ1ZDd2dWQ0FwTENCa2IzUW9JRUlzSUVJZ0tTQXBPd29KQ1dac2IyRjBJSE5qWVd4bElEMGdLQ0JrWlhRZ1BUMGdNQzR3SUNrZ1B5QXdMakFnT2lCbVlXTmxSR2x5WldOMGFXOXVJQ29nYVc1MlpYSnpaWE54Y25Rb0lHUmxkQ0FwT3dvSkNYSmxkSFZ5YmlCdWIzSnRZV3hwZW1Vb0lGUWdLaUFvSUcxaGNFNHVlQ0FxSUhOallXeGxJQ2tnS3lCQ0lDb2dLQ0J0WVhCT0xua2dLaUJ6WTJGc1pTQXBJQ3NnVGlBcUlHMWhjRTR1ZWlBcE93b0pmUW9qWlc1a2FXWmdMQ0JFY0NBOUlHQWphV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWQW9KZG1Wak15QmpiR1ZoY21OdllYUk9iM0p0WVd3Z1BTQm5aVzl0WlhSeWVVNXZjbTFoYkRzS0kyVnVaR2xtWUN3Z1JuQWdQU0JnSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZSZlRrOVNUVUZNVFVGUUNnbDJaV016SUdOc1pXRnlZMjloZEUxaGNFNGdQU0IwWlhoMGRYSmxNa1FvSUdOc1pXRnlZMjloZEU1dmNtMWhiRTFoY0N3Z2RsVjJJQ2t1ZUhsNklDb2dNaTR3SUMwZ01TNHdPd29KWTJ4bFlYSmpiMkYwVFdGd1RpNTRlU0FxUFNCamJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pUc0tDU05wWm1SbFppQlZVMFZmVkVGT1IwVk9WQW9KQ1dOc1pXRnlZMjloZEU1dmNtMWhiQ0E5SUc1dmNtMWhiR2w2WlNnZ2RsUkNUaUFxSUdOc1pXRnlZMjloZEUxaGNFNGdLVHNLQ1NObGJITmxDZ2tKWTJ4bFlYSmpiMkYwVG05eWJXRnNJRDBnY0dWeWRIVnlZazV2Y20xaGJESkJjbUlvSUMwZ2RsWnBaWGRRYjNOcGRHbHZiaXdnWTJ4bFlYSmpiMkYwVG05eWJXRnNMQ0JqYkdWaGNtTnZZWFJOWVhCT0xDQm1ZV05sUkdseVpXTjBhVzl1SUNrN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1RuQWdQU0JnSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZSTlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR05zWldGeVkyOWhkRTFoY0RzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVVgxSlBWVWRJVGtWVFUwMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd093b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOURURVZCVWtOUFFWUmZUazlTVFVGTVRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEE3Q2dsMWJtbG1iM0p0SUhabFl6SWdZMnhsWVhKamIyRjBUbTl5YldGc1UyTmhiR1U3Q2lObGJtUnBabUFzSUVKd0lEMGdZQ05wWm1SbFppQlBVRUZSVlVVS1pHbG1ablZ6WlVOdmJHOXlMbUVnUFNBeExqQTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGdwa2FXWm1kWE5sUTI5c2IzSXVZU0FxUFNCMGNtRnVjMjFwYzNOcGIyNUJiSEJvWVNBcklEQXVNVHNLSTJWdVpHbG1DbWRzWDBaeVlXZERiMnh2Y2lBOUlIWmxZelFvSUc5MWRHZHZhVzVuVEdsbmFIUXNJR1JwWm1aMWMyVkRiMnh2Y2k1aElDazdZQ3dnZW5BZ1BTQmdkbVZqTXlCd1lXTnJUbTl5YldGc1ZHOVNSMElvSUdOdmJuTjBJR2x1SUhabFl6TWdibTl5YldGc0lDa2dld29KY21WMGRYSnVJRzV2Y20xaGJHbDZaU2dnYm05eWJXRnNJQ2tnS2lBd0xqVWdLeUF3TGpVN0NuMEtkbVZqTXlCMWJuQmhZMnRTUjBKVWIwNXZjbTFoYkNnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJ5WjJJZ0tTQjdDZ2x5WlhSMWNtNGdNaTR3SUNvZ2NtZGlMbmg1ZWlBdElERXVNRHNLZlFwamIyNXpkQ0JtYkc5aGRDQlFZV05yVlhCelkyRnNaU0E5SURJMU5pNGdMeUF5TlRVdU8yTnZibk4wSUdac2IyRjBJRlZ1Y0dGamEwUnZkMjV6WTJGc1pTQTlJREkxTlM0Z0x5QXlOVFl1T3dwamIyNXpkQ0IyWldNeklGQmhZMnRHWVdOMGIzSnpJRDBnZG1Wak15Z2dNalUyTGlBcUlESTFOaTRnS2lBeU5UWXVMQ0F5TlRZdUlDb2dNalUyTGl3Z01qVTJMaUFwT3dwamIyNXpkQ0IyWldNMElGVnVjR0ZqYTBaaFkzUnZjbk1nUFNCVmJuQmhZMnRFYjNkdWMyTmhiR1VnTHlCMlpXTTBLQ0JRWVdOclJtRmpkRzl5Y3l3Z01TNGdLVHNLWTI5dWMzUWdabXh2WVhRZ1UyaHBablJTYVdkb2REZ2dQU0F4TGlBdklESTFOaTQ3Q25abFl6UWdjR0ZqYTBSbGNIUm9WRzlTUjBKQktDQmpiMjV6ZENCcGJpQm1iRzloZENCMklDa2dld29KZG1Wak5DQnlJRDBnZG1Wak5DZ2dabkpoWTNRb0lIWWdLaUJRWVdOclJtRmpkRzl5Y3lBcExDQjJJQ2s3Q2dseUxubDZkeUF0UFNCeUxuaDVlaUFxSUZOb2FXWjBVbWxuYUhRNE93bHlaWFIxY200Z2NpQXFJRkJoWTJ0VmNITmpZV3hsT3dwOUNtWnNiMkYwSUhWdWNHRmphMUpIUWtGVWIwUmxjSFJvS0NCamIyNXpkQ0JwYmlCMlpXTTBJSFlnS1NCN0NnbHlaWFIxY200Z1pHOTBLQ0IyTENCVmJuQmhZMnRHWVdOMGIzSnpJQ2s3Q24wS2RtVmpOQ0J3WVdOck1raGhiR1pVYjFKSFFrRW9JSFpsWXpJZ2RpQXBJSHNLQ1habFl6UWdjaUE5SUhabFl6UW9JSFl1ZUN3Z1puSmhZM1FvSUhZdWVDQXFJREkxTlM0d0lDa3NJSFl1ZVN3Z1puSmhZM1FvSUhZdWVTQXFJREkxTlM0d0lDa2dLVHNLQ1hKbGRIVnliaUIyWldNMEtDQnlMbmdnTFNCeUxua2dMeUF5TlRVdU1Dd2djaTU1TENCeUxub2dMU0J5TG5jZ0x5QXlOVFV1TUN3Z2NpNTNJQ2s3Q24wS2RtVmpNaUIxYm5CaFkydFNSMEpCVkc4eVNHRnNaaWdnZG1Wak5DQjJJQ2tnZXdvSmNtVjBkWEp1SUhabFl6SW9JSFl1ZUNBcklDZ2dkaTU1SUM4Z01qVTFMakFnS1N3Z2RpNTZJQ3NnS0NCMkxuY2dMeUF5TlRVdU1DQXBJQ2s3Q24wS1pteHZZWFFnZG1sbGQxcFViMDl5ZEdodlozSmhjR2hwWTBSbGNIUm9LQ0JqYjI1emRDQnBiaUJtYkc5aGRDQjJhV1YzV2l3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnYm1WaGNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1ptRnlJQ2tnZXdvSmNtVjBkWEp1SUNnZ2RtbGxkMW9nS3lCdVpXRnlJQ2tnTHlBb0lHNWxZWElnTFNCbVlYSWdLVHNLZlFwbWJHOWhkQ0J2Y25Sb2IyZHlZWEJvYVdORVpYQjBhRlJ2Vm1sbGQxb29JR052Ym5OMElHbHVJR1pzYjJGMElHeHBibVZoY2tOc2FYQmFMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnVaV0Z5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JtWVhJZ0tTQjdDZ2x5WlhSMWNtNGdiR2x1WldGeVEyeHBjRm9nS2lBb0lHNWxZWElnTFNCbVlYSWdLU0F0SUc1bFlYSTdDbjBLWm14dllYUWdkbWxsZDFwVWIxQmxjbk53WldOMGFYWmxSR1Z3ZEdnb0lHTnZibk4wSUdsdUlHWnNiMkYwSUhacFpYZGFMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnVaV0Z5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JtWVhJZ0tTQjdDZ2x5WlhSMWNtNGdLQ0FvSUc1bFlYSWdLeUIyYVdWM1dpQXBJQ29nWm1GeUlDa2dMeUFvSUNnZ1ptRnlJQzBnYm1WaGNpQXBJQ29nZG1sbGQxb2dLVHNLZlFwbWJHOWhkQ0J3WlhKemNHVmpkR2wyWlVSbGNIUm9WRzlXYVdWM1dpZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2FXNTJRMnhwY0Zvc0lHTnZibk4wSUdsdUlHWnNiMkYwSUc1bFlYSXNJR052Ym5OMElHbHVJR1pzYjJGMElHWmhjaUFwSUhzS0NYSmxkSFZ5YmlBb0lHNWxZWElnS2lCbVlYSWdLU0F2SUNnZ0tDQm1ZWElnTFNCdVpXRnlJQ2tnS2lCcGJuWkRiR2x3V2lBdElHWmhjaUFwT3dwOVlDd2dWWEFnUFNCZ0kybG1aR1ZtSUZCU1JVMVZURlJKVUV4SlJVUmZRVXhRU0VFS0NXZHNYMFp5WVdkRGIyeHZjaTV5WjJJZ0tqMGdaMnhmUm5KaFowTnZiRzl5TG1FN0NpTmxibVJwWm1Bc0lFOXdJRDBnWUhabFl6UWdiWFpRYjNOcGRHbHZiaUE5SUhabFl6UW9JSFJ5WVc1elptOXliV1ZrTENBeExqQWdLVHNLSTJsbVpHVm1JRlZUUlY5SlRsTlVRVTVEU1U1SENnbHRkbEJ2YzJsMGFXOXVJRDBnYVc1emRHRnVZMlZOWVhSeWFYZ2dLaUJ0ZGxCdmMybDBhVzl1T3dvalpXNWthV1lLYlhaUWIzTnBkR2x2YmlBOUlHMXZaR1ZzVm1sbGQwMWhkSEpwZUNBcUlHMTJVRzl6YVhScGIyNDdDbWRzWDFCdmMybDBhVzl1SUQwZ2NISnZhbVZqZEdsdmJrMWhkSEpwZUNBcUlHMTJVRzl6YVhScGIyNDdZQ3dnU0hBZ1BTQmdJMmxtWkdWbUlFUkpWRWhGVWtsT1J3b0paMnhmUm5KaFowTnZiRzl5TG5KbllpQTlJR1JwZEdobGNtbHVaeWdnWjJ4ZlJuSmhaME52Ykc5eUxuSm5ZaUFwT3dvalpXNWthV1pnTENCcmNDQTlJR0FqYVdaa1pXWWdSRWxVU0VWU1NVNUhDZ2wyWldNeklHUnBkR2hsY21sdVp5Z2dkbVZqTXlCamIyeHZjaUFwSUhzS0NRbG1iRzloZENCbmNtbGtYM0J2YzJsMGFXOXVJRDBnY21GdVpDZ2daMnhmUm5KaFowTnZiM0prTG5oNUlDazdDZ2tKZG1Wak15QmthWFJvWlhKZmMyaHBablJmVWtkQ0lEMGdkbVZqTXlnZ01DNHlOU0F2SURJMU5TNHdMQ0F0TUM0eU5TQXZJREkxTlM0d0xDQXdMakkxSUM4Z01qVTFMakFnS1RzS0NRbGthWFJvWlhKZmMyaHBablJmVWtkQ0lEMGdiV2w0S0NBeUxqQWdLaUJrYVhSb1pYSmZjMmhwWm5SZlVrZENMQ0F0TWk0d0lDb2daR2wwYUdWeVgzTm9hV1owWDFKSFFpd2daM0pwWkY5d2IzTnBkR2x2YmlBcE93b0pDWEpsZEhWeWJpQmpiMnh2Y2lBcklHUnBkR2hsY2w5emFHbG1kRjlTUjBJN0NnbDlDaU5sYm1ScFptQXNJRWR3SUQwZ1lHWnNiMkYwSUhKdmRXZG9ibVZ6YzBaaFkzUnZjaUE5SUhKdmRXZG9ibVZ6Y3pzS0kybG1aR1ZtSUZWVFJWOVNUMVZIU0U1RlUxTk5RVkFLQ1habFl6UWdkR1Y0Wld4U2IzVm5hRzVsYzNNZ1BTQjBaWGgwZFhKbE1rUW9JSEp2ZFdkb2JtVnpjMDFoY0N3Z2RsVjJJQ2s3Q2dseWIzVm5hRzVsYzNOR1lXTjBiM0lnS2owZ2RHVjRaV3hTYjNWbmFHNWxjM011WnpzS0kyVnVaR2xtWUN3Z1ZuQWdQU0JnSTJsbVpHVm1JRlZUUlY5U1QxVkhTRTVGVTFOTlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSEp2ZFdkb2JtVnpjMDFoY0RzS0kyVnVaR2xtWUN3Z1YzQWdQU0JnSTJsbVpHVm1JRlZUUlY5VFNFRkVUMWROUVZBS0NTTnBaaUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhCYklFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkNYWmhjbmxwYm1jZ2RtVmpOQ0IyUkdseVpXTjBhVzl1WVd4VGFHRmtiM2REYjI5eVpGc2dUbFZOWDBSSlVsOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna0pjM1J5ZFdOMElFUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2NnZXdvSkNRbG1iRzloZENCemFHRmtiM2RDYVdGek93b0pDUWxtYkc5aGRDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek93b0pDUWxtYkc5aGRDQnphR0ZrYjNkU1lXUnBkWE03Q2drSkNYWmxZeklnYzJoaFpHOTNUV0Z3VTJsNlpUc0tDUWw5T3dvSkNYVnVhV1p2Y20wZ1JHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkeUJrYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M2Mxc2dUbFZOWDBSSlVsOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna2paVzVrYVdZS0NTTnBaaUJPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhOd2IzUlRhR0ZrYjNkTllYQmJJRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDUWwyWVhKNWFXNW5JSFpsWXpRZ2RsTndiM1JUYUdGa2IzZERiMjl5WkZzZ1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkNYTjBjblZqZENCVGNHOTBUR2xuYUhSVGFHRmtiM2NnZXdvSkNRbG1iRzloZENCemFHRmtiM2RDYVdGek93b0pDUWxtYkc5aGRDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek93b0pDUWxtYkc5aGRDQnphR0ZrYjNkU1lXUnBkWE03Q2drSkNYWmxZeklnYzJoaFpHOTNUV0Z3VTJsNlpUc0tDUWw5T3dvSkNYVnVhV1p2Y20wZ1UzQnZkRXhwWjJoMFUyaGhaRzkzSUhOd2IzUk1hV2RvZEZOb1lXUnZkM05iSUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1NObGJtUnBaZ29KSTJsbUlFNVZUVjlRVDBsT1ZGOU1TVWRJVkY5VFNFRkVUMWRUSUQ0Z01Bb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSEJ2YVc1MFUyaGhaRzkzVFdGd1d5Qk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWFpoY25scGJtY2dkbVZqTkNCMlVHOXBiblJUYUdGa2IzZERiMjl5WkZzZ1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbHpkSEoxWTNRZ1VHOXBiblJNYVdkb2RGTm9ZV1J2ZHlCN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQxSmhaR2wxY3pzS0NRa0pkbVZqTWlCemFHRmtiM2ROWVhCVGFYcGxPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZERZVzFsY21GT1pXRnlPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZERZVzFsY21GR1lYSTdDZ2tKZlRzS0NRbDFibWxtYjNKdElGQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ2NHOXBiblJNYVdkb2RGTm9ZV1J2ZDNOYklFNVZUVjlRVDBsT1ZGOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna2paVzVrYVdZS0NXWnNiMkYwSUhSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOaGJYQnNaWEl5UkNCa1pYQjBhSE1zSUhabFl6SWdkWFlzSUdac2IyRjBJR052YlhCaGNtVWdLU0I3Q2drSmNtVjBkWEp1SUhOMFpYQW9JR052YlhCaGNtVXNJSFZ1Y0dGamExSkhRa0ZVYjBSbGNIUm9LQ0IwWlhoMGRYSmxNa1FvSUdSbGNIUm9jeXdnZFhZZ0tTQXBJQ2s3Q2dsOUNnbDJaV015SUhSbGVIUjFjbVV5UkVScGMzUnlhV0oxZEdsdmJpZ2djMkZ0Y0d4bGNqSkVJSE5vWVdSdmR5d2dkbVZqTWlCMWRpQXBJSHNLQ1FseVpYUjFjbTRnZFc1d1lXTnJVa2RDUVZSdk1raGhiR1lvSUhSbGVIUjFjbVV5UkNnZ2MyaGhaRzkzTENCMWRpQXBJQ2s3Q2dsOUNnbG1iRzloZENCV1UwMVRhR0ZrYjNjZ0tITmhiWEJzWlhJeVJDQnphR0ZrYjNjc0lIWmxZeklnZFhZc0lHWnNiMkYwSUdOdmJYQmhjbVVnS1hzS0NRbG1iRzloZENCdlkyTnNkWE5wYjI0Z1BTQXhMakE3Q2drSmRtVmpNaUJrYVhOMGNtbGlkWFJwYjI0Z1BTQjBaWGgwZFhKbE1rUkVhWE4wY21saWRYUnBiMjRvSUhOb1lXUnZkeXdnZFhZZ0tUc0tDUWxtYkc5aGRDQm9ZWEprWDNOb1lXUnZkeUE5SUhOMFpYQW9JR052YlhCaGNtVWdMQ0JrYVhOMGNtbGlkWFJwYjI0dWVDQXBPd29KQ1dsbUlDaG9ZWEprWDNOb1lXUnZkeUFoUFNBeExqQWdLU0I3Q2drSkNXWnNiMkYwSUdScGMzUmhibU5sSUQwZ1kyOXRjR0Z5WlNBdElHUnBjM1J5YVdKMWRHbHZiaTU0SURzS0NRa0pabXh2WVhRZ2RtRnlhV0Z1WTJVZ1BTQnRZWGdvSURBdU1EQXdNREFzSUdScGMzUnlhV0oxZEdsdmJpNTVJQ29nWkdsemRISnBZblYwYVc5dUxua2dLVHNLQ1FrSlpteHZZWFFnYzI5bWRHNWxjM05mY0hKdlltRmlhV3hwZEhrZ1BTQjJZWEpwWVc1alpTQXZJQ2gyWVhKcFlXNWpaU0FySUdScGMzUmhibU5sSUNvZ1pHbHpkR0Z1WTJVZ0tUc0pDUWx6YjJaMGJtVnpjMTl3Y205aVlXSnBiR2wwZVNBOUlHTnNZVzF3S0NBb0lITnZablJ1WlhOelgzQnliMkpoWW1sc2FYUjVJQzBnTUM0eklDa2dMeUFvSURBdU9UVWdMU0F3TGpNZ0tTd2dNQzR3TENBeExqQWdLVHNKQ1FsdlkyTnNkWE5wYjI0Z1BTQmpiR0Z0Y0NnZ2JXRjRLQ0JvWVhKa1gzTm9ZV1J2ZHl3Z2MyOW1kRzVsYzNOZmNISnZZbUZpYVd4cGRIa2dLU3dnTUM0d0xDQXhMakFnS1RzS0NRbDlDZ2tKY21WMGRYSnVJRzlqWTJ4MWMybHZianNLQ1gwS0NXWnNiMkYwSUdkbGRGTm9ZV1J2ZHlnZ2MyRnRjR3hsY2pKRUlITm9ZV1J2ZDAxaGNDd2dkbVZqTWlCemFHRmtiM2ROWVhCVGFYcGxMQ0JtYkc5aGRDQnphR0ZrYjNkQ2FXRnpMQ0JtYkc5aGRDQnphR0ZrYjNkU1lXUnBkWE1zSUhabFl6UWdjMmhoWkc5M1EyOXZjbVFnS1NCN0Nna0pabXh2WVhRZ2MyaGhaRzkzSUQwZ01TNHdPd29KQ1hOb1lXUnZkME52YjNKa0xuaDVlaUF2UFNCemFHRmtiM2REYjI5eVpDNTNPd29KQ1hOb1lXUnZkME52YjNKa0xub2dLejBnYzJoaFpHOTNRbWxoY3pzS0NRbGlkbVZqTkNCcGJrWnlkWE4wZFcxV1pXTWdQU0JpZG1Wak5DQW9JSE5vWVdSdmQwTnZiM0prTG5nZ1BqMGdNQzR3TENCemFHRmtiM2REYjI5eVpDNTRJRHc5SURFdU1Dd2djMmhoWkc5M1EyOXZjbVF1ZVNBK1BTQXdMakFzSUhOb1lXUnZkME52YjNKa0xua2dQRDBnTVM0d0lDazdDZ2tKWW05dmJDQnBia1p5ZFhOMGRXMGdQU0JoYkd3b0lHbHVSbkoxYzNSMWJWWmxZeUFwT3dvSkNXSjJaV015SUdaeWRYTjBkVzFVWlhOMFZtVmpJRDBnWW5abFl6SW9JR2x1Um5KMWMzUjFiU3dnYzJoaFpHOTNRMjl2Y21RdWVpQThQU0F4TGpBZ0tUc0tDUWxpYjI5c0lHWnlkWE4wZFcxVVpYTjBJRDBnWVd4c0tDQm1jblZ6ZEhWdFZHVnpkRlpsWXlBcE93b0pDV2xtSUNnZ1puSjFjM1IxYlZSbGMzUWdLU0I3Q2drSkkybG1JR1JsWm1sdVpXUW9JRk5JUVVSUFYwMUJVRjlVV1ZCRlgxQkRSaUFwQ2drSkNYWmxZeklnZEdWNFpXeFRhWHBsSUQwZ2RtVmpNaWdnTVM0d0lDa2dMeUJ6YUdGa2IzZE5ZWEJUYVhwbE93b0pDUWxtYkc5aGRDQmtlREFnUFNBdElIUmxlR1ZzVTJsNlpTNTRJQ29nYzJoaFpHOTNVbUZrYVhWek93b0pDUWxtYkc5aGRDQmtlVEFnUFNBdElIUmxlR1ZzVTJsNlpTNTVJQ29nYzJoaFpHOTNVbUZrYVhWek93b0pDUWxtYkc5aGRDQmtlREVnUFNBcklIUmxlR1ZzVTJsNlpTNTRJQ29nYzJoaFpHOTNVbUZrYVhWek93b0pDUWxtYkc5aGRDQmtlVEVnUFNBcklIUmxlR1ZzVTJsNlpTNTVJQ29nYzJoaFpHOTNVbUZrYVhWek93b0pDUWxtYkc5aGRDQmtlRElnUFNCa2VEQWdMeUF5TGpBN0Nna0pDV1pzYjJGMElHUjVNaUE5SUdSNU1DQXZJREl1TURzS0NRa0pabXh2WVhRZ1pIZ3pJRDBnWkhneElDOGdNaTR3T3dvSkNRbG1iRzloZENCa2VUTWdQU0JrZVRFZ0x5QXlMakE3Q2drSkNYTm9ZV1J2ZHlBOUlDZ0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURBc0lHUjVNQ0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lEQXVNQ3dnWkhrd0lDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnWkhneExDQmtlVEFnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlRElzSUdSNU1pQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSURBdU1Dd2daSGt5SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2daSGd6TENCa2VUSWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VEQXNJREF1TUNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JR1I0TWl3Z01DNHdJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUxDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JR1I0TXl3Z01DNHdJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ1pIZ3hMQ0F3TGpBZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURJc0lHUjVNeUFwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lEQXVNQ3dnWkhreklDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnWkhnekxDQmtlVE1nS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlREFzSUdSNU1TQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSURBdU1Dd2daSGt4SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2daSGd4TENCa2VURWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBDZ2tKQ1NrZ0tpQW9JREV1TUNBdklERTNMakFnS1RzS0NRa2paV3hwWmlCa1pXWnBibVZrS0NCVFNFRkVUMWROUVZCZlZGbFFSVjlRUTBaZlUwOUdWQ0FwQ2drSkNYWmxZeklnZEdWNFpXeFRhWHBsSUQwZ2RtVmpNaWdnTVM0d0lDa2dMeUJ6YUdGa2IzZE5ZWEJUYVhwbE93b0pDUWxtYkc5aGRDQmtlQ0E5SUhSbGVHVnNVMmw2WlM1NE93b0pDUWxtYkc5aGRDQmtlU0E5SUhSbGVHVnNVMmw2WlM1NU93b0pDUWwyWldNeUlIVjJJRDBnYzJoaFpHOTNRMjl2Y21RdWVIazdDZ2tKQ1habFl6SWdaaUE5SUdaeVlXTjBLQ0IxZGlBcUlITm9ZV1J2ZDAxaGNGTnBlbVVnS3lBd0xqVWdLVHNLQ1FrSmRYWWdMVDBnWmlBcUlIUmxlR1ZzVTJsNlpUc0tDUWtKYzJoaFpHOTNJRDBnS0FvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGl3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnZFhZZ0t5QjJaV015S0NCa2VDd2dNQzR3SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ01DNHdMQ0JrZVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFJsZUdWc1UybDZaU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNXMXBlQ2dnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFpsWXpJb0lDMWtlQ3dnTUM0d0lDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd2dDZ2tKQ1FrSklIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0F5TGpBZ0tpQmtlQ3dnTUM0d0lDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd0tDUWtKQ1FrZ1ppNTRJQ2tnS3dvSkNRa0piV2w0S0NCMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dMV1I0TENCa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NJQW9KQ1FrSkNTQjBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RtVmpNaWdnTWk0d0lDb2daSGdzSUdSNUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd0tDUWtKQ1FrZ1ppNTRJQ2tnS3dvSkNRa0piV2w0S0NCMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dNQzR3TENBdFpIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQ0FLQ1FrSkNRa2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSURBdU1Dd2dNaTR3SUNvZ1pIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQW9KQ1FrSkNTQm1MbmtnS1NBckNna0pDUWx0YVhnb0lIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0JrZUN3Z0xXUjVJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU3dnQ2drSkNRa0pJSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnZFhZZ0t5QjJaV015S0NCa2VDd2dNaTR3SUNvZ1pIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQW9KQ1FrSkNTQm1MbmtnS1NBckNna0pDUWx0YVhnb0lHMXBlQ2dnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFpsWXpJb0lDMWtlQ3dnTFdSNUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd2dDZ2tKQ1FrSkNTQWdkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSURJdU1DQXFJR1I0TENBdFpIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQW9KQ1FrSkNRa2dJR1l1ZUNBcExBb0pDUWtKQ1NCdGFYZ29JSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnZFhZZ0t5QjJaV015S0NBdFpIZ3NJREl1TUNBcUlHUjVJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU3dnQ2drSkNRa0pDU0FnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFpsWXpJb0lESXVNQ0FxSUdSNExDQXlMakFnS2lCa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NDZ2tKQ1FrSkNTQWdaaTU0SUNrc0Nna0pDUWtKSUdZdWVTQXBDZ2tKQ1NrZ0tpQW9JREV1TUNBdklEa3VNQ0FwT3dvSkNTTmxiR2xtSUdSbFptbHVaV1FvSUZOSVFVUlBWMDFCVUY5VVdWQkZYMVpUVFNBcENna0pDWE5vWVdSdmR5QTlJRlpUVFZOb1lXUnZkeWdnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBPd29KQ1NObGJITmxDZ2tKQ1hOb1lXUnZkeUE5SUhSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtzSUhOb1lXUnZkME52YjNKa0xub2dLVHNLQ1FralpXNWthV1lLQ1FsOUNna0pjbVYwZFhKdUlITm9ZV1J2ZHpzS0NYMEtDWFpsWXpJZ1kzVmlaVlJ2VlZZb0lIWmxZek1nZGl3Z1pteHZZWFFnZEdWNFpXeFRhWHBsV1NBcElIc0tDUWwyWldNeklHRmljMVlnUFNCaFluTW9JSFlnS1RzS0NRbG1iRzloZENCelkyRnNaVlJ2UTNWaVpTQTlJREV1TUNBdklHMWhlQ2dnWVdKelZpNTRMQ0J0WVhnb0lHRmljMVl1ZVN3Z1lXSnpWaTU2SUNrZ0tUc0tDUWxoWW5OV0lDbzlJSE5qWVd4bFZHOURkV0psT3dvSkNYWWdLajBnYzJOaGJHVlViME4xWW1VZ0tpQW9JREV1TUNBdElESXVNQ0FxSUhSbGVHVnNVMmw2WlZrZ0tUc0tDUWwyWldNeUlIQnNZVzVoY2lBOUlIWXVlSGs3Q2drSlpteHZZWFFnWVd4dGIzTjBRVlJsZUdWc0lEMGdNUzQxSUNvZ2RHVjRaV3hUYVhwbFdUc0tDUWxtYkc5aGRDQmhiRzF2YzNSUGJtVWdQU0F4TGpBZ0xTQmhiRzF2YzNSQlZHVjRaV3c3Q2drSmFXWWdLQ0JoWW5OV0xub2dQajBnWVd4dGIzTjBUMjVsSUNrZ2V3b0pDUWxwWmlBb0lIWXVlaUErSURBdU1DQXBDZ2tKQ1Fsd2JHRnVZWEl1ZUNBOUlEUXVNQ0F0SUhZdWVEc0tDUWw5SUdWc2MyVWdhV1lnS0NCaFluTldMbmdnUGowZ1lXeHRiM04wVDI1bElDa2dld29KQ1FsbWJHOWhkQ0J6YVdkdVdDQTlJSE5wWjI0b0lIWXVlQ0FwT3dvSkNRbHdiR0Z1WVhJdWVDQTlJSFl1ZWlBcUlITnBaMjVZSUNzZ01pNHdJQ29nYzJsbmJsZzdDZ2tKZlNCbGJITmxJR2xtSUNnZ1lXSnpWaTU1SUQ0OUlHRnNiVzl6ZEU5dVpTQXBJSHNLQ1FrSlpteHZZWFFnYzJsbmJsa2dQU0J6YVdkdUtDQjJMbmtnS1RzS0NRa0pjR3hoYm1GeUxuZ2dQU0IyTG5nZ0t5QXlMakFnS2lCemFXZHVXU0FySURJdU1Ec0tDUWtKY0d4aGJtRnlMbmtnUFNCMkxub2dLaUJ6YVdkdVdTQXRJREl1TURzS0NRbDlDZ2tKY21WMGRYSnVJSFpsWXpJb0lEQXVNVEkxTENBd0xqSTFJQ2tnS2lCd2JHRnVZWElnS3lCMlpXTXlLQ0F3TGpNM05Td2dNQzQzTlNBcE93b0pmUW9KWm14dllYUWdaMlYwVUc5cGJuUlRhR0ZrYjNjb0lITmhiWEJzWlhJeVJDQnphR0ZrYjNkTllYQXNJSFpsWXpJZ2MyaGhaRzkzVFdGd1UybDZaU3dnWm14dllYUWdjMmhoWkc5M1FtbGhjeXdnWm14dllYUWdjMmhoWkc5M1VtRmthWFZ6TENCMlpXTTBJSE5vWVdSdmQwTnZiM0prTENCbWJHOWhkQ0J6YUdGa2IzZERZVzFsY21GT1pXRnlMQ0JtYkc5aGRDQnphR0ZrYjNkRFlXMWxjbUZHWVhJZ0tTQjdDZ2tKZG1Wak1pQjBaWGhsYkZOcGVtVWdQU0IyWldNeUtDQXhMakFnS1NBdklDZ2djMmhoWkc5M1RXRndVMmw2WlNBcUlIWmxZeklvSURRdU1Dd2dNaTR3SUNrZ0tUc0tDUWwyWldNeklHeHBaMmgwVkc5UWIzTnBkR2x2YmlBOUlITm9ZV1J2ZDBOdmIzSmtMbmg1ZWpzS0NRbG1iRzloZENCa2NDQTlJQ2dnYkdWdVozUm9LQ0JzYVdkb2RGUnZVRzl6YVhScGIyNGdLU0F0SUhOb1lXUnZkME5oYldWeVlVNWxZWElnS1NBdklDZ2djMmhoWkc5M1EyRnRaWEpoUm1GeUlDMGdjMmhoWkc5M1EyRnRaWEpoVG1WaGNpQXBPd2tKWkhBZ0t6MGdjMmhoWkc5M1FtbGhjenNLQ1FsMlpXTXpJR0prTTBRZ1BTQnViM0p0WVd4cGVtVW9JR3hwWjJoMFZHOVFiM05wZEdsdmJpQXBPd29KQ1NOcFppQmtaV1pwYm1Wa0tDQlRTRUZFVDFkTlFWQmZWRmxRUlY5UVEwWWdLU0I4ZkNCa1pXWnBibVZrS0NCVFNFRkVUMWROUVZCZlZGbFFSVjlRUTBaZlUwOUdWQ0FwSUh4OElHUmxabWx1WldRb0lGTklRVVJQVjAxQlVGOVVXVkJGWDFaVFRTQXBDZ2tKQ1habFl6SWdiMlptYzJWMElEMGdkbVZqTWlnZ0xTQXhMQ0F4SUNrZ0tpQnphR0ZrYjNkU1lXUnBkWE1nS2lCMFpYaGxiRk5wZW1VdWVUc0tDUWtKY21WMGRYSnVJQ2dLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dZM1ZpWlZSdlZWWW9JR0prTTBRZ0t5QnZabVp6WlhRdWVIbDVMQ0IwWlhobGJGTnBlbVV1ZVNBcExDQmtjQ0FwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnWTNWaVpWUnZWVllvSUdKa00wUWdLeUJ2Wm1aelpYUXVlWGw1TENCMFpYaGxiRk5wZW1VdWVTQXBMQ0JrY0NBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z1kzVmlaVlJ2VlZZb0lHSmtNMFFnS3lCdlptWnpaWFF1ZUhsNExDQjBaWGhsYkZOcGVtVXVlU0FwTENCa2NDQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dZM1ZpWlZSdlZWWW9JR0prTTBRZ0t5QnZabVp6WlhRdWVYbDRMQ0IwWlhobGJGTnBlbVV1ZVNBcExDQmtjQ0FwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnWTNWaVpWUnZWVllvSUdKa00wUXNJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDQXJJRzltWm5ObGRDNTRlSGtzSUhSbGVHVnNVMmw2WlM1NUlDa3NJR1J3SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ0FySUc5bVpuTmxkQzU1ZUhrc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NGVIZ3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDQXJJRzltWm5ObGRDNTVlSGdzSUhSbGVHVnNVMmw2WlM1NUlDa3NJR1J3SUNrS0NRa0pLU0FxSUNnZ01TNHdJQzhnT1M0d0lDazdDZ2tKSTJWc2MyVUtDUWtKY21WMGRYSnVJSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnWTNWaVpWUnZWVllvSUdKa00wUXNJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2s3Q2drSkkyVnVaR2xtQ2dsOUNpTmxibVJwWm1Bc0lIRndJRDBnWUNOcFptUmxaaUJWVTBWZlUwaEJSRTlYVFVGUUNna2phV1lnVGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KQ1hWdWFXWnZjbTBnYldGME5DQmthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhkSEpwZUZzZ1RsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2drSmRtRnllV2x1WnlCMlpXTTBJSFpFYVhKbFkzUnBiMjVoYkZOb1lXUnZkME52YjNKa1d5Qk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbHpkSEoxWTNRZ1JHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkeUI3Q2drSkNXWnNiMkYwSUhOb1lXUnZkMEpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDFKaFpHbDFjenNLQ1FrSmRtVmpNaUJ6YUdGa2IzZE5ZWEJUYVhwbE93b0pDWDA3Q2drSmRXNXBabTl5YlNCRWFYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNkeld5Qk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NTTmxibVJwWmdvSkkybG1JRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tKZFc1cFptOXliU0J0WVhRMElITndiM1JUYUdGa2IzZE5ZWFJ5YVhoYklFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbDJZWEo1YVc1bklIWmxZelFnZGxOd2IzUlRhR0ZrYjNkRGIyOXlaRnNnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1hOMGNuVmpkQ0JUY0c5MFRHbG5hSFJUYUdGa2IzY2dld29KQ1FsbWJHOWhkQ0J6YUdGa2IzZENhV0Z6T3dvSkNRbG1iRzloZENCemFHRmtiM2RPYjNKdFlXeENhV0Z6T3dvSkNRbG1iRzloZENCemFHRmtiM2RTWVdScGRYTTdDZ2tKQ1habFl6SWdjMmhoWkc5M1RXRndVMmw2WlRzS0NRbDlPd29KQ1hWdWFXWnZjbTBnVTNCdmRFeHBaMmgwVTJoaFpHOTNJSE53YjNSTWFXZG9kRk5vWVdSdmQzTmJJRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDU05sYm1ScFpnb0pJMmxtSUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSkNYVnVhV1p2Y20wZ2JXRjBOQ0J3YjJsdWRGTm9ZV1J2ZDAxaGRISnBlRnNnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1FsMllYSjVhVzVuSUhabFl6UWdkbEJ2YVc1MFUyaGhaRzkzUTI5dmNtUmJJRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tKYzNSeWRXTjBJRkJ2YVc1MFRHbG5hSFJUYUdGa2IzY2dld29KQ1FsbWJHOWhkQ0J6YUdGa2IzZENhV0Z6T3dvSkNRbG1iRzloZENCemFHRmtiM2RPYjNKdFlXeENhV0Z6T3dvSkNRbG1iRzloZENCemFHRmtiM2RTWVdScGRYTTdDZ2tKQ1habFl6SWdjMmhoWkc5M1RXRndVMmw2WlRzS0NRa0pabXh2WVhRZ2MyaGhaRzkzUTJGdFpYSmhUbVZoY2pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzUTJGdFpYSmhSbUZ5T3dvSkNYMDdDZ2tKZFc1cFptOXliU0JRYjJsdWRFeHBaMmgwVTJoaFpHOTNJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzZHpXeUJPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRmh3SUQwZ1lDTnBabVJsWmlCVlUwVmZVMGhCUkU5WFRVRlFDZ2tqYVdZZ1RsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUNCOGZDQk9WVTFmVTFCUFZGOU1TVWRJVkY5VFNFRkVUMWRUSUQ0Z01DQjhmQ0JPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1FsMlpXTXpJSE5vWVdSdmQxZHZjbXhrVG05eWJXRnNJRDBnYVc1MlpYSnpaVlJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnZEhKaGJuTm1iM0p0WldST2IzSnRZV3dzSUhacFpYZE5ZWFJ5YVhnZ0tUc0tDUWwyWldNMElITm9ZV1J2ZDFkdmNteGtVRzl6YVhScGIyNDdDZ2tqWlc1a2FXWUtDU05wWmlCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU03SUdrZ0t5c2dLU0I3Q2drSmMyaGhaRzkzVjI5eWJHUlFiM05wZEdsdmJpQTlJSGR2Y214a1VHOXphWFJwYjI0Z0t5QjJaV00wS0NCemFHRmtiM2RYYjNKc1pFNXZjbTFoYkNBcUlHUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2R6V3lCcElGMHVjMmhoWkc5M1RtOXliV0ZzUW1saGN5d2dNQ0FwT3dvSkNYWkVhWEpsWTNScGIyNWhiRk5vWVdSdmQwTnZiM0prV3lCcElGMGdQU0JrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoZEhKcGVGc2dhU0JkSUNvZ2MyaGhaRzkzVjI5eWJHUlFiM05wZEdsdmJqc0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDZ2tqWlc1a2FXWUtDU05wWmlCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXpzZ2FTQXJLeUFwSUhzS0NRbHphR0ZrYjNkWGIzSnNaRkJ2YzJsMGFXOXVJRDBnZDI5eWJHUlFiM05wZEdsdmJpQXJJSFpsWXpRb0lITm9ZV1J2ZDFkdmNteGtUbTl5YldGc0lDb2djM0J2ZEV4cFoyaDBVMmhoWkc5M2Mxc2dhU0JkTG5Ob1lXUnZkMDV2Y20xaGJFSnBZWE1zSURBZ0tUc0tDUWwyVTNCdmRGTm9ZV1J2ZDBOdmIzSmtXeUJwSUYwZ1BTQnpjRzkwVTJoaFpHOTNUV0YwY21sNFd5QnBJRjBnS2lCemFHRmtiM2RYYjNKc1pGQnZjMmwwYVc5dU93b0pmUW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtDU05sYm1ScFpnb0pJMmxtSUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNN0lHa2dLeXNnS1NCN0Nna0pjMmhoWkc5M1YyOXliR1JRYjNOcGRHbHZiaUE5SUhkdmNteGtVRzl6YVhScGIyNGdLeUIyWldNMEtDQnphR0ZrYjNkWGIzSnNaRTV2Y20xaGJDQXFJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzZHpXeUJwSUYwdWMyaGhaRzkzVG05eWJXRnNRbWxoY3l3Z01DQXBPd29KQ1haUWIybHVkRk5vWVdSdmQwTnZiM0prV3lCcElGMGdQU0J3YjJsdWRGTm9ZV1J2ZDAxaGRISnBlRnNnYVNCZElDb2djMmhoWkc5M1YyOXliR1JRYjNOcGRHbHZianNLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnU25BZ1BTQmdabXh2WVhRZ1oyVjBVMmhoWkc5M1RXRnpheWdwSUhzS0NXWnNiMkYwSUhOb1lXUnZkeUE5SURFdU1Ec0tDU05wWm1SbFppQlZVMFZmVTBoQlJFOVhUVUZRQ2dramFXWWdUbFZOWDBSSlVsOU1TVWRJVkY5VFNFRkVUMWRUSUQ0Z01Bb0pSR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZHlCa2FYSmxZM1JwYjI1aGJFeHBaMmgwT3dvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDBSSlVsOU1TVWRJVkY5VFNFRkVUMWRUT3lCcElDc3JJQ2tnZXdvSkNXUnBjbVZqZEdsdmJtRnNUR2xuYUhRZ1BTQmthWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzYzFzZ2FTQmRPd29KQ1hOb1lXUnZkeUFxUFNCeVpXTmxhWFpsVTJoaFpHOTNJRDhnWjJWMFUyaGhaRzkzS0NCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNGc2dhU0JkTENCa2FYSmxZM1JwYjI1aGJFeHBaMmgwTG5Ob1lXUnZkMDFoY0ZOcGVtVXNJR1JwY21WamRHbHZibUZzVEdsbmFIUXVjMmhoWkc5M1FtbGhjeXdnWkdseVpXTjBhVzl1WVd4TWFXZG9kQzV6YUdGa2IzZFNZV1JwZFhNc0lIWkVhWEpsWTNScGIyNWhiRk5vWVdSdmQwTnZiM0prV3lCcElGMGdLU0E2SURFdU1Ec0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDZ2tqWlc1a2FXWUtDU05wWmlCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSlUzQnZkRXhwWjJoMFUyaGhaRzkzSUhOd2IzUk1hV2RvZERzS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNN0lHa2dLeXNnS1NCN0Nna0pjM0J2ZEV4cFoyaDBJRDBnYzNCdmRFeHBaMmgwVTJoaFpHOTNjMXNnYVNCZE93b0pDWE5vWVdSdmR5QXFQU0J5WldObGFYWmxVMmhoWkc5M0lEOGdaMlYwVTJoaFpHOTNLQ0J6Y0c5MFUyaGhaRzkzVFdGd1d5QnBJRjBzSUhOd2IzUk1hV2RvZEM1emFHRmtiM2ROWVhCVGFYcGxMQ0J6Y0c5MFRHbG5hSFF1YzJoaFpHOTNRbWxoY3l3Z2MzQnZkRXhwWjJoMExuTm9ZV1J2ZDFKaFpHbDFjeXdnZGxOd2IzUlRhR0ZrYjNkRGIyOXlaRnNnYVNCZElDa2dPaUF4TGpBN0NnbDlDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDJWdVpBb0pJMlZ1WkdsbUNna2phV1lnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dsUWIybHVkRXhwWjJoMFUyaGhaRzkzSUhCdmFXNTBUR2xuYUhRN0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV6c2dhU0FyS3lBcElIc0tDUWx3YjJsdWRFeHBaMmgwSUQwZ2NHOXBiblJNYVdkb2RGTm9ZV1J2ZDNOYklHa2dYVHNLQ1FsemFHRmtiM2NnS2owZ2NtVmpaV2wyWlZOb1lXUnZkeUEvSUdkbGRGQnZhVzUwVTJoaFpHOTNLQ0J3YjJsdWRGTm9ZV1J2ZDAxaGNGc2dhU0JkTENCd2IybHVkRXhwWjJoMExuTm9ZV1J2ZDAxaGNGTnBlbVVzSUhCdmFXNTBUR2xuYUhRdWMyaGhaRzkzUW1saGN5d2djRzlwYm5STWFXZG9kQzV6YUdGa2IzZFNZV1JwZFhNc0lIWlFiMmx1ZEZOb1lXUnZkME52YjNKa1d5QnBJRjBzSUhCdmFXNTBUR2xuYUhRdWMyaGhaRzkzUTJGdFpYSmhUbVZoY2l3Z2NHOXBiblJNYVdkb2RDNXphR0ZrYjNkRFlXMWxjbUZHWVhJZ0tTQTZJREV1TURzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0Nna2paVzVrYVdZS0NTTmxibVJwWmdvSmNtVjBkWEp1SUhOb1lXUnZkenNLZldBc0lGbHdJRDBnWUNOcFptUmxaaUJWVTBWZlUwdEpUazVKVGtjS0NXMWhkRFFnWW05dVpVMWhkRmdnUFNCblpYUkNiMjVsVFdGMGNtbDRLQ0J6YTJsdVNXNWtaWGd1ZUNBcE93b0piV0YwTkNCaWIyNWxUV0YwV1NBOUlHZGxkRUp2Ym1WTllYUnlhWGdvSUhOcmFXNUpibVJsZUM1NUlDazdDZ2x0WVhRMElHSnZibVZOWVhSYUlEMGdaMlYwUW05dVpVMWhkSEpwZUNnZ2MydHBia2x1WkdWNExub2dLVHNLQ1cxaGREUWdZbTl1WlUxaGRGY2dQU0JuWlhSQ2IyNWxUV0YwY21sNEtDQnphMmx1U1c1a1pYZ3VkeUFwT3dvalpXNWthV1pnTENCYWNDQTlJR0FqYVdaa1pXWWdWVk5GWDFOTFNVNU9TVTVIQ2dsMWJtbG1iM0p0SUcxaGREUWdZbWx1WkUxaGRISnBlRHNLQ1hWdWFXWnZjbTBnYldGME5DQmlhVzVrVFdGMGNtbDRTVzUyWlhKelpUc0tDU05wWm1SbFppQkNUMDVGWDFSRldGUlZVa1VLQ1FsMWJtbG1iM0p0SUdocFoyaHdJSE5oYlhCc1pYSXlSQ0JpYjI1bFZHVjRkSFZ5WlRzS0NRbDFibWxtYjNKdElHbHVkQ0JpYjI1bFZHVjRkSFZ5WlZOcGVtVTdDZ2tKYldGME5DQm5aWFJDYjI1bFRXRjBjbWw0S0NCamIyNXpkQ0JwYmlCbWJHOWhkQ0JwSUNrZ2V3b0pDUWxtYkc5aGRDQnFJRDBnYVNBcUlEUXVNRHNLQ1FrSlpteHZZWFFnZUNBOUlHMXZaQ2dnYWl3Z1pteHZZWFFvSUdKdmJtVlVaWGgwZFhKbFUybDZaU0FwSUNrN0Nna0pDV1pzYjJGMElIa2dQU0JtYkc5dmNpZ2dhaUF2SUdac2IyRjBLQ0JpYjI1bFZHVjRkSFZ5WlZOcGVtVWdLU0FwT3dvSkNRbG1iRzloZENCa2VDQTlJREV1TUNBdklHWnNiMkYwS0NCaWIyNWxWR1Y0ZEhWeVpWTnBlbVVnS1RzS0NRa0pabXh2WVhRZ1pIa2dQU0F4TGpBZ0x5Qm1iRzloZENnZ1ltOXVaVlJsZUhSMWNtVlRhWHBsSUNrN0Nna0pDWGtnUFNCa2VTQXFJQ2dnZVNBcklEQXVOU0FwT3dvSkNRbDJaV00wSUhZeElEMGdkR1Y0ZEhWeVpUSkVLQ0JpYjI1bFZHVjRkSFZ5WlN3Z2RtVmpNaWdnWkhnZ0tpQW9JSGdnS3lBd0xqVWdLU3dnZVNBcElDazdDZ2tKQ1habFl6UWdkaklnUFNCMFpYaDBkWEpsTWtRb0lHSnZibVZVWlhoMGRYSmxMQ0IyWldNeUtDQmtlQ0FxSUNnZ2VDQXJJREV1TlNBcExDQjVJQ2tnS1RzS0NRa0pkbVZqTkNCMk15QTlJSFJsZUhSMWNtVXlSQ2dnWW05dVpWUmxlSFIxY21Vc0lIWmxZeklvSUdSNElDb2dLQ0I0SUNzZ01pNDFJQ2tzSUhrZ0tTQXBPd29KQ1FsMlpXTTBJSFkwSUQwZ2RHVjRkSFZ5WlRKRUtDQmliMjVsVkdWNGRIVnlaU3dnZG1Wak1pZ2daSGdnS2lBb0lIZ2dLeUF6TGpVZ0tTd2dlU0FwSUNrN0Nna0pDVzFoZERRZ1ltOXVaU0E5SUcxaGREUW9JSFl4TENCMk1pd2dkak1zSUhZMElDazdDZ2tKQ1hKbGRIVnliaUJpYjI1bE93b0pDWDBLQ1NObGJITmxDZ2tKZFc1cFptOXliU0J0WVhRMElHSnZibVZOWVhSeWFXTmxjMXNnVFVGWVgwSlBUa1ZUSUYwN0Nna0piV0YwTkNCblpYUkNiMjVsVFdGMGNtbDRLQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnBJQ2tnZXdvSkNRbHRZWFEwSUdKdmJtVWdQU0JpYjI1bFRXRjBjbWxqWlhOYklHbHVkQ2hwS1NCZE93b0pDUWx5WlhSMWNtNGdZbTl1WlRzS0NRbDlDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dKSEFnUFNCZ0kybG1aR1ZtSUZWVFJWOVRTMGxPVGtsT1J3b0pkbVZqTkNCemEybHVWbVZ5ZEdWNElEMGdZbWx1WkUxaGRISnBlQ0FxSUhabFl6UW9JSFJ5WVc1elptOXliV1ZrTENBeExqQWdLVHNLQ1habFl6UWdjMnRwYm01bFpDQTlJSFpsWXpRb0lEQXVNQ0FwT3dvSmMydHBibTVsWkNBclBTQmliMjVsVFdGMFdDQXFJSE5yYVc1V1pYSjBaWGdnS2lCemEybHVWMlZwWjJoMExuZzdDZ2x6YTJsdWJtVmtJQ3M5SUdKdmJtVk5ZWFJaSUNvZ2MydHBibFpsY25SbGVDQXFJSE5yYVc1WFpXbG5hSFF1ZVRzS0NYTnJhVzV1WldRZ0t6MGdZbTl1WlUxaGRGb2dLaUJ6YTJsdVZtVnlkR1Y0SUNvZ2MydHBibGRsYVdkb2RDNTZPd29KYzJ0cGJtNWxaQ0FyUFNCaWIyNWxUV0YwVnlBcUlITnJhVzVXWlhKMFpYZ2dLaUJ6YTJsdVYyVnBaMmgwTG5jN0NnbDBjbUZ1YzJadmNtMWxaQ0E5SUNnZ1ltbHVaRTFoZEhKcGVFbHVkbVZ5YzJVZ0tpQnphMmx1Ym1Wa0lDa3VlSGw2T3dvalpXNWthV1pnTENCcWNDQTlJR0FqYVdaa1pXWWdWVk5GWDFOTFNVNU9TVTVIQ2dsdFlYUTBJSE5yYVc1TllYUnlhWGdnUFNCdFlYUTBLQ0F3TGpBZ0tUc0tDWE5yYVc1TllYUnlhWGdnS3owZ2MydHBibGRsYVdkb2RDNTRJQ29nWW05dVpVMWhkRmc3Q2dsemEybHVUV0YwY21sNElDczlJSE5yYVc1WFpXbG5hSFF1ZVNBcUlHSnZibVZOWVhSWk93b0pjMnRwYmsxaGRISnBlQ0FyUFNCemEybHVWMlZwWjJoMExub2dLaUJpYjI1bFRXRjBXanNLQ1hOcmFXNU5ZWFJ5YVhnZ0t6MGdjMnRwYmxkbGFXZG9kQzUzSUNvZ1ltOXVaVTFoZEZjN0NnbHphMmx1VFdGMGNtbDRJRDBnWW1sdVpFMWhkSEpwZUVsdWRtVnljMlVnS2lCemEybHVUV0YwY21sNElDb2dZbWx1WkUxaGRISnBlRHNLQ1c5aWFtVmpkRTV2Y20xaGJDQTlJSFpsWXpRb0lITnJhVzVOWVhSeWFYZ2dLaUIyWldNMEtDQnZZbXBsWTNST2IzSnRZV3dzSURBdU1DQXBJQ2t1ZUhsNk93b0pJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVDZ2tKYjJKcVpXTjBWR0Z1WjJWdWRDQTlJSFpsWXpRb0lITnJhVzVOWVhSeWFYZ2dLaUIyWldNMEtDQnZZbXBsWTNSVVlXNW5aVzUwTENBd0xqQWdLU0FwTG5oNWVqc0tDU05sYm1ScFpnb2paVzVrYVdaZ0xDQlJjQ0E5SUdCbWJHOWhkQ0J6Y0dWamRXeGhjbE4wY21WdVozUm9Pd29qYVdaa1pXWWdWVk5GWDFOUVJVTlZURUZTVFVGUUNnbDJaV00wSUhSbGVHVnNVM0JsWTNWc1lYSWdQU0IwWlhoMGRYSmxNa1FvSUhOd1pXTjFiR0Z5VFdGd0xDQjJWWFlnS1RzS0NYTndaV04xYkdGeVUzUnlaVzVuZEdnZ1BTQjBaWGhsYkZOd1pXTjFiR0Z5TG5JN0NpTmxiSE5sQ2dsemNHVmpkV3hoY2xOMGNtVnVaM1JvSUQwZ01TNHdPd29qWlc1a2FXWmdMQ0JMY0NBOUlHQWphV1prWldZZ1ZWTkZYMU5RUlVOVlRFRlNUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCemNHVmpkV3hoY2sxaGNEc0tJMlZ1WkdsbVlDd2daVzBnUFNCZ0kybG1JR1JsWm1sdVpXUW9JRlJQVGtWZlRVRlFVRWxPUnlBcENnbG5iRjlHY21GblEyOXNiM0l1Y21kaUlEMGdkRzl1WlUxaGNIQnBibWNvSUdkc1gwWnlZV2REYjJ4dmNpNXlaMklnS1RzS0kyVnVaR2xtWUN3Z2RHMGdQU0JnSTJsbWJtUmxaaUJ6WVhSMWNtRjBaUW9qWkdWbWFXNWxJSE5oZEhWeVlYUmxLQ0JoSUNrZ1kyeGhiWEFvSUdFc0lEQXVNQ3dnTVM0d0lDa0tJMlZ1WkdsbUNuVnVhV1p2Y20wZ1pteHZZWFFnZEc5dVpVMWhjSEJwYm1kRmVIQnZjM1Z5WlRzS2RtVmpNeUJNYVc1bFlYSlViMjVsVFdGd2NHbHVaeWdnZG1Wak15QmpiMnh2Y2lBcElIc0tDWEpsZEhWeWJpQjBiMjVsVFdGd2NHbHVaMFY0Y0c5emRYSmxJQ29nWTI5c2IzSTdDbjBLZG1Wak15QlNaV2x1YUdGeVpGUnZibVZOWVhCd2FXNW5LQ0IyWldNeklHTnZiRzl5SUNrZ2V3b0pZMjlzYjNJZ0tqMGdkRzl1WlUxaGNIQnBibWRGZUhCdmMzVnlaVHNLQ1hKbGRIVnliaUJ6WVhSMWNtRjBaU2dnWTI5c2IzSWdMeUFvSUhabFl6TW9JREV1TUNBcElDc2dZMjlzYjNJZ0tTQXBPd3A5Q25abFl6TWdUM0IwYVcxcGVtVmtRMmx1Wlc5dVZHOXVaVTFoY0hCcGJtY29JSFpsWXpNZ1kyOXNiM0lnS1NCN0NnbGpiMnh2Y2lBcVBTQjBiMjVsVFdGd2NHbHVaMFY0Y0c5emRYSmxPd29KWTI5c2IzSWdQU0J0WVhnb0lIWmxZek1vSURBdU1DQXBMQ0JqYjJ4dmNpQXRJREF1TURBMElDazdDZ2x5WlhSMWNtNGdjRzkzS0NBb0lHTnZiRzl5SUNvZ0tDQTJMaklnS2lCamIyeHZjaUFySURBdU5TQXBJQ2tnTHlBb0lHTnZiRzl5SUNvZ0tDQTJMaklnS2lCamIyeHZjaUFySURFdU55QXBJQ3NnTUM0d05pQXBMQ0IyWldNektDQXlMaklnS1NBcE93cDlDblpsWXpNZ1VsSlVRVzVrVDBSVVJtbDBLQ0IyWldNeklIWWdLU0I3Q2dsMlpXTXpJR0VnUFNCMklDb2dLQ0IySUNzZ01DNHdNalExTnpnMklDa2dMU0F3TGpBd01EQTVNRFV6TnpzS0NYWmxZek1nWWlBOUlIWWdLaUFvSURBdU9UZ3pOekk1SUNvZ2RpQXJJREF1TkRNeU9UVXhNQ0FwSUNzZ01DNHlNemd3T0RFN0NnbHlaWFIxY200Z1lTQXZJR0k3Q24wS2RtVmpNeUJCUTBWVFJtbHNiV2xqVkc5dVpVMWhjSEJwYm1jb0lIWmxZek1nWTI5c2IzSWdLU0I3Q2dsamIyNXpkQ0J0WVhReklFRkRSVk5KYm5CMWRFMWhkQ0E5SUcxaGRETW9DZ2tKZG1Wak15Z2dNQzQxT1RjeE9Td2dNQzR3TnpZd01Dd2dNQzR3TWpnME1DQXBMQWtKZG1Wak15Z2dNQzR6TlRRMU9Dd2dNQzQ1TURnek5Dd2dNQzR4TXpNNE15QXBMQW9KQ1habFl6TW9JREF1TURRNE1qTXNJREF1TURFMU5qWXNJREF1T0RNM056Y2dLUW9KS1RzS0NXTnZibk4wSUcxaGRETWdRVU5GVTA5MWRIQjFkRTFoZENBOUlHMWhkRE1vQ2drSmRtVmpNeWdnSURFdU5qQTBOelVzSUMwd0xqRXdNakE0TENBdE1DNHdNRE15TnlBcExBa0pkbVZqTXlnZ0xUQXVOVE14TURnc0lDQXhMakV3T0RFekxDQXRNQzR3TnpJM05pQXBMQW9KQ1habFl6TW9JQzB3TGpBM016WTNMQ0F0TUM0d01EWXdOU3dnSURFdU1EYzJNRElnS1FvSktUc0tDV052Ykc5eUlDbzlJSFJ2Ym1WTllYQndhVzVuUlhod2IzTjFjbVVnTHlBd0xqWTdDZ2xqYjJ4dmNpQTlJRUZEUlZOSmJuQjFkRTFoZENBcUlHTnZiRzl5T3dvSlkyOXNiM0lnUFNCU1VsUkJibVJQUkZSR2FYUW9JR052Ykc5eUlDazdDZ2xqYjJ4dmNpQTlJRUZEUlZOUGRYUndkWFJOWVhRZ0tpQmpiMnh2Y2pzS0NYSmxkSFZ5YmlCellYUjFjbUYwWlNnZ1kyOXNiM0lnS1RzS2ZRcDJaV016SUVOMWMzUnZiVlJ2Ym1WTllYQndhVzVuS0NCMlpXTXpJR052Ykc5eUlDa2dleUJ5WlhSMWNtNGdZMjlzYjNJN0lIMWdMQ0J1YlNBOUlHQWphV1prWldZZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGdvSlpteHZZWFFnZEhKaGJuTnRhWE56YVc5dVFXeHdhR0VnUFNBeExqQTdDZ2xtYkc5aGRDQjBjbUZ1YzIxcGMzTnBiMjVHWVdOMGIzSWdQU0IwY21GdWMyMXBjM05wYjI0N0NnbG1iRzloZENCMGFHbGphMjVsYzNOR1lXTjBiM0lnUFNCMGFHbGphMjVsYzNNN0Nna2phV1prWldZZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGsxQlVBb0pDWFJ5WVc1emJXbHpjMmx2YmtaaFkzUnZjaUFxUFNCMFpYaDBkWEpsTWtRb0lIUnlZVzV6YldsemMybHZiazFoY0N3Z2RsVjJJQ2t1Y2pzS0NTTmxibVJwWmdvSkkybG1aR1ZtSUZWVFJWOVVTRWxEUzA1RlUxTk5RVkFLQ1FsMGFHbGphMjVsYzNOR1lXTjBiM0lnS2owZ2RHVjRkSFZ5WlRKRUtDQjBhR2xqYTI1bGMzTk5ZWEFzSUhaVmRpQXBMbWM3Q2dralpXNWthV1lLQ1habFl6TWdjRzl6SUQwZ2RsZHZjbXhrVUc5emFYUnBiMjQ3Q2dsMlpXTXpJSFlnUFNCdWIzSnRZV3hwZW1Vb0lHTmhiV1Z5WVZCdmMybDBhVzl1SUMwZ2NHOXpJQ2s3Q2dsMlpXTXpJRzRnUFNCcGJuWmxjbk5sVkhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCdWIzSnRZV3dzSUhacFpYZE5ZWFJ5YVhnZ0tUc0tDWFpsWXpRZ2RISmhibk50YVhOemFXOXVJRDBnWjJWMFNVSk1WbTlzZFcxbFVtVm1jbUZqZEdsdmJpZ0tDUWx1TENCMkxDQnliM1ZuYUc1bGMzTkdZV04wYjNJc0lHMWhkR1Z5YVdGc0xtUnBabVoxYzJWRGIyeHZjaXdnYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpEYjJ4dmNpd2diV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkdPVEFzQ2drSmNHOXpMQ0J0YjJSbGJFMWhkSEpwZUN3Z2RtbGxkMDFoZEhKcGVDd2djSEp2YW1WamRHbHZiazFoZEhKcGVDd2dhVzl5TENCMGFHbGphMjVsYzNOR1lXTjBiM0lzQ2drSllYUjBaVzUxWVhScGIyNURiMnh2Y2l3Z1lYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTQXBPd29KZEc5MFlXeEVhV1ptZFhObElEMGdiV2w0S0NCMGIzUmhiRVJwWm1aMWMyVXNJSFJ5WVc1emJXbHpjMmx2Ymk1eVoySXNJSFJ5WVc1emJXbHpjMmx2YmtaaFkzUnZjaUFwT3dvSmRISmhibk50YVhOemFXOXVRV3h3YUdFZ1BTQnRhWGdvSUhSeVlXNXpiV2x6YzJsdmJrRnNjR2hoTENCMGNtRnVjMjFwYzNOcGIyNHVZU3dnZEhKaGJuTnRhWE56YVc5dVJtRmpkRzl5SUNrN0NpTmxibVJwWm1Bc0lHbHRJRDBnWUNOcFptUmxaaUJWVTBWZlZGSkJUbE5OU1ZOVFNVOU9DZ2wxYm1sbWIzSnRJR1pzYjJGMElIUnlZVzV6YldsemMybHZianNLQ1hWdWFXWnZjbTBnWm14dllYUWdkR2hwWTJ0dVpYTnpPd29KZFc1cFptOXliU0JtYkc5aGRDQmhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxPd29KZFc1cFptOXliU0IyWldNeklHRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJN0Nna2phV1prWldZZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGsxQlVBb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSFJ5WVc1emJXbHpjMmx2YmsxaGNEc0tDU05sYm1ScFpnb0pJMmxtWkdWbUlGVlRSVjlVU0VsRFMwNUZVMU5OUVZBS0NRbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQjBhR2xqYTI1bGMzTk5ZWEE3Q2dralpXNWthV1lLQ1hWdWFXWnZjbTBnZG1Wak1pQjBjbUZ1YzIxcGMzTnBiMjVUWVcxd2JHVnlVMmw2WlRzS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlIUnlZVzV6YldsemMybHZibE5oYlhCc1pYSk5ZWEE3Q2dsMWJtbG1iM0p0SUcxaGREUWdiVzlrWld4TllYUnlhWGc3Q2dsMWJtbG1iM0p0SUcxaGREUWdjSEp2YW1WamRHbHZiazFoZEhKcGVEc0tDWFpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JRYjNOcGRHbHZianNLQ1habFl6TWdaMlYwVm05c2RXMWxWSEpoYm5OdGFYTnphVzl1VW1GNUtDQjJaV016SUc0c0lIWmxZek1nZGl3Z1pteHZZWFFnZEdocFkydHVaWE56TENCbWJHOWhkQ0JwYjNJc0lHMWhkRFFnYlc5a1pXeE5ZWFJ5YVhnZ0tTQjdDZ2tKZG1Wak15QnlaV1p5WVdOMGFXOXVWbVZqZEc5eUlEMGdjbVZtY21GamRDZ2dMU0IyTENCdWIzSnRZV3hwZW1Vb0lHNGdLU3dnTVM0d0lDOGdhVzl5SUNrN0Nna0pkbVZqTXlCdGIyUmxiRk5qWVd4bE93b0pDVzF2WkdWc1UyTmhiR1V1ZUNBOUlHeGxibWQwYUNnZ2RtVmpNeWdnYlc5a1pXeE5ZWFJ5YVhoYklEQWdYUzU0ZVhvZ0tTQXBPd29KQ1cxdlpHVnNVMk5oYkdVdWVTQTlJR3hsYm1kMGFDZ2dkbVZqTXlnZ2JXOWtaV3hOWVhSeWFYaGJJREVnWFM1NGVYb2dLU0FwT3dvSkNXMXZaR1ZzVTJOaGJHVXVlaUE5SUd4bGJtZDBhQ2dnZG1Wak15Z2diVzlrWld4TllYUnlhWGhiSURJZ1hTNTRlWG9nS1NBcE93b0pDWEpsZEhWeWJpQnViM0p0WVd4cGVtVW9JSEpsWm5KaFkzUnBiMjVXWldOMGIzSWdLU0FxSUhSb2FXTnJibVZ6Y3lBcUlHMXZaR1ZzVTJOaGJHVTdDZ2w5Q2dsbWJHOWhkQ0JoY0hCc2VVbHZjbFJ2VW05MVoyaHVaWE56S0NCbWJHOWhkQ0J5YjNWbmFHNWxjM01zSUdac2IyRjBJR2x2Y2lBcElIc0tDUWx5WlhSMWNtNGdjbTkxWjJodVpYTnpJQ29nWTJ4aGJYQW9JR2x2Y2lBcUlESXVNQ0F0SURJdU1Dd2dNQzR3TENBeExqQWdLVHNLQ1gwS0NYWmxZelFnWjJWMFZISmhibk50YVhOemFXOXVVMkZ0Y0d4bEtDQjJaV015SUdaeVlXZERiMjl5WkN3Z1pteHZZWFFnY205MVoyaHVaWE56TENCbWJHOWhkQ0JwYjNJZ0tTQjdDZ2tKWm14dllYUWdabkpoYldWaWRXWm1aWEpNYjJRZ1BTQnNiMmN5S0NCMGNtRnVjMjFwYzNOcGIyNVRZVzF3YkdWeVUybDZaUzU0SUNrZ0tpQmhjSEJzZVVsdmNsUnZVbTkxWjJodVpYTnpLQ0J5YjNWbmFHNWxjM01zSUdsdmNpQXBPd29KQ1NOcFptUmxaaUJVUlZoVVZWSkZYMHhQUkY5RldGUUtDUWtKY21WMGRYSnVJSFJsZUhSMWNtVXlSRXh2WkVWWVZDZ2dkSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxjazFoY0N3Z1puSmhaME52YjNKa0xuaDVMQ0JtY21GdFpXSjFabVpsY2t4dlpDQXBPd29KQ1NObGJITmxDZ2tKQ1hKbGRIVnliaUIwWlhoMGRYSmxNa1FvSUhSeVlXNXpiV2x6YzJsdmJsTmhiWEJzWlhKTllYQXNJR1p5WVdkRGIyOXlaQzU0ZVN3Z1puSmhiV1ZpZFdabVpYSk1iMlFnS1RzS0NRa2paVzVrYVdZS0NYMEtDWFpsWXpNZ1lYQndiSGxXYjJ4MWJXVkJkSFJsYm5WaGRHbHZiaWdnZG1Wak15QnlZV1JwWVc1alpTd2dabXh2WVhRZ2RISmhibk50YVhOemFXOXVSR2x6ZEdGdVkyVXNJSFpsWXpNZ1lYUjBaVzUxWVhScGIyNURiMnh2Y2l3Z1pteHZZWFFnWVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlNBcElIc0tDUWxwWmlBb0lHRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdQVDBnTUM0d0lDa2dld29KQ1FseVpYUjFjbTRnY21Ga2FXRnVZMlU3Q2drSmZTQmxiSE5sSUhzS0NRa0pkbVZqTXlCaGRIUmxiblZoZEdsdmJrTnZaV1ptYVdOcFpXNTBJRDBnTFd4dlp5Z2dZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpQXBJQzhnWVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlRzS0NRa0pkbVZqTXlCMGNtRnVjMjFwZEhSaGJtTmxJRDBnWlhod0tDQXRJR0YwZEdWdWRXRjBhVzl1UTI5bFptWnBZMmxsYm5RZ0tpQjBjbUZ1YzIxcGMzTnBiMjVFYVhOMFlXNWpaU0FwT3drSkNYSmxkSFZ5YmlCMGNtRnVjMjFwZEhSaGJtTmxJQ29nY21Ga2FXRnVZMlU3Q2drSmZRb0pmUW9KZG1Wak5DQm5aWFJKUWt4V2IyeDFiV1ZTWldaeVlXTjBhVzl1S0NCMlpXTXpJRzRzSUhabFl6TWdkaXdnWm14dllYUWdjbTkxWjJodVpYTnpMQ0IyWldNeklHUnBabVoxYzJWRGIyeHZjaXdnZG1Wak15QnpjR1ZqZFd4aGNrTnZiRzl5TENCbWJHOWhkQ0J6Y0dWamRXeGhja1k1TUN3S0NRbDJaV016SUhCdmMybDBhVzl1TENCdFlYUTBJRzF2WkdWc1RXRjBjbWw0TENCdFlYUTBJSFpwWlhkTllYUnlhWGdzSUcxaGREUWdjSEp2YWsxaGRISnBlQ3dnWm14dllYUWdhVzl5TENCbWJHOWhkQ0IwYUdsamEyNWxjM01zQ2drSmRtVmpNeUJoZEhSbGJuVmhkR2x2YmtOdmJHOXlMQ0JtYkc5aGRDQmhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJQ2tnZXdvSkNYWmxZek1nZEhKaGJuTnRhWE56YVc5dVVtRjVJRDBnWjJWMFZtOXNkVzFsVkhKaGJuTnRhWE56YVc5dVVtRjVLQ0J1TENCMkxDQjBhR2xqYTI1bGMzTXNJR2x2Y2l3Z2JXOWtaV3hOWVhSeWFYZ2dLVHNLQ1FsMlpXTXpJSEpsWm5KaFkzUmxaRkpoZVVWNGFYUWdQU0J3YjNOcGRHbHZiaUFySUhSeVlXNXpiV2x6YzJsdmJsSmhlVHNLQ1FsMlpXTTBJRzVrWTFCdmN5QTlJSEJ5YjJwTllYUnlhWGdnS2lCMmFXVjNUV0YwY21sNElDb2dkbVZqTkNnZ2NtVm1jbUZqZEdWa1VtRjVSWGhwZEN3Z01TNHdJQ2s3Q2drSmRtVmpNaUJ5WldaeVlXTjBhVzl1UTI5dmNtUnpJRDBnYm1SalVHOXpMbmg1SUM4Z2JtUmpVRzl6TG5jN0Nna0pjbVZtY21GamRHbHZia052YjNKa2N5QXJQU0F4TGpBN0Nna0pjbVZtY21GamRHbHZia052YjNKa2N5QXZQU0F5TGpBN0Nna0pkbVZqTkNCMGNtRnVjMjFwZEhSbFpFeHBaMmgwSUQwZ1oyVjBWSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxLQ0J5WldaeVlXTjBhVzl1UTI5dmNtUnpMQ0J5YjNWbmFHNWxjM01zSUdsdmNpQXBPd29KQ1habFl6TWdZWFIwWlc1MVlYUmxaRU52Ykc5eUlEMGdZWEJ3YkhsV2IyeDFiV1ZCZEhSbGJuVmhkR2x2YmlnZ2RISmhibk50YVhSMFpXUk1hV2RvZEM1eVoySXNJR3hsYm1kMGFDZ2dkSEpoYm5OdGFYTnphVzl1VW1GNUlDa3NJR0YwZEdWdWRXRjBhVzl1UTI5c2IzSXNJR0YwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlVnS1RzS0NRbDJaV016SUVZZ1BTQkZiblpwY205dWJXVnVkRUpTUkVZb0lHNHNJSFlzSUhOd1pXTjFiR0Z5UTI5c2IzSXNJSE53WldOMWJHRnlSamt3TENCeWIzVm5hRzVsYzNNZ0tUc0tDUWx5WlhSMWNtNGdkbVZqTkNnZ0tDQXhMakFnTFNCR0lDa2dLaUJoZEhSbGJuVmhkR1ZrUTI5c2IzSWdLaUJrYVdabWRYTmxRMjlzYjNJc0lIUnlZVzV6YldsMGRHVmtUR2xuYUhRdVlTQXBPd29KZlFvalpXNWthV1pnTENCeWJTQTlJR0FqYVdZZ0tDQmtaV1pwYm1Wa0tDQlZVMFZmVlZZZ0tTQW1KaUFoSUdSbFptbHVaV1FvSUZWV1UxOVdSVkpVUlZoZlQwNU1XU0FwSUNrS0NYWmhjbmxwYm1jZ2RtVmpNaUIyVlhZN0NpTmxibVJwWm1Bc0lITnRJRDBnWUNOcFptUmxaaUJWVTBWZlZWWUtDU05wWm1SbFppQlZWbE5mVmtWU1ZFVllYMDlPVEZrS0NRbDJaV015SUhaVmRqc0tDU05sYkhObENna0pkbUZ5ZVdsdVp5QjJaV015SUhaVmRqc0tDU05sYm1ScFpnb0pkVzVwWm05eWJTQnRZWFF6SUhWMlZISmhibk5tYjNKdE93b2paVzVrYVdaZ0xDQnZiU0E5SUdBamFXWmtaV1lnVlZORlgxVldDZ2wyVlhZZ1BTQW9JSFYyVkhKaGJuTm1iM0p0SUNvZ2RtVmpNeWdnZFhZc0lERWdLU0FwTG5oNU93b2paVzVrYVdaZ0xDQmhiU0E5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDB4SlIwaFVUVUZRSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDBGUFRVRlFJQ2tLQ1haaGNubHBibWNnZG1Wak1pQjJWWFl5T3dvalpXNWthV1pnTENCc2JTQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMHhKUjBoVVRVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1ZWTkZYMEZQVFVGUUlDa0tDV0YwZEhKcFluVjBaU0IyWldNeUlIVjJNanNLQ1haaGNubHBibWNnZG1Wak1pQjJWWFl5T3dvSmRXNXBabTl5YlNCdFlYUXpJSFYyTWxSeVlXNXpabTl5YlRzS0kyVnVaR2xtWUN3Z1kyMGdQU0JnSTJsbUlHUmxabWx1WldRb0lGVlRSVjlNU1VkSVZFMUJVQ0FwSUh4OElHUmxabWx1WldRb0lGVlRSVjlCVDAxQlVDQXBDZ2wyVlhZeUlEMGdLQ0IxZGpKVWNtRnVjMlp2Y20wZ0tpQjJaV016S0NCMWRqSXNJREVnS1NBcExuaDVPd29qWlc1a2FXWmdMQ0JvYlNBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVlZORlgwVk9WazFCVUNBcElIeDhJR1JsWm1sdVpXUW9JRVJKVTFSQlRrTkZJQ2tnZkh3Z1pHVm1hVzVsWkNBb0lGVlRSVjlUU0VGRVQxZE5RVkFnS1NCOGZDQmtaV1pwYm1Wa0lDZ2dWVk5GWDFSU1FVNVRUVWxUVTBsUFRpQXBDZ2wyWldNMElIZHZjbXhrVUc5emFYUnBiMjRnUFNCMlpXTTBLQ0IwY21GdWMyWnZjbTFsWkN3Z01TNHdJQ2s3Q2dramFXWmtaV1lnVlZORlgwbE9VMVJCVGtOSlRrY0tDUWwzYjNKc1pGQnZjMmwwYVc5dUlEMGdhVzV6ZEdGdVkyVk5ZWFJ5YVhnZ0tpQjNiM0pzWkZCdmMybDBhVzl1T3dvSkkyVnVaR2xtQ2dsM2IzSnNaRkJ2YzJsMGFXOXVJRDBnYlc5a1pXeE5ZWFJ5YVhnZ0tpQjNiM0pzWkZCdmMybDBhVzl1T3dvalpXNWthV1pnTENCMWJTQTlJR0IyWVhKNWFXNW5JSFpsWXpJZ2RsVjJPd3AxYm1sbWIzSnRJRzFoZERNZ2RYWlVjbUZ1YzJadmNtMDdDblp2YVdRZ2JXRnBiaWdwSUhzS0NYWlZkaUE5SUNnZ2RYWlVjbUZ1YzJadmNtMGdLaUIyWldNektDQjFkaXdnTVNBcElDa3VlSGs3Q2dsbmJGOVFiM05wZEdsdmJpQTlJSFpsWXpRb0lIQnZjMmwwYVc5dUxuaDVMQ0F4TGpBc0lERXVNQ0FwT3dwOVlDd2daRzBnUFNCZ2RXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2RESkVPd3AyWVhKNWFXNW5JSFpsWXpJZ2RsVjJPd3AyYjJsa0lHMWhhVzRvS1NCN0NnbDJaV00wSUhSbGVFTnZiRzl5SUQwZ2RHVjRkSFZ5WlRKRUtDQjBNa1FzSUhaVmRpQXBPd29KWjJ4ZlJuSmhaME52Ykc5eUlEMGdiV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2dkR1Y0UTI5c2IzSWdLVHNLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ24xZ0xDQm1iU0E5SUdCMllYSjVhVzVuSUhabFl6TWdkbGR2Y214a1JHbHlaV04wYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBncDJiMmxrSUcxaGFXNG9LU0I3Q2dsMlYyOXliR1JFYVhKbFkzUnBiMjRnUFNCMGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lIQnZjMmwwYVc5dUxDQnRiMlJsYkUxaGRISnBlQ0FwT3dvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1dkc1gxQnZjMmwwYVc5dUxub2dQU0JuYkY5UWIzTnBkR2x2Ymk1M093cDlZQ3dnY0cwZ1BTQmdJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOWpiMjF0YjI1ZmNHRnljMTltY21GbmJXVnVkRDRLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93cDJZWEo1YVc1bklIWmxZek1nZGxkdmNteGtSR2x5WldOMGFXOXVPd29qYVc1amJIVmtaU0E4WTNWaVpWOTFkbDl5Wldac1pXTjBhVzl1WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2wyWldNeklIWlNaV1pzWldOMElEMGdkbGR2Y214a1JHbHlaV04wYVc5dU93b0pJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOW1jbUZuYldWdWRENEtDV2RzWDBaeVlXZERiMnh2Y2lBOUlHVnVka052Ykc5eU93b0paMnhmUm5KaFowTnZiRzl5TG1FZ0tqMGdiM0JoWTJsMGVUc0tDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDbjFnTENCdGJTQTlJR0FqYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTkyWlhKMFpYZytDblpoY25scGJtY2dkbVZqTWlCMlNHbG5hRkJ5WldOcGMybHZibHBYT3dwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4ZFhaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzVpWVhObFgzWmxjblJsZUQ0S0NTTnBabVJsWmlCVlUwVmZSRWxUVUV4QlEwVk5SVTVVVFVGUUNna0pJMmx1WTJ4MVpHVWdQR0psWjJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1FramFXNWpiSFZrWlNBOGJXOXljR2h1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pDU05wYm1Oc2RXUmxJRHh6YTJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NObGJtUnBaZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGNISnZhbVZqZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOTJaWEowWlhnK0NnbDJTR2xuYUZCeVpXTnBjMmx2YmxwWElEMGdaMnhmVUc5emFYUnBiMjR1ZW5jN0NuMWdMQ0JuYlNBOUlHQWphV1lnUkVWUVZFaGZVRUZEUzBsT1J5QTlQU0F6TWpBd0NnbDFibWxtYjNKdElHWnNiMkYwSUc5d1lXTnBkSGs3Q2lObGJtUnBaZ29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4Y0dGamEybHVaejRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbUZ5ZVdsdVp5QjJaV015SUhaSWFXZG9VSEpsWTJsemFXOXVXbGM3Q25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZabkpoWjIxbGJuUStDZ2wyWldNMElHUnBabVoxYzJWRGIyeHZjaUE5SUhabFl6UW9JREV1TUNBcE93b0pJMmxtSUVSRlVGUklYMUJCUTB0SlRrY2dQVDBnTXpJd01Bb0pDV1JwWm1aMWMyVkRiMnh2Y2k1aElEMGdiM0JoWTJsMGVUc0tDU05sYm1ScFpnb0pJMmx1WTJ4MVpHVWdQRzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZabkpoWjIxbGJuUStDZ2xtYkc5aGRDQm1jbUZuUTI5dmNtUmFJRDBnTUM0MUlDb2dka2hwWjJoUWNtVmphWE5wYjI1YVYxc3dYU0F2SUhaSWFXZG9VSEpsWTJsemFXOXVXbGRiTVYwZ0t5QXdMalU3Q2dramFXWWdSRVZRVkVoZlVFRkRTMGxPUnlBOVBTQXpNakF3Q2drSloyeGZSbkpoWjBOdmJHOXlJRDBnZG1Wak5DZ2dkbVZqTXlnZ01TNHdJQzBnWm5KaFowTnZiM0prV2lBcExDQnZjR0ZqYVhSNUlDazdDZ2tqWld4cFppQkVSVkJVU0Y5UVFVTkxTVTVISUQwOUlETXlNREVLQ1FsbmJGOUdjbUZuUTI5c2IzSWdQU0J3WVdOclJHVndkR2hVYjFKSFFrRW9JR1p5WVdkRGIyOXlaRm9nS1RzS0NTTmxibVJwWmdwOVlDd2dlRzBnUFNCZ0kyUmxabWx1WlNCRVNWTlVRVTVEUlFwMllYSjVhVzVuSUhabFl6TWdkbGR2Y214a1VHOXphWFJwYjI0N0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOTJaWEowWlhnK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4MWRsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm1KaGMyVmZkbVZ5ZEdWNFBnb0pJMmxtWkdWbUlGVlRSVjlFU1ZOUVRFRkRSVTFGVGxSTlFWQUtDUWtqYVc1amJIVmtaU0E4WW1WbmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkNTTnBibU5zZFdSbElEeHRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZytDZ2tKSTJsdVkyeDFaR1VnUEhOcmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkyVnVaR2xtQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeDNiM0pzWkhCdmMxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0NYWlhiM0pzWkZCdmMybDBhVzl1SUQwZ2QyOXliR1JRYjNOcGRHbHZiaTU0ZVhvN0NuMWdMQ0I1YlNBOUlHQWpaR1ZtYVc1bElFUkpVMVJCVGtORkNuVnVhV1p2Y20wZ2RtVmpNeUJ5WldabGNtVnVZMlZRYjNOcGRHbHZianNLZFc1cFptOXliU0JtYkc5aGRDQnVaV0Z5UkdsemRHRnVZMlU3Q25WdWFXWnZjbTBnWm14dllYUWdabUZ5UkdsemRHRnVZMlU3Q25aaGNubHBibWNnZG1Wak15QjJWMjl5YkdSUWIzTnBkR2x2YmpzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIQmhZMnRwYm1jK0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1SUNncElIc0tDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZabkpoWjIxbGJuUStDZ2wyWldNMElHUnBabVoxYzJWRGIyeHZjaUE5SUhabFl6UW9JREV1TUNBcE93b0pJMmx1WTJ4MVpHVWdQRzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmWm5KaFoyMWxiblErQ2dsbWJHOWhkQ0JrYVhOMElEMGdiR1Z1WjNSb0tDQjJWMjl5YkdSUWIzTnBkR2x2YmlBdElISmxabVZ5Wlc1alpWQnZjMmwwYVc5dUlDazdDZ2xrYVhOMElEMGdLQ0JrYVhOMElDMGdibVZoY2tScGMzUmhibU5sSUNrZ0x5QW9JR1poY2tScGMzUmhibU5sSUMwZ2JtVmhja1JwYzNSaGJtTmxJQ2s3Q2dsa2FYTjBJRDBnYzJGMGRYSmhkR1VvSUdScGMzUWdLVHNLQ1dkc1gwWnlZV2REYjJ4dmNpQTlJSEJoWTJ0RVpYQjBhRlJ2VWtkQ1FTZ2daR2x6ZENBcE93cDlZQ3dnZG0wZ1BTQmdkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRVJwY21WamRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLZG05cFpDQnRZV2x1S0NrZ2V3b0pkbGR2Y214a1JHbHlaV04wYVc5dUlEMGdkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0J3YjNOcGRHbHZiaXdnYlc5a1pXeE5ZWFJ5YVhnZ0tUc0tDU05wYm1Oc2RXUmxJRHhpWldkcGJsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0NuMWdMQ0JmYlNBOUlHQjFibWxtYjNKdElITmhiWEJzWlhJeVJDQjBSWEYxYVhKbFkzUTdDblpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JFYVhKbFkzUnBiMjQ3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ25admFXUWdiV0ZwYmlncElIc0tDWFpsWXpNZ1pHbHlaV04wYVc5dUlEMGdibTl5YldGc2FYcGxLQ0IyVjI5eWJHUkVhWEpsWTNScGIyNGdLVHNLQ1habFl6SWdjMkZ0Y0d4bFZWWWdQU0JsY1hWcGNtVmpkRlYyS0NCa2FYSmxZM1JwYjI0Z0tUc0tDWFpsWXpRZ2RHVjRRMjlzYjNJZ1BTQjBaWGgwZFhKbE1rUW9JSFJGY1hWcGNtVmpkQ3dnYzJGdGNHeGxWVllnS1RzS0NXZHNYMFp5WVdkRGIyeHZjaUE5SUcxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUhSbGVFTnZiRzl5SUNrN0Nna2phVzVqYkhWa1pTQThkRzl1WlcxaGNIQnBibWRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpXNWpiMlJwYm1kelgyWnlZV2R0Wlc1MFBncDlZQ3dnVFcwZ1BTQmdkVzVwWm05eWJTQm1iRzloZENCelkyRnNaVHNLWVhSMGNtbGlkWFJsSUdac2IyRjBJR3hwYm1WRWFYTjBZVzVqWlRzS2RtRnllV2x1WnlCbWJHOWhkQ0IyVEdsdVpVUnBjM1JoYm1ObE93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThZMjlzYjNKZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0NnbDJUR2x1WlVScGMzUmhibU5sSUQwZ2MyTmhiR1VnS2lCc2FXNWxSR2x6ZEdGdVkyVTdDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtmV0FzSUdKdElEMGdZSFZ1YVdadmNtMGdkbVZqTXlCa2FXWm1kWE5sT3dwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDblZ1YVdadmNtMGdabXh2WVhRZ1pHRnphRk5wZW1VN0NuVnVhV1p2Y20wZ1pteHZZWFFnZEc5MFlXeFRhWHBsT3dwMllYSjVhVzVuSUdac2IyRjBJSFpNYVc1bFJHbHpkR0Z1WTJVN0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbHBaaUFvSUcxdlpDZ2dka3hwYm1WRWFYTjBZVzVqWlN3Z2RHOTBZV3hUYVhwbElDa2dQaUJrWVhOb1UybDZaU0FwSUhzS0NRbGthWE5qWVhKa093b0pmUW9KZG1Wak15QnZkWFJuYjJsdVoweHBaMmgwSUQwZ2RtVmpNeWdnTUM0d0lDazdDZ2wyWldNMElHUnBabVoxYzJWRGIyeHZjaUE5SUhabFl6UW9JR1JwWm1aMWMyVXNJRzl3WVdOcGRIa2dLVHNLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOW1jbUZuYldWdWRENEtDVzkxZEdkdmFXNW5UR2xuYUhRZ1BTQmthV1ptZFhObFEyOXNiM0l1Y21kaU93b0pJMmx1WTJ4MVpHVWdQRzkxZEhCMWRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblErQ24xZ0xDQjNiU0E5SUdBamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4MWRqSmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4bGJuWnRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgzWmxjblJsZUQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEhWMlgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeDFkakpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYM1psY25SbGVENEtDU05wWmlCa1pXWnBibVZrSUNnZ1ZWTkZYMFZPVmsxQlVDQXBJSHg4SUdSbFptbHVaV1FnS0NCVlUwVmZVMHRKVGs1SlRrY2dLUW9KQ1NOcGJtTnNkV1JsSUR4aVpXZHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1FramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkNTTnBibU5zZFdSbElEeHphMmx1Ym05eWJXRnNYM1psY25SbGVENEtDUWtqYVc1amJIVmtaU0E4WkdWbVlYVnNkRzV2Y20xaGJGOTJaWEowWlhnK0Nna2paVzVrYVdZS0NTTnBibU5zZFdSbElEeGlaV2RwYmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4M2IzSnNaSEJ2YzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpXNTJiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZkbVZ5ZEdWNFBncDlZQ3dnVTIwZ1BTQmdkVzVwWm05eWJTQjJaV016SUdScFptWjFjMlU3Q25WdWFXWnZjbTBnWm14dllYUWdiM0JoWTJsMGVUc0tJMmxtYm1SbFppQkdURUZVWDFOSVFVUkZSQW9KZG1GeWVXbHVaeUIyWldNeklIWk9iM0p0WVd3N0NpTmxibVJwWmdvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOFpHbDBhR1Z5YVc1blgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSFYyTWw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYjIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHbG5hSFJ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjlqYjIxdGIyNWZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTNWaVpWOTFkbDl5Wldac1pXTjBhVzl1WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHpjR1ZqZFd4aGNtMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYMlp5WVdkdFpXNTBQZ29KZG1Wak5DQmthV1ptZFhObFEyOXNiM0lnUFNCMlpXTTBLQ0JrYVdabWRYTmxMQ0J2Y0dGamFYUjVJQ2s3Q2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHpjR1ZqZFd4aGNtMWhjRjltY21GbmJXVnVkRDRLQ1ZKbFpteGxZM1JsWkV4cFoyaDBJSEpsWm14bFkzUmxaRXhwWjJoMElEMGdVbVZtYkdWamRHVmtUR2xuYUhRb0lIWmxZek1vSURBdU1DQXBMQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwSUNrN0Nna2phV1prWldZZ1ZWTkZYMHhKUjBoVVRVRlFDZ2tKZG1Wak5DQnNhV2RvZEUxaGNGUmxlR1ZzUFNCMFpYaDBkWEpsTWtRb0lHeHBaMmgwVFdGd0xDQjJWWFl5SUNrN0Nna0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNzOUlHeHBaMmgwVFdGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnYkdsbmFIUk5ZWEJVWlhobGJDQXBMbkpuWWlBcUlHeHBaMmgwVFdGd1NXNTBaVzV6YVhSNU93b0pJMlZzYzJVS0NRbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3owZ2RtVmpNeWdnTVM0d0lDazdDZ2tqWlc1a2FXWUtDU05wYm1Oc2RXUmxJRHhoYjIxaGNGOW1jbUZuYldWdWRENEtDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBcVBTQmthV1ptZFhObFEyOXNiM0l1Y21kaU93b0pkbVZqTXlCdmRYUm5iMmx1WjB4cFoyaDBJRDBnY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUkVhV1ptZFhObE93b0pJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh2ZFhSd2RYUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4ZEc5dVpXMWhjSEJwYm1kZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaVzVqYjJScGJtZHpYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdadloxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh3Y21WdGRXeDBhWEJzYVdWa1gyRnNjR2hoWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHUnBkR2hsY21sdVoxOW1jbUZuYldWdWRENEtmV0FzSUZSdElEMGdZQ05rWldacGJtVWdURUZOUWtWU1ZBcDJZWEo1YVc1bklIWmxZek1nZGt4cFoyaDBSbkp2Ym5RN0NuWmhjbmxwYm1jZ2RtVmpNeUIyU1c1a2FYSmxZM1JHY205dWREc0tJMmxtWkdWbUlFUlBWVUpNUlY5VFNVUkZSQW9KZG1GeWVXbHVaeUIyWldNeklIWk1hV2RvZEVKaFkyczdDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RrbHVaR2x5WldOMFFtRmphenNLSTJWdVpHbG1DaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSFYyTWw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdKelpHWnpQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnpYM0JoY25OZlltVm5hVzQrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BIVjJYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHgxZGpKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0dodWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNWlZWE5sWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGtaV1poZFd4MGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHgzYjNKc1pIQnZjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wlc1MmJXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZiR0Z0WW1WeWRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhtYjJkZmRtVnlkR1Y0UGdwOVlDd2dSVzBnUFNCZ2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdkbVZqTXlCbGJXbHpjMmwyWlRzS2RXNXBabTl5YlNCbWJHOWhkQ0J2Y0dGamFYUjVPd3AyWVhKNWFXNW5JSFpsWXpNZ2RreHBaMmgwUm5KdmJuUTdDblpoY25scGJtY2dkbVZqTXlCMlNXNWthWEpsWTNSR2NtOXVkRHNLSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSmRtRnllV2x1WnlCMlpXTXpJSFpNYVdkb2RFSmhZMnM3Q2dsMllYSjVhVzVuSUhabFl6TWdka2x1WkdseVpXTjBRbUZqYXpzS0kyVnVaR2xtQ2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4d1lXTnJhVzVuUGdvamFXNWpiSFZrWlNBOFpHbDBhR1Z5YVc1blgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSFYyTWw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYjIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHbG5hSFJ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdGFYTnphWFpsYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bGJuWnRZWEJmWTI5dGJXOXVYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGxiblp0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOMVltVmZkWFpmY21WbWJHVmpkR2x2Ymw5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHSnpaR1p6UGdvamFXNWpiSFZrWlNBOGJHbG5hSFJ6WDNCaGNuTmZZbVZuYVc0K0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRnphMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjM0JsWTNWc1lYSnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1habFl6UWdaR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnWkdsbVpuVnpaU3dnYjNCaFkybDBlU0FwT3dvSlVtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdQU0JTWldac1pXTjBaV1JNYVdkb2RDZ2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrZ0tUc0tDWFpsWXpNZ2RHOTBZV3hGYldsemMybDJaVkpoWkdsaGJtTmxJRDBnWlcxcGMzTnBkbVU3Q2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHpjR1ZqZFd4aGNtMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJXbHpjMmwyWlcxaGNGOW1jbUZuYldWdWRENEtDU05wWm1SbFppQkVUMVZDVEVWZlUwbEVSVVFLQ1FseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLejBnS0NCbmJGOUdjbTl1ZEVaaFkybHVaeUFwSUQ4Z2RrbHVaR2x5WldOMFJuSnZiblFnT2lCMlNXNWthWEpsWTNSQ1lXTnJPd29KSTJWc2MyVUtDUWx5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdka2x1WkdseVpXTjBSbkp2Ym5RN0Nna2paVzVrYVdZS0NTTnBibU5zZFdSbElEeHNhV2RvZEcxaGNGOW1jbUZuYldWdWRENEtDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBcVBTQkNVa1JHWDB4aGJXSmxjblFvSUdScFptWjFjMlZEYjJ4dmNpNXlaMklnS1RzS0NTTnBabVJsWmlCRVQxVkNURVZmVTBsRVJVUUtDUWx5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSRWFXWm1kWE5sSUQwZ0tDQm5iRjlHY205dWRFWmhZMmx1WnlBcElEOGdka3hwWjJoMFJuSnZiblFnT2lCMlRHbG5hSFJDWVdOck93b0pJMlZzYzJVS0NRbHlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JFYVdabWRYTmxJRDBnZGt4cFoyaDBSbkp2Ym5RN0Nna2paVzVrYVdZS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLajBnUWxKRVJsOU1ZVzFpWlhKMEtDQmthV1ptZFhObFEyOXNiM0l1Y21kaUlDa2dLaUJuWlhSVGFHRmtiM2ROWVhOcktDazdDZ2tqYVc1amJIVmtaU0E4WVc5dFlYQmZabkpoWjIxbGJuUStDZ2wyWldNeklHOTFkR2R2YVc1blRHbG5hSFFnUFNCeVpXWnNaV04wWldSTWFXZG9kQzVrYVhKbFkzUkVhV1ptZFhObElDc2djbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNzZ2RHOTBZV3hGYldsemMybDJaVkpoWkdsaGJtTmxPd29KSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dmRYUndkWFJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGRHOXVaVzFoY0hCcGJtZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wlc1amIyUnBibWR6WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHWnZaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4d2NtVnRkV3gwYVhCc2FXVmtYMkZzY0doaFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1JwZEdobGNtbHVaMTltY21GbmJXVnVkRDRLZldBc0lFRnRJRDBnWUNOa1pXWnBibVVnVFVGVVEwRlFDblpoY25scGJtY2dkbVZqTXlCMlZtbGxkMUJ2YzJsMGFXOXVPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgzWmxjblJsZUQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEhWMlgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiMnh2Y2w5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVZbUZ6WlY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR1ZtWVhWc2RHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5MlpYSjBaWGcrQ2dsMlZtbGxkMUJ2YzJsMGFXOXVJRDBnTFNCdGRsQnZjMmwwYVc5dUxuaDVlanNLZldBc0lFTnRJRDBnWUNOa1pXWnBibVVnVFVGVVEwRlFDblZ1YVdadmNtMGdkbVZqTXlCa2FXWm1kWE5sT3dwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDblZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJRzFoZEdOaGNEc0tkbUZ5ZVdsdVp5QjJaV016SUhaV2FXVjNVRzl6YVhScGIyNDdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHhrYVhSb1pYSnBibWRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WW5WdGNHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThibTl5YldGc2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mWm5KaFoyMWxiblErQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZabkpoWjIxbGJuUStDZ2wyWldNMElHUnBabVoxYzJWRGIyeHZjaUE5SUhabFl6UW9JR1JwWm1aMWMyVXNJRzl3WVdOcGRIa2dLVHNLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiajRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmWm5KaFoyMWxiblJmYldGd2N6NEtDWFpsWXpNZ2RtbGxkMFJwY2lBOUlHNXZjbTFoYkdsNlpTZ2dkbFpwWlhkUWIzTnBkR2x2YmlBcE93b0pkbVZqTXlCNElEMGdibTl5YldGc2FYcGxLQ0IyWldNektDQjJhV1YzUkdseUxub3NJREF1TUN3Z0xTQjJhV1YzUkdseUxuZ2dLU0FwT3dvSmRtVmpNeUI1SUQwZ1kzSnZjM01vSUhacFpYZEVhWElzSUhnZ0tUc0tDWFpsWXpJZ2RYWWdQU0IyWldNeUtDQmtiM1FvSUhnc0lHNXZjbTFoYkNBcExDQmtiM1FvSUhrc0lHNXZjbTFoYkNBcElDa2dLaUF3TGpRNU5TQXJJREF1TlRzS0NTTnBabVJsWmlCVlUwVmZUVUZVUTBGUUNna0pkbVZqTkNCdFlYUmpZWEJEYjJ4dmNpQTlJSFJsZUhSMWNtVXlSQ2dnYldGMFkyRndMQ0IxZGlBcE93b0pDVzFoZEdOaGNFTnZiRzl5SUQwZ2JXRjBZMkZ3VkdWNFpXeFViMHhwYm1WaGNpZ2diV0YwWTJGd1EyOXNiM0lnS1RzS0NTTmxiSE5sQ2drSmRtVmpOQ0J0WVhSallYQkRiMnh2Y2lBOUlIWmxZelFvSURFdU1DQXBPd29KSTJWdVpHbG1DZ2wyWldNeklHOTFkR2R2YVc1blRHbG5hSFFnUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpSUNvZ2JXRjBZMkZ3UTI5c2IzSXVjbWRpT3dvSkkybHVZMngxWkdVZ1BHOTFkSEIxZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIQnlaVzExYkhScGNHeHBaV1JmWVd4d2FHRmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDJaeVlXZHRaVzUwUGdwOVlDd2dURzBnUFNCZ0kyUmxabWx1WlNCT1QxSk5RVXdLSTJsbUlHUmxabWx1WldRb0lFWk1RVlJmVTBoQlJFVkVJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1ZWTkZYMEpWVFZCTlFWQWdLU0I4ZkNCa1pXWnBibVZrS0NCVVFVNUhSVTVVVTFCQlEwVmZUazlTVFVGTVRVRlFJQ2tLQ1haaGNubHBibWNnZG1Wak15QjJWbWxsZDFCdmMybDBhVzl1T3dvalpXNWthV1lLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WkdsemNHeGhZMlZ0Wlc1MGJXRndYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4ZFhaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JsWm1GMWJIUnViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtJMmxtSUdSbFptbHVaV1FvSUVaTVFWUmZVMGhCUkVWRUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwSlZUVkJOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JVUVU1SFJVNVVVMUJCUTBWZlRrOVNUVUZNVFVGUUlDa0tDWFpXYVdWM1VHOXphWFJwYjI0Z1BTQXRJRzEyVUc5emFYUnBiMjR1ZUhsNk93b2paVzVrYVdZS2ZXQXNJRkp0SUQwZ1lDTmtaV1pwYm1VZ1RrOVNUVUZNQ25WdWFXWnZjbTBnWm14dllYUWdiM0JoWTJsMGVUc0tJMmxtSUdSbFptbHVaV1FvSUVaTVFWUmZVMGhCUkVWRUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwSlZUVkJOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JVUVU1SFJVNVVVMUJCUTBWZlRrOVNUVUZNVFVGUUlDa0tDWFpoY25scGJtY2dkbVZqTXlCMlZtbGxkMUJ2YzJsMGFXOXVPd29qWlc1a2FXWUtJMmx1WTJ4MVpHVWdQSEJoWTJ0cGJtYytDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGlkVzF3YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmWm5KaFoyMWxiblJmWW1WbmFXNCtDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYMlp5WVdkdFpXNTBYMjFoY0hNK0NnbG5iRjlHY21GblEyOXNiM0lnUFNCMlpXTTBLQ0J3WVdOclRtOXliV0ZzVkc5U1IwSW9JRzV2Y20xaGJDQXBMQ0J2Y0dGamFYUjVJQ2s3Q24xZ0xDQlFiU0E5SUdBalpHVm1hVzVsSUZCSVQwNUhDblpoY25scGJtY2dkbVZqTXlCMlZtbGxkMUJ2YzJsMGFXOXVPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHgxZGpKZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4bGJuWnRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgzWmxjblJsZUQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEhWMlgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeDFkakpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2h1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1aVlYTmxYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a1pXWmhkV3gwYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGcrQ2dsMlZtbGxkMUJ2YzJsMGFXOXVJRDBnTFNCdGRsQnZjMmwwYVc5dUxuaDVlanNLQ1NOcGJtTnNkV1JsSUR4M2IzSnNaSEJ2YzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpXNTJiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDbjFnTENCSmJTQTlJR0FqWkdWbWFXNWxJRkJJVDA1SENuVnVhV1p2Y20wZ2RtVmpNeUJrYVdabWRYTmxPd3AxYm1sbWIzSnRJSFpsWXpNZ1pXMXBjM05wZG1VN0NuVnVhV1p2Y20wZ2RtVmpNeUJ6Y0dWamRXeGhjanNLZFc1cFptOXliU0JtYkc5aGRDQnphR2x1YVc1bGMzTTdDblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIQmhZMnRwYm1jK0NpTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4ZFhZeVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGdmJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXMXBjM05wZG1WdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5amIyMXRiMjVmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkzVmlaVjkxZGw5eVpXWnNaV04wYVc5dVgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhpYzJSbWN6NEtJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXdZWEp6WDJKbFoybHVQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHaHZibWRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZblZ0Y0cxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4emNHVmpkV3hoY20xaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgyWnlZV2R0Wlc1MFBnb0pkbVZqTkNCa2FXWm1kWE5sUTI5c2IzSWdQU0IyWldNMEtDQmthV1ptZFhObExDQnZjR0ZqYVhSNUlDazdDZ2xTWldac1pXTjBaV1JNYVdkb2RDQnlaV1pzWldOMFpXUk1hV2RvZENBOUlGSmxabXhsWTNSbFpFeHBaMmgwS0NCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU0FwT3dvSmRtVmpNeUIwYjNSaGJFVnRhWE56YVhabFVtRmthV0Z1WTJVZ1BTQmxiV2x6YzJsMlpUc0tDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhOd1pXTjFiR0Z5YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOW1jbUZuYldWdWRGOWlaV2RwYmo0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZlpuSmhaMjFsYm5SZmJXRndjejRLQ1NOcGJtTnNkV1JsSUR4bGJXbHpjMmwyWlcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZjR2h2Ym1kZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgySmxaMmx1UGdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYzE5bWNtRm5iV1Z1ZEY5dFlYQnpQZ29KSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTltY21GbmJXVnVkRjlsYm1RK0Nna2phVzVqYkhWa1pTQThZVzl0WVhCZlpuSmhaMjFsYm5RK0NnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0J5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSRWFXWm1kWE5sSUNzZ2NtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ3NnY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFUzQmxZM1ZzWVhJZ0t5QnlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEZOd1pXTjFiR0Z5SUNzZ2RHOTBZV3hGYldsemMybDJaVkpoWkdsaGJtTmxPd29KSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dmRYUndkWFJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGRHOXVaVzFoY0hCcGJtZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wlc1amIyUnBibWR6WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHWnZaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4d2NtVnRkV3gwYVhCc2FXVmtYMkZzY0doaFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1JwZEdobGNtbHVaMTltY21GbmJXVnVkRDRLZldBc0lFUnRJRDBnWUNOa1pXWnBibVVnVTFSQlRrUkJVa1FLZG1GeWVXbHVaeUIyWldNeklIWldhV1YzVUc5emFYUnBiMjQ3Q2lOcFptUmxaaUJWVTBWZlZGSkJUbE5OU1ZOVFNVOU9DZ2wyWVhKNWFXNW5JSFpsWXpNZ2RsZHZjbXhrVUc5emFYUnBiMjQ3Q2lObGJtUnBaZ29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHgxZGpKZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4MWRqSmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGlaV2RwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzVpWVhObFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrWldaaGRXeDBibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTkyWlhKMFpYZytDZ2wyVm1sbGQxQnZjMmwwYVc5dUlEMGdMU0J0ZGxCdmMybDBhVzl1TG5oNWVqc0tDU05wYm1Oc2RXUmxJRHgzYjNKc1pIQnZjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZkbVZ5ZEdWNFBnb2phV1prWldZZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGdvSmRsZHZjbXhrVUc5emFYUnBiMjRnUFNCM2IzSnNaRkJ2YzJsMGFXOXVMbmg1ZWpzS0kyVnVaR2xtQ24xZ0xDQkdiU0E5SUdBalpHVm1hVzVsSUZOVVFVNUVRVkpFQ2lOcFptUmxaaUJRU0ZsVFNVTkJUQW9KSTJSbFptbHVaU0JKVDFJS0NTTmtaV1pwYm1VZ1UxQkZRMVZNUVZJS0kyVnVaR2xtQ25WdWFXWnZjbTBnZG1Wak15QmthV1ptZFhObE93cDFibWxtYjNKdElIWmxZek1nWlcxcGMzTnBkbVU3Q25WdWFXWnZjbTBnWm14dllYUWdjbTkxWjJodVpYTnpPd3AxYm1sbWIzSnRJR1pzYjJGMElHMWxkR0ZzYm1WemN6c0tkVzVwWm05eWJTQm1iRzloZENCdmNHRmphWFI1T3dvamFXWmtaV1lnU1U5U0NnbDFibWxtYjNKdElHWnNiMkYwSUdsdmNqc0tJMlZ1WkdsbUNpTnBabVJsWmlCVFVFVkRWVXhCVWdvSmRXNXBabTl5YlNCbWJHOWhkQ0J6Y0dWamRXeGhja2x1ZEdWdWMybDBlVHNLQ1hWdWFXWnZjbTBnZG1Wak15QnpjR1ZqZFd4aGNrTnZiRzl5T3dvSkkybG1aR1ZtSUZWVFJWOVRVRVZEVlV4QlVrbE9WRVZPVTBsVVdVMUJVQW9KQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhOd1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd093b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYMU5RUlVOVlRFRlNRMDlNVDFKTlFWQUtDUWwxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0J6Y0dWamRXeGhja052Ykc5eVRXRndPd29KSTJWdVpHbG1DaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWQW9KZFc1cFptOXliU0JtYkc5aGRDQmpiR1ZoY21OdllYUTdDZ2wxYm1sbWIzSnRJR1pzYjJGMElHTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN6c0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZVMGhGUlU0S0NYVnVhV1p2Y20wZ2RtVmpNeUJ6YUdWbGJrTnZiRzl5T3dvSmRXNXBabTl5YlNCbWJHOWhkQ0J6YUdWbGJsSnZkV2RvYm1WemN6c0tDU05wWm1SbFppQlZVMFZmVTBoRlJVNURUMHhQVWsxQlVBb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSE5vWldWdVEyOXNiM0pOWVhBN0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZVMGhGUlU1U1QxVkhTRTVGVTFOTlFWQUtDUWwxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0J6YUdWbGJsSnZkV2RvYm1WemMwMWhjRHNLQ1NObGJtUnBaZ29qWlc1a2FXWUtkbUZ5ZVdsdVp5QjJaV016SUhaV2FXVjNVRzl6YVhScGIyNDdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHh3WVdOcmFXNW5QZ29qYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BIVjJNbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z0YVhOemFYWmxiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhpYzJSbWN6NEtJMmx1WTJ4MVpHVWdQR04xWW1WZmRYWmZjbVZtYkdWamRHbHZibDltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjlqYjIxdGIyNWZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5d2FIbHphV05oYkY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kSE5mY0dGeWMxOWlaV2RwYmo0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnpYM0JvZVhOcFkyRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeDBjbUZ1YzIxcGMzTnBiMjVmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZblZ0Y0cxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHVmhjbU52WVhSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhKdmRXZG9ibVZ6YzIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJXVjBZV3h1WlhOemJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mWm5KaFoyMWxiblErQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZabkpoWjIxbGJuUStDZ2wyWldNMElHUnBabVoxYzJWRGIyeHZjaUE5SUhabFl6UW9JR1JwWm1aMWMyVXNJRzl3WVdOcGRIa2dLVHNLQ1ZKbFpteGxZM1JsWkV4cFoyaDBJSEpsWm14bFkzUmxaRXhwWjJoMElEMGdVbVZtYkdWamRHVmtUR2xuYUhRb0lIWmxZek1vSURBdU1DQXBMQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwSUNrN0NnbDJaV016SUhSdmRHRnNSVzFwYzNOcGRtVlNZV1JwWVc1alpTQTlJR1Z0YVhOemFYWmxPd29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGpiMnh2Y2w5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGNtOTFaMmh1WlhOemJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEcxbGRHRnNibVZ6YzIxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZZbVZuYVc0K0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gyWnlZV2R0Wlc1MFgyMWhjSE0rQ2dramFXNWpiSFZrWlNBOFkyeGxZWEpqYjJGMFgyNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiajRLQ1NOcGJtTnNkV1JsSUR4amJHVmhjbU52WVhSZmJtOXliV0ZzWDJaeVlXZHRaVzUwWDIxaGNITStDZ2tqYVc1amJIVmtaU0E4WlcxcGMzTnBkbVZ0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgzQm9lWE5wWTJGc1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOW1jbUZuYldWdWRGOWlaV2RwYmo0S0NTTnBibU5zZFdSbElEeHNhV2RvZEhOZlpuSmhaMjFsYm5SZmJXRndjejRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mWm5KaFoyMWxiblJmWlc1a1Bnb0pJMmx1WTJ4MVpHVWdQR0Z2YldGd1gyWnlZV2R0Wlc1MFBnb0pkbVZqTXlCMGIzUmhiRVJwWm1aMWMyVWdQU0J5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSRWFXWm1kWE5sSUNzZ2NtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxPd29KZG1Wak15QjBiM1JoYkZOd1pXTjFiR0Z5SUQwZ2NtVm1iR1ZqZEdWa1RHbG5hSFF1WkdseVpXTjBVM0JsWTNWc1lYSWdLeUJ5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRGTndaV04xYkdGeU93b0pJMmx1WTJ4MVpHVWdQSFJ5WVc1emJXbHpjMmx2Ymw5bWNtRm5iV1Z1ZEQ0S0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSFJ2ZEdGc1JHbG1ablZ6WlNBcklIUnZkR0ZzVTNCbFkzVnNZWElnS3lCMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVTdDZ2tqYVdaa1pXWWdWVk5GWDFOSVJVVk9DZ2tKWm14dllYUWdjMmhsWlc1RmJtVnlaM2xEYjIxd0lEMGdNUzR3SUMwZ01DNHhOVGNnS2lCdFlYZ3pLQ0J0WVhSbGNtbGhiQzV6YUdWbGJrTnZiRzl5SUNrN0Nna0piM1YwWjI5cGJtZE1hV2RvZENBOUlHOTFkR2R2YVc1blRHbG5hSFFnS2lCemFHVmxia1Z1WlhKbmVVTnZiWEFnS3lCemFHVmxibE53WldOMWJHRnlPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkFvSkNXWnNiMkYwSUdSdmRFNVdZMk1nUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0JuWlc5dFpYUnllUzVqYkdWaGNtTnZZWFJPYjNKdFlXd3NJR2RsYjIxbGRISjVMblpwWlhkRWFYSWdLU0FwT3dvSkNYWmxZek1nUm1OaklEMGdSbDlUWTJoc2FXTnJLQ0J0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFJHTUN3Z2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFJqa3dMQ0JrYjNST1ZtTmpJQ2s3Q2drSmIzVjBaMjlwYm1kTWFXZG9kQ0E5SUc5MWRHZHZhVzVuVEdsbmFIUWdLaUFvSURFdU1DQXRJRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkQ0FxSUVaall5QXBJQ3NnWTJ4bFlYSmpiMkYwVTNCbFkzVnNZWElnS2lCdFlYUmxjbWxoYkM1amJHVmhjbU52WVhRN0Nna2paVzVrYVdZS0NTTnBibU5zZFdSbElEeHZkWFJ3ZFhSZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThkRzl1WlcxaGNIQnBibWRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpXNWpiMlJwYm1kelgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHdjbVZ0ZFd4MGFYQnNhV1ZrWDJGc2NHaGhYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdScGRHaGxjbWx1WjE5bWNtRm5iV1Z1ZEQ0S2ZXQXNJRTV0SUQwZ1lDTmtaV1pwYm1VZ1ZFOVBUZ3AyWVhKNWFXNW5JSFpsWXpNZ2RsWnBaWGRRYjNOcGRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4ZFhZeVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WkdsemNHeGhZMlZ0Wlc1MGJXRndYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyOXNiM0pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHViM0p0WVd4ZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5MlpYSjBaWGcrQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHgxZGw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGRYWXlYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9ibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1WW1GelpWOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WkdWbVlYVnNkRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGlaV2RwYmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mZG1WeWRHVjRQZ29KZGxacFpYZFFiM05wZEdsdmJpQTlJQzBnYlhaUWIzTnBkR2x2Ymk1NGVYbzdDZ2tqYVc1amJIVmtaU0E4ZDI5eWJHUndiM05mZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtmV0FzSUVKdElEMGdZQ05rWldacGJtVWdWRTlQVGdwMWJtbG1iM0p0SUhabFl6TWdaR2xtWm5WelpUc0tkVzVwWm05eWJTQjJaV016SUdWdGFYTnphWFpsT3dwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHh3WVdOcmFXNW5QZ29qYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BIVjJNbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z0YVhOemFYWmxiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhuY21Ga2FXVnVkRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aWMyUm1jejRLSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTl3WVhKelgySmxaMmx1UGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RITmZkRzl2Ymw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhpZFcxd2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHViM0p0WVd4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDWFpsWXpRZ1pHbG1ablZ6WlVOdmJHOXlJRDBnZG1Wak5DZ2daR2xtWm5WelpTd2diM0JoWTJsMGVTQXBPd29KVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ1BTQlNaV1pzWldOMFpXUk1hV2RvZENnZ2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tnS1RzS0NYWmxZek1nZEc5MFlXeEZiV2x6YzJsMlpWSmhaR2xoYm1ObElEMGdaVzFwYzNOcGRtVTdDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmWm5KaFoyMWxiblJmWW1WbmFXNCtDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYMlp5WVdkdFpXNTBYMjFoY0hNK0Nna2phVzVqYkhWa1pTQThaVzFwYzNOcGRtVnRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDNSdmIyNWZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYMlp5WVdkdFpXNTBYMkpsWjJsdVBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOW1jbUZuYldWdWRGOXRZWEJ6UGdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYzE5bWNtRm5iV1Z1ZEY5bGJtUStDZ2tqYVc1amJIVmtaU0E4WVc5dFlYQmZabkpoWjIxbGJuUStDZ2wyWldNeklHOTFkR2R2YVc1blRHbG5hSFFnUFNCeVpXWnNaV04wWldSTWFXZG9kQzVrYVhKbFkzUkVhV1ptZFhObElDc2djbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNzZ2RHOTBZV3hGYldsemMybDJaVkpoWkdsaGJtTmxPd29KSTJsdVkyeDFaR1VnUEc5MWRIQjFkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z2VtMGdQU0JnZFc1cFptOXliU0JtYkc5aGRDQnphWHBsT3dwMWJtbG1iM0p0SUdac2IyRjBJSE5qWVd4bE93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThZMjlzYjNKZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0NnbG5iRjlRYjJsdWRGTnBlbVVnUFNCemFYcGxPd29KSTJsbVpHVm1JRlZUUlY5VFNWcEZRVlJVUlU1VlFWUkpUMDRLQ1FsaWIyOXNJR2x6VUdWeWMzQmxZM1JwZG1VZ1BTQnBjMUJsY25Od1pXTjBhWFpsVFdGMGNtbDRLQ0J3Y205cVpXTjBhVzl1VFdGMGNtbDRJQ2s3Q2drSmFXWWdLQ0JwYzFCbGNuTndaV04wYVhabElDa2daMnhmVUc5cGJuUlRhWHBsSUNvOUlDZ2djMk5oYkdVZ0x5QXRJRzEyVUc5emFYUnBiMjR1ZWlBcE93b0pJMlZ1WkdsbUNna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4ZDI5eWJHUndiM05mZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdadloxOTJaWEowWlhnK0NuMWdMQ0JWYlNBOUlHQjFibWxtYjNKdElIWmxZek1nWkdsbVpuVnpaVHNLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThZMjlzYjNKZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEcxaGNGOXdZWEowYVdOc1pWOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDWFpsWXpNZ2IzVjBaMjlwYm1kTWFXZG9kQ0E5SUhabFl6TW9JREF1TUNBcE93b0pkbVZqTkNCa2FXWm1kWE5sUTI5c2IzSWdQU0IyWldNMEtDQmthV1ptZFhObExDQnZjR0ZqYVhSNUlDazdDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuUnBZMnhsWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoZEdWemRGOW1jbUZuYldWdWRENEtDVzkxZEdkdmFXNW5UR2xuYUhRZ1BTQmthV1ptZFhObFEyOXNiM0l1Y21kaU93b0pJMmx1WTJ4MVpHVWdQRzkxZEhCMWRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblErQ24xZ0xDQlBiU0E5SUdBamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjl3WVhKelgzWmxjblJsZUQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdKbFoybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtSmhjMlZmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUmxabUYxYkhSdWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIZHZjbXhrY0c5elgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5MlpYSjBaWGcrQ24xZ0xDQkliU0E5SUdCMWJtbG1iM0p0SUhabFl6TWdZMjlzYjNJN0NuVnVhV1p2Y20wZ1pteHZZWFFnYjNCaFkybDBlVHNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhCaFkydHBibWMrQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHSnpaR1p6UGdvamFXNWpiSFZrWlNBOGJHbG5hSFJ6WDNCaGNuTmZZbVZuYVc0K0NpTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGMydGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KWjJ4ZlJuSmhaME52Ykc5eUlEMGdkbVZqTkNnZ1kyOXNiM0lzSUc5d1lXTnBkSGtnS2lBb0lERXVNQ0F0SUdkbGRGTm9ZV1J2ZDAxaGMyc29LU0FwSUNrN0Nna2phVzVqYkhWa1pTQThkRzl1WlcxaGNIQnBibWRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpXNWpiMlJwYm1kelgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5bWNtRm5iV1Z1ZEQ0S2ZXQXNJR3R0SUQwZ1lIVnVhV1p2Y20wZ1pteHZZWFFnY205MFlYUnBiMjQ3Q25WdWFXWnZjbTBnZG1Wak1pQmpaVzUwWlhJN0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOGRYWmZkbVZ5ZEdWNFBnb0pkbVZqTkNCdGRsQnZjMmwwYVc5dUlEMGdiVzlrWld4V2FXVjNUV0YwY21sNElDb2dkbVZqTkNnZ01DNHdMQ0F3TGpBc0lEQXVNQ3dnTVM0d0lDazdDZ2wyWldNeUlITmpZV3hsT3dvSmMyTmhiR1V1ZUNBOUlHeGxibWQwYUNnZ2RtVmpNeWdnYlc5a1pXeE5ZWFJ5YVhoYklEQWdYUzU0TENCdGIyUmxiRTFoZEhKcGVGc2dNQ0JkTG5rc0lHMXZaR1ZzVFdGMGNtbDRXeUF3SUYwdWVpQXBJQ2s3Q2dselkyRnNaUzU1SUQwZ2JHVnVaM1JvS0NCMlpXTXpLQ0J0YjJSbGJFMWhkSEpwZUZzZ01TQmRMbmdzSUcxdlpHVnNUV0YwY21sNFd5QXhJRjB1ZVN3Z2JXOWtaV3hOWVhSeWFYaGJJREVnWFM1NklDa2dLVHNLQ1NOcFptNWtaV1lnVlZORlgxTkpXa1ZCVkZSRlRsVkJWRWxQVGdvSkNXSnZiMndnYVhOUVpYSnpjR1ZqZEdsMlpTQTlJR2x6VUdWeWMzQmxZM1JwZG1WTllYUnlhWGdvSUhCeWIycGxZM1JwYjI1TllYUnlhWGdnS1RzS0NRbHBaaUFvSUdselVHVnljM0JsWTNScGRtVWdLU0J6WTJGc1pTQXFQU0F0SUcxMlVHOXphWFJwYjI0dWVqc0tDU05sYm1ScFpnb0pkbVZqTWlCaGJHbG5ibVZrVUc5emFYUnBiMjRnUFNBb0lIQnZjMmwwYVc5dUxuaDVJQzBnS0NCalpXNTBaWElnTFNCMlpXTXlLQ0F3TGpVZ0tTQXBJQ2tnS2lCelkyRnNaVHNLQ1habFl6SWdjbTkwWVhSbFpGQnZjMmwwYVc5dU93b0pjbTkwWVhSbFpGQnZjMmwwYVc5dUxuZ2dQU0JqYjNNb0lISnZkR0YwYVc5dUlDa2dLaUJoYkdsbmJtVmtVRzl6YVhScGIyNHVlQ0F0SUhOcGJpZ2djbTkwWVhScGIyNGdLU0FxSUdGc2FXZHVaV1JRYjNOcGRHbHZiaTU1T3dvSmNtOTBZWFJsWkZCdmMybDBhVzl1TG5rZ1BTQnphVzRvSUhKdmRHRjBhVzl1SUNrZ0tpQmhiR2xuYm1Wa1VHOXphWFJwYjI0dWVDQXJJR052Y3lnZ2NtOTBZWFJwYjI0Z0tTQXFJR0ZzYVdkdVpXUlFiM05wZEdsdmJpNTVPd29KYlhaUWIzTnBkR2x2Ymk1NGVTQXJQU0J5YjNSaGRHVmtVRzl6YVhScGIyNDdDZ2xuYkY5UWIzTnBkR2x2YmlBOUlIQnliMnBsWTNScGIyNU5ZWFJ5YVhnZ0tpQnRkbEJ2YzJsMGFXOXVPd29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDbjFnTENCSGJTQTlJR0IxYm1sbWIzSnRJSFpsWXpNZ1pHbG1ablZ6WlRzS2RXNXBabTl5YlNCbWJHOWhkQ0J2Y0dGamFYUjVPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0IyWldNektDQXdMakFnS1RzS0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ1pHbG1ablZ6WlN3Z2IzQmhZMmwwZVNBcE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2x2ZFhSbmIybHVaMHhwWjJoMElEMGdaR2xtWm5WelpVTnZiRzl5TG5Kbllqc0tDU05wYm1Oc2RXUmxJRHh2ZFhSd2RYUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4ZEc5dVpXMWhjSEJwYm1kZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaVzVqYjJScGJtZHpYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdadloxOW1jbUZuYldWdWRENEtmV0FzSUVabElEMGdld29nSUNBZ1lXeHdhR0Z0WVhCZlpuSmhaMjFsYm5RNklIaG1MQW9nSUNBZ1lXeHdhR0Z0WVhCZmNHRnljMTltY21GbmJXVnVkRG9nZVdZc0NpQWdJQ0JoYkhCb1lYUmxjM1JmWm5KaFoyMWxiblE2SUhabUxBb2dJQ0FnWVd4d2FHRjBaWE4wWDNCaGNuTmZabkpoWjIxbGJuUTZJRjltTEFvZ0lDQWdZVzl0WVhCZlpuSmhaMjFsYm5RNklFMW1MQW9nSUNBZ1lXOXRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dZbVlzQ2lBZ0lDQmlaV2RwYmw5MlpYSjBaWGc2SUhkbUxBb2dJQ0FnWW1WbmFXNXViM0p0WVd4ZmRtVnlkR1Y0T2lCVFppd0tJQ0FnSUdKelpHWnpPaUJVWml3S0lDQWdJR0oxYlhCdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1JXWXNDaUFnSUNCamJHbHdjR2x1WjE5d2JHRnVaWE5mWm5KaFoyMWxiblE2SUVGbUxBb2dJQ0FnWTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZlpuSmhaMjFsYm5RNklFTm1MQW9nSUNBZ1kyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNE9pQk1aaXdLSUNBZ0lHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGc2SUZKbUxBb2dJQ0FnWTI5c2IzSmZabkpoWjIxbGJuUTZJRkJtTEFvZ0lDQWdZMjlzYjNKZmNHRnljMTltY21GbmJXVnVkRG9nU1dZc0NpQWdJQ0JqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRG9nUkdZc0NpQWdJQ0JqYjJ4dmNsOTJaWEowWlhnNklFWm1MQW9nSUNBZ1kyOXRiVzl1T2lCT1ppd0tJQ0FnSUdOMVltVmZkWFpmY21WbWJHVmpkR2x2Ymw5bWNtRm5iV1Z1ZERvZ1FtWXNDaUFnSUNCa1pXWmhkV3gwYm05eWJXRnNYM1psY25SbGVEb2dlbVlzQ2lBZ0lDQmthWE53YkdGalpXMWxiblJ0WVhCZmNHRnljMTkyWlhKMFpYZzZJRlZtTEFvZ0lDQWdaR2x6Y0d4aFkyVnRaVzUwYldGd1gzWmxjblJsZURvZ1QyWXNDaUFnSUNCbGJXbHpjMmwyWlcxaGNGOW1jbUZuYldWdWREb2dTR1lzQ2lBZ0lDQmxiV2x6YzJsMlpXMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQnJaaXdLSUNBZ0lHVnVZMjlrYVc1bmMxOW1jbUZuYldWdWREb2dSMllzQ2lBZ0lDQmxibU52WkdsdVozTmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1ZtWXNDaUFnSUNCbGJuWnRZWEJmWm5KaFoyMWxiblE2SUZkbUxBb2dJQ0FnWlc1MmJXRndYMk52YlcxdmJsOXdZWEp6WDJaeVlXZHRaVzUwT2lCeFppd0tJQ0FnSUdWdWRtMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQllaaXdLSUNBZ0lHVnVkbTFoY0Y5d1lYSnpYM1psY25SbGVEb2dTbVlzQ2lBZ0lDQmxiblp0WVhCZmNHaDVjMmxqWVd4ZmNHRnljMTltY21GbmJXVnVkRG9nY25Bc0NpQWdJQ0JsYm5adFlYQmZkbVZ5ZEdWNE9pQlpaaXdLSUNBZ0lHWnZaMTkyWlhKMFpYZzZJRnBtTEFvZ0lDQWdabTluWDNCaGNuTmZkbVZ5ZEdWNE9pQWtaaXdLSUNBZ0lHWnZaMTltY21GbmJXVnVkRG9nYW1Zc0NpQWdJQ0JtYjJkZmNHRnljMTltY21GbmJXVnVkRG9nVVdZc0NpQWdJQ0JuY21Ga2FXVnVkRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBPaUJMWml3S0lDQWdJR3hwWjJoMGJXRndYMlp5WVdkdFpXNTBPaUJsY0N3S0lDQWdJR3hwWjJoMGJXRndYM0JoY25OZlpuSmhaMjFsYm5RNklIUndMQW9nSUNBZ2JHbG5hSFJ6WDJ4aGJXSmxjblJmZG1WeWRHVjRPaUJ1Y0N3S0lDQWdJR3hwWjJoMGMxOXdZWEp6WDJKbFoybHVPaUJwY0N3S0lDQWdJR3hwWjJoMGMxOTBiMjl1WDJaeVlXZHRaVzUwT2lCemNDd0tJQ0FnSUd4cFoyaDBjMTkwYjI5dVgzQmhjbk5mWm5KaFoyMWxiblE2SUc5d0xBb2dJQ0FnYkdsbmFIUnpYM0JvYjI1blgyWnlZV2R0Wlc1ME9pQmhjQ3dLSUNBZ0lHeHBaMmgwYzE5d2FHOXVaMTl3WVhKelgyWnlZV2R0Wlc1ME9pQnNjQ3dLSUNBZ0lHeHBaMmgwYzE5d2FIbHphV05oYkY5bWNtRm5iV1Z1ZERvZ1kzQXNDaUFnSUNCc2FXZG9kSE5mY0doNWMybGpZV3hmY0dGeWMxOW1jbUZuYldWdWREb2dhSEFzQ2lBZ0lDQnNhV2RvZEhOZlpuSmhaMjFsYm5SZlltVm5hVzQ2SUhWd0xBb2dJQ0FnYkdsbmFIUnpYMlp5WVdkdFpXNTBYMjFoY0hNNklHUndMQW9nSUNBZ2JHbG5hSFJ6WDJaeVlXZHRaVzUwWDJWdVpEb2dabkFzQ2lBZ0lDQnNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRG9nY0hBc0NpQWdJQ0JzYjJka1pYQjBhR0oxWmw5d1lYSnpYMlp5WVdkdFpXNTBPaUJ0Y0N3S0lDQWdJR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNE9pQm5jQ3dLSUNBZ0lHeHZaMlJsY0hSb1luVm1YM1psY25SbGVEb2dlSEFzQ2lBZ0lDQnRZWEJmWm5KaFoyMWxiblE2SUhsd0xBb2dJQ0FnYldGd1gzQmhjbk5mWm5KaFoyMWxiblE2SUhad0xBb2dJQ0FnYldGd1gzQmhjblJwWTJ4bFgyWnlZV2R0Wlc1ME9pQmZjQ3dLSUNBZ0lHMWhjRjl3WVhKMGFXTnNaVjl3WVhKelgyWnlZV2R0Wlc1ME9pQk5jQ3dLSUNBZ0lHMWxkR0ZzYm1WemMyMWhjRjltY21GbmJXVnVkRG9nWW5Bc0NpQWdJQ0J0WlhSaGJHNWxjM050WVhCZmNHRnljMTltY21GbmJXVnVkRG9nZDNBc0NpQWdJQ0J0YjNKd2FHNXZjbTFoYkY5MlpYSjBaWGc2SUZOd0xBb2dJQ0FnYlc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZzZJRlJ3TEFvZ0lDQWdiVzl5Y0doMFlYSm5aWFJmZG1WeWRHVjRPaUJGY0N3S0lDQWdJRzV2Y20xaGJGOW1jbUZuYldWdWRGOWlaV2RwYmpvZ1FYQXNDaUFnSUNCdWIzSnRZV3hmWm5KaFoyMWxiblJmYldGd2N6b2dRM0FzQ2lBZ0lDQnViM0p0WVd4ZmNHRnljMTltY21GbmJXVnVkRG9nVEhBc0NpQWdJQ0J1YjNKdFlXeGZjR0Z5YzE5MlpYSjBaWGc2SUZKd0xBb2dJQ0FnYm05eWJXRnNYM1psY25SbGVEb2dVSEFzQ2lBZ0lDQnViM0p0WVd4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1NYQXNDaUFnSUNCamJHVmhjbU52WVhSZmJtOXliV0ZzWDJaeVlXZHRaVzUwWDJKbFoybHVPaUJFY0N3S0lDQWdJR05zWldGeVkyOWhkRjl1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3pvZ1JuQXNDaUFnSUNCamJHVmhjbU52WVhSZmNHRnljMTltY21GbmJXVnVkRG9nVG5Bc0NpQWdJQ0J2ZFhSd2RYUmZabkpoWjIxbGJuUTZJRUp3TEFvZ0lDQWdjR0ZqYTJsdVp6b2dlbkFzQ2lBZ0lDQndjbVZ0ZFd4MGFYQnNhV1ZrWDJGc2NHaGhYMlp5WVdkdFpXNTBPaUJWY0N3S0lDQWdJSEJ5YjJwbFkzUmZkbVZ5ZEdWNE9pQlBjQ3dLSUNBZ0lHUnBkR2hsY21sdVoxOW1jbUZuYldWdWREb2dTSEFzQ2lBZ0lDQmthWFJvWlhKcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ2EzQXNDaUFnSUNCeWIzVm5hRzVsYzNOdFlYQmZabkpoWjIxbGJuUTZJRWR3TEFvZ0lDQWdjbTkxWjJodVpYTnpiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUTZJRlp3TEFvZ0lDQWdjMmhoWkc5M2JXRndYM0JoY25OZlpuSmhaMjFsYm5RNklGZHdMQW9nSUNBZ2MyaGhaRzkzYldGd1gzQmhjbk5mZG1WeWRHVjRPaUJ4Y0N3S0lDQWdJSE5vWVdSdmQyMWhjRjkyWlhKMFpYZzZJRmh3TEFvZ0lDQWdjMmhoWkc5M2JXRnphMTl3WVhKelgyWnlZV2R0Wlc1ME9pQktjQ3dLSUNBZ0lITnJhVzVpWVhObFgzWmxjblJsZURvZ1dYQXNDaUFnSUNCemEybHVibWx1WjE5d1lYSnpYM1psY25SbGVEb2dXbkFzQ2lBZ0lDQnphMmx1Ym1sdVoxOTJaWEowWlhnNklDUndMQW9nSUNBZ2MydHBibTV2Y20xaGJGOTJaWEowWlhnNklHcHdMQW9nSUNBZ2MzQmxZM1ZzWVhKdFlYQmZabkpoWjIxbGJuUTZJRkZ3TEFvZ0lDQWdjM0JsWTNWc1lYSnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dTM0FzQ2lBZ0lDQjBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRG9nWlcwc0NpQWdJQ0IwYjI1bGJXRndjR2x1WjE5d1lYSnpYMlp5WVdkdFpXNTBPaUIwYlN3S0lDQWdJSFJ5WVc1emJXbHpjMmx2Ymw5bWNtRm5iV1Z1ZERvZ2JtMHNDaUFnSUNCMGNtRnVjMjFwYzNOcGIyNWZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ2FXMHNDaUFnSUNCMWRsOXdZWEp6WDJaeVlXZHRaVzUwT2lCeWJTd0tJQ0FnSUhWMlgzQmhjbk5mZG1WeWRHVjRPaUJ6YlN3S0lDQWdJSFYyWDNabGNuUmxlRG9nYjIwc0NpQWdJQ0IxZGpKZmNHRnljMTltY21GbmJXVnVkRG9nWVcwc0NpQWdJQ0IxZGpKZmNHRnljMTkyWlhKMFpYZzZJR3h0TEFvZ0lDQWdkWFl5WDNabGNuUmxlRG9nWTIwc0NpQWdJQ0IzYjNKc1pIQnZjMTkyWlhKMFpYZzZJR2h0TEFvZ0lDQWdZbUZqYTJkeWIzVnVaRjkyWlhKME9pQjFiU3dLSUNBZ0lHSmhZMnRuY205MWJtUmZabkpoWnpvZ1pHMHNDaUFnSUNCamRXSmxYM1psY25RNklHWnRMQW9nSUNBZ1kzVmlaVjltY21Gbk9pQndiU3dLSUNBZ0lHUmxjSFJvWDNabGNuUTZJRzF0TEFvZ0lDQWdaR1Z3ZEdoZlpuSmhaem9nWjIwc0NpQWdJQ0JrYVhOMFlXNWpaVkpIUWtGZmRtVnlkRG9nZUcwc0NpQWdJQ0JrYVhOMFlXNWpaVkpIUWtGZlpuSmhaem9nZVcwc0NpQWdJQ0JsY1hWcGNtVmpkRjkyWlhKME9pQjJiU3dLSUNBZ0lHVnhkV2x5WldOMFgyWnlZV2M2SUY5dExBb2dJQ0FnYkdsdVpXUmhjMmhsWkY5MlpYSjBPaUJOYlN3S0lDQWdJR3hwYm1Wa1lYTm9aV1JmWm5KaFp6b2dZbTBzQ2lBZ0lDQnRaWE5vWW1GemFXTmZkbVZ5ZERvZ2QyMHNDaUFnSUNCdFpYTm9ZbUZ6YVdOZlpuSmhaem9nVTIwc0NpQWdJQ0J0WlhOb2JHRnRZbVZ5ZEY5MlpYSjBPaUJVYlN3S0lDQWdJRzFsYzJoc1lXMWlaWEowWDJaeVlXYzZJRVZ0TEFvZ0lDQWdiV1Z6YUcxaGRHTmhjRjkyWlhKME9pQkJiU3dLSUNBZ0lHMWxjMmh0WVhSallYQmZabkpoWnpvZ1EyMHNDaUFnSUNCdFpYTm9ibTl5YldGc1gzWmxjblE2SUV4dExBb2dJQ0FnYldWemFHNXZjbTFoYkY5bWNtRm5PaUJTYlN3S0lDQWdJRzFsYzJod2FHOXVaMTkyWlhKME9pQlFiU3dLSUNBZ0lHMWxjMmh3YUc5dVoxOW1jbUZuT2lCSmJTd0tJQ0FnSUcxbGMyaHdhSGx6YVdOaGJGOTJaWEowT2lCRWJTd0tJQ0FnSUcxbGMyaHdhSGx6YVdOaGJGOW1jbUZuT2lCR2JTd0tJQ0FnSUcxbGMyaDBiMjl1WDNabGNuUTZJRTV0TEFvZ0lDQWdiV1Z6YUhSdmIyNWZabkpoWnpvZ1FtMHNDaUFnSUNCd2IybHVkSE5mZG1WeWREb2dlbTBzQ2lBZ0lDQndiMmx1ZEhOZlpuSmhaem9nVlcwc0NpQWdJQ0J6YUdGa2IzZGZkbVZ5ZERvZ1QyMHNDaUFnSUNCemFHRmtiM2RmWm5KaFp6b2dTRzBzQ2lBZ0lDQnpjSEpwZEdWZmRtVnlkRG9nYTIwc0NpQWdJQ0J6Y0hKcGRHVmZabkpoWnpvZ1IyMEtmU3dnYVdVZ1BTQjdDaUFnSUNCamIyMXRiMjQ2SUhzS0lDQWdJQ0FnSUNCa2FXWm1kWE5sT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnWVdVb01UWTNOemN5TVRVcENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCdFlYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSFYyVkhKaGJuTm1iM0p0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnYkhRS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIVjJNbFJ5WVc1elptOXliVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJR3gwQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCaGJIQm9ZVTFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1lXeHdhR0ZVWlhOME9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITndaV04xYkdGeWJXRndPaUI3Q2lBZ0lDQWdJQ0FnYzNCbFkzVnNZWEpOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdaVzUyYldGd09pQjdDaUFnSUNBZ0lDQWdaVzUyVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQm1iR2x3Ulc1MlRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBdE1Rb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjbVZtYkdWamRHbDJhWFI1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JwYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREV1TlFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2NtVm1jbUZqZEdsdmJsSmhkR2x2T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXVPVGdLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1lXOXRZWEE2SUhzS0lDQWdJQ0FnSUNCaGIwMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWVc5TllYQkpiblJsYm5OcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdiR2xuYUhSdFlYQTZJSHNLSUNBZ0lDQWdJQ0JzYVdkb2RFMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWlcxcGMzTnBkbVZ0WVhBNklIc0tJQ0FnSUNBZ0lDQmxiV2x6YzJsMlpVMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCaWRXMXdiV0Z3T2lCN0NpQWdJQ0FnSUNBZ1luVnRjRTFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1luVnRjRk5qWVd4bE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHNXZjbTFoYkcxaGNEb2dld29nSUNBZ0lDQWdJRzV2Y20xaGJFMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYm05eWJXRnNVMk5oYkdVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCWUtERXNJREVwQ2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHUnBjM0JzWVdObGJXVnVkRzFoY0RvZ2V3b2dJQ0FnSUNBZ0lHUnBjM0JzWVdObGJXVnVkRTFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1pHbHpjR3hoWTJWdFpXNTBVMk5oYkdVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdScGMzQnNZV05sYldWdWRFSnBZWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnY205MVoyaHVaWE56YldGd09pQjdDaUFnSUNBZ0lDQWdjbTkxWjJodVpYTnpUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHMWxkR0ZzYm1WemMyMWhjRG9nZXdvZ0lDQWdJQ0FnSUcxbGRHRnNibVZ6YzAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JuY21Ga2FXVnVkRzFoY0RvZ2V3b2dJQ0FnSUNBZ0lHZHlZV1JwWlc1MFRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdadlp6b2dld29nSUNBZ0lDQWdJR1p2WjBSbGJuTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklESTFaUzAxQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCbWIyZE9aV0Z5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JtYjJkR1lYSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURKbE13b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdabTluUTI5c2IzSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d4TmpjM056SXhOU2tLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2JHbG5hSFJ6T2lCN0NpQWdJQ0FnSUNBZ1lXMWlhV1Z1ZEV4cFoyaDBRMjlzYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCc2FXZG9kRkJ5YjJKbE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkTEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbTl3WlhKMGFXVnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjQ2SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUh0OUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzZHpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNHVnlkR2xsY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzUW1saGN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE9iM0p0WVd4Q2FXRnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMUpoWkdsMWN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE5ZWEJUYVhwbE9pQjdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1JwY21WamRHbHZibUZzVTJoaFpHOTNUV0YwY21sNE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MzQnZkRXhwWjJoMGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNCbGNuUnBaWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJqb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaVG9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNWxRMjl6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmxiblZ0WW5KaFEyOXpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFkyRjVPaUI3ZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6Y0c5MFRHbG5hSFJUYUdGa2IzZHpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNHVnlkR2xsY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzUW1saGN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE9iM0p0WVd4Q2FXRnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMUpoWkdsMWN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE5ZWEJUYVhwbE9pQjdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpjRzkwVTJoaFpHOTNUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzNCdmRGTm9ZV1J2ZDAxaGRISnBlRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSEJ2YVc1MFRHbG5hSFJ6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NISnZjR1Z5ZEdsbGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWallYazZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SUh0OUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhCdmFXNTBUR2xuYUhSVGFHRmtiM2R6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NISnZjR1Z5ZEdsbGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1FtbGhjem9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RPYjNKdFlXeENhV0Z6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDFKaFpHbDFjem9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2ROWVhCVGFYcGxPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkME5oYldWeVlVNWxZWEk2SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzUTJGdFpYSmhSbUZ5T2lCN2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCd2IybHVkRk5vWVdSdmQwMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSEJ2YVc1MFUyaGhaRzkzVFdGMGNtbDRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdhR1Z0YVhOd2FHVnlaVXhwWjJoMGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNCbGNuUnBaWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphM2xEYjJ4dmNqb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuY205MWJtUkRiMnh2Y2pvZ2UzMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2NtVmpkRUZ5WldGTWFXZG9kSE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJSHQ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR3gwWTE4eE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnNkR05mTWpvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQndiMmx1ZEhNNklIc0tJQ0FnSUNBZ0lDQmthV1ptZFhObE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1lXVW9NVFkzTnpjeU1UVXBDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J2Y0dGamFYUjVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnphWHBsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WTJGc1pUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2JXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JoYkhCb1lVMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWVd4d2FHRlVaWE4wT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0IxZGxSeVlXNXpabTl5YlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUd4MENpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE53Y21sMFpUb2dld29nSUNBZ0lDQWdJR1JwWm1aMWMyVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d4TmpjM056SXhOU2tLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUc5d1lXTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR05sYm5SbGNqb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lGZ29MalVzSUM0MUtRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjbTkwWVhScGIyNDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWVd4d2FHRk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdGc2NHaGhWR1Z6ZERvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnZFhaVWNtRnVjMlp2Y20wNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCc2RBb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTd2djWFFnUFNCN0NpQWdJQ0JpWVhOcFl6b2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI1ZENoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1OdmJXMXZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVjM0JsWTNWc1lYSnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVZ1ZG0xaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVlXOXRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbXhwWjJoMGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNW1iMmNLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRVpsTG0xbGMyaGlZWE5wWTE5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzV0WlhOb1ltRnphV05mWm5KaFp3b2dJQ0FnZlN3S0lDQWdJR3hoYldKbGNuUTZJSHNLSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nZVhRb1d3b2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1amIyMXRiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbk53WldOMWJHRnliV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVsYm5adFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtRnZiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVzYVdkb2RHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaVzFwYzNOcGRtVnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVp2Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YkdsbmFIUnpMQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJXbHpjMmwyWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnWVdVb01Da0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdWJXVnphR3hoYldKbGNuUmZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWJXVnphR3hoYldKbGNuUmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lIQm9iMjVuT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZMjl0Ylc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1emNHVmpkV3hoY20xaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpXNTJiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVoYjIxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJHbG5hSFJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1WdGFYTnphWFpsYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1aWRXMXdiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzV1YjNKdFlXeHRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVJwYzNCc1lXTmxiV1Z1ZEcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVptOW5MQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXNhV2RvZEhNc0NpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z0YVhOemFYWmxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d3S1FvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOd1pXTjFiR0Z5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJoWlNneE1URTRORGd4S1FvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb2FXNXBibVZ6Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXpNQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNXRaWE5vY0dodmJtZGZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWJXVnphSEJvYjI1blgyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCemRHRnVaR0Z5WkRvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpXNTJiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVoYjIxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJHbG5hSFJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1WdGFYTnphWFpsYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1aWRXMXdiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzV1YjNKdFlXeHRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVJwYzNCc1lXTmxiV1Z1ZEcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWNtOTFaMmh1WlhOemJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXRaWFJoYkc1bGMzTnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVp2Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YkdsbmFIUnpMQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJXbHpjMmwyWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnWVdVb01Da0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnliM1ZuYUc1bGMzTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxbGRHRnNibVZ6Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzUyVFdGd1NXNTBaVzV6YVhSNU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXViV1Z6YUhCb2VYTnBZMkZzWDNabGNuUXNDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklFWmxMbTFsYzJod2FIbHphV05oYkY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnZEc5dmJqb2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI1ZENoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1OdmJXMXZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZVzl0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG14cFoyaDBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVsYldsemMybDJaVzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WW5WdGNHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVibTl5YldGc2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWthWE53YkdGalpXMWxiblJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1keVlXUnBaVzUwYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bWIyY3NDaUFnSUNBZ0lDQWdJQ0FnSUdsbExteHBaMmgwY3l3S0lDQWdJQ0FnSUNBZ0lDQWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzFwYzNOcGRtVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHRmxLREFwQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklFWmxMbTFsYzJoMGIyOXVYM1psY25Rc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUVabExtMWxjMmgwYjI5dVgyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCdFlYUmpZWEE2SUhzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ2VYUW9Xd29nSUNBZ0lDQWdJQ0FnSUNCcFpTNWpiMjF0YjI0c0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1KMWJYQnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbTV2Y20xaGJHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaR2x6Y0d4aFkyVnRaVzUwYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bWIyY3NDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGRHTmhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExtMWxjMmh0WVhSallYQmZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWJXVnphRzFoZEdOaGNGOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ2NHOXBiblJ6T2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVjRzlwYm5SekxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bWIyY0tJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklFWmxMbkJ2YVc1MGMxOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1d2IybHVkSE5mWm5KaFp3b2dJQ0FnZlN3S0lDQWdJR1JoYzJobFpEb2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI1ZENoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1OdmJXMXZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVabTluTEFvZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpZMkZzWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0Z6YUZOcGVtVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSdmRHRnNVMmw2WlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExteHBibVZrWVhOb1pXUmZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWJHbHVaV1JoYzJobFpGOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ1pHVndkR2c2SUhzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ2VYUW9Xd29nSUNBZ0lDQWdJQ0FnSUNCcFpTNWpiMjF0YjI0c0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1ScGMzQnNZV05sYldWdWRHMWhjQW9nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1WkdWd2RHaGZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdVpHVndkR2hmWm5KaFp3b2dJQ0FnZlN3S0lDQWdJRzV2Y20xaGJEb2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI1ZENoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1OdmJXMXZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZblZ0Y0cxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJtOXliV0ZzYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1a2FYTndiR0ZqWlcxbGJuUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXdZV05wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNXRaWE5vYm05eWJXRnNYM1psY25Rc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUVabExtMWxjMmh1YjNKdFlXeGZabkpoWndvZ0lDQWdmU3dLSUNBZ0lITndjbWwwWlRvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbk53Y21sMFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVptOW5DaUFnSUNBZ0lDQWdYU2tzQ2lBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQkdaUzV6Y0hKcGRHVmZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWMzQnlhWFJsWDJaeVlXY0tJQ0FnSUgwc0NpQWdJQ0JpWVdOclozSnZkVzVrT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZFhaVWNtRnVjMlp2Y20wNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2diSFFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZERKRU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExtSmhZMnRuY205MWJtUmZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdVltRmphMmR5YjNWdVpGOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ1kzVmlaVG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCNWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtVnVkbTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM0JoWTJsMGVUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklFWmxMbU4xWW1WZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1WTNWaVpWOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ1pYRjFhWEpsWTNRNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMFJYRjFhWEpsWTNRNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdVpYRjFhWEpsWTNSZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1WlhGMWFYSmxZM1JmWm5KaFp3b2dJQ0FnZlN3S0lDQWdJR1JwYzNSaGJtTmxVa2RDUVRvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpHbHpjR3hoWTJWdFpXNTBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV1psY21WdVkyVlFiM05wZEdsdmJqb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1RRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWxZWEpFYVhOMFlXNWpaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptRnlSR2x6ZEdGdVkyVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVdVekNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRVpsTG1ScGMzUmhibU5sVWtkQ1FWOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1a2FYTjBZVzVqWlZKSFFrRmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZHpvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbXhwWjJoMGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVptOW5MQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dZV1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmNHRmphWFI1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdWMyaGhaRzkzWDNabGNuUXNDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklFWmxMbk5vWVdSdmQxOW1jbUZuQ2lBZ0lDQjlDbjA3Q25GMExuQm9lWE5wWTJGc0lEMGdld29nSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0J4ZEM1emRHRnVaR0Z5WkM1MWJtbG1iM0p0Y3l3S0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVkyOWhkRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dXQ2d4TENBeEtRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiR1ZoY21OdllYUk9iM0p0WVd4TllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdWbGJrTnZiRzl5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHRmxLREFwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVRMjlzYjNKTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVVbTkxWjJodVpYTnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdWbGJsSnZkV2RvYm1WemMwMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk50YVhOemFXOXVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMyMXBjM05wYjI1TllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpiV2x6YzJsdmJsTmhiWEJzWlhKVGFYcGxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUZnS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk50YVhOemFXOXVVMkZ0Y0d4bGNrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBZMnR1WlhOek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2xqYTI1bGMzTk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR0YwZEdWdWRXRjBhVzl1UTI5c2IzSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnWVdVb01Da0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjM0JsWTNWc1lYSkpiblJsYm5OcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpjR1ZqZFd4aGNrTnZiRzl5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHRmxLREVzSURFc0lERXBDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE53WldOMWJHRnlRMjlzYjNKTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCZEtTd0tJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1YldWemFIQm9lWE5wWTJGc1gzWmxjblFzQ2lBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1JtVXViV1Z6YUhCb2VYTnBZMkZzWDJaeVlXY0tmVHNLWm5WdVkzUnBiMjRnVm0wb2N5d2daU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnWVdVb01Da3NJRzhnUFNBd0xDQmhMQ0JzTENCaklEMGdiblZzYkN3Z2FDQTlJREFzSUhVZ1BTQnVkV3hzT3dvZ0lDQWdablZ1WTNScGIyNGdaQ2h0TENCNEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhZZ1BTQWhNU3dnWnlBOUlIZ3VhWE5UWTJWdVpTQTlQVDBnSVRBZ1B5QjRMbUpoWTJ0bmNtOTFibVFnT2lCdWRXeHNPd29nSUNBZ0lDQWdJR2NnSmlZZ1p5NXBjMVJsZUhSMWNtVWdKaVlnS0djZ1BTQmxMbWRsZENobktTazdDaUFnSUNBZ0lDQWdiR1YwSUhBZ1BTQnpMbmh5TENCZklEMGdjQzVuWlhSVFpYTnphVzl1SUNZbUlIQXVaMlYwVTJWemMybHZiaWdwT3dvZ0lDQWdJQ0FnSUY4Z0ppWWdYeTVsYm5acGNtOXViV1Z1ZEVKc1pXNWtUVzlrWlNBOVBUMGdJbUZrWkdsMGFYWmxJaUFtSmlBb1p5QTlJRzUxYkd3cExDQm5JRDA5UFNCdWRXeHNJRDhnWmloeUxDQnZLU0E2SUdjZ0ppWWdaeTVwYzBOdmJHOXlJQ1ltSUNobUtHY3NJREVwTENCMklEMGdJVEFwTENBb2N5NWhkWFJ2UTJ4bFlYSWdmSHdnZGlrZ0ppWWdjeTVqYkdWaGNpaHpMbUYxZEc5RGJHVmhja052Ykc5eUxDQnpMbUYxZEc5RGJHVmhja1JsY0hSb0xDQnpMbUYxZEc5RGJHVmhjbE4wWlc1amFXd3BMQ0JuSUNZbUlDaG5MbWx6UTNWaVpWUmxlSFIxY21VZ2ZId2daeTV0WVhCd2FXNW5JRDA5UFNCUWNpa2dQeUFvYkNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hzSUQwZ2JtVjNJSE4wS0c1bGR5QjNiaWd4TENBeExDQXhLU3dnYm1WM0lITnVLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSWtKaFkydG5jbTkxYm1SRGRXSmxUV0YwWlhKcFlXd2lMQW9nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ1Vta29jWFF1WTNWaVpTNTFibWxtYjNKdGN5a3NDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2djWFF1WTNWaVpTNTJaWEowWlhoVGFHRmtaWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCeGRDNWpkV0psTG1aeVlXZHRaVzUwVTJoaFpHVnlMQW9nSUNBZ0lDQWdJQ0FnSUNCemFXUmxPaUJwZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoWGNtbDBaVG9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJR1p2WnpvZ0lURUtJQ0FnSUNBZ0lDQjlLU2tzSUd3dVoyVnZiV1YwY25rdVpHVnNaWFJsUVhSMGNtbGlkWFJsS0NKdWIzSnRZV3dpS1N3Z2JDNW5aVzl0WlhSeWVTNWtaV3hsZEdWQmRIUnlhV0oxZEdVb0luVjJJaWtzSUd3dWIyNUNaV1p2Y21WU1pXNWtaWElnUFNCbWRXNWpkR2x2YmloNUxDQmlMQ0JCS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXVZMjl3ZVZCdmMybDBhVzl1S0VFdWJXRjBjbWw0VjI5eWJHUXBPd29nSUNBZ0lDQWdJSDBzSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaHNMbTFoZEdWeWFXRnNMQ0FpWlc1MlRXRndJaXdnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkVzVwWm05eWJYTXVaVzUyVFdGd0xuWmhiSFZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU2tzSUc0dWRYQmtZWFJsS0d3cEtTd2diQzV0WVhSbGNtbGhiQzUxYm1sbWIzSnRjeTVsYm5aTllYQXVkbUZzZFdVZ1BTQm5MQ0JzTG0xaGRHVnlhV0ZzTG5WdWFXWnZjbTF6TG1ac2FYQkZiblpOWVhBdWRtRnNkV1VnUFNCbkxtbHpRM1ZpWlZSbGVIUjFjbVVnSmlZZ1p5NXBjMUpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVVnUFQwOUlDRXhJRDhnTFRFZ09pQXhMQ0FvWXlBaFBUMGdaeUI4ZkNCb0lDRTlQU0JuTG5abGNuTnBiMjRnZkh3Z2RTQWhQVDBnY3k1MGIyNWxUV0Z3Y0dsdVp5a2dKaVlnS0d3dWJXRjBaWEpwWVd3dWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z1l5QTlJR2NzSUdnZ1BTQm5MblpsY25OcGIyNHNJSFVnUFNCekxuUnZibVZOWVhCd2FXNW5LU3dnYlM1MWJuTm9hV1owS0d3c0lHd3VaMlZ2YldWMGNua3NJR3d1YldGMFpYSnBZV3dzSURBc0lEQXNJRzUxYkd3cEtTQTZJR2NnSmlZZ1p5NXBjMVJsZUhSMWNtVWdKaVlnS0dFZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWVNBOUlHNWxkeUJ6ZENodVpYY2dVR2tvTWl3Z01pa3NJRzVsZHlCemJpaDdDaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ0pDWVdOclozSnZkVzVrVFdGMFpYSnBZV3dpTEFvZ0lDQWdJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dVbWtvY1hRdVltRmphMmR5YjNWdVpDNTFibWxtYjNKdGN5a3NDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2djWFF1WW1GamEyZHliM1Z1WkM1MlpYSjBaWGhUYUdGa1pYSXNDaUFnSUNBZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJ4ZEM1aVlXTnJaM0p2ZFc1a0xtWnlZV2R0Wlc1MFUyaGhaR1Z5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphV1JsT2lCQmFTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFVaWE4wT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUdadlp6b2dJVEVLSUNBZ0lDQWdJQ0I5S1Nrc0lHRXVaMlZ2YldWMGNua3VaR1ZzWlhSbFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUtTd2dUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0dFdWJXRjBaWEpwWVd3c0lDSnRZWEFpTENCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUxYm1sbWIzSnRjeTUwTWtRdWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlLU3dnYmk1MWNHUmhkR1VvWVNrcExDQmhMbTFoZEdWeWFXRnNMblZ1YVdadmNtMXpMblF5UkM1MllXeDFaU0E5SUdjc0lHY3ViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlQVDBnSVRBZ0ppWWdaeTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2dZUzV0WVhSbGNtbGhiQzUxYm1sbWIzSnRjeTUxZGxSeVlXNXpabTl5YlM1MllXeDFaUzVqYjNCNUtHY3ViV0YwY21sNEtTd2dLR01nSVQwOUlHY2dmSHdnYUNBaFBUMGdaeTUyWlhKemFXOXVJSHg4SUhVZ0lUMDlJSE11ZEc5dVpVMWhjSEJwYm1jcElDWW1JQ2hoTG0xaGRHVnlhV0ZzTG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUdNZ1BTQm5MQ0JvSUQwZ1p5NTJaWEp6YVc5dUxDQjFJRDBnY3k1MGIyNWxUV0Z3Y0dsdVp5a3NJRzB1ZFc1emFHbG1kQ2hoTENCaExtZGxiMjFsZEhKNUxDQmhMbTFoZEdWeWFXRnNMQ0F3TENBd0xDQnVkV3hzS1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQm1LRzBzSUhncElIc0tJQ0FnSUNBZ0lDQjBMbUoxWm1abGNuTXVZMjlzYjNJdWMyVjBRMnhsWVhJb2JTNXlMQ0J0TG1jc0lHMHVZaXdnZUN3Z2FTazdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2RsZEVOc1pXRnlRMjlzYjNJNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2pzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRU5zWldGeVEyOXNiM0k2SUdaMWJtTjBhVzl1S0cwc0lIZ2dQU0F4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEl1YzJWMEtHMHBMQ0J2SUQwZ2VDd2daaWh5TENCdktUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR2RsZEVOc1pXRnlRV3h3YUdFNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYnpzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRU5zWldGeVFXeHdhR0U2SUdaMWJtTjBhVzl1S0cwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHMHNJR1lvY2l3Z2J5azdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J5Wlc1a1pYSTZJR1FLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnVjIwb2N5d2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCekxtZGxkRkJoY21GdFpYUmxjaWd6TkRreU1Ta3NJSElnUFNCdUxtbHpWMlZpUjB3eUlEOGdiblZzYkNBNklHVXVaMlYwS0NKUFJWTmZkbVZ5ZEdWNFgyRnljbUY1WDI5aWFtVmpkQ0lwTENCdklEMGdiaTVwYzFkbFlrZE1NaUI4ZkNCeUlDRTlQU0J1ZFd4c0xDQmhJRDBnZTMwc0lHd2dQU0I0S0c1MWJHd3BMQ0JqSUQwZ2JEc0tJQ0FnSUdaMWJtTjBhVzl1SUdnb1JTd2dSQ3dnVlN3Z1Jpd2dUeWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVaU0E5SUNFeE93b2dJQ0FnSUNBZ0lHbG1JQ2h2S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCalpTQTlJRzBvUml3Z1ZTd2dSQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTWdJVDA5SUdObElDWW1JQ2hqSUQwZ1kyVXNJR1FvWXk1dlltcGxZM1FwS1N3Z2JtVWdQU0IyS0VZc0lFOHBMQ0J1WlNBbUppQm5LRVlzSUU4cE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCalpTQTlJRVF1ZDJseVpXWnlZVzFsSUQwOVBTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0tHTXVaMlZ2YldWMGNua2dJVDA5SUVZdWFXUWdmSHdnWXk1d2NtOW5jbUZ0SUNFOVBTQlZMbWxrSUh4OElHTXVkMmx5WldaeVlXMWxJQ0U5UFNCalpTa2dKaVlnS0dNdVoyVnZiV1YwY25rZ1BTQkdMbWxrTENCakxuQnliMmR5WVcwZ1BTQlZMbWxrTENCakxuZHBjbVZtY21GdFpTQTlJR05sTENCdVpTQTlJQ0V3S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1JTNXBjMGx1YzNSaGJtTmxaRTFsYzJnZ1BUMDlJQ0V3SUNZbUlDaHVaU0E5SUNFd0tTd2dUeUFoUFQwZ2JuVnNiQ0FtSmlCMExuVndaR0YwWlNoUExDQXpORGsyTXlrc0lHNWxJQ1ltSUNoTUtFVXNJRVFzSUZVc0lFWXBMQ0JQSUNFOVBTQnVkV3hzSUNZbUlITXVZbWx1WkVKMVptWmxjaWd6TkRrMk15d2dkQzVuWlhRb1R5a3VZblZtWm1WeUtTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIxS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxtbHpWMlZpUjB3eUlEOGdjeTVqY21WaGRHVldaWEowWlhoQmNuSmhlU2dwSURvZ2NpNWpjbVZoZEdWV1pYSjBaWGhCY25KaGVVOUZVeWdwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1pDaEZLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YVhOWFpXSkhURElnUHlCekxtSnBibVJXWlhKMFpYaEJjbkpoZVNoRktTQTZJSEl1WW1sdVpGWmxjblJsZUVGeWNtRjVUMFZUS0VVcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdaaWhGS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWFYTlhaV0pIVERJZ1B5QnpMbVJsYkdWMFpWWmxjblJsZUVGeWNtRjVLRVVwSURvZ2NpNWtaV3hsZEdWV1pYSjBaWGhCY25KaGVVOUZVeWhGS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHMG9SU3dnUkN3Z1ZTa2dld29nSUNBZ0lDQWdJR3hsZENCR0lEMGdWUzUzYVhKbFpuSmhiV1VnUFQwOUlDRXdMQ0JQSUQwZ1lWdEZMbWxrWFRzS0lDQWdJQ0FnSUNCUElEMDlQU0IyYjJsa0lEQWdKaVlnS0U4Z1BTQjdmU3dnWVZ0RkxtbGtYU0E5SUU4cE93b2dJQ0FnSUNBZ0lHeGxkQ0J1WlNBOUlFOWJSQzVwWkYwN0NpQWdJQ0FnSUNBZ2JtVWdQVDA5SUhadmFXUWdNQ0FtSmlBb2JtVWdQU0I3ZlN3Z1QxdEVMbWxrWFNBOUlHNWxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1kyVWdQU0J1WlZ0R1hUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyVWdQVDA5SUhadmFXUWdNQ0FtSmlBb1kyVWdQU0I0S0hVb0tTa3NJRzVsVzBaZElEMGdZMlVwTENCalpUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSGdvUlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JFSUQwZ1cxMHNJRlVnUFNCYlhTd2dSaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1R5QTlJREE3SUU4Z1BDQnBPeUJQS3lzcFJGdFBYU0E5SURBc0lGVmJUMTBnUFNBd0xDQkdXMDlkSUQwZ01Ec0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0JuWlc5dFpYUnllVG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdlozSmhiVG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnZDJseVpXWnlZVzFsT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM1FYUjBjbWxpZFhSbGN6b2dSQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pXNWhZbXhsWkVGMGRISnBZblYwWlhNNklGVXNDaUFnSUNBZ0lDQWdJQ0FnSUdGMGRISnBZblYwWlVScGRtbHpiM0p6T2lCR0xBb2dJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUTZJRVVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEpwWW5WMFpYTTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZURvZ2JuVnNiQW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCMktFVXNJRVFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdWU0E5SUdNdVlYUjBjbWxpZFhSbGN5d2dSaUE5SUVVdVlYUjBjbWxpZFhSbGN5d2dUeUE5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdVpTQnBiaUJHS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdObElEMGdWVnR1WlYwc0lGWWdQU0JHVzI1bFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHTmxJRDA5UFNCMmIybGtJREFnZkh3Z1kyVXVZWFIwY21saWRYUmxJQ0U5UFNCV0lIeDhJR05sTG1SaGRHRWdJVDA5SUZZdVpHRjBZU2tnY21WMGRYSnVJQ0V3T3dvZ0lDQWdJQ0FnSUNBZ0lDQlBLeXM3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJqTG1GMGRISnBZblYwWlhOT2RXMGdJVDA5SUU4Z2ZId2dZeTVwYm1SbGVDQWhQVDBnUkRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHY29SU3dnUkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JWSUQwZ2UzMHNJRVlnUFNCRkxtRjBkSEpwWW5WMFpYTXNJRThnUFNBd093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JtVWdhVzRnUmlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCalpTQTlJRVpiYm1WZExDQldJRDBnZTMwN0NpQWdJQ0FnSUNBZ0lDQWdJRll1WVhSMGNtbGlkWFJsSUQwZ1kyVXNJR05sTG1SaGRHRWdKaVlnS0ZZdVpHRjBZU0E5SUdObExtUmhkR0VwTENCVlcyNWxYU0E5SUZZc0lFOHJLenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWXk1aGRIUnlhV0oxZEdWeklEMGdWU3dnWXk1aGRIUnlhV0oxZEdWelRuVnRJRDBnVHl3Z1l5NXBibVJsZUNBOUlFUTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ3S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ1l5NXVaWGRCZEhSeWFXSjFkR1Z6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUkNBOUlEQXNJRlVnUFNCRkxteGxibWQwYURzZ1JDQThJRlU3SUVRckt5bEZXMFJkSUQwZ01Ec0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRjhvUlNrZ2V3b2dJQ0FnSUNBZ0lIa29SU3dnTUNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjVLRVVzSUVRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVlNBOUlHTXVibVYzUVhSMGNtbGlkWFJsY3l3Z1JpQTlJR011Wlc1aFlteGxaRUYwZEhKcFluVjBaWE1zSUU4Z1BTQmpMbUYwZEhKcFluVjBaVVJwZG1semIzSnpPd29nSUNBZ0lDQWdJRlZiUlYwZ1BTQXhMQ0JHVzBWZElEMDlQU0F3SUNZbUlDaHpMbVZ1WVdKc1pWWmxjblJsZUVGMGRISnBZa0Z5Y21GNUtFVXBMQ0JHVzBWZElEMGdNU2tzSUU5YlJWMGdJVDA5SUVRZ0ppWWdLQ2h1TG1selYyVmlSMHd5SUQ4Z2N5QTZJR1V1WjJWMEtDSkJUa2RNUlY5cGJuTjBZVzVqWldSZllYSnlZWGx6SWlrcFcyNHVhWE5YWldKSFRESWdQeUFpZG1WeWRHVjRRWFIwY21saVJHbDJhWE52Y2lJZ09pQWlkbVZ5ZEdWNFFYUjBjbWxpUkdsMmFYTnZja0ZPUjB4RklsMG9SU3dnUkNrc0lFOWJSVjBnUFNCRUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR0lvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCakxtNWxkMEYwZEhKcFluVjBaWE1zSUVRZ1BTQmpMbVZ1WVdKc1pXUkJkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdWU0E5SURBc0lFWWdQU0JFTG14bGJtZDBhRHNnVlNBOElFWTdJRlVyS3lsRVcxVmRJQ0U5UFNCRlcxVmRJQ1ltSUNoekxtUnBjMkZpYkdWV1pYSjBaWGhCZEhSeWFXSkJjbkpoZVNoVktTd2dSRnRWWFNBOUlEQXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUVNoRkxDQkVMQ0JWTENCR0xDQlBMQ0J1WlNrZ2V3b2dJQ0FnSUNBZ0lHNHVhWE5YWldKSFRESWdQVDA5SUNFd0lDWW1JQ2hWSUQwOVBTQTFNVEkwSUh4OElGVWdQVDA5SURVeE1qVXBJRDhnY3k1MlpYSjBaWGhCZEhSeWFXSkpVRzlwYm5SbGNpaEZMQ0JFTENCVkxDQlBMQ0J1WlNrZ09pQnpMblpsY25SbGVFRjBkSEpwWWxCdmFXNTBaWElvUlN3Z1JDd2dWU3dnUml3Z1R5d2dibVVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1RDaEZMQ0JFTENCVkxDQkdLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNHVhWE5YWldKSFRESWdQVDA5SUNFeElDWW1JQ2hGTG1selNXNXpkR0Z1WTJWa1RXVnphQ0I4ZkNCR0xtbHpTVzV6ZEdGdVkyVmtRblZtWm1WeVIyVnZiV1YwY25rcElDWW1JR1V1WjJWMEtDSkJUa2RNUlY5cGJuTjBZVzVqWldSZllYSnlZWGx6SWlrZ1BUMDlJRzUxYkd3cElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCd0tDazdDaUFnSUNBZ0lDQWdiR1YwSUU4Z1BTQkdMbUYwZEhKcFluVjBaWE1zSUc1bElEMGdWUzVuWlhSQmRIUnlhV0oxZEdWektDa3NJR05sSUQwZ1JDNWtaV1poZFd4MFFYUjBjbWxpZFhSbFZtRnNkV1Z6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVmlCcGJpQnVaU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYSUQwZ2JtVmJWbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hYTG14dlkyRjBhVzl1SUQ0OUlEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb1pTQTlJRTliVmwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hR1VnUFQwOUlIWnZhV1FnTUNBbUppQW9WaUE5UFQwZ0ltbHVjM1JoYm1ObFRXRjBjbWw0SWlBbUppQkZMbWx1YzNSaGJtTmxUV0YwY21sNElDWW1JQ2hvWlNBOUlFVXVhVzV6ZEdGdVkyVk5ZWFJ5YVhncExDQldJRDA5UFNBaWFXNXpkR0Z1WTJWRGIyeHZjaUlnSmlZZ1JTNXBibk4wWVc1alpVTnZiRzl5SUNZbUlDaG9aU0E5SUVVdWFXNXpkR0Z1WTJWRGIyeHZjaWtwTENCb1pTQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3hsSUQwZ2FHVXVibTl5YldGc2FYcGxaQ3dnWm1VZ1BTQm9aUzVwZEdWdFUybDZaU3dnUW1VZ1BTQjBMbWRsZENob1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFSmxJRDA5UFNCMmIybGtJREFwSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JaSUQwZ1FtVXVZblZtWm1WeUxDQkRaU0E5SUVKbExuUjVjR1VzSUhsbElEMGdRbVV1WW5sMFpYTlFaWEpGYkdWdFpXNTBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaG9aUzVwYzBsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5aU0E5SUdobExtUmhkR0VzSUhobElEMGdaMlV1YzNSeWFXUmxMQ0JQWlNBOUlHaGxMbTltWm5ObGREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2RsSUNZbUlHZGxMbWx6U1c1emRHRnVZMlZrU1c1MFpYSnNaV0YyWldSQ2RXWm1aWElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1J5QTlJREE3SUVjZ1BDQlhMbXh2WTJGMGFXOXVVMmw2WlRzZ1J5c3JLWGtvVnk1c2IyTmhkR2x2YmlBcklFY3NJR2RsTG0xbGMyaFFaWEpCZEhSeWFXSjFkR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1JTNXBjMGx1YzNSaGJtTmxaRTFsYzJnZ0lUMDlJQ0V3SUNZbUlFWXVYMjFoZUVsdWMzUmhibU5sUTI5MWJuUWdQVDA5SUhadmFXUWdNQ0FtSmlBb1JpNWZiV0Y0U1c1emRHRnVZMlZEYjNWdWRDQTlJR2RsTG0xbGMyaFFaWEpCZEhSeWFXSjFkR1VnS2lCblpTNWpiM1Z1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JtYjNJb2JHVjBJRWNnUFNBd095QkhJRHdnVnk1c2IyTmhkR2x2YmxOcGVtVTdJRWNyS3lsZktGY3ViRzlqWVhScGIyNGdLeUJIS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1aWFXNWtRblZtWm1WeUtETTBPVFl5TENCWktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSElEMGdNRHNnUnlBOElGY3ViRzlqWVhScGIyNVRhWHBsT3lCSEt5c3BRU2hYTG14dlkyRjBhVzl1SUNzZ1J5d2dabVVnTHlCWExteHZZMkYwYVc5dVUybDZaU3dnUTJVc0lHeGxMQ0I0WlNBcUlIbGxMQ0FvVDJVZ0t5Qm1aU0F2SUZjdWJHOWpZWFJwYjI1VGFYcGxJQ29nUnlrZ0tpQjVaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHaGxMbWx6U1c1emRHRnVZMlZrUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdkbElEMGdNRHNnWjJVZ1BDQlhMbXh2WTJGMGFXOXVVMmw2WlRzZ1oyVXJLeWw1S0ZjdWJHOWpZWFJwYjI0Z0t5Qm5aU3dnYUdVdWJXVnphRkJsY2tGMGRISnBZblYwWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkZMbWx6U1c1emRHRnVZMlZrVFdWemFDQWhQVDBnSVRBZ0ppWWdSaTVmYldGNFNXNXpkR0Z1WTJWRGIzVnVkQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaEdMbDl0WVhoSmJuTjBZVzVqWlVOdmRXNTBJRDBnYUdVdWJXVnphRkJsY2tGMGRISnBZblYwWlNBcUlHaGxMbU52ZFc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdadmNpaHNaWFFnWjJVZ1BTQXdPeUJuWlNBOElGY3ViRzlqWVhScGIyNVRhWHBsT3lCblpTc3JLVjhvVnk1c2IyTmhkR2x2YmlBcklHZGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVpYVc1a1FuVm1abVZ5S0RNME9UWXlMQ0JaS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JuWlNBOUlEQTdJR2RsSUR3Z1Z5NXNiMk5oZEdsdmJsTnBlbVU3SUdkbEt5c3BRU2hYTG14dlkyRjBhVzl1SUNzZ1oyVXNJR1psSUM4Z1Z5NXNiMk5oZEdsdmJsTnBlbVVzSUVObExDQnNaU3dnWm1VZ0tpQjVaU3dnWm1VZ0x5QlhMbXh2WTJGMGFXOXVVMmw2WlNBcUlHZGxJQ29nZVdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWTJVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaU0E5SUdObFcxWmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHNaU0FoUFQwZ2RtOXBaQ0F3S1NCemQybDBZMmdvYkdVdWJHVnVaM1JvS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1MlpYSjBaWGhCZEhSeWFXSXlabllvVnk1c2IyTmhkR2x2Yml3Z2JHVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVkbVZ5ZEdWNFFYUjBjbWxpTTJaMktGY3ViRzlqWVhScGIyNHNJR3hsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG5abGNuUmxlRUYwZEhKcFlqUm1kaWhYTG14dlkyRjBhVzl1TENCc1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVkbVZ5ZEdWNFFYUjBjbWxpTVdaMktGY3ViRzlqWVhScGIyNHNJR3hsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1lpZ3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnU1NncElIc0tJQ0FnSUNBZ0lDQlFLQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JGSUdsdUlHRXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSQ0E5SUdGYlJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVlNCcGJpQkVLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCR0lEMGdSRnRWWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVHlCcGJpQkdLV1lvUmx0UFhTNXZZbXBsWTNRcExDQmtaV3hsZEdVZ1JsdFBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQkVXMVZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0JoVzBWZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR3NvUlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hoVzBVdWFXUmRJRDA5UFNCMmIybGtJREFwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JzWlhRZ1JDQTlJR0ZiUlM1cFpGMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQlZJR2x1SUVRcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRVJiVlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdUeUJwYmlCR0tXWW9SbHRQWFM1dlltcGxZM1FwTENCa1pXeGxkR1VnUmx0UFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWc1pYUmxJRVJiVlYwN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHUmxiR1YwWlNCaFcwVXVhV1JkT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1FpaEZLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JFSUdsdUlHRXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWU0E5SUdGYlJGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFZXMFV1YVdSZElEMDlQU0IyYjJsa0lEQXBJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUZWYlJTNXBaRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1R5QnBiaUJHS1dZb1JsdFBYUzV2WW1wbFkzUXBMQ0JrWld4bGRHVWdSbHRQWFRzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElGVmJSUzVwWkYwN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdVQ2dwSUhzS0lDQWdJQ0FnSUNCM0tDa3NJR01nSVQwOUlHd2dKaVlnS0dNZ1BTQnNMQ0JrS0dNdWIySnFaV04wS1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjNLQ2tnZXdvZ0lDQWdJQ0FnSUd3dVoyVnZiV1YwY25rZ1BTQnVkV3hzTENCc0xuQnliMmR5WVcwZ1BTQnVkV3hzTENCc0xuZHBjbVZtY21GdFpTQTlJQ0V4T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCelpYUjFjRG9nYUN3S0lDQWdJQ0FnSUNCeVpYTmxkRG9nVUN3S0lDQWdJQ0FnSUNCeVpYTmxkRVJsWm1GMWJIUlRkR0YwWlRvZ2R5d0tJQ0FnSUNBZ0lDQmthWE53YjNObE9pQkpMQW9nSUNBZ0lDQWdJSEpsYkdWaGMyVlRkR0YwWlhOUFprZGxiMjFsZEhKNU9pQnJMQW9nSUNBZ0lDQWdJSEpsYkdWaGMyVlRkR0YwWlhOUFpsQnliMmR5WVcwNklFSXNDaUFnSUNBZ0lDQWdhVzVwZEVGMGRISnBZblYwWlhNNklIQXNDaUFnSUNBZ0lDQWdaVzVoWW14bFFYUjBjbWxpZFhSbE9pQmZMQW9nSUNBZ0lDQWdJR1JwYzJGaWJHVlZiblZ6WldSQmRIUnlhV0oxZEdWek9pQmlDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJSEZ0S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUd4bGRDQnBJRDBnYmk1cGMxZGxZa2RNTWl3Z2Nqc0tJQ0FnSUdaMWJtTjBhVzl1SUc4b1l5a2dld29nSUNBZ0lDQWdJSElnUFNCak93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZU2hqTENCb0tTQjdDaUFnSUNBZ0lDQWdjeTVrY21GM1FYSnlZWGx6S0hJc0lHTXNJR2dwTENCMExuVndaR0YwWlNob0xDQnlMQ0F4S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHd29ZeXdnYUN3Z2RTa2dld29nSUNBZ0lDQWdJR2xtSUNoMUlEMDlQU0F3S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnYkdWMElHUXNJR1k3Q2lBZ0lDQWdJQ0FnYVdZZ0tHa3BJR1FnUFNCekxDQm1JRDBnSW1SeVlYZEJjbkpoZVhOSmJuTjBZVzVqWldRaU93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tHUWdQU0JsTG1kbGRDZ2lRVTVIVEVWZmFXNXpkR0Z1WTJWa1gyRnljbUY1Y3lJcExDQm1JRDBnSW1SeVlYZEJjbkpoZVhOSmJuTjBZVzVqWldSQlRrZE1SU0lzSUdRZ1BUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhDZFdabVpYSlNaVzVrWlhKbGNqb2dkWE5wYm1jZ1ZFaFNSVVV1U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua2dZblYwSUdoaGNtUjNZWEpsSUdSdlpYTWdibTkwSUhOMWNIQnZjblFnWlhoMFpXNXphVzl1SUVGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1pGdG1YU2h5TENCakxDQm9MQ0IxS1N3Z2RDNTFjR1JoZEdVb2FDd2djaXdnZFNrN0NpQWdJQ0I5Q2lBZ0lDQjBhR2x6TG5ObGRFMXZaR1VnUFNCdkxDQjBhR2x6TG5KbGJtUmxjaUE5SUdFc0lIUm9hWE11Y21WdVpHVnlTVzV6ZEdGdVkyVnpJRDBnYkRzS2ZRcG1kVzVqZEdsdmJpQlliU2h6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmpzS0lDQWdJR1oxYm1OMGFXOXVJR2tvS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRzRnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUc0N0NpQWdJQ0FnSUNBZ2FXWWdLR1V1YUdGektDSkZXRlJmZEdWNGRIVnlaVjltYVd4MFpYSmZZVzVwYzI5MGNtOXdhV01pS1NBOVBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUV3Z1BTQmxMbWRsZENnaVJWaFVYM1JsZUhSMWNtVmZabWxzZEdWeVgyRnVhWE52ZEhKdmNHbGpJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNGdQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpaE1MazFCV0Y5VVJWaFVWVkpGWDAxQldGOUJUa2xUVDFSU1QxQlpYMFZZVkNrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUc0Z1BTQXdPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnY2loTUtTQjdDaUFnSUNBZ0lDQWdhV1lnS0V3Z1BUMDlJQ0pvYVdkb2NDSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE11WjJWMFUyaGhaR1Z5VUhKbFkybHphVzl1Um05eWJXRjBLRE0xTmpNekxDQXpOak16T0NrdWNISmxZMmx6YVc5dUlENGdNQ0FtSmlCekxtZGxkRk5vWVdSbGNsQnlaV05wYzJsdmJrWnZjbTFoZENnek5UWXpNaXdnTXpZek16Z3BMbkJ5WldOcGMybHZiaUErSURBcElISmxkSFZ5YmlBaWFHbG5hSEFpT3dvZ0lDQWdJQ0FnSUNBZ0lDQk1JRDBnSW0xbFpHbDFiWEFpT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVENBOVBUMGdJbTFsWkdsMWJYQWlJQ1ltSUhNdVoyVjBVMmhoWkdWeVVISmxZMmx6YVc5dVJtOXliV0YwS0RNMU5qTXpMQ0F6TmpNek55a3VjSEpsWTJsemFXOXVJRDRnTUNBbUppQnpMbWRsZEZOb1lXUmxjbEJ5WldOcGMybHZia1p2Y20xaGRDZ3pOVFl6TWl3Z016WXpNemNwTG5CeVpXTnBjMmx2YmlBK0lEQWdQeUFpYldWa2FYVnRjQ0lnT2lBaWJHOTNjQ0k3Q2lBZ0lDQjlDaUFnSUNCc1pYUWdieUE5SUhSNWNHVnZaaUJYWldKSFRESlNaVzVrWlhKcGJtZERiMjUwWlhoMElEd2dJblVpSUNZbUlITWdhVzV6ZEdGdVkyVnZaaUJYWldKSFRESlNaVzVrWlhKcGJtZERiMjUwWlhoMElIeDhJSFI1Y0dWdlppQlhaV0pIVERKRGIyMXdkWFJsVW1WdVpHVnlhVzVuUTI5dWRHVjRkQ0E4SUNKMUlpQW1KaUJ6SUdsdWMzUmhibU5sYjJZZ1YyVmlSMHd5UTI5dGNIVjBaVkpsYm1SbGNtbHVaME52Ym5SbGVIUXNJR0VnUFNCMExuQnlaV05wYzJsdmJpQWhQVDBnZG05cFpDQXdJRDhnZEM1d2NtVmphWE5wYjI0Z09pQWlhR2xuYUhBaUxDQnNJRDBnY2loaEtUc0tJQ0FnSUd3Z0lUMDlJR0VnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvaUxDQmhMQ0FpYm05MElITjFjSEJ2Y25SbFpDd2dkWE5wYm1jaUxDQnNMQ0FpYVc1emRHVmhaQzRpS1N3Z1lTQTlJR3dwT3dvZ0lDQWdiR1YwSUdNZ1BTQnZJSHg4SUdVdWFHRnpLQ0pYUlVKSFRGOWtjbUYzWDJKMVptWmxjbk1pS1N3Z2FDQTlJSFF1Ykc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNpQTlQVDBnSVRBc0lIVWdQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pORGt6TUNrc0lHUWdQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pOVFkyTUNrc0lHWWdQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pNemM1S1N3Z2JTQTlJSE11WjJWMFVHRnlZVzFsZEdWeUtETTBNRGMyS1N3Z2VDQTlJSE11WjJWMFVHRnlZVzFsZEdWeUtETTBPVEl4S1N3Z2RpQTlJSE11WjJWMFVHRnlZVzFsZEdWeUtETTJNelEzS1N3Z1p5QTlJSE11WjJWMFVHRnlZVzFsZEdWeUtETTJNelE0S1N3Z2NDQTlJSE11WjJWMFVHRnlZVzFsZEdWeUtETTJNelE1S1N3Z1h5QTlJR1FnUGlBd0xDQjVJRDBnYnlCOGZDQmxMbWhoY3lnaVQwVlRYM1JsZUhSMWNtVmZabXh2WVhRaUtTd2dZaUE5SUY4Z0ppWWdlU3dnUVNBOUlHOGdQeUJ6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pOakU0TXlrZ09pQXdPd29nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCcGMxZGxZa2RNTWpvZ2J5d0tJQ0FnSUNBZ0lDQmtjbUYzUW5WbVptVnljem9nWXl3S0lDQWdJQ0FnSUNCblpYUk5ZWGhCYm1semIzUnliM0I1T2lCcExBb2dJQ0FnSUNBZ0lHZGxkRTFoZUZCeVpXTnBjMmx2YmpvZ2Npd0tJQ0FnSUNBZ0lDQndjbVZqYVhOcGIyNDZJR0VzQ2lBZ0lDQWdJQ0FnYkc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNqb2dhQ3dLSUNBZ0lDQWdJQ0J0WVhoVVpYaDBkWEpsY3pvZ2RTd0tJQ0FnSUNBZ0lDQnRZWGhXWlhKMFpYaFVaWGgwZFhKbGN6b2daQ3dLSUNBZ0lDQWdJQ0J0WVhoVVpYaDBkWEpsVTJsNlpUb2daaXdLSUNBZ0lDQWdJQ0J0WVhoRGRXSmxiV0Z3VTJsNlpUb2diU3dLSUNBZ0lDQWdJQ0J0WVhoQmRIUnlhV0oxZEdWek9pQjRMQW9nSUNBZ0lDQWdJRzFoZUZabGNuUmxlRlZ1YVdadmNtMXpPaUIyTEFvZ0lDQWdJQ0FnSUcxaGVGWmhjbmxwYm1kek9pQm5MQW9nSUNBZ0lDQWdJRzFoZUVaeVlXZHRaVzUwVlc1cFptOXliWE02SUhBc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VkdWNGRIVnlaWE02SUY4c0NpQWdJQ0FnSUNBZ1pteHZZWFJHY21GbmJXVnVkRlJsZUhSMWNtVnpPaUI1TEFvZ0lDQWdJQ0FnSUdac2IyRjBWbVZ5ZEdWNFZHVjRkSFZ5WlhNNklHSXNDaUFnSUNBZ0lDQWdiV0Y0VTJGdGNHeGxjem9nUVFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCS2JTaHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlIUm9hWE1zSUhRZ1BTQnVkV3hzTENCdUlEMGdNQ3dnYVNBOUlDRXhMQ0J5SUQwZ0lURXNJRzhnUFNCdVpYY2dWM1FzSUdFZ1BTQnVaWGNnYkhRc0lHd2dQU0I3Q2lBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ2JtVmxaSE5WY0dSaGRHVTZJQ0V4Q2lBZ0lDQjlPd29nSUNBZ2RHaHBjeTUxYm1sbWIzSnRJRDBnYkN3Z2RHaHBjeTV1ZFcxUWJHRnVaWE1nUFNBd0xDQjBhR2x6TG01MWJVbHVkR1Z5YzJWamRHbHZiaUE5SURBc0lIUm9hWE11YVc1cGRDQTlJR1oxYm1OMGFXOXVLSFVzSUdRc0lHWXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJSFV1YkdWdVozUm9JQ0U5UFNBd0lIeDhJR1FnZkh3Z2JpQWhQVDBnTUNCOGZDQnBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBJRDBnWkN3Z2RDQTlJR2dvZFN3Z1ppd2dNQ2tzSUc0Z1BTQjFMbXhsYm1kMGFDd2diVHNLSUNBZ0lIMHNJSFJvYVhNdVltVm5hVzVUYUdGa2IzZHpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NpQTlJQ0V3TENCb0tHNTFiR3dwT3dvZ0lDQWdmU3dnZEdocGN5NWxibVJUYUdGa2IzZHpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NpQTlJQ0V4TENCaktDazdDaUFnSUNCOUxDQjBhR2x6TG5ObGRGTjBZWFJsSUQwZ1puVnVZM1JwYjI0b2RTd2daQ3dnWmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J0SUQwZ2RTNWpiR2x3Y0dsdVoxQnNZVzVsY3l3Z2VDQTlJSFV1WTJ4cGNFbHVkR1Z5YzJWamRHbHZiaXdnZGlBOUlIVXVZMnhwY0ZOb1lXUnZkM01zSUdjZ1BTQnpMbWRsZENoMUtUc0tJQ0FnSUNBZ0lDQnBaaUFvSVdrZ2ZId2diU0E5UFQwZ2JuVnNiQ0I4ZkNCdExteGxibWQwYUNBOVBUMGdNQ0I4ZkNCeUlDWW1JQ0YyS1NCeUlEOGdhQ2h1ZFd4c0tTQTZJR01vS1RzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCeUlEOGdNQ0E2SUc0c0lGOGdQU0J3SUNvZ05Dd2dlU0E5SUdjdVkyeHBjSEJwYm1kVGRHRjBaU0I4ZkNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCc0xuWmhiSFZsSUQwZ2VTd2dlU0E5SUdnb2JTd2daQ3dnWHl3Z1ppazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWWlBOUlEQTdJR0lnSVQwOUlGODdJQ3NyWWlsNVcySmRJRDBnZEZ0aVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWnk1amJHbHdjR2x1WjFOMFlYUmxJRDBnZVN3Z2RHaHBjeTV1ZFcxSmJuUmxjbk5sWTNScGIyNGdQU0I0SUQ4Z2RHaHBjeTV1ZFcxUWJHRnVaWE1nT2lBd0xDQjBhR2x6TG01MWJWQnNZVzVsY3lBclBTQndPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMDdDaUFnSUNCbWRXNWpkR2x2YmlCaktDa2dld29nSUNBZ0lDQWdJR3d1ZG1Gc2RXVWdJVDA5SUhRZ0ppWWdLR3d1ZG1Gc2RXVWdQU0IwTENCc0xtNWxaV1J6VlhCa1lYUmxJRDBnYmlBK0lEQXBMQ0JsTG01MWJWQnNZVzVsY3lBOUlHNHNJR1V1Ym5WdFNXNTBaWEp6WldOMGFXOXVJRDBnTURzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHZ29kU3dnWkN3Z1ppd2diU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnZFNBaFBUMGdiblZzYkNBL0lIVXViR1Z1WjNSb0lEb2dNQ3dnZGlBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnYVdZZ0tIZ2dJVDA5SURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIWWdQU0JzTG5aaGJIVmxMQ0J0SUNFOVBTQWhNQ0I4ZkNCMklEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHWWdLeUI0SUNvZ05Dd2djQ0E5SUdRdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTNW5aWFJPYjNKdFlXeE5ZWFJ5YVhnb2NDa3NJQ2gySUQwOVBTQnVkV3hzSUh4OElIWXViR1Z1WjNSb0lEd2daeWtnSmlZZ0tIWWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLR2NwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWHlBOUlEQXNJSGtnUFNCbU95QmZJQ0U5UFNCNE95QXJLMThzSUhrZ0t6MGdOQ2x2TG1OdmNIa29kVnRmWFNrdVlYQndiSGxOWVhSeWFYZzBLSEFzSUdFcExDQnZMbTV2Y20xaGJDNTBiMEZ5Y21GNUtIWXNJSGtwTENCMlcza2dLeUF6WFNBOUlHOHVZMjl1YzNSaGJuUTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiQzUyWVd4MVpTQTlJSFlzSUd3dWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWJuVnRVR3hoYm1WeklEMGdlQ3dnWlM1dWRXMUpiblJsY25ObFkzUnBiMjRnUFNBd0xDQjJPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJRmx0S0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0JtZFc1amRHbHZiaUIwS0c4c0lHRXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZU0E5UFQwZ1JITWdQeUJ2TG0xaGNIQnBibWNnUFNCQ2FTQTZJR0VnUFQwOUlFWnpJQ1ltSUNodkxtMWhjSEJwYm1jZ1BTQjZhU2tzSUc4N0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnVLRzhwSUhzS0lDQWdJQ0FnSUNCcFppQW9ieUFtSmlCdkxtbHpWR1Y0ZEhWeVpTQW1KaUJ2TG1selVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpTQTlQVDBnSVRFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J2TG0xaGNIQnBibWM3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoSUQwOVBTQkVjeUI4ZkNCaElEMDlQU0JHY3lrZ2FXWWdLR1V1YUdGektHOHBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR1V1WjJWMEtHOHBMblJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDaHNMQ0J2TG0xaGNIQnBibWNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCdkxtbHRZV2RsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHd2dKaVlnYkM1b1pXbG5hSFFnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0J6TG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwTENCb0lEMGdibVYzSUdwektHd3VhR1ZwWjJoMElDOGdNaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdndVpuSnZiVVZ4ZFdseVpXTjBZVzVuZFd4aGNsUmxlSFIxY21Vb2N5d2dieWtzSUdVdWMyVjBLRzhzSUdncExDQnpMbk5sZEZKbGJtUmxjbFJoY21kbGRDaGpLU3dnYnk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z2FTa3NJSFFvYUM1MFpYaDBkWEpsTENCdkxtMWhjSEJwYm1jcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FTaHZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J2TG5SaGNtZGxkRHNLSUNBZ0lDQWdJQ0JoTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQnBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR1V1WjJWMEtHRXBPd29nSUNBZ0lDQWdJR3dnSVQwOUlIWnZhV1FnTUNBbUppQW9aUzVrWld4bGRHVW9ZU2tzSUd3dVpHbHpjRzl6WlNncEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSElvS1NCN0NpQWdJQ0FnSUNBZ1pTQTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCblpYUTZJRzRzQ2lBZ0lDQWdJQ0FnWkdsemNHOXpaVG9nY2dvZ0lDQWdmVHNLZlFwMllYSWdSbklnUFNCamJHRnpjeUJsZUhSbGJtUnpJRWx5SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXRNU3dnZENBOUlERXNJRzRnUFNBeExDQnBJRDBnTFRFc0lISWdQU0F1TVN3Z2J5QTlJREpsTXlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUM0owYUc5bmNtRndhR2xqUTJGdFpYSmhJaXdnZEdocGN5NTZiMjl0SUQwZ01Td2dkR2hwY3k1MmFXVjNJRDBnYm5Wc2JDd2dkR2hwY3k1c1pXWjBJRDBnWlN3Z2RHaHBjeTV5YVdkb2RDQTlJSFFzSUhSb2FYTXVkRzl3SUQwZ2Jpd2dkR2hwY3k1aWIzUjBiMjBnUFNCcExDQjBhR2x6TG01bFlYSWdQU0J5TENCMGFHbHpMbVpoY2lBOUlHOHNJSFJvYVhNdWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU3dnZENrc0lIUm9hWE11YkdWbWRDQTlJR1V1YkdWbWRDd2dkR2hwY3k1eWFXZG9kQ0E5SUdVdWNtbG5hSFFzSUhSb2FYTXVkRzl3SUQwZ1pTNTBiM0FzSUhSb2FYTXVZbTkwZEc5dElEMGdaUzVpYjNSMGIyMHNJSFJvYVhNdWJtVmhjaUE5SUdVdWJtVmhjaXdnZEdocGN5NW1ZWElnUFNCbExtWmhjaXdnZEdocGN5NTZiMjl0SUQwZ1pTNTZiMjl0TENCMGFHbHpMblpwWlhjZ1BTQmxMblpwWlhjZ1BUMDlJRzUxYkd3Z1B5QnVkV3hzSURvZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z1pTNTJhV1YzS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGWnBaWGRQWm1aelpYUW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ0lDQWdJSFJvYVhNdWRtbGxkeUE5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTUyYVdWM0lEMGdld29nSUNBZ0lDQWdJQ0FnSUNCbGJtRmliR1ZrT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWm5Wc2JGZHBaSFJvT2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0JtZFd4c1NHVnBaMmgwT2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUllPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhSWk9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXhDaUFnSUNBZ0lDQWdmU2tzSUhSb2FYTXVkbWxsZHk1bGJtRmliR1ZrSUQwZ0lUQXNJSFJvYVhNdWRtbGxkeTVtZFd4c1YybGtkR2dnUFNCbExDQjBhR2x6TG5acFpYY3VablZzYkVobGFXZG9kQ0E5SUhRc0lIUm9hWE11ZG1sbGR5NXZabVp6WlhSWUlEMGdiaXdnZEdocGN5NTJhV1YzTG05bVpuTmxkRmtnUFNCcExDQjBhR2x6TG5acFpYY3VkMmxrZEdnZ1BTQnlMQ0IwYUdsekxuWnBaWGN1YUdWcFoyaDBJRDBnYnl3Z2RHaHBjeTUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDazdDaUFnSUNCOUNpQWdJQ0JqYkdWaGNsWnBaWGRQWm1aelpYUW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTJhV1YzSUNFOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG5acFpYY3VaVzVoWW14bFpDQTlJQ0V4S1N3Z2RHaHBjeTUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdLSFJvYVhNdWNtbG5hSFFnTFNCMGFHbHpMbXhsWm5RcElDOGdLRElnS2lCMGFHbHpMbnB2YjIwcExDQjBJRDBnS0hSb2FYTXVkRzl3SUMwZ2RHaHBjeTVpYjNSMGIyMHBJQzhnS0RJZ0tpQjBhR2x6TG5wdmIyMHBMQ0J1SUQwZ0tIUm9hWE11Y21sbmFIUWdLeUIwYUdsekxteGxablFwSUM4Z01pd2dhU0E5SUNoMGFHbHpMblJ2Y0NBcklIUm9hWE11WW05MGRHOXRLU0F2SURJc0lISWdQU0J1SUMwZ1pTd2dieUE5SUc0Z0t5QmxMQ0JoSUQwZ2FTQXJJSFFzSUd3Z1BTQnBJQzBnZERzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1MmFXVjNJQ0U5UFNCdWRXeHNJQ1ltSUhSb2FYTXVkbWxsZHk1bGJtRmliR1ZrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdLSFJvYVhNdWNtbG5hSFFnTFNCMGFHbHpMbXhsWm5RcElDOGdkR2hwY3k1MmFXVjNMbVoxYkd4WGFXUjBhQ0F2SUhSb2FYTXVlbTl2YlN3Z2FDQTlJQ2gwYUdsekxuUnZjQ0F0SUhSb2FYTXVZbTkwZEc5dEtTQXZJSFJvYVhNdWRtbGxkeTVtZFd4c1NHVnBaMmgwSUM4Z2RHaHBjeTU2YjI5dE93b2dJQ0FnSUNBZ0lDQWdJQ0J5SUNzOUlHTWdLaUIwYUdsekxuWnBaWGN1YjJabWMyVjBXQ3dnYnlBOUlISWdLeUJqSUNvZ2RHaHBjeTUyYVdWM0xuZHBaSFJvTENCaElDMDlJR2dnS2lCMGFHbHpMblpwWlhjdWIyWm1jMlYwV1N3Z2JDQTlJR0VnTFNCb0lDb2dkR2hwY3k1MmFXVjNMbWhsYVdkb2REc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0TG0xaGEyVlBjblJvYjJkeVlYQm9hV01vY2l3Z2J5d2dZU3dnYkN3Z2RHaHBjeTV1WldGeUxDQjBhR2x6TG1aaGNpa3NJSFJvYVhNdWNISnZhbVZqZEdsdmJrMWhkSEpwZUVsdWRtVnljMlV1WTI5d2VTaDBhR2x6TG5CeWIycGxZM1JwYjI1TllYUnlhWGdwTG1sdWRtVnlkQ2dwT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlITjFjR1Z5TG5SdlNsTlBUaWhsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1dlltcGxZM1F1ZW05dmJTQTlJSFJvYVhNdWVtOXZiU3dnZEM1dlltcGxZM1F1YkdWbWRDQTlJSFJvYVhNdWJHVm1kQ3dnZEM1dlltcGxZM1F1Y21sbmFIUWdQU0IwYUdsekxuSnBaMmgwTENCMExtOWlhbVZqZEM1MGIzQWdQU0IwYUdsekxuUnZjQ3dnZEM1dlltcGxZM1F1WW05MGRHOXRJRDBnZEdocGN5NWliM1IwYjIwc0lIUXViMkpxWldOMExtNWxZWElnUFNCMGFHbHpMbTVsWVhJc0lIUXViMkpxWldOMExtWmhjaUE5SUhSb2FYTXVabUZ5TENCMGFHbHpMblpwWlhjZ0lUMDlJRzUxYkd3Z0ppWWdLSFF1YjJKcVpXTjBMblpwWlhjZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQjBhR2x6TG5acFpYY3BLU3dnZERzS0lDQWdJSDBLZlRzS1JuSXVjSEp2ZEc5MGVYQmxMbWx6VDNKMGFHOW5jbUZ3YUdsalEyRnRaWEpoSUQwZ0lUQTdDblpoY2lCSGFTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2MyNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsSmhkMU5vWVdSbGNrMWhkR1Z5YVdGc0lqc0tJQ0FnSUgwS2ZUc0tSMmt1Y0hKdmRHOTBlWEJsTG1selVtRjNVMmhoWkdWeVRXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlFVnBJRDBnTkN3Z1RXNGdQU0E0TENCV2RDQTlJRTFoZEdndWNHOTNLRElzSUUxdUtTd2djMmdnUFNCYkNpQWdJQ0F1TVRJMUxBb2dJQ0FnTGpJeE5Td0tJQ0FnSUM0ek5Td0tJQ0FnSUM0ME5EWXNDaUFnSUNBdU5USTJMQW9nSUNBZ0xqVTRNZ3BkTENCdmFDQTlJRTF1SUMwZ1JXa2dLeUF4SUNzZ2MyZ3ViR1Z1WjNSb0xDQndhU0E5SURJd0xDQkljeUE5SUhzS0lDQWdJRnRPZEYwNklEQXNDaUFnSUNCYlQybGRPaUF4Q24wc0lFZHZJRDBnYm1WM0lFWnlMQ0I3SUY5c2IyUlFiR0Z1WlhNNklHcHBJQ3dnWDNOcGVtVk1iMlJ6T2lCTWJDQXNJRjl6YVdkdFlYTTZJR3h6SUNCOUlEMGdXbTBvS1N3Z1Vtd2dQU0J1WlhjZ1lXVXNJRlp2SUQwZ2JuVnNiQ3dnVDI0Z1BTQW9NU0FySUUxaGRHZ3VjM0Z5ZENnMUtTa2dMeUF5TENCdGFTQTlJREVnTHlCUGJpd2dVR3dnUFNCYkNpQWdJQ0J1WlhjZ1RTZ3hMQ0F4TENBeEtTd0tJQ0FnSUc1bGR5Qk5LQzB4TENBeExDQXhLU3dLSUNBZ0lHNWxkeUJOS0RFc0lERXNJQzB4S1N3S0lDQWdJRzVsZHlCTktDMHhMQ0F4TENBdE1Ta3NDaUFnSUNCdVpYY2dUU2d3TENCUGJpd2diV2twTEFvZ0lDQWdibVYzSUUwb01Dd2dUMjRzSUMxdGFTa3NDaUFnSUNCdVpYY2dUU2h0YVN3Z01Dd2dUMjRwTEFvZ0lDQWdibVYzSUUwb0xXMXBMQ0F3TENCUGJpa3NDaUFnSUNCdVpYY2dUU2hQYml3Z2JXa3NJREFwTEFvZ0lDQWdibVYzSUUwb0xVOXVMQ0J0YVN3Z01Da0tYU3dnWVdnZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5eVpXNWtaWEpsY2lBOUlHVXNJSFJvYVhNdVgzQnBibWRRYjI1blVtVnVaR1Z5VkdGeVoyVjBJRDBnYm5Wc2JDd2dkR2hwY3k1ZllteDFjazFoZEdWeWFXRnNJRDBnSkcwb2NHa3BMQ0IwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2lBOUlHNTFiR3dzSUhSb2FYTXVYMk4xWW1WdFlYQlRhR0ZrWlhJZ1BTQnVkV3hzTENCMGFHbHpMbDlqYjIxd2FXeGxUV0YwWlhKcFlXd29kR2hwY3k1ZllteDFjazFoZEdWeWFXRnNLVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMVRZMlZ1WlNobExDQjBJRDBnTUN3Z2JpQTlJQzR4TENCcElEMGdNVEF3S1NCN0NpQWdJQ0FnSUNBZ1ZtOGdQU0IwYUdsekxsOXlaVzVrWlhKbGNpNW5aWFJTWlc1a1pYSlVZWEpuWlhRb0tUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE11WDJGc2JHOWpZWFJsVkdGeVoyVjBjeWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXpZMlZ1WlZSdlEzVmlaVlZXS0dVc0lHNHNJR2tzSUhJcExDQjBJRDRnTUNBbUppQjBhR2x6TGw5aWJIVnlLSElzSURBc0lEQXNJSFFwTENCMGFHbHpMbDloY0hCc2VWQk5Va1ZOS0hJcExDQjBhR2x6TGw5amJHVmhiblZ3S0hJcExDQnlPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVVnhkV2x5WldOMFlXNW5kV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJaeWIyMVVaWGgwZFhKbEtHVXBPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVTjFZbVZ0WVhBb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bWNtOXRWR1Y0ZEhWeVpTaGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJYQnBiR1ZEZFdKbGJXRndVMmhoWkdWeUtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgyTjFZbVZ0WVhCVGFHRmtaWElnUFQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WDJOMVltVnRZWEJUYUdGa1pYSWdQU0JHYkNncExDQjBhR2x6TGw5amIyMXdhV3hsVFdGMFpYSnBZV3dvZEdocGN5NWZZM1ZpWlcxaGNGTm9ZV1JsY2lrcE93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0dsc1pVVnhkV2x5WldOMFlXNW5kV3hoY2xOb1lXUmxjaWdwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDlsY1hWcGNtVmpkRk5vWVdSbGNpQTlQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWZaWEYxYVhKbFkzUlRhR0ZrWlhJZ1BTQkViQ2dwTENCMGFHbHpMbDlqYjIxd2FXeGxUV0YwWlhKcFlXd29kR2hwY3k1ZlpYRjFhWEpsWTNSVGFHRmtaWElwS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZllteDFjazFoZEdWeWFXRnNMbVJwYzNCdmMyVW9LU3dnZEdocGN5NWZZM1ZpWlcxaGNGTm9ZV1JsY2lBaFBUMGdiblZzYkNBbUppQjBhR2x6TGw5amRXSmxiV0Z3VTJoaFpHVnlMbVJwYzNCdmMyVW9LU3dnZEdocGN5NWZaWEYxYVhKbFkzUlRhR0ZrWlhJZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1ZlpYRjFhWEpsWTNSVGFHRmtaWEl1WkdsemNHOXpaU2dwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWlNBOUlEQTdJR1VnUENCcWFTNXNaVzVuZEdnN0lHVXJLeWxxYVZ0bFhTNWthWE53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0JmWTJ4bFlXNTFjQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmY0dsdVoxQnZibWRTWlc1a1pYSlVZWEpuWlhRdVpHbHpjRzl6WlNncExDQjBhR2x6TGw5eVpXNWtaWEpsY2k1elpYUlNaVzVrWlhKVVlYSm5aWFFvVm04cExDQmxMbk5qYVhOemIzSlVaWE4wSUQwZ0lURXNJR056S0dVc0lEQXNJREFzSUdVdWQybGtkR2dzSUdVdWFHVnBaMmgwS1RzS0lDQWdJSDBLSUNBZ0lGOW1jbTl0VkdWNGRIVnlaU2hsS1NCN0NpQWdJQ0FnSUNBZ1ZtOGdQU0IwYUdsekxsOXlaVzVrWlhKbGNpNW5aWFJTWlc1a1pYSlVZWEpuWlhRb0tUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDJGc2JHOWpZWFJsVkdGeVoyVjBjeWhsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZkR1Y0ZEhWeVpWUnZRM1ZpWlZWV0tHVXNJSFFwTENCMGFHbHpMbDloY0hCc2VWQk5Va1ZOS0hRcExDQjBhR2x6TGw5amJHVmhiblZ3S0hRcExDQjBPd29nSUNBZ2ZRb2dJQ0FnWDJGc2JHOWpZWFJsVkdGeVoyVjBjeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzFoWjBacGJIUmxjam9nZEhRc0NpQWdJQ0FnSUNBZ0lDQWdJRzFwYmtacGJIUmxjam9nZEhRc0NpQWdJQ0FnSUNBZ0lDQWdJR2RsYm1WeVlYUmxUV2x3YldGd2N6b2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUd0dUxBb2dJQ0FnSUNBZ0lDQWdJQ0JtYjNKdFlYUTZJR04wTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxibU52WkdsdVp6b2dUblFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvUW5WbVptVnlPaUFoTVFvZ0lDQWdJQ0FnSUgwc0lHNGdQU0JKYkNoMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNWtaWEIwYUVKMVptWmxjaUE5SUNGbExDQjBhR2x6TGw5d2FXNW5VRzl1WjFKbGJtUmxjbFJoY21kbGRDQTlJRWxzS0hRcExDQnVPd29nSUNBZ2ZRb2dJQ0FnWDJOdmJYQnBiR1ZOWVhSbGNtbGhiQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCdVpYY2djM1FvYW1sYk1GMHNJR1VwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVYM0psYm1SbGNtVnlMbU52YlhCcGJHVW9kQ3dnUjI4cE93b2dJQ0FnZlFvZ0lDQWdYM05qWlc1bFZHOURkV0psVlZZb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCaElEMGdibVYzSUhWMEtEa3dMQ0F4TENCMExDQnVLU3dnYkNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQmRMQ0JqSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhDaUFnSUNBZ0lDQWdYU3dnYUNBOUlIUm9hWE11WDNKbGJtUmxjbVZ5TENCMUlEMGdhQzVoZFhSdlEyeGxZWElzSUdRZ1BTQm9MblJ2Ym1WTllYQndhVzVuT3dvZ0lDQWdJQ0FnSUdndVoyVjBRMnhsWVhKRGIyeHZjaWhTYkNrc0lHZ3VkRzl1WlUxaGNIQnBibWNnUFNCZmJpd2dhQzVoZFhSdlEyeGxZWElnUFNBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlHNWxkeUJvYmloN0NpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDSlFUVkpGVFM1Q1lXTnJaM0p2ZFc1a0lpd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJsa1pUb2dhWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvVjNKcGRHVTZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUZSbGMzUTZJQ0V4Q2lBZ0lDQWdJQ0FnZlNrc0lHMGdQU0J1WlhjZ2MzUW9ibVYzSUhkdUxDQm1LU3dnZUNBOUlDRXhMQ0IySUQwZ1pTNWlZV05yWjNKdmRXNWtPd29nSUNBZ0lDQWdJSFlnUHlCMkxtbHpRMjlzYjNJZ0ppWWdLR1l1WTI5c2IzSXVZMjl3ZVNoMktTd2daUzVpWVdOclozSnZkVzVrSUQwZ2JuVnNiQ3dnZUNBOUlDRXdLU0E2SUNobUxtTnZiRzl5TG1OdmNIa29VbXdwTENCNElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnlBOUlEQTdJR2NnUENBMk95Qm5LeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0NBOUlHY2dKU0F6T3dvZ0lDQWdJQ0FnSUNBZ0lDQndJRDA5SURBZ1B5QW9ZUzUxY0M1elpYUW9NQ3dnYkZ0blhTd2dNQ2tzSUdFdWJHOXZhMEYwS0dOYloxMHNJREFzSURBcEtTQTZJSEFnUFQwZ01TQS9JQ2hoTG5Wd0xuTmxkQ2d3TENBd0xDQnNXMmRkS1N3Z1lTNXNiMjlyUVhRb01Dd2dZMXRuWFN3Z01Da3BJRG9nS0dFdWRYQXVjMlYwS0RBc0lHeGJaMTBzSURBcExDQmhMbXh2YjJ0QmRDZ3dMQ0F3TENCalcyZGRLU2tzSUdOektHa3NJSEFnS2lCV2RDd2daeUErSURJZ1B5QldkQ0E2SURBc0lGWjBMQ0JXZENrc0lHZ3VjMlYwVW1WdVpHVnlWR0Z5WjJWMEtHa3BMQ0I0SUNZbUlHZ3VjbVZ1WkdWeUtHMHNJR0VwTENCb0xuSmxibVJsY2lobExDQmhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYlM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0Nrc0lHMHViV0YwWlhKcFlXd3VaR2x6Y0c5elpTZ3BMQ0JvTG5SdmJtVk5ZWEJ3YVc1bklEMGdaQ3dnYUM1aGRYUnZRMnhsWVhJZ1BTQjFMQ0JsTG1KaFkydG5jbTkxYm1RZ1BTQjJPd29nSUNBZ2ZRb2dJQ0FnWDNObGRFVnVZMjlrYVc1bktHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDl5Wlc1a1pYSmxjaTVqWVhCaFltbHNhWFJwWlhNdWFYTlhaV0pIVERJZ1BUMDlJQ0V3SUNZbUlIUXVabTl5YldGMElEMDlQU0JqZENBbUppQjBMblI1Y0dVZ1BUMDlJSEp1SUNZbUlIUXVaVzVqYjJScGJtY2dQVDA5SUU5cElEOGdaUzUyWVd4MVpTQTlJRWh6VzA1MFhTQTZJR1V1ZG1Gc2RXVWdQU0JJYzF0MExtVnVZMjlrYVc1blhUc0tJQ0FnSUgwS0lDQWdJRjkwWlhoMGRYSmxWRzlEZFdKbFZWWW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVmY21WdVpHVnlaWElzSUdrZ1BTQmxMbTFoY0hCcGJtY2dQVDA5SUVKcElIeDhJR1V1YldGd2NHbHVaeUE5UFQwZ2VtazdDaUFnSUNBZ0lDQWdhU0EvSUhSb2FYTXVYMk4xWW1WdFlYQlRhR0ZrWlhJZ1BUMGdiblZzYkNBbUppQW9kR2hwY3k1ZlkzVmlaVzFoY0ZOb1lXUmxjaUE5SUVac0tDa3BJRG9nZEdocGN5NWZaWEYxYVhKbFkzUlRhR0ZrWlhJZ1BUMGdiblZzYkNBbUppQW9kR2hwY3k1ZlpYRjFhWEpsWTNSVGFHRmtaWElnUFNCRWJDZ3BLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJR2tnUHlCMGFHbHpMbDlqZFdKbGJXRndVMmhoWkdWeUlEb2dkR2hwY3k1ZlpYRjFhWEpsWTNSVGFHRmtaWElzSUc4Z1BTQnVaWGNnYzNRb2FtbGJNRjBzSUhJcExDQmhJRDBnY2k1MWJtbG1iM0p0Y3pzS0lDQWdJQ0FnSUNCaExtVnVkazFoY0M1MllXeDFaU0E5SUdVc0lHa2dmSHdnWVM1MFpYaGxiRk5wZW1VdWRtRnNkV1V1YzJWMEtERWdMeUJsTG1sdFlXZGxMbmRwWkhSb0xDQXhJQzhnWlM1cGJXRm5aUzVvWldsbmFIUXBMQ0IwYUdsekxsOXpaWFJGYm1OdlpHbHVaeWhoTG1sdWNIVjBSVzVqYjJScGJtY3NJR1VwTENCamN5aDBMQ0F3TENBd0xDQXpJQ29nVm5Rc0lESWdLaUJXZENrc0lHNHVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIUXBMQ0J1TG5KbGJtUmxjaWh2TENCSGJ5azdDaUFnSUNCOUNpQWdJQ0JmWVhCd2JIbFFUVkpGVFNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5eVpXNWtaWEpsY2l3Z2JpQTlJSFF1WVhWMGIwTnNaV0Z5T3dvZ0lDQWdJQ0FnSUhRdVlYVjBiME5zWldGeUlEMGdJVEU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Uc2dhU0E4SUc5b095QnBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlFMWhkR2d1YzNGeWRDaHNjMXRwWFNBcUlHeHpXMmxkSUMwZ2JITmJhU0F0SURGZElDb2diSE5iYVNBdElERmRLU3dnYnlBOUlGQnNXeWhwSUMwZ01Ta2dKU0JRYkM1c1pXNW5kR2hkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5aWJIVnlLR1VzSUdrZ0xTQXhMQ0JwTENCeUxDQnZLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEM1aGRYUnZRMnhsWVhJZ1BTQnVPd29nSUNBZ2ZRb2dJQ0FnWDJKc2RYSW9aU3dnZEN3Z2Jpd2dhU3dnY2lrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2RHaHBjeTVmY0dsdVoxQnZibWRTWlc1a1pYSlVZWEpuWlhRN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmYUdGc1prSnNkWElvWlN3Z2J5d2dkQ3dnYml3Z2FTd2dJbXhoZEdsMGRXUnBibUZzSWl3Z2Npa3NJSFJvYVhNdVgyaGhiR1pDYkhWeUtHOHNJR1VzSUc0c0lHNHNJR2tzSUNKc2IyNW5hWFIxWkdsdVlXd2lMQ0J5S1RzS0lDQWdJSDBLSUNBZ0lGOW9ZV3htUW14MWNpaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0IwYUdsekxsOXlaVzVrWlhKbGNpd2dZeUE5SUhSb2FYTXVYMkpzZFhKTllYUmxjbWxoYkRzS0lDQWdJQ0FnSUNCdklDRTlQU0FpYkdGMGFYUjFaR2x1WVd3aUlDWW1JRzhnSVQwOUlDSnNiMjVuYVhSMVpHbHVZV3dpSUNZbUlHTnZibk52YkdVdVpYSnliM0lvSW1Kc2RYSWdaR2x5WldOMGFXOXVJRzExYzNRZ1ltVWdaV2wwYUdWeUlHeGhkR2wwZFdScGJtRnNJRzl5SUd4dmJtZHBkSFZrYVc1aGJDRWlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJRE1zSUhVZ1BTQnVaWGNnYzNRb2FtbGJhVjBzSUdNcExDQmtJRDBnWXk1MWJtbG1iM0p0Y3l3Z1ppQTlJRXhzVzI1ZElDMGdNU3dnYlNBOUlHbHpSbWx1YVhSbEtISXBJRDhnVFdGMGFDNVFTU0F2SUNneUlDb2daaWtnT2lBeUlDb2dUV0YwYUM1UVNTQXZJQ2d5SUNvZ2NHa2dMU0F4S1N3Z2VDQTlJSElnTHlCdExDQjJJRDBnYVhOR2FXNXBkR1VvY2lrZ1B5QXhJQ3NnVFdGMGFDNW1iRzl2Y2lob0lDb2dlQ2tnT2lCd2FUc0tJQ0FnSUNBZ0lDQjJJRDRnY0drZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0dCemFXZHRZVkpoWkdsaGJuTXNJQ1I3Y24wc0lHbHpJSFJ2YnlCc1lYSm5aU0JoYm1RZ2QybHNiQ0JqYkdsd0xDQmhjeUJwZENCeVpYRjFaWE4wWldRZ0pIdDJmU0J6WVcxd2JHVnpJSGRvWlc0Z2RHaGxJRzFoZUdsdGRXMGdhWE1nYzJWMElIUnZJQ1I3Y0dsOVlDazdDaUFnSUNBZ0lDQWdiR1YwSUdjZ1BTQmJYU3dnY0NBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQkJJRDBnTURzZ1FTQThJSEJwT3lBckswRXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUQ0E5SUVFZ0x5QjRMQ0JKSUQwZ1RXRjBhQzVsZUhBb0xVd2dLaUJNSUM4Z01pazdDaUFnSUNBZ0lDQWdJQ0FnSUdjdWNIVnphQ2hKS1N3Z1FTQTlQU0F3SUQ4Z2NDQXJQU0JKSURvZ1FTQThJSFlnSmlZZ0tIQWdLejBnTWlBcUlFa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUVnUFNBd095QkJJRHdnWnk1c1pXNW5kR2c3SUVFckt5bG5XMEZkSUQwZ1oxdEJYU0F2SUhBN0NpQWdJQ0FnSUNBZ1pDNWxiblpOWVhBdWRtRnNkV1VnUFNCbExuUmxlSFIxY21Vc0lHUXVjMkZ0Y0d4bGN5NTJZV3gxWlNBOUlIWXNJR1F1ZDJWcFoyaDBjeTUyWVd4MVpTQTlJR2NzSUdRdWJHRjBhWFIxWkdsdVlXd3VkbUZzZFdVZ1BTQnZJRDA5UFNBaWJHRjBhWFIxWkdsdVlXd2lMQ0JoSUNZbUlDaGtMbkJ2YkdWQmVHbHpMblpoYkhWbElEMGdZU2tzSUdRdVpGUm9aWFJoTG5aaGJIVmxJRDBnYlN3Z1pDNXRhWEJKYm5RdWRtRnNkV1VnUFNCTmJpQXRJRzQ3Q2lBZ0lDQWdJQ0FnYkdWMElGOGdQU0JNYkZ0cFhTd2dlU0E5SURNZ0tpQk5ZWFJvTG0xaGVDZ3dMQ0JXZENBdElESWdLaUJmS1N3Z1lpQTlJQ2hwSUQwOVBTQXdJRDhnTUNBNklESWdLaUJXZENrZ0t5QXlJQ29nWHlBcUlDaHBJRDRnVFc0Z0xTQkZhU0EvSUdrZ0xTQk5iaUFySUVWcElEb2dNQ2s3Q2lBZ0lDQWdJQ0FnWTNNb2RDd2dlU3dnWWl3Z015QXFJRjhzSURJZ0tpQmZLU3dnYkM1elpYUlNaVzVrWlhKVVlYSm5aWFFvZENrc0lHd3VjbVZ1WkdWeUtIVXNJRWR2S1RzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z1dtMG9LU0I3Q2lBZ0lDQnNaWFFnY3lBOUlGdGRMQ0JsSUQwZ1cxMHNJSFFnUFNCYlhTd2diaUE5SUUxdU93b2dJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Ec2dhU0E4SUc5b095QnBLeXNwZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnVFdGMGFDNXdiM2NvTWl3Z2JpazdDaUFnSUNBZ0lDQWdaUzV3ZFhOb0tISXBPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdNU0F2SUhJN0NpQWdJQ0FnSUNBZ2FTQStJRTF1SUMwZ1JXa2dQeUJ2SUQwZ2MyaGJhU0F0SUUxdUlDc2dSV2tnTFNBeFhTQTZJR2tnUFQwZ01DQW1KaUFvYnlBOUlEQXBMQ0IwTG5CMWMyZ29ieWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0F4SUM4Z0tISWdMU0F4S1N3Z2JDQTlJQzFoSUM4Z01pd2dZeUE5SURFZ0t5QmhJQzhnTWl3Z2FDQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnYkN3S0lDQWdJQ0FnSUNBZ0lDQWdZeXdLSUNBZ0lDQWdJQ0FnSUNBZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnWXl3S0lDQWdJQ0FnSUNBZ0lDQWdZeXdLSUNBZ0lDQWdJQ0FnSUNBZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnYkN3S0lDQWdJQ0FnSUNBZ0lDQWdZeXdLSUNBZ0lDQWdJQ0FnSUNBZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnYkN3S0lDQWdJQ0FnSUNBZ0lDQWdZd29nSUNBZ0lDQWdJRjBzSUhVZ1BTQTJMQ0JrSUQwZ05pd2daaUE5SURNc0lHMGdQU0F5TENCNElEMGdNU3dnZGlBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1ppQXFJR1FnS2lCMUtTd2daeUE5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvYlNBcUlHUWdLaUIxS1N3Z2NDQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29lQ0FxSUdRZ0tpQjFLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGtnUFNBd095QjVJRHdnZFRzZ2VTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0lnUFNCNUlDVWdNeUFxSURJZ0x5QXpJQzBnTVN3Z1FTQTlJSGtnUGlBeUlEOGdNQ0E2SUMweExDQk1JRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpQXJJRElnTHlBekxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlJQ3NnTWlBdklETXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkJJQ3NnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlJQ3NnTWlBdklETXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkJJQ3NnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FTQXJJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhZdWMyVjBLRXdzSUdZZ0tpQmtJQ29nZVNrc0lHY3VjMlYwS0dnc0lHMGdLaUJrSUNvZ2VTazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkpJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVDaUFnSUNBZ0lDQWdJQ0FnSUYwN0NpQWdJQ0FnSUNBZ0lDQWdJSEF1YzJWMEtFa3NJSGdnS2lCa0lDb2dlU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmZJRDBnYm1WM0lGOWxPd29nSUNBZ0lDQWdJRjh1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCVlpTaDJMQ0JtS1Nrc0lGOHVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCVlpTaG5MQ0J0S1Nrc0lGOHVjMlYwUVhSMGNtbGlkWFJsS0NKbVlXTmxTVzVrWlhnaUxDQnVaWGNnVldVb2NDd2dlQ2twTENCekxuQjFjMmdvWHlrc0lHNGdQaUJGYVNBbUppQnVMUzA3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUY5c2IyUlFiR0Z1WlhNNklITXNDaUFnSUNBZ0lDQWdYM05wZW1WTWIyUnpPaUJsTEFvZ0lDQWdJQ0FnSUY5emFXZHRZWE02SUhRS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z1NXd29jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQnVaWGNnUVhRb015QXFJRlowTENBeklDb2dWblFzSUhNcE93b2dJQ0FnY21WMGRYSnVJR1V1ZEdWNGRIVnlaUzV0WVhCd2FXNW5JRDBnVUhJc0lHVXVkR1Y0ZEhWeVpTNXVZVzFsSUQwZ0lsQk5Va1ZOTG1OMVltVlZkaUlzSUdVdWMyTnBjM052Y2xSbGMzUWdQU0FoTUN3Z1pUc0tmUXBtZFc1amRHbHZiaUJqY3loekxDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnpMblpwWlhkd2IzSjBMbk5sZENobExDQjBMQ0J1TENCcEtTd2djeTV6WTJsemMyOXlMbk5sZENobExDQjBMQ0J1TENCcEtUc0tmUXBtZFc1amRHbHZiaUFrYlNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvY3lrc0lIUWdQU0J1WlhjZ1RTZ3dMQ0F4TENBd0tUc0tJQ0FnSUhKbGRIVnliaUJ1WlhjZ1Iya29ld29nSUNBZ0lDQWdJRzVoYldVNklDSlRjR2hsY21sallXeEhZWFZ6YzJsaGJrSnNkWElpTEFvZ0lDQWdJQ0FnSUdSbFptbHVaWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdiam9nY3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1MlRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCellXMXdiR1Z6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCM1pXbG5hSFJ6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nWlFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCc1lYUnBkSFZrYVc1aGJEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklDRXhDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR1JVYUdWMFlUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdiV2x3U1c1ME9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQndiMnhsUVhocGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklIUUtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJtWVNncExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCZ0Nnb0pDUWx3Y21WamFYTnBiMjRnYldWa2FYVnRjQ0JtYkc5aGREc0tDUWtKY0hKbFkybHphVzl1SUcxbFpHbDFiWEFnYVc1ME93b0tDUWtKZG1GeWVXbHVaeUIyWldNeklIWlBkWFJ3ZFhSRWFYSmxZM1JwYjI0N0Nnb0pDUWwxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JsYm5aTllYQTdDZ2tKQ1hWdWFXWnZjbTBnYVc1MElITmhiWEJzWlhNN0Nna0pDWFZ1YVdadmNtMGdabXh2WVhRZ2QyVnBaMmgwYzFzZ2JpQmRPd29KQ1FsMWJtbG1iM0p0SUdKdmIyd2diR0YwYVhSMVpHbHVZV3c3Q2drSkNYVnVhV1p2Y20wZ1pteHZZWFFnWkZSb1pYUmhPd29KQ1FsMWJtbG1iM0p0SUdac2IyRjBJRzFwY0VsdWREc0tDUWtKZFc1cFptOXliU0IyWldNeklIQnZiR1ZCZUdsek93b0tDUWtKSkh0d1lTZ3BmUW9LQ1FrSkkyUmxabWx1WlNCRlRsWk5RVkJmVkZsUVJWOURWVUpGWDFWV0Nna0pDU05wYm1Oc2RXUmxJRHhqZFdKbFgzVjJYM0psWm14bFkzUnBiMjVmWm5KaFoyMWxiblErQ2dvSkNRbDJaV016SUdkbGRGTmhiWEJzWlNnZ1pteHZZWFFnZEdobGRHRXNJSFpsWXpNZ1lYaHBjeUFwSUhzS0Nna0pDUWxtYkc5aGRDQmpiM05VYUdWMFlTQTlJR052Y3lnZ2RHaGxkR0VnS1RzS0NRa0pDUzh2SUZKdlpISnBaM1ZsY3ljZ1lYaHBjeTFoYm1kc1pTQnliM1JoZEdsdmJnb0pDUWtKZG1Wak15QnpZVzF3YkdWRWFYSmxZM1JwYjI0Z1BTQjJUM1YwY0hWMFJHbHlaV04wYVc5dUlDb2dZMjl6VkdobGRHRUtDUWtKQ1FrcklHTnliM056S0NCaGVHbHpMQ0IyVDNWMGNIVjBSR2x5WldOMGFXOXVJQ2tnS2lCemFXNG9JSFJvWlhSaElDa0tDUWtKQ1FrcklHRjRhWE1nS2lCa2IzUW9JR0Y0YVhNc0lIWlBkWFJ3ZFhSRWFYSmxZM1JwYjI0Z0tTQXFJQ2dnTVM0d0lDMGdZMjl6VkdobGRHRWdLVHNLQ2drSkNRbHlaWFIxY200Z1ltbHNhVzVsWVhKRGRXSmxWVllvSUdWdWRrMWhjQ3dnYzJGdGNHeGxSR2x5WldOMGFXOXVMQ0J0YVhCSmJuUWdLVHNLQ2drSkNYMEtDZ2tKQ1hadmFXUWdiV0ZwYmlncElIc0tDZ2tKQ1FsMlpXTXpJR0Y0YVhNZ1BTQnNZWFJwZEhWa2FXNWhiQ0EvSUhCdmJHVkJlR2x6SURvZ1kzSnZjM01vSUhCdmJHVkJlR2x6TENCMlQzVjBjSFYwUkdseVpXTjBhVzl1SUNrN0Nnb0pDUWtKYVdZZ0tDQmhiR3dvSUdWeGRXRnNLQ0JoZUdsekxDQjJaV016S0NBd0xqQWdLU0FwSUNrZ0tTQjdDZ29KQ1FrSkNXRjRhWE1nUFNCMlpXTXpLQ0IyVDNWMGNIVjBSR2x5WldOMGFXOXVMbm9zSURBdU1Dd2dMU0IyVDNWMGNIVjBSR2x5WldOMGFXOXVMbmdnS1RzS0Nna0pDUWw5Q2dvSkNRa0pZWGhwY3lBOUlHNXZjbTFoYkdsNlpTZ2dZWGhwY3lBcE93b0tDUWtKQ1dkc1gwWnlZV2REYjJ4dmNpQTlJSFpsWXpRb0lEQXVNQ3dnTUM0d0xDQXdMakFzSURFdU1DQXBPd29KQ1FrSloyeGZSbkpoWjBOdmJHOXlMbkpuWWlBclBTQjNaV2xuYUhSeld5QXdJRjBnS2lCblpYUlRZVzF3YkdVb0lEQXVNQ3dnWVhocGN5QXBPd29LQ1FrSkNXWnZjaUFvSUdsdWRDQnBJRDBnTVRzZ2FTQThJRzQ3SUdrckt5QXBJSHNLQ2drSkNRa0phV1lnS0NCcElENDlJSE5oYlhCc1pYTWdLU0I3Q2dvSkNRa0pDUWxpY21WaGF6c0tDZ2tKQ1FrSmZRb0tDUWtKQ1FsbWJHOWhkQ0IwYUdWMFlTQTlJR1JVYUdWMFlTQXFJR1pzYjJGMEtDQnBJQ2s3Q2drSkNRa0paMnhmUm5KaFowTnZiRzl5TG5KbllpQXJQU0IzWldsbmFIUnpXeUJwSUYwZ0tpQm5aWFJUWVcxd2JHVW9JQzB4TGpBZ0tpQjBhR1YwWVN3Z1lYaHBjeUFwT3dvSkNRa0pDV2RzWDBaeVlXZERiMnh2Y2k1eVoySWdLejBnZDJWcFoyaDBjMXNnYVNCZElDb2daMlYwVTJGdGNHeGxLQ0IwYUdWMFlTd2dZWGhwY3lBcE93b0tDUWtKQ1gwS0Nna0pDWDBLQ1FsZ0xBb2dJQ0FnSUNBZ0lHSnNaVzVrYVc1bk9pQjJiaXdLSUNBZ0lDQWdJQ0JrWlhCMGFGUmxjM1E2SUNFeExBb2dJQ0FnSUNBZ0lHUmxjSFJvVjNKcGRHVTZJQ0V4Q2lBZ0lDQjlLVHNLZlFwbWRXNWpkR2x2YmlCRWJDZ3BJSHNLSUNBZ0lHeGxkQ0J6SUQwZ2JtVjNJRmdvTVN3Z01TazdDaUFnSUNCeVpYUjFjbTRnYm1WM0lFZHBLSHNLSUNBZ0lDQWdJQ0J1WVcxbE9pQWlSWEYxYVhKbFkzUmhibWQxYkdGeVZHOURkV0psVlZZaUxBb2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWdWRrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHVjRaV3hUYVhwbE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2N3b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibkIxZEVWdVkyOWthVzVuT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nU0hOYlRuUmRDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nWm1Fb0tTd0tJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1lBb0tDUWtKY0hKbFkybHphVzl1SUcxbFpHbDFiWEFnWm14dllYUTdDZ2tKQ1hCeVpXTnBjMmx2YmlCdFpXUnBkVzF3SUdsdWREc0tDZ2tKQ1haaGNubHBibWNnZG1Wak15QjJUM1YwY0hWMFJHbHlaV04wYVc5dU93b0tDUWtKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWlc1MlRXRndPd29KQ1FsMWJtbG1iM0p0SUhabFl6SWdkR1Y0Wld4VGFYcGxPd29LQ1FrSkpIdHdZU2dwZlFvS0NRa0pJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtDZ2tKQ1hadmFXUWdiV0ZwYmlncElIc0tDZ2tKQ1FsbmJGOUdjbUZuUTI5c2IzSWdQU0IyWldNMEtDQXdMakFzSURBdU1Dd2dNQzR3TENBeExqQWdLVHNLQ2drSkNRbDJaV016SUc5MWRIQjFkRVJwY21WamRHbHZiaUE5SUc1dmNtMWhiR2w2WlNnZ2RrOTFkSEIxZEVScGNtVmpkR2x2YmlBcE93b0pDUWtKZG1Wak1pQjFkaUE5SUdWeGRXbHlaV04wVlhZb0lHOTFkSEIxZEVScGNtVmpkR2x2YmlBcE93b0tDUWtKQ1habFl6SWdaaUE5SUdaeVlXTjBLQ0IxZGlBdklIUmxlR1ZzVTJsNlpTQXRJREF1TlNBcE93b0pDUWtKZFhZZ0xUMGdaaUFxSUhSbGVHVnNVMmw2WlRzS0NRa0pDWFpsWXpNZ2RHd2dQU0JsYm5aTllYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCMFpYaDBkWEpsTWtRZ0tDQmxiblpOWVhBc0lIVjJJQ2tnS1M1eVoySTdDZ2tKQ1FsMWRpNTRJQ3M5SUhSbGVHVnNVMmw2WlM1NE93b0pDUWtKZG1Wak15QjBjaUE5SUdWdWRrMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lIUmxlSFIxY21VeVJDQW9JR1Z1ZGsxaGNDd2dkWFlnS1NBcExuSm5ZanNLQ1FrSkNYVjJMbmtnS3owZ2RHVjRaV3hUYVhwbExuazdDZ2tKQ1FsMlpXTXpJR0p5SUQwZ1pXNTJUV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2dkR1Y0ZEhWeVpUSkVJQ2dnWlc1MlRXRndMQ0IxZGlBcElDa3VjbWRpT3dvSkNRa0pkWFl1ZUNBdFBTQjBaWGhsYkZOcGVtVXVlRHNLQ1FrSkNYWmxZek1nWW13Z1BTQmxiblpOWVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0IwWlhoMGRYSmxNa1FnS0NCbGJuWk5ZWEFzSUhWMklDa2dLUzV5WjJJN0Nnb0pDUWtKZG1Wak15QjBiU0E5SUcxcGVDZ2dkR3dzSUhSeUxDQm1MbmdnS1RzS0NRa0pDWFpsWXpNZ1ltMGdQU0J0YVhnb0lHSnNMQ0JpY2l3Z1ppNTRJQ2s3Q2drSkNRbG5iRjlHY21GblEyOXNiM0l1Y21kaUlEMGdiV2w0S0NCMGJTd2dZbTBzSUdZdWVTQXBPd29LQ1FrSmZRb0pDV0FzQ2lBZ0lDQWdJQ0FnWW14bGJtUnBibWM2SUhadUxBb2dJQ0FnSUNBZ0lHUmxjSFJvVkdWemREb2dJVEVzQ2lBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lURUtJQ0FnSUgwcE93cDlDbVoxYm1OMGFXOXVJRVpzS0NrZ2V3b2dJQ0FnY21WMGRYSnVJRzVsZHlCSGFTaDdDaUFnSUNBZ0lDQWdibUZ0WlRvZ0lrTjFZbVZ0WVhCVWIwTjFZbVZWVmlJc0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1MlRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCcGJuQjFkRVZ1WTI5a2FXNW5PaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dTSE5iVG5SZENpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dabUVvS1N3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nWUFvS0NRa0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdabXh2WVhRN0Nna0pDWEJ5WldOcGMybHZiaUJ0WldScGRXMXdJR2x1ZERzS0Nna0pDWFpoY25scGJtY2dkbVZqTXlCMlQzVjBjSFYwUkdseVpXTjBhVzl1T3dvS0NRa0pkVzVwWm05eWJTQnpZVzF3YkdWeVEzVmlaU0JsYm5aTllYQTdDZ29KQ1Fra2UzQmhLQ2w5Q2dvSkNRbDJiMmxrSUcxaGFXNG9LU0I3Q2dvSkNRa0paMnhmUm5KaFowTnZiRzl5SUQwZ1pXNTJUV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2dkR1Y0ZEhWeVpVTjFZbVVvSUdWdWRrMWhjQ3dnZG1Wak15Z2dMU0IyVDNWMGNIVjBSR2x5WldOMGFXOXVMbmdzSUhaUGRYUndkWFJFYVhKbFkzUnBiMjR1ZVhvZ0tTQXBJQ2s3Q2dvSkNRbDlDZ2tKWUN3S0lDQWdJQ0FnSUNCaWJHVnVaR2x1WnpvZ2RtNHNDaUFnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoTVN3S0lDQWdJQ0FnSUNCa1pYQjBhRmR5YVhSbE9pQWhNUW9nSUNBZ2ZTazdDbjBLWm5WdVkzUnBiMjRnWm1Fb0tTQjdDaUFnSUNCeVpYUjFjbTRnWUFvS0NRbHdjbVZqYVhOcGIyNGdiV1ZrYVhWdGNDQm1iRzloZERzS0NRbHdjbVZqYVhOcGIyNGdiV1ZrYVhWdGNDQnBiblE3Q2dvSkNXRjBkSEpwWW5WMFpTQjJaV016SUhCdmMybDBhVzl1T3dvSkNXRjBkSEpwWW5WMFpTQjJaV015SUhWMk93b0pDV0YwZEhKcFluVjBaU0JtYkc5aGRDQm1ZV05sU1c1a1pYZzdDZ29KQ1haaGNubHBibWNnZG1Wak15QjJUM1YwY0hWMFJHbHlaV04wYVc5dU93b0tDUWt2THlCU1NDQmpiMjl5WkdsdVlYUmxJSE41YzNSbGJUc2dVRTFTUlUwZ1ptRmpaUzFwYm1SbGVHbHVaeUJqYjI1MlpXNTBhVzl1Q2drSmRtVmpNeUJuWlhSRWFYSmxZM1JwYjI0b0lIWmxZeklnZFhZc0lHWnNiMkYwSUdaaFkyVWdLU0I3Q2dvSkNRbDFkaUE5SURJdU1DQXFJSFYySUMwZ01TNHdPd29LQ1FrSmRtVmpNeUJrYVhKbFkzUnBiMjRnUFNCMlpXTXpLQ0IxZGl3Z01TNHdJQ2s3Q2dvSkNRbHBaaUFvSUdaaFkyVWdQVDBnTUM0d0lDa2dld29LQ1FrSkNXUnBjbVZqZEdsdmJpQTlJR1JwY21WamRHbHZiaTU2ZVhnN0lDOHZJQ2dnTVN3Z2Rpd2dkU0FwSUhCdmN5QjRDZ29KQ1FsOUlHVnNjMlVnYVdZZ0tDQm1ZV05sSUQwOUlERXVNQ0FwSUhzS0Nna0pDUWxrYVhKbFkzUnBiMjRnUFNCa2FYSmxZM1JwYjI0dWVIcDVPd29KQ1FrSlpHbHlaV04wYVc5dUxuaDZJQ285SUMweExqQTdJQzh2SUNnZ0xYVXNJREVzSUMxMklDa2djRzl6SUhrS0Nna0pDWDBnWld4elpTQnBaaUFvSUdaaFkyVWdQVDBnTWk0d0lDa2dld29LQ1FrSkNXUnBjbVZqZEdsdmJpNTRJQ285SUMweExqQTdJQzh2SUNnZ0xYVXNJSFlzSURFZ0tTQndiM01nZWdvS0NRa0pmU0JsYkhObElHbG1JQ2dnWm1GalpTQTlQU0F6TGpBZ0tTQjdDZ29KQ1FrSlpHbHlaV04wYVc5dUlEMGdaR2x5WldOMGFXOXVMbnA1ZURzS0NRa0pDV1JwY21WamRHbHZiaTU0ZWlBcVBTQXRNUzR3T3lBdkx5QW9JQzB4TENCMkxDQXRkU0FwSUc1bFp5QjRDZ29KQ1FsOUlHVnNjMlVnYVdZZ0tDQm1ZV05sSUQwOUlEUXVNQ0FwSUhzS0Nna0pDUWxrYVhKbFkzUnBiMjRnUFNCa2FYSmxZM1JwYjI0dWVIcDVPd29KQ1FrSlpHbHlaV04wYVc5dUxuaDVJQ285SUMweExqQTdJQzh2SUNnZ0xYVXNJQzB4TENCMklDa2dibVZuSUhrS0Nna0pDWDBnWld4elpTQnBaaUFvSUdaaFkyVWdQVDBnTlM0d0lDa2dld29LQ1FrSkNXUnBjbVZqZEdsdmJpNTZJQ285SUMweExqQTdJQzh2SUNnZ2RTd2dkaXdnTFRFZ0tTQnVaV2NnZWdvS0NRa0pmUW9LQ1FrSmNtVjBkWEp1SUdScGNtVmpkR2x2YmpzS0Nna0pmUW9LQ1FsMmIybGtJRzFoYVc0b0tTQjdDZ29KQ1FsMlQzVjBjSFYwUkdseVpXTjBhVzl1SUQwZ1oyVjBSR2x5WldOMGFXOXVLQ0IxZGl3Z1ptRmpaVWx1WkdWNElDazdDZ2tKQ1dkc1gxQnZjMmwwYVc5dUlEMGdkbVZqTkNnZ2NHOXphWFJwYjI0c0lERXVNQ0FwT3dvS0NRbDlDZ2xnT3dwOUNtWjFibU4wYVc5dUlIQmhLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHQUtDZ2tKZFc1cFptOXliU0JwYm5RZ2FXNXdkWFJGYm1OdlpHbHVaenNLQ2drSkkybHVZMngxWkdVZ1BHVnVZMjlrYVc1bmMxOXdZWEp6WDJaeVlXZHRaVzUwUGdvS0NRbDJaV00wSUdsdWNIVjBWR1Y0Wld4VWIweHBibVZoY2lnZ2RtVmpOQ0IyWVd4MVpTQXBJSHNLQ2drSkNXbG1JQ2dnYVc1d2RYUkZibU52WkdsdVp5QTlQU0F3SUNrZ2V3b0tDUWtKQ1hKbGRIVnliaUIyWVd4MVpUc0tDZ2tKQ1gwZ1pXeHpaU0I3Q2dvSkNRa0pjbVYwZFhKdUlITlNSMEpVYjB4cGJtVmhjaWdnZG1Gc2RXVWdLVHNLQ2drSkNYMEtDZ2tKZlFvS0NRbDJaV00wSUdWdWRrMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lIWmxZelFnWTI5c2IzSWdLU0I3Q2dvSkNRbHlaWFIxY200Z2FXNXdkWFJVWlhobGJGUnZUR2x1WldGeUtDQmpiMnh2Y2lBcE93b0tDUWw5Q2dsZ093cDlDbVoxYm1OMGFXOXVJR3B0S0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnYm1WM0lGZGxZV3ROWVhBc0lIUWdQU0J1ZFd4c093b2dJQ0FnWm5WdVkzUnBiMjRnYmloaEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0dFZ0ppWWdZUzVwYzFSbGVIUjFjbVVnSmlZZ1lTNXBjMUpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVVnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1lTNXRZWEJ3YVc1bkxDQmpJRDBnYkNBOVBUMGdSSE1nZkh3Z2JDQTlQVDBnUm5Nc0lHZ2dQU0JzSUQwOVBTQkNhU0I4ZkNCc0lEMDlQU0I2YVRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dNZ2ZId2dhQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHVXVhR0Z6S0dFcEtTQnlaWFIxY200Z1pTNW5aWFFvWVNrdWRHVjRkSFZ5WlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHRXVhVzFoWjJVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dNZ0ppWWdkU0FtSmlCMUxtaGxhV2RvZENBK0lEQWdmSHdnYUNBbUppQjFJQ1ltSUdrb2RTa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQnpMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBJRDA5UFNCdWRXeHNJQ1ltSUNoMElEMGdibVYzSUdGb0tITXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQmpJRDhnZEM1bWNtOXRSWEYxYVhKbFkzUmhibWQxYkdGeUtHRXBJRG9nZEM1bWNtOXRRM1ZpWlcxaGNDaGhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVXVjMlYwS0dFc0lHWXBMQ0J6TG5ObGRGSmxibVJsY2xSaGNtZGxkQ2hrS1N3Z1lTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2djaWtzSUdZdWRHVjRkSFZ5WlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnBLR0VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SURBc0lHTWdQU0EyT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYUNBOUlEQTdJR2dnUENCak95Qm9LeXNwWVZ0b1hTQWhQVDBnZG05cFpDQXdJQ1ltSUd3ckt6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JDQTlQVDBnWXpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlISW9ZU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVM1MFlYSm5aWFE3Q2lBZ0lDQWdJQ0FnYkM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2djaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0JsTG1kbGRDaHNLVHNLSUNBZ0lDQWdJQ0JqSUNFOVBTQjJiMmxrSURBZ0ppWWdLR1V1WkdWc1pYUmxLR3dwTENCakxtUnBjM0J2YzJVb0tTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ2S0NrZ2V3b2dJQ0FnSUNBZ0lHVWdQU0J1WlhjZ1YyVmhhMDFoY0N3Z2RDQWhQVDBnYm5Wc2JDQW1KaUFvZEM1a2FYTndiM05sS0Nrc0lIUWdQU0J1ZFd4c0tUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwT2lCdUxBb2dJQ0FnSUNBZ0lHUnBjM0J2YzJVNklHOEtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdVVzBvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0I3ZlRzS0lDQWdJR1oxYm1OMGFXOXVJSFFvYmlrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hsVzI1ZElDRTlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQmxXMjVkT3dvZ0lDQWdJQ0FnSUd4bGRDQnBPd29nSUNBZ0lDQWdJSE4zYVhSamFDaHVLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVjBWQ1IweGZaR1Z3ZEdoZmRHVjRkSFZ5WlNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcElEMGdjeTVuWlhSRmVIUmxibk5wYjI0b0lsZEZRa2RNWDJSbGNIUm9YM1JsZUhSMWNtVWlLU0I4ZkNCekxtZGxkRVY0ZEdWdWMybHZiaWdpVFU5YVgxZEZRa2RNWDJSbGNIUm9YM1JsZUhSMWNtVWlLU0I4ZkNCekxtZGxkRVY0ZEdWdWMybHZiaWdpVjBWQ1MwbFVYMWRGUWtkTVgyUmxjSFJvWDNSbGVIUjFjbVVpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pGV0ZSZmRHVjRkSFZ5WlY5bWFXeDBaWEpmWVc1cGMyOTBjbTl3YVdNaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQTlJSE11WjJWMFJYaDBaVzV6YVc5dUtDSkZXRlJmZEdWNGRIVnlaVjltYVd4MFpYSmZZVzVwYzI5MGNtOXdhV01pS1NCOGZDQnpMbWRsZEVWNGRHVnVjMmx2YmlnaVRVOWFYMFZZVkY5MFpYaDBkWEpsWDJacGJIUmxjbDloYm1semIzUnliM0JwWXlJcElIeDhJSE11WjJWMFJYaDBaVzV6YVc5dUtDSlhSVUpMU1ZSZlJWaFVYM1JsZUhSMWNtVmZabWxzZEdWeVgyRnVhWE52ZEhKdmNHbGpJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzTXpkR01pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBOUlITXVaMlYwUlhoMFpXNXphVzl1S0NKWFJVSkhURjlqYjIxd2NtVnpjMlZrWDNSbGVIUjFjbVZmY3pOMFl5SXBJSHg4SUhNdVoyVjBSWGgwWlc1emFXOXVLQ0pOVDFwZlYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNNemRHTWlLU0I4ZkNCekxtZGxkRVY0ZEdWdWMybHZiaWdpVjBWQ1MwbFVYMWRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOXpNM1JqSWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYM0IyY25Saklqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dQU0J6TG1kbGRFVjRkR1Z1YzJsdmJpZ2lWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzQjJjblJqSWlrZ2ZId2djeTVuWlhSRmVIUmxibk5wYjI0b0lsZEZRa3RKVkY5WFJVSkhURjlqYjIxd2NtVnpjMlZrWDNSbGVIUjFjbVZmY0haeWRHTWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0E5SUhNdVoyVjBSWGgwWlc1emFXOXVLRzRwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlZ0dVhTQTlJR2tzSUdrN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHaGhjem9nWm5WdVkzUnBiMjRvYmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ2h1S1NBaFBUMGdiblZzYkRzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHbHVhWFE2SUdaMWJtTjBhVzl1S0c0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYmk1cGMxZGxZa2RNTWlBL0lIUW9Ja1ZZVkY5amIyeHZjbDlpZFdabVpYSmZabXh2WVhRaUtTQTZJQ2gwS0NKWFJVSkhURjlrWlhCMGFGOTBaWGgwZFhKbElpa3NJSFFvSWs5RlUxOTBaWGgwZFhKbFgyWnNiMkYwSWlrc0lIUW9JazlGVTE5MFpYaDBkWEpsWDJoaGJHWmZabXh2WVhRaUtTd2dkQ2dpVDBWVFgzUmxlSFIxY21WZmFHRnNabDltYkc5aGRGOXNhVzVsWVhJaUtTd2dkQ2dpVDBWVFgzTjBZVzVrWVhKa1gyUmxjbWwyWVhScGRtVnpJaWtzSUhRb0lrOUZVMTlsYkdWdFpXNTBYMmx1WkdWNFgzVnBiblFpS1N3Z2RDZ2lUMFZUWDNabGNuUmxlRjloY25KaGVWOXZZbXBsWTNRaUtTd2dkQ2dpUVU1SFRFVmZhVzV6ZEdGdVkyVmtYMkZ5Y21GNWN5SXBLU3dnZENnaVQwVlRYM1JsZUhSMWNtVmZabXh2WVhSZmJHbHVaV0Z5SWlrc0lIUW9Ja1ZZVkY5amIyeHZjbDlpZFdabVpYSmZhR0ZzWmw5bWJHOWhkQ0lwTENCMEtDSlhSVUpIVEY5dGRXeDBhWE5oYlhCc1pXUmZjbVZ1WkdWeVgzUnZYM1JsZUhSMWNtVWlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9iaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUW9iaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcElEMDlQU0J1ZFd4c0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dJaUFySUc0Z0t5QWlJR1Y0ZEdWdWMybHZiaUJ1YjNRZ2MzVndjRzl5ZEdWa0xpSXBMQ0JwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z1MyMG9jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdiR1YwSUdrZ1BTQjdmU3dnY2lBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ1puVnVZM1JwYjI0Z2J5aDFLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0IxTG5SaGNtZGxkRHNLSUNBZ0lDQWdJQ0JrTG1sdVpHVjRJQ0U5UFNCdWRXeHNJQ1ltSUdVdWNtVnRiM1psS0dRdWFXNWtaWGdwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNCcGJpQmtMbUYwZEhKcFluVjBaWE1wWlM1eVpXMXZkbVVvWkM1aGRIUnlhV0oxZEdWelcyMWRLVHNLSUNBZ0lDQWdJQ0JrTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQnZLU3dnWkdWc1pYUmxJR2xiWkM1cFpGMDdDaUFnSUNBZ0lDQWdiR1YwSUdZZ1BTQnlMbWRsZENoa0tUc0tJQ0FnSUNBZ0lDQm1JQ1ltSUNobExuSmxiVzkyWlNobUtTd2djaTVrWld4bGRHVW9aQ2twTENCdUxuSmxiR1ZoYzJWVGRHRjBaWE5QWmtkbGIyMWxkSEo1S0dRcExDQmtMbWx6U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua2dQVDA5SUNFd0lDWW1JR1JsYkdWMFpTQmtMbDl0WVhoSmJuTjBZVzVqWlVOdmRXNTBMQ0IwTG0xbGJXOXllUzVuWlc5dFpYUnlhV1Z6TFMwN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmhLSFVzSUdRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2FWdGtMbWxrWFNBOVBUMGdJVEFnZkh3Z0tHUXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJRzhwTENCcFcyUXVhV1JkSUQwZ0lUQXNJSFF1YldWdGIzSjVMbWRsYjIxbGRISnBaWE1yS3lrc0lHUTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJzS0hVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlIVXVZWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzBnYVc0Z1pDbGxMblZ3WkdGMFpTaGtXMjFkTENBek5EazJNaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHWWdQU0IxTG0xdmNuQm9RWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzBnYVc0Z1ppbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnWmx0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IySUQwZ01Dd2daeUE5SUhndWJHVnVaM1JvT3lCMklEd2daenNnZGlzcktXVXVkWEJrWVhSbEtIaGJkbDBzSURNME9UWXlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaktIVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJRnRkTENCbUlEMGdkUzVwYm1SbGVDd2diU0E5SUhVdVlYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpd2dlQ0E5SURBN0NpQWdJQ0FnSUNBZ2FXWWdLR1lnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQm1MbUZ5Y21GNU93b2dJQ0FnSUNBZ0lDQWdJQ0I0SUQwZ1ppNTJaWEp6YVc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjhnUFNBd0xDQjVJRDBnY0M1c1pXNW5kR2c3SUY4Z1BDQjVPeUJmSUNzOUlETXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQndXMThnS3lBd1hTd2dRU0E5SUhCYlh5QXJJREZkTENCTUlEMGdjRnRmSUNzZ01sMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtMbkIxYzJnb1lpd2dRU3dnUVN3Z1RDd2dUQ3dnWWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUcwdVlYSnlZWGs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZ2dQU0J0TG5abGNuTnBiMjQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1h5QTlJREFzSUhrZ1BTQndMbXhsYm1kMGFDQXZJRE1nTFNBeE95QmZJRHdnZVRzZ1h5QXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnWHlBcklEQXNJRUVnUFNCZklDc2dNU3dnVENBOUlGOGdLeUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkM1d2RYTm9LR0lzSUVFc0lFRXNJRXdzSUV3c0lHSXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0IySUQwZ2JtVjNJQ2haWXloa0tTQStJRFkxTlRNMUlEOGdXbk1nT2lCWmN5a29aQ3dnTVNrN0NpQWdJQ0FnSUNBZ2RpNTJaWEp6YVc5dUlEMGdlRHNLSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJSEl1WjJWMEtIVXBPd29nSUNBZ0lDQWdJR2NnSmlZZ1pTNXlaVzF2ZG1Vb1p5a3NJSEl1YzJWMEtIVXNJSFlwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FDaDFLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0J5TG1kbGRDaDFLVHNLSUNBZ0lDQWdJQ0JwWmlBb1pDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUhVdWFXNWtaWGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWWdJVDA5SUc1MWJHd2dKaVlnWkM1MlpYSnphVzl1SUR3Z1ppNTJaWEp6YVc5dUlDWW1JR01vZFNrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdNb2RTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISXVaMlYwS0hVcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdFc0NpQWdJQ0FnSUNBZ2RYQmtZWFJsT2lCc0xBb2dJQ0FnSUNBZ0lHZGxkRmRwY21WbWNtRnRaVUYwZEhKcFluVjBaVG9nYUFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCbFp5aHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlHNHVhWE5YWldKSFRESXNJSEk3Q2lBZ0lDQm1kVzVqZEdsdmJpQnZLR1FwSUhzS0lDQWdJQ0FnSUNCeUlEMGdaRHNLSUNBZ0lIMEtJQ0FnSUd4bGRDQmhMQ0JzT3dvZ0lDQWdablZ1WTNScGIyNGdZeWhrS1NCN0NpQWdJQ0FnSUNBZ1lTQTlJR1F1ZEhsd1pTd2diQ0E5SUdRdVlubDBaWE5RWlhKRmJHVnRaVzUwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FDaGtMQ0JtS1NCN0NpQWdJQ0FnSUNBZ2N5NWtjbUYzUld4bGJXVnVkSE1vY2l3Z1ppd2dZU3dnWkNBcUlHd3BMQ0IwTG5Wd1pHRjBaU2htTENCeUxDQXhLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhVb1pDd2daaXdnYlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2h0SUQwOVBTQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUhnc0lIWTdDaUFnSUNBZ0lDQWdhV1lnS0drcElIZ2dQU0J6TENCMklEMGdJbVJ5WVhkRmJHVnRaVzUwYzBsdWMzUmhibU5sWkNJN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb2VDQTlJR1V1WjJWMEtDSkJUa2RNUlY5cGJuTjBZVzVqWldSZllYSnlZWGx6SWlrc0lIWWdQU0FpWkhKaGQwVnNaVzFsYm5SelNXNXpkR0Z1WTJWa1FVNUhURVVpTENCNElEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNU1c1a1pYaGxaRUoxWm1abGNsSmxibVJsY21WeU9pQjFjMmx1WnlCVVNGSkZSUzVKYm5OMFlXNWpaV1JDZFdabVpYSkhaVzl0WlhSeWVTQmlkWFFnYUdGeVpIZGhjbVVnWkc5bGN5QnViM1FnYzNWd2NHOXlkQ0JsZUhSbGJuTnBiMjRnUVU1SFRFVmZhVzV6ZEdGdVkyVmtYMkZ5Y21GNWN5NGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCNFczWmRLSElzSUdZc0lHRXNJR1FnS2lCc0xDQnRLU3dnZEM1MWNHUmhkR1VvWml3Z2Npd2diU2s3Q2lBZ0lDQjlDaUFnSUNCMGFHbHpMbk5sZEUxdlpHVWdQU0J2TENCMGFHbHpMbk5sZEVsdVpHVjRJRDBnWXl3Z2RHaHBjeTV5Wlc1a1pYSWdQU0JvTENCMGFHbHpMbkpsYm1SbGNrbHVjM1JoYm1ObGN5QTlJSFU3Q24wS1puVnVZM1JwYjI0Z2RHY29jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQjdDaUFnSUNBZ0lDQWdaMlZ2YldWMGNtbGxjem9nTUN3S0lDQWdJQ0FnSUNCMFpYaDBkWEpsY3pvZ01Bb2dJQ0FnZlN3Z2RDQTlJSHNLSUNBZ0lDQWdJQ0JtY21GdFpUb2dNQ3dLSUNBZ0lDQWdJQ0JqWVd4c2N6b2dNQ3dLSUNBZ0lDQWdJQ0IwY21saGJtZHNaWE02SURBc0NpQWdJQ0FnSUNBZ2NHOXBiblJ6T2lBd0xBb2dJQ0FnSUNBZ0lHeHBibVZ6T2lBd0NpQWdJQ0I5T3dvZ0lDQWdablZ1WTNScGIyNGdiaWh5TENCdkxDQmhLU0I3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LSFF1WTJGc2JITXJLeXdnYnlsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ05Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUXVkSEpwWVc1bmJHVnpJQ3M5SUdFZ0tpQW9jaUF2SURNcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRdWJHbHVaWE1nS3owZ1lTQXFJQ2h5SUM4Z01pazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBek9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDNXNhVzVsY3lBclBTQmhJQ29nS0hJZ0xTQXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElESTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBMbXhwYm1WeklDczlJR0VnS2lCeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRdWNHOXBiblJ6SUNzOUlHRWdLaUJ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURWx1Wm04NklGVnVhMjV2ZDI0Z1pISmhkeUJ0YjJSbE9pSXNJRzhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYVNncElIc0tJQ0FnSUNBZ0lDQjBMbVp5WVcxbEt5c3NJSFF1WTJGc2JITWdQU0F3TENCMExuUnlhV0Z1WjJ4bGN5QTlJREFzSUhRdWNHOXBiblJ6SUQwZ01Dd2dkQzVzYVc1bGN5QTlJREE3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUcxbGJXOXllVG9nWlN3S0lDQWdJQ0FnSUNCeVpXNWtaWEk2SUhRc0NpQWdJQ0FnSUNBZ2NISnZaM0poYlhNNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnWVhWMGIxSmxjMlYwT2lBaE1Dd0tJQ0FnSUNBZ0lDQnlaWE5sZERvZ2FTd0tJQ0FnSUNBZ0lDQjFjR1JoZEdVNklHNEtJQ0FnSUgwN0NuMEtkbUZ5SUZGeklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCdmRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm5Wc2JDd2dkQ0E5SURFc0lHNGdQU0F4TENCcElEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9iblZzYkNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVwYldGblpTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdnNklHa0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtMWhaMFpwYkhSbGNpQTlJSEowTENCMGFHbHpMbTFwYmtacGJIUmxjaUE5SUhKMExDQjBhR2x6TG5keVlYQlNJRDBnZG5Rc0lIUm9hWE11WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnSVRFc0lIUm9hWE11Wm14cGNGa2dQU0FoTVN3Z2RHaHBjeTUxYm5CaFkydEJiR2xuYm0xbGJuUWdQU0F4T3dvZ0lDQWdmUXA5T3dwUmN5NXdjbTkwYjNSNWNHVXVhWE5FWVhSaFZHVjRkSFZ5WlRKRVFYSnlZWGtnUFNBaE1Ec0tablZ1WTNScGIyNGdibWNvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhOYk1GMGdMU0JsV3pCZE93cDlDbVoxYm1OMGFXOXVJR2xuS0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCTllYUm9MbUZpY3lobFd6RmRLU0F0SUUxaGRHZ3VZV0p6S0hOYk1WMHBPd3A5Q21aMWJtTjBhVzl1SUU1c0tITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdNU3dnYmlBOUlHVXVhWE5KYm5SbGNteGxZWFpsWkVKMVptWmxja0YwZEhKcFluVjBaU0EvSUdVdVpHRjBZUzVoY25KaGVTQTZJR1V1WVhKeVlYazdDaUFnSUNCdUlHbHVjM1JoYm1ObGIyWWdTVzUwT0VGeWNtRjVJRDhnZENBOUlERXlOeUE2SUc0Z2FXNXpkR0Z1WTJWdlppQkpiblF4TmtGeWNtRjVJRDhnZENBOUlETXlOelkzSURvZ2JpQnBibk4wWVc1alpXOW1JRWx1ZERNeVFYSnlZWGtnUHlCMElEMGdNakUwTnpRNE16WTBOeUE2SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVFc5eWNHaDBZWEpuWlhSek9pQlZibk4xY0hCdmNuUmxaQ0J0YjNKd2FDQmhkSFJ5YVdKMWRHVWdaR0YwWVNCMGVYQmxPaUFpTENCdUtTd2djeTVrYVhacFpHVlRZMkZzWVhJb2RDazdDbjBLWm5WdVkzUnBiMjRnY21jb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0I3ZlN3Z2FTQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29PQ2tzSUhJZ1BTQnVaWGNnVjJWaGEwMWhjQ3dnYnlBOUlHNWxkeUJOTENCaElEMGdXMTA3Q2lBZ0lDQm1iM0lvYkdWMElHTWdQU0F3T3lCaklEd2dPRHNnWXlzcktXRmJZMTBnUFNCYkNpQWdJQ0FnSUNBZ1l5d0tJQ0FnSUNBZ0lDQXdDaUFnSUNCZE93b2dJQ0FnWm5WdVkzUnBiMjRnYkNoakxDQm9MQ0IxTENCa0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdZZ1BTQmpMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3pzS0lDQWdJQ0FnSUNCcFppQW9aUzVwYzFkbFlrZE1NaUE5UFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCb0xtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Ymk1c1pXNW5kR2dzSUhnZ1BTQnlMbWRsZENob0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIZ2dQVDA5SUhadmFXUWdNQ0I4ZkNCNExtTnZkVzUwSUNFOVBTQnRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0SUNFOVBTQjJiMmxrSURBZ0ppWWdlQzUwWlhoMGRYSmxMbVJwYzNCdmMyVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdhQzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVibTl5YldGc0lDRTlQU0IyYjJsa0lEQXNJRjhnUFNCb0xtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3Z2VTQTlJR2d1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbTV2Y20xaGJDQjhmQ0JiWFN3Z1lpQTlJR2d1WVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Ymk1amIzVnVkQ3dnUVNBOUlIQWdQVDA5SUNFd0lEOGdNaUE2SURFc0lFd2dQU0JpSUNvZ1FTd2dTU0E5SURFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCTUlENGdaUzV0WVhoVVpYaDBkWEpsVTJsNlpTQW1KaUFvU1NBOUlFMWhkR2d1WTJWcGJDaE1JQzhnWlM1dFlYaFVaWGgwZFhKbFUybDZaU2tzSUV3Z1BTQmxMbTFoZUZSbGVIUjFjbVZUYVhwbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JySUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNoTUlDb2dTU0FxSURRZ0tpQnRLU3dnUWlBOUlHNWxkeUJSY3lockxDQk1MQ0JKTENCdEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFSXVabTl5YldGMElEMGdZM1FzSUVJdWRIbHdaU0E5SUc1dUxDQkNMbTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVUNBOUlFRWdLaUEwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IzSUQwZ01Ec2dkeUE4SUcwN0lIY3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCZlczZGRMQ0JFSUQwZ2VWdDNYU3dnVlNBOUlFd2dLaUJKSUNvZ05DQXFJSGM3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCR0lEMGdNRHNnUmlBOElFVXVZMjkxYm5RN0lFWXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzh1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoRkxDQkdLU3dnUlM1dWIzSnRZV3hwZW1Wa0lEMDlQU0FoTUNBbUppQk9iQ2h2TENCRktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRThnUFNCR0lDb2dVRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhMXRWSUNzZ1R5QXJJREJkSUQwZ2J5NTRMQ0JyVzFVZ0t5QlBJQ3NnTVYwZ1BTQnZMbmtzSUd0YlZTQXJJRThnS3lBeVhTQTlJRzh1ZWl3Z2ExdFZJQ3NnVHlBcklETmRJRDBnTUN3Z2NDQTlQVDBnSVRBZ0ppWWdLRzh1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoRUxDQkdLU3dnUkM1dWIzSnRZV3hwZW1Wa0lEMDlQU0FoTUNBbUppQk9iQ2h2TENCRUtTd2dhMXRWSUNzZ1R5QXJJRFJkSUQwZ2J5NTRMQ0JyVzFVZ0t5QlBJQ3NnTlYwZ1BTQnZMbmtzSUd0YlZTQXJJRThnS3lBMlhTQTlJRzh1ZWl3Z2ExdFZJQ3NnVHlBcklEZGRJRDBnTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiM1Z1ZERvZ2JTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMGRYSmxPaUJDTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITnBlbVU2SUc1bGR5QllLRXdzSUVrcENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxDQnlMbk5sZENob0xDQjRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJREE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREE3SUhBZ1BDQm1MbXhsYm1kMGFEc2djQ3NyS1hZZ0t6MGdabHR3WFRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQm9MbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsSUQ4Z01TQTZJREVnTFNCMk93b2dJQ0FnSUNBZ0lDQWdJQ0JrTG1kbGRGVnVhV1p2Y20xektDa3VjMlYwVm1Gc2RXVW9jeXdnSW0xdmNuQm9WR0Z5WjJWMFFtRnpaVWx1Wm14MVpXNWpaU0lzSUdjcExDQmtMbWRsZEZWdWFXWnZjbTF6S0NrdWMyVjBWbUZzZFdVb2N5d2dJbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3lJc0lHWXBMQ0JrTG1kbGRGVnVhV1p2Y20xektDa3VjMlYwVm1Gc2RXVW9jeXdnSW0xdmNuQm9WR0Z5WjJWMGMxUmxlSFIxY21VaUxDQjRMblJsZUhSMWNtVXNJSFFwTENCa0xtZGxkRlZ1YVdadmNtMXpLQ2t1YzJWMFZtRnNkV1VvY3l3Z0ltMXZjbkJvVkdGeVoyVjBjMVJsZUhSMWNtVlRhWHBsSWl3Z2VDNXphWHBsS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlHWWdQVDA5SUhadmFXUWdNQ0EvSURBZ09pQm1MbXhsYm1kMGFDd2dlQ0E5SUc1YmFDNXBaRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2g0SUQwOVBTQjJiMmxrSURBZ2ZId2dlQzVzWlc1bmRHZ2dJVDA5SUcwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ2dQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZVNBOUlEQTdJSGtnUENCdE95QjVLeXNwZUZ0NVhTQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1VzJndWFXUmRJRDBnZURzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhrZ1BTQXdPeUI1SUR3Z2JUc2dlU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnZUZ0NVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSmJNRjBnUFNCNUxDQmlXekZkSUQwZ1psdDVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I0TG5OdmNuUW9hV2NwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIa2dQU0F3T3lCNUlEd2dPRHNnZVNzcktYa2dQQ0J0SUNZbUlIaGJlVjFiTVYwZ1B5QW9ZVnQ1WFZzd1hTQTlJSGhiZVYxYk1GMHNJR0ZiZVYxYk1WMGdQU0I0VzNsZFd6RmRLU0E2SUNoaFczbGRXekJkSUQwZ1RuVnRZbVZ5TGsxQldGOVRRVVpGWDBsT1ZFVkhSVklzSUdGYmVWMWJNVjBnUFNBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWVM1emIzSjBLRzVuS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQm9MbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpd2daeUE5SUdndWJXOXljR2hCZEhSeWFXSjFkR1Z6TG01dmNtMWhiQ3dnY0NBOUlEQTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZVNBOUlEQTdJSGtnUENBNE95QjVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSWdQU0JoVzNsZExDQkJJRDBnWWxzd1hTd2dUQ0E5SUdKYk1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkJJQ0U5UFNCT2RXMWlaWEl1VFVGWVgxTkJSa1ZmU1U1VVJVZEZVaUFtSmlCTUlEOGdLSFlnSmlZZ2FDNW5aWFJCZEhSeWFXSjFkR1VvSW0xdmNuQm9WR0Z5WjJWMElpQXJJSGtwSUNFOVBTQjJXMEZkSUNZbUlHZ3VjMlYwUVhSMGNtbGlkWFJsS0NKdGIzSndhRlJoY21kbGRDSWdLeUI1TENCMlcwRmRLU3dnWnlBbUppQm9MbWRsZEVGMGRISnBZblYwWlNnaWJXOXljR2hPYjNKdFlXd2lJQ3NnZVNrZ0lUMDlJR2RiUVYwZ0ppWWdhQzV6WlhSQmRIUnlhV0oxZEdVb0ltMXZjbkJvVG05eWJXRnNJaUFySUhrc0lHZGJRVjBwTENCcFczbGRJRDBnVEN3Z2NDQXJQU0JNS1NBNklDaDJJQ1ltSUdndWFHRnpRWFIwY21saWRYUmxLQ0p0YjNKd2FGUmhjbWRsZENJZ0t5QjVLU0E5UFQwZ0lUQWdKaVlnYUM1a1pXeGxkR1ZCZEhSeWFXSjFkR1VvSW0xdmNuQm9WR0Z5WjJWMElpQXJJSGtwTENCbklDWW1JR2d1YUdGelFYUjBjbWxpZFhSbEtDSnRiM0p3YUU1dmNtMWhiQ0lnS3lCNUtTQTlQVDBnSVRBZ0ppWWdhQzVrWld4bGRHVkJkSFJ5YVdKMWRHVW9JbTF2Y25Cb1RtOXliV0ZzSWlBcklIa3BMQ0JwVzNsZElEMGdNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0JvTG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabElEOGdNU0E2SURFZ0xTQndPd29nSUNBZ0lDQWdJQ0FnSUNCa0xtZGxkRlZ1YVdadmNtMXpLQ2t1YzJWMFZtRnNkV1VvY3l3Z0ltMXZjbkJvVkdGeVoyVjBRbUZ6WlVsdVpteDFaVzVqWlNJc0lGOHBMQ0JrTG1kbGRGVnVhV1p2Y20xektDa3VjMlYwVm1Gc2RXVW9jeXdnSW0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGN5SXNJR2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ2RYQmtZWFJsT2lCc0NpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlITm5LSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQm1kVzVqZEdsdmJpQnlLR3dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUc0dWNtVnVaR1Z5TG1aeVlXMWxMQ0JvSUQwZ2JDNW5aVzl0WlhSeWVTd2dkU0E5SUdVdVoyVjBLR3dzSUdncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcExtZGxkQ2gxS1NBaFBUMGdZeUFtSmlBb1pTNTFjR1JoZEdVb2RTa3NJR2t1YzJWMEtIVXNJR01wS1N3Z2JDNXBjMGx1YzNSaGJtTmxaRTFsYzJnZ0ppWWdLR3d1YUdGelJYWmxiblJNYVhOMFpXNWxjaWdpWkdsemNHOXpaU0lzSUdFcElEMDlQU0FoTVNBbUppQnNMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0JoS1N3Z2RDNTFjR1JoZEdVb2JDNXBibk4wWVc1alpVMWhkSEpwZUN3Z016UTVOaklwTENCc0xtbHVjM1JoYm1ObFEyOXNiM0lnSVQwOUlHNTFiR3dnSmlZZ2RDNTFjR1JoZEdVb2JDNXBibk4wWVc1alpVTnZiRzl5TENBek5EazJNaWtwTENCMU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdieWdwSUhzS0lDQWdJQ0FnSUNCcElEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaEtHd3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJR3d1ZEdGeVoyVjBPd29nSUNBZ0lDQWdJR011Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaVpHbHpjRzl6WlNJc0lHRXBMQ0IwTG5KbGJXOTJaU2hqTG1sdWMzUmhibU5sVFdGMGNtbDRLU3dnWXk1cGJuTjBZVzVqWlVOdmJHOXlJQ0U5UFNCdWRXeHNJQ1ltSUhRdWNtVnRiM1psS0dNdWFXNXpkR0Z1WTJWRGIyeHZjaWs3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUhWd1pHRjBaVG9nY2l3S0lDQWdJQ0FnSUNCa2FYTndiM05sT2lCdkNpQWdJQ0I5T3dwOUNuWmhjaUJ0WVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYjNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzUxYkd3c0lIUWdQU0F4TENCdUlEMGdNU3dnYVNBOUlERXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNTFiR3dwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVhVzFoWjJVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdSaGRHRTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvT2lCcENpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1dFlXZEdhV3gwWlhJZ1BTQnlkQ3dnZEdocGN5NXRhVzVHYVd4MFpYSWdQU0J5ZEN3Z2RHaHBjeTUzY21Gd1VpQTlJSFowTENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJQ0V4TENCMGFHbHpMbVpzYVhCWklEMGdJVEVzSUhSb2FYTXVkVzV3WVdOclFXeHBaMjV0Wlc1MElEMGdNVHNLSUNBZ0lIMEtmVHNLYldFdWNISnZkRzkwZVhCbExtbHpSR0YwWVZSbGVIUjFjbVV6UkNBOUlDRXdPd3AyWVhJZ2JHZ2dQU0J1WlhjZ2IzUXNJR05vSUQwZ2JtVjNJRkZ6TENCb2FDQTlJRzVsZHlCdFlTd2dkV2dnUFNCdVpYY2dhMmtzSUVKc0lEMGdXMTBzSUhwc0lEMGdXMTBzSUZWc0lEMGdibVYzSUVac2IyRjBNekpCY25KaGVTZ3hOaWtzSUU5c0lEMGdibVYzSUVac2IyRjBNekpCY25KaGVTZzVLU3dnU0d3Z1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtEUXBPd3BtZFc1amRHbHZiaUJXYVNoekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJSE5iTUYwN0NpQWdJQ0JwWmlBb2JpQThQU0F3SUh4OElHNGdQaUF3S1NCeVpYUjFjbTRnY3pzS0lDQWdJR3hsZENCcElEMGdaU0FxSUhRc0lISWdQU0JDYkZ0cFhUc0tJQ0FnSUdsbUlDaHlJRDA5UFNCMmIybGtJREFnSmlZZ0tISWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLR2twTENCQ2JGdHBYU0E5SUhJcExDQmxJQ0U5UFNBd0tTQjdDaUFnSUNBZ0lDQWdiaTUwYjBGeWNtRjVLSElzSURBcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QTlJREVzSUdFZ1BTQXdPeUJ2SUNFOVBTQmxPeUFySzI4cFlTQXJQU0IwTENCelcyOWRMblJ2UVhKeVlYa29jaXdnWVNrN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2Nqc0tmUXBtZFc1amRHbHZiaUJOZENoekxDQmxLU0I3Q2lBZ0lDQnBaaUFvY3k1c1pXNW5kR2dnSVQwOUlHVXViR1Z1WjNSb0tTQnlaWFIxY200Z0lURTdDaUFnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2N5NXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3BhV1lnS0hOYmRGMGdJVDA5SUdWYmRGMHBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lISmxkSFZ5YmlBaE1Ec0tmUXBtZFc1amRHbHZiaUJmZENoekxDQmxLU0I3Q2lBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdaUzVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwYzF0MFhTQTlJR1ZiZEYwN0NuMEtablZ1WTNScGIyNGdTM01vY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCNmJGdGxYVHNLSUNBZ0lIUWdQVDA5SUhadmFXUWdNQ0FtSmlBb2RDQTlJRzVsZHlCSmJuUXpNa0Z5Y21GNUtHVXBMQ0I2YkZ0bFhTQTlJSFFwT3dvZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQWhQVDBnWlRzZ0t5dHVLWFJiYmwwZ1BTQnpMbUZzYkc5allYUmxWR1Y0ZEhWeVpWVnVhWFFvS1RzS0lDQWdJSEpsZEhWeWJpQjBPd3A5Q21aMWJtTjBhVzl1SUc5bktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lIUmJNRjBnSVQwOUlHVWdKaVlnS0hNdWRXNXBabTl5YlRGbUtIUm9hWE11WVdSa2Npd2daU2tzSUhSYk1GMGdQU0JsS1RzS2ZRcG1kVzVqZEdsdmJpQmhaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVN0NpQWdJQ0JwWmlBb1pTNTRJQ0U5UFNCMmIybGtJREFwSUNoMFd6QmRJQ0U5UFNCbExuZ2dmSHdnZEZzeFhTQWhQVDBnWlM1NUtTQW1KaUFvY3k1MWJtbG1iM0p0TW1Zb2RHaHBjeTVoWkdSeUxDQmxMbmdzSUdVdWVTa3NJSFJiTUYwZ1BTQmxMbmdzSUhSYk1WMGdQU0JsTG5rcE93b2dJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdhV1lnS0UxMEtIUXNJR1VwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnY3k1MWJtbG1iM0p0TW1aMktIUm9hWE11WVdSa2Npd2daU2tzSUY5MEtIUXNJR1VwT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUd4bktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lHbG1JQ2hsTG5nZ0lUMDlJSFp2YVdRZ01Da2dLSFJiTUYwZ0lUMDlJR1V1ZUNCOGZDQjBXekZkSUNFOVBTQmxMbmtnZkh3Z2RGc3lYU0FoUFQwZ1pTNTZLU0FtSmlBb2N5NTFibWxtYjNKdE0yWW9kR2hwY3k1aFpHUnlMQ0JsTG5nc0lHVXVlU3dnWlM1NktTd2dkRnN3WFNBOUlHVXVlQ3dnZEZzeFhTQTlJR1V1ZVN3Z2RGc3lYU0E5SUdVdWVpazdDaUFnSUNCbGJITmxJR2xtSUNobExuSWdJVDA5SUhadmFXUWdNQ2tnS0hSYk1GMGdJVDA5SUdVdWNpQjhmQ0IwV3pGZElDRTlQU0JsTG1jZ2ZId2dkRnN5WFNBaFBUMGdaUzVpS1NBbUppQW9jeTUxYm1sbWIzSnRNMllvZEdocGN5NWhaR1J5TENCbExuSXNJR1V1Wnl3Z1pTNWlLU3dnZEZzd1hTQTlJR1V1Y2l3Z2RGc3hYU0E5SUdVdVp5d2dkRnN5WFNBOUlHVXVZaWs3Q2lBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNCcFppQW9UWFFvZEN3Z1pTa3BJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnpMblZ1YVdadmNtMHpabllvZEdocGN5NWhaR1J5TENCbEtTd2dYM1FvZEN3Z1pTazdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdZMmNvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobE93b2dJQ0FnYVdZZ0tHVXVlQ0FoUFQwZ2RtOXBaQ0F3S1NBb2RGc3dYU0FoUFQwZ1pTNTRJSHg4SUhSYk1WMGdJVDA5SUdVdWVTQjhmQ0IwV3pKZElDRTlQU0JsTG5vZ2ZId2dkRnN6WFNBaFBUMGdaUzUzS1NBbUppQW9jeTUxYm1sbWIzSnROR1lvZEdocGN5NWhaR1J5TENCbExuZ3NJR1V1ZVN3Z1pTNTZMQ0JsTG5jcExDQjBXekJkSUQwZ1pTNTRMQ0IwV3pGZElEMGdaUzU1TENCMFd6SmRJRDBnWlM1NkxDQjBXek5kSUQwZ1pTNTNLVHNLSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdsbUlDaE5kQ2gwTENCbEtTa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lITXVkVzVwWm05eWJUUm1kaWgwYUdsekxtRmtaSElzSUdVcExDQmZkQ2gwTENCbEtUc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQm9aeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVc0lHNGdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdhV1lnS0c0Z1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJR2xtSUNoTmRDaDBMQ0JsS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhNdWRXNXBabTl5YlUxaGRISnBlREptZGloMGFHbHpMbUZrWkhJc0lDRXhMQ0JsS1N3Z1gzUW9kQ3dnWlNrN0NpQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJR2xtSUNoTmRDaDBMQ0J1S1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUVoc0xuTmxkQ2h1S1N3Z2N5NTFibWxtYjNKdFRXRjBjbWw0TW1aMktIUm9hWE11WVdSa2Npd2dJVEVzSUVoc0tTd2dYM1FvZEN3Z2JpazdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdkV2NvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobExDQnVJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJR2xtSUNodUlEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1RYUW9kQ3dnWlNrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCekxuVnVhV1p2Y20xTllYUnlhWGd6Wm5Zb2RHaHBjeTVoWkdSeUxDQWhNU3dnWlNrc0lGOTBLSFFzSUdVcE93b2dJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JwWmlBb1RYUW9kQ3dnYmlrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCUGJDNXpaWFFvYmlrc0lITXVkVzVwWm05eWJVMWhkSEpwZURObWRpaDBhR2x6TG1Ga1pISXNJQ0V4TENCUGJDa3NJRjkwS0hRc0lHNHBPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJR1JuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pTd2diaUE5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0JwWmlBb2JpQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMTBLSFFzSUdVcEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2N5NTFibWxtYjNKdFRXRjBjbWw0TkdaMktIUm9hWE11WVdSa2Npd2dJVEVzSUdVcExDQmZkQ2gwTENCbEtUc0tJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMTBLSFFzSUc0cEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ1ZXd3VjMlYwS0c0cExDQnpMblZ1YVdadmNtMU5ZWFJ5YVhnMFpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z1ZXd3BMQ0JmZENoMExDQnVLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJtWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGamFHVTdDaUFnSUNCMFd6QmRJQ0U5UFNCbElDWW1JQ2h6TG5WdWFXWnZjbTB4YVNoMGFHbHpMbUZrWkhJc0lHVXBMQ0IwV3pCZElEMGdaU2s3Q24wS1puVnVZM1JwYjI0Z2NHY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdUWFFvZEN3Z1pTa2dmSHdnS0hNdWRXNXBabTl5YlRKcGRpaDBhR2x6TG1Ga1pISXNJR1VwTENCZmRDaDBMQ0JsS1NrN0NuMEtablZ1WTNScGIyNGdiV2NvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobE93b2dJQ0FnVFhRb2RDd2daU2tnZkh3Z0tITXVkVzVwWm05eWJUTnBkaWgwYUdsekxtRmtaSElzSUdVcExDQmZkQ2gwTENCbEtTazdDbjBLWm5WdVkzUnBiMjRnWjJjb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ1RYUW9kQ3dnWlNrZ2ZId2dLSE11ZFc1cFptOXliVFJwZGloMGFHbHpMbUZrWkhJc0lHVXBMQ0JmZENoMExDQmxLU2s3Q24wS1puVnVZM1JwYjI0Z2VHY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdkRnN3WFNBaFBUMGdaU0FtSmlBb2N5NTFibWxtYjNKdE1YVnBLSFJvYVhNdVlXUmtjaXdnWlNrc0lIUmJNRjBnUFNCbEtUc0tmUXBtZFc1amRHbHZiaUI1WnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGamFHVTdDaUFnSUNCTmRDaDBMQ0JsS1NCOGZDQW9jeTUxYm1sbWIzSnRNblZwZGloMGFHbHpMbUZrWkhJc0lHVXBMQ0JmZENoMExDQmxLU2s3Q24wS1puVnVZM1JwYjI0Z2RtY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdUWFFvZEN3Z1pTa2dmSHdnS0hNdWRXNXBabTl5YlROMWFYWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrcE93cDlDbVoxYm1OMGFXOXVJRjluS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUUxMEtIUXNJR1VwSUh4OElDaHpMblZ1YVdadmNtMDBkV2wyS0hSb2FYTXVZV1JrY2l3Z1pTa3NJRjkwS0hRc0lHVXBLVHNLZlFwbWRXNWpkR2x2YmlCTlp5aHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUhSb2FYTXVZMkZqYUdVc0lHa2dQU0IwTG1Gc2JHOWpZWFJsVkdWNGRIVnlaVlZ1YVhRb0tUc0tJQ0FnSUc1Yk1GMGdJVDA5SUdrZ0ppWWdLSE11ZFc1cFptOXliVEZwS0hSb2FYTXVZV1JrY2l3Z2FTa3NJRzViTUYwZ1BTQnBLU3dnZEM1ellXWmxVMlYwVkdWNGRIVnlaVEpFS0dVZ2ZId2diR2dzSUdrcE93cDlDbVoxYm1OMGFXOXVJR0puS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1allXTm9aU3dnYVNBOUlIUXVZV3hzYjJOaGRHVlVaWGgwZFhKbFZXNXBkQ2dwT3dvZ0lDQWdibHN3WFNBaFBUMGdhU0FtSmlBb2N5NTFibWxtYjNKdE1Xa29kR2hwY3k1aFpHUnlMQ0JwS1N3Z2Jsc3dYU0E5SUdrcExDQjBMbk5sZEZSbGVIUjFjbVV6UkNobElIeDhJR2hvTENCcEtUc0tmUXBtZFc1amRHbHZiaUIzWnloekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVkyRmphR1VzSUdrZ1BTQjBMbUZzYkc5allYUmxWR1Y0ZEhWeVpWVnVhWFFvS1RzS0lDQWdJRzViTUYwZ0lUMDlJR2tnSmlZZ0tITXVkVzVwWm05eWJURnBLSFJvYVhNdVlXUmtjaXdnYVNrc0lHNWJNRjBnUFNCcEtTd2dkQzV6WVdabFUyVjBWR1Y0ZEhWeVpVTjFZbVVvWlNCOGZDQjFhQ3dnYVNrN0NuMEtablZ1WTNScGIyNGdVMmNvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1OaFkyaGxMQ0JwSUQwZ2RDNWhiR3h2WTJGMFpWUmxlSFIxY21WVmJtbDBLQ2s3Q2lBZ0lDQnVXekJkSUNFOVBTQnBJQ1ltSUNoekxuVnVhV1p2Y20weGFTaDBhR2x6TG1Ga1pISXNJR2twTENCdVd6QmRJRDBnYVNrc0lIUXVjMlYwVkdWNGRIVnlaVEpFUVhKeVlYa29aU0I4ZkNCamFDd2dhU2s3Q24wS1puVnVZM1JwYjI0Z1ZHY29jeWtnZXdvZ0lDQWdjM2RwZEdOb0tITXBld29nSUNBZ0lDQWdJR05oYzJVZ05URXlOam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc5bk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qUTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJoWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpZMU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiR2M3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkyTmpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOelE2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCb1p6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qYzFPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZFdjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM05qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1JuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdOVEV5TkRvS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpjd09nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabWM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkyTnpvS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpjeE9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjR2M3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkyT0RvS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpjeU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiV2M3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkyT1RvS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpjek9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaMmM3Q2lBZ0lDQWdJQ0FnWTJGelpTQTFNVEkxT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2VHYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVORG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhsbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpZeU9UVTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIyWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprMk9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYMmM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzT0RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTVRrNE9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZeU9UZzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qTXdOam9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamd5T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNPVG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNams1T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TURjNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmlaenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOamd3T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TURBNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpNd09Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qa3pPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZDJjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNE9Ub0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk16QXpPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNVEU2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1TWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGTm5Pd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJRVZuS0hNc0lHVXBJSHNLSUNBZ0lITXVkVzVwWm05eWJURm1kaWgwYUdsekxtRmtaSElzSUdVcE93cDlDbVoxYm1OMGFXOXVJRUZuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ1Zta29aU3dnZEdocGN5NXphWHBsTENBeUtUc0tJQ0FnSUhNdWRXNXBabTl5YlRKbWRpaDBhR2x6TG1Ga1pISXNJSFFwT3dwOUNtWjFibU4wYVc5dUlFTm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnVm1rb1pTd2dkR2hwY3k1emFYcGxMQ0F6S1RzS0lDQWdJSE11ZFc1cFptOXliVE5tZGloMGFHbHpMbUZrWkhJc0lIUXBPd3A5Q21aMWJtTjBhVzl1SUV4bktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdWbWtvWlN3Z2RHaHBjeTV6YVhwbExDQTBLVHNLSUNBZ0lITXVkVzVwWm05eWJUUm1kaWgwYUdsekxtRmtaSElzSUhRcE93cDlDbVoxYm1OMGFXOXVJRkpuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ1Zta29aU3dnZEdocGN5NXphWHBsTENBMEtUc0tJQ0FnSUhNdWRXNXBabTl5YlUxaGRISnBlREptZGloMGFHbHpMbUZrWkhJc0lDRXhMQ0IwS1RzS2ZRcG1kVzVqZEdsdmJpQlFaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUZacEtHVXNJSFJvYVhNdWMybDZaU3dnT1NrN0NpQWdJQ0J6TG5WdWFXWnZjbTFOWVhSeWFYZ3pabllvZEdocGN5NWhaR1J5TENBaE1Td2dkQ2s3Q24wS1puVnVZM1JwYjI0Z1NXY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0JXYVNobExDQjBhR2x6TG5OcGVtVXNJREUyS1RzS0lDQWdJSE11ZFc1cFptOXliVTFoZEhKcGVEUm1kaWgwYUdsekxtRmtaSElzSUNFeExDQjBLVHNLZlFwbWRXNWpkR2x2YmlCRVp5aHpMQ0JsS1NCN0NpQWdJQ0J6TG5WdWFXWnZjbTB4YVhZb2RHaHBjeTVoWkdSeUxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCR1p5aHpMQ0JsS1NCN0NpQWdJQ0J6TG5WdWFXWnZjbTB5YVhZb2RHaHBjeTVoWkdSeUxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCT1p5aHpMQ0JsS1NCN0NpQWdJQ0J6TG5WdWFXWnZjbTB6YVhZb2RHaHBjeTVoWkdSeUxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCQ1p5aHpMQ0JsS1NCN0NpQWdJQ0J6TG5WdWFXWnZjbTAwYVhZb2RHaHBjeTVoWkdSeUxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCNlp5aHpMQ0JsS1NCN0NpQWdJQ0J6TG5WdWFXWnZjbTB4ZFdsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z1ZXY29jeXdnWlNrZ2V3b2dJQ0FnY3k1MWJtbG1iM0p0TW5WcGRpaDBhR2x6TG1Ga1pISXNJR1VwT3dwOUNtWjFibU4wYVc5dUlFOW5LSE1zSUdVcElIc0tJQ0FnSUhNdWRXNXBabTl5YlROMWFYWW9kR2hwY3k1aFpHUnlMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQklaeWh6TENCbEtTQjdDaUFnSUNCekxuVnVhV1p2Y20wMGRXbDJLSFJvYVhNdVlXUmtjaXdnWlNrN0NuMEtablZ1WTNScGIyNGdhMmNvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQmxMbXhsYm1kMGFDd2dhU0E5SUV0ektIUXNJRzRwT3dvZ0lDQWdjeTUxYm1sbWIzSnRNV2wyS0hSb2FYTXVZV1JrY2l3Z2FTazdDaUFnSUNCbWIzSW9iR1YwSUhJZ1BTQXdPeUJ5SUNFOVBTQnVPeUFySzNJcGRDNXpZV1psVTJWMFZHVjRkSFZ5WlRKRUtHVmJjbDBnZkh3Z2JHZ3NJR2xiY2wwcE93cDlDbVoxYm1OMGFXOXVJRWRuS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdaUzVzWlc1bmRHZ3NJR2tnUFNCTGN5aDBMQ0J1S1RzS0lDQWdJSE11ZFc1cFptOXliVEZwZGloMGFHbHpMbUZrWkhJc0lHa3BPd29nSUNBZ1ptOXlLR3hsZENCeUlEMGdNRHNnY2lBaFBUMGdianNnS3l0eUtYUXVjMlYwVkdWNGRIVnlaVE5FS0dWYmNsMGdmSHdnYUdnc0lHbGJjbDBwT3dwOUNtWjFibU4wYVc5dUlGWm5LSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ1pTNXNaVzVuZEdnc0lHa2dQU0JMY3loMExDQnVLVHNLSUNBZ0lITXVkVzVwWm05eWJURnBkaWgwYUdsekxtRmtaSElzSUdrcE93b2dJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUFoUFQwZ2Jqc2dLeXR5S1hRdWMyRm1aVk5sZEZSbGVIUjFjbVZEZFdKbEtHVmJjbDBnZkh3Z2RXZ3NJR2xiY2wwcE93cDlDbVoxYm1OMGFXOXVJRmRuS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdaUzVzWlc1bmRHZ3NJR2tnUFNCTGN5aDBMQ0J1S1RzS0lDQWdJSE11ZFc1cFptOXliVEZwZGloMGFHbHpMbUZrWkhJc0lHa3BPd29nSUNBZ1ptOXlLR3hsZENCeUlEMGdNRHNnY2lBaFBUMGdianNnS3l0eUtYUXVjMlYwVkdWNGRIVnlaVEpFUVhKeVlYa29aVnR5WFNCOGZDQmphQ3dnYVZ0eVhTazdDbjBLWm5WdVkzUnBiMjRnY1djb2N5a2dld29nSUNBZ2MzZHBkR05vS0hNcGV3b2dJQ0FnSUNBZ0lHTmhjMlVnTlRFeU5qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRVZuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmpRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkJaenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOalkxT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1EyYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJOam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUV4bk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk56UTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJTWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpjMU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVR2M3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTmpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFbG5Pd29nSUNBZ0lDQWdJR05oYzJVZ05URXlORG9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamN3T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JHYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJOem9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamN4T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JtYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamN5T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1RtYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJPVG9LSUNBZ0lDQWdJQ0JqWVhObElETTFOamN6T2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1FtYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBMU1USTFPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZW1jN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU5Eb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRlZuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T1RVNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlBaenNLSUNBZ0lDQWdJQ0JqWVhObElETTJNamsyT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1NHYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNVGs0T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T1RnNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpNd05qb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qZ3lPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYTJjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM09Ub0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazVPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNRGM2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCSFp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qZ3dPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNREE2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOak13T0RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprek9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdWbWM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk0T1RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTXpBek9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1URTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVNam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZkbk93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlGaG5LSE1zSUdVc0lIUXBJSHNLSUNBZ0lIUm9hWE11YVdRZ1BTQnpMQ0IwYUdsekxtRmtaSElnUFNCMExDQjBhR2x6TG1OaFkyaGxJRDBnVzEwc0lIUm9hWE11YzJWMFZtRnNkV1VnUFNCVVp5aGxMblI1Y0dVcE93cDlDbVoxYm1OMGFXOXVJR1JvS0hNc0lHVXNJSFFwSUhzS0lDQWdJSFJvYVhNdWFXUWdQU0J6TENCMGFHbHpMbUZrWkhJZ1BTQjBMQ0IwYUdsekxtTmhZMmhsSUQwZ1cxMHNJSFJvYVhNdWMybDZaU0E5SUdVdWMybDZaU3dnZEdocGN5NXpaWFJXWVd4MVpTQTlJSEZuS0dVdWRIbHdaU2s3Q24wS1pHZ3VjSEp2ZEc5MGVYQmxMblZ3WkdGMFpVTmhZMmhsSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbU5oWTJobE93b2dJQ0FnY3lCcGJuTjBZVzVqWlc5bUlFWnNiMkYwTXpKQmNuSmhlU0FtSmlCbExteGxibWQwYUNBaFBUMGdjeTVzWlc1bmRHZ2dKaVlnS0hSb2FYTXVZMkZqYUdVZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtITXViR1Z1WjNSb0tTa3NJRjkwS0dVc0lITXBPd3A5T3dwbWRXNWpkR2x2YmlCbWFDaHpLU0I3Q2lBZ0lDQjBhR2x6TG1sa0lEMGdjeXdnZEdocGN5NXpaWEVnUFNCYlhTd2dkR2hwY3k1dFlYQWdQU0I3ZlRzS2ZRcG1hQzV3Y205MGIzUjVjR1V1YzJWMFZtRnNkV1VnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWMyVnhPd29nSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb095QnBJQ0U5UFNCeU95QXJLMmtwZXdvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYmx0cFhUc0tJQ0FnSUNBZ0lDQnZMbk5sZEZaaGJIVmxLSE1zSUdWYmJ5NXBaRjBzSUhRcE93b2dJQ0FnZlFwOU93cDJZWElnVjI4Z1BTQXZLRngzS3lrb1hGMHBQeWhjVzN4Y0xpay9MMmM3Q21aMWJtTjBhVzl1SUd0c0tITXNJR1VwSUhzS0lDQWdJSE11YzJWeExuQjFjMmdvWlNrc0lITXViV0Z3VzJVdWFXUmRJRDBnWlRzS2ZRcG1kVzVqZEdsdmJpQktaeWh6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlITXVibUZ0WlN3Z2FTQTlJRzR1YkdWdVozUm9Pd29nSUNBZ1ptOXlLRmR2TG14aGMzUkpibVJsZUNBOUlEQTdPeWw3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JYYnk1bGVHVmpLRzRwTENCdklEMGdWMjh1YkdGemRFbHVaR1Y0TENCaElEMGdjbHN4WFN3Z2JDQTlJSEpiTWwwZ1BUMDlJQ0pkSWl3Z1l5QTlJSEpiTTEwN0NpQWdJQ0FnSUNBZ2FXWWdLR3dnSmlZZ0tHRWdQU0JoSUh3Z01Da3NJR01nUFQwOUlIWnZhV1FnTUNCOGZDQmpJRDA5UFNBaVd5SWdKaVlnYnlBcklESWdQVDA5SUdrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYTJ3b2RDd2dZeUE5UFQwZ2RtOXBaQ0F3SUQ4Z2JtVjNJRmhuS0dFc0lITXNJR1VwSURvZ2JtVjNJR1JvS0dFc0lITXNJR1VwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQjBMbTFoY0Z0aFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZFNBOVBUMGdkbTlwWkNBd0lDWW1JQ2gxSUQwZ2JtVjNJR1pvS0dFcExDQnJiQ2gwTENCMUtTa3NJSFFnUFNCMU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQmliaWh6TENCbEtTQjdDaUFnSUNCMGFHbHpMbk5sY1NBOUlGdGRMQ0IwYUdsekxtMWhjQ0E5SUh0OU93b2dJQ0FnYkdWMElIUWdQU0J6TG1kbGRGQnliMmR5WVcxUVlYSmhiV1YwWlhJb1pTd2dNelUzTVRncE93b2dJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SUhRN0lDc3JiaWw3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J6TG1kbGRFRmpkR2wyWlZWdWFXWnZjbTBvWlN3Z2Jpa3NJSElnUFNCekxtZGxkRlZ1YVdadmNtMU1iMk5oZEdsdmJpaGxMQ0JwTG01aGJXVXBPd29nSUNBZ0lDQWdJRXBuS0drc0lISXNJSFJvYVhNcE93b2dJQ0FnZlFwOUNtSnVMbkJ5YjNSdmRIbHdaUzV6WlhSV1lXeDFaU0E5SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NXRZWEJiWlYwN0NpQWdJQ0JwSUNFOVBTQjJiMmxrSURBZ0ppWWdhUzV6WlhSV1lXeDFaU2h6TENCMExDQnVLVHNLZlRzS1ltNHVjSEp2ZEc5MGVYQmxMbk5sZEU5d2RHbHZibUZzSUQwZ1puVnVZM1JwYjI0b2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0JsVzNSZE93b2dJQ0FnYmlBaFBUMGdkbTlwWkNBd0lDWW1JSFJvYVhNdWMyVjBWbUZzZFdVb2N5d2dkQ3dnYmlrN0NuMDdDbUp1TG5Wd2JHOWhaQ0E5SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCbExteGxibWQwYURzZ2FTQWhQVDBnY2pzZ0t5dHBLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1ZiYVYwc0lHRWdQU0IwVzI4dWFXUmRPd29nSUNBZ0lDQWdJR0V1Ym1WbFpITlZjR1JoZEdVZ0lUMDlJQ0V4SUNZbUlHOHVjMlYwVm1Gc2RXVW9jeXdnWVM1MllXeDFaU3dnYmlrN0NpQWdJQ0I5Q24wN0NtSnVMbk5sY1ZkcGRHaFdZV3gxWlNBOUlHWjFibU4wYVc5dUtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdXMTA3Q2lBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdjeTVzWlc1bmRHZzdJRzRnSVQwOUlHazdJQ3NyYmlsN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCelcyNWRPd29nSUNBZ0lDQWdJSEl1YVdRZ2FXNGdaU0FtSmlCMExuQjFjMmdvY2lrN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2REc0tmVHNLWm5WdVkzUnBiMjRnUjJ3b2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0J6TG1OeVpXRjBaVk5vWVdSbGNpaGxLVHNLSUNBZ0lISmxkSFZ5YmlCekxuTm9ZV1JsY2xOdmRYSmpaU2h1TENCMEtTd2djeTVqYjIxd2FXeGxVMmhoWkdWeUtHNHBMQ0J1T3dwOUNuWmhjaUJaWnlBOUlEQTdDbVoxYm1OMGFXOXVJRnBuS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnY3k1emNHeHBkQ2hnQ21BcE93b2dJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Ec2dkQ0E4SUdVdWJHVnVaM1JvT3lCMEt5c3BaVnQwWFNBOUlIUWdLeUF4SUNzZ0lqb2dJaUFySUdWYmRGMDdDaUFnSUNCeVpYUjFjbTRnWlM1cWIybHVLR0FLWUNrN0NuMEtablZ1WTNScGIyNGdjR2dvY3lrZ2V3b2dJQ0FnYzNkcGRHTm9LSE1wZXdvZ0lDQWdJQ0FnSUdOaGMyVWdUblE2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaVRHbHVaV0Z5SWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNJb0lIWmhiSFZsSUNraUNpQWdJQ0FnSUNBZ0lDQWdJRjA3Q2lBZ0lDQWdJQ0FnWTJGelpTQlBhVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNKelVrZENJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0lvSUhaaGJIVmxJQ2tpQ2lBZ0lDQWdJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFFjbTluY21GdE9pQlZibk4xY0hCdmNuUmxaQ0JsYm1OdlpHbHVaem9pTENCektTd2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJa3hwYm1WaGNpSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlLQ0IyWVd4MVpTQXBJZ29nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlGWnNLSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2N5NW5aWFJUYUdGa1pYSlFZWEpoYldWMFpYSW9aU3dnTXpVM01UTXBMQ0JwSUQwZ2N5NW5aWFJUYUdGa1pYSkpibVp2VEc5bktHVXBMblJ5YVcwb0tUc0tJQ0FnSUhKbGRIVnliaUJ1SUNZbUlHa2dQVDA5SUNJaUlEOGdJaUlnT2lCMExuUnZWWEJ3WlhKRFlYTmxLQ2tnS3lCZ0NncGdJQ3NnYVNBcklHQUtDbUFnS3lCYVp5aHpMbWRsZEZOb1lXUmxjbE52ZFhKalpTaGxLU2s3Q24wS1puVnVZM1JwYjI0Z1JHNG9jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0J3YUNobEtUc0tJQ0FnSUhKbGRIVnliaUFpZG1Wak5DQWlJQ3NnY3lBcklDSW9JSFpsWXpRZ2RtRnNkV1VnS1NCN0lISmxkSFZ5YmlBaUlDc2dkRnN3WFNBcklDSlViMHhwYm1WaGNpSWdLeUIwV3pGZElDc2dJanNnZlNJN0NuMEtablZ1WTNScGIyNGdKR2NvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCd2FDaGxLVHNLSUNBZ0lISmxkSFZ5YmlBaWRtVmpOQ0FpSUNzZ2N5QXJJQ0lvSUhabFl6UWdkbUZzZFdVZ0tTQjdJSEpsZEhWeWJpQk1hVzVsWVhKVWJ5SWdLeUIwV3pCZElDc2dkRnN4WFNBcklDSTdJSDBpT3dwOUNtWjFibU4wYVc5dUlHcG5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBPd29nSUNBZ2MzZHBkR05vS0dVcGV3b2dJQ0FnSUNBZ0lHTmhjMlVnVG5VNkNpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNBaVRHbHVaV0Z5SWpzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0JDZFRvS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUNKU1pXbHVhR0Z5WkNJN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnZW5VNkNpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNBaVQzQjBhVzFwZW1Wa1EybHVaVzl1SWpzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0JWZFRvS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUNKQlEwVlRSbWxzYldsaklqc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdZMkZ6WlNCUGRUb0tJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlDSkRkWE4wYjIwaU93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VSEp2WjNKaGJUb2dWVzV6ZFhCd2IzSjBaV1FnZEc5dVpVMWhjSEJwYm1jNklpd2daU2tzSUhRZ1BTQWlUR2x1WldGeUlqc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQWlkbVZqTXlBaUlDc2djeUFySUNJb0lIWmxZek1nWTI5c2IzSWdLU0I3SUhKbGRIVnliaUFpSUNzZ2RDQXJJQ0pVYjI1bFRXRndjR2x1WnlnZ1kyOXNiM0lnS1RzZ2ZTSTdDbjBLWm5WdVkzUnBiMjRnVVdjb2N5a2dld29nSUNBZ2NtVjBkWEp1SUZzS0lDQWdJQ0FnSUNCekxtVjRkR1Z1YzJsdmJrUmxjbWwyWVhScGRtVnpJSHg4SUhNdVpXNTJUV0Z3UTNWaVpWVldJSHg4SUhNdVluVnRjRTFoY0NCOGZDQnpMblJoYm1kbGJuUlRjR0ZqWlU1dmNtMWhiRTFoY0NCOGZDQnpMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ0I4ZkNCekxtWnNZWFJUYUdGa2FXNW5JSHg4SUhNdWMyaGhaR1Z5U1VRZ1BUMDlJQ0p3YUhsemFXTmhiQ0lnUHlBaUkyVjRkR1Z1YzJsdmJpQkhURjlQUlZOZmMzUmhibVJoY21SZlpHVnlhWFpoZEdsMlpYTWdPaUJsYm1GaWJHVWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ0tITXVaWGgwWlc1emFXOXVSbkpoWjBSbGNIUm9JSHg4SUhNdWJHOW5ZWEpwZEdodGFXTkVaWEIwYUVKMVptWmxjaWtnSmlZZ2N5NXlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJrWnlZV2RFWlhCMGFDQS9JQ0lqWlhoMFpXNXphVzl1SUVkTVgwVllWRjltY21GblgyUmxjSFJvSURvZ1pXNWhZbXhsSWlBNklDSWlMQW9nSUNBZ0lDQWdJSE11WlhoMFpXNXphVzl1UkhKaGQwSjFabVpsY25NZ0ppWWdjeTV5Wlc1a1pYSmxja1Y0ZEdWdWMybHZia1J5WVhkQ2RXWm1aWEp6SUQ4Z0lpTmxlSFJsYm5OcGIyNGdSMHhmUlZoVVgyUnlZWGRmWW5WbVptVnljeUE2SUhKbGNYVnBjbVVpSURvZ0lpSXNDaUFnSUNBZ0lDQWdLSE11WlhoMFpXNXphVzl1VTJoaFpHVnlWR1Y0ZEhWeVpVeFBSQ0I4ZkNCekxtVnVkazFoY0NCOGZDQnpMblJ5WVc1emJXbHpjMmx2YmlrZ0ppWWdjeTV5Wlc1a1pYSmxja1Y0ZEdWdWMybHZibE5vWVdSbGNsUmxlSFIxY21WTWIyUWdQeUFpSTJWNGRHVnVjMmx2YmlCSFRGOUZXRlJmYzJoaFpHVnlYM1JsZUhSMWNtVmZiRzlrSURvZ1pXNWhZbXhsSWlBNklDSWlDaUFnSUNCZExtWnBiSFJsY2loeWNpa3VhbTlwYmloZ0NtQXBPd3A5Q21aMWJtTjBhVzl1SUV0bktITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ1cxMDdDaUFnSUNCbWIzSW9iR1YwSUhRZ2FXNGdjeWw3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0J6VzNSZE93b2dJQ0FnSUNBZ0lHNGdJVDA5SUNFeElDWW1JR1V1Y0hWemFDZ2lJMlJsWm1sdVpTQWlJQ3NnZENBcklDSWdJaUFySUc0cE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlHVXVhbTlwYmloZ0NtQXBPd3A5Q21aMWJtTjBhVzl1SUdWNEtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdlMzBzSUc0Z1BTQnpMbWRsZEZCeWIyZHlZVzFRWVhKaGJXVjBaWElvWlN3Z016VTNNakVwT3dvZ0lDQWdabTl5S0d4bGRDQnBJRDBnTURzZ2FTQThJRzQ3SUdrckt5bDdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnpMbWRsZEVGamRHbDJaVUYwZEhKcFlpaGxMQ0JwS1N3Z2J5QTlJSEl1Ym1GdFpTd2dZU0E5SURFN0NpQWdJQ0FnSUNBZ2NpNTBlWEJsSUQwOVBTQXpOVFkzTkNBbUppQW9ZU0E5SURJcExDQnlMblI1Y0dVZ1BUMDlJRE0xTmpjMUlDWW1JQ2hoSUQwZ015a3NJSEl1ZEhsd1pTQTlQVDBnTXpVMk56WWdKaVlnS0dFZ1BTQTBLU3dnZEZ0dlhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nY2k1MGVYQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCc2IyTmhkR2x2YmpvZ2N5NW5aWFJCZEhSeWFXSk1iMk5oZEdsdmJpaGxMQ0J2S1N3S0lDQWdJQ0FnSUNBZ0lDQWdiRzlqWVhScGIyNVRhWHBsT2lCaENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjBPd3A5Q21aMWJtTjBhVzl1SUhKeUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCeklDRTlQU0FpSWpzS2ZRcG1kVzVqZEdsdmJpQlhiQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3k1eVpYQnNZV05sS0M5T1ZVMWZSRWxTWDB4SlIwaFVVeTluTENCbExtNTFiVVJwY2t4cFoyaDBjeWt1Y21Wd2JHRmpaU2d2VGxWTlgxTlFUMVJmVEVsSFNGUlRMMmNzSUdVdWJuVnRVM0J2ZEV4cFoyaDBjeWt1Y21Wd2JHRmpaU2d2VGxWTlgxSkZRMVJmUVZKRlFWOU1TVWRJVkZNdlp5d2daUzV1ZFcxU1pXTjBRWEpsWVV4cFoyaDBjeWt1Y21Wd2JHRmpaU2d2VGxWTlgxQlBTVTVVWDB4SlIwaFVVeTluTENCbExtNTFiVkJ2YVc1MFRHbG5hSFJ6S1M1eVpYQnNZV05sS0M5T1ZVMWZTRVZOU1Y5TVNVZElWRk12Wnl3Z1pTNXVkVzFJWlcxcFRHbG5hSFJ6S1M1eVpYQnNZV05sS0M5T1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTXZaeXdnWlM1dWRXMUVhWEpNYVdkb2RGTm9ZV1J2ZDNNcExuSmxjR3hoWTJVb0wwNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU12Wnl3Z1pTNXVkVzFUY0c5MFRHbG5hSFJUYUdGa2IzZHpLUzV5WlhCc1lXTmxLQzlPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5OW5MQ0JsTG01MWJWQnZhVzUwVEdsbmFIUlRhR0ZrYjNkektUc0tmUXBtZFc1amRHbHZiaUJ4YkNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5NXlaWEJzWVdObEtDOU9WVTFmUTB4SlVGQkpUa2RmVUV4QlRrVlRMMmNzSUdVdWJuVnRRMnhwY0hCcGJtZFFiR0Z1WlhNcExuSmxjR3hoWTJVb0wxVk9TVTlPWDBOTVNWQlFTVTVIWDFCTVFVNUZVeTluTENCbExtNTFiVU5zYVhCd2FXNW5VR3hoYm1WeklDMGdaUzV1ZFcxRGJHbHdTVzUwWlhKelpXTjBhVzl1S1RzS2ZRcDJZWElnZEhnZ1BTQXZYbHNnWEhSZEtpTnBibU5zZFdSbElDczhLRnRjZDF4a0xpOWRLeWsrTDJkdE93cG1kVzVqZEdsdmJpQnlZU2h6S1NCN0NpQWdJQ0J5WlhSMWNtNGdjeTV5WlhCc1lXTmxLSFI0TENCdWVDazdDbjBLWm5WdVkzUnBiMjRnYm5nb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQkdaVnRsWFRzS0lDQWdJR2xtSUNoMElEMDlQU0IyYjJsa0lEQXBJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lRMkZ1SUc1dmRDQnlaWE52YkhabElDTnBibU5zZFdSbElEd2lJQ3NnWlNBcklDSStJaWs3Q2lBZ0lDQnlaWFIxY200Z2NtRW9kQ2s3Q24wS2RtRnlJR2w0SUQwZ0x5TndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmJYSE5kS3o5bWIzSWdYQ2dnYVc1MElHa2dYRDBnS0Z4a0t5bGNPeUJwSUR3Z0tGeGtLeWxjT3lCcElGd3JYQ3NnWENrZ1hIc29XMXh6WEZOZEt6OHBLRDg5WEgwcFhIMHZaeXdnY25nZ1BTQXZJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjl6ZEdGeWRGeHpLMlp2Y2x4ektsd29YSE1xYVc1MFhITXJhVnh6S2oxY2N5b29YR1FyS1Z4ektqdGNjeXBwWEhNcVBGeHpLaWhjWkNzcFhITXFPMXh6S21sY2N5cGNLMXdyWEhNcVhDbGNjeXA3S0Z0Y2MxeFRYU3MvS1gxY2N5c2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkM5bk93cG1kVzVqZEdsdmJpQlliQ2h6S1NCN0NpQWdJQ0J5WlhSMWNtNGdjeTV5WlhCc1lXTmxLSEo0TENCdGFDa3VjbVZ3YkdGalpTaHBlQ3dnYzNncE93cDlDbVoxYm1OMGFXOXVJSE40S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsZGxZa2RNVUhKdlozSmhiVG9nSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0NCemFHRmtaWElnYzNsdWRHRjRJR2x6SUdSbGNISmxZMkYwWldRdUlGQnNaV0Z6WlNCMWMyVWdJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjl6ZEdGeWRDQnplVzUwWVhnZ2FXNXpkR1ZoWkM0aUtTd2diV2dvY3l3Z1pTd2dkQ3dnYmlrN0NuMEtablZ1WTNScGIyNGdiV2dvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0FpSWpzS0lDQWdJR1p2Y2loc1pYUWdjaUE5SUhCaGNuTmxTVzUwS0dVcE95QnlJRHdnY0dGeWMyVkpiblFvZENrN0lISXJLeWxwSUNzOUlHNHVjbVZ3YkdGalpTZ3ZYRnRjY3lwcFhITXFYRjB2Wnl3Z0lsc2dJaUFySUhJZ0t5QWlJRjBpS1M1eVpYQnNZV05sS0M5VlRsSlBURXhGUkY5TVQwOVFYMGxPUkVWWUwyY3NJSElwT3dvZ0lDQWdjbVYwZFhKdUlHazdDbjBLWm5WdVkzUnBiMjRnU213b2N5a2dld29nSUNBZ2JHVjBJR1VnUFNBaWNISmxZMmx6YVc5dUlDSWdLeUJ6TG5CeVpXTnBjMmx2YmlBcklHQWdabXh2WVhRN0NuQnlaV05wYzJsdmJpQmdJQ3NnY3k1d2NtVmphWE5wYjI0Z0t5QWlJR2x1ZERzaU93b2dJQ0FnY21WMGRYSnVJSE11Y0hKbFkybHphVzl1SUQwOVBTQWlhR2xuYUhBaUlEOGdaU0FyUFNCZ0NpTmtaV1pwYm1VZ1NFbEhTRjlRVWtWRFNWTkpUMDVnSURvZ2N5NXdjbVZqYVhOcGIyNGdQVDA5SUNKdFpXUnBkVzF3SWlBL0lHVWdLejBnWUFvalpHVm1hVzVsSUUxRlJFbFZUVjlRVWtWRFNWTkpUMDVnSURvZ2N5NXdjbVZqYVhOcGIyNGdQVDA5SUNKc2IzZHdJaUFtSmlBb1pTQXJQU0JnQ2lOa1pXWnBibVVnVEU5WFgxQlNSVU5KVTBsUFRtQXBMQ0JsT3dwOUNtWjFibU4wYVc5dUlHOTRLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdJbE5JUVVSUFYwMUJVRjlVV1ZCRlgwSkJVMGxESWpzS0lDQWdJSEpsZEhWeWJpQnpMbk5vWVdSdmQwMWhjRlI1Y0dVZ1BUMDlJRWhqSUQ4Z1pTQTlJQ0pUU0VGRVQxZE5RVkJmVkZsUVJWOVFRMFlpSURvZ2N5NXphR0ZrYjNkTllYQlVlWEJsSUQwOVBTQm1kU0EvSUdVZ1BTQWlVMGhCUkU5WFRVRlFYMVJaVUVWZlVFTkdYMU5QUmxRaUlEb2djeTV6YUdGa2IzZE5ZWEJVZVhCbElEMDlQU0JwY2lBbUppQW9aU0E5SUNKVFNFRkVUMWROUVZCZlZGbFFSVjlXVTAwaUtTd2daVHNLZlFwbWRXNWpkR2x2YmlCaGVDaHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlDSkZUbFpOUVZCZlZGbFFSVjlEVlVKRklqc0tJQ0FnSUdsbUlDaHpMbVZ1ZGsxaGNDa2djM2RwZEdOb0tITXVaVzUyVFdGd1RXOWtaU2w3Q2lBZ0lDQWdJQ0FnWTJGelpTQkNhVG9LSUNBZ0lDQWdJQ0JqWVhObElIcHBPZ29nSUNBZ0lDQWdJQ0FnSUNCbElEMGdJa1ZPVmsxQlVGOVVXVkJGWDBOVlFrVWlPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElGQnlPZ29nSUNBZ0lDQWdJR05oYzJVZ1YzTTZDaUFnSUNBZ0lDQWdJQ0FnSUdVZ1BTQWlSVTVXVFVGUVgxUlpVRVZmUTFWQ1JWOVZWaUk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUdVN0NuMEtablZ1WTNScGIyNGdiSGdvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0FpUlU1V1RVRlFYMDFQUkVWZlVrVkdURVZEVkVsUFRpSTdDaUFnSUNCcFppQW9jeTVsYm5aTllYQXBJSE4zYVhSamFDaHpMbVZ1ZGsxaGNFMXZaR1VwZXdvZ0lDQWdJQ0FnSUdOaGMyVWdlbWs2Q2lBZ0lDQWdJQ0FnWTJGelpTQlhjem9LSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJQ0pGVGxaTlFWQmZUVTlFUlY5U1JVWlNRVU5VU1U5T0lqc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdaVHNLZlFwbWRXNWpkR2x2YmlCamVDaHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlDSkZUbFpOUVZCZlFreEZUa1JKVGtkZlRrOU9SU0k3Q2lBZ0lDQnBaaUFvY3k1bGJuWk5ZWEFwSUhOM2FYUmphQ2h6TG1OdmJXSnBibVVwZXdvZ0lDQWdJQ0FnSUdOaGMyVWdWbk02Q2lBZ0lDQWdJQ0FnSUNBZ0lHVWdQU0FpUlU1V1RVRlFYMEpNUlU1RVNVNUhYMDFWVEZSSlVFeFpJanNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWTJGelpTQkVkVG9LSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJQ0pGVGxaTlFWQmZRa3hGVGtSSlRrZGZUVWxZSWpzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0JHZFRvS0lDQWdJQ0FnSUNBZ0lDQWdaU0E5SUNKRlRsWk5RVkJmUWt4RlRrUkpUa2RmUVVSRUlqc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdaVHNLZlFwbWRXNWpkR2x2YmlCb2VDaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlITXVaMlYwUTI5dWRHVjRkQ2dwTENCeUlEMGdkQzVrWldacGJtVnpMQ0J2SUQwZ2RDNTJaWEowWlhoVGFHRmtaWElzSUdFZ1BTQjBMbVp5WVdkdFpXNTBVMmhoWkdWeUxDQnNJRDBnYjNnb2RDa3NJR01nUFNCaGVDaDBLU3dnYUNBOUlHeDRLSFFwTENCMUlEMGdZM2dvZENrc0lHUWdQU0IwTG1selYyVmlSMHd5SUQ4Z0lpSWdPaUJSWnloMEtTd2daaUE5SUV0bktISXBMQ0J0SUQwZ2FTNWpjbVZoZEdWUWNtOW5jbUZ0S0Nrc0lIZ3NJSFlzSUdjZ1BTQjBMbWRzYzJ4V1pYSnphVzl1SUQ4Z0lpTjJaWEp6YVc5dUlDSWdLeUIwTG1kc2MyeFdaWEp6YVc5dUlDc2dZQXBnSURvZ0lpSTdDaUFnSUNCMExtbHpVbUYzVTJoaFpHVnlUV0YwWlhKcFlXd2dQeUFvZUNBOUlGc0tJQ0FnSUNBZ0lDQm1DaUFnSUNCZExtWnBiSFJsY2loeWNpa3VhbTlwYmloZ0NtQXBMQ0I0TG14bGJtZDBhQ0ErSURBZ0ppWWdLSGdnS3owZ1lBcGdLU3dnZGlBOUlGc0tJQ0FnSUNBZ0lDQmtMQW9nSUNBZ0lDQWdJR1lLSUNBZ0lGMHVabWxzZEdWeUtISnlLUzVxYjJsdUtHQUtZQ2tzSUhZdWJHVnVaM1JvSUQ0Z01DQW1KaUFvZGlBclBTQmdDbUFwS1NBNklDaDRJRDBnV3dvZ0lDQWdJQ0FnSUVwc0tIUXBMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJRk5JUVVSRlVsOU9RVTFGSUNJZ0t5QjBMbk5vWVdSbGNrNWhiV1VzQ2lBZ0lDQWdJQ0FnWml3S0lDQWdJQ0FnSUNCMExtbHVjM1JoYm1OcGJtY2dQeUFpSTJSbFptbHVaU0JWVTBWZlNVNVRWRUZPUTBsT1J5SWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtbHVjM1JoYm1OcGJtZERiMnh2Y2lBL0lDSWpaR1ZtYVc1bElGVlRSVjlKVGxOVVFVNURTVTVIWDBOUFRFOVNJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjM1Z3Y0c5eWRITldaWEowWlhoVVpYaDBkWEpsY3lBL0lDSWpaR1ZtYVc1bElGWkZVbFJGV0Y5VVJWaFVWVkpGVXlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0JOUVZoZlFrOU9SVk1nSWlBcklIUXViV0Y0UW05dVpYTXNDaUFnSUNBZ0lDQWdkQzUxYzJWR2IyY2dKaVlnZEM1bWIyY2dQeUFpSTJSbFptbHVaU0JWVTBWZlJrOUhJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkWE5sUm05bklDWW1JSFF1Wm05blJYaHdNaUEvSUNJalpHVm1hVzVsSUVaUFIxOUZXRkF5SWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YldGd0lEOGdJaU5rWldacGJtVWdWVk5GWDAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtVnVkazFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlGVGxaTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWxiblpOWVhBZ1B5QWlJMlJsWm1sdVpTQWlJQ3NnYUNBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YkdsbmFIUk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZURWxIU0ZSTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWhiMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlCVDAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtVnRhWE56YVhabFRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwVk5TVk5UU1ZaRlRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZblZ0Y0UxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5Q1ZVMVFUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ym05eWJXRnNUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMDVQVWsxQlRFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTV2Y20xaGJFMWhjQ0FtSmlCMExtOWlhbVZqZEZOd1lXTmxUbTl5YldGc1RXRndJRDhnSWlOa1pXWnBibVVnVDBKS1JVTlVVMUJCUTBWZlRrOVNUVUZNVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJtOXliV0ZzVFdGd0lDWW1JSFF1ZEdGdVoyVnVkRk53WVdObFRtOXliV0ZzVFdGd0lEOGdJaU5rWldacGJtVWdWRUZPUjBWT1ZGTlFRVU5GWDA1UFVrMUJURTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1Oc1pXRnlZMjloZEUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5RFRFVkJVa05QUVZSTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRMHhGUVZKRFQwRlVYMUpQVlVkSVRrVlRVMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlEVEVWQlVrTlBRVlJmVGs5U1RVRk1UVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ1ltSUhRdWMzVndjRzl5ZEhOV1pYSjBaWGhVWlhoMGRYSmxjeUEvSUNJalpHVm1hVzVsSUZWVFJWOUVTVk5RVEVGRFJVMUZUbFJOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emNHVmpkV3hoY2sxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFVFVkRWVXhCVWsxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxTlFSVU5WVEVGU1NVNVVSVTVUU1ZSWlRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFVFVkRWVXhCVWtOUFRFOVNUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Y205MVoyaHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFKUFZVZElUa1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtMWxkR0ZzYm1WemMwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOU5SVlJCVEU1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVoYkhCb1lVMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUJURkJJUVUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuUnlZVzV6YldsemMybHZiaUEvSUNJalpHVm1hVzVsSUZWVFJWOVVVa0ZPVTAxSlUxTkpUMDRpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUwY21GdWMyMXBjM05wYjI1TllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlZGSkJUbE5OU1ZOVFNVOU9UVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZEdocFkydHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFSSVNVTkxUa1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTm9aV1Z1UTI5c2IzSk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZVMGhGUlU1RFQweFBVazFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5JUlVWT1VrOVZSMGhPUlZOVFRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkbVZ5ZEdWNFZHRnVaMlZ1ZEhNZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVkVGT1IwVk9WQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblpsY25SbGVFTnZiRzl5Y3lBL0lDSWpaR1ZtYVc1bElGVlRSVjlEVDB4UFVpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuWmxjblJsZUVGc2NHaGhjeUEvSUNJalpHVm1hVzVsSUZWVFJWOURUMHhQVWw5QlRGQklRU0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblpsY25SbGVGVjJjeUEvSUNJalpHVm1hVzVsSUZWVFJWOVZWaUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblYyYzFabGNuUmxlRTl1YkhrZ1B5QWlJMlJsWm1sdVpTQlZWbE5mVmtWU1ZFVllYMDlPVEZraUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bWJHRjBVMmhoWkdsdVp5QS9JQ0lqWkdWbWFXNWxJRVpNUVZSZlUwaEJSRVZFSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzJ0cGJtNXBibWNnUHlBaUkyUmxabWx1WlNCVlUwVmZVMHRKVGs1SlRrY2lJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTFjMlZXWlhKMFpYaFVaWGgwZFhKbElEOGdJaU5rWldacGJtVWdRazlPUlY5VVJWaFVWVkpGSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ylc5eWNHaFVZWEpuWlhSeklEOGdJaU5rWldacGJtVWdWVk5GWDAxUFVsQklWRUZTUjBWVVV5SWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtMXZjbkJvVG05eWJXRnNjeUFtSmlCMExtWnNZWFJUYUdGa2FXNW5JRDA5UFNBaE1TQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TlQxSlFTRTVQVWsxQlRGTWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXRiM0p3YUZSaGNtZGxkSE1nSmlZZ2RDNXBjMWRsWWtkTU1pQS9JQ0lqWkdWbWFXNWxJRTFQVWxCSVZFRlNSMFZVVTE5VVJWaFVWVkpGSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ylc5eWNHaFVZWEpuWlhSeklDWW1JSFF1YVhOWFpXSkhURElnUHlBaUkyUmxabWx1WlNCTlQxSlFTRlJCVWtkRlZGTmZRMDlWVGxRZ0lpQXJJSFF1Ylc5eWNHaFVZWEpuWlhSelEyOTFiblFnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVJ2ZFdKc1pWTnBaR1ZrSUQ4Z0lpTmtaV1pwYm1VZ1JFOVZRa3hGWDFOSlJFVkVJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVabXhwY0ZOcFpHVmtJRDhnSWlOa1pXWnBibVVnUmt4SlVGOVRTVVJGUkNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Ob1lXUnZkMDFoY0VWdVlXSnNaV1FnUHlBaUkyUmxabWx1WlNCVlUwVmZVMGhCUkU5WFRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjMmhoWkc5M1RXRndSVzVoWW14bFpDQS9JQ0lqWkdWbWFXNWxJQ0lnS3lCc0lEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emFYcGxRWFIwWlc1MVlYUnBiMjRnUHlBaUkyUmxabWx1WlNCVlUwVmZVMGxhUlVGVVZFVk9WVUZVU1U5T0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJHOW5ZWEpwZEdodGFXTkVaWEIwYUVKMVptWmxjaUEvSUNJalpHVm1hVzVsSUZWVFJWOU1UMGRFUlZCVVNFSlZSaUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbXh2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJZ0ppWWdkQzV5Wlc1a1pYSmxja1Y0ZEdWdWMybHZia1p5WVdkRVpYQjBhQ0EvSUNJalpHVm1hVzVsSUZWVFJWOU1UMGRFUlZCVVNFSlZSbDlGV0ZRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnSW5WdWFXWnZjbTBnYldGME5DQnRiMlJsYkUxaGRISnBlRHNpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUcxaGREUWdiVzlrWld4V2FXVjNUV0YwY21sNE95SXNDaUFnSUNBZ0lDQWdJblZ1YVdadmNtMGdiV0YwTkNCd2NtOXFaV04wYVc5dVRXRjBjbWw0T3lJc0NpQWdJQ0FnSUNBZ0luVnVhV1p2Y20wZ2JXRjBOQ0IyYVdWM1RXRjBjbWw0T3lJc0NpQWdJQ0FnSUNBZ0luVnVhV1p2Y20wZ2JXRjBNeUJ1YjNKdFlXeE5ZWFJ5YVhnN0lpd0tJQ0FnSUNBZ0lDQWlkVzVwWm05eWJTQjJaV016SUdOaGJXVnlZVkJ2YzJsMGFXOXVPeUlzQ2lBZ0lDQWdJQ0FnSW5WdWFXWnZjbTBnWW05dmJDQnBjMDl5ZEdodlozSmhjR2hwWXpzaUxBb2dJQ0FnSUNBZ0lDSWphV1prWldZZ1ZWTkZYMGxPVTFSQlRrTkpUa2NpTEFvZ0lDQWdJQ0FnSUNJSllYUjBjbWxpZFhSbElHMWhkRFFnYVc1emRHRnVZMlZOWVhSeWFYZzdJaXdLSUNBZ0lDQWdJQ0FpSTJWdVpHbG1JaXdLSUNBZ0lDQWdJQ0FpSTJsbVpHVm1JRlZUUlY5SlRsTlVRVTVEU1U1SFgwTlBURTlTSWl3S0lDQWdJQ0FnSUNBaUNXRjBkSEpwWW5WMFpTQjJaV016SUdsdWMzUmhibU5sUTI5c2IzSTdJaXdLSUNBZ0lDQWdJQ0FpSTJWdVpHbG1JaXdLSUNBZ0lDQWdJQ0FpWVhSMGNtbGlkWFJsSUhabFl6TWdjRzl6YVhScGIyNDdJaXdLSUNBZ0lDQWdJQ0FpWVhSMGNtbGlkWFJsSUhabFl6TWdibTl5YldGc095SXNDaUFnSUNBZ0lDQWdJbUYwZEhKcFluVjBaU0IyWldNeUlIVjJPeUlzQ2lBZ0lDQWdJQ0FnSWlOcFptUmxaaUJWVTBWZlZFRk9SMFZPVkNJc0NpQWdJQ0FnSUNBZ0lnbGhkSFJ5YVdKMWRHVWdkbVZqTkNCMFlXNW5aVzUwT3lJc0NpQWdJQ0FnSUNBZ0lpTmxibVJwWmlJc0NpQWdJQ0FnSUNBZ0lpTnBaaUJrWldacGJtVmtLQ0JWVTBWZlEwOU1UMUpmUVV4UVNFRWdLU0lzQ2lBZ0lDQWdJQ0FnSWdsaGRIUnlhV0oxZEdVZ2RtVmpOQ0JqYjJ4dmNqc2lMQW9nSUNBZ0lDQWdJQ0lqWld4cFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSWdLU0lzQ2lBZ0lDQWdJQ0FnSWdsaGRIUnlhV0oxZEdVZ2RtVmpNeUJqYjJ4dmNqc2lMQW9nSUNBZ0lDQWdJQ0lqWlc1a2FXWWlMQW9nSUNBZ0lDQWdJQ0lqYVdZZ0tDQmtaV1pwYm1Wa0tDQlZVMFZmVFU5U1VFaFVRVkpIUlZSVElDa2dKaVlnSVNCa1pXWnBibVZrS0NCTlQxSlFTRlJCVWtkRlZGTmZWRVZZVkZWU1JTQXBJQ2tpTEFvZ0lDQWdJQ0FnSUNJSllYUjBjbWxpZFhSbElIWmxZek1nYlc5eWNHaFVZWEpuWlhRd095SXNDaUFnSUNBZ0lDQWdJZ2xoZEhSeWFXSjFkR1VnZG1Wak15QnRiM0p3YUZSaGNtZGxkREU3SWl3S0lDQWdJQ0FnSUNBaUNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9WR0Z5WjJWME1qc2lMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doVVlYSm5aWFF6T3lJc0NpQWdJQ0FnSUNBZ0lna2phV1prWldZZ1ZWTkZYMDFQVWxCSVRrOVNUVUZNVXlJc0NpQWdJQ0FnSUNBZ0lna0pZWFIwY21saWRYUmxJSFpsWXpNZ2JXOXljR2hPYjNKdFlXd3dPeUlzQ2lBZ0lDQWdJQ0FnSWdrSllYUjBjbWxpZFhSbElIWmxZek1nYlc5eWNHaE9iM0p0WVd3eE95SXNDaUFnSUNBZ0lDQWdJZ2tKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doT2IzSnRZV3d5T3lJc0NpQWdJQ0FnSUNBZ0lna0pZWFIwY21saWRYUmxJSFpsWXpNZ2JXOXljR2hPYjNKdFlXd3pPeUlzQ2lBZ0lDQWdJQ0FnSWdralpXeHpaU0lzQ2lBZ0lDQWdJQ0FnSWdrSllYUjBjbWxpZFhSbElIWmxZek1nYlc5eWNHaFVZWEpuWlhRME95SXNDaUFnSUNBZ0lDQWdJZ2tKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doVVlYSm5aWFExT3lJc0NpQWdJQ0FnSUNBZ0lna0pZWFIwY21saWRYUmxJSFpsWXpNZ2JXOXljR2hVWVhKblpYUTJPeUlzQ2lBZ0lDQWdJQ0FnSWdrSllYUjBjbWxpZFhSbElIWmxZek1nYlc5eWNHaFVZWEpuWlhRM095SXNDaUFnSUNBZ0lDQWdJZ2tqWlc1a2FXWWlMQW9nSUNBZ0lDQWdJQ0lqWlc1a2FXWWlMQW9nSUNBZ0lDQWdJQ0lqYVdaa1pXWWdWVk5GWDFOTFNVNU9TVTVISWl3S0lDQWdJQ0FnSUNBaUNXRjBkSEpwWW5WMFpTQjJaV00wSUhOcmFXNUpibVJsZURzaUxBb2dJQ0FnSUNBZ0lDSUpZWFIwY21saWRYUmxJSFpsWXpRZ2MydHBibGRsYVdkb2REc2lMQW9nSUNBZ0lDQWdJQ0lqWlc1a2FXWWlMQW9nSUNBZ0lDQWdJR0FLWUFvZ0lDQWdYUzVtYVd4MFpYSW9jbklwTG1wdmFXNG9ZQXBnS1N3Z2RpQTlJRnNLSUNBZ0lDQWdJQ0JrTEFvZ0lDQWdJQ0FnSUVwc0tIUXBMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJRk5JUVVSRlVsOU9RVTFGSUNJZ0t5QjBMbk5vWVdSbGNrNWhiV1VzQ2lBZ0lDQWdJQ0FnWml3S0lDQWdJQ0FnSUNCMExuVnpaVVp2WnlBbUppQjBMbVp2WnlBL0lDSWpaR1ZtYVc1bElGVlRSVjlHVDBjaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MWMyVkdiMmNnSmlZZ2RDNW1iMmRGZUhBeUlEOGdJaU5rWldacGJtVWdSazlIWDBWWVVESWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXRZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YldGMFkyRndJRDhnSWlOa1pXWnBibVVnVlZORlgwMUJWRU5CVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1WdWRrMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUZUbFpOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bGJuWk5ZWEFnUHlBaUkyUmxabWx1WlNBaUlDc2dZeUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVaVzUyVFdGd0lEOGdJaU5rWldacGJtVWdJaUFySUdnZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1WdWRrMWhjQ0EvSUNJalpHVm1hVzVsSUNJZ0t5QjFJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXNhV2RvZEUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TVNVZElWRTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1GdlRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwRlBUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WlcxcGMzTnBkbVZOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUlUxSlUxTkpWa1ZOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1aWRXMXdUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMEpWVFZCTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXViM0p0WVd4TllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlRrOVNUVUZNVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJtOXliV0ZzVFdGd0lDWW1JSFF1YjJKcVpXTjBVM0JoWTJWT2IzSnRZV3hOWVhBZ1B5QWlJMlJsWm1sdVpTQlBRa3BGUTFSVFVFRkRSVjlPVDFKTlFVeE5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV1YjNKdFlXeE5ZWEFnSmlZZ2RDNTBZVzVuWlc1MFUzQmhZMlZPYjNKdFlXeE5ZWEFnUHlBaUkyUmxabWx1WlNCVVFVNUhSVTVVVTFCQlEwVmZUazlTVFVGTVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZMnhsWVhKamIyRjBJRDhnSWlOa1pXWnBibVVnVlZORlgwTk1SVUZTUTA5QlZDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtTnNaV0Z5WTI5aGRFMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOURURVZCVWtOUFFWUk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTB4RlFWSkRUMEZVWDFKUFZVZElUa1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5RFRFVkJVa05QUVZSZlRrOVNUVUZNVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMzQmxZM1ZzWVhKTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlUxQkZRMVZNUVZKTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVRVRVZEVlV4QlVrbE9WRVZPVTBsVVdVMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlUxQkZRMVZNUVZKRFQweFBVazFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5KdmRXZG9ibVZ6YzAxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5U1QxVkhTRTVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXRaWFJoYkc1bGMzTk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZUVVZVUVV4T1JWTlRUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WVd4d2FHRk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRVXhRU0VGTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWhiSEJvWVZSbGMzUWdQeUFpSTJSbFptbHVaU0JWVTBWZlFVeFFTRUZVUlZOVUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGxaVzRnUHlBaUkyUmxabWx1WlNCVlUwVmZVMGhGUlU0aUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emFHVmxia052Ykc5eVRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxTklSVVZPUTA5TVQxSk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVRTRVZGVGxKUFZVZElUa1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuUnlZVzV6YldsemMybHZiaUEvSUNJalpHVm1hVzVsSUZWVFJWOVVVa0ZPVTAxSlUxTkpUMDRpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUwY21GdWMyMXBjM05wYjI1TllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlZGSkJUbE5OU1ZOVFNVOU9UVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZEdocFkydHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFSSVNVTkxUa1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuWmxjblJsZUZSaGJtZGxiblJ6SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMVJCVGtkRlRsUWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTJaWEowWlhoRGIyeHZjbk1nZkh3Z2RDNXBibk4wWVc1amFXNW5RMjlzYjNJZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTA5TVQxSWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTJaWEowWlhoQmJIQm9ZWE1nUHlBaUkyUmxabWx1WlNCVlUwVmZRMDlNVDFKZlFVeFFTRUVpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUyWlhKMFpYaFZkbk1nUHlBaUkyUmxabWx1WlNCVlUwVmZWVllpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUxZG5OV1pYSjBaWGhQYm14NUlEOGdJaU5rWldacGJtVWdWVlpUWDFaRlVsUkZXRjlQVGt4WklpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVozSmhaR2xsYm5STllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlIxSkJSRWxGVGxSTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNW1iR0YwVTJoaFpHbHVaeUEvSUNJalpHVm1hVzVsSUVaTVFWUmZVMGhCUkVWRUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpHOTFZbXhsVTJsa1pXUWdQeUFpSTJSbFptbHVaU0JFVDFWQ1RFVmZVMGxFUlVRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bWJHbHdVMmxrWldRZ1B5QWlJMlJsWm1sdVpTQkdURWxRWDFOSlJFVkVJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjMmhoWkc5M1RXRndSVzVoWW14bFpDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFNFRkVUMWROUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emFHRmtiM2ROWVhCRmJtRmliR1ZrSUQ4Z0lpTmtaV1pwYm1VZ0lpQXJJR3dnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU0EvSUNJalpHVm1hVzVsSUZCU1JVMVZURlJKVUV4SlJVUmZRVXhRU0VFaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1d2FIbHphV05oYkd4NVEyOXljbVZqZEV4cFoyaDBjeUEvSUNJalpHVm1hVzVsSUZCSVdWTkpRMEZNVEZsZlEwOVNVa1ZEVkY5TVNVZElWRk1pSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVzYjJkaGNtbDBhRzFwWTBSbGNIUm9RblZtWm1WeUlEOGdJaU5rWldacGJtVWdWVk5GWDB4UFIwUkZVRlJJUWxWR0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJHOW5ZWEpwZEdodGFXTkVaWEIwYUVKMVptWmxjaUFtSmlCMExuSmxibVJsY21WeVJYaDBaVzV6YVc5dVJuSmhaMFJsY0hSb0lEOGdJaU5rWldacGJtVWdWVk5GWDB4UFIwUkZVRlJJUWxWR1gwVllWQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQW9kQzVsZUhSbGJuTnBiMjVUYUdGa1pYSlVaWGgwZFhKbFRFOUVJSHg4SUhRdVpXNTJUV0Z3S1NBbUppQjBMbkpsYm1SbGNtVnlSWGgwWlc1emFXOXVVMmhoWkdWeVZHVjRkSFZ5WlV4dlpDQS9JQ0lqWkdWbWFXNWxJRlJGV0ZSVlVrVmZURTlFWDBWWVZDSWdPaUFpSWl3S0lDQWdJQ0FnSUNBaWRXNXBabTl5YlNCdFlYUTBJSFpwWlhkTllYUnlhWGc3SWl3S0lDQWdJQ0FnSUNBaWRXNXBabTl5YlNCMlpXTXpJR05oYldWeVlWQnZjMmwwYVc5dU95SXNDaUFnSUNBZ0lDQWdJblZ1YVdadmNtMGdZbTl2YkNCcGMwOXlkR2h2WjNKaGNHaHBZenNpTEFvZ0lDQWdJQ0FnSUhRdWRHOXVaVTFoY0hCcGJtY2dJVDA5SUY5dUlEOGdJaU5rWldacGJtVWdWRTlPUlY5TlFWQlFTVTVISWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZEc5dVpVMWhjSEJwYm1jZ0lUMDlJRjl1SUQ4Z1JtVXVkRzl1WlcxaGNIQnBibWRmY0dGeWMxOW1jbUZuYldWdWRDQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRHOXVaVTFoY0hCcGJtY2dJVDA5SUY5dUlEOGdhbWNvSW5SdmJtVk5ZWEJ3YVc1bklpd2dkQzUwYjI1bFRXRndjR2x1WnlrZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1ScGRHaGxjbWx1WnlBL0lDSWpaR1ZtYVc1bElFUkpWRWhGVWtsT1J5SWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtWnZjbTFoZENBOVBUMGdSMjRnUHlBaUkyUmxabWx1WlNCUFVFRlJWVVVpSURvZ0lpSXNDaUFnSUNBZ0lDQWdSbVV1Wlc1amIyUnBibWR6WDNCaGNuTmZabkpoWjIxbGJuUXNDaUFnSUNBZ0lDQWdkQzV0WVhBZ1B5QkViaWdpYldGd1ZHVjRaV3hVYjB4cGJtVmhjaUlzSUhRdWJXRndSVzVqYjJScGJtY3BJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXRZWFJqWVhBZ1B5QkViaWdpYldGMFkyRndWR1Y0Wld4VWIweHBibVZoY2lJc0lIUXViV0YwWTJGd1JXNWpiMlJwYm1jcElEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bGJuWk5ZWEFnUHlCRWJpZ2laVzUyVFdGd1ZHVjRaV3hVYjB4cGJtVmhjaUlzSUhRdVpXNTJUV0Z3Ulc1amIyUnBibWNwSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYldsemMybDJaVTFoY0NBL0lFUnVLQ0psYldsemMybDJaVTFoY0ZSbGVHVnNWRzlNYVc1bFlYSWlMQ0IwTG1WdGFYTnphWFpsVFdGd1JXNWpiMlJwYm1jcElEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emNHVmpkV3hoY2tOdmJHOXlUV0Z3SUQ4Z1JHNG9Jbk53WldOMWJHRnlRMjlzYjNKTllYQlVaWGhsYkZSdlRHbHVaV0Z5SWl3Z2RDNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd1JXNWpiMlJwYm1jcElEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emFHVmxia052Ykc5eVRXRndJRDhnUkc0b0luTm9aV1Z1UTI5c2IzSk5ZWEJVWlhobGJGUnZUR2x1WldGeUlpd2dkQzV6YUdWbGJrTnZiRzl5VFdGd1JXNWpiMlJwYm1jcElEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1c2FXZG9kRTFoY0NBL0lFUnVLQ0pzYVdkb2RFMWhjRlJsZUdWc1ZHOU1hVzVsWVhJaUxDQjBMbXhwWjJoMFRXRndSVzVqYjJScGJtY3BJRG9nSWlJc0NpQWdJQ0FnSUNBZ0pHY29JbXhwYm1WaGNsUnZUM1YwY0hWMFZHVjRaV3dpTENCMExtOTFkSEIxZEVWdVkyOWthVzVuS1N3S0lDQWdJQ0FnSUNCMExtUmxjSFJvVUdGamEybHVaeUEvSUNJalpHVm1hVzVsSUVSRlVGUklYMUJCUTB0SlRrY2dJaUFySUhRdVpHVndkR2hRWVdOcmFXNW5JRG9nSWlJc0NpQWdJQ0FnSUNBZ1lBcGdDaUFnSUNCZExtWnBiSFJsY2loeWNpa3VhbTlwYmloZ0NtQXBLU3dnYnlBOUlISmhLRzhwTENCdklEMGdWMndvYnl3Z2RDa3NJRzhnUFNCeGJDaHZMQ0IwS1N3Z1lTQTlJSEpoS0dFcExDQmhJRDBnVjJ3b1lTd2dkQ2tzSUdFZ1BTQnhiQ2hoTENCMEtTd2dieUE5SUZoc0tHOHBMQ0JoSUQwZ1dHd29ZU2tzSUhRdWFYTlhaV0pIVERJZ0ppWWdkQzVwYzFKaGQxTm9ZV1JsY2sxaGRHVnlhV0ZzSUNFOVBTQWhNQ0FtSmlBb1p5QTlJR0FqZG1WeWMybHZiaUF6TURBZ1pYTUtZQ3dnZUNBOUlGc0tJQ0FnSUNBZ0lDQWljSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdjMkZ0Y0d4bGNqSkVRWEp5WVhrN0lpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQmhkSFJ5YVdKMWRHVWdhVzRpTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhaaGNubHBibWNnYjNWMElpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjBaWGgwZFhKbE1rUWdkR1Y0ZEhWeVpTSUtJQ0FnSUYwdWFtOXBiaWhnQ21BcElDc2dZQXBnSUNzZ2VDd2dkaUE5SUZzS0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMllYSjVhVzVuSUdsdUlpd0tJQ0FnSUNBZ0lDQjBMbWRzYzJ4V1pYSnphVzl1SUQwOVBTQjRiQ0EvSUNJaUlEb2dJbXhoZVc5MWRDaHNiMk5oZEdsdmJpQTlJREFwSUc5MWRDQm9hV2RvY0NCMlpXTTBJSEJqWDJaeVlXZERiMnh2Y2pzaUxBb2dJQ0FnSUNBZ0lIUXVaMnh6YkZabGNuTnBiMjRnUFQwOUlIaHNJRDhnSWlJZ09pQWlJMlJsWm1sdVpTQm5iRjlHY21GblEyOXNiM0lnY0dOZlpuSmhaME52Ykc5eUlpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQm5iRjlHY21GblJHVndkR2hGV0ZRZ1oyeGZSbkpoWjBSbGNIUm9JaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0IwWlhoMGRYSmxNa1FnZEdWNGRIVnlaU0lzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnZEdWNGRIVnlaVU4xWW1VZ2RHVjRkSFZ5WlNJc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ2RHVjRkSFZ5WlRKRVVISnZhaUIwWlhoMGRYSmxVSEp2YWlJc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ2RHVjRkSFZ5WlRKRVRHOWtSVmhVSUhSbGVIUjFjbVZNYjJRaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21VeVJGQnliMnBNYjJSRldGUWdkR1Y0ZEhWeVpWQnliMnBNYjJRaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21WRGRXSmxURzlrUlZoVUlIUmxlSFIxY21WTWIyUWlMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJSFJsZUhSMWNtVXlSRWR5WVdSRldGUWdkR1Y0ZEhWeVpVZHlZV1FpTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhSbGVIUjFjbVV5UkZCeWIycEhjbUZrUlZoVUlIUmxlSFIxY21WUWNtOXFSM0poWkNJc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ2RHVjRkSFZ5WlVOMVltVkhjbUZrUlZoVUlIUmxlSFIxY21WSGNtRmtJZ29nSUNBZ1hTNXFiMmx1S0dBS1lDa2dLeUJnQ21BZ0t5QjJLVHNLSUNBZ0lHeGxkQ0J3SUQwZ1p5QXJJSGdnS3lCdkxDQmZJRDBnWnlBcklIWWdLeUJoTENCNUlEMGdSMndvYVN3Z016VTJNek1zSUhBcExDQmlJRDBnUjJ3b2FTd2dNelUyTXpJc0lGOHBPd29nSUNBZ2FXWWdLR2t1WVhSMFlXTm9VMmhoWkdWeUtHMHNJSGtwTENCcExtRjBkR0ZqYUZOb1lXUmxjaWh0TENCaUtTd2dkQzVwYm1SbGVEQkJkSFJ5YVdKMWRHVk9ZVzFsSUNFOVBTQjJiMmxrSURBZ1B5QnBMbUpwYm1SQmRIUnlhV0pNYjJOaGRHbHZiaWh0TENBd0xDQjBMbWx1WkdWNE1FRjBkSEpwWW5WMFpVNWhiV1VwSURvZ2RDNXRiM0p3YUZSaGNtZGxkSE1nUFQwOUlDRXdJQ1ltSUdrdVltbHVaRUYwZEhKcFlreHZZMkYwYVc5dUtHMHNJREFzSUNKd2IzTnBkR2x2YmlJcExDQnBMbXhwYm10UWNtOW5jbUZ0S0cwcExDQnpMbVJsWW5WbkxtTm9aV05yVTJoaFpHVnlSWEp5YjNKektTQjdDaUFnSUNBZ0lDQWdiR1YwSUVrZ1BTQnBMbWRsZEZCeWIyZHlZVzFKYm1adlRHOW5LRzBwTG5SeWFXMG9LU3dnYXlBOUlHa3VaMlYwVTJoaFpHVnlTVzVtYjB4dlp5aDVLUzUwY21sdEtDa3NJRUlnUFNCcExtZGxkRk5vWVdSbGNrbHVabTlNYjJjb1lpa3VkSEpwYlNncExDQlFJRDBnSVRBc0lIY2dQU0FoTURzS0lDQWdJQ0FnSUNCcFppQW9hUzVuWlhSUWNtOW5jbUZ0VUdGeVlXMWxkR1Z5S0cwc0lETTFOekUwS1NBOVBUMGdJVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdVQ0E5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJRlpzS0drc0lIa3NJQ0oyWlhKMFpYZ2lLU3dnUkNBOUlGWnNLR2tzSUdJc0lDSm1jbUZuYldWdWRDSXBPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZCeWIyZHlZVzA2SUZOb1lXUmxjaUJGY25KdmNpQWlJQ3NnYVM1blpYUkZjbkp2Y2lncElDc2dJaUF0SUZaQlRFbEVRVlJGWDFOVVFWUlZVeUFpSUNzZ2FTNW5aWFJRY205bmNtRnRVR0Z5WVcxbGRHVnlLRzBzSURNMU56RTFLU0FySUdBS0NsQnliMmR5WVcwZ1NXNW1ieUJNYjJjNklHQWdLeUJKSUNzZ1lBcGdJQ3NnUlNBcklHQUtZQ0FySUVRcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCSklDRTlQU0FpSWlBL0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4UWNtOW5jbUZ0T2lCUWNtOW5jbUZ0SUVsdVptOGdURzluT2lJc0lFa3BJRG9nS0dzZ1BUMDlJQ0lpSUh4OElFSWdQVDA5SUNJaUtTQW1KaUFvZHlBOUlDRXhLVHNLSUNBZ0lDQWdJQ0IzSUNZbUlDaDBhR2x6TG1ScFlXZHViM04wYVdOeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCeWRXNXVZV0pzWlRvZ1VDd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdlozSmhiVXh2WnpvZ1NTd0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNiMmM2SUdzc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtVm1hWGc2SUhnS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4dlp6b2dRaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5WldacGVEb2dkZ29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUNpQWdJQ0JwTG1SbGJHVjBaVk5vWVdSbGNpaDVLU3dnYVM1a1pXeGxkR1ZUYUdGa1pYSW9ZaWs3Q2lBZ0lDQnNaWFFnUVRzS0lDQWdJSFJvYVhNdVoyVjBWVzVwWm05eWJYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnUVNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hCSUQwZ2JtVjNJR0p1S0drc0lHMHBLU3dnUVRzS0lDQWdJSDA3Q2lBZ0lDQnNaWFFnVERzS0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRFRjBkSEpwWW5WMFpYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVENBOVBUMGdkbTlwWkNBd0lDWW1JQ2hNSUQwZ1pYZ29hU3dnYlNrcExDQk1Pd29nSUNBZ2ZTd2dkR2hwY3k1a1pYTjBjbTk1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdiaTV5Wld4bFlYTmxVM1JoZEdWelQyWlFjbTluY21GdEtIUm9hWE1wTENCcExtUmxiR1YwWlZCeWIyZHlZVzBvYlNrc0lIUm9hWE11Y0hKdlozSmhiU0E5SUhadmFXUWdNRHNLSUNBZ0lIMHNJSFJvYVhNdWJtRnRaU0E5SUhRdWMyaGhaR1Z5VG1GdFpTd2dkR2hwY3k1cFpDQTlJRmxuS3lzc0lIUm9hWE11WTJGamFHVkxaWGtnUFNCbExDQjBhR2x6TG5WelpXUlVhVzFsY3lBOUlERXNJSFJvYVhNdWNISnZaM0poYlNBOUlHMHNJSFJvYVhNdWRtVnlkR1Y0VTJoaFpHVnlJRDBnZVN3Z2RHaHBjeTVtY21GbmJXVnVkRk5vWVdSbGNpQTlJR0lzSUhSb2FYTTdDbjBLZG1GeUlIVjRJRDBnTUN3Z1oyZ2dQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSFJvYVhNdWMyaGhaR1Z5UTJGamFHVWdQU0J1WlhjZ1RXRndMQ0IwYUdsekxtMWhkR1Z5YVdGc1EyRmphR1VnUFNCdVpYY2dUV0Z3T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVkbVZ5ZEdWNFUyaGhaR1Z5TENCdUlEMGdaUzVtY21GbmJXVnVkRk5vWVdSbGNpd2dhU0E5SUhSb2FYTXVYMmRsZEZOb1lXUmxjbE4wWVdkbEtIUXBMQ0J5SUQwZ2RHaHBjeTVmWjJWMFUyaGhaR1Z5VTNSaFoyVW9iaWtzSUc4Z1BTQjBhR2x6TGw5blpYUlRhR0ZrWlhKRFlXTm9aVVp2Y2sxaGRHVnlhV0ZzS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdkxtaGhjeWhwS1NBOVBUMGdJVEVnSmlZZ0tHOHVZV1JrS0drcExDQnBMblZ6WldSVWFXMWxjeXNyS1N3Z2J5NW9ZWE1vY2lrZ1BUMDlJQ0V4SUNZbUlDaHZMbUZrWkNoeUtTd2djaTUxYzJWa1ZHbHRaWE1yS3lrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeVpXMXZkbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV0WVhSbGNtbGhiRU5oWTJobExtZGxkQ2hsS1RzS0lDQWdJQ0FnSUNCbWIzSWdLR3hsZENCdUlHOW1JSFFwYmk1MWMyVmtWR2x0WlhNdExTd2diaTUxYzJWa1ZHbHRaWE1nUFQwOUlEQWdKaVlnZEdocGN5NXphR0ZrWlhKRFlXTm9aUzVrWld4bGRHVW9iaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXRjBaWEpwWVd4RFlXTm9aUzVrWld4bGRHVW9aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSV1pYSjBaWGhUYUdGa1pYSkpSQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMmRsZEZOb1lXUmxjbE4wWVdkbEtHVXVkbVZ5ZEdWNFUyaGhaR1Z5S1M1cFpEc0tJQ0FnSUgwS0lDQWdJR2RsZEVaeVlXZHRaVzUwVTJoaFpHVnlTVVFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDluWlhSVGFHRmtaWEpUZEdGblpTaGxMbVp5WVdkdFpXNTBVMmhoWkdWeUtTNXBaRHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6YUdGa1pYSkRZV05vWlM1amJHVmhjaWdwTENCMGFHbHpMbTFoZEdWeWFXRnNRMkZqYUdVdVkyeGxZWElvS1RzS0lDQWdJSDBLSUNBZ0lGOW5aWFJUYUdGa1pYSkRZV05vWlVadmNrMWhkR1Z5YVdGc0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWJXRjBaWEpwWVd4RFlXTm9aVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVvWVhNb1pTa2dQVDA5SUNFeElDWW1JSFF1YzJWMEtHVXNJRzVsZHlCVFpYUXBMQ0IwTG1kbGRDaGxLVHNLSUNBZ0lIMEtJQ0FnSUY5blpYUlRhR0ZrWlhKVGRHRm5aU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbk5vWVdSbGNrTmhZMmhsT3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbWhoY3lobEtTQTlQVDBnSVRFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0J1WlhjZ2VHZzdDaUFnSUNBZ0lDQWdJQ0FnSUhRdWMyVjBLR1VzSUc0cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNW5aWFFvWlNrN0NpQWdJQ0I5Q24wc0lIaG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxtbGtJRDBnZFhnckt5d2dkR2hwY3k1MWMyVmtWR2x0WlhNZ1BTQXdPd29nSUNBZ2ZRcDlPd3BtZFc1amRHbHZiaUJrZUNoekxDQmxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNCc1pYUWdZU0E5SUc1bGR5QktjeXdnYkNBOUlHNWxkeUJuYUN3Z1l5QTlJRnRkTENCb0lEMGdhUzVwYzFkbFlrZE1NaXdnZFNBOUlHa3ViRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2l3Z1pDQTlJR2t1Wm14dllYUldaWEowWlhoVVpYaDBkWEpsY3l3Z1ppQTlJR2t1YldGNFZtVnlkR1Y0Vlc1cFptOXliWE1zSUcwZ1BTQnBMblpsY25SbGVGUmxlSFIxY21WekxDQjRJRDBnYVM1d2NtVmphWE5wYjI0c0lIWWdQU0I3Q2lBZ0lDQWdJQ0FnVFdWemFFUmxjSFJvVFdGMFpYSnBZV3c2SUNKa1pYQjBhQ0lzQ2lBZ0lDQWdJQ0FnVFdWemFFUnBjM1JoYm1ObFRXRjBaWEpwWVd3NklDSmthWE4wWVc1alpWSkhRa0VpTEFvZ0lDQWdJQ0FnSUUxbGMyaE9iM0p0WVd4TllYUmxjbWxoYkRvZ0ltNXZjbTFoYkNJc0NpQWdJQ0FnSUNBZ1RXVnphRUpoYzJsalRXRjBaWEpwWVd3NklDSmlZWE5wWXlJc0NpQWdJQ0FnSUNBZ1RXVnphRXhoYldKbGNuUk5ZWFJsY21saGJEb2dJbXhoYldKbGNuUWlMQW9nSUNBZ0lDQWdJRTFsYzJoUWFHOXVaMDFoZEdWeWFXRnNPaUFpY0dodmJtY2lMQW9nSUNBZ0lDQWdJRTFsYzJoVWIyOXVUV0YwWlhKcFlXdzZJQ0owYjI5dUlpd0tJQ0FnSUNBZ0lDQk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiRG9nSW5Cb2VYTnBZMkZzSWl3S0lDQWdJQ0FnSUNCTlpYTm9VR2g1YzJsallXeE5ZWFJsY21saGJEb2dJbkJvZVhOcFkyRnNJaXdLSUNBZ0lDQWdJQ0JOWlhOb1RXRjBZMkZ3VFdGMFpYSnBZV3c2SUNKdFlYUmpZWEFpTEFvZ0lDQWdJQ0FnSUV4cGJtVkNZWE5wWTAxaGRHVnlhV0ZzT2lBaVltRnphV01pTEFvZ0lDQWdJQ0FnSUV4cGJtVkVZWE5vWldSTllYUmxjbWxoYkRvZ0ltUmhjMmhsWkNJc0NpQWdJQ0FnSUNBZ1VHOXBiblJ6VFdGMFpYSnBZV3c2SUNKd2IybHVkSE1pTEFvZ0lDQWdJQ0FnSUZOb1lXUnZkMDFoZEdWeWFXRnNPaUFpYzJoaFpHOTNJaXdLSUNBZ0lDQWdJQ0JUY0hKcGRHVk5ZWFJsY21saGJEb2dJbk53Y21sMFpTSUtJQ0FnSUgwN0NpQWdJQ0JtZFc1amRHbHZiaUJuS0hjcElIc0tJQ0FnSUNBZ0lDQnNaWFFnUkNBOUlIY3VjMnRsYkdWMGIyNHVZbTl1WlhNN0NpQWdJQ0FnSUNBZ2FXWWdLR1FwSUhKbGRIVnliaUF4TURJME93b2dJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0JOWVhSb0xtWnNiMjl5S0NobUlDMGdNakFwSUM4Z05Da3NJRThnUFNCTllYUm9MbTFwYmloR0xDQkVMbXhsYm1kMGFDazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJQSUR3Z1JDNXNaVzVuZEdnZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlRhMlZzWlhSdmJpQm9ZWE1nSWlBcklFUXViR1Z1WjNSb0lDc2dJaUJpYjI1bGN5NGdWR2hwY3lCSFVGVWdjM1Z3Y0c5eWRITWdJaUFySUU4Z0t5QWlMaUlwTENBd0tTQTZJRTg3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2NDaDNLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFVTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIY2dKaVlnZHk1cGMxUmxlSFIxY21VZ1B5QkZJRDBnZHk1bGJtTnZaR2x1WnlBNklIY2dKaVlnZHk1cGMxZGxZa2RNVW1WdVpHVnlWR0Z5WjJWMElEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFFjbTluY21GdGN5NW5aWFJVWlhoMGRYSmxSVzVqYjJScGJtZEdjbTl0VFdGd09pQmtiMjRuZENCMWMyVWdjbVZ1WkdWeUlIUmhjbWRsZEhNZ1lYTWdkR1Y0ZEhWeVpYTXVJRlZ6WlNCMGFHVnBjaUF1ZEdWNGRIVnlaU0J3Y205d1pYSjBlU0JwYm5OMFpXRmtMaUlwTENCRklEMGdkeTUwWlhoMGRYSmxMbVZ1WTI5a2FXNW5LU0E2SUVVZ1BTQk9kQ3dnYUNBbUppQjNJQ1ltSUhjdWFYTlVaWGgwZFhKbElDWW1JSGN1Wm05eWJXRjBJRDA5UFNCamRDQW1KaUIzTG5SNWNHVWdQVDA5SUhKdUlDWW1JSGN1Wlc1amIyUnBibWNnUFQwOUlFOXBJQ1ltSUNoRklEMGdUblFwTENCRk93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdYeWgzTENCRkxDQkVMQ0JWTENCR0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUU4Z1BTQlZMbVp2Wnl3Z2JtVWdQU0IzTG1selRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2dQeUJWTG1WdWRtbHliMjV0Wlc1MElEb2diblZzYkN3Z1kyVWdQU0FvZHk1cGMwMWxjMmhUZEdGdVpHRnlaRTFoZEdWeWFXRnNJRDhnZENBNklHVXBMbWRsZENoM0xtVnVkazFoY0NCOGZDQnVaU2tzSUZZZ1BTQjJXM2N1ZEhsd1pWMHNJRmNnUFNCR0xtbHpVMnRwYm01bFpFMWxjMmdnUHlCbktFWXBJRG9nTURzS0lDQWdJQ0FnSUNCM0xuQnlaV05wYzJsdmJpQWhQVDBnYm5Wc2JDQW1KaUFvZUNBOUlHa3VaMlYwVFdGNFVISmxZMmx6YVc5dUtIY3VjSEpsWTJsemFXOXVLU3dnZUNBaFBUMGdkeTV3Y21WamFYTnBiMjRnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZCeWIyZHlZVzB1WjJWMFVHRnlZVzFsZEdWeWN6b2lMQ0IzTG5CeVpXTnBjMmx2Yml3Z0ltNXZkQ0J6ZFhCd2IzSjBaV1FzSUhWemFXNW5JaXdnZUN3Z0ltbHVjM1JsWVdRdUlpa3BPd29nSUNBZ0lDQWdJR3hsZENCb1pTd2diR1VzSUdabExDQkNaVHNLSUNBZ0lDQWdJQ0JwWmlBb1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlR1VnUFNCeGRGdFdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FHVWdQU0I0WlM1MlpYSjBaWGhUYUdGa1pYSXNJR3hsSUQwZ2VHVXVabkpoWjIxbGJuUlRhR0ZrWlhJN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdobElEMGdkeTUyWlhKMFpYaFRhR0ZrWlhJc0lHeGxJRDBnZHk1bWNtRm5iV1Z1ZEZOb1lXUmxjaXdnYkM1MWNHUmhkR1VvZHlrc0lHWmxJRDBnYkM1blpYUldaWEowWlhoVGFHRmtaWEpKUkNoM0tTd2dRbVVnUFNCc0xtZGxkRVp5WVdkdFpXNTBVMmhoWkdWeVNVUW9keWs3Q2lBZ0lDQWdJQ0FnYkdWMElGa2dQU0J6TG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwTENCRFpTQTlJSGN1WVd4d2FHRlVaWE4wSUQ0Z01Dd2dlV1VnUFNCM0xtTnNaV0Z5WTI5aGRDQStJREE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FYTlhaV0pIVERJNklHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUhOb1lXUmxja2xFT2lCV0xBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGa1pYSk9ZVzFsT2lCM0xuUjVjR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nYUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQnNaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1hVzVsY3pvZ2R5NWtaV1pwYm1WekxBb2dJQ0FnSUNBZ0lDQWdJQ0JqZFhOMGIyMVdaWEowWlhoVGFHRmtaWEpKUkRvZ1ptVXNDaUFnSUNBZ0lDQWdJQ0FnSUdOMWMzUnZiVVp5WVdkdFpXNTBVMmhoWkdWeVNVUTZJRUpsTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBjMUpoZDFOb1lXUmxjazFoZEdWeWFXRnNPaUIzTG1selVtRjNVMmhoWkdWeVRXRjBaWEpwWVd3Z1BUMDlJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQm5iSE5zVm1WeWMybHZiam9nZHk1bmJITnNWbVZ5YzJsdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKbFkybHphVzl1T2lCNExBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm5OMFlXNWphVzVuT2lCR0xtbHpTVzV6ZEdGdVkyVmtUV1Z6YUNBOVBUMGdJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHVjM1JoYm1OcGJtZERiMnh2Y2pvZ1JpNXBjMGx1YzNSaGJtTmxaRTFsYzJnZ1BUMDlJQ0V3SUNZbUlFWXVhVzV6ZEdGdVkyVkRiMnh2Y2lBaFBUMGdiblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdjM1Z3Y0c5eWRITldaWEowWlhoVVpYaDBkWEpsY3pvZ2JTd0tJQ0FnSUNBZ0lDQWdJQ0FnYjNWMGNIVjBSVzVqYjJScGJtYzZJRmtnSVQwOUlHNTFiR3dnUHlCd0tGa3VkR1Y0ZEhWeVpTa2dPaUJ6TG05MWRIQjFkRVZ1WTI5a2FXNW5MQW9nSUNBZ0lDQWdJQ0FnSUNCdFlYQTZJQ0VoZHk1dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUcxaGNFVnVZMjlrYVc1bk9pQndLSGN1YldGd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMFkyRndPaUFoSVhjdWJXRjBZMkZ3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnRZWFJqWVhCRmJtTnZaR2x1WnpvZ2NDaDNMbTFoZEdOaGNDa3NDaUFnSUNBZ0lDQWdJQ0FnSUdWdWRrMWhjRG9nSVNGalpTd0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1MlRXRndUVzlrWlRvZ1kyVWdKaVlnWTJVdWJXRndjR2x1Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdaVzUyVFdGd1JXNWpiMlJwYm1jNklIQW9ZMlVwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxiblpOWVhCRGRXSmxWVlk2SUNFaFkyVWdKaVlnS0dObExtMWhjSEJwYm1jZ1BUMDlJRkJ5SUh4OElHTmxMbTFoY0hCcGJtY2dQVDA5SUZkektTd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdsbmFIUk5ZWEE2SUNFaGR5NXNhV2RvZEUxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdsbmFIUk5ZWEJGYm1OdlpHbHVaem9nY0NoM0xteHBaMmgwVFdGd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVc5TllYQTZJQ0VoZHk1aGIwMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pXMXBjM05wZG1WTllYQTZJQ0VoZHk1bGJXbHpjMmwyWlUxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnWlcxcGMzTnBkbVZOWVhCRmJtTnZaR2x1WnpvZ2NDaDNMbVZ0YVhOemFYWmxUV0Z3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdZblZ0Y0UxaGNEb2dJU0YzTG1KMWJYQk5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNXZjbTFoYkUxaGNEb2dJU0YzTG01dmNtMWhiRTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOMFUzQmhZMlZPYjNKdFlXeE5ZWEE2SUhjdWJtOXliV0ZzVFdGd1ZIbHdaU0E5UFQwZ2VtUXNDaUFnSUNBZ0lDQWdJQ0FnSUhSaGJtZGxiblJUY0dGalpVNXZjbTFoYkUxaGNEb2dkeTV1YjNKdFlXeE5ZWEJVZVhCbElEMDlQU0JJYVN3S0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBPaUI1WlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBUV0Z3T2lCNVpTQW1KaUFoSVhjdVkyeGxZWEpqYjJGMFRXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCamJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQTZJSGxsSUNZbUlDRWhkeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVkyOWhkRTV2Y20xaGJFMWhjRG9nZVdVZ0ppWWdJU0YzTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aFkyVnRaVzUwVFdGd09pQWhJWGN1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCeWIzVm5hRzVsYzNOTllYQTZJQ0VoZHk1eWIzVm5hRzVsYzNOTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUcxbGRHRnNibVZ6YzAxaGNEb2dJU0YzTG0xbGRHRnNibVZ6YzAxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYzNCbFkzVnNZWEpOWVhBNklDRWhkeTV6Y0dWamRXeGhjazFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEE2SUNFaGR5NXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKRGIyeHZjazFoY0RvZ0lTRjNMbk53WldOMWJHRnlRMjlzYjNKTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhOd1pXTjFiR0Z5UTI5c2IzSk5ZWEJGYm1OdlpHbHVaem9nY0NoM0xuTndaV04xYkdGeVEyOXNiM0pOWVhBcExBb2dJQ0FnSUNBZ0lDQWdJQ0JoYkhCb1lVMWhjRG9nSVNGM0xtRnNjR2hoVFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JoYkhCb1lWUmxjM1E2SUVObExBb2dJQ0FnSUNBZ0lDQWdJQ0JuY21Ga2FXVnVkRTFoY0RvZ0lTRjNMbWR5WVdScFpXNTBUV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR1ZsYmpvZ2R5NXphR1ZsYmlBK0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVRMjlzYjNKTllYQTZJQ0VoZHk1emFHVmxia052Ykc5eVRXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCemFHVmxia052Ykc5eVRXRndSVzVqYjJScGJtYzZJSEFvZHk1emFHVmxia052Ykc5eVRXRndLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzVTYjNWbmFHNWxjM05OWVhBNklDRWhkeTV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk50YVhOemFXOXVPaUIzTG5SeVlXNXpiV2x6YzJsdmJpQStJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6YldsemMybHZiazFoY0RvZ0lTRjNMblJ5WVc1emJXbHpjMmx2YmsxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocFkydHVaWE56VFdGd09pQWhJWGN1ZEdocFkydHVaWE56VFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JqYjIxaWFXNWxPaUIzTG1OdmJXSnBibVVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJsZUZSaGJtZGxiblJ6T2lBaElYY3VibTl5YldGc1RXRndJQ1ltSUNFaFJpNW5aVzl0WlhSeWVTQW1KaUFoSVVZdVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGN5NTBZVzVuWlc1MExBb2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaERiMnh2Y25NNklIY3VkbVZ5ZEdWNFEyOXNiM0p6TEFvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoQmJIQm9ZWE02SUhjdWRtVnlkR1Y0UTI5c2IzSnpJRDA5UFNBaE1DQW1KaUFoSVVZdVoyVnZiV1YwY25rZ0ppWWdJU0ZHTG1kbGIyMWxkSEo1TG1GMGRISnBZblYwWlhNdVkyOXNiM0lnSmlZZ1JpNW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpMbU52Ykc5eUxtbDBaVzFUYVhwbElEMDlQU0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoVmRuTTZJQ0VoZHk1dFlYQWdmSHdnSVNGM0xtSjFiWEJOWVhBZ2ZId2dJU0YzTG01dmNtMWhiRTFoY0NCOGZDQWhJWGN1YzNCbFkzVnNZWEpOWVhBZ2ZId2dJU0YzTG1Gc2NHaGhUV0Z3SUh4OElDRWhkeTVsYldsemMybDJaVTFoY0NCOGZDQWhJWGN1Y205MVoyaHVaWE56VFdGd0lIeDhJQ0VoZHk1dFpYUmhiRzVsYzNOTllYQWdmSHdnSVNGM0xtTnNaV0Z5WTI5aGRFMWhjQ0I4ZkNBaElYY3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUh4OElDRWhkeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnZkh3Z0lTRjNMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQjhmQ0FoSVhjdWRISmhibk50YVhOemFXOXVUV0Z3SUh4OElDRWhkeTUwYUdsamEyNWxjM05OWVhBZ2ZId2dJU0YzTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0lIeDhJQ0VoZHk1emNHVmpkV3hoY2tOdmJHOXlUV0Z3SUh4OElDRWhkeTV6YUdWbGJrTnZiRzl5VFdGd0lIeDhJQ0VoZHk1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdkWFp6Vm1WeWRHVjRUMjVzZVRvZ0lTZ2hJWGN1YldGd0lIeDhJQ0VoZHk1aWRXMXdUV0Z3SUh4OElDRWhkeTV1YjNKdFlXeE5ZWEFnZkh3Z0lTRjNMbk53WldOMWJHRnlUV0Z3SUh4OElDRWhkeTVoYkhCb1lVMWhjQ0I4ZkNBaElYY3VaVzFwYzNOcGRtVk5ZWEFnZkh3Z0lTRjNMbkp2ZFdkb2JtVnpjMDFoY0NCOGZDQWhJWGN1YldWMFlXeHVaWE56VFdGd0lIeDhJQ0VoZHk1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ2ZId2dkeTUwY21GdWMyMXBjM05wYjI0Z1BpQXdJSHg4SUNFaGR5NTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ2ZId2dJU0YzTG5Sb2FXTnJibVZ6YzAxaGNDQjhmQ0FoSVhjdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQWdmSHdnSVNGM0xuTndaV04xYkdGeVEyOXNiM0pOWVhBZ2ZId2dkeTV6YUdWbGJpQStJREFnZkh3Z0lTRjNMbk5vWldWdVEyOXNiM0pOWVhBZ2ZId2dJU0YzTG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3S1NBbUppQWhJWGN1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCbWIyYzZJQ0VoVHl3S0lDQWdJQ0FnSUNBZ0lDQWdkWE5sUm05bk9pQjNMbVp2Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdabTluUlhod01qb2dUeUFtSmlCUExtbHpSbTluUlhod01pd0tJQ0FnSUNBZ0lDQWdJQ0FnWm14aGRGTm9ZV1JwYm1jNklDRWhkeTVtYkdGMFUyaGhaR2x1Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdjMmw2WlVGMGRHVnVkV0YwYVc5dU9pQjNMbk5wZW1WQmRIUmxiblZoZEdsdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYkc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNqb2dkU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MydHBibTVwYm1jNklFWXVhWE5UYTJsdWJtVmtUV1Z6YUNBOVBUMGdJVEFnSmlZZ1Z5QStJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhlRUp2Ym1Wek9pQlhMQW9nSUNBZ0lDQWdJQ0FnSUNCMWMyVldaWEowWlhoVVpYaDBkWEpsT2lCa0xBb2dJQ0FnSUNBZ0lDQWdJQ0J0YjNKd2FGUmhjbWRsZEhNNklDRWhSaTVuWlc5dFpYUnllU0FtSmlBaElVWXVaMlZ2YldWMGNua3ViVzl5Y0doQmRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0J0YjNKd2FFNXZjbTFoYkhNNklDRWhSaTVuWlc5dFpYUnllU0FtSmlBaElVWXVaMlZ2YldWMGNua3ViVzl5Y0doQmRIUnlhV0oxZEdWekxtNXZjbTFoYkN3S0lDQWdJQ0FnSUNBZ0lDQWdiVzl5Y0doVVlYSm5aWFJ6UTI5MWJuUTZJQ0VoUmk1blpXOXRaWFJ5ZVNBbUppQWhJVVl1WjJWdmJXVjBjbmt1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVJRDhnUmk1blpXOXRaWFJ5ZVM1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjR1YkdWdVozUm9JRG9nTUN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0UkdseVRHbG5hSFJ6T2lCRkxtUnBjbVZqZEdsdmJtRnNMbXhsYm1kMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHOXBiblJNYVdkb2RITTZJRVV1Y0c5cGJuUXViR1Z1WjNSb0xBb2dJQ0FnSUNBZ0lDQWdJQ0J1ZFcxVGNHOTBUR2xuYUhSek9pQkZMbk53YjNRdWJHVnVaM1JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFTWldOMFFYSmxZVXhwWjJoMGN6b2dSUzV5WldOMFFYSmxZUzVzWlc1bmRHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVaGxiV2xNYVdkb2RITTZJRVV1YUdWdGFTNXNaVzVuZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVScGNreHBaMmgwVTJoaFpHOTNjem9nUlM1a2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNDNXNaVzVuZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCdmFXNTBUR2xuYUhSVGFHRmtiM2R6T2lCRkxuQnZhVzUwVTJoaFpHOTNUV0Z3TG14bGJtZDBhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVM0J2ZEV4cFoyaDBVMmhoWkc5M2N6b2dSUzV6Y0c5MFUyaGhaRzkzVFdGd0xteGxibWQwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJ4cGNIQnBibWRRYkdGdVpYTTZJRzh1Ym5WdFVHeGhibVZ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFEYkdsd1NXNTBaWEp6WldOMGFXOXVPaUJ2TG01MWJVbHVkR1Z5YzJWamRHbHZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXliV0YwT2lCM0xtWnZjbTFoZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaR2wwYUdWeWFXNW5PaUIzTG1ScGRHaGxjbWx1Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1RXRndSVzVoWW14bFpEb2djeTV6YUdGa2IzZE5ZWEF1Wlc1aFlteGxaQ0FtSmlCRUxteGxibWQwYUNBK0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDFoY0ZSNWNHVTZJSE11YzJoaFpHOTNUV0Z3TG5SNWNHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3YVc1bk9pQjNMblJ2Ym1WTllYQndaV1FnUHlCekxuUnZibVZOWVhCd2FXNW5JRG9nWDI0c0NpQWdJQ0FnSUNBZ0lDQWdJSEJvZVhOcFkyRnNiSGxEYjNKeVpXTjBUR2xuYUhSek9pQnpMbkJvZVhOcFkyRnNiSGxEYjNKeVpXTjBUR2xuYUhSekxBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0U2SUhjdWNISmxiWFZzZEdsd2JHbGxaRUZzY0doaExBb2dJQ0FnSUNBZ0lDQWdJQ0JrYjNWaWJHVlRhV1JsWkRvZ2R5NXphV1JsSUQwOVBTQkRhU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pteHBjRk5wWkdWa09pQjNMbk5wWkdVZ1BUMDlJR2wwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUZCaFkydHBibWM2SUhjdVpHVndkR2hRWVdOcmFXNW5JQ0U5UFNCMmIybGtJREFnUHlCM0xtUmxjSFJvVUdGamEybHVaeUE2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVEQkJkSFJ5YVdKMWRHVk9ZVzFsT2lCM0xtbHVaR1Y0TUVGMGRISnBZblYwWlU1aGJXVXNDaUFnSUNBZ0lDQWdJQ0FnSUdWNGRHVnVjMmx2YmtSbGNtbDJZWFJwZG1Wek9pQjNMbVY0ZEdWdWMybHZibk1nSmlZZ2R5NWxlSFJsYm5OcGIyNXpMbVJsY21sMllYUnBkbVZ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQmxlSFJsYm5OcGIyNUdjbUZuUkdWd2RHZzZJSGN1WlhoMFpXNXphVzl1Y3lBbUppQjNMbVY0ZEdWdWMybHZibk11Wm5KaFowUmxjSFJvTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxlSFJsYm5OcGIyNUVjbUYzUW5WbVptVnljem9nZHk1bGVIUmxibk5wYjI1eklDWW1JSGN1WlhoMFpXNXphVzl1Y3k1a2NtRjNRblZtWm1WeWN5d0tJQ0FnSUNBZ0lDQWdJQ0FnWlhoMFpXNXphVzl1VTJoaFpHVnlWR1Y0ZEhWeVpVeFBSRG9nZHk1bGVIUmxibk5wYjI1eklDWW1JSGN1WlhoMFpXNXphVzl1Y3k1emFHRmtaWEpVWlhoMGRYSmxURTlFTEFvZ0lDQWdJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJrWnlZV2RFWlhCMGFEb2dhQ0I4ZkNCdUxtaGhjeWdpUlZoVVgyWnlZV2RmWkdWd2RHZ2lLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhKRmVIUmxibk5wYjI1RWNtRjNRblZtWm1WeWN6b2dhQ0I4ZkNCdUxtaGhjeWdpVjBWQ1IweGZaSEpoZDE5aWRXWm1aWEp6SWlrc0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlSWGgwWlc1emFXOXVVMmhoWkdWeVZHVjRkSFZ5WlV4dlpEb2dhQ0I4ZkNCdUxtaGhjeWdpUlZoVVgzTm9ZV1JsY2w5MFpYaDBkWEpsWDJ4dlpDSXBMQW9nSUNBZ0lDQWdJQ0FnSUNCamRYTjBiMjFRY205bmNtRnRRMkZqYUdWTFpYazZJSGN1WTNWemRHOXRVSEp2WjNKaGJVTmhZMmhsUzJWNUtDa0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZVNoM0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUVVZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JwWmlBb2R5NXphR0ZrWlhKSlJDQS9JRVV1Y0hWemFDaDNMbk5vWVdSbGNrbEVLU0E2SUNoRkxuQjFjMmdvZHk1amRYTjBiMjFXWlhKMFpYaFRhR0ZrWlhKSlJDa3NJRVV1Y0hWemFDaDNMbU4xYzNSdmJVWnlZV2R0Wlc1MFUyaGhaR1Z5U1VRcEtTd2dkeTVrWldacGJtVnpJQ0U5UFNCMmIybGtJREFwSUdadmNpaHNaWFFnUkNCcGJpQjNMbVJsWm1sdVpYTXBSUzV3ZFhOb0tFUXBMQ0JGTG5CMWMyZ29keTVrWldacGJtVnpXMFJkS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZHk1cGMxSmhkMU5vWVdSbGNrMWhkR1Z5YVdGc0lEMDlQU0FoTVNBbUppQW9ZaWhGTENCM0tTd2dRU2hGTENCM0tTd2dSUzV3ZFhOb0tITXViM1YwY0hWMFJXNWpiMlJwYm1jcEtTd2dSUzV3ZFhOb0tIY3VZM1Z6ZEc5dFVISnZaM0poYlVOaFkyaGxTMlY1S1N3Z1JTNXFiMmx1S0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmlLSGNzSUVVcElIc0tJQ0FnSUNBZ0lDQjNMbkIxYzJnb1JTNXdjbVZqYVhOcGIyNHBMQ0IzTG5CMWMyZ29SUzV2ZFhSd2RYUkZibU52WkdsdVp5a3NJSGN1Y0hWemFDaEZMbTFoY0VWdVkyOWthVzVuS1N3Z2R5NXdkWE5vS0VVdWJXRjBZMkZ3Ulc1amIyUnBibWNwTENCM0xuQjFjMmdvUlM1bGJuWk5ZWEJOYjJSbEtTd2dkeTV3ZFhOb0tFVXVaVzUyVFdGd1JXNWpiMlJwYm1jcExDQjNMbkIxYzJnb1JTNXNhV2RvZEUxaGNFVnVZMjlrYVc1bktTd2dkeTV3ZFhOb0tFVXVaVzFwYzNOcGRtVk5ZWEJGYm1OdlpHbHVaeWtzSUhjdWNIVnphQ2hGTG1OdmJXSnBibVVwTENCM0xuQjFjMmdvUlM1MlpYSjBaWGhWZG5NcExDQjNMbkIxYzJnb1JTNW1iMmRGZUhBeUtTd2dkeTV3ZFhOb0tFVXVjMmw2WlVGMGRHVnVkV0YwYVc5dUtTd2dkeTV3ZFhOb0tFVXViV0Y0UW05dVpYTXBMQ0IzTG5CMWMyZ29SUzV0YjNKd2FGUmhjbWRsZEhORGIzVnVkQ2tzSUhjdWNIVnphQ2hGTG01MWJVUnBja3hwWjJoMGN5a3NJSGN1Y0hWemFDaEZMbTUxYlZCdmFXNTBUR2xuYUhSektTd2dkeTV3ZFhOb0tFVXViblZ0VTNCdmRFeHBaMmgwY3lrc0lIY3VjSFZ6YUNoRkxtNTFiVWhsYldsTWFXZG9kSE1wTENCM0xuQjFjMmdvUlM1dWRXMVNaV04wUVhKbFlVeHBaMmgwY3lrc0lIY3VjSFZ6YUNoRkxtNTFiVVJwY2t4cFoyaDBVMmhoWkc5M2N5a3NJSGN1Y0hWemFDaEZMbTUxYlZCdmFXNTBUR2xuYUhSVGFHRmtiM2R6S1N3Z2R5NXdkWE5vS0VVdWJuVnRVM0J2ZEV4cFoyaDBVMmhoWkc5M2N5a3NJSGN1Y0hWemFDaEZMbk5vWVdSdmQwMWhjRlI1Y0dVcExDQjNMbkIxYzJnb1JTNTBiMjVsVFdGd2NHbHVaeWtzSUhjdWNIVnphQ2hGTG01MWJVTnNhWEJ3YVc1blVHeGhibVZ6S1N3Z2R5NXdkWE5vS0VVdWJuVnRRMnhwY0VsdWRHVnljMlZqZEdsdmJpa3NJSGN1Y0hWemFDaEZMbVp2Y20xaGRDa3NJSGN1Y0hWemFDaEZMbk53WldOMWJHRnlRMjlzYjNKTllYQkZibU52WkdsdVp5a3NJSGN1Y0hWemFDaEZMbk5vWldWdVEyOXNiM0pOWVhCRmJtTnZaR2x1WnlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkJLSGNzSUVVcElIc0tJQ0FnSUNBZ0lDQmhMbVJwYzJGaWJHVkJiR3dvS1N3Z1JTNXBjMWRsWWtkTU1pQW1KaUJoTG1WdVlXSnNaU2d3S1N3Z1JTNXpkWEJ3YjNKMGMxWmxjblJsZUZSbGVIUjFjbVZ6SUNZbUlHRXVaVzVoWW14bEtERXBMQ0JGTG1sdWMzUmhibU5wYm1jZ0ppWWdZUzVsYm1GaWJHVW9NaWtzSUVVdWFXNXpkR0Z1WTJsdVowTnZiRzl5SUNZbUlHRXVaVzVoWW14bEtETXBMQ0JGTG0xaGNDQW1KaUJoTG1WdVlXSnNaU2cwS1N3Z1JTNXRZWFJqWVhBZ0ppWWdZUzVsYm1GaWJHVW9OU2tzSUVVdVpXNTJUV0Z3SUNZbUlHRXVaVzVoWW14bEtEWXBMQ0JGTG1WdWRrMWhjRU4xWW1WVlZpQW1KaUJoTG1WdVlXSnNaU2czS1N3Z1JTNXNhV2RvZEUxaGNDQW1KaUJoTG1WdVlXSnNaU2c0S1N3Z1JTNWhiMDFoY0NBbUppQmhMbVZ1WVdKc1pTZzVLU3dnUlM1bGJXbHpjMmwyWlUxaGNDQW1KaUJoTG1WdVlXSnNaU2d4TUNrc0lFVXVZblZ0Y0UxaGNDQW1KaUJoTG1WdVlXSnNaU2d4TVNrc0lFVXVibTl5YldGc1RXRndJQ1ltSUdFdVpXNWhZbXhsS0RFeUtTd2dSUzV2WW1wbFkzUlRjR0ZqWlU1dmNtMWhiRTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hNeWtzSUVVdWRHRnVaMlZ1ZEZOd1lXTmxUbTl5YldGc1RXRndJQ1ltSUdFdVpXNWhZbXhsS0RFMEtTd2dSUzVqYkdWaGNtTnZZWFFnSmlZZ1lTNWxibUZpYkdVb01UVXBMQ0JGTG1Oc1pXRnlZMjloZEUxaGNDQW1KaUJoTG1WdVlXSnNaU2d4Tmlrc0lFVXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUNZbUlHRXVaVzVoWW14bEtERTNLU3dnUlM1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NVGdwTENCRkxtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hPU2tzSUVVdWMzQmxZM1ZzWVhKTllYQWdKaVlnWVM1bGJtRmliR1VvTWpBcExDQkZMbkp2ZFdkb2JtVnpjMDFoY0NBbUppQmhMbVZ1WVdKc1pTZ3lNU2tzSUVVdWJXVjBZV3h1WlhOelRXRndJQ1ltSUdFdVpXNWhZbXhsS0RJeUtTd2dSUzVuY21Ga2FXVnVkRTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3lNeWtzSUVVdVlXeHdhR0ZOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NalFwTENCRkxtRnNjR2hoVkdWemRDQW1KaUJoTG1WdVlXSnNaU2d5TlNrc0lFVXVkbVZ5ZEdWNFEyOXNiM0p6SUNZbUlHRXVaVzVoWW14bEtESTJLU3dnUlM1MlpYSjBaWGhCYkhCb1lYTWdKaVlnWVM1bGJtRmliR1VvTWpjcExDQkZMblpsY25SbGVGVjJjeUFtSmlCaExtVnVZV0pzWlNneU9Da3NJRVV1ZG1WeWRHVjRWR0Z1WjJWdWRITWdKaVlnWVM1bGJtRmliR1VvTWprcExDQkZMblYyYzFabGNuUmxlRTl1YkhrZ0ppWWdZUzVsYm1GaWJHVW9NekFwTENCRkxtWnZaeUFtSmlCaExtVnVZV0pzWlNnek1Ta3NJSGN1Y0hWemFDaGhMbTFoYzJzcExDQmhMbVJwYzJGaWJHVkJiR3dvS1N3Z1JTNTFjMlZHYjJjZ0ppWWdZUzVsYm1GaWJHVW9NQ2tzSUVVdVpteGhkRk5vWVdScGJtY2dKaVlnWVM1bGJtRmliR1VvTVNrc0lFVXViRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2lBbUppQmhMbVZ1WVdKc1pTZ3lLU3dnUlM1emEybHVibWx1WnlBbUppQmhMbVZ1WVdKc1pTZ3pLU3dnUlM1MWMyVldaWEowWlhoVVpYaDBkWEpsSUNZbUlHRXVaVzVoWW14bEtEUXBMQ0JGTG0xdmNuQm9WR0Z5WjJWMGN5QW1KaUJoTG1WdVlXSnNaU2cxS1N3Z1JTNXRiM0p3YUU1dmNtMWhiSE1nSmlZZ1lTNWxibUZpYkdVb05pa3NJRVV1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoSUNZbUlHRXVaVzVoWW14bEtEY3BMQ0JGTG5Ob1lXUnZkMDFoY0VWdVlXSnNaV1FnSmlZZ1lTNWxibUZpYkdVb09Da3NJRVV1Y0doNWMybGpZV3hzZVVOdmNuSmxZM1JNYVdkb2RITWdKaVlnWVM1bGJtRmliR1VvT1Nrc0lFVXVaRzkxWW14bFUybGtaV1FnSmlZZ1lTNWxibUZpYkdVb01UQXBMQ0JGTG1ac2FYQlRhV1JsWkNBbUppQmhMbVZ1WVdKc1pTZ3hNU2tzSUVVdVpHVndkR2hRWVdOcmFXNW5JQ1ltSUdFdVpXNWhZbXhsS0RFeUtTd2dSUzVrYVhSb1pYSnBibWNnSmlZZ1lTNWxibUZpYkdVb01UTXBMQ0JGTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0lDWW1JR0V1Wlc1aFlteGxLREUwS1N3Z1JTNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0lDWW1JR0V1Wlc1aFlteGxLREUxS1N3Z1JTNTBjbUZ1YzIxcGMzTnBiMjRnSmlZZ1lTNWxibUZpYkdVb01UWXBMQ0JGTG5SeVlXNXpiV2x6YzJsdmJrMWhjQ0FtSmlCaExtVnVZV0pzWlNneE55a3NJRVV1ZEdocFkydHVaWE56VFdGd0lDWW1JR0V1Wlc1aFlteGxLREU0S1N3Z1JTNXphR1ZsYmlBbUppQmhMbVZ1WVdKc1pTZ3hPU2tzSUVVdWMyaGxaVzVEYjJ4dmNrMWhjQ0FtSmlCaExtVnVZV0pzWlNneU1Da3NJRVV1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01qRXBMQ0IzTG5CMWMyZ29ZUzV0WVhOcktUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRXdvZHlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ2RsdDNMblI1Y0dWZExDQkVPd29nSUNBZ0lDQWdJR2xtSUNoRktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlZJRDBnY1hSYlJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUVRZ1BTQjFaaTVqYkc5dVpTaFZMblZ1YVdadmNtMXpLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdSQ0E5SUhjdWRXNXBabTl5YlhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVRN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkpLSGNzSUVVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnUkRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZVZ1BTQXdMQ0JHSUQwZ1l5NXNaVzVuZEdnN0lGVWdQQ0JHT3lCVkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUeUE5SUdOYlZWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFBMbU5oWTJobFMyVjVJRDA5UFNCRktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkVJRDBnVHl3Z0t5dEVMblZ6WldSVWFXMWxjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJFSUQwOVBTQjJiMmxrSURBZ0ppWWdLRVFnUFNCdVpYY2dhSGdvY3l3Z1JTd2dkeXdnY2lrc0lHTXVjSFZ6YUNoRUtTa3NJRVE3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcktIY3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb0xTMTNMblZ6WldSVWFXMWxjeUE5UFQwZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUdNdWFXNWtaWGhQWmloM0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWTF0RlhTQTlJR05iWXk1c1pXNW5kR2dnTFNBeFhTd2dZeTV3YjNBb0tTd2dkeTVrWlhOMGNtOTVLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1FpaDNLU0I3Q2lBZ0lDQWdJQ0FnYkM1eVpXMXZkbVVvZHlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlFLQ2tnZXdvZ0lDQWdJQ0FnSUd3dVpHbHpjRzl6WlNncE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFJRWVhKaGJXVjBaWEp6T2lCZkxBb2dJQ0FnSUNBZ0lHZGxkRkJ5YjJkeVlXMURZV05vWlV0bGVUb2dlU3dLSUNBZ0lDQWdJQ0JuWlhSVmJtbG1iM0p0Y3pvZ1RDd0tJQ0FnSUNBZ0lDQmhZM0YxYVhKbFVISnZaM0poYlRvZ1NTd0tJQ0FnSUNBZ0lDQnlaV3hsWVhObFVISnZaM0poYlRvZ2F5d0tJQ0FnSUNBZ0lDQnlaV3hsWVhObFUyaGhaR1Z5UTJGamFHVTZJRUlzQ2lBZ0lDQWdJQ0FnY0hKdlozSmhiWE02SUdNc0NpQWdJQ0FnSUNBZ1pHbHpjRzl6WlRvZ1VBb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQm1lQ2dwSUhzS0lDQWdJR3hsZENCeklEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQm1kVzVqZEdsdmJpQmxLSElwSUhzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhNdVoyVjBLSElwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2SUQwOVBTQjJiMmxrSURBZ0ppWWdLRzhnUFNCN2ZTd2djeTV6WlhRb2Npd2dieWtwTENCdk93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkQ2h5S1NCN0NpQWdJQ0FnSUNBZ2N5NWtaV3hsZEdVb2NpazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ1S0hJc0lHOHNJR0VwSUhzS0lDQWdJQ0FnSUNCekxtZGxkQ2h5S1Z0dlhTQTlJR0U3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcEtDa2dld29nSUNBZ0lDQWdJSE1nUFNCdVpYY2dWMlZoYTAxaGNEc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbExBb2dJQ0FnSUNBZ0lISmxiVzkyWlRvZ2RDd0tJQ0FnSUNBZ0lDQjFjR1JoZEdVNklHNHNDaUFnSUNBZ0lDQWdaR2x6Y0c5elpUb2dhUW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJ3ZUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5NW5jbTkxY0U5eVpHVnlJQ0U5UFNCbExtZHliM1Z3VDNKa1pYSWdQeUJ6TG1keWIzVndUM0prWlhJZ0xTQmxMbWR5YjNWd1QzSmtaWElnT2lCekxuSmxibVJsY2s5eVpHVnlJQ0U5UFNCbExuSmxibVJsY2s5eVpHVnlJRDhnY3k1eVpXNWtaWEpQY21SbGNpQXRJR1V1Y21WdVpHVnlUM0prWlhJZ09pQnpMbTFoZEdWeWFXRnNMbWxrSUNFOVBTQmxMbTFoZEdWeWFXRnNMbWxrSUQ4Z2N5NXRZWFJsY21saGJDNXBaQ0F0SUdVdWJXRjBaWEpwWVd3dWFXUWdPaUJ6TG5vZ0lUMDlJR1V1ZWlBL0lITXVlaUF0SUdVdWVpQTZJSE11YVdRZ0xTQmxMbWxrT3dwOUNtWjFibU4wYVc5dUlGbHNLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJ6TG1keWIzVndUM0prWlhJZ0lUMDlJR1V1WjNKdmRYQlBjbVJsY2lBL0lITXVaM0p2ZFhCUGNtUmxjaUF0SUdVdVozSnZkWEJQY21SbGNpQTZJSE11Y21WdVpHVnlUM0prWlhJZ0lUMDlJR1V1Y21WdVpHVnlUM0prWlhJZ1B5QnpMbkpsYm1SbGNrOXlaR1Z5SUMwZ1pTNXlaVzVrWlhKUGNtUmxjaUE2SUhNdWVpQWhQVDBnWlM1NklEOGdaUzU2SUMwZ2N5NTZJRG9nY3k1cFpDQXRJR1V1YVdRN0NuMEtablZ1WTNScGIyNGdXbXdvS1NCN0NpQWdJQ0JzWlhRZ2N5QTlJRnRkTENCbElEMGdNQ3dnZENBOUlGdGRMQ0J1SUQwZ1cxMHNJR2tnUFNCYlhUc0tJQ0FnSUdaMWJtTjBhVzl1SUhJb0tTQjdDaUFnSUNBZ0lDQWdaU0E5SURBc0lIUXViR1Z1WjNSb0lEMGdNQ3dnYmk1c1pXNW5kR2dnUFNBd0xDQnBMbXhsYm1kMGFDQTlJREE3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCdktIVXNJR1FzSUdZc0lHMHNJSGdzSUhZcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlITmJaVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2NnUFQwOUlIWnZhV1FnTUNBL0lDaG5JRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaRG9nZFM1cFpDd0tJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVpXTjBPaUIxTEFvZ0lDQWdJQ0FnSUNBZ0lDQm5aVzl0WlhSeWVUb2daQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBaWEpwWVd3NklHWXNDaUFnSUNBZ0lDQWdJQ0FnSUdkeWIzVndUM0prWlhJNklHMHNDaUFnSUNBZ0lDQWdJQ0FnSUhKbGJtUmxjazl5WkdWeU9pQjFMbkpsYm1SbGNrOXlaR1Z5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjZPaUI0TEFvZ0lDQWdJQ0FnSUNBZ0lDQm5jbTkxY0RvZ2Rnb2dJQ0FnSUNBZ0lIMHNJSE5iWlYwZ1BTQm5LU0E2SUNobkxtbGtJRDBnZFM1cFpDd2daeTV2WW1wbFkzUWdQU0IxTENCbkxtZGxiMjFsZEhKNUlEMGdaQ3dnWnk1dFlYUmxjbWxoYkNBOUlHWXNJR2N1WjNKdmRYQlBjbVJsY2lBOUlHMHNJR2N1Y21WdVpHVnlUM0prWlhJZ1BTQjFMbkpsYm1SbGNrOXlaR1Z5TENCbkxub2dQU0I0TENCbkxtZHliM1Z3SUQwZ2Rpa3NJR1VyS3l3Z1p6c0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR0VvZFN3Z1pDd2daaXdnYlN3Z2VDd2dkaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnYnloMUxDQmtMQ0JtTENCdExDQjRMQ0IyS1RzS0lDQWdJQ0FnSUNCbUxuUnlZVzV6YldsemMybHZiaUErSURBZ1B5QnVMbkIxYzJnb1p5a2dPaUJtTG5SeVlXNXpjR0Z5Wlc1MElEMDlQU0FoTUNBL0lHa3VjSFZ6YUNobktTQTZJSFF1Y0hWemFDaG5LVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUd3b2RTd2daQ3dnWml3Z2JTd2dlQ3dnZGlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JuSUQwZ2J5aDFMQ0JrTENCbUxDQnRMQ0I0TENCMktUc0tJQ0FnSUNBZ0lDQm1MblJ5WVc1emJXbHpjMmx2YmlBK0lEQWdQeUJ1TG5WdWMyaHBablFvWnlrZ09pQm1MblJ5WVc1emNHRnlaVzUwSUQwOVBTQWhNQ0EvSUdrdWRXNXphR2xtZENobktTQTZJSFF1ZFc1emFHbG1kQ2huS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHTW9kU3dnWkNrZ2V3b2dJQ0FnSUNBZ0lIUXViR1Z1WjNSb0lENGdNU0FtSmlCMExuTnZjblFvZFNCOGZDQndlQ2tzSUc0dWJHVnVaM1JvSUQ0Z01TQW1KaUJ1TG5OdmNuUW9aQ0I4ZkNCWmJDa3NJR2t1YkdWdVozUm9JRDRnTVNBbUppQnBMbk52Y25Rb1pDQjhmQ0JaYkNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQm9LQ2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZFNBOUlHVXNJR1FnUFNCekxteGxibWQwYURzZ2RTQThJR1E3SUhVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnYzF0MVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHWXVhV1FnUFQwOUlHNTFiR3dwSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCbUxtbGtJRDBnYm5Wc2JDd2daaTV2WW1wbFkzUWdQU0J1ZFd4c0xDQm1MbWRsYjIxbGRISjVJRDBnYm5Wc2JDd2daaTV0WVhSbGNtbGhiQ0E5SUc1MWJHd3NJR1l1WjNKdmRYQWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdiM0JoY1hWbE9pQjBMQW9nSUNBZ0lDQWdJSFJ5WVc1emJXbHpjMmwyWlRvZ2Jpd0tJQ0FnSUNBZ0lDQjBjbUZ1YzNCaGNtVnVkRG9nYVN3S0lDQWdJQ0FnSUNCcGJtbDBPaUJ5TEFvZ0lDQWdJQ0FnSUhCMWMyZzZJR0VzQ2lBZ0lDQWdJQ0FnZFc1emFHbG1kRG9nYkN3S0lDQWdJQ0FnSUNCbWFXNXBjMmc2SUdnc0NpQWdJQ0FnSUNBZ2MyOXlkRG9nWXdvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCdGVDZ3BJSHNLSUNBZ0lHeGxkQ0J6SUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCbWRXNWpkR2x2YmlCbEtHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjanNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjeTVvWVhNb2Jpa2dQVDA5SUNFeElEOGdLSElnUFNCdVpYY2dXbXdzSUhNdWMyVjBLRzRzSUZzS0lDQWdJQ0FnSUNBZ0lDQWdjZ29nSUNBZ0lDQWdJRjBwS1NBNklHa2dQajBnY3k1blpYUW9iaWt1YkdWdVozUm9JRDhnS0hJZ1BTQnVaWGNnV213c0lITXVaMlYwS0c0cExuQjFjMmdvY2lrcElEb2djaUE5SUhNdVoyVjBLRzRwVzJsZExDQnlPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZENncElIc0tJQ0FnSUNBZ0lDQnpJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWlN3S0lDQWdJQ0FnSUNCa2FYTndiM05sT2lCMENpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlHZDRLQ2tnZXdvZ0lDQWdiR1YwSUhNZ1BTQjdmVHNLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoelcyVXVhV1JkSUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCelcyVXVhV1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZERzS0lDQWdJQ0FnSUNBZ0lDQWdjM2RwZEdOb0tHVXVkSGx3WlNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pFYVhKbFkzUnBiMjVoYkV4cFoyaDBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNDZJRzVsZHlCTkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nYm1WM0lHRmxDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbE53YjNSTWFXZG9kQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJRzVsZHlCTkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI0NklHNWxkeUJOTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dibVYzSUdGbExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTjBZVzVqWlRvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVaVU52Y3pvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHVnVkVzFpY21GRGIzTTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWTJGNU9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbEJ2YVc1MFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ1WlhjZ1RTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUc1bGR5QmhaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWTJGNU9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa2hsYldsemNHaGxjbVZNYVdkb2RDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQnVaWGNnVFN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJ0NVEyOXNiM0k2SUc1bGR5QmhaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaM0p2ZFc1a1EyOXNiM0k2SUc1bGR5QmhaUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pTWldOMFFYSmxZVXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nYm1WM0lHRmxMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dibVYzSUUwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJHWlhhV1IwYURvZ2JtVjNJRTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2hoYkdaSVpXbG5hSFE2SUc1bGR5Qk5DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzF0bExtbGtYU0E5SUhRc0lIUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUI0ZUNncElIc0tJQ0FnSUd4bGRDQnpJRDBnZTMwN0NpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMXRsTG1sa1hTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdjMXRsTG1sa1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUTdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2hsTG5SNWNHVXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVJHbHlaV04wYVc5dVlXeE1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRbWxoY3pvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVG05eWJXRnNRbWxoY3pvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVW1Ga2FYVnpPaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE5ZWEJUYVhwbE9pQnVaWGNnV0FvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKVGNHOTBUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMEpwWVhNNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDFKaFpHbDFjem9nTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNUV0Z3VTJsNlpUb2dibVYzSUZnS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVVHOXBiblJNYVdkb2RDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzUW1saGN6b2dNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1RtOXliV0ZzUW1saGN6b2dNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1VtRmthWFZ6T2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2ROWVhCVGFYcGxPaUJ1WlhjZ1dDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzUTJGdFpYSmhUbVZoY2pvZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzUTJGdFpYSmhSbUZ5T2lBeFpUTUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6VzJVdWFXUmRJRDBnZEN3Z2REc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOU93cDlDblpoY2lCNWVDQTlJREE3Q21aMWJtTjBhVzl1SUhaNEtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQW9aUzVqWVhOMFUyaGhaRzkzSUQ4Z01TQTZJREFwSUMwZ0tITXVZMkZ6ZEZOb1lXUnZkeUEvSURFZ09pQXdLVHNLZlFwbWRXNWpkR2x2YmlCZmVDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRzVsZHlCbmVDd2diaUE5SUhoNEtDa3NJR2tnUFNCN0NpQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ01Dd0tJQ0FnSUNBZ0lDQm9ZWE5vT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZibUZzVEdWdVozUm9PaUF0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5STVpXNW5kR2c2SUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0J6Y0c5MFRHVnVaM1JvT2lBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnY21WamRFRnlaV0ZNWlc1bmRHZzZJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aVzFwVEdWdVozUm9PaUF0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0UkdseVpXTjBhVzl1WVd4VGFHRmtiM2R6T2lBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVHOXBiblJUYUdGa2IzZHpPaUF0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0VTNCdmRGTm9ZV1J2ZDNNNklDMHhDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JoYldKcFpXNTBPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0JkTEFvZ0lDQWdJQ0FnSUhCeWIySmxPaUJiWFN3S0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJEb2dXMTBzQ2lBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1WVd4VGFHRmtiM2M2SUZ0ZExBb2dJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRndPaUJiWFN3S0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGRISnBlRG9nVzEwc0NpQWdJQ0FnSUNBZ2MzQnZkRG9nVzEwc0NpQWdJQ0FnSUNBZ2MzQnZkRk5vWVdSdmR6b2dXMTBzQ2lBZ0lDQWdJQ0FnYzNCdmRGTm9ZV1J2ZDAxaGNEb2dXMTBzQ2lBZ0lDQWdJQ0FnYzNCdmRGTm9ZV1J2ZDAxaGRISnBlRG9nVzEwc0NpQWdJQ0FnSUNBZ2NtVmpkRUZ5WldFNklGdGRMQW9nSUNBZ0lDQWdJSEpsWTNSQmNtVmhURlJETVRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0J5WldOMFFYSmxZVXhVUXpJNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnY0c5cGJuUTZJRnRkTEFvZ0lDQWdJQ0FnSUhCdmFXNTBVMmhoWkc5M09pQmJYU3dLSUNBZ0lDQWdJQ0J3YjJsdWRGTm9ZV1J2ZDAxaGNEb2dXMTBzQ2lBZ0lDQWdJQ0FnY0c5cGJuUlRhR0ZrYjNkTllYUnlhWGc2SUZ0ZExBb2dJQ0FnSUNBZ0lHaGxiV2s2SUZ0ZENpQWdJQ0I5T3dvZ0lDQWdabTl5S0d4bGRDQm9JRDBnTURzZ2FDQThJRGs3SUdnckt5bHBMbkJ5YjJKbExuQjFjMmdvYm1WM0lFMHBPd29nSUNBZ2JHVjBJSElnUFNCdVpYY2dUU3dnYnlBOUlHNWxkeUJ3WlN3Z1lTQTlJRzVsZHlCd1pUc0tJQ0FnSUdaMWJtTjBhVzl1SUd3b2FDd2dkU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnTUN3Z1ppQTlJREFzSUcwZ1BTQXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdheUE5SURBN0lHc2dQQ0E1T3lCckt5c3BhUzV3Y205aVpWdHJYUzV6WlhRb01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ2JHVjBJSGdnUFNBd0xDQjJJRDBnTUN3Z1p5QTlJREFzSUhBZ1BTQXdMQ0JmSUQwZ01Dd2dlU0E5SURBc0lHSWdQU0F3TENCQklEMGdNRHNLSUNBZ0lDQWdJQ0JvTG5OdmNuUW9kbmdwT3dvZ0lDQWdJQ0FnSUd4bGRDQk1JRDBnZFNBaFBUMGdJVEFnUHlCTllYUm9MbEJKSURvZ01Uc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHc2dQU0F3TENCQ0lEMGdhQzVzWlc1bmRHZzdJR3NnUENCQ095QnJLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVUNBOUlHaGJhMTBzSUhjZ1BTQlFMbU52Ykc5eUxDQkZJRDBnVUM1cGJuUmxibk5wZEhrc0lFUWdQU0JRTG1ScGMzUmhibU5sTENCVklEMGdVQzV6YUdGa2IzY2dKaVlnVUM1emFHRmtiM2N1YldGd0lEOGdVQzV6YUdGa2IzY3ViV0Z3TG5SbGVIUjFjbVVnT2lCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9VQzVwYzBGdFltbGxiblJNYVdkb2RDa2daQ0FyUFNCM0xuSWdLaUJGSUNvZ1RDd2daaUFyUFNCM0xtY2dLaUJGSUNvZ1RDd2diU0FyUFNCM0xtSWdLaUJGSUNvZ1REc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnBaaUFvVUM1cGMweHBaMmgwVUhKdlltVXBJR1p2Y2loc1pYUWdSaUE5SURBN0lFWWdQQ0E1T3lCR0t5c3BhUzV3Y205aVpWdEdYUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9VQzV6YUM1amIyVm1abWxqYVdWdWRITmJSbDBzSUVVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hRTG1selJHbHlaV04wYVc5dVlXeE1hV2RvZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVlnUFNCMExtZGxkQ2hRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaEdMbU52Ykc5eUxtTnZjSGtvVUM1amIyeHZjaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9VQzVwYm5SbGJuTnBkSGtnS2lCTUtTd2dVQzVqWVhOMFUyaGhaRzkzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUU4Z1BTQlFMbk5vWVdSdmR5d2dibVVnUFNCdUxtZGxkQ2hRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaUzV6YUdGa2IzZENhV0Z6SUQwZ1R5NWlhV0Z6TENCdVpTNXphR0ZrYjNkT2IzSnRZV3hDYVdGeklEMGdUeTV1YjNKdFlXeENhV0Z6TENCdVpTNXphR0ZrYjNkU1lXUnBkWE1nUFNCUExuSmhaR2wxY3l3Z2JtVXVjMmhoWkc5M1RXRndVMmw2WlNBOUlFOHViV0Z3VTJsNlpTd2dhUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMXQ0WFNBOUlHNWxMQ0JwTG1ScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGd1czaGRJRDBnVlN3Z2FTNWthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhkSEpwZUZ0NFhTQTlJRkF1YzJoaFpHOTNMbTFoZEhKcGVDd2dlU3NyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1a2FYSmxZM1JwYjI1aGJGdDRYU0E5SUVZc0lIZ3JLenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaFFMbWx6VTNCdmRFeHBaMmgwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUhRdVoyVjBLRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFWXVjRzl6YVhScGIyNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0ZBdWJXRjBjbWw0VjI5eWJHUXBMQ0JHTG1OdmJHOXlMbU52Y0hrb2R5a3ViWFZzZEdsd2JIbFRZMkZzWVhJb1JTQXFJRXdwTENCR0xtUnBjM1JoYm1ObElEMGdSQ3dnUmk1amIyNWxRMjl6SUQwZ1RXRjBhQzVqYjNNb1VDNWhibWRzWlNrc0lFWXVjR1Z1ZFcxaWNtRkRiM01nUFNCTllYUm9MbU52Y3loUUxtRnVaMnhsSUNvZ0tERWdMU0JRTG5CbGJuVnRZbkpoS1Nrc0lFWXVaR1ZqWVhrZ1BTQlFMbVJsWTJGNUxDQlFMbU5oYzNSVGFHRmtiM2NwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVHlBOUlGQXVjMmhoWkc5M0xDQnVaU0E5SUc0dVoyVjBLRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWxMbk5vWVdSdmQwSnBZWE1nUFNCUExtSnBZWE1zSUc1bExuTm9ZV1J2ZDA1dmNtMWhiRUpwWVhNZ1BTQlBMbTV2Y20xaGJFSnBZWE1zSUc1bExuTm9ZV1J2ZDFKaFpHbDFjeUE5SUU4dWNtRmthWFZ6TENCdVpTNXphR0ZrYjNkTllYQlRhWHBsSUQwZ1R5NXRZWEJUYVhwbExDQnBMbk53YjNSVGFHRmtiM2RiWjEwZ1BTQnVaU3dnYVM1emNHOTBVMmhoWkc5M1RXRndXMmRkSUQwZ1ZTd2dhUzV6Y0c5MFUyaGhaRzkzVFdGMGNtbDRXMmRkSUQwZ1VDNXphR0ZrYjNjdWJXRjBjbWw0TENCQkt5czdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMbk53YjNSYloxMGdQU0JHTENCbkt5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1VDNXBjMUpsWTNSQmNtVmhUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHSUQwZ2RDNW5aWFFvVUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCR0xtTnZiRzl5TG1OdmNIa29keWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9SU2tzSUVZdWFHRnNabGRwWkhSb0xuTmxkQ2hRTG5kcFpIUm9JQ29nTGpVc0lEQXNJREFwTENCR0xtaGhiR1pJWldsbmFIUXVjMlYwS0RBc0lGQXVhR1ZwWjJoMElDb2dMalVzSURBcExDQnBMbkpsWTNSQmNtVmhXM0JkSUQwZ1Jpd2djQ3NyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRkF1YVhOUWIybHVkRXhwWjJoMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUmlBOUlIUXVaMlYwS0ZBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRVl1WTI5c2IzSXVZMjl3ZVNoUUxtTnZiRzl5S1M1dGRXeDBhWEJzZVZOallXeGhjaWhRTG1sdWRHVnVjMmwwZVNBcUlFd3BMQ0JHTG1ScGMzUmhibU5sSUQwZ1VDNWthWE4wWVc1alpTd2dSaTVrWldOaGVTQTlJRkF1WkdWallYa3NJRkF1WTJGemRGTm9ZV1J2ZHlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUElEMGdVQzV6YUdGa2IzY3NJRzVsSUQwZ2JpNW5aWFFvVUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVV1YzJoaFpHOTNRbWxoY3lBOUlFOHVZbWxoY3l3Z2JtVXVjMmhoWkc5M1RtOXliV0ZzUW1saGN5QTlJRTh1Ym05eWJXRnNRbWxoY3l3Z2JtVXVjMmhoWkc5M1VtRmthWFZ6SUQwZ1R5NXlZV1JwZFhNc0lHNWxMbk5vWVdSdmQwMWhjRk5wZW1VZ1BTQlBMbTFoY0ZOcGVtVXNJRzVsTG5Ob1lXUnZkME5oYldWeVlVNWxZWElnUFNCUExtTmhiV1Z5WVM1dVpXRnlMQ0J1WlM1emFHRmtiM2REWVcxbGNtRkdZWElnUFNCUExtTmhiV1Z5WVM1bVlYSXNJR2t1Y0c5cGJuUlRhR0ZrYjNkYmRsMGdQU0J1WlN3Z2FTNXdiMmx1ZEZOb1lXUnZkMDFoY0Z0MlhTQTlJRlVzSUdrdWNHOXBiblJUYUdGa2IzZE5ZWFJ5YVhoYmRsMGdQU0JRTG5Ob1lXUnZkeTV0WVhSeWFYZ3NJR0lyS3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWNHOXBiblJiZGwwZ1BTQkdMQ0IyS3lzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvVUM1cGMwaGxiV2x6Y0dobGNtVk1hV2RvZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVlnUFNCMExtZGxkQ2hRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVZdWMydDVRMjlzYjNJdVkyOXdlU2hRTG1OdmJHOXlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaEZJQ29nVENrc0lFWXVaM0p2ZFc1a1EyOXNiM0l1WTI5d2VTaFFMbWR5YjNWdVpFTnZiRzl5S1M1dGRXeDBhWEJzZVZOallXeGhjaWhGSUNvZ1RDa3NJR2t1YUdWdGFWdGZYU0E5SUVZc0lGOHJLenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQndJRDRnTUNBbUppQW9aUzVwYzFkbFlrZE1NaUI4ZkNCekxtaGhjeWdpVDBWVFgzUmxlSFIxY21WZlpteHZZWFJmYkdsdVpXRnlJaWtnUFQwOUlDRXdJRDhnS0drdWNtVmpkRUZ5WldGTVZFTXhJRDBnYVdVdVRGUkRYMFpNVDBGVVh6RXNJR2t1Y21WamRFRnlaV0ZNVkVNeUlEMGdhV1V1VEZSRFgwWk1UMEZVWHpJcElEb2djeTVvWVhNb0lrOUZVMTkwWlhoMGRYSmxYMmhoYkdaZlpteHZZWFJmYkdsdVpXRnlJaWtnUFQwOUlDRXdJRDhnS0drdWNtVmpkRUZ5WldGTVZFTXhJRDBnYVdVdVRGUkRYMGhCVEVaZk1Td2dhUzV5WldOMFFYSmxZVXhVUXpJZ1BTQnBaUzVNVkVOZlNFRk1SbDh5S1NBNklHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklGVnVZV0pzWlNCMGJ5QjFjMlVnVW1WamRFRnlaV0ZNYVdkb2RDNGdUV2x6YzJsdVp5QlhaV0pIVENCbGVIUmxibk5wYjI1ekxpSXBLU3dnYVM1aGJXSnBaVzUwV3pCZElEMGdaQ3dnYVM1aGJXSnBaVzUwV3pGZElEMGdaaXdnYVM1aGJXSnBaVzUwV3pKZElEMGdiVHNLSUNBZ0lDQWdJQ0JzWlhRZ1NTQTlJR2t1YUdGemFEc0tJQ0FnSUNBZ0lDQW9TUzVrYVhKbFkzUnBiMjVoYkV4bGJtZDBhQ0FoUFQwZ2VDQjhmQ0JKTG5CdmFXNTBUR1Z1WjNSb0lDRTlQU0IySUh4OElFa3VjM0J2ZEV4bGJtZDBhQ0FoUFQwZ1p5QjhmQ0JKTG5KbFkzUkJjbVZoVEdWdVozUm9JQ0U5UFNCd0lIeDhJRWt1YUdWdGFVeGxibWQwYUNBaFBUMGdYeUI4ZkNCSkxtNTFiVVJwY21WamRHbHZibUZzVTJoaFpHOTNjeUFoUFQwZ2VTQjhmQ0JKTG01MWJWQnZhVzUwVTJoaFpHOTNjeUFoUFQwZ1lpQjhmQ0JKTG01MWJWTndiM1JUYUdGa2IzZHpJQ0U5UFNCQktTQW1KaUFvYVM1a2FYSmxZM1JwYjI1aGJDNXNaVzVuZEdnZ1BTQjRMQ0JwTG5Od2IzUXViR1Z1WjNSb0lEMGdaeXdnYVM1eVpXTjBRWEpsWVM1c1pXNW5kR2dnUFNCd0xDQnBMbkJ2YVc1MExteGxibWQwYUNBOUlIWXNJR2t1YUdWdGFTNXNaVzVuZEdnZ1BTQmZMQ0JwTG1ScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzTG14bGJtZDBhQ0E5SUhrc0lHa3VaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWEF1YkdWdVozUm9JRDBnZVN3Z2FTNXdiMmx1ZEZOb1lXUnZkeTVzWlc1bmRHZ2dQU0JpTENCcExuQnZhVzUwVTJoaFpHOTNUV0Z3TG14bGJtZDBhQ0E5SUdJc0lHa3VjM0J2ZEZOb1lXUnZkeTVzWlc1bmRHZ2dQU0JCTENCcExuTndiM1JUYUdGa2IzZE5ZWEF1YkdWdVozUm9JRDBnUVN3Z2FTNWthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhkSEpwZUM1c1pXNW5kR2dnUFNCNUxDQnBMbkJ2YVc1MFUyaGhaRzkzVFdGMGNtbDRMbXhsYm1kMGFDQTlJR0lzSUdrdWMzQnZkRk5vWVdSdmQwMWhkSEpwZUM1c1pXNW5kR2dnUFNCQkxDQkpMbVJwY21WamRHbHZibUZzVEdWdVozUm9JRDBnZUN3Z1NTNXdiMmx1ZEV4bGJtZDBhQ0E5SUhZc0lFa3VjM0J2ZEV4bGJtZDBhQ0E5SUdjc0lFa3VjbVZqZEVGeVpXRk1aVzVuZEdnZ1BTQndMQ0JKTG1obGJXbE1aVzVuZEdnZ1BTQmZMQ0JKTG01MWJVUnBjbVZqZEdsdmJtRnNVMmhoWkc5M2N5QTlJSGtzSUVrdWJuVnRVRzlwYm5SVGFHRmtiM2R6SUQwZ1lpd2dTUzV1ZFcxVGNHOTBVMmhoWkc5M2N5QTlJRUVzSUdrdWRtVnljMmx2YmlBOUlIbDRLeXNwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1l5aG9MQ0IxS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1FnUFNBd0xDQm1JRDBnTUN3Z2JTQTlJREFzSUhnZ1BTQXdMQ0IySUQwZ01Dd2daeUE5SUhVdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREFzSUY4Z1BTQm9MbXhsYm1kMGFEc2djQ0E4SUY4N0lIQXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ2FGdHdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSGt1YVhORWFYSmxZM1JwYjI1aGJFeHBaMmgwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZaUE5SUdrdVpHbHlaV04wYVc5dVlXeGJaRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpTG1ScGNtVmpkR2x2Ymk1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9lUzV0WVhSeWFYaFhiM0pzWkNrc0lISXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hrdWRHRnlaMlYwTG0xaGRISnBlRmR2Y214a0tTd2dZaTVrYVhKbFkzUnBiMjR1YzNWaUtISXBMQ0JpTG1ScGNtVmpkR2x2Ymk1MGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b1p5a3NJR1FyS3pzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2g1TG1selUzQnZkRXhwWjJoMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWWlBOUlHa3VjM0J2ZEZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSXVjRzl6YVhScGIyNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hrdWJXRjBjbWw0VjI5eWJHUXBMQ0JpTG5CdmMybDBhVzl1TG1Gd2NHeDVUV0YwY21sNE5DaG5LU3dnWWk1a2FYSmxZM1JwYjI0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSGt1YldGMGNtbDRWMjl5YkdRcExDQnlMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloNUxuUmhjbWRsZEM1dFlYUnlhWGhYYjNKc1pDa3NJR0l1WkdseVpXTjBhVzl1TG5OMVlpaHlLU3dnWWk1a2FYSmxZM1JwYjI0dWRISmhibk5tYjNKdFJHbHlaV04wYVc5dUtHY3BMQ0J0S3lzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvZVM1cGMxSmxZM1JCY21WaFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnYVM1eVpXTjBRWEpsWVZ0NFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSXVjRzl6YVhScGIyNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hrdWJXRjBjbWw0VjI5eWJHUXBMQ0JpTG5CdmMybDBhVzl1TG1Gd2NHeDVUV0YwY21sNE5DaG5LU3dnWVM1cFpHVnVkR2wwZVNncExDQnZMbU52Y0hrb2VTNXRZWFJ5YVhoWGIzSnNaQ2tzSUc4dWNISmxiWFZzZEdsd2JIa29aeWtzSUdFdVpYaDBjbUZqZEZKdmRHRjBhVzl1S0c4cExDQmlMbWhoYkdaWGFXUjBhQzV6WlhRb2VTNTNhV1IwYUNBcUlDNDFMQ0F3TENBd0tTd2dZaTVvWVd4bVNHVnBaMmgwTG5ObGRDZ3dMQ0I1TG1obGFXZG9kQ0FxSUM0MUxDQXdLU3dnWWk1b1lXeG1WMmxrZEdndVlYQndiSGxOWVhSeWFYZzBLR0VwTENCaUxtaGhiR1pJWldsbmFIUXVZWEJ3YkhsTllYUnlhWGcwS0dFcExDQjRLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9lUzVwYzFCdmFXNTBUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpSUQwZ2FTNXdiMmx1ZEZ0bVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSXVjRzl6YVhScGIyNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hrdWJXRjBjbWw0VjI5eWJHUXBMQ0JpTG5CdmMybDBhVzl1TG1Gd2NHeDVUV0YwY21sNE5DaG5LU3dnWmlzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hrdWFYTklaVzFwYzNCb1pYSmxUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpSUQwZ2FTNW9aVzFwVzNaZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpNWthWEpsWTNScGIyNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hrdWJXRjBjbWw0VjI5eWJHUXBMQ0JpTG1ScGNtVmpkR2x2Ymk1MGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b1p5a3NJR0l1WkdseVpXTjBhVzl1TG01dmNtMWhiR2w2WlNncExDQjJLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJSE5sZEhWd09pQnNMQW9nSUNBZ0lDQWdJSE5sZEhWd1ZtbGxkem9nWXl3S0lDQWdJQ0FnSUNCemRHRjBaVG9nYVFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlBa2JDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRzVsZHlCZmVDaHpMQ0JsS1N3Z2JpQTlJRnRkTENCcElEMGdXMTA3Q2lBZ0lDQm1kVzVqZEdsdmJpQnlLQ2tnZXdvZ0lDQWdJQ0FnSUc0dWJHVnVaM1JvSUQwZ01Dd2dhUzVzWlc1bmRHZ2dQU0F3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2J5aDFLU0I3Q2lBZ0lDQWdJQ0FnYmk1d2RYTm9LSFVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1lTaDFLU0I3Q2lBZ0lDQWdJQ0FnYVM1d2RYTm9LSFVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2JDaDFLU0I3Q2lBZ0lDQWdJQ0FnZEM1elpYUjFjQ2h1TENCMUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR01vZFNrZ2V3b2dJQ0FnSUNBZ0lIUXVjMlYwZFhCV2FXVjNLRzRzSUhVcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQnBibWwwT2lCeUxBb2dJQ0FnSUNBZ0lITjBZWFJsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hwWjJoMGMwRnljbUY1T2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZHpRWEp5WVhrNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUd4cFoyaDBjem9nZEFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBkWEJNYVdkb2RITTZJR3dzQ2lBZ0lDQWdJQ0FnYzJWMGRYQk1hV2RvZEhOV2FXVjNPaUJqTEFvZ0lDQWdJQ0FnSUhCMWMyaE1hV2RvZERvZ2J5d0tJQ0FnSUNBZ0lDQndkWE5vVTJoaFpHOTNPaUJoQ2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUUxNEtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQm1kVzVqZEdsdmJpQnVLSElzSUc4Z1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHRTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVhR0Z6S0hJcElEMDlQU0FoTVNBL0lDaGhJRDBnYm1WM0lDUnNLSE1zSUdVcExDQjBMbk5sZENoeUxDQmJDaUFnSUNBZ0lDQWdJQ0FnSUdFS0lDQWdJQ0FnSUNCZEtTa2dPaUJ2SUQ0OUlIUXVaMlYwS0hJcExteGxibWQwYUNBL0lDaGhJRDBnYm1WM0lDUnNLSE1zSUdVcExDQjBMbWRsZENoeUtTNXdkWE5vS0dFcEtTQTZJR0VnUFNCMExtZGxkQ2h5S1Z0dlhTd2dZVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdrb0tTQjdDaUFnSUNBZ0lDQWdkQ0E5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFE2SUc0c0NpQWdJQ0FnSUNBZ1pHbHpjRzl6WlRvZ2FRb2dJQ0FnZlRzS2ZRcDJZWElnWlc4Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWsxbGMyaEVaWEIwYUUxaGRHVnlhV0ZzSWl3Z2RHaHBjeTVrWlhCMGFGQmhZMnRwYm1jZ1BTQk9aQ3dnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ01Td2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUQwZ01Dd2dkR2hwY3k1M2FYSmxabkpoYldVZ1BTQWhNU3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dQU0F4TENCMGFHbHpMbVp2WnlBOUlDRXhMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1SbGNIUm9VR0ZqYTJsdVp5QTlJR1V1WkdWd2RHaFFZV05yYVc1bkxDQjBhR2x6TG0xaGNDQTlJR1V1YldGd0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ1pTNWhiSEJvWVUxaGNDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNCbExuZHBjbVZtY21GdFpTd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ3dnZEdocGN6c0tJQ0FnSUgwS2ZUc0taVzh1Y0hKdmRHOTBlWEJsTG1selRXVnphRVJsY0hSb1RXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlIUnZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk5aWE5vUkdsemRHRnVZMlZOWVhSbGNtbGhiQ0lzSUhSb2FYTXVjbVZtWlhKbGJtTmxVRzl6YVhScGIyNGdQU0J1WlhjZ1RTd2dkR2hwY3k1dVpXRnlSR2x6ZEdGdVkyVWdQU0F4TENCMGFHbHpMbVpoY2tScGMzUmhibU5sSUQwZ01XVXpMQ0IwYUdsekxtMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNBeExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNBd0xDQjBhR2x6TG1adlp5QTlJQ0V4TENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuSmxabVZ5Wlc1alpWQnZjMmwwYVc5dUxtTnZjSGtvWlM1eVpXWmxjbVZ1WTJWUWIzTnBkR2x2Ymlrc0lIUm9hWE11Ym1WaGNrUnBjM1JoYm1ObElEMGdaUzV1WldGeVJHbHpkR0Z1WTJVc0lIUm9hWE11Wm1GeVJHbHpkR0Z1WTJVZ1BTQmxMbVpoY2tScGMzUmhibU5sTENCMGFHbHpMbTFoY0NBOUlHVXViV0Z3TENCMGFHbHpMbUZzY0doaFRXRndJRDBnWlM1aGJIQm9ZVTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0JsTG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tkRzh1Y0hKdmRHOTBlWEJsTG1selRXVnphRVJwYzNSaGJtTmxUV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJR0o0SUQwZ1lIWnZhV1FnYldGcGJpZ3BJSHNLQ1dkc1gxQnZjMmwwYVc5dUlEMGdkbVZqTkNnZ2NHOXphWFJwYjI0c0lERXVNQ0FwT3dwOVlDd2dkM2dnUFNCZ2RXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2MyaGhaRzkzWDNCaGMzTTdDblZ1YVdadmNtMGdkbVZqTWlCeVpYTnZiSFYwYVc5dU93cDFibWxtYjNKdElHWnNiMkYwSUhKaFpHbDFjenNLSTJsdVkyeDFaR1VnUEhCaFkydHBibWMrQ25admFXUWdiV0ZwYmlncElIc0tDV052Ym5OMElHWnNiMkYwSUhOaGJYQnNaWE1nUFNCbWJHOWhkQ2dnVmxOTlgxTkJUVkJNUlZNZ0tUc0tDV1pzYjJGMElHMWxZVzRnUFNBd0xqQTdDZ2xtYkc5aGRDQnpjWFZoY21Wa1gyMWxZVzRnUFNBd0xqQTdDZ2xtYkc5aGRDQjFkbE4wY21sa1pTQTlJSE5oYlhCc1pYTWdQRDBnTVM0d0lEOGdNQzR3SURvZ01pNHdJQzhnS0NCellXMXdiR1Z6SUMwZ01TNHdJQ2s3Q2dsbWJHOWhkQ0IxZGxOMFlYSjBJRDBnYzJGdGNHeGxjeUE4UFNBeExqQWdQeUF3TGpBZ09pQXRJREV1TURzS0NXWnZjaUFvSUdac2IyRjBJR2tnUFNBd0xqQTdJR2tnUENCellXMXdiR1Z6T3lCcElDc3JJQ2tnZXdvSkNXWnNiMkYwSUhWMlQyWm1jMlYwSUQwZ2RYWlRkR0Z5ZENBcklHa2dLaUIxZGxOMGNtbGtaVHNLQ1FramFXWmtaV1lnU0U5U1NWcFBUbFJCVEY5UVFWTlRDZ2tKQ1habFl6SWdaR2x6ZEhKcFluVjBhVzl1SUQwZ2RXNXdZV05yVWtkQ1FWUnZNa2hoYkdZb0lIUmxlSFIxY21VeVJDZ2djMmhoWkc5M1gzQmhjM01zSUNnZ1oyeGZSbkpoWjBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnZFhaUFptWnpaWFFzSURBdU1DQXBJQ29nY21Ga2FYVnpJQ2tnTHlCeVpYTnZiSFYwYVc5dUlDa2dLVHNLQ1FrSmJXVmhiaUFyUFNCa2FYTjBjbWxpZFhScGIyNHVlRHNLQ1FrSmMzRjFZWEpsWkY5dFpXRnVJQ3M5SUdScGMzUnlhV0oxZEdsdmJpNTVJQ29nWkdsemRISnBZblYwYVc5dUxua2dLeUJrYVhOMGNtbGlkWFJwYjI0dWVDQXFJR1JwYzNSeWFXSjFkR2x2Ymk1NE93b0pDU05sYkhObENna0pDV1pzYjJGMElHUmxjSFJvSUQwZ2RXNXdZV05yVWtkQ1FWUnZSR1Z3ZEdnb0lIUmxlSFIxY21VeVJDZ2djMmhoWkc5M1gzQmhjM01zSUNnZ1oyeGZSbkpoWjBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnTUM0d0xDQjFkazltWm5ObGRDQXBJQ29nY21Ga2FYVnpJQ2tnTHlCeVpYTnZiSFYwYVc5dUlDa2dLVHNLQ1FrSmJXVmhiaUFyUFNCa1pYQjBhRHNLQ1FrSmMzRjFZWEpsWkY5dFpXRnVJQ3M5SUdSbGNIUm9JQ29nWkdWd2RHZzdDZ2tKSTJWdVpHbG1DZ2w5Q2dsdFpXRnVJRDBnYldWaGJpQXZJSE5oYlhCc1pYTTdDZ2x6Y1hWaGNtVmtYMjFsWVc0Z1BTQnpjWFZoY21Wa1gyMWxZVzRnTHlCellXMXdiR1Z6T3dvSlpteHZZWFFnYzNSa1gyUmxkaUE5SUhOeGNuUW9JSE54ZFdGeVpXUmZiV1ZoYmlBdElHMWxZVzRnS2lCdFpXRnVJQ2s3Q2dsbmJGOUdjbUZuUTI5c2IzSWdQU0J3WVdOck1raGhiR1pVYjFKSFFrRW9JSFpsWXpJb0lHMWxZVzRzSUhOMFpGOWtaWFlnS1NBcE93cDlZRHNLWm5WdVkzUnBiMjRnZVdnb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0J1WlhjZ1JISXNJR2tnUFNCdVpYY2dXQ3dnY2lBOUlHNWxkeUJZTENCdklEMGdibVYzSUZabExDQmhJRDBnYm1WM0lHVnZLSHNLSUNBZ0lDQWdJQ0JrWlhCMGFGQmhZMnRwYm1jNklFSmtDaUFnSUNCOUtTd2diQ0E5SUc1bGR5QjBieXdnWXlBOUlIdDlMQ0JvSUQwZ2RDNXRZWGhVWlhoMGRYSmxVMmw2WlN3Z2RTQTlJSHNLSUNBZ0lDQWdJQ0F3T2lCcGRDd0tJQ0FnSUNBZ0lDQXhPaUJCYVN3S0lDQWdJQ0FnSUNBeU9pQkRhUW9nSUNBZ2ZTd2daQ0E5SUc1bGR5QnpiaWg3Q2lBZ0lDQWdJQ0FnWkdWbWFXNWxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQldVMDFmVTBGTlVFeEZVem9nT0FvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNYM0JoYzNNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYzI5c2RYUnBiMjQ2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1dBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBMENpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dZbmdzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJSGQ0Q2lBZ0lDQjlLU3dnWmlBOUlHUXVZMnh2Ym1Vb0tUc0tJQ0FnSUdZdVpHVm1hVzVsY3k1SVQxSkpXazlPVkVGTVgxQkJVMU1nUFNBeE93b2dJQ0FnYkdWMElHMGdQU0J1WlhjZ1gyVTdDaUFnSUNCdExuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2dWV1VvYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hiQ2lBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdMalVzQ2lBZ0lDQWdJQ0FnTXl3S0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQXVOU3dLSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDNDFDaUFnSUNCZEtTd2dNeWtwT3dvZ0lDQWdiR1YwSUhnZ1BTQnVaWGNnYzNRb2JTd2daQ2tzSUhZZ1BTQjBhR2x6T3dvZ0lDQWdkR2hwY3k1bGJtRmliR1ZrSUQwZ0lURXNJSFJvYVhNdVlYVjBiMVZ3WkdGMFpTQTlJQ0V3TENCMGFHbHpMbTVsWldSelZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdWRIbHdaU0E5SUVoakxDQjBhR2x6TG5KbGJtUmxjaUE5SUdaMWJtTjBhVzl1S0hrc0lHSXNJRUVwSUhzS0lDQWdJQ0FnSUNCcFppQW9kaTVsYm1GaWJHVmtJRDA5UFNBaE1TQjhmQ0IyTG1GMWRHOVZjR1JoZEdVZ1BUMDlJQ0V4SUNZbUlIWXVibVZsWkhOVmNHUmhkR1VnUFQwOUlDRXhJSHg4SUhrdWJHVnVaM1JvSUQwOVBTQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUV3Z1BTQnpMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BMQ0JKSUQwZ2N5NW5aWFJCWTNScGRtVkRkV0psUm1GalpTZ3BMQ0JySUQwZ2N5NW5aWFJCWTNScGRtVk5hWEJ0WVhCTVpYWmxiQ2dwTENCQ0lEMGdjeTV6ZEdGMFpUc0tJQ0FnSUNBZ0lDQkNMbk5sZEVKc1pXNWthVzVuS0hadUtTd2dRaTVpZFdabVpYSnpMbU52Ykc5eUxuTmxkRU5zWldGeUtERXNJREVzSURFc0lERXBMQ0JDTG1KMVptWmxjbk11WkdWd2RHZ3VjMlYwVkdWemRDZ2hNQ2tzSUVJdWMyVjBVMk5wYzNOdmNsUmxjM1FvSVRFcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1VDQTlJREFzSUhjZ1BTQjVMbXhsYm1kMGFEc2dVQ0E4SUhjN0lGQXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ2VWdFFYU3dnUkNBOUlFVXVjMmhoWkc5M093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1JDQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VMmhoWkc5M1RXRndPaUlzSUVVc0lDSm9ZWE1nYm04Z2MyaGhaRzkzTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRVF1WVhWMGIxVndaR0YwWlNBOVBUMGdJVEVnSmlZZ1JDNXVaV1ZrYzFWd1pHRjBaU0E5UFQwZ0lURXBJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNCcExtTnZjSGtvUkM1dFlYQlRhWHBsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZVZ1BTQkVMbWRsZEVaeVlXMWxSWGgwWlc1MGN5Z3BPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9hUzV0ZFd4MGFYQnNlU2hWS1N3Z2NpNWpiM0I1S0VRdWJXRndVMmw2WlNrc0lDaHBMbmdnUGlCb0lIeDhJR2t1ZVNBK0lHZ3BJQ1ltSUNocExuZ2dQaUJvSUNZbUlDaHlMbmdnUFNCTllYUm9MbVpzYjI5eUtHZ2dMeUJWTG5ncExDQnBMbmdnUFNCeUxuZ2dLaUJWTG5nc0lFUXViV0Z3VTJsNlpTNTRJRDBnY2k1NEtTd2dhUzU1SUQ0Z2FDQW1KaUFvY2k1NUlEMGdUV0YwYUM1bWJHOXZjaWhvSUM4Z1ZTNTVLU3dnYVM1NUlEMGdjaTU1SUNvZ1ZTNTVMQ0JFTG0xaGNGTnBlbVV1ZVNBOUlISXVlU2twTENCRUxtMWhjQ0E5UFQwZ2JuVnNiQ0FtSmlBaFJDNXBjMUJ2YVc1MFRHbG5hSFJUYUdGa2IzY2dKaVlnZEdocGN5NTBlWEJsSUQwOVBTQnBjaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFOGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXbHVSbWxzZEdWeU9pQjBkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlXZEdhV3gwWlhJNklIUjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNtMWhkRG9nWTNRS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRUxtMWhjQ0E5SUc1bGR5QkJkQ2hwTG5nc0lHa3VlU3dnVHlrc0lFUXViV0Z3TG5SbGVIUjFjbVV1Ym1GdFpTQTlJRVV1Ym1GdFpTQXJJQ0l1YzJoaFpHOTNUV0Z3SWl3Z1JDNXRZWEJRWVhOeklEMGdibVYzSUVGMEtHa3VlQ3dnYVM1NUxDQlBLU3dnUkM1allXMWxjbUV1ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoRUxtMWhjQ0E5UFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFOGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXbHVSbWxzZEdWeU9pQnlkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlXZEdhV3gwWlhJNklISjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNtMWhkRG9nWTNRS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRUxtMWhjQ0E5SUc1bGR5QkJkQ2hwTG5nc0lHa3VlU3dnVHlrc0lFUXViV0Z3TG5SbGVIUjFjbVV1Ym1GdFpTQTlJRVV1Ym1GdFpTQXJJQ0l1YzJoaFpHOTNUV0Z3SWl3Z1JDNWpZVzFsY21FdWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhNdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0VRdWJXRndLU3dnY3k1amJHVmhjaWdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUmlBOUlFUXVaMlYwVm1sbGQzQnZjblJEYjNWdWRDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUU4Z1BTQXdPeUJQSUR3Z1Jqc2dUeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVaU0E5SUVRdVoyVjBWbWxsZDNCdmNuUW9UeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2TG5ObGRDaHlMbmdnS2lCdVpTNTRMQ0J5TG5rZ0tpQnVaUzU1TENCeUxuZ2dLaUJ1WlM1NkxDQnlMbmtnS2lCdVpTNTNLU3dnUWk1MmFXVjNjRzl5ZENodktTd2dSQzUxY0dSaGRHVk5ZWFJ5YVdObGN5aEZMQ0JQS1N3Z2JpQTlJRVF1WjJWMFJuSjFjM1IxYlNncExDQmZLR0lzSUVFc0lFUXVZMkZ0WlhKaExDQkZMQ0IwYUdsekxuUjVjR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNGRUxtbHpVRzlwYm5STWFXZG9kRk5vWVdSdmR5QW1KaUIwYUdsekxuUjVjR1VnUFQwOUlHbHlJQ1ltSUdjb1JDd2dRU2tzSUVRdWJtVmxaSE5WY0dSaGRHVWdQU0FoTVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RpNXVaV1ZrYzFWd1pHRjBaU0E5SUNFeExDQnpMbk5sZEZKbGJtUmxjbFJoY21kbGRDaE1MQ0JKTENCcktUc0tJQ0FnSUgwN0NpQWdJQ0JtZFc1amRHbHZiaUJuS0hrc0lHSXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1FTQTlJR1V1ZFhCa1lYUmxLSGdwT3dvZ0lDQWdJQ0FnSUdRdVpHVm1hVzVsY3k1V1UwMWZVMEZOVUV4RlV5QWhQVDBnZVM1aWJIVnlVMkZ0Y0d4bGN5QW1KaUFvWkM1a1pXWnBibVZ6TGxaVFRWOVRRVTFRVEVWVElEMGdlUzVpYkhWeVUyRnRjR3hsY3l3Z1ppNWtaV1pwYm1WekxsWlRUVjlUUVUxUVRFVlRJRDBnZVM1aWJIVnlVMkZ0Y0d4bGN5d2daQzV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0JtTG01bFpXUnpWWEJrWVhSbElEMGdJVEFwTENCa0xuVnVhV1p2Y20xekxuTm9ZV1J2ZDE5d1lYTnpMblpoYkhWbElEMGdlUzV0WVhBdWRHVjRkSFZ5WlN3Z1pDNTFibWxtYjNKdGN5NXlaWE52YkhWMGFXOXVMblpoYkhWbElEMGdlUzV0WVhCVGFYcGxMQ0JrTG5WdWFXWnZjbTF6TG5KaFpHbDFjeTUyWVd4MVpTQTlJSGt1Y21Ga2FYVnpMQ0J6TG5ObGRGSmxibVJsY2xSaGNtZGxkQ2g1TG0xaGNGQmhjM01wTENCekxtTnNaV0Z5S0Nrc0lITXVjbVZ1WkdWeVFuVm1abVZ5UkdseVpXTjBLR0lzSUc1MWJHd3NJRUVzSUdRc0lIZ3NJRzUxYkd3cExDQm1MblZ1YVdadmNtMXpMbk5vWVdSdmQxOXdZWE56TG5aaGJIVmxJRDBnZVM1dFlYQlFZWE56TG5SbGVIUjFjbVVzSUdZdWRXNXBabTl5YlhNdWNtVnpiMngxZEdsdmJpNTJZV3gxWlNBOUlIa3ViV0Z3VTJsNlpTd2daaTUxYm1sbWIzSnRjeTV5WVdScGRYTXVkbUZzZFdVZ1BTQjVMbkpoWkdsMWN5d2djeTV6WlhSU1pXNWtaWEpVWVhKblpYUW9lUzV0WVhBcExDQnpMbU5zWldGeUtDa3NJSE11Y21WdVpHVnlRblZtWm1WeVJHbHlaV04wS0dJc0lHNTFiR3dzSUVFc0lHWXNJSGdzSUc1MWJHd3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnY0NoNUxDQmlMQ0JCTENCTUxDQkpMQ0JyTENCQ0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUZBZ1BTQnVkV3hzTENCM0lEMGdUQzVwYzFCdmFXNTBUR2xuYUhRZ1BUMDlJQ0V3SUQ4Z2VTNWpkWE4wYjIxRWFYTjBZVzVqWlUxaGRHVnlhV0ZzSURvZ2VTNWpkWE4wYjIxRVpYQjBhRTFoZEdWeWFXRnNPd29nSUNBZ0lDQWdJR2xtSUNoM0lDRTlQU0IyYjJsa0lEQWdQeUJRSUQwZ2R5QTZJRkFnUFNCTUxtbHpVRzlwYm5STWFXZG9kQ0E5UFQwZ0lUQWdQeUJzSURvZ1lTd2djeTVzYjJOaGJFTnNhWEJ3YVc1blJXNWhZbXhsWkNBbUppQkJMbU5zYVhCVGFHRmtiM2R6SUQwOVBTQWhNQ0FtSmlCQkxtTnNhWEJ3YVc1blVHeGhibVZ6TG14bGJtZDBhQ0FoUFQwZ01DQjhmQ0JCTG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlCQkxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElDRTlQU0F3SUh4OElFRXVZV3h3YUdGTllYQWdKaVlnUVM1aGJIQm9ZVlJsYzNRZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ1VDNTFkV2xrTENCRUlEMGdRUzUxZFdsa0xDQlZJRDBnWTF0RlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnVlNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hWSUQwZ2UzMHNJR05iUlYwZ1BTQlZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVlnUFNCVlcwUmRPd29nSUNBZ0lDQWdJQ0FnSUNCR0lEMDlQU0IyYjJsa0lEQWdKaVlnS0VZZ1BTQlFMbU5zYjI1bEtDa3NJRlZiUkYwZ1BTQkdLU3dnVUNBOUlFWTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQlFMblpwYzJsaWJHVWdQU0JCTG5acGMybGliR1VzSUZBdWQybHlaV1p5WVcxbElEMGdRUzUzYVhKbFpuSmhiV1VzSUVJZ1BUMDlJR2x5SUQ4Z1VDNXphV1JsSUQwZ1FTNXphR0ZrYjNkVGFXUmxJQ0U5UFNCdWRXeHNJRDhnUVM1emFHRmtiM2RUYVdSbElEb2dRUzV6YVdSbElEb2dVQzV6YVdSbElEMGdRUzV6YUdGa2IzZFRhV1JsSUNFOVBTQnVkV3hzSUQ4Z1FTNXphR0ZrYjNkVGFXUmxJRG9nZFZ0QkxuTnBaR1ZkTENCUUxtRnNjR2hoVFdGd0lEMGdRUzVoYkhCb1lVMWhjQ3dnVUM1aGJIQm9ZVlJsYzNRZ1BTQkJMbUZzY0doaFZHVnpkQ3dnVUM1amJHbHdVMmhoWkc5M2N5QTlJRUV1WTJ4cGNGTm9ZV1J2ZDNNc0lGQXVZMnhwY0hCcGJtZFFiR0Z1WlhNZ1BTQkJMbU5zYVhCd2FXNW5VR3hoYm1WekxDQlFMbU5zYVhCSmJuUmxjbk5sWTNScGIyNGdQU0JCTG1Oc2FYQkpiblJsY25ObFkzUnBiMjRzSUZBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ1FTNWthWE53YkdGalpXMWxiblJOWVhBc0lGQXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0JCTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCUUxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQkJMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXNJRkF1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1FTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJRkF1YkdsdVpYZHBaSFJvSUQwZ1FTNXNhVzVsZDJsa2RHZ3NJRXd1YVhOUWIybHVkRXhwWjJoMElEMDlQU0FoTUNBbUppQlFMbWx6VFdWemFFUnBjM1JoYm1ObFRXRjBaWEpwWVd3Z1BUMDlJQ0V3SUNZbUlDaFFMbkpsWm1WeVpXNWpaVkJ2YzJsMGFXOXVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloTUxtMWhkSEpwZUZkdmNteGtLU3dnVUM1dVpXRnlSR2x6ZEdGdVkyVWdQU0JKTENCUUxtWmhja1JwYzNSaGJtTmxJRDBnYXlrc0lGQTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJmS0hrc0lHSXNJRUVzSUV3c0lFa3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2VTNTJhWE5wWW14bElEMDlQU0FoTVNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUdsbUlDaDVMbXhoZVdWeWN5NTBaWE4wS0dJdWJHRjVaWEp6S1NBbUppQW9lUzVwYzAxbGMyZ2dmSHdnZVM1cGMweHBibVVnZkh3Z2VTNXBjMUJ2YVc1MGN5a2dKaVlnS0hrdVkyRnpkRk5vWVdSdmR5QjhmQ0I1TG5KbFkyVnBkbVZUYUdGa2IzY2dKaVlnU1NBOVBUMGdhWElwSUNZbUlDZ2hlUzVtY25WemRIVnRRM1ZzYkdWa0lIeDhJRzR1YVc1MFpYSnpaV04wYzA5aWFtVmpkQ2g1S1NrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZVM1dGIyUmxiRlpwWlhkTllYUnlhWGd1YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWhCTG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlN3Z2VTNXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JRSUQwZ1pTNTFjR1JoZEdVb2VTa3NJSGNnUFNCNUxtMWhkR1Z5YVdGc093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2gzS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCUUxtZHliM1Z3Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUkNBOUlEQXNJRlVnUFNCRkxteGxibWQwYURzZ1JDQThJRlU3SUVRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0JGVzBSZExDQlBJRDBnZDF0R0xtMWhkR1Z5YVdGc1NXNWtaWGhkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hQSUNZbUlFOHVkbWx6YVdKc1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYm1VZ1BTQndLSGtzSUZBc0lFOHNJRXdzSUVFdWJtVmhjaXdnUVM1bVlYSXNJRWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG5KbGJtUmxja0oxWm1abGNrUnBjbVZqZENoQkxDQnVkV3hzTENCUUxDQnVaU3dnZVN3Z1JpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSGN1ZG1semFXSnNaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0J3S0hrc0lGQXNJSGNzSUV3c0lFRXVibVZoY2l3Z1FTNW1ZWElzSUVrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NXlaVzVrWlhKQ2RXWm1aWEpFYVhKbFkzUW9RU3dnYm5Wc2JDd2dVQ3dnUlN3Z2VTd2diblZzYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElFSWdQU0I1TG1Ob2FXeGtjbVZ1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVUNBOUlEQXNJSGNnUFNCQ0xteGxibWQwYURzZ1VDQThJSGM3SUZBckt5bGZLRUpiVUYwc0lHSXNJRUVzSUV3c0lFa3BPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJRk40S0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdkQzVwYzFkbFlrZE1NanNLSUNBZ0lHWjFibU4wYVc5dUlHa29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGSWdQU0FoTVN3Z1pXVWdQU0J1WlhjZ1ZtVXNJRkVnUFNCdWRXeHNMQ0JGWlNBOUlHNWxkeUJXWlNnd0xDQXdMQ0F3TENBd0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSTllYTnJPaUJtZFc1amRHbHZiaWh0WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VTQWhQVDBnYldVZ0ppWWdJVklnSmlZZ0tITXVZMjlzYjNKTllYTnJLRzFsTENCdFpTd2diV1VzSUcxbEtTd2dVU0E5SUcxbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlYwVEc5amEyVmtPaUJtZFc1amRHbHZiaWh0WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VpQTlJRzFsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCelpYUkRiR1ZoY2pvZ1puVnVZM1JwYjI0b2JXVXNJRkpsTENCdlpTd2dUR1VzSUZobEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQllaU0E5UFQwZ0lUQWdKaVlnS0cxbElDbzlJRXhsTENCU1pTQXFQU0JNWlN3Z2IyVWdLajBnVEdVcExDQmxaUzV6WlhRb2JXVXNJRkpsTENCdlpTd2dUR1VwTENCRlpTNWxjWFZoYkhNb1pXVXBJRDA5UFNBaE1TQW1KaUFvY3k1amJHVmhja052Ykc5eUtHMWxMQ0JTWlN3Z2IyVXNJRXhsS1N3Z1JXVXVZMjl3ZVNobFpTa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JTSUQwZ0lURXNJRkVnUFNCdWRXeHNMQ0JGWlM1elpYUW9MVEVzSURBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhJb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUZJZ1BTQWhNU3dnWldVZ1BTQnVkV3hzTENCUklEMGdiblZzYkN3Z1JXVWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEZSbGMzUTZJR1oxYm1OMGFXOXVLRzFsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFpTQS9JR3hsS0RJNU1qa3BJRG9nWm1Vb01qa3lPU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGRFMWhjMnM2SUdaMWJtTjBhVzl1S0cxbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxaU0FoUFQwZ2JXVWdKaVlnSVZJZ0ppWWdLSE11WkdWd2RHaE5ZWE5yS0cxbEtTd2daV1VnUFNCdFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEVaMWJtTTZJR1oxYm1OMGFXOXVLRzFsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9VU0FoUFQwZ2JXVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iV1VwSUhOM2FYUmphQ2h0WlNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdSWFU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtUmxjSFJvUm5WdVl5ZzFNVElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1FYVTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1SbGNIUm9SblZ1WXlnMU1Ua3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnUTNVNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbVJsY0hSb1JuVnVZeWcxTVRNcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdaV0U2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtUmxjSFJvUm5WdVl5ZzFNVFVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1RIVTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1SbGNIUm9SblZ1WXlnMU1UUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnVW5VNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbVJsY0hSb1JuVnVZeWcxTVRncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdVSFU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtUmxjSFJvUm5WdVl5ZzFNVFlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1NYVTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1SbGNIUm9SblZ1WXlnMU1UY3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbVJsY0hSb1JuVnVZeWcxTVRVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSE11WkdWd2RHaEdkVzVqS0RVeE5TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVVNBOUlHMWxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSTWIyTnJaV1E2SUdaMWJtTjBhVzl1S0cxbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlNJRDBnYldVN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRU5zWldGeU9pQm1kVzVqZEdsdmJpaHRaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUldVZ0lUMDlJRzFsSUNZbUlDaHpMbU5zWldGeVJHVndkR2dvYldVcExDQkZaU0E5SUcxbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVaUE5SUNFeExDQmxaU0E5SUc1MWJHd3NJRkVnUFNCdWRXeHNMQ0JGWlNBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYnlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnVWlBOUlDRXhMQ0JsWlNBOUlHNTFiR3dzSUZFZ1BTQnVkV3hzTENCRlpTQTlJRzUxYkd3c0lHMWxJRDBnYm5Wc2JDd2dVbVVnUFNCdWRXeHNMQ0J2WlNBOUlHNTFiR3dzSUV4bElEMGdiblZzYkN3Z1dHVWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEZSbGMzUTZJR1oxYm1OMGFXOXVLRmRsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCU0lIeDhJQ2hYWlNBL0lHeGxLREk1TmpBcElEb2dabVVvTWprMk1Da3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSTllYTnJPaUJtZFc1amRHbHZiaWhYWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXVWdJVDA5SUZkbElDWW1JQ0ZTSUNZbUlDaHpMbk4wWlc1amFXeE5ZWE5yS0ZkbEtTd2daV1VnUFNCWFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEVaMWJtTTZJR1oxYm1OMGFXOXVLRmRsTENCVmRDd2dUM1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNoUklDRTlQU0JYWlNCOGZDQkZaU0FoUFQwZ1ZYUWdmSHdnYldVZ0lUMDlJRTkwS1NBbUppQW9jeTV6ZEdWdVkybHNSblZ1WXloWFpTd2dWWFFzSUU5MEtTd2dVU0E5SUZkbExDQkZaU0E5SUZWMExDQnRaU0E5SUU5MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlYwVDNBNklHWjFibU4wYVc5dUtGZGxMQ0JWZEN3Z1QzUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2hTWlNBaFBUMGdWMlVnZkh3Z2IyVWdJVDA5SUZWMElIeDhJRXhsSUNFOVBTQlBkQ2tnSmlZZ0tITXVjM1JsYm1OcGJFOXdLRmRsTENCVmRDd2dUM1FwTENCU1pTQTlJRmRsTENCdlpTQTlJRlYwTENCTVpTQTlJRTkwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBURzlqYTJWa09pQm1kVzVqZEdsdmJpaFhaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVWlBOUlGZGxPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSRGJHVmhjam9nWm5WdVkzUnBiMjRvVjJVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGaGxJQ0U5UFNCWFpTQW1KaUFvY3k1amJHVmhjbE4wWlc1amFXd29WMlVwTENCWVpTQTlJRmRsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VpQTlJQ0V4TENCbFpTQTlJRzUxYkd3c0lGRWdQU0J1ZFd4c0xDQkZaU0E5SUc1MWJHd3NJRzFsSUQwZ2JuVnNiQ3dnVW1VZ1BTQnVkV3hzTENCdlpTQTlJRzUxYkd3c0lFeGxJRDBnYm5Wc2JDd2dXR1VnUFNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR3hsZENCaElEMGdibVYzSUdrc0lHd2dQU0J1WlhjZ2Npd2dZeUE5SUc1bGR5QnZMQ0JvSUQwZ2UzMHNJSFVnUFNCN2ZTd2daQ0E5SUc1MWJHd3NJR1lnUFNBaE1Td2diU0E5SUc1MWJHd3NJSGdnUFNCdWRXeHNMQ0IySUQwZ2JuVnNiQ3dnWnlBOUlHNTFiR3dzSUhBZ1BTQnVkV3hzTENCZklEMGdiblZzYkN3Z2VTQTlJRzUxYkd3c0lHSWdQU0FoTVN3Z1FTQTlJRzUxYkd3c0lFd2dQU0J1ZFd4c0xDQkpJRDBnYm5Wc2JDd2dheUE5SUc1MWJHd3NJRUlnUFNCdWRXeHNMQ0JRSUQwZ2N5NW5aWFJRWVhKaGJXVjBaWElvTXpVMk5qRXBMQ0IzSUQwZ0lURXNJRVVnUFNBd0xDQkVJRDBnY3k1blpYUlFZWEpoYldWMFpYSW9Oemt6T0NrN0NpQWdJQ0JFTG1sdVpHVjRUMllvSWxkbFlrZE1JaWtnSVQwOUlDMHhJRDhnS0VVZ1BTQndZWEp6WlVac2IyRjBLQzllVjJWaVIwd2dLRnhrS1M4dVpYaGxZeWhFS1ZzeFhTa3NJSGNnUFNCRklENDlJREVwSURvZ1JDNXBibVJsZUU5bUtDSlBjR1Z1UjB3Z1JWTWlLU0FoUFQwZ0xURWdKaVlnS0VVZ1BTQndZWEp6WlVac2IyRjBLQzllVDNCbGJrZE1JRVZUSUNoY1pDa3ZMbVY0WldNb1JDbGJNVjBwTENCM0lEMGdSU0ErUFNBeUtUc0tJQ0FnSUd4bGRDQlZJRDBnYm5Wc2JDd2dSaUE5SUh0OUxDQlBJRDBnY3k1blpYUlFZWEpoYldWMFpYSW9NekE0T0Nrc0lHNWxJRDBnY3k1blpYUlFZWEpoYldWMFpYSW9NamszT0Nrc0lHTmxJRDBnYm1WM0lGWmxLQ2t1Wm5KdmJVRnljbUY1S0U4cExDQldJRDBnYm1WM0lGWmxLQ2t1Wm5KdmJVRnljbUY1S0c1bEtUc0tJQ0FnSUdaMWJtTjBhVzl1SUZjb1Vpd2daV1VzSUZFcElIc0tJQ0FnSUNBZ0lDQnNaWFFnUldVZ1BTQnVaWGNnVldsdWREaEJjbkpoZVNnMEtTd2diV1VnUFNCekxtTnlaV0YwWlZSbGVIUjFjbVVvS1RzS0lDQWdJQ0FnSUNCekxtSnBibVJVWlhoMGRYSmxLRklzSUcxbEtTd2djeTUwWlhoUVlYSmhiV1YwWlhKcEtGSXNJREV3TWpReExDQTVOekk0S1N3Z2N5NTBaWGhRWVhKaGJXVjBaWEpwS0ZJc0lERXdNalF3TENBNU56STRLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRkpsSUQwZ01Ec2dVbVVnUENCUk95QlNaU3NyS1hNdWRHVjRTVzFoWjJVeVJDaGxaU0FySUZKbExDQXdMQ0EyTkRBNExDQXhMQ0F4TENBd0xDQTJOREE0TENBMU1USXhMQ0JGWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUcxbE93b2dJQ0FnZlFvZ0lDQWdiR1YwSUdobElEMGdlMzA3Q2lBZ0lDQm9aVnN6TlRVelhTQTlJRmNvTXpVMU15d2dNelUxTXl3Z01Ta3NJR2hsV3pNME1EWTNYU0E5SUZjb016UXdOamNzSURNME1EWTVMQ0EyS1N3Z1lTNXpaWFJEYkdWaGNpZ3dMQ0F3TENBd0xDQXhLU3dnYkM1elpYUkRiR1ZoY2lneEtTd2dZeTV6WlhSRGJHVmhjaWd3S1N3Z2JHVW9Namt5T1Nrc0lHd3VjMlYwUm5WdVl5aGxZU2tzSUU5bEtDRXhLU3dnUnloMGJDa3NJR3hsS0RJNE9EUXBMQ0JuWlNoMmJpazdDaUFnSUNCbWRXNWpkR2x2YmlCc1pTaFNLU0I3Q2lBZ0lDQWdJQ0FnYUZ0U1hTQWhQVDBnSVRBZ0ppWWdLSE11Wlc1aFlteGxLRklwTENCb1cxSmRJRDBnSVRBcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdabVVvVWlrZ2V3b2dJQ0FnSUNBZ0lHaGJVbDBnSVQwOUlDRXhJQ1ltSUNoekxtUnBjMkZpYkdVb1Vpa3NJR2hiVWwwZ1BTQWhNU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCQ1pTaFNMQ0JsWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMVcxSmRJQ0U5UFNCbFpTQS9JQ2h6TG1KcGJtUkdjbUZ0WldKMVptWmxjaWhTTENCbFpTa3NJSFZiVWwwZ1BTQmxaU3dnYmlBbUppQW9VaUE5UFQwZ016WXdNRGtnSmlZZ0tIVmJNell4TmpCZElEMGdaV1VwTENCU0lEMDlQU0F6TmpFMk1DQW1KaUFvZFZzek5qQXdPVjBnUFNCbFpTa3BMQ0FoTUNrZ09pQWhNVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZrb1Vpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmtJQ0U5UFNCU0lEOGdLSE11ZFhObFVISnZaM0poYlNoU0tTd2daQ0E5SUZJc0lDRXdLU0E2SUNFeE93b2dJQ0FnZlFvZ0lDQWdiR1YwSUVObElEMGdld29nSUNBZ0lDQWdJRnRmYVYwNklETXlOemMwTEFvZ0lDQWdJQ0FnSUZ0dGRWMDZJRE15TnpjNExBb2dJQ0FnSUNBZ0lGdG5kVjA2SURNeU56YzVDaUFnSUNCOU93b2dJQ0FnYVdZZ0tHNHBJRU5sVzNOc1hTQTlJRE15TnpjMUxDQkRaVnR2YkYwZ1BTQXpNamMzTmpzS0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JTSUQwZ1pTNW5aWFFvSWtWWVZGOWliR1Z1WkY5dGFXNXRZWGdpS1RzS0lDQWdJQ0FnSUNCU0lDRTlQU0J1ZFd4c0lDWW1JQ2hEWlZ0emJGMGdQU0JTTGsxSlRsOUZXRlFzSUVObFcyOXNYU0E5SUZJdVRVRllYMFZZVkNrN0NpQWdJQ0I5Q2lBZ0lDQnNaWFFnZVdVZ1BTQjdDaUFnSUNBZ0lDQWdXM2gxWFRvZ01Dd0tJQ0FnSUNBZ0lDQmJlWFZkT2lBeExBb2dJQ0FnSUNBZ0lGdDJkVjA2SURjMk9Dd0tJQ0FnSUNBZ0lDQmJSMk5kT2lBM056QXNDaUFnSUNBZ0lDQWdXMVIxWFRvZ056YzJMQW9nSUNBZ0lDQWdJRnQzZFYwNklEYzNOQ3dLSUNBZ0lDQWdJQ0JiVFhWZE9pQTNOeklzQ2lBZ0lDQWdJQ0FnVzE5MVhUb2dOelk1TEFvZ0lDQWdJQ0FnSUZ0V1kxMDZJRGMzTVN3S0lDQWdJQ0FnSUNCYlUzVmRPaUEzTnpVc0NpQWdJQ0FnSUNBZ1cySjFYVG9nTnpjekNpQWdJQ0I5T3dvZ0lDQWdablZ1WTNScGIyNGdaMlVvVWl3Z1pXVXNJRkVzSUVWbExDQnRaU3dnVW1Vc0lHOWxMQ0JNWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hTSUQwOVBTQjJiaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1JRDA5UFNBaE1DQW1KaUFvWm1Vb016QTBNaWtzSUdZZ1BTQWhNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1lnUFQwOUlDRXhJQ1ltSUNoc1pTZ3pNRFF5S1N3Z1ppQTlJQ0V3S1N3Z1VpQWhQVDBnY0hVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGSWdJVDA5SUcwZ2ZId2dUR1VnSVQwOUlHSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnb2VDQWhQVDBnWDJrZ2ZId2djQ0FoUFQwZ1gya3BJQ1ltSUNoekxtSnNaVzVrUlhGMVlYUnBiMjRvTXpJM056UXBMQ0I0SUQwZ1gya3NJSEFnUFNCZmFTa3NJRXhsS1NCemQybDBZMmdvVWlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCemNqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWliR1Z1WkVaMWJtTlRaWEJoY21GMFpTZ3hMQ0EzTnpFc0lERXNJRGMzTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdibXc2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11WW14bGJtUkdkVzVqS0RFc0lERXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUdsc09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtSnNaVzVrUm5WdVkxTmxjR0Z5WVhSbEtEQXNJREFzSURjMk9Td2dOemN4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQnliRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVpYkdWdVpFWjFibU5UWlhCaGNtRjBaU2d3TENBM05qZ3NJREFzSURjM01DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVTNSaGRHVTZJRWx1ZG1Gc2FXUWdZbXhsYm1ScGJtYzZJQ0lzSUZJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2MzZHBkR05vS0ZJcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2MzSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVZbXhsYm1SR2RXNWpVMlZ3WVhKaGRHVW9OemN3TENBM056RXNJREVzSURjM01TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnYm13NkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdVlteGxibVJHZFc1aktEYzNNQ3dnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdhV3c2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11WW14bGJtUkdkVzVqS0RBc0lEYzJPU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2NtdzZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVZbXhsYm1SR2RXNWpLREFzSURjMk9DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVTNSaGRHVTZJRWx1ZG1Gc2FXUWdZbXhsYm1ScGJtYzZJQ0lzSUZJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFlnUFNCdWRXeHNMQ0JuSUQwZ2JuVnNiQ3dnWHlBOUlHNTFiR3dzSUhrZ1BTQnVkV3hzTENCdElEMGdVaXdnWWlBOUlFeGxPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiV1VnUFNCdFpTQjhmQ0JsWlN3Z1VtVWdQU0JTWlNCOGZDQlJMQ0J2WlNBOUlHOWxJSHg4SUVWbExDQW9aV1VnSVQwOUlIZ2dmSHdnYldVZ0lUMDlJSEFwSUNZbUlDaHpMbUpzWlc1a1JYRjFZWFJwYjI1VFpYQmhjbUYwWlNoRFpWdGxaVjBzSUVObFcyMWxYU2tzSUhnZ1BTQmxaU3dnY0NBOUlHMWxLU3dnS0ZFZ0lUMDlJSFlnZkh3Z1JXVWdJVDA5SUdjZ2ZId2dVbVVnSVQwOUlGOGdmSHdnYjJVZ0lUMDlJSGtwSUNZbUlDaHpMbUpzWlc1a1JuVnVZMU5sY0dGeVlYUmxLSGxsVzFGZExDQjVaVnRGWlYwc0lIbGxXMUpsWFN3Z2VXVmJiMlZkS1N3Z2RpQTlJRkVzSUdjZ1BTQkZaU3dnWHlBOUlGSmxMQ0I1SUQwZ2IyVXBMQ0J0SUQwZ1Vpd2dZaUE5SUc1MWJHdzdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUI0WlNoU0xDQmxaU2tnZXdvZ0lDQWdJQ0FnSUZJdWMybGtaU0E5UFQwZ1Eya2dQeUJtWlNneU9EZzBLU0E2SUd4bEtESTRPRFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQlJJRDBnVWk1emFXUmxJRDA5UFNCcGREc0tJQ0FnSUNBZ0lDQmxaU0FtSmlBb1VTQTlJQ0ZSS1N3Z1QyVW9VU2tzSUZJdVlteGxibVJwYm1jZ1BUMDlJSE55SUNZbUlGSXVkSEpoYm5Od1lYSmxiblFnUFQwOUlDRXhJRDhnWjJVb2RtNHBJRG9nWjJVb1VpNWliR1Z1WkdsdVp5d2dVaTVpYkdWdVpFVnhkV0YwYVc5dUxDQlNMbUpzWlc1a1UzSmpMQ0JTTG1Kc1pXNWtSSE4wTENCU0xtSnNaVzVrUlhGMVlYUnBiMjVCYkhCb1lTd2dVaTVpYkdWdVpGTnlZMEZzY0doaExDQlNMbUpzWlc1a1JITjBRV3h3YUdFc0lGSXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhLU3dnYkM1elpYUkdkVzVqS0ZJdVpHVndkR2hHZFc1aktTd2diQzV6WlhSVVpYTjBLRkl1WkdWd2RHaFVaWE4wS1N3Z2JDNXpaWFJOWVhOcktGSXVaR1Z3ZEdoWGNtbDBaU2tzSUdFdWMyVjBUV0Z6YXloU0xtTnZiRzl5VjNKcGRHVXBPd29nSUNBZ0lDQWdJR3hsZENCRlpTQTlJRkl1YzNSbGJtTnBiRmR5YVhSbE93b2dJQ0FnSUNBZ0lHTXVjMlYwVkdWemRDaEZaU2tzSUVWbElDWW1JQ2hqTG5ObGRFMWhjMnNvVWk1emRHVnVZMmxzVjNKcGRHVk5ZWE5yS1N3Z1l5NXpaWFJHZFc1aktGSXVjM1JsYm1OcGJFWjFibU1zSUZJdWMzUmxibU5wYkZKbFppd2dVaTV6ZEdWdVkybHNSblZ1WTAxaGMyc3BMQ0JqTG5ObGRFOXdLRkl1YzNSbGJtTnBiRVpoYVd3c0lGSXVjM1JsYm1OcGJGcEdZV2xzTENCU0xuTjBaVzVqYVd4YVVHRnpjeWtwTENCTEtGSXVjRzlzZVdkdmJrOW1abk5sZEN3Z1VpNXdiMng1WjI5dVQyWm1jMlYwUm1GamRHOXlMQ0JTTG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lrc0lGSXVZV3h3YUdGVWIwTnZkbVZ5WVdkbElEMDlQU0FoTUNBL0lHeGxLRE15T1RJMktTQTZJR1psS0RNeU9USTJLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUU5bEtGSXBJSHNLSUNBZ0lDQWdJQ0JCSUNFOVBTQlNJQ1ltSUNoU0lEOGdjeTVtY205dWRFWmhZMlVvTWpNd05Da2dPaUJ6TG1aeWIyNTBSbUZqWlNneU16QTFLU3dnUVNBOUlGSXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUnloU0tTQjdDaUFnSUNBZ0lDQWdVaUFoUFQwZ2RYVWdQeUFvYkdVb01qZzROQ2tzSUZJZ0lUMDlJRXdnSmlZZ0tGSWdQVDA5SUhSc0lEOGdjeTVqZFd4c1JtRmpaU2d4TURJNUtTQTZJRklnUFQwOUlHUjFJRDhnY3k1amRXeHNSbUZqWlNneE1ESTRLU0E2SUhNdVkzVnNiRVpoWTJVb01UQXpNaWtwS1NBNklHWmxLREk0T0RRcExDQk1JRDBnVWpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHb29VaWtnZXdvZ0lDQWdJQ0FnSUZJZ0lUMDlJRWtnSmlZZ0tIY2dKaVlnY3k1c2FXNWxWMmxrZEdnb1Vpa3NJRWtnUFNCU0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRXNvVWl3Z1pXVXNJRkVwSUhzS0lDQWdJQ0FnSUNCU0lEOGdLR3hsS0RNeU9ESXpLU3dnS0dzZ0lUMDlJR1ZsSUh4OElFSWdJVDA5SUZFcElDWW1JQ2h6TG5CdmJIbG5iMjVQWm1aelpYUW9aV1VzSUZFcExDQnJJRDBnWldVc0lFSWdQU0JSS1NrZ09pQm1aU2d6TWpneU15azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIxWlNoU0tTQjdDaUFnSUNBZ0lDQWdVaUEvSUd4bEtETXdPRGtwSURvZ1ptVW9NekE0T1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnpaU2hTS1NCN0NpQWdJQ0FnSUNBZ1VpQTlQVDBnZG05cFpDQXdJQ1ltSUNoU0lEMGdNek01T0RRZ0t5QlFJQzBnTVNrc0lGVWdJVDA5SUZJZ0ppWWdLSE11WVdOMGFYWmxWR1Y0ZEhWeVpTaFNLU3dnVlNBOUlGSXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnVTJVb1Vpd2daV1VwSUhzS0lDQWdJQ0FnSUNCVklEMDlQU0J1ZFd4c0lDWW1JSE5sS0NrN0NpQWdJQ0FnSUNBZ2JHVjBJRkVnUFNCR1cxVmRPd29nSUNBZ0lDQWdJRkVnUFQwOUlIWnZhV1FnTUNBbUppQW9VU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ2RtOXBaQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBaWGgwZFhKbE9pQjJiMmxrSURBS0lDQWdJQ0FnSUNCOUxDQkdXMVZkSUQwZ1VTa3NJQ2hSTG5SNWNHVWdJVDA5SUZJZ2ZId2dVUzUwWlhoMGRYSmxJQ0U5UFNCbFpTa2dKaVlnS0hNdVltbHVaRlJsZUhSMWNtVW9VaXdnWldVZ2ZId2dhR1ZiVWwwcExDQlJMblI1Y0dVZ1BTQlNMQ0JSTG5SbGVIUjFjbVVnUFNCbFpTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJVWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnVWlBOUlFWmJWVjA3Q2lBZ0lDQWdJQ0FnVWlBaFBUMGdkbTlwWkNBd0lDWW1JRkl1ZEhsd1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNoekxtSnBibVJVWlhoMGRYSmxLRkl1ZEhsd1pTd2diblZzYkNrc0lGSXVkSGx3WlNBOUlIWnZhV1FnTUN3Z1VpNTBaWGgwZFhKbElEMGdkbTlwWkNBd0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRkJsS0NrZ2V3b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVZMjl0Y0hKbGMzTmxaRlJsZUVsdFlXZGxNa1F1WVhCd2JIa29jeXdnWVhKbmRXMWxiblJ6S1RzS0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoU0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVTNSaGRHVTZJaXdnVWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdXV1VvS1NCN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NTBaWGhUZFdKSmJXRm5aVEpFTG1Gd2NHeDVLSE1zSUdGeVozVnRaVzUwY3lrN0NpQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1Vpa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZOMFlYUmxPaUlzSUZJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRU1vS1NCN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NTBaWGhUZFdKSmJXRm5aVE5FTG1Gd2NHeDVLSE1zSUdGeVozVnRaVzUwY3lrN0NpQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1Vpa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZOMFlYUmxPaUlzSUZJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRlFvS1NCN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NWpiMjF3Y21WemMyVmtWR1Y0VTNWaVNXMWhaMlV5UkM1aGNIQnNlU2h6TENCaGNtZDFiV1Z1ZEhNcE93b2dJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tGSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4VGRHRjBaVG9pTENCU0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJLS0NrZ2V3b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVkR1Y0VTNSdmNtRm5aVEpFTG1Gd2NHeDVLSE1zSUdGeVozVnRaVzUwY3lrN0NpQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1Vpa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZOMFlYUmxPaUlzSUZJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJQ1FvS1NCN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NTBaWGhUZEc5eVlXZGxNMFF1WVhCd2JIa29jeXdnWVhKbmRXMWxiblJ6S1RzS0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoU0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVTNSaGRHVTZJaXdnVWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdjbVVvS1NCN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NTBaWGhKYldGblpUSkVMbUZ3Y0d4NUtITXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQWdJQ0FnZlNCallYUmphQ0FvVWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pSXNJRklwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGb29LU0I3Q2lBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1MFpYaEpiV0ZuWlRORUxtRndjR3g1S0hNc0lHRnlaM1Z0Wlc1MGN5azdDaUFnSUNBZ0lDQWdmU0JqWVhSamFDQW9VaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGTjBZWFJsT2lJc0lGSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUUxbEtGSXBJSHNLSUNBZ0lDQWdJQ0JqWlM1bGNYVmhiSE1vVWlrZ1BUMDlJQ0V4SUNZbUlDaHpMbk5qYVhOemIzSW9VaTU0TENCU0xua3NJRkl1ZWl3Z1VpNTNLU3dnWTJVdVkyOXdlU2hTS1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjJaU2hTS1NCN0NpQWdJQ0FnSUNBZ1ZpNWxjWFZoYkhNb1Vpa2dQVDA5SUNFeElDWW1JQ2h6TG5acFpYZHdiM0owS0ZJdWVDd2dVaTU1TENCU0xub3NJRkl1ZHlrc0lGWXVZMjl3ZVNoU0tTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIwWlNncElIc0tJQ0FnSUNBZ0lDQnpMbVJwYzJGaWJHVW9NekEwTWlrc0lITXVaR2x6WVdKc1pTZ3lPRGcwS1N3Z2N5NWthWE5oWW14bEtESTVNamtwTENCekxtUnBjMkZpYkdVb016STRNak1wTENCekxtUnBjMkZpYkdVb016QTRPU2tzSUhNdVpHbHpZV0pzWlNneU9UWXdLU3dnY3k1a2FYTmhZbXhsS0RNeU9USTJLU3dnY3k1aWJHVnVaRVZ4ZFdGMGFXOXVLRE15TnpjMEtTd2djeTVpYkdWdVpFWjFibU1vTVN3Z01Da3NJSE11WW14bGJtUkdkVzVqVTJWd1lYSmhkR1VvTVN3Z01Dd2dNU3dnTUNrc0lITXVZMjlzYjNKTllYTnJLQ0V3TENBaE1Dd2dJVEFzSUNFd0tTd2djeTVqYkdWaGNrTnZiRzl5S0RBc0lEQXNJREFzSURBcExDQnpMbVJsY0hSb1RXRnpheWdoTUNrc0lITXVaR1Z3ZEdoR2RXNWpLRFV4TXlrc0lITXVZMnhsWVhKRVpYQjBhQ2d4S1N3Z2N5NXpkR1Z1WTJsc1RXRnpheWcwTWprME9UWTNNamsxS1N3Z2N5NXpkR1Z1WTJsc1JuVnVZeWcxTVRrc0lEQXNJRFF5T1RRNU5qY3lPVFVwTENCekxuTjBaVzVqYVd4UGNDZzNOamd3TENBM05qZ3dMQ0EzTmpnd0tTd2djeTVqYkdWaGNsTjBaVzVqYVd3b01Da3NJSE11WTNWc2JFWmhZMlVvTVRBeU9Ta3NJSE11Wm5KdmJuUkdZV05sS0RJek1EVXBMQ0J6TG5CdmJIbG5iMjVQWm1aelpYUW9NQ3dnTUNrc0lITXVZV04wYVhabFZHVjRkSFZ5WlNnek16azROQ2tzSUhNdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1UWXdMQ0J1ZFd4c0tTd2diaUE5UFQwZ0lUQWdKaVlnS0hNdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1EQTVMQ0J1ZFd4c0tTd2djeTVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell3TURnc0lHNTFiR3dwS1N3Z2N5NTFjMlZRY205bmNtRnRLRzUxYkd3cExDQnpMbXhwYm1WWGFXUjBhQ2d4S1N3Z2N5NXpZMmx6YzI5eUtEQXNJREFzSUhNdVkyRnVkbUZ6TG5kcFpIUm9MQ0J6TG1OaGJuWmhjeTVvWldsbmFIUXBMQ0J6TG5acFpYZHdiM0owS0RBc0lEQXNJSE11WTJGdWRtRnpMbmRwWkhSb0xDQnpMbU5oYm5aaGN5NW9aV2xuYUhRcExDQm9JRDBnZTMwc0lGVWdQU0J1ZFd4c0xDQkdJRDBnZTMwc0lIVWdQU0I3ZlN3Z1pDQTlJRzUxYkd3c0lHWWdQU0FoTVN3Z2JTQTlJRzUxYkd3c0lIZ2dQU0J1ZFd4c0xDQjJJRDBnYm5Wc2JDd2daeUE5SUc1MWJHd3NJSEFnUFNCdWRXeHNMQ0JmSUQwZ2JuVnNiQ3dnZVNBOUlHNTFiR3dzSUdJZ1BTQWhNU3dnUVNBOUlHNTFiR3dzSUV3Z1BTQnVkV3hzTENCSklEMGdiblZzYkN3Z2F5QTlJRzUxYkd3c0lFSWdQU0J1ZFd4c0xDQmpaUzV6WlhRb01Dd2dNQ3dnY3k1allXNTJZWE11ZDJsa2RHZ3NJSE11WTJGdWRtRnpMbWhsYVdkb2RDa3NJRll1YzJWMEtEQXNJREFzSUhNdVkyRnVkbUZ6TG5kcFpIUm9MQ0J6TG1OaGJuWmhjeTVvWldsbmFIUXBMQ0JoTG5KbGMyVjBLQ2tzSUd3dWNtVnpaWFFvS1N3Z1l5NXlaWE5sZENncE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQmlkV1ptWlhKek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJoTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYURvZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnYzNSbGJtTnBiRG9nWXdvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1pXNWhZbXhsT2lCc1pTd0tJQ0FnSUNBZ0lDQmthWE5oWW14bE9pQm1aU3dLSUNBZ0lDQWdJQ0JpYVc1a1JuSmhiV1ZpZFdabVpYSTZJRUpsTEFvZ0lDQWdJQ0FnSUhWelpWQnliMmR5WVcwNklGa3NDaUFnSUNBZ0lDQWdjMlYwUW14bGJtUnBibWM2SUdkbExBb2dJQ0FnSUNBZ0lITmxkRTFoZEdWeWFXRnNPaUI0WlN3S0lDQWdJQ0FnSUNCelpYUkdiR2x3VTJsa1pXUTZJRTlsTEFvZ0lDQWdJQ0FnSUhObGRFTjFiR3hHWVdObE9pQkhMQW9nSUNBZ0lDQWdJSE5sZEV4cGJtVlhhV1IwYURvZ2Fpd0tJQ0FnSUNBZ0lDQnpaWFJRYjJ4NVoyOXVUMlptYzJWME9pQkxMQW9nSUNBZ0lDQWdJSE5sZEZOamFYTnpiM0pVWlhOME9pQjFaU3dLSUNBZ0lDQWdJQ0JoWTNScGRtVlVaWGgwZFhKbE9pQnpaU3dLSUNBZ0lDQWdJQ0JpYVc1a1ZHVjRkSFZ5WlRvZ1UyVXNDaUFnSUNBZ0lDQWdkVzVpYVc1a1ZHVjRkSFZ5WlRvZ1ZHVXNDaUFnSUNBZ0lDQWdZMjl0Y0hKbGMzTmxaRlJsZUVsdFlXZGxNa1E2SUZCbExBb2dJQ0FnSUNBZ0lIUmxlRWx0WVdkbE1rUTZJSEpsTEFvZ0lDQWdJQ0FnSUhSbGVFbHRZV2RsTTBRNklGb3NDaUFnSUNBZ0lDQWdkR1Y0VTNSdmNtRm5aVEpFT2lCS0xBb2dJQ0FnSUNBZ0lIUmxlRk4wYjNKaFoyVXpSRG9nSkN3S0lDQWdJQ0FnSUNCMFpYaFRkV0pKYldGblpUSkVPaUJaWlN3S0lDQWdJQ0FnSUNCMFpYaFRkV0pKYldGblpUTkVPaUJETEFvZ0lDQWdJQ0FnSUdOdmJYQnlaWE56WldSVVpYaFRkV0pKYldGblpUSkVPaUJVTEFvZ0lDQWdJQ0FnSUhOamFYTnpiM0k2SUUxbExBb2dJQ0FnSUNBZ0lIWnBaWGR3YjNKME9pQjJaU3dLSUNBZ0lDQWdJQ0J5WlhObGREb2dkR1VLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnVkhnb2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ2JHVjBJR0VnUFNCcExtbHpWMlZpUjB3eUxDQnNJRDBnYVM1dFlYaFVaWGgwZFhKbGN5d2dZeUE5SUdrdWJXRjRRM1ZpWlcxaGNGTnBlbVVzSUdnZ1BTQnBMbTFoZUZSbGVIUjFjbVZUYVhwbExDQjFJRDBnYVM1dFlYaFRZVzF3YkdWekxDQm1JRDBnWlM1b1lYTW9JbGRGUWtkTVgyMTFiSFJwYzJGdGNHeGxaRjl5Wlc1a1pYSmZkRzlmZEdWNGRIVnlaU0lwSUQ4Z1pTNW5aWFFvSWxkRlFrZE1YMjExYkhScGMyRnRjR3hsWkY5eVpXNWtaWEpmZEc5ZmRHVjRkSFZ5WlNJcElEb2dkbTlwWkNBd0xDQnRJRDBnYm1WM0lGZGxZV3ROWVhBc0lIZ3NJSFlnUFNBaE1Uc0tJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdkaUE5SUhSNWNHVnZaaUJQWm1aelkzSmxaVzVEWVc1MllYTWdQQ0FpZFNJZ0ppWWdibVYzSUU5bVpuTmpjbVZsYmtOaGJuWmhjeWd4TENBeEtTNW5aWFJEYjI1MFpYaDBLQ0l5WkNJcElDRTlQU0J1ZFd4c093b2dJQ0FnZlNCallYUmphQ0FnZTMwS0lDQWdJR1oxYm1OMGFXOXVJR2NvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjJJRDhnYm1WM0lFOW1abk5qY21WbGJrTmhiblpoY3loRExDQlVLU0E2SUhGektDSmpZVzUyWVhNaUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSEFvUXl3Z1ZDd2dTaXdnSkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5WlNBOUlERTdDaUFnSUNBZ0lDQWdhV1lnS0NoRExuZHBaSFJvSUQ0Z0pDQjhmQ0JETG1obGFXZG9kQ0ErSUNRcElDWW1JQ2h5WlNBOUlDUWdMeUJOWVhSb0xtMWhlQ2hETG5kcFpIUm9MQ0JETG1obGFXZG9kQ2twTENCeVpTQThJREVnZkh3Z1ZDQTlQVDBnSVRBcElHbG1JQ2gwZVhCbGIyWWdTRlJOVEVsdFlXZGxSV3hsYldWdWRDQThJQ0oxSWlBbUppQkRJR2x1YzNSaGJtTmxiMllnU0ZSTlRFbHRZV2RsUld4bGJXVnVkQ0I4ZkNCMGVYQmxiMllnU0ZSTlRFTmhiblpoYzBWc1pXMWxiblFnUENBaWRTSWdKaVlnUXlCcGJuTjBZVzVqWlc5bUlFaFVUVXhEWVc1MllYTkZiR1Z0Wlc1MElIeDhJSFI1Y0dWdlppQkpiV0ZuWlVKcGRHMWhjQ0E4SUNKMUlpQW1KaUJESUdsdWMzUmhibU5sYjJZZ1NXMWhaMlZDYVhSdFlYQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRm9nUFNCVUlEOGdTbU1nT2lCTllYUm9MbVpzYjI5eUxDQk5aU0E5SUZvb2NtVWdLaUJETG5kcFpIUm9LU3dnZG1VZ1BTQmFLSEpsSUNvZ1F5NW9aV2xuYUhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0I0SUQwOVBTQjJiMmxrSURBZ0ppWWdLSGdnUFNCbktFMWxMQ0IyWlNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RHVWdQU0JLSUQ4Z1p5aE5aU3dnZG1VcElEb2dlRHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSbExuZHBaSFJvSUQwZ1RXVXNJSFJsTG1obGFXZG9kQ0E5SUhabExDQjBaUzVuWlhSRGIyNTBaWGgwS0NJeVpDSXBMbVJ5WVhkSmJXRm5aU2hETENBd0xDQXdMQ0JOWlN3Z2RtVXBMQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRlJsZUhSMWNtVWdhR0Z6SUdKbFpXNGdjbVZ6YVhwbFpDQm1jbTl0SUNnaUlDc2dReTUzYVdSMGFDQXJJQ0o0SWlBcklFTXVhR1ZwWjJoMElDc2dJaWtnZEc4Z0tDSWdLeUJOWlNBcklDSjRJaUFySUhabElDc2dJaWt1SWlrc0lIUmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQnlaWFIxY200Z0ltUmhkR0VpSUdsdUlFTWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJKYldGblpTQnBiaUJFWVhSaFZHVjRkSFZ5WlNCcGN5QjBiMjhnWW1sbklDZ2lJQ3NnUXk1M2FXUjBhQ0FySUNKNElpQXJJRU11YUdWcFoyaDBJQ3NnSWlrdUlpa3NJRU03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRU03Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCZktFTXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhV0VvUXk1M2FXUjBhQ2tnSmlZZ2FXRW9ReTVvWldsbmFIUXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZVNoREtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRWdQeUFoTVNBNklFTXVkM0poY0ZNZ0lUMDlJSFowSUh4OElFTXVkM0poY0ZRZ0lUMDlJSFowSUh4OElFTXViV2x1Um1sc2RHVnlJQ0U5UFNCeWRDQW1KaUJETG0xcGJrWnBiSFJsY2lBaFBUMGdkSFE3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaUtFTXNJRlFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnUXk1blpXNWxjbUYwWlUxcGNHMWhjSE1nSmlZZ1ZDQW1KaUJETG0xcGJrWnBiSFJsY2lBaFBUMGdjblFnSmlZZ1F5NXRhVzVHYVd4MFpYSWdJVDA5SUhSME93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdRU2hES1NCN0NpQWdJQ0FnSUNBZ2N5NW5aVzVsY21GMFpVMXBjRzFoY0NoREtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRXdvUXl3Z1ZDd2dTaXdnSkNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hoSUQwOVBTQWhNU2tnY21WMGRYSnVJRlE3Q2lBZ0lDQWdJQ0FnYVdZZ0tFTWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE5iUTEwZ0lUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlITmJRMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1FYUjBaVzF3ZENCMGJ5QjFjMlVnYm05dUxXVjRhWE4wYVc1bklGZGxZa2RNSUdsdWRHVnlibUZzSUdadmNtMWhkQ0FuSWlBcklFTWdLeUFpSnlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnY21VZ1BTQlVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQlVJRDA5UFNBMk5EQXpJQ1ltSUNoS0lEMDlQU0ExTVRJMklDWW1JQ2h5WlNBOUlETXpNekkyS1N3Z1NpQTlQVDBnTlRFek1TQW1KaUFvY21VZ1BTQXpNek15TlNrc0lFb2dQVDA5SURVeE1qRWdKaVlnS0hKbElEMGdNek16TWpFcEtTd2dWQ0E5UFQwZ05qUXdOeUFtSmlBb1NpQTlQVDBnTlRFeU5pQW1KaUFvY21VZ1BTQXpORGd6Tnlrc0lFb2dQVDA5SURVeE16RWdKaVlnS0hKbElEMGdNelE0TkRNcExDQktJRDA5UFNBMU1USXhJQ1ltSUNoeVpTQTlJRE15T0RRNUtTa3NJRlFnUFQwOUlEWTBNRGdnSmlZZ0tFb2dQVDA5SURVeE1qWWdKaVlnS0hKbElEMGdNelE0TXpZcExDQktJRDA5UFNBMU1UTXhJQ1ltSUNoeVpTQTlJRE0wT0RReUtTd2dTaUE5UFQwZ05URXlNU0FtSmlBb2NtVWdQU0FrSUQwOVBTQlBhU0EvSURNMU9UQTNJRG9nTXpJNE5UWXBLU3dnS0hKbElEMDlQU0F6TXpNeU5TQjhmQ0J5WlNBOVBUMGdNek16TWpZZ2ZId2djbVVnUFQwOUlETTBPRFF5SUh4OElISmxJRDA5UFNBek5EZ3pOaWtnSmlZZ1pTNW5aWFFvSWtWWVZGOWpiMnh2Y2w5aWRXWm1aWEpmWm14dllYUWlLU3dnY21VN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkpLRU1zSUZRc0lFb3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZaWhETENCS0tTQTlQVDBnSVRBZ2ZId2dReTVwYzBaeVlXMWxZblZtWm1WeVZHVjRkSFZ5WlNBbUppQkRMbTFwYmtacGJIUmxjaUFoUFQwZ2NuUWdKaVlnUXk1dGFXNUdhV3gwWlhJZ0lUMDlJSFIwSUQ4Z1RXRjBhQzVzYjJjeUtFMWhkR2d1YldGNEtGUXVkMmxrZEdnc0lGUXVhR1ZwWjJoMEtTa2dLeUF4SURvZ1F5NXRhWEJ0WVhCeklDRTlQU0IyYjJsa0lEQWdKaVlnUXk1dGFYQnRZWEJ6TG14bGJtZDBhQ0ErSURBZ1B5QkRMbTFwY0cxaGNITXViR1Z1WjNSb0lEb2dReTVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsSUNZbUlFRnljbUY1TG1selFYSnlZWGtvUXk1cGJXRm5aU2tnUHlCVUxtMXBjRzFoY0hNdWJHVnVaM1JvSURvZ01Uc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR3NvUXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCRElEMDlQU0J5ZENCOGZDQkRJRDA5UFNCMFlTQjhmQ0JESUQwOVBTQnVZU0EvSURrM01qZ2dPaUE1TnpJNU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdRaWhES1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRlFnUFNCRExuUmhjbWRsZERzS0lDQWdJQ0FnSUNCVUxuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0JDS1N3Z2R5aFVLU3dnVkM1cGMxWnBaR1Z2VkdWNGRIVnlaU0FtSmlCdExtUmxiR1YwWlNoVUtTd2dieTV0WlcxdmNua3VkR1Y0ZEhWeVpYTXRMVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZBb1F5a2dld29nSUNBZ0lDQWdJR3hsZENCVUlEMGdReTUwWVhKblpYUTdDaUFnSUNBZ0lDQWdWQzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z1VDa3NJRVVvVkNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjNLRU1wSUhzS0lDQWdJQ0FnSUNCc1pYUWdWQ0E5SUc0dVoyVjBLRU1wT3dvZ0lDQWdJQ0FnSUZRdVgxOTNaV0puYkVsdWFYUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2N5NWtaV3hsZEdWVVpYaDBkWEpsS0ZRdVgxOTNaV0puYkZSbGVIUjFjbVVwTENCdUxuSmxiVzkyWlNoREtTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJGS0VNcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlFTXVkR1Y0ZEhWeVpTd2dTaUE5SUc0dVoyVjBLRU1wTENBa0lEMGdiaTVuWlhRb1ZDazdDaUFnSUNBZ0lDQWdhV1lnS0NFaFF5a2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9KQzVmWDNkbFltZHNWR1Y0ZEhWeVpTQWhQVDBnZG05cFpDQXdJQ1ltSUNoekxtUmxiR1YwWlZSbGVIUjFjbVVvSkM1ZlgzZGxZbWRzVkdWNGRIVnlaU2tzSUc4dWJXVnRiM0o1TG5SbGVIUjFjbVZ6TFMwcExDQkRMbVJsY0hSb1ZHVjRkSFZ5WlNBbUppQkRMbVJsY0hSb1ZHVjRkSFZ5WlM1a2FYTndiM05sS0Nrc0lFTXVhWE5YWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRcElHWnZjaWhzWlhRZ2NtVWdQU0F3T3lCeVpTQThJRFk3SUhKbEt5c3BjeTVrWld4bGRHVkdjbUZ0WldKMVptWmxjaWhLTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2x0eVpWMHBMQ0JLTGw5ZmQyVmlaMnhFWlhCMGFHSjFabVpsY2lBbUppQnpMbVJsYkdWMFpWSmxibVJsY21KMVptWmxjaWhLTGw5ZmQyVmlaMnhFWlhCMGFHSjFabVpsY2x0eVpWMHBPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSE11WkdWc1pYUmxSbkpoYldWaWRXWm1aWElvU2k1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhJcExDQktMbDlmZDJWaVoyeEVaWEIwYUdKMVptWmxjaUFtSmlCekxtUmxiR1YwWlZKbGJtUmxjbUoxWm1abGNpaEtMbDlmZDJWaVoyeEVaWEIwYUdKMVptWmxjaWtzSUVvdVgxOTNaV0puYkUxMWJIUnBjMkZ0Y0d4bFpFWnlZVzFsWW5WbVptVnlJQ1ltSUhNdVpHVnNaWFJsUm5KaGJXVmlkV1ptWlhJb1NpNWZYM2RsWW1kc1RYVnNkR2x6WVcxd2JHVmtSbkpoYldWaWRXWm1aWElwTENCS0xsOWZkMlZpWjJ4RGIyeHZjbEpsYm1SbGNtSjFabVpsY2lBbUppQnpMbVJsYkdWMFpWSmxibVJsY21KMVptWmxjaWhLTGw5ZmQyVmlaMnhEYjJ4dmNsSmxibVJsY21KMVptWmxjaWtzSUVvdVgxOTNaV0puYkVSbGNIUm9VbVZ1WkdWeVluVm1abVZ5SUNZbUlITXVaR1ZzWlhSbFVtVnVaR1Z5WW5WbVptVnlLRW91WDE5M1pXSm5iRVJsY0hSb1VtVnVaR1Z5WW5WbVptVnlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRU11YVhOWFpXSkhURTExYkhScGNHeGxVbVZ1WkdWeVZHRnlaMlYwY3lrZ1ptOXlLR3hsZENCeVpTQTlJREFzSUZvZ1BTQlVMbXhsYm1kMGFEc2djbVVnUENCYU95QnlaU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQk5aU0E5SUc0dVoyVjBLRlJiY21WZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFMWxMbDlmZDJWaVoyeFVaWGgwZFhKbElDWW1JQ2h6TG1SbGJHVjBaVlJsZUhSMWNtVW9UV1V1WDE5M1pXSm5iRlJsZUhSMWNtVXBMQ0J2TG0xbGJXOXllUzUwWlhoMGRYSmxjeTB0S1N3Z2JpNXlaVzF2ZG1Vb1ZGdHlaVjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUc0dWNtVnRiM1psS0ZRcExDQnVMbkpsYlc5MlpTaERLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCc1pYUWdSQ0E5SURBN0NpQWdJQ0JtZFc1amRHbHZiaUJWS0NrZ2V3b2dJQ0FnSUNBZ0lFUWdQU0F3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1JpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1F5QTlJRVE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRU1nUGowZ2JDQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1WR1Y0ZEhWeVpYTTZJRlJ5ZVdsdVp5QjBieUIxYzJVZ0lpQXJJRU1nS3lBaUlIUmxlSFIxY21VZ2RXNXBkSE1nZDJocGJHVWdkR2hwY3lCSFVGVWdjM1Z3Y0c5eWRITWdiMjVzZVNBaUlDc2diQ2tzSUVRZ0t6MGdNU3dnUXpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFOG9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JLSUQwZ2JpNW5aWFFvUXlrN0NpQWdJQ0FnSUNBZ2FXWWdLRU11YVhOV2FXUmxiMVJsZUhSMWNtVWdKaVlnYzJVb1F5a3NJRU11ZG1WeWMybHZiaUErSURBZ0ppWWdTaTVmWDNabGNuTnBiMjRnSVQwOUlFTXVkbVZ5YzJsdmJpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdKQ0E5SUVNdWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2drSUQwOVBTQjJiMmxrSURBcElHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1ZHVjRkSFZ5WlNCdFlYSnJaV1FnWm05eUlIVndaR0YwWlNCaWRYUWdhVzFoWjJVZ2FYTWdkVzVrWldacGJtVmtJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tDUXVZMjl0Y0d4bGRHVWdQVDA5SUNFeEtTQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklGUmxlSFIxY21VZ2JXRnlhMlZrSUdadmNpQjFjR1JoZEdVZ1luVjBJR2x0WVdkbElHbHpJR2x1WTI5dGNHeGxkR1VpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQ1pTaEtMQ0JETENCVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QlVLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pOVFV6TENCS0xsOWZkMlZpWjJ4VVpYaDBkWEpsS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHNWxLRU1zSUZRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnU2lBOUlHNHVaMlYwS0VNcE93b2dJQ0FnSUNBZ0lHbG1JQ2hETG5abGNuTnBiMjRnUGlBd0lDWW1JRW91WDE5MlpYSnphVzl1SUNFOVBTQkRMblpsY25OcGIyNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1FtVW9TaXdnUXl3Z1ZDazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEM1aFkzUnBkbVZVWlhoMGRYSmxLRE16T1RnMElDc2dWQ2tzSUhRdVltbHVaRlJsZUhSMWNtVW9NelU0TmpZc0lFb3VYMTkzWldKbmJGUmxlSFIxY21VcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZMlVvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJR3hsZENCS0lEMGdiaTVuWlhRb1F5azdDaUFnSUNBZ0lDQWdhV1lnS0VNdWRtVnljMmx2YmlBK0lEQWdKaVlnU2k1ZlgzWmxjbk5wYjI0Z0lUMDlJRU11ZG1WeWMybHZiaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQkNaU2hLTENCRExDQlVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMExtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUWdLeUJVS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2d6TWpnM09Td2dTaTVmWDNkbFltZHNWR1Y0ZEhWeVpTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJXS0VNc0lGUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1NpQTlJRzR1WjJWMEtFTXBPd29nSUNBZ0lDQWdJR2xtSUNoRExuWmxjbk5wYjI0Z1BpQXdJQ1ltSUVvdVgxOTJaWEp6YVc5dUlDRTlQU0JETG5abGNuTnBiMjRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdXU2hLTENCRExDQlVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMExtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUWdLeUJVS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2d6TkRBMk55d2dTaTVmWDNkbFltZHNWR1Y0ZEhWeVpTazdDaUFnSUNCOUNpQWdJQ0JzWlhRZ1Z5QTlJSHNLSUNBZ0lDQWdJQ0JiVG5OZE9pQXhNRFE1Tnl3S0lDQWdJQ0FnSUNCYmRuUmRPaUF6TXpBM01Td0tJQ0FnSUNBZ0lDQmJRbk5kT2lBek16WTBPQW9nSUNBZ2ZTd2dhR1VnUFNCN0NpQWdJQ0FnSUNBZ1czSjBYVG9nT1RjeU9Dd0tJQ0FnSUNBZ0lDQmJkR0ZkT2lBNU9UZzBMQW9nSUNBZ0lDQWdJRnR1WVYwNklEazVPRFlzQ2lBZ0lDQWdJQ0FnVzNSMFhUb2dPVGN5T1N3S0lDQWdJQ0FnSUNCYlYyTmRPaUE1T1RnMUxBb2dJQ0FnSUNBZ0lGdFZhVjA2SURrNU9EY0tJQ0FnSUgwN0NpQWdJQ0JtZFc1amRHbHZiaUJzWlNoRExDQlVMQ0JLS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRW9nUHlBb2N5NTBaWGhRWVhKaGJXVjBaWEpwS0VNc0lERXdNalF5TENCWFcxUXVkM0poY0ZOZEtTd2djeTUwWlhoUVlYSmhiV1YwWlhKcEtFTXNJREV3TWpRekxDQlhXMVF1ZDNKaGNGUmRLU3dnS0VNZ1BUMDlJRE15T0RjNUlIeDhJRU1nUFQwOUlETTFPRFkyS1NBbUppQnpMblJsZUZCaGNtRnRaWFJsY21rb1F5d2dNekk0T0RJc0lGZGJWQzUzY21Gd1VsMHBMQ0J6TG5SbGVGQmhjbUZ0WlhSbGNta29ReXdnTVRBeU5EQXNJR2hsVzFRdWJXRm5SbWxzZEdWeVhTa3NJSE11ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0F4TURJME1Td2dhR1ZiVkM1dGFXNUdhV3gwWlhKZEtTa2dPaUFvY3k1MFpYaFFZWEpoYldWMFpYSnBLRU1zSURFd01qUXlMQ0F6TXpBM01Ta3NJSE11ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0F4TURJME15d2dNek13TnpFcExDQW9ReUE5UFQwZ016STROemtnZkh3Z1F5QTlQVDBnTXpVNE5qWXBJQ1ltSUhNdWRHVjRVR0Z5WVcxbGRHVnlhU2hETENBek1qZzRNaXdnTXpNd056RXBMQ0FvVkM1M2NtRndVeUFoUFQwZ2RuUWdmSHdnVkM1M2NtRndWQ0FoUFQwZ2RuUXBJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVkdWNGRIVnlaU0JwY3lCdWIzUWdjRzkzWlhJZ2IyWWdkSGR2TGlCVVpYaDBkWEpsTG5keVlYQlRJR0Z1WkNCVVpYaDBkWEpsTG5keVlYQlVJSE5vYjNWc1pDQmlaU0J6WlhRZ2RHOGdWRWhTUlVVdVEyeGhiWEJVYjBWa1oyVlhjbUZ3Y0dsdVp5NGlLU3dnY3k1MFpYaFFZWEpoYldWMFpYSnBLRU1zSURFd01qUXdMQ0JyS0ZRdWJXRm5SbWxzZEdWeUtTa3NJSE11ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0F4TURJME1Td2dheWhVTG0xcGJrWnBiSFJsY2lrcExDQlVMbTFwYmtacGJIUmxjaUFoUFQwZ2NuUWdKaVlnVkM1dGFXNUdhV3gwWlhJZ0lUMDlJSFIwSUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1ZHVjRkSFZ5WlNCcGN5QnViM1FnY0c5M1pYSWdiMllnZEhkdkxpQlVaWGgwZFhKbExtMXBia1pwYkhSbGNpQnphRzkxYkdRZ1ltVWdjMlYwSUhSdklGUklVa1ZGTGs1bFlYSmxjM1JHYVd4MFpYSWdiM0lnVkVoU1JVVXVUR2x1WldGeVJtbHNkR1Z5TGlJcEtTd2daUzVvWVhNb0lrVllWRjkwWlhoMGRYSmxYMlpwYkhSbGNsOWhibWx6YjNSeWIzQnBZeUlwSUQwOVBTQWhNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnSkNBOUlHVXVaMlYwS0NKRldGUmZkR1Y0ZEhWeVpWOW1hV3gwWlhKZllXNXBjMjkwY205d2FXTWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRlF1ZEhsd1pTQTlQVDBnYm00Z0ppWWdaUzVvWVhNb0lrOUZVMTkwWlhoMGRYSmxYMlpzYjJGMFgyeHBibVZoY2lJcElEMDlQU0FoTVNCOGZDQmhJRDA5UFNBaE1TQW1KaUJVTG5SNWNHVWdQVDA5SUd0dUlDWW1JR1V1YUdGektDSlBSVk5mZEdWNGRIVnlaVjlvWVd4bVgyWnNiMkYwWDJ4cGJtVmhjaUlwSUQwOVBTQWhNU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBb1ZDNWhibWx6YjNSeWIzQjVJRDRnTVNCOGZDQnVMbWRsZENoVUtTNWZYMk4xY25KbGJuUkJibWx6YjNSeWIzQjVLU0FtSmlBb2N5NTBaWGhRWVhKaGJXVjBaWEptS0VNc0lDUXVWRVZZVkZWU1JWOU5RVmhmUVU1SlUwOVVVazlRV1Y5RldGUXNJRTFoZEdndWJXbHVLRlF1WVc1cGMyOTBjbTl3ZVN3Z2FTNW5aWFJOWVhoQmJtbHpiM1J5YjNCNUtDa3BLU3dnYmk1blpYUW9WQ2t1WDE5amRYSnlaVzUwUVc1cGMyOTBjbTl3ZVNBOUlGUXVZVzVwYzI5MGNtOXdlU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1ptVW9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lFTXVYMTkzWldKbmJFbHVhWFFnUFQwOUlIWnZhV1FnTUNBbUppQW9ReTVmWDNkbFltZHNTVzVwZENBOUlDRXdMQ0JVTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCQ0tTd2dReTVmWDNkbFltZHNWR1Y0ZEhWeVpTQTlJSE11WTNKbFlYUmxWR1Y0ZEhWeVpTZ3BMQ0J2TG0xbGJXOXllUzUwWlhoMGRYSmxjeXNyS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFSmxLRU1zSUZRc0lFb3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ0pDQTlJRE0xTlRNN0NpQWdJQ0FnSUNBZ1ZDNXBjMFJoZEdGVVpYaDBkWEpsTWtSQmNuSmhlU0FtSmlBb0pDQTlJRE0xT0RZMktTd2dWQzVwYzBSaGRHRlVaWGgwZFhKbE0wUWdKaVlnS0NRZ1BTQXpNamczT1Nrc0lHWmxLRU1zSUZRcExDQjBMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFnS3lCS0tTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNna0xDQkRMbDlmZDJWaVoyeFVaWGgwZFhKbEtTd2djeTV3YVhobGJGTjBiM0psYVNnek56UTBNQ3dnVkM1bWJHbHdXU2tzSUhNdWNHbDRaV3hUZEc5eVpXa29NemMwTkRFc0lGUXVjSEpsYlhWc2RHbHdiSGxCYkhCb1lTa3NJSE11Y0dsNFpXeFRkRzl5Wldrb016TXhOeXdnVkM1MWJuQmhZMnRCYkdsbmJtMWxiblFwTENCekxuQnBlR1ZzVTNSdmNtVnBLRE0zTkRRekxDQXdLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NtVWdQU0I1S0ZRcElDWW1JRjhvVkM1cGJXRm5aU2tnUFQwOUlDRXhMQ0JhSUQwZ2NDaFVMbWx0WVdkbExDQnlaU3dnSVRFc0lHZ3BMQ0JOWlNBOUlGOG9XaWtnZkh3Z1lTd2dkbVVnUFNCeUxtTnZiblpsY25Rb1ZDNW1iM0p0WVhRcExDQjBaU0E5SUhJdVkyOXVkbVZ5ZENoVUxuUjVjR1VwTENCU0lEMGdUQ2hVTG1sdWRHVnlibUZzUm05eWJXRjBMQ0IyWlN3Z2RHVXNJRlF1Wlc1amIyUnBibWNwT3dvZ0lDQWdJQ0FnSUd4bEtDUXNJRlFzSUUxbEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWldVc0lGRWdQU0JVTG0xcGNHMWhjSE1zSUVWbElEMGdZU0FtSmlCVUxtbHpWbWxrWlc5VVpYaDBkWEpsSUNFOVBTQWhNQ3dnYldVZ1BTQkRMbDlmZG1WeWMybHZiaUE5UFQwZ2RtOXBaQ0F3TENCU1pTQTlJRWtvVkN3Z1dpd2dUV1VwT3dvZ0lDQWdJQ0FnSUdsbUlDaFVMbWx6UkdWd2RHaFVaWGgwZFhKbEtTQlNJRDBnTmpRd01pd2dZU0EvSUZRdWRIbHdaU0E5UFQwZ2JtNGdQeUJTSUQwZ016WXdNVElnT2lCVUxuUjVjR1VnUFQwOUlGQnpJRDhnVWlBOUlETXpNVGt3SURvZ1ZDNTBlWEJsSUQwOVBTQlVhU0EvSUZJZ1BTQXpOVEExTmlBNklGSWdQU0F6TXpFNE9TQTZJRlF1ZEhsd1pTQTlQVDBnYm00Z0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVYyVmlSMHhTWlc1a1pYSmxjam9nUm14dllYUnBibWNnY0c5cGJuUWdaR1Z3ZEdnZ2RHVjRkSFZ5WlNCeVpYRjFhWEpsY3lCWFpXSkhUREl1SWlrc0lGUXVabTl5YldGMElEMDlQU0JXYmlBbUppQlNJRDA5UFNBMk5EQXlJQ1ltSUZRdWRIbHdaU0FoUFQwZ1kzSWdKaVlnVkM1MGVYQmxJQ0U5UFNCUWN5QW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJWYzJVZ1ZXNXphV2R1WldSVGFHOXlkRlI1Y0dVZ2IzSWdWVzV6YVdkdVpXUkpiblJVZVhCbElHWnZjaUJFWlhCMGFFWnZjbTFoZENCRVpYQjBhRlJsZUhSMWNtVXVJaWtzSUZRdWRIbHdaU0E5SUdOeUxDQjBaU0E5SUhJdVkyOXVkbVZ5ZENoVUxuUjVjR1VwS1N3Z1ZDNW1iM0p0WVhRZ1BUMDlJRXhwSUNZbUlGSWdQVDA5SURZME1ESWdKaVlnS0ZJZ1BTQXpOREEwTVN3Z1ZDNTBlWEJsSUNFOVBTQlVhU0FtSmlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCVmMyVWdWVzV6YVdkdVpXUkpiblF5TkRoVWVYQmxJR1p2Y2lCRVpYQjBhRk4wWlc1amFXeEdiM0p0WVhRZ1JHVndkR2hVWlhoMGRYSmxMaUlwTENCVUxuUjVjR1VnUFNCVWFTd2dkR1VnUFNCeUxtTnZiblpsY25Rb1ZDNTBlWEJsS1NrcExDQkZaU0FtSmlCdFpTQS9JSFF1ZEdWNFUzUnZjbUZuWlRKRUtETTFOVE1zSURFc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBLU0E2SUhRdWRHVjRTVzFoWjJVeVJDZ3pOVFV6TENBd0xDQlNMQ0JhTG5kcFpIUm9MQ0JhTG1obGFXZG9kQ3dnTUN3Z2RtVXNJSFJsTENCdWRXeHNLVHNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hVTG1selJHRjBZVlJsZUhSMWNtVXBJR2xtSUNoUkxteGxibWQwYUNBK0lEQWdKaVlnVFdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnUldVZ0ppWWdiV1VnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNa1FvTXpVMU15d2dVbVVzSUZJc0lGRmJNRjB1ZDJsa2RHZ3NJRkZiTUYwdWFHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnZaU0E5SURBc0lFeGxJRDBnVVM1c1pXNW5kR2c3SUc5bElEd2dUR1U3SUc5bEt5c3BaV1VnUFNCUlcyOWxYU3dnUldVZ1B5QjBMblJsZUZOMVlrbHRZV2RsTWtRb016VTFNeXdnTUN3Z01Dd2dNQ3dnWldVdWQybGtkR2dzSUdWbExtaGxhV2RvZEN3Z2RtVXNJSFJsTENCbFpTNWtZWFJoS1NBNklIUXVkR1Y0U1cxaFoyVXlSQ2d6TlRVekxDQnZaU3dnVWl3Z1pXVXVkMmxrZEdnc0lHVmxMbWhsYVdkb2RDd2dNQ3dnZG1Vc0lIUmxMQ0JsWlM1a1lYUmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZDNW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdSV1VnUHlBb2JXVWdKaVlnZEM1MFpYaFRkRzl5WVdkbE1rUW9NelUxTXl3Z1VtVXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwS1N3Z2RDNTBaWGhUZFdKSmJXRm5aVEpFS0RNMU5UTXNJREFzSURBc0lEQXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBMQ0IyWlN3Z2RHVXNJRm91WkdGMFlTa3BJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTFOVE1zSURBc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBMQ0F3TENCMlpTd2dkR1VzSUZvdVpHRjBZU2s3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvVkM1cGMwTnZiWEJ5WlhOelpXUlVaWGgwZFhKbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUVWbElDWW1JRzFsSUNZbUlIUXVkR1Y0VTNSdmNtRm5aVEpFS0RNMU5UTXNJRkpsTENCU0xDQlJXekJkTG5kcFpIUm9MQ0JSV3pCZExtaGxhV2RvZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiMlVnUFNBd0xDQk1aU0E5SUZFdWJHVnVaM1JvT3lCdlpTQThJRXhsT3lCdlpTc3JLV1ZsSUQwZ1VWdHZaVjBzSUZRdVptOXliV0YwSUNFOVBTQmpkQ0FtSmlCVUxtWnZjbTFoZENBaFBUMGdSMjRnUHlCMlpTQWhQVDBnYm5Wc2JDQS9JRVZsSUQ4Z2RDNWpiMjF3Y21WemMyVmtWR1Y0VTNWaVNXMWhaMlV5UkNnek5UVXpMQ0J2WlN3Z01Dd2dNQ3dnWldVdWQybGtkR2dzSUdWbExtaGxhV2RvZEN3Z2RtVXNJR1ZsTG1SaGRHRXBJRG9nZEM1amIyMXdjbVZ6YzJWa1ZHVjRTVzFoWjJVeVJDZ3pOVFV6TENCdlpTd2dVaXdnWldVdWQybGtkR2dzSUdWbExtaGxhV2RvZEN3Z01Dd2daV1V1WkdGMFlTa2dPaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRUYwZEdWdGNIUWdkRzhnYkc5aFpDQjFibk4xY0hCdmNuUmxaQ0JqYjIxd2NtVnpjMlZrSUhSbGVIUjFjbVVnWm05eWJXRjBJR2x1SUM1MWNHeHZZV1JVWlhoMGRYSmxLQ2tpS1NBNklFVmxJRDhnZEM1MFpYaFRkV0pKYldGblpUSkVLRE0xTlRNc0lHOWxMQ0F3TENBd0xDQmxaUzUzYVdSMGFDd2daV1V1YUdWcFoyaDBMQ0IyWlN3Z2RHVXNJR1ZsTG1SaGRHRXBJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTFOVE1zSUc5bExDQlNMQ0JsWlM1M2FXUjBhQ3dnWldVdWFHVnBaMmgwTENBd0xDQjJaU3dnZEdVc0lHVmxMbVJoZEdFcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9WQzVwYzBSaGRHRlVaWGgwZFhKbE1rUkJjbkpoZVNrZ1JXVWdQeUFvYldVZ0ppWWdkQzUwWlhoVGRHOXlZV2RsTTBRb016VTROallzSUZKbExDQlNMQ0JhTG5kcFpIUm9MQ0JhTG1obGFXZG9kQ3dnV2k1a1pYQjBhQ2tzSUhRdWRHVjRVM1ZpU1cxaFoyVXpSQ2d6TlRnMk5pd2dNQ3dnTUN3Z01Dd2dNQ3dnV2k1M2FXUjBhQ3dnV2k1b1pXbG5hSFFzSUZvdVpHVndkR2dzSUhabExDQjBaU3dnV2k1a1lYUmhLU2tnT2lCMExuUmxlRWx0WVdkbE0wUW9NelU0TmpZc0lEQXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwTENCYUxtUmxjSFJvTENBd0xDQjJaU3dnZEdVc0lGb3VaR0YwWVNrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1ZDNXBjMFJoZEdGVVpYaDBkWEpsTTBRcElFVmxJRDhnS0cxbElDWW1JSFF1ZEdWNFUzUnZjbUZuWlRORUtETXlPRGM1TENCU1pTd2dVaXdnV2k1M2FXUjBhQ3dnV2k1b1pXbG5hSFFzSUZvdVpHVndkR2dwTENCMExuUmxlRk4xWWtsdFlXZGxNMFFvTXpJNE56a3NJREFzSURBc0lEQXNJREFzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwTENCYUxtUmxjSFJvTENCMlpTd2dkR1VzSUZvdVpHRjBZU2twSURvZ2RDNTBaWGhKYldGblpUTkVLRE15T0RjNUxDQXdMQ0JTTENCYUxuZHBaSFJvTENCYUxtaGxhV2RvZEN3Z1dpNWtaWEIwYUN3Z01Dd2dkbVVzSUhSbExDQmFMbVJoZEdFcE93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tGUXVhWE5HY21GdFpXSjFabVpsY2xSbGVIUjFjbVVwSUVWbElDWW1JRzFsSUQ4Z2RDNTBaWGhUZEc5eVlXZGxNa1FvTXpVMU15d2dVbVVzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNnek5UVXpMQ0F3TENCU0xDQmFMbmRwWkhSb0xDQmFMbWhsYVdkb2RDd2dNQ3dnZG1Vc0lIUmxMQ0J1ZFd4c0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFJMbXhsYm1kMGFDQStJREFnSmlZZ1RXVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1JXVWdKaVlnYldVZ0ppWWdkQzUwWlhoVGRHOXlZV2RsTWtRb016VTFNeXdnVW1Vc0lGSXNJRkZiTUYwdWQybGtkR2dzSUZGYk1GMHVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2WlNBOUlEQXNJRXhsSUQwZ1VTNXNaVzVuZEdnN0lHOWxJRHdnVEdVN0lHOWxLeXNwWldVZ1BTQlJXMjlsWFN3Z1JXVWdQeUIwTG5SbGVGTjFZa2x0WVdkbE1rUW9NelUxTXl3Z2IyVXNJREFzSURBc0lIWmxMQ0IwWlN3Z1pXVXBJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTFOVE1zSUc5bExDQlNMQ0IyWlN3Z2RHVXNJR1ZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdWQzVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0FoTVRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnUldVZ1B5QW9iV1VnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNa1FvTXpVMU15d2dVbVVzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMEtTd2dkQzUwWlhoVGRXSkpiV0ZuWlRKRUtETTFOVE1zSURBc0lEQXNJREFzSUhabExDQjBaU3dnV2lrcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNMU5UTXNJREFzSUZJc0lIWmxMQ0IwWlN3Z1dpazdDaUFnSUNBZ0lDQWdZaWhVTENCTlpTa2dKaVlnUVNna0tTd2dReTVmWDNabGNuTnBiMjRnUFNCVUxuWmxjbk5wYjI0c0lGUXViMjVWY0dSaGRHVWdKaVlnVkM1dmJsVndaR0YwWlNoVUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRmtvUXl3Z1ZDd2dTaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaFVMbWx0WVdkbExteGxibWQwYUNBaFBUMGdOaWtnY21WMGRYSnVPd29nSUNBZ0lDQWdJR1psS0VNc0lGUXBMQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QktLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pOREEyTnl3Z1F5NWZYM2RsWW1kc1ZHVjRkSFZ5WlNrc0lITXVjR2w0Wld4VGRHOXlaV2tvTXpjME5EQXNJRlF1Wm14cGNGa3BMQ0J6TG5CcGVHVnNVM1J2Y21WcEtETTNORFF4TENCVUxuQnlaVzExYkhScGNHeDVRV3h3YUdFcExDQnpMbkJwZUdWc1UzUnZjbVZwS0RNek1UY3NJRlF1ZFc1d1lXTnJRV3hwWjI1dFpXNTBLU3dnY3k1d2FYaGxiRk4wYjNKbGFTZ3pOelEwTXl3Z01DazdDaUFnSUNBZ0lDQWdiR1YwSUNRZ1BTQlVJQ1ltSUNoVUxtbHpRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVWdmSHdnVkM1cGJXRm5aVnN3WFM1cGMwTnZiWEJ5WlhOelpXUlVaWGgwZFhKbEtTd2djbVVnUFNCVUxtbHRZV2RsV3pCZElDWW1JRlF1YVcxaFoyVmJNRjB1YVhORVlYUmhWR1Y0ZEhWeVpTd2dXaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2IyVWdQU0F3T3lCdlpTQThJRFk3SUc5bEt5c3BJU1FnSmlZZ0lYSmxJRDhnV2x0dlpWMGdQU0J3S0ZRdWFXMWhaMlZiYjJWZExDQWhNU3dnSVRBc0lHTXBJRG9nV2x0dlpWMGdQU0J5WlNBL0lGUXVhVzFoWjJWYmIyVmRMbWx0WVdkbElEb2dWQzVwYldGblpWdHZaVjA3Q2lBZ0lDQWdJQ0FnYkdWMElFMWxJRDBnV2xzd1hTd2dkbVVnUFNCZktFMWxLU0I4ZkNCaExDQjBaU0E5SUhJdVkyOXVkbVZ5ZENoVUxtWnZjbTFoZENrc0lGSWdQU0J5TG1OdmJuWmxjblFvVkM1MGVYQmxLU3dnWldVZ1BTQk1LRlF1YVc1MFpYSnVZV3hHYjNKdFlYUXNJSFJsTENCU0xDQlVMbVZ1WTI5a2FXNW5LU3dnVVNBOUlHRWdKaVlnVkM1cGMxWnBaR1Z2VkdWNGRIVnlaU0FoUFQwZ0lUQXNJRVZsSUQwZ1F5NWZYM1psY25OcGIyNGdQVDA5SUhadmFXUWdNQ3dnYldVZ1BTQkpLRlFzSUUxbExDQjJaU2s3Q2lBZ0lDQWdJQ0FnYkdVb016UXdOamNzSUZRc0lIWmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1VtVTdDaUFnSUNBZ0lDQWdhV1lnS0NRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVVNBbUppQkZaU0FtSmlCMExuUmxlRk4wYjNKaFoyVXlSQ2d6TkRBMk55d2diV1VzSUdWbExDQk5aUzUzYVdSMGFDd2dUV1V1YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdlpTQTlJREE3SUc5bElEd2dOanNnYjJVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlNaU0E5SUZwYmIyVmRMbTFwY0cxaGNITTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFeGxJRDBnTURzZ1RHVWdQQ0JTWlM1c1pXNW5kR2c3SUV4bEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQllaU0E5SUZKbFcweGxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCVUxtWnZjbTFoZENBaFBUMGdZM1FnSmlZZ1ZDNW1iM0p0WVhRZ0lUMDlJRWR1SUQ4Z2RHVWdJVDA5SUc1MWJHd2dQeUJSSUQ4Z2RDNWpiMjF3Y21WemMyVmtWR1Y0VTNWaVNXMWhaMlV5UkNnek5EQTJPU0FySUc5bExDQk1aU3dnTUN3Z01Dd2dXR1V1ZDJsa2RHZ3NJRmhsTG1obGFXZG9kQ3dnZEdVc0lGaGxMbVJoZEdFcElEb2dkQzVqYjIxd2NtVnpjMlZrVkdWNFNXMWhaMlV5UkNnek5EQTJPU0FySUc5bExDQk1aU3dnWldVc0lGaGxMbmRwWkhSb0xDQllaUzVvWldsbmFIUXNJREFzSUZobExtUmhkR0VwSURvZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCQmRIUmxiWEIwSUhSdklHeHZZV1FnZFc1emRYQndiM0owWldRZ1kyOXRjSEpsYzNObFpDQjBaWGgwZFhKbElHWnZjbTFoZENCcGJpQXVjMlYwVkdWNGRIVnlaVU4xWW1Vb0tTSXBJRG9nVVNBL0lIUXVkR1Y0VTNWaVNXMWhaMlV5UkNnek5EQTJPU0FySUc5bExDQk1aU3dnTUN3Z01Dd2dXR1V1ZDJsa2RHZ3NJRmhsTG1obGFXZG9kQ3dnZEdVc0lGSXNJRmhsTG1SaGRHRXBJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTBNRFk1SUNzZ2IyVXNJRXhsTENCbFpTd2dXR1V1ZDJsa2RHZ3NJRmhsTG1obGFXZG9kQ3dnTUN3Z2RHVXNJRklzSUZobExtUmhkR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVW1VZ1BTQlVMbTFwY0cxaGNITXNJRkVnSmlZZ1JXVWdKaVlnS0ZKbExteGxibWQwYUNBK0lEQWdKaVlnYldVckt5d2dkQzUwWlhoVGRHOXlZV2RsTWtRb016UXdOamNzSUcxbExDQmxaU3dnV2xzd1hTNTNhV1IwYUN3Z1dsc3dYUzVvWldsbmFIUXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdlpTQTlJREE3SUc5bElEd2dOanNnYjJVckt5bHBaaUFvY21VcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGRWdQeUIwTG5SbGVGTjFZa2x0WVdkbE1rUW9NelF3TmprZ0t5QnZaU3dnTUN3Z01Dd2dNQ3dnV2x0dlpWMHVkMmxrZEdnc0lGcGJiMlZkTG1obGFXZG9kQ3dnZEdVc0lGSXNJRnBiYjJWZExtUmhkR0VwSURvZ2RDNTBaWGhKYldGblpUSkVLRE0wTURZNUlDc2diMlVzSURBc0lHVmxMQ0JhVzI5bFhTNTNhV1IwYUN3Z1dsdHZaVjB1YUdWcFoyaDBMQ0F3TENCMFpTd2dVaXdnV2x0dlpWMHVaR0YwWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUV4bElEMGdNRHNnVEdVZ1BDQlNaUzVzWlc1bmRHZzdJRXhsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWFpTQTlJRkpsVzB4bFhTNXBiV0ZuWlZ0dlpWMHVhVzFoWjJVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVU0EvSUhRdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTENCTVpTQXJJREVzSURBc0lEQXNJRmRsTG5kcFpIUm9MQ0JYWlM1b1pXbG5hSFFzSUhSbExDQlNMQ0JYWlM1a1lYUmhLU0E2SUhRdWRHVjRTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxMQ0JNWlNBcklERXNJR1ZsTENCWFpTNTNhV1IwYUN3Z1YyVXVhR1ZwWjJoMExDQXdMQ0IwWlN3Z1Vpd2dWMlV1WkdGMFlTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JSSUQ4Z2RDNTBaWGhUZFdKSmJXRm5aVEpFS0RNME1EWTVJQ3NnYjJVc0lEQXNJREFzSURBc0lIUmxMQ0JTTENCYVcyOWxYU2tnT2lCMExuUmxlRWx0WVdkbE1rUW9NelF3TmprZ0t5QnZaU3dnTUN3Z1pXVXNJSFJsTENCU0xDQmFXMjlsWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUV4bElEMGdNRHNnVEdVZ1BDQlNaUzVzWlc1bmRHZzdJRXhsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWVpTQTlJRkpsVzB4bFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JSSUQ4Z2RDNTBaWGhUZFdKSmJXRm5aVEpFS0RNME1EWTVJQ3NnYjJVc0lFeGxJQ3NnTVN3Z01Dd2dNQ3dnZEdVc0lGSXNJRmhsTG1sdFlXZGxXMjlsWFNrZ09pQjBMblJsZUVsdFlXZGxNa1FvTXpRd05qa2dLeUJ2WlN3Z1RHVWdLeUF4TENCbFpTd2dkR1VzSUZJc0lGaGxMbWx0WVdkbFcyOWxYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdZaWhVTENCMlpTa2dKaVlnUVNnek5EQTJOeWtzSUVNdVgxOTJaWEp6YVc5dUlEMGdWQzUyWlhKemFXOXVMQ0JVTG05dVZYQmtZWFJsSUNZbUlGUXViMjVWY0dSaGRHVW9WQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCRFpTaERMQ0JVTENCS0xDQWtMQ0J5WlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JhSUQwZ2NpNWpiMjUyWlhKMEtFb3VabTl5YldGMEtTd2dUV1VnUFNCeUxtTnZiblpsY25Rb1NpNTBlWEJsS1N3Z2RtVWdQU0JNS0VvdWFXNTBaWEp1WVd4R2IzSnRZWFFzSUZvc0lFMWxMQ0JLTG1WdVkyOWthVzVuS1RzS0lDQWdJQ0FnSUNCdUxtZGxkQ2hVS1M1ZlgyaGhjMFY0ZEdWeWJtRnNWR1Y0ZEhWeVpYTWdmSHdnS0hKbElEMDlQU0F6TWpnM09TQjhmQ0J5WlNBOVBUMGdNelU0TmpZZ1B5QjBMblJsZUVsdFlXZGxNMFFvY21Vc0lEQXNJSFpsTENCVUxuZHBaSFJvTENCVUxtaGxhV2RvZEN3Z1ZDNWtaWEIwYUN3Z01Dd2dXaXdnVFdVc0lHNTFiR3dwSURvZ2RDNTBaWGhKYldGblpUSkVLSEpsTENBd0xDQjJaU3dnVkM1M2FXUjBhQ3dnVkM1b1pXbG5hSFFzSURBc0lGb3NJRTFsTENCdWRXeHNLU2tzSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1UWXdMQ0JES1N3Z1ZDNTFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVWdQeUJtTG1aeVlXMWxZblZtWm1WeVZHVjRkSFZ5WlRKRVRYVnNkR2x6WVcxd2JHVkZXRlFvTXpZeE5qQXNJQ1FzSUhKbExDQnVMbWRsZENoS0tTNWZYM2RsWW1kc1ZHVjRkSFZ5WlN3Z01Dd2dkV1VvVkNrcElEb2djeTVtY21GdFpXSjFabVpsY2xSbGVIUjFjbVV5UkNnek5qRTJNQ3dnSkN3Z2NtVXNJRzR1WjJWMEtFb3BMbDlmZDJWaVoyeFVaWGgwZFhKbExDQXdLU3dnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvTXpZeE5qQXNJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlV1VvUXl3Z1ZDd2dTaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaHpMbUpwYm1SU1pXNWtaWEppZFdabVpYSW9Nell4TmpFc0lFTXBMQ0JVTG1SbGNIUm9RblZtWm1WeUlDWW1JQ0ZVTG5OMFpXNWphV3hDZFdabVpYSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJQ1FnUFNBek16RTRPVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRW9nZkh3Z1ZDNTFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeVpTQTlJRlF1WkdWd2RHaFVaWGgwZFhKbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVWdKaVlnY21VdWFYTkVaWEIwYUZSbGVIUjFjbVVnSmlZZ0tISmxMblI1Y0dVZ1BUMDlJRzV1SUQ4Z0pDQTlJRE0yTURFeUlEb2djbVV1ZEhsd1pTQTlQVDBnVUhNZ0ppWWdLQ1FnUFNBek16RTVNQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGb2dQU0IxWlNoVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGUXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJRDhnWmk1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbFRYVnNkR2x6WVcxd2JHVkZXRlFvTXpZeE5qRXNJRm9zSUNRc0lGUXVkMmxrZEdnc0lGUXVhR1ZwWjJoMEtTQTZJSE11Y21WdVpHVnlZblZtWm1WeVUzUnZjbUZuWlUxMWJIUnBjMkZ0Y0d4bEtETTJNVFl4TENCYUxDQWtMQ0JVTG5kcFpIUm9MQ0JVTG1obGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCekxuSmxibVJsY21KMVptWmxjbE4wYjNKaFoyVW9Nell4TmpFc0lDUXNJRlF1ZDJsa2RHZ3NJRlF1YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NW1jbUZ0WldKMVptWmxjbEpsYm1SbGNtSjFabVpsY2lnek5qRTJNQ3dnTXpZd09UWXNJRE0yTVRZeExDQkRLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0ZRdVpHVndkR2hDZFdabVpYSWdKaVlnVkM1emRHVnVZMmxzUW5WbVptVnlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0FrSUQwZ2RXVW9WQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lFb2dKaVlnVkM1MWMyVlNaVzVrWlhKaWRXWm1aWElnUHlCekxuSmxibVJsY21KMVptWmxjbE4wYjNKaFoyVk5kV3gwYVhOaGJYQnNaU2d6TmpFMk1Td2dKQ3dnTXpVd05UWXNJRlF1ZDJsa2RHZ3NJRlF1YUdWcFoyaDBLU0E2SUZRdWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbElEOGdaaTV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsVFhWc2RHbHpZVzF3YkdWRldGUW9Nell4TmpFc0lDUXNJRE0xTURVMkxDQlVMbmRwWkhSb0xDQlVMbWhsYVdkb2RDa2dPaUJ6TG5KbGJtUmxjbUoxWm1abGNsTjBiM0poWjJVb016WXhOakVzSURNME1EUXhMQ0JVTG5kcFpIUm9MQ0JVTG1obGFXZG9kQ2tzSUhNdVpuSmhiV1ZpZFdabVpYSlNaVzVrWlhKaWRXWm1aWElvTXpZeE5qQXNJRE16TXpBMkxDQXpOakUyTVN3Z1F5azdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElDUWdQU0JVTG1selYyVmlSMHhOZFd4MGFYQnNaVkpsYm1SbGNsUmhjbWRsZEhNZ1BUMDlJQ0V3SUQ4Z1ZDNTBaWGgwZFhKbFd6QmRJRG9nVkM1MFpYaDBkWEpsTENCeVpTQTlJSEl1WTI5dWRtVnlkQ2drTG1admNtMWhkQ2tzSUZvZ1BTQnlMbU52Ym5abGNuUW9KQzUwZVhCbEtTd2dUV1VnUFNCTUtDUXVhVzUwWlhKdVlXeEdiM0p0WVhRc0lISmxMQ0JhTENBa0xtVnVZMjlrYVc1bktTd2dkbVVnUFNCMVpTaFVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1NpQW1KaUJVTG5WelpWSmxibVJsY21KMVptWmxjaUEvSUhNdWNtVnVaR1Z5WW5WbVptVnlVM1J2Y21GblpVMTFiSFJwYzJGdGNHeGxLRE0yTVRZeExDQjJaU3dnVFdVc0lGUXVkMmxrZEdnc0lGUXVhR1ZwWjJoMEtTQTZJRlF1ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUQ4Z1ppNXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxUWFZzZEdsellXMXdiR1ZGV0ZRb016WXhOakVzSUhabExDQk5aU3dnVkM1M2FXUjBhQ3dnVkM1b1pXbG5hSFFwSURvZ2N5NXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxLRE0yTVRZeExDQk5aU3dnVkM1M2FXUjBhQ3dnVkM1b1pXbG5hSFFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCekxtSnBibVJTWlc1a1pYSmlkV1ptWlhJb016WXhOakVzSUc1MWJHd3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWjJVb1F5d2dWQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaFVJQ1ltSUZRdWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFwSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpUkdWd2RHZ2dWR1Y0ZEhWeVpTQjNhWFJvSUdOMVltVWdjbVZ1WkdWeUlIUmhjbWRsZEhNZ2FYTWdibTkwSUhOMWNIQnZjblJsWkNJcE93b2dJQ0FnSUNBZ0lHbG1JQ2gwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2dReWtzSUNFb1ZDNWtaWEIwYUZSbGVIUjFjbVVnSmlZZ1ZDNWtaWEIwYUZSbGVIUjFjbVV1YVhORVpYQjBhRlJsZUhSMWNtVXBLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbkpsYm1SbGNsUmhjbWRsZEM1a1pYQjBhRlJsZUhSMWNtVWdiWFZ6ZENCaVpTQmhiaUJwYm5OMFlXNWpaU0J2WmlCVVNGSkZSUzVFWlhCMGFGUmxlSFIxY21VaUtUc0tJQ0FnSUNBZ0lDQW9JVzR1WjJWMEtGUXVaR1Z3ZEdoVVpYaDBkWEpsS1M1ZlgzZGxZbWRzVkdWNGRIVnlaU0I4ZkNCVUxtUmxjSFJvVkdWNGRIVnlaUzVwYldGblpTNTNhV1IwYUNBaFBUMGdWQzUzYVdSMGFDQjhmQ0JVTG1SbGNIUm9WR1Y0ZEhWeVpTNXBiV0ZuWlM1b1pXbG5hSFFnSVQwOUlGUXVhR1ZwWjJoMEtTQW1KaUFvVkM1a1pYQjBhRlJsZUhSMWNtVXVhVzFoWjJVdWQybGtkR2dnUFNCVUxuZHBaSFJvTENCVUxtUmxjSFJvVkdWNGRIVnlaUzVwYldGblpTNW9aV2xuYUhRZ1BTQlVMbWhsYVdkb2RDd2dWQzVrWlhCMGFGUmxlSFIxY21VdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrc0lFOG9WQzVrWlhCMGFGUmxlSFIxY21Vc0lEQXBPd29nSUNBZ0lDQWdJR3hsZENBa0lEMGdiaTVuWlhRb1ZDNWtaWEIwYUZSbGVIUjFjbVVwTGw5ZmQyVmlaMnhVWlhoMGRYSmxMQ0J5WlNBOUlIVmxLRlFwT3dvZ0lDQWdJQ0FnSUdsbUlDaFVMbVJsY0hSb1ZHVjRkSFZ5WlM1bWIzSnRZWFFnUFQwOUlGWnVLU0JVTG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlNBL0lHWXVabkpoYldWaWRXWm1aWEpVWlhoMGRYSmxNa1JOZFd4MGFYTmhiWEJzWlVWWVZDZ3pOakUyTUN3Z016WXdPVFlzSURNMU5UTXNJQ1FzSURBc0lISmxLU0E2SUhNdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUW9Nell4TmpBc0lETTJNRGsyTENBek5UVXpMQ0FrTENBd0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFVMbVJsY0hSb1ZHVjRkSFZ5WlM1bWIzSnRZWFFnUFQwOUlFeHBLU0JVTG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlNBL0lHWXVabkpoYldWaWRXWm1aWEpVWlhoMGRYSmxNa1JOZFd4MGFYTmhiWEJzWlVWWVZDZ3pOakUyTUN3Z016TXpNRFlzSURNMU5UTXNJQ1FzSURBc0lISmxLU0E2SUhNdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUW9Nell4TmpBc0lETXpNekEyTENBek5UVXpMQ0FrTENBd0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVlc1cmJtOTNiaUJrWlhCMGFGUmxlSFIxY21VZ1ptOXliV0YwSWlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjRaU2hES1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRlFnUFNCdUxtZGxkQ2hES1N3Z1NpQTlJRU11YVhOWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUWdQVDA5SUNFd093b2dJQ0FnSUNBZ0lHbG1JQ2hETG1SbGNIUm9WR1Y0ZEhWeVpTQW1KaUFoVkM1ZlgyRjFkRzlCYkd4dlkyRjBaVVJsY0hSb1FuVm1abVZ5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoS0tTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0luUmhjbWRsZEM1a1pYQjBhRlJsZUhSMWNtVWdibTkwSUhOMWNIQnZjblJsWkNCcGJpQkRkV0psSUhKbGJtUmxjaUIwWVhKblpYUnpJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxLRlF1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5TENCREtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRW9wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdWQzVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWElnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0FrSUQwZ01Ec2dKQ0E4SURZN0lDUXJLeWwwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2dWQzVmWDNkbFltZHNSbkpoYldWaWRXWm1aWEpiSkYwcExDQlVMbDlmZDJWaVoyeEVaWEIwYUdKMVptWmxjbHNrWFNBOUlITXVZM0psWVhSbFVtVnVaR1Z5WW5WbVptVnlLQ2tzSUhsbEtGUXVYMTkzWldKbmJFUmxjSFJvWW5WbVptVnlXeVJkTENCRExDQWhNU2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTVRZd0xDQlVMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjaWtzSUZRdVgxOTNaV0puYkVSbGNIUm9ZblZtWm1WeUlEMGdjeTVqY21WaGRHVlNaVzVrWlhKaWRXWm1aWElvS1N3Z2VXVW9WQzVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWElzSUVNc0lDRXhLVHNLSUNBZ0lDQWdJQ0IwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2diblZzYkNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlBaU2hETENCVUxDQktLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElDUWdQU0J1TG1kbGRDaERLVHNLSUNBZ0lDQWdJQ0JVSUNFOVBTQjJiMmxrSURBZ0ppWWdRMlVvSkM1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhJc0lFTXNJRU11ZEdWNGRIVnlaU3dnTXpZd05qUXNJRE0xTlRNcExDQktJQ0U5UFNCMmIybGtJREFnSmlZZ2VHVW9ReWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCSEtFTXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRU11ZEdWNGRIVnlaU3dnU2lBOUlHNHVaMlYwS0VNcExDQWtJRDBnYmk1blpYUW9WQ2s3Q2lBZ0lDQWdJQ0FnUXk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z1VDa3NJRU11YVhOWFpXSkhURTExYkhScGNHeGxVbVZ1WkdWeVZHRnlaMlYwY3lBaFBUMGdJVEFnSmlZZ0tDUXVYMTkzWldKbmJGUmxlSFIxY21VZ1BUMDlJSFp2YVdRZ01DQW1KaUFvSkM1ZlgzZGxZbWRzVkdWNGRIVnlaU0E5SUhNdVkzSmxZWFJsVkdWNGRIVnlaU2dwS1N3Z0pDNWZYM1psY25OcGIyNGdQU0JVTG5abGNuTnBiMjRzSUc4dWJXVnRiM0o1TG5SbGVIUjFjbVZ6S3lzcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5WlNBOUlFTXVhWE5YWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRZ1BUMDlJQ0V3TENCYUlEMGdReTVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6SUQwOVBTQWhNQ3dnVFdVZ1BTQlVMbWx6UkdGMFlWUmxlSFIxY21VelJDQjhmQ0JVTG1selJHRjBZVlJsZUhSMWNtVXlSRUZ5Y21GNUxDQjJaU0E5SUY4b1F5a2dmSHdnWVRzS0lDQWdJQ0FnSUNCcFppQW9ZU0FtSmlCVUxtWnZjbTFoZENBOVBUMGdSMjRnSmlZZ0tGUXVkSGx3WlNBOVBUMGdibTRnZkh3Z1ZDNTBlWEJsSUQwOVBTQnJiaWtnSmlZZ0tGUXVabTl5YldGMElEMGdZM1FzSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVW1WdVpHVnlhVzVuSUhSdklIUmxlSFIxY21WeklIZHBkR2dnVWtkQ0lHWnZjbTFoZENCcGN5QnViM1FnYzNWd2NHOXlkR1ZrTGlCVmMybHVaeUJTUjBKQklHWnZjbTFoZENCcGJuTjBaV0ZrTGlJcEtTd2djbVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdTaTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwWlNBOUlEQTdJSFJsSUR3Z05qc2dkR1VyS3lsS0xsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNsdDBaVjBnUFNCekxtTnlaV0YwWlVaeVlXMWxZblZtWm1WeUtDazdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hLTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2lBOUlITXVZM0psWVhSbFJuSmhiV1ZpZFdabVpYSW9LU3dnV2lrZ2FXWWdLR2t1WkhKaGQwSjFabVpsY25NcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUmxJRDBnUXk1MFpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGSWdQU0F3TENCbFpTQTlJSFJsTG14bGJtZDBhRHNnVWlBOElHVmxPeUJTS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkVnUFNCdUxtZGxkQ2gwWlZ0U1hTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlJMbDlmZDJWaVoyeFVaWGgwZFhKbElEMDlQU0IyYjJsa0lEQWdKaVlnS0ZFdVgxOTNaV0puYkZSbGVIUjFjbVVnUFNCekxtTnlaV0YwWlZSbGVIUjFjbVVvS1N3Z2J5NXRaVzF2Y25rdWRHVjRkSFZ5WlhNckt5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJYWldKSFRFMTFiSFJwY0d4bFVtVnVaR1Z5VkdGeVoyVjBjeUJqWVc0Z2IyNXNlU0JpWlNCMWMyVmtJSGRwZEdnZ1YyVmlSMHd5SUc5eUlGZEZRa2RNWDJSeVlYZGZZblZtWm1WeWN5QmxlSFJsYm5OcGIyNHVJaWs3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvUXk1MWMyVlNaVzVrWlhKaWRXWm1aWElwSUdsbUlDaGhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lFb3VYMTkzWldKbmJFMTFiSFJwYzJGdGNHeGxaRVp5WVcxbFluVm1abVZ5SUQwZ2N5NWpjbVZoZEdWR2NtRnRaV0oxWm1abGNpZ3BMQ0JLTGw5ZmQyVmlaMnhEYjJ4dmNsSmxibVJsY21KMVptWmxjaUE5SUhNdVkzSmxZWFJsVW1WdVpHVnlZblZtWm1WeUtDa3NJSE11WW1sdVpGSmxibVJsY21KMVptWmxjaWd6TmpFMk1Td2dTaTVmWDNkbFltZHNRMjlzYjNKU1pXNWtaWEppZFdabVpYSXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkR1VnUFNCeUxtTnZiblpsY25Rb1ZDNW1iM0p0WVhRcExDQlNJRDBnY2k1amIyNTJaWEowS0ZRdWRIbHdaU2tzSUdWbElEMGdUQ2hVTG1sdWRHVnlibUZzUm05eWJXRjBMQ0IwWlN3Z1Vpd2dWQzVsYm1OdlpHbHVaeWtzSUZFZ1BTQjFaU2hES1RzS0lDQWdJQ0FnSUNBZ0lDQWdjeTV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsVFhWc2RHbHpZVzF3YkdVb016WXhOakVzSUZFc0lHVmxMQ0JETG5kcFpIUm9MQ0JETG1obGFXZG9kQ2tzSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1UWXdMQ0JLTGw5ZmQyVmlaMnhOZFd4MGFYTmhiWEJzWldSR2NtRnRaV0oxWm1abGNpa3NJSE11Wm5KaGJXVmlkV1ptWlhKU1pXNWtaWEppZFdabVpYSW9Nell4TmpBc0lETTJNRFkwTENBek5qRTJNU3dnU2k1ZlgzZGxZbWRzUTI5c2IzSlNaVzVrWlhKaWRXWm1aWElwTENCekxtSnBibVJTWlc1a1pYSmlkV1ptWlhJb016WXhOakVzSUc1MWJHd3BMQ0JETG1SbGNIUm9RblZtWm1WeUlDWW1JQ2hLTGw5ZmQyVmlaMnhFWlhCMGFGSmxibVJsY21KMVptWmxjaUE5SUhNdVkzSmxZWFJsVW1WdVpHVnlZblZtWm1WeUtDa3NJSGxsS0VvdVgxOTNaV0puYkVSbGNIUm9VbVZ1WkdWeVluVm1abVZ5TENCRExDQWhNQ2twTENCMExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnYm5Wc2JDazdDaUFnSUNBZ0lDQWdmU0JsYkhObElHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1YyVmlSMHhOZFd4MGFYTmhiWEJzWlZKbGJtUmxjbFJoY21kbGRDQmpZVzRnYjI1c2VTQmlaU0IxYzJWa0lIZHBkR2dnVjJWaVIwd3lMaUlwT3dvZ0lDQWdJQ0FnSUdsbUlDaHlaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBMbUpwYm1SVVpYaDBkWEpsS0RNME1EWTNMQ0FrTGw5ZmQyVmlaMnhVWlhoMGRYSmxLU3dnYkdVb016UXdOamNzSUZRc0lIWmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMFpTQTlJREE3SUhSbElEd2dOanNnZEdVckt5bERaU2hLTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2x0MFpWMHNJRU1zSUZRc0lETTJNRFkwTENBek5EQTJPU0FySUhSbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWWloVUxDQjJaU2tnSmlZZ1FTZ3pOREEyTnlrc0lIUXVkVzVpYVc1a1ZHVjRkSFZ5WlNncE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9XaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZEdVZ1BTQkRMblJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVWlBOUlEQXNJR1ZsSUQwZ2RHVXViR1Z1WjNSb095QlNJRHdnWldVN0lGSXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VTQTlJSFJsVzFKZExDQkZaU0E5SUc0dVoyVjBLRkVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pOVFV6TENCRlpTNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrc0lHeGxLRE0xTlRNc0lGRXNJSFpsS1N3Z1EyVW9TaTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElzSUVNc0lGRXNJRE0yTURZMElDc2dVaXdnTXpVMU15a3NJR0lvVVN3Z2RtVXBJQ1ltSUVFb016VTFNeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZEM1MWJtSnBibVJVWlhoMGRYSmxLQ2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFJsSUQwZ016VTFNenNLSUNBZ0lDQWdJQ0FnSUNBZ1RXVWdKaVlnS0dFZ1B5QjBaU0E5SUZRdWFYTkVZWFJoVkdWNGRIVnlaVE5FSUQ4Z016STROemtnT2lBek5UZzJOaUE2SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVJHRjBZVlJsZUhSMWNtVXpSQ0JoYm1RZ1ZFaFNSVVV1UkdGMFlWUmxlSFIxY21VeVJFRnljbUY1SUc5dWJIa2djM1Z3Y0c5eWRHVmtJSGRwZEdnZ1YyVmlSMHd5TGlJcEtTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNoMFpTd2dKQzVmWDNkbFltZHNWR1Y0ZEhWeVpTa3NJR3hsS0hSbExDQlVMQ0IyWlNrc0lFTmxLRW91WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5TENCRExDQlVMQ0F6TmpBMk5Dd2dkR1VwTENCaUtGUXNJSFpsS1NBbUppQkJLSFJsS1N3Z2RDNTFibUpwYm1SVVpYaDBkWEpsS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lFTXVaR1Z3ZEdoQ2RXWm1aWElnSmlZZ2VHVW9ReWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcUtFTXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRjhvUXlrZ2ZId2dZU3dnU2lBOUlFTXVhWE5YWldKSFRFMTFiSFJwY0d4bFVtVnVaR1Z5VkdGeVoyVjBjeUE5UFQwZ0lUQWdQeUJETG5SbGVIUjFjbVVnT2lCYkNpQWdJQ0FnSUNBZ0lDQWdJRU11ZEdWNGRIVnlaUW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0FrSUQwZ01Dd2djbVVnUFNCS0xteGxibWQwYURzZ0pDQThJSEpsT3lBa0t5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdXaUE5SUVwYkpGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGlLRm9zSUZRcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVFdVZ1BTQkRMbWx6VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMElEOGdNelF3TmpjZ09pQXpOVFV6TENCMlpTQTlJRzR1WjJWMEtGb3BMbDlmZDJWaVoyeFVaWGgwZFhKbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDNWlhVzVrVkdWNGRIVnlaU2hOWlN3Z2RtVXBMQ0JCS0UxbEtTd2dkQzUxYm1KcGJtUlVaWGgwZFhKbEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkxLRU1wSUhzS0lDQWdJQ0FnSUNCcFppQW9ReTUxYzJWU1pXNWtaWEppZFdabVpYSXBJR2xtSUNoaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlVJRDBnUXk1M2FXUjBhQ3dnU2lBOUlFTXVhR1ZwWjJoMExDQWtJRDBnTVRZek9EUXNJSEpsSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ016WXdOalFLSUNBZ0lDQWdJQ0FnSUNBZ1hTd2dXaUE5SUVNdWMzUmxibU5wYkVKMVptWmxjaUEvSURNek16QTJJRG9nTXpZd09UWTdDaUFnSUNBZ0lDQWdJQ0FnSUVNdVpHVndkR2hDZFdabVpYSWdKaVlnY21VdWNIVnphQ2hhS1N3Z1F5NXBaMjV2Y21WRVpYQjBhRVp2Y2sxMWJIUnBjMkZ0Y0d4bFEyOXdlU0I4ZkNBb1F5NWtaWEIwYUVKMVptWmxjaUFtSmlBb0pDQjhQU0F5TlRZcExDQkRMbk4wWlc1amFXeENkV1ptWlhJZ0ppWWdLQ1FnZkQwZ01UQXlOQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVFdVZ1BTQnVMbWRsZENoREtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvTXpZd01EZ3NJRTFsTGw5ZmQyVmlaMnhOZFd4MGFYTmhiWEJzWldSR2NtRnRaV0oxWm1abGNpa3NJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTURBNUxDQk5aUzVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElwTENCRExtbG5ibTl5WlVSbGNIUm9SbTl5VFhWc2RHbHpZVzF3YkdWRGIzQjVJQ1ltSUNoekxtbHVkbUZzYVdSaGRHVkdjbUZ0WldKMVptWmxjaWd6TmpBd09Dd2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdXZ29nSUNBZ0lDQWdJQ0FnSUNCZEtTd2djeTVwYm5aaGJHbGtZWFJsUm5KaGJXVmlkV1ptWlhJb016WXdNRGtzSUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZvS0lDQWdJQ0FnSUNBZ0lDQWdYU2twTENCekxtSnNhWFJHY21GdFpXSjFabVpsY2lnd0xDQXdMQ0JVTENCS0xDQXdMQ0F3TENCVUxDQktMQ0FrTENBNU56STRLU3dnY3k1cGJuWmhiR2xrWVhSbFJuSmhiV1ZpZFdabVpYSW9Nell3TURnc0lISmxLU3dnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvTXpZd01EZ3NJRzUxYkd3cExDQjBMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakF3T1N3Z1RXVXVYMTkzWldKbmJFMTFiSFJwYzJGdGNHeGxaRVp5WVcxbFluVm1abVZ5S1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJYWldKSFRFMTFiSFJwYzJGdGNHeGxVbVZ1WkdWeVZHRnlaMlYwSUdOaGJpQnZibXg1SUdKbElIVnpaV1FnZDJsMGFDQlhaV0pIVERJdUlpazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIxWlNoREtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRWdKaVlnS0VNdWRYTmxVbVZ1WkdWeVluVm1abVZ5SUh4OElFTXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxLU0EvSUUxaGRHZ3ViV2x1S0hVc0lFTXVjMkZ0Y0d4bGN5a2dPaUF3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2MyVW9ReWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQlVJRDBnYnk1eVpXNWtaWEl1Wm5KaGJXVTdDaUFnSUNBZ0lDQWdiUzVuWlhRb1F5a2dJVDA5SUZRZ0ppWWdLRzB1YzJWMEtFTXNJRlFwTENCRExuVndaR0YwWlNncEtUc0tJQ0FnSUgwS0lDQWdJR3hsZENCVFpTQTlJQ0V4TENCVVpTQTlJQ0V4T3dvZ0lDQWdablZ1WTNScGIyNGdVR1VvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJRU1nSmlZZ1F5NXBjMWRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBJQ1ltSUNoVFpTQTlQVDBnSVRFZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFVaWGgwZFhKbGN5NXpZV1psVTJWMFZHVjRkSFZ5WlRKRU9pQmtiMjRuZENCMWMyVWdjbVZ1WkdWeUlIUmhjbWRsZEhNZ1lYTWdkR1Y0ZEhWeVpYTXVJRlZ6WlNCMGFHVnBjaUF1ZEdWNGRIVnlaU0J3Y205d1pYSjBlU0JwYm5OMFpXRmtMaUlwTENCVFpTQTlJQ0V3S1N3Z1F5QTlJRU11ZEdWNGRIVnlaU2tzSUU4b1F5d2dWQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCWlpTaERMQ0JVS1NCN0NpQWdJQ0FnSUNBZ1F5QW1KaUJETG1selYyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBJQ1ltSUNoVVpTQTlQVDBnSVRFZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFVaWGgwZFhKbGN5NXpZV1psVTJWMFZHVjRkSFZ5WlVOMVltVTZJR1J2YmlkMElIVnpaU0JqZFdKbElISmxibVJsY2lCMFlYSm5aWFJ6SUdGeklIUmxlSFIxY21WekxpQlZjMlVnZEdobGFYSWdMblJsZUhSMWNtVWdjSEp2Y0dWeWRIa2dhVzV6ZEdWaFpDNGlLU3dnVkdVZ1BTQWhNQ2tzSUVNZ1BTQkRMblJsZUhSMWNtVXBMQ0JXS0VNc0lGUXBPd29nSUNBZ2ZRb2dJQ0FnZEdocGN5NWhiR3h2WTJGMFpWUmxlSFIxY21WVmJtbDBJRDBnUml3Z2RHaHBjeTV5WlhObGRGUmxlSFIxY21WVmJtbDBjeUE5SUZVc0lIUm9hWE11YzJWMFZHVjRkSFZ5WlRKRUlEMGdUeXdnZEdocGN5NXpaWFJVWlhoMGRYSmxNa1JCY25KaGVTQTlJRzVsTENCMGFHbHpMbk5sZEZSbGVIUjFjbVV6UkNBOUlHTmxMQ0IwYUdsekxuTmxkRlJsZUhSMWNtVkRkV0psSUQwZ1Zpd2dkR2hwY3k1eVpXSnBibVJVWlhoMGRYSmxjeUE5SUU5bExDQjBhR2x6TG5ObGRIVndVbVZ1WkdWeVZHRnlaMlYwSUQwZ1J5d2dkR2hwY3k1MWNHUmhkR1ZTWlc1a1pYSlVZWEpuWlhSTmFYQnRZWEFnUFNCcUxDQjBhR2x6TG5Wd1pHRjBaVTExYkhScGMyRnRjR3hsVW1WdVpHVnlWR0Z5WjJWMElEMGdTeXdnZEdocGN5NXpaWFIxY0VSbGNIUm9VbVZ1WkdWeVluVm1abVZ5SUQwZ2VHVXNJSFJvYVhNdWMyVjBkWEJHY21GdFpVSjFabVpsY2xSbGVIUjFjbVVnUFNCRFpTd2dkR2hwY3k1ellXWmxVMlYwVkdWNGRIVnlaVEpFSUQwZ1VHVXNJSFJvYVhNdWMyRm1aVk5sZEZSbGVIUjFjbVZEZFdKbElEMGdXV1U3Q24wS1puVnVZM1JwYjI0Z1JYZ29jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCMExtbHpWMlZpUjB3eU93b2dJQ0FnWm5WdVkzUnBiMjRnYVNoeUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc4N0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlISnVLU0J5WlhSMWNtNGdOVEV5TVRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1ZuVXBJSEpsZEhWeWJpQXpNamd4T1RzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1YzVXBJSEpsZEhWeWJpQXpNamd5TURzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2NYVXBJSEpsZEhWeWJpQXpNell6TlRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1NIVXBJSEpsZEhWeWJpQTFNVEl3T3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCcmRTa2djbVYwZFhKdUlEVXhNakk3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUdOeUtTQnlaWFIxY200Z05URXlNenNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnUjNVcElISmxkSFZ5YmlBMU1USTBPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JRY3lrZ2NtVjBkWEp1SURVeE1qVTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRzV1S1NCeVpYUjFjbTRnTlRFeU5qc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdhMjRwSUhKbGRIVnliaUJ1SUQ4Z05URXpNU0E2SUNodklEMGdaUzVuWlhRb0lrOUZVMTkwWlhoMGRYSmxYMmhoYkdaZlpteHZZWFFpS1N3Z2J5QWhQVDBnYm5Wc2JDQS9JRzh1U0VGTVJsOUdURTlCVkY5UFJWTWdPaUJ1ZFd4c0tUc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdXSFVwSUhKbGRIVnliaUEyTkRBMk93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQkhiaWtnY21WMGRYSnVJRFkwTURjN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHTjBLU0J5WlhSMWNtNGdOalF3T0RzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1NuVXBJSEpsZEhWeWJpQTJOREE1T3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCWmRTa2djbVYwZFhKdUlEWTBNVEE3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUZadUtTQnlaWFIxY200Z05qUXdNanNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVEdrcElISmxkSFZ5YmlBek5EQTBNVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnV25VcElISmxkSFZ5YmlBMk5EQXpPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0FrZFNrZ2NtVjBkWEp1SURNMk1qUTBPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JxZFNrZ2NtVjBkWEp1SURNek16RTVPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JSZFNrZ2NtVjBkWEp1SURNek16SXdPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JMZFNrZ2NtVjBkWEp1SURNMk1qUTRPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JsWkNrZ2NtVjBkWEp1SURNMk1qUTVPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JoYkNCOGZDQnlJRDA5UFNCc2JDQjhmQ0J5SUQwOVBTQmpiQ0I4ZkNCeUlEMDlQU0JvYkNrZ2FXWWdLRzhnUFNCbExtZGxkQ2dpVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYM016ZEdNaUtTd2dieUFoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdZV3dwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENYMU16VkVOZlJGaFVNVjlGV0ZRN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JzYkNrZ2NtVjBkWEp1SUc4dVEwOU5VRkpGVTFORlJGOVNSMEpCWDFNelZFTmZSRmhVTVY5RldGUTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCamJDa2djbVYwZFhKdUlHOHVRMDlOVUZKRlUxTkZSRjlTUjBKQlgxTXpWRU5mUkZoVU0xOUZXRlE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQm9iQ2tnY21WMGRYSnVJRzh1UTA5TlVGSkZVMU5GUkY5U1IwSkJYMU16VkVOZlJGaFVOVjlGV0ZRN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQjFiQ0I4ZkNCeUlEMDlQU0JrYkNCOGZDQnlJRDA5UFNCbWJDQjhmQ0J5SUQwOVBTQndiQ2tnYVdZZ0tHOGdQU0JsTG1kbGRDZ2lWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzQjJjblJqSWlrc0lHOGdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlIVnNLU0J5WlhSMWNtNGdieTVEVDAxUVVrVlRVMFZFWDFKSFFsOVFWbEpVUTE4MFFsQlFWakZmU1UxSE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWkd3cElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDWDFCV1VsUkRYekpDVUZCV01WOUpUVWM3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQm1iQ2tnY21WMGRYSnVJRzh1UTA5TlVGSkZVMU5GUkY5U1IwSkJYMUJXVWxSRFh6UkNVRkJXTVY5SlRVYzdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCd2JDa2djbVYwZFhKdUlHOHVRMDlOVUZKRlUxTkZSRjlTUjBKQlgxQldVbFJEWHpKQ1VGQldNVjlKVFVjN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQjBaQ2tnY21WMGRYSnVJRzhnUFNCbExtZGxkQ2dpVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYMlYwWXpFaUtTd2dieUFoUFQwZ2JuVnNiQ0EvSUc4dVEwOU5VRkpGVTFORlJGOVNSMEpmUlZSRE1WOVhSVUpIVENBNklHNTFiR3c3Q2lBZ0lDQWdJQ0FnYVdZZ0tDaHlJRDA5UFNCdGJDQjhmQ0J5SUQwOVBTQm5iQ2tnSmlZZ0tHOGdQU0JsTG1kbGRDZ2lWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgyVjBZeUlwTENCdklDRTlQU0J1ZFd4c0tTa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2JXd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ09GOUZWRU15T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdaMndwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVGhmUlZSRE1sOUZRVU03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCdVpDQjhmQ0J5SUQwOVBTQnBaQ0I4ZkNCeUlEMDlQU0J5WkNCOGZDQnlJRDA5UFNCelpDQjhmQ0J5SUQwOVBTQnZaQ0I4ZkNCeUlEMDlQU0JoWkNCOGZDQnlJRDA5UFNCc1pDQjhmQ0J5SUQwOVBTQmpaQ0I4ZkNCeUlEMDlQU0JvWkNCOGZDQnlJRDA5UFNCMVpDQjhmQ0J5SUQwOVBTQmtaQ0I4ZkNCeUlEMDlQU0JtWkNCOGZDQnlJRDA5UFNCd1pDQjhmQ0J5SUQwOVBTQnRaQ0I4ZkNCeUlEMDlQU0I0WkNCOGZDQnlJRDA5UFNCNVpDQjhmQ0J5SUQwOVBTQjJaQ0I4ZkNCeUlEMDlQU0JmWkNCOGZDQnlJRDA5UFNCTlpDQjhmQ0J5SUQwOVBTQmlaQ0I4ZkNCeUlEMDlQU0IzWkNCOGZDQnlJRDA5UFNCVFpDQjhmQ0J5SUQwOVBTQlVaQ0I4ZkNCeUlEMDlQU0JGWkNCOGZDQnlJRDA5UFNCQlpDQjhmQ0J5SUQwOVBTQkRaQ0I4ZkNCeUlEMDlQU0JNWkNCOGZDQnlJRDA5UFNCU1pDa2djbVYwZFhKdUlHOGdQU0JsTG1kbGRDZ2lWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgyRnpkR01pS1N3Z2J5QWhQVDBnYm5Wc2JDQS9JSElnT2lCdWRXeHNPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JuWkNrZ2NtVjBkWEp1SUc4Z1BTQmxMbWRsZENnaVJWaFVYM1JsZUhSMWNtVmZZMjl0Y0hKbGMzTnBiMjVmWW5CMFl5SXBMQ0J2SUNFOVBTQnVkV3hzSUQ4Z2NpQTZJRzUxYkd3N0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlGUnBLU0J5WlhSMWNtNGdiaUEvSURNME1EUXlJRG9nS0c4Z1BTQmxMbWRsZENnaVYwVkNSMHhmWkdWd2RHaGZkR1Y0ZEhWeVpTSXBMQ0J2SUNFOVBTQnVkV3hzSUQ4Z2J5NVZUbE5KUjA1RlJGOUpUbFJmTWpSZk9GOVhSVUpIVENBNklHNTFiR3dwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCamIyNTJaWEowT2lCcENpQWdJQ0I5T3dwOUNuWmhjaUJuWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nZFhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRnRkS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVZMkZ0WlhKaGN5QTlJR1U3Q2lBZ0lDQjlDbjA3Q21kaExuQnliM1J2ZEhsd1pTNXBjMEZ5Y21GNVEyRnRaWEpoSUQwZ0lUQTdDblpoY2lCSWJpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKSGNtOTFjQ0k3Q2lBZ0lDQjlDbjA3Q2todUxuQnliM1J2ZEhsd1pTNXBjMGR5YjNWd0lEMGdJVEE3Q25aaGNpQkJlQ0E5SUhzS0lDQWdJSFI1Y0dVNklDSnRiM1psSWdwOUxDQkpjeUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZkR0Z5WjJWMFVtRjVJRDBnYm5Wc2JDd2dkR2hwY3k1ZlozSnBjQ0E5SUc1MWJHd3NJSFJvYVhNdVgyaGhibVFnUFNCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnWjJWMFNHRnVaRk53WVdObEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5b1lXNWtJRDA5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDlvWVc1a0lEMGdibVYzSUVodUxDQjBhR2x6TGw5b1lXNWtMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVmYUdGdVpDNTJhWE5wWW14bElEMGdJVEVzSUhSb2FYTXVYMmhoYm1RdWFtOXBiblJ6SUQwZ2UzMHNJSFJvYVhNdVgyaGhibVF1YVc1d2RYUlRkR0YwWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY0dsdVkyaHBibWM2SUNFeENpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdVgyaGhibVE3Q2lBZ0lDQjlDaUFnSUNCblpYUlVZWEpuWlhSU1lYbFRjR0ZqWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZEdGeVoyVjBVbUY1SUQwOVBTQnVkV3hzSUNZbUlDaDBhR2x6TGw5MFlYSm5aWFJTWVhrZ1BTQnVaWGNnU0c0c0lIUm9hWE11WDNSaGNtZGxkRkpoZVM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVgzUmhjbWRsZEZKaGVTNTJhWE5wWW14bElEMGdJVEVzSUhSb2FYTXVYM1JoY21kbGRGSmhlUzVvWVhOTWFXNWxZWEpXWld4dlkybDBlU0E5SUNFeExDQjBhR2x6TGw5MFlYSm5aWFJTWVhrdWJHbHVaV0Z5Vm1Wc2IyTnBkSGtnUFNCdVpYY2dUU3dnZEdocGN5NWZkR0Z5WjJWMFVtRjVMbWhoYzBGdVozVnNZWEpXWld4dlkybDBlU0E5SUNFeExDQjBhR2x6TGw5MFlYSm5aWFJTWVhrdVlXNW5kV3hoY2xabGJHOWphWFI1SUQwZ2JtVjNJRTBwTENCMGFHbHpMbDkwWVhKblpYUlNZWGs3Q2lBZ0lDQjlDaUFnSUNCblpYUkhjbWx3VTNCaFkyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyZHlhWEFnUFQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WDJkeWFYQWdQU0J1WlhjZ1NHNHNJSFJvYVhNdVgyZHlhWEF1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUNFeExDQjBhR2x6TGw5bmNtbHdMblpwYzJsaWJHVWdQU0FoTVN3Z2RHaHBjeTVmWjNKcGNDNW9ZWE5NYVc1bFlYSldaV3h2WTJsMGVTQTlJQ0V4TENCMGFHbHpMbDluY21sd0xteHBibVZoY2xabGJHOWphWFI1SUQwZ2JtVjNJRTBzSUhSb2FYTXVYMmR5YVhBdWFHRnpRVzVuZFd4aGNsWmxiRzlqYVhSNUlEMGdJVEVzSUhSb2FYTXVYMmR5YVhBdVlXNW5kV3hoY2xabGJHOWphWFI1SUQwZ2JtVjNJRTBwTENCMGFHbHpMbDluY21sd093b2dJQ0FnZlFvZ0lDQWdaR2x6Y0dGMFkyaEZkbVZ1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNSaGNtZGxkRkpoZVNBaFBUMGdiblZzYkNBbUppQjBhR2x6TGw5MFlYSm5aWFJTWVhrdVpHbHpjR0YwWTJoRmRtVnVkQ2hsS1N3Z2RHaHBjeTVmWjNKcGNDQWhQVDBnYm5Wc2JDQW1KaUIwYUdsekxsOW5jbWx3TG1ScGMzQmhkR05vUlhabGJuUW9aU2tzSUhSb2FYTXVYMmhoYm1RZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1ZmFHRnVaQzVrYVhOd1lYUmphRVYyWlc1MEtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR2x6WTI5dWJtVmpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSmthWE5qYjI1dVpXTjBaV1FpTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoT2lCbENpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdVgzUmhjbWRsZEZKaGVTQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWZkR0Z5WjJWMFVtRjVMblpwYzJsaWJHVWdQU0FoTVNrc0lIUm9hWE11WDJkeWFYQWdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYMmR5YVhBdWRtbHphV0pzWlNBOUlDRXhLU3dnZEdocGN5NWZhR0Z1WkNBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1ZmFHRnVaQzUyYVhOcFlteGxJRDBnSVRFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc1MWJHd3NJSElnUFNCdWRXeHNMQ0J2SUQwZ2JuVnNiQ3dnWVNBOUlIUm9hWE11WDNSaGNtZGxkRkpoZVN3Z2JDQTlJSFJvYVhNdVgyZHlhWEFzSUdNZ1BTQjBhR2x6TGw5b1lXNWtPd29nSUNBZ0lDQWdJR2xtSUNobElDWW1JSFF1YzJWemMybHZiaTUyYVhOcFltbHNhWFI1VTNSaGRHVWdJVDA5SUNKMmFYTnBZbXhsTFdKc2RYSnlaV1FpS1NCcFppQW9ZU0FoUFQwZ2JuVnNiQ0FtSmlBb2FTQTlJSFF1WjJWMFVHOXpaU2hsTG5SaGNtZGxkRkpoZVZOd1lXTmxMQ0J1S1N3Z2FTQWhQVDBnYm5Wc2JDQW1KaUFvWVM1dFlYUnlhWGd1Wm5KdmJVRnljbUY1S0drdWRISmhibk5tYjNKdExtMWhkSEpwZUNrc0lHRXViV0YwY21sNExtUmxZMjl0Y0c5elpTaGhMbkJ2YzJsMGFXOXVMQ0JoTG5KdmRHRjBhVzl1TENCaExuTmpZV3hsS1N3Z2FTNXNhVzVsWVhKV1pXeHZZMmwwZVNBL0lDaGhMbWhoYzB4cGJtVmhjbFpsYkc5amFYUjVJRDBnSVRBc0lHRXViR2x1WldGeVZtVnNiMk5wZEhrdVkyOXdlU2hwTG14cGJtVmhjbFpsYkc5amFYUjVLU2tnT2lCaExtaGhjMHhwYm1WaGNsWmxiRzlqYVhSNUlEMGdJVEVzSUdrdVlXNW5kV3hoY2xabGJHOWphWFI1SUQ4Z0tHRXVhR0Z6UVc1bmRXeGhjbFpsYkc5amFYUjVJRDBnSVRBc0lHRXVZVzVuZFd4aGNsWmxiRzlqYVhSNUxtTnZjSGtvYVM1aGJtZDFiR0Z5Vm1Wc2IyTnBkSGtwS1NBNklHRXVhR0Z6UVc1bmRXeGhjbFpsYkc5amFYUjVJRDBnSVRFc0lIUm9hWE11WkdsemNHRjBZMmhGZG1WdWRDaEJlQ2twS1N3Z1l5QW1KaUJsTG1oaGJtUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJQ0V3T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lnS0d4bGRDQjRJRzltSUdVdWFHRnVaQzUyWVd4MVpYTW9LU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJSFF1WjJWMFNtOXBiblJRYjNObEtIZ3NJRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHTXVhbTlwYm5SelczZ3VhbTlwYm5ST1lXMWxYU0E5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQnVaWGNnU0c0N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjQzV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIQXVkbWx6YVdKc1pTQTlJQ0V4TENCakxtcHZhVzUwYzF0NExtcHZhVzUwVG1GdFpWMGdQU0J3TENCakxtRmtaQ2h3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnWXk1cWIybHVkSE5iZUM1cWIybHVkRTVoYldWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RpQWhQVDBnYm5Wc2JDQW1KaUFvWnk1dFlYUnlhWGd1Wm5KdmJVRnljbUY1S0hZdWRISmhibk5tYjNKdExtMWhkSEpwZUNrc0lHY3ViV0YwY21sNExtUmxZMjl0Y0c5elpTaG5MbkJ2YzJsMGFXOXVMQ0JuTG5KdmRHRjBhVzl1TENCbkxuTmpZV3hsS1N3Z1p5NXFiMmx1ZEZKaFpHbDFjeUE5SUhZdWNtRmthWFZ6S1N3Z1p5NTJhWE5wWW14bElEMGdkaUFoUFQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJR011YW05cGJuUnpXeUpwYm1SbGVDMW1hVzVuWlhJdGRHbHdJbDBzSUhVZ1BTQmpMbXB2YVc1MGMxc2lkR2gxYldJdGRHbHdJbDBzSUdRZ1BTQm9MbkJ2YzJsMGFXOXVMbVJwYzNSaGJtTmxWRzhvZFM1d2IzTnBkR2x2Ymlrc0lHWWdQU0F1TURJc0lHMGdQU0F1TURBMU93b2dJQ0FnSUNBZ0lDQWdJQ0JqTG1sdWNIVjBVM1JoZEdVdWNHbHVZMmhwYm1jZ0ppWWdaQ0ErSUdZZ0t5QnRJRDhnS0dNdWFXNXdkWFJUZEdGMFpTNXdhVzVqYUdsdVp5QTlJQ0V4TENCMGFHbHpMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW5CcGJtTm9aVzVrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJtUmxaRzVsYzNNNklHVXVhR0Z1WkdWa2JtVnpjeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJoY21kbGREb2dkR2hwY3dvZ0lDQWdJQ0FnSUNBZ0lDQjlLU2tnT2lBaFl5NXBibkIxZEZOMFlYUmxMbkJwYm1Ob2FXNW5JQ1ltSUdRZ1BEMGdaaUF0SUcwZ0ppWWdLR011YVc1d2RYUlRkR0YwWlM1d2FXNWphR2x1WnlBOUlDRXdMQ0IwYUdsekxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbkJwYm1Ob2MzUmhjblFpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdGdVpHVmtibVZ6Y3pvZ1pTNW9ZVzVrWldSdVpYTnpMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR0Z5WjJWME9pQjBhR2x6Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHBLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdiQ0FoUFQwZ2JuVnNiQ0FtSmlCbExtZHlhWEJUY0dGalpTQW1KaUFvY2lBOUlIUXVaMlYwVUc5elpTaGxMbWR5YVhCVGNHRmpaU3dnYmlrc0lISWdJVDA5SUc1MWJHd2dKaVlnS0d3dWJXRjBjbWw0TG1aeWIyMUJjbkpoZVNoeUxuUnlZVzV6Wm05eWJTNXRZWFJ5YVhncExDQnNMbTFoZEhKcGVDNWtaV052YlhCdmMyVW9iQzV3YjNOcGRHbHZiaXdnYkM1eWIzUmhkR2x2Yml3Z2JDNXpZMkZzWlNrc0lISXViR2x1WldGeVZtVnNiMk5wZEhrZ1B5QW9iQzVvWVhOTWFXNWxZWEpXWld4dlkybDBlU0E5SUNFd0xDQnNMbXhwYm1WaGNsWmxiRzlqYVhSNUxtTnZjSGtvY2k1c2FXNWxZWEpXWld4dlkybDBlU2twSURvZ2JDNW9ZWE5NYVc1bFlYSldaV3h2WTJsMGVTQTlJQ0V4TENCeUxtRnVaM1ZzWVhKV1pXeHZZMmwwZVNBL0lDaHNMbWhoYzBGdVozVnNZWEpXWld4dlkybDBlU0E5SUNFd0xDQnNMbUZ1WjNWc1lYSldaV3h2WTJsMGVTNWpiM0I1S0hJdVlXNW5kV3hoY2xabGJHOWphWFI1S1NrZ09pQnNMbWhoYzBGdVozVnNZWEpXWld4dlkybDBlU0E5SUNFeEtTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRWdJVDA5SUc1MWJHd2dKaVlnS0dFdWRtbHphV0pzWlNBOUlHa2dJVDA5SUc1MWJHd3BMQ0JzSUNFOVBTQnVkV3hzSUNZbUlDaHNMblpwYzJsaWJHVWdQU0J5SUNFOVBTQnVkV3hzS1N3Z1l5QWhQVDBnYm5Wc2JDQW1KaUFvWXk1MmFYTnBZbXhsSUQwZ2J5QWhQVDBnYm5Wc2JDa3NJSFJvYVhNN0NpQWdJQ0I5Q24wc0lHdHpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QnZkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoTENCc0xDQmpMQ0JvS1hzS0lDQWdJQ0FnSUNCcFppQW9hQ0E5SUdnZ0lUMDlJSFp2YVdRZ01DQS9JR2dnT2lCV2Jpd2dhQ0FoUFQwZ1ZtNGdKaVlnYUNBaFBUMGdUR2twSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpUkdWd2RHaFVaWGgwZFhKbElHWnZjbTFoZENCdGRYTjBJR0psSUdWcGRHaGxjaUJVU0ZKRlJTNUVaWEIwYUVadmNtMWhkQ0J2Y2lCVVNGSkZSUzVFWlhCMGFGTjBaVzVqYVd4R2IzSnRZWFFpS1RzS0lDQWdJQ0FnSUNCdUlEMDlQU0IyYjJsa0lEQWdKaVlnYUNBOVBUMGdWbTRnSmlZZ0tHNGdQU0JqY2lrc0lHNGdQVDA5SUhadmFXUWdNQ0FtSmlCb0lEMDlQU0JNYVNBbUppQW9iaUE5SUZScEtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodWRXeHNMQ0JwTENCeUxDQnZMQ0JoTENCc0xDQm9MQ0J1TENCaktUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdFlXZGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUIwQ2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV0WVdkR2FXeDBaWElnUFNCaElDRTlQU0IyYjJsa0lEQWdQeUJoSURvZ2NuUXNJSFJvYVhNdWJXbHVSbWxzZEdWeUlEMGdiQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2JDQTZJSEowTENCMGFHbHpMbVpzYVhCWklEMGdJVEVzSUhSb2FYTXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdJVEU3Q2lBZ0lDQjlDbjA3Q210ekxuQnliM1J2ZEhsd1pTNXBjMFJsY0hSb1ZHVjRkSFZ5WlNBOUlDRXdPd3AyWVhJZ2RtZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklFVnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMQ0JwSUQwZ2JuVnNiQ3dnY2lBOUlERXNJRzhnUFNCdWRXeHNMQ0JoSUQwZ0lteHZZMkZzTFdac2IyOXlJaXdnYkNBOUlHVXVaWGgwWlc1emFXOXVjeTVvWVhNb0lsZEZRa2RNWDIxMWJIUnBjMkZ0Y0d4bFpGOXlaVzVrWlhKZmRHOWZkR1Y0ZEhWeVpTSXBMQ0JqSUQwZ2JuVnNiQ3dnYUNBOUlHNTFiR3dzSUhVZ1BTQnVkV3hzTENCa0lEMGdiblZzYkN3Z1ppQTlJQ0V4TENCdElEMGdiblZzYkN3Z2VDQTlJSFF1WjJWMFEyOXVkR1Y0ZEVGMGRISnBZblYwWlhNb0tTd2dkaUE5SUc1MWJHd3NJR2NnUFNCdWRXeHNMQ0J3SUQwZ1cxMHNJRjhnUFNCdVpYY2dUV0Z3TENCNUlEMGdibVYzSUhWME93b2dJQ0FnSUNBZ0lIa3ViR0Y1WlhKekxtVnVZV0pzWlNneEtTd2dlUzUyYVdWM2NHOXlkQ0E5SUc1bGR5QldaVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJRzVsZHlCMWREc0tJQ0FnSUNBZ0lDQmlMbXhoZVdWeWN5NWxibUZpYkdVb01pa3NJR0l1ZG1sbGQzQnZjblFnUFNCdVpYY2dWbVU3Q2lBZ0lDQWdJQ0FnYkdWMElFRWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lIa3NDaUFnSUNBZ0lDQWdJQ0FnSUdJS0lDQWdJQ0FnSUNCZExDQk1JRDBnYm1WM0lHZGhPd29nSUNBZ0lDQWdJRXd1YkdGNVpYSnpMbVZ1WVdKc1pTZ3hLU3dnVEM1c1lYbGxjbk11Wlc1aFlteGxLRElwT3dvZ0lDQWdJQ0FnSUd4bGRDQkpJRDBnYm5Wc2JDd2dheUE5SUc1MWJHdzdDaUFnSUNBZ0lDQWdkR2hwY3k1allXMWxjbUZCZFhSdlZYQmtZWFJsSUQwZ0lUQXNJSFJvYVhNdVpXNWhZbXhsWkNBOUlDRXhMQ0IwYUdsekxtbHpVSEpsYzJWdWRHbHVaeUE5SUNFeExDQjBhR2x6TG1kbGRFTnZiblJ5YjJ4c1pYSWdQU0JtZFc1amRHbHZiaWhXS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWElEMGdjRnRXWFRzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGY2dQVDA5SUhadmFXUWdNQ0FtSmlBb1Z5QTlJRzVsZHlCSmN5d2djRnRXWFNBOUlGY3BMQ0JYTG1kbGRGUmhjbWRsZEZKaGVWTndZV05sS0NrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUkRiMjUwY205c2JHVnlSM0pwY0NBOUlHWjFibU4wYVc5dUtGWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmNnUFNCd1cxWmRPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVnlBOVBUMGdkbTlwWkNBd0lDWW1JQ2hYSUQwZ2JtVjNJRWx6TENCd1cxWmRJRDBnVnlrc0lGY3VaMlYwUjNKcGNGTndZV05sS0NrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUklZVzVrSUQwZ1puVnVZM1JwYjI0b1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWeUE5SUhCYlZsMDdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJYSUQwOVBTQjJiMmxrSURBZ0ppWWdLRmNnUFNCdVpYY2dTWE1zSUhCYlZsMGdQU0JYS1N3Z1Z5NW5aWFJJWVc1a1UzQmhZMlVvS1RzS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlFSW9WaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVnlBOUlGOHVaMlYwS0ZZdWFXNXdkWFJUYjNWeVkyVXBPd29nSUNBZ0lDQWdJQ0FnSUNCWElDWW1JRmN1WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lCV0xuUjVjR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaE9pQldMbWx1Y0hWMFUyOTFjbU5sQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJRS0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JmTG1admNrVmhZMmdvWm5WdVkzUnBiMjRvVml3Z1Z5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdWaTVrYVhOamIyNXVaV04wS0ZjcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5S1N3Z1h5NWpiR1ZoY2lncExDQkpJRDBnYm5Wc2JDd2dheUE5SUc1MWJHd3NJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLSFlwTENCa0lEMGdiblZzYkN3Z2RTQTlJRzUxYkd3c0lHZ2dQU0J1ZFd4c0xDQnBJRDBnYm5Wc2JDd2daeUE5SUc1MWJHd3NJR05sTG5OMGIzQW9LU3dnYmk1cGMxQnlaWE5sYm5ScGJtY2dQU0FoTVN3Z2JpNWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0p6WlhOemFXOXVaVzVrSWdvZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXpaWFJHY21GdFpXSjFabVpsY2xOallXeGxSbUZqZEc5eUlEMGdablZ1WTNScGIyNG9WaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlJRDBnVml3Z2JpNXBjMUJ5WlhObGJuUnBibWNnUFQwOUlDRXdJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlXRkpOWVc1aFoyVnlPaUJEWVc1dWIzUWdZMmhoYm1kbElHWnlZVzFsWW5WbVptVnlJSE5qWVd4bElIZG9hV3hsSUhCeVpYTmxiblJwYm1jdUlpazdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXpaWFJTWldabGNtVnVZMlZUY0dGalpWUjVjR1VnUFNCbWRXNWpkR2x2YmloV0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdFZ1BTQldMQ0J1TG1selVISmxjMlZ1ZEdsdVp5QTlQVDBnSVRBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKWVVrMWhibUZuWlhJNklFTmhibTV2ZENCamFHRnVaMlVnY21WbVpYSmxibU5sSUhOd1lXTmxJSFI1Y0dVZ2QyaHBiR1VnY0hKbGMyVnVkR2x1Wnk0aUtUc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtZGxkRkpsWm1WeVpXNWpaVk53WVdObElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdk93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBRbUZ6WlV4aGVXVnlJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjFJQ0U5UFNCdWRXeHNJRDhnZFNBNklHUTdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJDYVc1a2FXNW5JRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQm9Pd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwUm5KaGJXVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHMDdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJUWlhOemFXOXVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVjMlYwVTJWemMybHZiaUE5SUdGemVXNWpJR1oxYm1OMGFXOXVLRllwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BTQldMQ0JwSUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kaUE5SUdVdVoyVjBVbVZ1WkdWeVZHRnlaMlYwS0Nrc0lHa3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljMlZzWldOMElpd2dRaWtzSUdrdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWMyVnNaV04wYzNSaGNuUWlMQ0JDS1N3Z2FTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnpaV3hsWTNSbGJtUWlMQ0JDS1N3Z2FTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnpjWFZsWlhwbElpd2dRaWtzSUdrdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWMzRjFaV1Y2WlhOMFlYSjBJaXdnUWlrc0lHa3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljM0YxWldWNlpXVnVaQ0lzSUVJcExDQnBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVZ1WkNJc0lGQXBMQ0JwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1sdWNIVjBjMjkxY21ObGMyTm9ZVzVuWlNJc0lIY3BMQ0I0TG5oeVEyOXRjR0YwYVdKc1pTQWhQVDBnSVRBZ0ppWWdZWGRoYVhRZ2RDNXRZV3RsV0ZKRGIyMXdZWFJwWW14bEtDa3NJR2t1Y21WdVpHVnlVM1JoZEdVdWJHRjVaWEp6SUQwOVBTQjJiMmxrSURBZ2ZId2daUzVqWVhCaFltbHNhWFJwWlhNdWFYTlhaV0pIVERJZ1BUMDlJQ0V4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZjZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRnVkR2xoYkdsaGN6b2dhUzV5Wlc1a1pYSlRkR0YwWlM1c1lYbGxjbk1nUFQwOUlIWnZhV1FnTUNBL0lIZ3VZVzUwYVdGc2FXRnpJRG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGc2NHaGhPaUI0TG1Gc2NHaGhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYURvZ2VDNWtaWEIwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNSbGJtTnBiRG9nZUM1emRHVnVZMmxzTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtY21GdFpXSjFabVpsY2xOallXeGxSbUZqZEc5eU9pQnlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtJRDBnYm1WM0lGaFNWMlZpUjB4TVlYbGxjaWhwTENCMExDQlhLU3dnYVM1MWNHUmhkR1ZTWlc1a1pYSlRkR0YwWlNoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKaGMyVk1ZWGxsY2pvZ1pBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTENCbklEMGdibVYzSUVGMEtHUXVabkpoYldWaWRXWm1aWEpYYVdSMGFDd2daQzVtY21GdFpXSjFabVpsY2tobGFXZG9kQ3dnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNKdFlYUTZJR04wTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQnliaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzVqYjJScGJtYzZJR1V1YjNWMGNIVjBSVzVqYjJScGJtY0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ppQTlJSGd1WVc1MGFXRnNhV0Z6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYSUQwZ2JuVnNiQ3dnYUdVZ1BTQnVkV3hzTENCc1pTQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQzVrWlhCMGFDQW1KaUFvYkdVZ1BTQjRMbk4wWlc1amFXd2dQeUF6TlRBMU5pQTZJRE16TVRrd0xDQlhJRDBnZUM1emRHVnVZMmxzSUQ4Z1RHa2dPaUJXYml3Z2FHVWdQU0I0TG5OMFpXNWphV3dnUHlCVWFTQTZJR055S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWm1VZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5Um05eWJXRjBPaUI0TG1Gc2NHaGhJSHg4SUdZZ1B5QXpNamcxTmlBNklETXlPRFE1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFFWnZjbTFoZERvZ2JHVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmpZV3hsUm1GamRHOXlPaUJ5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvSUQwZ2JtVjNJRmhTVjJWaVIweENhVzVrYVc1bktHa3NJSFFwTENCMUlEMGdhQzVqY21WaGRHVlFjbTlxWldOMGFXOXVUR0Y1WlhJb1ptVXBMQ0JwTG5Wd1pHRjBaVkpsYm1SbGNsTjBZWFJsS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdGNVpYSnpPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUYwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLU3dnWmlBL0lHY2dQU0J1WlhjZ1dITW9kUzUwWlhoMGRYSmxWMmxrZEdnc0lIVXVkR1Y0ZEhWeVpVaGxhV2RvZEN3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSnRZWFE2SUdOMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUJ5Yml3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFVaWGgwZFhKbE9pQnVaWGNnYTNNb2RTNTBaWGgwZFhKbFYybGtkR2dzSUhVdWRHVjRkSFZ5WlVobGFXZG9kQ3dnYUdVc0lIWnZhV1FnTUN3Z2RtOXBaQ0F3TENCMmIybGtJREFzSUhadmFXUWdNQ3dnZG05cFpDQXdMQ0IyYjJsa0lEQXNJRmNwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEdWdVkybHNRblZtWm1WeU9pQjRMbk4wWlc1amFXd3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG5ibTl5WlVSbGNIUm9PaUIxTG1sbmJtOXlaVVJsY0hSb1ZtRnNkV1Z6TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxYzJWU1pXNWtaWEpVYjFSbGVIUjFjbVU2SUd3c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdVkyOWthVzVuT2lCbExtOTFkSEIxZEVWdVkyOWthVzVuQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTa2dPaUJuSUQwZ2JtVjNJRUYwS0hVdWRHVjRkSFZ5WlZkcFpIUm9MQ0IxTG5SbGVIUjFjbVZJWldsbmFIUXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5YldGME9pQjRMbUZzY0doaElEOGdZM1FnT2lCSGJpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nY200c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9WR1Y0ZEhWeVpUb2dibVYzSUd0ektIVXVkR1Y0ZEhWeVpWZHBaSFJvTENCMUxuUmxlSFIxY21WSVpXbG5hSFFzSUdobExDQjJiMmxrSURBc0lIWnZhV1FnTUN3Z2RtOXBaQ0F3TENCMmIybGtJREFzSUhadmFXUWdNQ3dnZG05cFpDQXdMQ0JYS1N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNSbGJtTnBiRUoxWm1abGNqb2dlQzV6ZEdWdVkybHNMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaMjV2Y21WRVpYQjBhRG9nZFM1cFoyNXZjbVZFWlhCMGFGWmhiSFZsY3l3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1amIyUnBibWM2SUdVdWIzVjBjSFYwUlc1amIyUnBibWNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzJWMFJtOTJaV0YwYVc5dUtERXBMQ0J2SUQwZ1lYZGhhWFFnYVM1eVpYRjFaWE4wVW1WbVpYSmxibU5sVTNCaFkyVW9ZU2tzSUdObExuTmxkRU52Ym5SbGVIUW9hU2tzSUdObExuTjBZWEowS0Nrc0lHNHVhWE5RY21WelpXNTBhVzVuSUQwZ0lUQXNJRzR1WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbk5sYzNOcGIyNXpkR0Z5ZENJS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCM0tGWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmNnUFNCcExtbHVjSFYwVTI5MWNtTmxjenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCb1pTQTlJREE3SUdobElEd2djQzVzWlc1bmRHZzdJR2hsS3lzcFh5NXpaWFFvVjF0b1pWMHNJSEJiYUdWZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvWlNBOUlEQTdJR2hsSUR3Z1ZpNXlaVzF2ZG1Wa0xteGxibWQwYURzZ2FHVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JHVWdQU0JXTG5KbGJXOTJaV1JiYUdWZExDQm1aU0E5SUY4dVoyVjBLR3hsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdabElDWW1JQ2htWlM1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpWkdselkyOXVibVZqZEdWa0lpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaE9pQnNaUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2tzSUY4dVpHVnNaWFJsS0d4bEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm9aU0E5SURBN0lHaGxJRHdnVmk1aFpHUmxaQzVzWlc1bmRHZzdJR2hsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3hsSUQwZ1ZpNWhaR1JsWkZ0b1pWMHNJR1psSUQwZ1h5NW5aWFFvYkdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptVWdKaVlnWm1VdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1OdmJtNWxZM1JsWkNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ2JHVUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ2JtVjNJRTBzSUVRZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCVktGWXNJRmNzSUdobEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUVVdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLRmN1YldGMGNtbDRWMjl5YkdRcExDQkVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2Ymlob1pTNXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzWlNBOUlFVXVaR2x6ZEdGdVkyVlVieWhFS1N3Z1ptVWdQU0JYTG5CeWIycGxZM1JwYjI1TllYUnlhWGd1Wld4bGJXVnVkSE1zSUVKbElEMGdhR1V1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQzVsYkdWdFpXNTBjeXdnV1NBOUlHWmxXekUwWFNBdklDaG1aVnN4TUYwZ0xTQXhLU3dnUTJVZ1BTQm1aVnN4TkYwZ0x5QW9abVZiTVRCZElDc2dNU2tzSUhsbElEMGdLR1psV3psZElDc2dNU2tnTHlCbVpWczFYU3dnWjJVZ1BTQW9abVZiT1YwZ0xTQXhLU0F2SUdabFd6VmRMQ0I0WlNBOUlDaG1aVnM0WFNBdElERXBJQzhnWm1WYk1GMHNJRTlsSUQwZ0tFSmxXemhkSUNzZ01Ta2dMeUJDWlZzd1hTd2dSeUE5SUZrZ0tpQjRaU3dnYWlBOUlGa2dLaUJQWlN3Z1N5QTlJR3hsSUM4Z0tDMTRaU0FySUU5bEtTd2dkV1VnUFNCTElDb2dMWGhsT3dvZ0lDQWdJQ0FnSUNBZ0lDQlhMbTFoZEhKcGVGZHZjbXhrTG1SbFkyOXRjRzl6WlNoV0xuQnZjMmwwYVc5dUxDQldMbkYxWVhSbGNtNXBiMjRzSUZZdWMyTmhiR1VwTENCV0xuUnlZVzV6YkdGMFpWZ29kV1VwTENCV0xuUnlZVzV6YkdGMFpWb29TeWtzSUZZdWJXRjBjbWw0VjI5eWJHUXVZMjl0Y0c5elpTaFdMbkJ2YzJsMGFXOXVMQ0JXTG5GMVlYUmxjbTVwYjI0c0lGWXVjMk5oYkdVcExDQldMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaUzVqYjNCNUtGWXViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYzJVZ1BTQlpJQ3NnU3l3Z1UyVWdQU0JEWlNBcklFc3NJRlJsSUQwZ1J5QXRJSFZsTENCUVpTQTlJR29nS3lBb2JHVWdMU0IxWlNrc0lGbGxJRDBnZVdVZ0tpQkRaU0F2SUZObElDb2djMlVzSUVNZ1BTQm5aU0FxSUVObElDOGdVMlVnS2lCelpUc0tJQ0FnSUNBZ0lDQWdJQ0FnVmk1d2NtOXFaV04wYVc5dVRXRjBjbWw0TG0xaGEyVlFaWEp6Y0dWamRHbDJaU2hVWlN3Z1VHVXNJRmxsTENCRExDQnpaU3dnVTJVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQkdLRllzSUZjcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVnlBOVBUMGdiblZzYkNBL0lGWXViV0YwY21sNFYyOXliR1F1WTI5d2VTaFdMbTFoZEhKcGVDa2dPaUJXTG0xaGRISnBlRmR2Y214a0xtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb1Z5NXRZWFJ5YVhoWGIzSnNaQ3dnVmk1dFlYUnlhWGdwTENCV0xtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTNWpiM0I1S0ZZdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxuVndaR0YwWlVOaGJXVnlZU0E5SUdaMWJtTjBhVzl1S0ZZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUc1MWJHd3BJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnVEM1dVpXRnlJRDBnWWk1dVpXRnlJRDBnZVM1dVpXRnlJRDBnVmk1dVpXRnlMQ0JNTG1aaGNpQTlJR0l1Wm1GeUlEMGdlUzVtWVhJZ1BTQldMbVpoY2l3Z0tFa2dJVDA5SUV3dWJtVmhjaUI4ZkNCcklDRTlQU0JNTG1aaGNpa2dKaVlnS0drdWRYQmtZWFJsVW1WdVpHVnlVM1JoZEdVb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hPWldGeU9pQk1MbTVsWVhJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRVpoY2pvZ1RDNW1ZWElLSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3NJRWtnUFNCTUxtNWxZWElzSUdzZ1BTQk1MbVpoY2lrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWElEMGdWaTV3WVhKbGJuUXNJR2hsSUQwZ1RDNWpZVzFsY21Gek93b2dJQ0FnSUNBZ0lDQWdJQ0JHS0V3c0lGY3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdabElEMGdNRHNnWm1VZ1BDQm9aUzVzWlc1bmRHZzdJR1psS3lzcFJpaG9aVnRtWlYwc0lGY3BPd29nSUNBZ0lDQWdJQ0FnSUNCTUxtMWhkSEpwZUZkdmNteGtMbVJsWTI5dGNHOXpaU2hNTG5CdmMybDBhVzl1TENCTUxuRjFZWFJsY201cGIyNHNJRXd1YzJOaGJHVXBMQ0JXTG5CdmMybDBhVzl1TG1OdmNIa29UQzV3YjNOcGRHbHZiaWtzSUZZdWNYVmhkR1Z5Ym1sdmJpNWpiM0I1S0V3dWNYVmhkR1Z5Ym1sdmJpa3NJRll1YzJOaGJHVXVZMjl3ZVNoTUxuTmpZV3hsS1N3Z1ZpNXRZWFJ5YVhndVkyOXdlU2hNTG0xaGRISnBlQ2tzSUZZdWJXRjBjbWw0VjI5eWJHUXVZMjl3ZVNoTUxtMWhkSEpwZUZkdmNteGtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3hsSUQwZ1ZpNWphR2xzWkhKbGJqc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JtWlNBOUlEQXNJRUpsSUQwZ2JHVXViR1Z1WjNSb095Qm1aU0E4SUVKbE95Qm1aU3NyS1d4bFcyWmxYUzUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2doTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR2hsTG14bGJtZDBhQ0E5UFQwZ01pQS9JRlVvVEN3Z2VTd2dZaWtnT2lCTUxuQnliMnBsWTNScGIyNU5ZWFJ5YVhndVkyOXdlU2g1TG5CeWIycGxZM1JwYjI1TllYUnlhWGdwT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFEyRnRaWEpoSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJNT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFJtOTJaV0YwYVc5dUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gxSUNFOVBTQnVkV3hzS1NCeVpYUjFjbTRnZFM1bWFYaGxaRVp2ZG1WaGRHbHZianNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1FnSVQwOUlHNTFiR3dwSUhKbGRIVnliaUJrTG1acGVHVmtSbTkyWldGMGFXOXVPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVjMlYwUm05MlpXRjBhVzl1SUQwZ1puVnVZM1JwYjI0b1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCMUlDRTlQU0J1ZFd4c0lDWW1JQ2gxTG1acGVHVmtSbTkyWldGMGFXOXVJRDBnVmlrc0lHUWdJVDA5SUc1MWJHd2dKaVlnWkM1bWFYaGxaRVp2ZG1WaGRHbHZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaGtMbVpwZUdWa1JtOTJaV0YwYVc5dUlEMGdWaWs3Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCc1pYUWdUeUE5SUc1MWJHdzdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdibVVvVml3Z1Z5a2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZeUE5SUZjdVoyVjBWbWxsZDJWeVVHOXpaU2h2S1N3Z2JTQTlJRmNzSUdNZ0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzWlNBOUlHTXVkbWxsZDNNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa0lDRTlQU0J1ZFd4c0lDWW1JQ2hsTG5ObGRGSmxibVJsY2xSaGNtZGxkRVp5WVcxbFluVm1abVZ5S0djc0lHUXVabkpoYldWaWRXWm1aWElwTENCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENobktTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWm1VZ1BTQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsTG14bGJtZDBhQ0FoUFQwZ1RDNWpZVzFsY21GekxteGxibWQwYUNBbUppQW9UQzVqWVcxbGNtRnpMbXhsYm1kMGFDQTlJREFzSUdabElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JDWlNBOUlEQTdJRUpsSUR3Z2JHVXViR1Z1WjNSb095QkNaU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnV1NBOUlHeGxXMEpsWFN3Z1EyVWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa0lDRTlQU0J1ZFd4c0tTQkRaU0E5SUdRdVoyVjBWbWxsZDNCdmNuUW9XU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCblpTQTlJR2d1WjJWMFZtbGxkMU4xWWtsdFlXZGxLSFVzSUZrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRFpTQTlJR2RsTG5acFpYZHdiM0owTENCQ1pTQTlQVDBnTUNBbUppQW9aUzV6WlhSU1pXNWtaWEpVWVhKblpYUlVaWGgwZFhKbGN5aG5MQ0JuWlM1amIyeHZjbFJsZUhSMWNtVXNJSFV1YVdkdWIzSmxSR1Z3ZEdoV1lXeDFaWE1nUHlCMmIybGtJREFnT2lCblpTNWtaWEIwYUZOMFpXNWphV3hVWlhoMGRYSmxLU3dnWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvWnlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlV1VnUFNCQlcwSmxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNVpTNXRZWFJ5YVhndVpuSnZiVUZ5Y21GNUtGa3VkSEpoYm5ObWIzSnRMbTFoZEhKcGVDa3NJSGxsTG5CeWIycGxZM1JwYjI1TllYUnlhWGd1Wm5KdmJVRnljbUY1S0ZrdWNISnZhbVZqZEdsdmJrMWhkSEpwZUNrc0lIbGxMblpwWlhkd2IzSjBMbk5sZENoRFpTNTRMQ0JEWlM1NUxDQkRaUzUzYVdSMGFDd2dRMlV1YUdWcFoyaDBLU3dnUW1VZ1BUMDlJREFnSmlZZ1RDNXRZWFJ5YVhndVkyOXdlU2g1WlM1dFlYUnlhWGdwTENCbVpTQTlQVDBnSVRBZ0ppWWdUQzVqWVcxbGNtRnpMbkIxYzJnb2VXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb1pTQTlJR2t1YVc1d2RYUlRiM1Z5WTJWek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR3hsSUQwZ01Ec2diR1VnUENCd0xteGxibWQwYURzZ2JHVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ptVWdQU0J3VzJ4bFhTd2dRbVVnUFNCb1pWdHNaVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtWlM1MWNHUmhkR1VvUW1Vc0lGY3NJRzhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUU4Z0ppWWdUeWhXTENCWEtTd2diU0E5SUc1MWJHdzdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCalpTQTlJRzVsZHlCeWFEc0tJQ0FnSUNBZ0lDQmpaUzV6WlhSQmJtbHRZWFJwYjI1TWIyOXdLRzVsS1N3Z2RHaHBjeTV6WlhSQmJtbHRZWFJwYjI1TWIyOXdJRDBnWm5WdVkzUnBiMjRvVmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JQSUQwZ1Zqc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtUnBjM0J2YzJVZ1BTQm1kVzVqZEdsdmJpZ3BJSHQ5T3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCRGVDaHpLU0I3Q2lBZ0lDQm1kVzVqZEdsdmJpQmxLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQm5MbVp2WjBOdmJHOXlMblpoYkhWbExtTnZjSGtvY0M1amIyeHZjaWtzSUhBdWFYTkdiMmNnUHlBb1p5NW1iMmRPWldGeUxuWmhiSFZsSUQwZ2NDNXVaV0Z5TENCbkxtWnZaMFpoY2k1MllXeDFaU0E5SUhBdVptRnlLU0E2SUhBdWFYTkdiMmRGZUhBeUlDWW1JQ2huTG1adlowUmxibk5wZEhrdWRtRnNkV1VnUFNCd0xtUmxibk5wZEhrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkQ2huTENCd0xDQmZMQ0I1TENCaUtTQjdDaUFnSUNBZ0lDQWdjQzVwYzAxbGMyaENZWE5wWTAxaGRHVnlhV0ZzSUQ4Z2JpaG5MQ0J3S1NBNklIQXVhWE5OWlhOb1RHRnRZbVZ5ZEUxaGRHVnlhV0ZzSUQ4Z0tHNG9aeXdnY0Nrc0lHd29aeXdnY0NrcElEb2djQzVwYzAxbGMyaFViMjl1VFdGMFpYSnBZV3dnUHlBb2JpaG5MQ0J3S1N3Z2FDaG5MQ0J3S1NrZ09pQndMbWx6VFdWemFGQm9iMjVuVFdGMFpYSnBZV3dnUHlBb2JpaG5MQ0J3S1N3Z1l5aG5MQ0J3S1NrZ09pQndMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z1B5QW9iaWhuTENCd0tTd2djQzVwYzAxbGMyaFFhSGx6YVdOaGJFMWhkR1Z5YVdGc0lEOGdaQ2huTENCd0xDQmlLU0E2SUhVb1p5d2djQ2twSURvZ2NDNXBjMDFsYzJoTllYUmpZWEJOWVhSbGNtbGhiQ0EvSUNodUtHY3NJSEFwTENCbUtHY3NJSEFwS1NBNklIQXVhWE5OWlhOb1JHVndkR2hOWVhSbGNtbGhiQ0EvSUNodUtHY3NJSEFwTENCdEtHY3NJSEFwS1NBNklIQXVhWE5OWlhOb1JHbHpkR0Z1WTJWTllYUmxjbWxoYkNBL0lDaHVLR2NzSUhBcExDQjRLR2NzSUhBcEtTQTZJSEF1YVhOTlpYTm9UbTl5YldGc1RXRjBaWEpwWVd3Z1B5QW9iaWhuTENCd0tTd2dkaWhuTENCd0tTa2dPaUJ3TG1selRHbHVaVUpoYzJsalRXRjBaWEpwWVd3Z1B5QW9hU2huTENCd0tTd2djQzVwYzB4cGJtVkVZWE5vWldSTllYUmxjbWxoYkNBbUppQnlLR2NzSUhBcEtTQTZJSEF1YVhOUWIybHVkSE5OWVhSbGNtbGhiQ0EvSUc4b1p5d2djQ3dnWHl3Z2VTa2dPaUJ3TG1selUzQnlhWFJsVFdGMFpYSnBZV3dnUHlCaEtHY3NJSEFwSURvZ2NDNXBjMU5vWVdSdmQwMWhkR1Z5YVdGc0lEOGdLR2N1WTI5c2IzSXVkbUZzZFdVdVkyOXdlU2h3TG1OdmJHOXlLU3dnWnk1dmNHRmphWFI1TG5aaGJIVmxJRDBnY0M1dmNHRmphWFI1S1NBNklIQXVhWE5UYUdGa1pYSk5ZWFJsY21saGJDQW1KaUFvY0M1MWJtbG1iM0p0YzA1bFpXUlZjR1JoZEdVZ1BTQWhNU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCdUtHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCbkxtOXdZV05wZEhrdWRtRnNkV1VnUFNCd0xtOXdZV05wZEhrc0lIQXVZMjlzYjNJZ0ppWWdaeTVrYVdabWRYTmxMblpoYkhWbExtTnZjSGtvY0M1amIyeHZjaWtzSUhBdVpXMXBjM05wZG1VZ0ppWWdaeTVsYldsemMybDJaUzUyWVd4MVpTNWpiM0I1S0hBdVpXMXBjM05wZG1VcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0hBdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrcExDQndMbTFoY0NBbUppQW9aeTV0WVhBdWRtRnNkV1VnUFNCd0xtMWhjQ2tzSUhBdVlXeHdhR0ZOWVhBZ0ppWWdLR2N1WVd4d2FHRk5ZWEF1ZG1Gc2RXVWdQU0J3TG1Gc2NHaGhUV0Z3S1N3Z2NDNXpjR1ZqZFd4aGNrMWhjQ0FtSmlBb1p5NXpjR1ZqZFd4aGNrMWhjQzUyWVd4MVpTQTlJSEF1YzNCbFkzVnNZWEpOWVhBcExDQndMbUZzY0doaFZHVnpkQ0ErSURBZ0ppWWdLR2N1WVd4d2FHRlVaWE4wTG5aaGJIVmxJRDBnY0M1aGJIQm9ZVlJsYzNRcE93b2dJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ2N5NW5aWFFvY0NrdVpXNTJUV0Z3T3dvZ0lDQWdJQ0FnSUY4Z0ppWWdLR2N1Wlc1MlRXRndMblpoYkhWbElEMGdYeXdnWnk1bWJHbHdSVzUyVFdGd0xuWmhiSFZsSUQwZ1h5NXBjME4xWW1WVVpYaDBkWEpsSUNZbUlGOHVhWE5TWlc1a1pYSlVZWEpuWlhSVVpYaDBkWEpsSUQwOVBTQWhNU0EvSUMweElEb2dNU3dnWnk1eVpXWnNaV04wYVhacGRIa3VkbUZzZFdVZ1BTQndMbkpsWm14bFkzUnBkbWwwZVN3Z1p5NXBiM0l1ZG1Gc2RXVWdQU0J3TG1sdmNpd2daeTV5WldaeVlXTjBhVzl1VW1GMGFXOHVkbUZzZFdVZ1BTQndMbkpsWm5KaFkzUnBiMjVTWVhScGJ5a3NJSEF1YkdsbmFIUk5ZWEFnSmlZZ0tHY3ViR2xuYUhSTllYQXVkbUZzZFdVZ1BTQndMbXhwWjJoMFRXRndMQ0JuTG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1TG5aaGJIVmxJRDBnY0M1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNrc0lIQXVZVzlOWVhBZ0ppWWdLR2N1WVc5TllYQXVkbUZzZFdVZ1BTQndMbUZ2VFdGd0xDQm5MbUZ2VFdGd1NXNTBaVzV6YVhSNUxuWmhiSFZsSUQwZ2NDNWhiMDFoY0VsdWRHVnVjMmwwZVNrN0NpQWdJQ0FnSUNBZ2JHVjBJSGs3Q2lBZ0lDQWdJQ0FnY0M1dFlYQWdQeUI1SUQwZ2NDNXRZWEFnT2lCd0xuTndaV04xYkdGeVRXRndJRDhnZVNBOUlIQXVjM0JsWTNWc1lYSk5ZWEFnT2lCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0NBL0lIa2dQU0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ0E2SUhBdWJtOXliV0ZzVFdGd0lEOGdlU0E5SUhBdWJtOXliV0ZzVFdGd0lEb2djQzVpZFcxd1RXRndJRDhnZVNBOUlIQXVZblZ0Y0UxaGNDQTZJSEF1Y205MVoyaHVaWE56VFdGd0lEOGdlU0E5SUhBdWNtOTFaMmh1WlhOelRXRndJRG9nY0M1dFpYUmhiRzVsYzNOTllYQWdQeUI1SUQwZ2NDNXRaWFJoYkc1bGMzTk5ZWEFnT2lCd0xtRnNjR2hoVFdGd0lEOGdlU0E5SUhBdVlXeHdhR0ZOWVhBZ09pQndMbVZ0YVhOemFYWmxUV0Z3SUQ4Z2VTQTlJSEF1WlcxcGMzTnBkbVZOWVhBZ09pQndMbU5zWldGeVkyOWhkRTFoY0NBL0lIa2dQU0J3TG1Oc1pXRnlZMjloZEUxaGNDQTZJSEF1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUQ4Z2VTQTlJSEF1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SURvZ2NDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnUHlCNUlEMGdjQzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBZ09pQndMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUQ4Z2VTQTlJSEF1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBZ09pQndMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQeUI1SUQwZ2NDNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0lEb2djQzUwY21GdWMyMXBjM05wYjI1TllYQWdQeUI1SUQwZ2NDNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ09pQndMblJvYVdOcmJtVnpjMDFoY0NBL0lIa2dQU0J3TG5Sb2FXTnJibVZ6YzAxaGNDQTZJSEF1YzJobFpXNURiMnh2Y2sxaGNDQS9JSGtnUFNCd0xuTm9aV1Z1UTI5c2IzSk5ZWEFnT2lCd0xuTm9aV1Z1VW05MVoyaHVaWE56VFdGd0lDWW1JQ2g1SUQwZ2NDNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDa3NJSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9lUzVwYzFkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwSUNZbUlDaDVJRDBnZVM1MFpYaDBkWEpsS1N3Z2VTNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMDlQU0FoTUNBbUppQjVMblZ3WkdGMFpVMWhkSEpwZUNncExDQm5MblYyVkhKaGJuTm1iM0p0TG5aaGJIVmxMbU52Y0hrb2VTNXRZWFJ5YVhncEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWWpzS0lDQWdJQ0FnSUNCd0xtRnZUV0Z3SUQ4Z1lpQTlJSEF1WVc5TllYQWdPaUJ3TG14cFoyaDBUV0Z3SUNZbUlDaGlJRDBnY0M1c2FXZG9kRTFoY0Nrc0lHSWdJVDA5SUhadmFXUWdNQ0FtSmlBb1lpNXBjMWRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBJQ1ltSUNoaUlEMGdZaTUwWlhoMGRYSmxLU3dnWWk1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwOVBTQWhNQ0FtSmlCaUxuVndaR0YwWlUxaGRISnBlQ2dwTENCbkxuVjJNbFJ5WVc1elptOXliUzUyWVd4MVpTNWpiM0I1S0dJdWJXRjBjbWw0S1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnBLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQm5MbVJwWm1aMWMyVXVkbUZzZFdVdVkyOXdlU2h3TG1OdmJHOXlLU3dnWnk1dmNHRmphWFI1TG5aaGJIVmxJRDBnY0M1dmNHRmphWFI1T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2NpaG5MQ0J3S1NCN0NpQWdJQ0FnSUNBZ1p5NWtZWE5vVTJsNlpTNTJZV3gxWlNBOUlIQXVaR0Z6YUZOcGVtVXNJR2N1ZEc5MFlXeFRhWHBsTG5aaGJIVmxJRDBnY0M1a1lYTm9VMmw2WlNBcklIQXVaMkZ3VTJsNlpTd2daeTV6WTJGc1pTNTJZV3gxWlNBOUlIQXVjMk5oYkdVN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnZLR2NzSUhBc0lGOHNJSGtwSUhzS0lDQWdJQ0FnSUNCbkxtUnBabVoxYzJVdWRtRnNkV1V1WTI5d2VTaHdMbU52Ykc5eUtTd2daeTV2Y0dGamFYUjVMblpoYkhWbElEMGdjQzV2Y0dGamFYUjVMQ0JuTG5OcGVtVXVkbUZzZFdVZ1BTQndMbk5wZW1VZ0tpQmZMQ0JuTG5OallXeGxMblpoYkhWbElEMGdlU0FxSUM0MUxDQndMbTFoY0NBbUppQW9aeTV0WVhBdWRtRnNkV1VnUFNCd0xtMWhjQ2tzSUhBdVlXeHdhR0ZOWVhBZ0ppWWdLR2N1WVd4d2FHRk5ZWEF1ZG1Gc2RXVWdQU0J3TG1Gc2NHaGhUV0Z3S1N3Z2NDNWhiSEJvWVZSbGMzUWdQaUF3SUNZbUlDaG5MbUZzY0doaFZHVnpkQzUyWVd4MVpTQTlJSEF1WVd4d2FHRlVaWE4wS1RzS0lDQWdJQ0FnSUNCc1pYUWdZanNLSUNBZ0lDQWdJQ0J3TG0xaGNDQS9JR0lnUFNCd0xtMWhjQ0E2SUhBdVlXeHdhR0ZOWVhBZ0ppWWdLR0lnUFNCd0xtRnNjR2hoVFdGd0tTd2dZaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaGlMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQVDA5SUNFd0lDWW1JR0l1ZFhCa1lYUmxUV0YwY21sNEtDa3NJR2N1ZFhaVWNtRnVjMlp2Y20wdWRtRnNkV1V1WTI5d2VTaGlMbTFoZEhKcGVDa3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWVNobkxDQndLU0I3Q2lBZ0lDQWdJQ0FnWnk1a2FXWm1kWE5sTG5aaGJIVmxMbU52Y0hrb2NDNWpiMnh2Y2lrc0lHY3ViM0JoWTJsMGVTNTJZV3gxWlNBOUlIQXViM0JoWTJsMGVTd2daeTV5YjNSaGRHbHZiaTUyWVd4MVpTQTlJSEF1Y205MFlYUnBiMjRzSUhBdWJXRndJQ1ltSUNobkxtMWhjQzUyWVd4MVpTQTlJSEF1YldGd0tTd2djQzVoYkhCb1lVMWhjQ0FtSmlBb1p5NWhiSEJvWVUxaGNDNTJZV3gxWlNBOUlIQXVZV3h3YUdGTllYQXBMQ0J3TG1Gc2NHaGhWR1Z6ZENBK0lEQWdKaVlnS0djdVlXeHdhR0ZVWlhOMExuWmhiSFZsSUQwZ2NDNWhiSEJvWVZSbGMzUXBPd29nSUNBZ0lDQWdJR3hsZENCZk93b2dJQ0FnSUNBZ0lIQXViV0Z3SUQ4Z1h5QTlJSEF1YldGd0lEb2djQzVoYkhCb1lVMWhjQ0FtSmlBb1h5QTlJSEF1WVd4d2FHRk5ZWEFwTENCZklDRTlQU0IyYjJsa0lEQWdKaVlnS0Y4dWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOVBUMGdJVEFnSmlZZ1h5NTFjR1JoZEdWTllYUnlhWGdvS1N3Z1p5NTFkbFJ5WVc1elptOXliUzUyWVd4MVpTNWpiM0I1S0Y4dWJXRjBjbWw0S1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnNLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQndMbVZ0YVhOemFYWmxUV0Z3SUNZbUlDaG5MbVZ0YVhOemFYWmxUV0Z3TG5aaGJIVmxJRDBnY0M1bGJXbHpjMmwyWlUxaGNDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJqS0djc0lIQXBJSHNLSUNBZ0lDQWdJQ0JuTG5Od1pXTjFiR0Z5TG5aaGJIVmxMbU52Y0hrb2NDNXpjR1ZqZFd4aGNpa3NJR2N1YzJocGJtbHVaWE56TG5aaGJIVmxJRDBnVFdGMGFDNXRZWGdvY0M1emFHbHVhVzVsYzNNc0lERmxMVFFwTENCd0xtVnRhWE56YVhabFRXRndJQ1ltSUNobkxtVnRhWE56YVhabFRXRndMblpoYkhWbElEMGdjQzVsYldsemMybDJaVTFoY0Nrc0lIQXVZblZ0Y0UxaGNDQW1KaUFvWnk1aWRXMXdUV0Z3TG5aaGJIVmxJRDBnY0M1aWRXMXdUV0Z3TENCbkxtSjFiWEJUWTJGc1pTNTJZV3gxWlNBOUlIQXVZblZ0Y0ZOallXeGxMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JQ2huTG1KMWJYQlRZMkZzWlM1MllXeDFaU0FxUFNBdE1Ta3BMQ0J3TG01dmNtMWhiRTFoY0NBbUppQW9aeTV1YjNKdFlXeE5ZWEF1ZG1Gc2RXVWdQU0J3TG01dmNtMWhiRTFoY0N3Z1p5NXViM0p0WVd4VFkyRnNaUzUyWVd4MVpTNWpiM0I1S0hBdWJtOXliV0ZzVTJOaGJHVXBMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JR2N1Ym05eWJXRnNVMk5oYkdVdWRtRnNkV1V1Ym1WbllYUmxLQ2twTENCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQW9aeTVrYVhOd2JHRmpaVzFsYm5STllYQXVkbUZzZFdVZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2daeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaUzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUdjdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3k1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQm9LR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQndMbWR5WVdScFpXNTBUV0Z3SUNZbUlDaG5MbWR5WVdScFpXNTBUV0Z3TG5aaGJIVmxJRDBnY0M1bmNtRmthV1Z1ZEUxaGNDa3NJSEF1WlcxcGMzTnBkbVZOWVhBZ0ppWWdLR2N1WlcxcGMzTnBkbVZOWVhBdWRtRnNkV1VnUFNCd0xtVnRhWE56YVhabFRXRndLU3dnY0M1aWRXMXdUV0Z3SUNZbUlDaG5MbUoxYlhCTllYQXVkbUZzZFdVZ1BTQndMbUoxYlhCTllYQXNJR2N1WW5WdGNGTmpZV3hsTG5aaGJIVmxJRDBnY0M1aWRXMXdVMk5oYkdVc0lIQXVjMmxrWlNBOVBUMGdhWFFnSmlZZ0tHY3VZblZ0Y0ZOallXeGxMblpoYkhWbElDbzlJQzB4S1Nrc0lIQXVibTl5YldGc1RXRndJQ1ltSUNobkxtNXZjbTFoYkUxaGNDNTJZV3gxWlNBOUlIQXVibTl5YldGc1RXRndMQ0JuTG01dmNtMWhiRk5qWVd4bExuWmhiSFZsTG1OdmNIa29jQzV1YjNKdFlXeFRZMkZzWlNrc0lIQXVjMmxrWlNBOVBUMGdhWFFnSmlZZ1p5NXViM0p0WVd4VFkyRnNaUzUyWVd4MVpTNXVaV2RoZEdVb0tTa3NJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ1ltSUNobkxtUnBjM0JzWVdObGJXVnVkRTFoY0M1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCbkxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJUWTJGc1pTd2daeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhVb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUdjdWNtOTFaMmh1WlhOekxuWmhiSFZsSUQwZ2NDNXliM1ZuYUc1bGMzTXNJR2N1YldWMFlXeHVaWE56TG5aaGJIVmxJRDBnY0M1dFpYUmhiRzVsYzNNc0lIQXVjbTkxWjJodVpYTnpUV0Z3SUNZbUlDaG5Mbkp2ZFdkb2JtVnpjMDFoY0M1MllXeDFaU0E5SUhBdWNtOTFaMmh1WlhOelRXRndLU3dnY0M1dFpYUmhiRzVsYzNOTllYQWdKaVlnS0djdWJXVjBZV3h1WlhOelRXRndMblpoYkhWbElEMGdjQzV0WlhSaGJHNWxjM05OWVhBcExDQndMbVZ0YVhOemFYWmxUV0Z3SUNZbUlDaG5MbVZ0YVhOemFYWmxUV0Z3TG5aaGJIVmxJRDBnY0M1bGJXbHpjMmwyWlUxaGNDa3NJSEF1WW5WdGNFMWhjQ0FtSmlBb1p5NWlkVzF3VFdGd0xuWmhiSFZsSUQwZ2NDNWlkVzF3VFdGd0xDQm5MbUoxYlhCVFkyRnNaUzUyWVd4MVpTQTlJSEF1WW5WdGNGTmpZV3hsTENCd0xuTnBaR1VnUFQwOUlHbDBJQ1ltSUNobkxtSjFiWEJUWTJGc1pTNTJZV3gxWlNBcVBTQXRNU2twTENCd0xtNXZjbTFoYkUxaGNDQW1KaUFvWnk1dWIzSnRZV3hOWVhBdWRtRnNkV1VnUFNCd0xtNXZjbTFoYkUxaGNDd2daeTV1YjNKdFlXeFRZMkZzWlM1MllXeDFaUzVqYjNCNUtIQXVibTl5YldGc1UyTmhiR1VwTENCd0xuTnBaR1VnUFQwOUlHbDBJQ1ltSUdjdWJtOXliV0ZzVTJOaGJHVXVkbUZzZFdVdWJtVm5ZWFJsS0NrcExDQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQW1KaUFvWnk1a2FYTndiR0ZqWlcxbGJuUk5ZWEF1ZG1Gc2RXVWdQU0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnWnk1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlM1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lHY3VaR2x6Y0d4aFkyVnRaVzUwUW1saGN5NTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5a3NJSE11WjJWMEtIQXBMbVZ1ZGsxaGNDQW1KaUFvWnk1bGJuWk5ZWEJKYm5SbGJuTnBkSGt1ZG1Gc2RXVWdQU0J3TG1WdWRrMWhjRWx1ZEdWdWMybDBlU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCa0tHY3NJSEFzSUY4cElIc0tJQ0FnSUNBZ0lDQjFLR2NzSUhBcExDQm5MbWx2Y2k1MllXeDFaU0E5SUhBdWFXOXlMQ0J3TG5Ob1pXVnVJRDRnTUNBbUppQW9aeTV6YUdWbGJrTnZiRzl5TG5aaGJIVmxMbU52Y0hrb2NDNXphR1ZsYmtOdmJHOXlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHdMbk5vWldWdUtTd2daeTV6YUdWbGJsSnZkV2RvYm1WemN5NTJZV3gxWlNBOUlIQXVjMmhsWlc1U2IzVm5hRzVsYzNNc0lIQXVjMmhsWlc1RGIyeHZjazFoY0NBbUppQW9aeTV6YUdWbGJrTnZiRzl5VFdGd0xuWmhiSFZsSUQwZ2NDNXphR1ZsYmtOdmJHOXlUV0Z3S1N3Z2NDNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDQW1KaUFvWnk1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0M1MllXeDFaU0E5SUhBdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBcEtTd2djQzVqYkdWaGNtTnZZWFFnUGlBd0lDWW1JQ2huTG1Oc1pXRnlZMjloZEM1MllXeDFaU0E5SUhBdVkyeGxZWEpqYjJGMExDQm5MbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeTUyWVd4MVpTQTlJSEF1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56TENCd0xtTnNaV0Z5WTI5aGRFMWhjQ0FtSmlBb1p5NWpiR1ZoY21OdllYUk5ZWEF1ZG1Gc2RXVWdQU0J3TG1Oc1pXRnlZMjloZEUxaGNDa3NJSEF1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0lDWW1JQ2huTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDNTJZV3gxWlNBOUlIQXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3S1N3Z2NDNWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdKaVlnS0djdVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVXVkbUZzZFdVdVkyOXdlU2h3TG1Oc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bEtTd2daeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEF1ZG1Gc2RXVWdQU0J3TG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0N3Z2NDNXphV1JsSUQwOVBTQnBkQ0FtSmlCbkxtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxMblpoYkhWbExtNWxaMkYwWlNncEtTa3NJSEF1ZEhKaGJuTnRhWE56YVc5dUlENGdNQ0FtSmlBb1p5NTBjbUZ1YzIxcGMzTnBiMjR1ZG1Gc2RXVWdQU0J3TG5SeVlXNXpiV2x6YzJsdmJpd2daeTUwY21GdWMyMXBjM05wYjI1VFlXMXdiR1Z5VFdGd0xuWmhiSFZsSUQwZ1h5NTBaWGgwZFhKbExDQm5MblJ5WVc1emJXbHpjMmx2YmxOaGJYQnNaWEpUYVhwbExuWmhiSFZsTG5ObGRDaGZMbmRwWkhSb0xDQmZMbWhsYVdkb2RDa3NJSEF1ZEhKaGJuTnRhWE56YVc5dVRXRndJQ1ltSUNobkxuUnlZVzV6YldsemMybHZiazFoY0M1MllXeDFaU0E5SUhBdWRISmhibk50YVhOemFXOXVUV0Z3S1N3Z1p5NTBhR2xqYTI1bGMzTXVkbUZzZFdVZ1BTQndMblJvYVdOcmJtVnpjeXdnY0M1MGFHbGphMjVsYzNOTllYQWdKaVlnS0djdWRHaHBZMnR1WlhOelRXRndMblpoYkhWbElEMGdjQzUwYUdsamEyNWxjM05OWVhBcExDQm5MbUYwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlV1ZG1Gc2RXVWdQU0J3TG1GMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVc0lHY3VZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpNTJZV3gxWlM1amIzQjVLSEF1WVhSMFpXNTFZWFJwYjI1RGIyeHZjaWtwTENCbkxuTndaV04xYkdGeVNXNTBaVzV6YVhSNUxuWmhiSFZsSUQwZ2NDNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVTd2daeTV6Y0dWamRXeGhja052Ykc5eUxuWmhiSFZsTG1OdmNIa29jQzV6Y0dWamRXeGhja052Ykc5eUtTd2djQzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBbUppQW9aeTV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0M1MllXeDFaU0E5SUhBdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQXBMQ0J3TG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnSmlZZ0tHY3VjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDNTJZV3gxWlNBOUlIQXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJtS0djc0lIQXBJSHNLSUNBZ0lDQWdJQ0J3TG0xaGRHTmhjQ0FtSmlBb1p5NXRZWFJqWVhBdWRtRnNkV1VnUFNCd0xtMWhkR05oY0Nrc0lIQXVZblZ0Y0UxaGNDQW1KaUFvWnk1aWRXMXdUV0Z3TG5aaGJIVmxJRDBnY0M1aWRXMXdUV0Z3TENCbkxtSjFiWEJUWTJGc1pTNTJZV3gxWlNBOUlIQXVZblZ0Y0ZOallXeGxMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JQ2huTG1KMWJYQlRZMkZzWlM1MllXeDFaU0FxUFNBdE1Ta3BMQ0J3TG01dmNtMWhiRTFoY0NBbUppQW9aeTV1YjNKdFlXeE5ZWEF1ZG1Gc2RXVWdQU0J3TG01dmNtMWhiRTFoY0N3Z1p5NXViM0p0WVd4VFkyRnNaUzUyWVd4MVpTNWpiM0I1S0hBdWJtOXliV0ZzVTJOaGJHVXBMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JR2N1Ym05eWJXRnNVMk5oYkdVdWRtRnNkV1V1Ym1WbllYUmxLQ2twTENCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQW9aeTVrYVhOd2JHRmpaVzFsYm5STllYQXVkbUZzZFdVZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2daeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaUzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUdjdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3k1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnRLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQW1KaUFvWnk1a2FYTndiR0ZqWlcxbGJuUk5ZWEF1ZG1Gc2RXVWdQU0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnWnk1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlM1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lHY3VaR2x6Y0d4aFkyVnRaVzUwUW1saGN5NTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUI0S0djc0lIQXBJSHNLSUNBZ0lDQWdJQ0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlBb1p5NWthWE53YkdGalpXMWxiblJOWVhBdWRtRnNkV1VnUFNCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z1p5NWthWE53YkdGalpXMWxiblJUWTJGc1pTNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJR2N1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeTUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeWtzSUdjdWNtVm1aWEpsYm1ObFVHOXphWFJwYjI0dWRtRnNkV1V1WTI5d2VTaHdMbkpsWm1WeVpXNWpaVkJ2YzJsMGFXOXVLU3dnWnk1dVpXRnlSR2x6ZEdGdVkyVXVkbUZzZFdVZ1BTQndMbTVsWVhKRWFYTjBZVzVqWlN3Z1p5NW1ZWEpFYVhOMFlXNWpaUzUyWVd4MVpTQTlJSEF1Wm1GeVJHbHpkR0Z1WTJVN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjJLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQndMbUoxYlhCTllYQWdKaVlnS0djdVluVnRjRTFoY0M1MllXeDFaU0E5SUhBdVluVnRjRTFoY0N3Z1p5NWlkVzF3VTJOaGJHVXVkbUZzZFdVZ1BTQndMbUoxYlhCVFkyRnNaU3dnY0M1emFXUmxJRDA5UFNCcGRDQW1KaUFvWnk1aWRXMXdVMk5oYkdVdWRtRnNkV1VnS2owZ0xURXBLU3dnY0M1dWIzSnRZV3hOWVhBZ0ppWWdLR2N1Ym05eWJXRnNUV0Z3TG5aaGJIVmxJRDBnY0M1dWIzSnRZV3hOWVhBc0lHY3VibTl5YldGc1UyTmhiR1V1ZG1Gc2RXVXVZMjl3ZVNod0xtNXZjbTFoYkZOallXeGxLU3dnY0M1emFXUmxJRDA5UFNCcGRDQW1KaUJuTG01dmNtMWhiRk5qWVd4bExuWmhiSFZsTG01bFoyRjBaU2dwS1N3Z2NDNWthWE53YkdGalpXMWxiblJOWVhBZ0ppWWdLR2N1WkdsemNHeGhZMlZ0Wlc1MFRXRndMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5STllYQXNJR2N1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1V1ZG1Gc2RXVWdQU0J3TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCbkxtUnBjM0JzWVdObGJXVnVkRUpwWVhNdWRtRnNkV1VnUFNCd0xtUnBjM0JzWVdObGJXVnVkRUpwWVhNcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQnlaV1p5WlhOb1JtOW5WVzVwWm05eWJYTTZJR1VzQ2lBZ0lDQWdJQ0FnY21WbWNtVnphRTFoZEdWeWFXRnNWVzVwWm05eWJYTTZJSFFLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnVEhnb0tTQjdDaUFnSUNCc1pYUWdjeUE5SUhGektDSmpZVzUyWVhNaUtUc0tJQ0FnSUhKbGRIVnliaUJ6TG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FpWW14dlkyc2lMQ0J6T3dwOUNtWjFibU4wYVc5dUlIRmxLSE1nUFNCN2ZTa2dld29nSUNBZ2JHVjBJR1VnUFNCekxtTmhiblpoY3lBaFBUMGdkbTlwWkNBd0lEOGdjeTVqWVc1MllYTWdPaUJNZUNncExDQjBJRDBnY3k1amIyNTBaWGgwSUNFOVBTQjJiMmxrSURBZ1B5QnpMbU52Ym5SbGVIUWdPaUJ1ZFd4c0xDQnVJRDBnY3k1aGJIQm9ZU0FoUFQwZ2RtOXBaQ0F3SUQ4Z2N5NWhiSEJvWVNBNklDRXhMQ0JwSUQwZ2N5NWtaWEIwYUNBaFBUMGdkbTlwWkNBd0lEOGdjeTVrWlhCMGFDQTZJQ0V3TENCeUlEMGdjeTV6ZEdWdVkybHNJQ0U5UFNCMmIybGtJREFnUHlCekxuTjBaVzVqYVd3Z09pQWhNQ3dnYnlBOUlITXVZVzUwYVdGc2FXRnpJQ0U5UFNCMmIybGtJREFnUHlCekxtRnVkR2xoYkdsaGN5QTZJQ0V4TENCaElEMGdjeTV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VnSVQwOUlIWnZhV1FnTUNBL0lITXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhJRG9nSVRBc0lHd2dQU0J6TG5CeVpYTmxjblpsUkhKaGQybHVaMEoxWm1abGNpQWhQVDBnZG05cFpDQXdJRDhnY3k1d2NtVnpaWEoyWlVSeVlYZHBibWRDZFdabVpYSWdPaUFoTVN3Z1l5QTlJSE11Y0c5M1pYSlFjbVZtWlhKbGJtTmxJQ0U5UFNCMmIybGtJREFnUHlCekxuQnZkMlZ5VUhKbFptVnlaVzVqWlNBNklDSmtaV1poZFd4MElpd2dhQ0E5SUhNdVptRnBiRWxtVFdGcWIzSlFaWEptYjNKdFlXNWpaVU5oZG1WaGRDQWhQVDBnZG05cFpDQXdJRDhnY3k1bVlXbHNTV1pOWVdwdmNsQmxjbVp2Y20xaGJtTmxRMkYyWldGMElEb2dJVEVzSUhVZ1BTQnVkV3hzTENCa0lEMGdiblZzYkN3Z1ppQTlJRnRkTENCdElEMGdXMTA3Q2lBZ0lDQjBhR2x6TG1SdmJVVnNaVzFsYm5RZ1BTQmxMQ0IwYUdsekxtUmxZblZuSUQwZ2V3b2dJQ0FnSUNBZ0lHTm9aV05yVTJoaFpHVnlSWEp5YjNKek9pQWhNQW9nSUNBZ2ZTd2dkR2hwY3k1aGRYUnZRMnhsWVhJZ1BTQWhNQ3dnZEdocGN5NWhkWFJ2UTJ4bFlYSkRiMnh2Y2lBOUlDRXdMQ0IwYUdsekxtRjFkRzlEYkdWaGNrUmxjSFJvSUQwZ0lUQXNJSFJvYVhNdVlYVjBiME5zWldGeVUzUmxibU5wYkNBOUlDRXdMQ0IwYUdsekxuTnZjblJQWW1wbFkzUnpJRDBnSVRBc0lIUm9hWE11WTJ4cGNIQnBibWRRYkdGdVpYTWdQU0JiWFN3Z2RHaHBjeTVzYjJOaGJFTnNhWEJ3YVc1blJXNWhZbXhsWkNBOUlDRXhMQ0IwYUdsekxtOTFkSEIxZEVWdVkyOWthVzVuSUQwZ1RuUXNJSFJvYVhNdWNHaDVjMmxqWVd4c2VVTnZjbkpsWTNSTWFXZG9kSE1nUFNBaE1Td2dkR2hwY3k1MGIyNWxUV0Z3Y0dsdVp5QTlJRjl1TENCMGFHbHpMblJ2Ym1WTllYQndhVzVuUlhod2IzTjFjbVVnUFNBeE93b2dJQ0FnYkdWMElIZ2dQU0IwYUdsekxDQjJJRDBnSVRFc0lHY2dQU0F3TENCd0lEMGdNQ3dnWHlBOUlHNTFiR3dzSUhrZ1BTQXRNU3dnWWlBOUlHNTFiR3dzSUVFZ1BTQnVaWGNnVm1Vc0lFd2dQU0J1WlhjZ1ZtVXNJRWtnUFNCdWRXeHNMQ0JySUQwZ1pTNTNhV1IwYUN3Z1FpQTlJR1V1YUdWcFoyaDBMQ0JRSUQwZ01Td2dkeUE5SUc1MWJHd3NJRVVnUFNCdWRXeHNMQ0JFSUQwZ2JtVjNJRlpsS0RBc0lEQXNJR3NzSUVJcExDQlZJRDBnYm1WM0lGWmxLREFzSURBc0lHc3NJRUlwTENCR0lEMGdJVEVzSUU4Z1BTQmJYU3dnYm1VZ1BTQnVaWGNnUkhJc0lHTmxJRDBnSVRFc0lGWWdQU0FoTVN3Z1Z5QTlJRzUxYkd3c0lHaGxJRDBnYm1WM0lIQmxMQ0JzWlNBOUlHNWxkeUJOTENCbVpTQTlJSHNLSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCdWRXeHNMQW9nSUNBZ0lDQWdJR1p2WnpvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0JsYm5acGNtOXViV1Z1ZERvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0J2ZG1WeWNtbGtaVTFoZEdWeWFXRnNPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lHbHpVMk5sYm1VNklDRXdDaUFnSUNCOU93b2dJQ0FnWm5WdVkzUnBiMjRnUW1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGOGdQVDA5SUc1MWJHd2dQeUJRSURvZ01Uc0tJQ0FnSUgwS0lDQWdJR3hsZENCWklEMGdkRHNLSUNBZ0lHWjFibU4wYVc5dUlFTmxLRk1zSUU0cElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFZ2dQU0F3T3lCSUlEd2dVeTVzWlc1bmRHZzdJRWdyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNklEMGdVMXRJWFN3Z2NTQTlJR1V1WjJWMFEyOXVkR1Y0ZENoNkxDQk9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEVnSVQwOUlHNTFiR3dwSUhKbGRIVnliaUJ4T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ2JHVjBJRk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR0ZzY0doaE9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRG9nYVN3S0lDQWdJQ0FnSUNBZ0lDQWdjM1JsYm1OcGJEb2djaXdLSUNBZ0lDQWdJQ0FnSUNBZ1lXNTBhV0ZzYVdGek9pQnZMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtVnRkV3gwYVhCc2FXVmtRV3h3YUdFNklHRXNDaUFnSUNBZ0lDQWdJQ0FnSUhCeVpYTmxjblpsUkhKaGQybHVaMEoxWm1abGNqb2diQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2NHOTNaWEpRY21WbVpYSmxibU5sT2lCakxBb2dJQ0FnSUNBZ0lDQWdJQ0JtWVdsc1NXWk5ZV3B2Y2xCbGNtWnZjbTFoYm1ObFEyRjJaV0YwT2lCb0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQnBaaUFvSW5ObGRFRjBkSEpwWW5WMFpTSWdhVzRnWlNBbUppQmxMbk5sZEVGMGRISnBZblYwWlNnaVpHRjBZUzFsYm1kcGJtVWlMQ0JnZEdoeVpXVXVhbk1nY2lSN1kyRjlZQ2tzSUdVdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWQyVmlaMnhqYjI1MFpYaDBiRzl6ZENJc0lFVmxMQ0FoTVNrc0lHVXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2lkMlZpWjJ4amIyNTBaWGgwY21WemRHOXlaV1FpTENCdFpTd2dJVEVwTENCWklEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQk9JRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSW5kbFltZHNNaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpZDJWaVoyd2lMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJbVY0Y0dWeWFXMWxiblJoYkMxM1pXSm5iQ0lLSUNBZ0lDQWdJQ0FnSUNBZ1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIZ3VhWE5YWldKSFRERlNaVzVrWlhKbGNpQTlQVDBnSVRBZ0ppWWdUaTV6YUdsbWRDZ3BMQ0JaSUQwZ1EyVW9UaXdnVXlrc0lGa2dQVDA5SUc1MWJHd3BJSFJvY205M0lFTmxLRTRwSUQ4Z2JtVjNJRVZ5Y205eUtDSkZjbkp2Y2lCamNtVmhkR2x1WnlCWFpXSkhUQ0JqYjI1MFpYaDBJSGRwZEdnZ2VXOTFjaUJ6Wld4bFkzUmxaQ0JoZEhSeWFXSjFkR1Z6TGlJcElEb2dibVYzSUVWeWNtOXlLQ0pGY25KdmNpQmpjbVZoZEdsdVp5QlhaV0pIVENCamIyNTBaWGgwTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQlpMbWRsZEZOb1lXUmxjbEJ5WldOcGMybHZia1p2Y20xaGRDQTlQVDBnZG05cFpDQXdJQ1ltSUNoWkxtZGxkRk5vWVdSbGNsQnlaV05wYzJsdmJrWnZjbTFoZENBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21GdVoyVk5hVzQ2SURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVlXNW5aVTFoZURvZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnlaV05wYzJsdmJqb2dNUW9nSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZTQmpZWFJqYUNBb1V5a2dld29nSUNBZ0lDQWdJSFJvY205M0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDSWdLeUJUTG0xbGMzTmhaMlVwTENCVE93b2dJQ0FnZlFvZ0lDQWdiR1YwSUhsbExDQm5aU3dnZUdVc0lFOWxMQ0JITENCcUxDQkxMQ0IxWlN3Z2MyVXNJRk5sTENCVVpTd2dVR1VzSUZsbExDQkRMQ0JVTENCS0xDQWtMQ0J5WlN3Z1dpd2dUV1VzSUhabExDQjBaU3dnVWpzS0lDQWdJR1oxYm1OMGFXOXVJR1ZsS0NrZ2V3b2dJQ0FnSUNBZ0lIbGxJRDBnYm1WM0lGRnRLRmtwTENCblpTQTlJRzVsZHlCWWJTaFpMQ0I1WlN3Z2N5a3NJSGxsTG1sdWFYUW9aMlVwTENCMFpTQTlJRzVsZHlCRmVDaFpMQ0I1WlN3Z1oyVXBMQ0I0WlNBOUlHNWxkeUJUZUNoWkxDQjVaU3dnWjJVcExDQlBXekJkSUQwZ01UQXlPU3dnVDJVZ1BTQnVaWGNnZEdjb1dTa3NJRWNnUFNCdVpYY2dabmdzSUdvZ1BTQnVaWGNnVkhnb1dTd2dlV1VzSUhobExDQkhMQ0JuWlN3Z2RHVXNJRTlsS1N3Z1N5QTlJRzVsZHlCWmJTaDRLU3dnZFdVZ1BTQnVaWGNnYW0wb2VDa3NJSE5sSUQwZ2JtVjNJR2RtS0Zrc0lHZGxLU3dnVWlBOUlHNWxkeUJYYlNoWkxDQjVaU3dnYzJVc0lHZGxLU3dnVTJVZ1BTQnVaWGNnUzIwb1dTd2djMlVzSUU5bExDQlNLU3dnVkdVZ1BTQnVaWGNnYzJjb1dTd2dVMlVzSUhObExDQlBaU2tzSUZvZ1BTQnVaWGNnY21jb1dTd2daMlVzSUdvcExDQktJRDBnYm1WM0lFcHRLRWNwTENCUVpTQTlJRzVsZHlCa2VDaDRMQ0JMTENCMVpTd2dlV1VzSUdkbExDQlNMQ0JLS1N3Z1dXVWdQU0J1WlhjZ1EzZ29SeWtzSUVNZ1BTQnVaWGNnYlhnc0lGUWdQU0J1WlhjZ1RYZ29lV1VzSUdkbEtTd2djbVVnUFNCdVpYY2dWbTBvZUN3Z1N5d2dlR1VzSUZSbExDQmhLU3dnSkNBOUlHNWxkeUI1YUNoNExDQlVaU3dnWjJVcExDQk5aU0E5SUc1bGR5QnhiU2haTENCNVpTd2dUMlVzSUdkbEtTd2dkbVVnUFNCdVpYY2daV2NvV1N3Z2VXVXNJRTlsTENCblpTa3NJRTlsTG5CeWIyZHlZVzF6SUQwZ1VHVXVjSEp2WjNKaGJYTXNJSGd1WTJGd1lXSnBiR2wwYVdWeklEMGdaMlVzSUhndVpYaDBaVzV6YVc5dWN5QTlJSGxsTENCNExuQnliM0JsY25ScFpYTWdQU0JITENCNExuSmxibVJsY2t4cGMzUnpJRDBnUXl3Z2VDNXphR0ZrYjNkTllYQWdQU0FrTENCNExuTjBZWFJsSUQwZ2VHVXNJSGd1YVc1bWJ5QTlJRTlsT3dvZ0lDQWdmUW9nSUNBZ1pXVW9LVHNLSUNBZ0lHeGxkQ0JSSUQwZ2JtVjNJSFpvS0hnc0lGa3BPd29nSUNBZ2RHaHBjeTU0Y2lBOUlGRXNJSFJvYVhNdVoyVjBRMjl1ZEdWNGRDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJaT3dvZ0lDQWdmU3dnZEdocGN5NW5aWFJEYjI1MFpYaDBRWFIwY21saWRYUmxjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCWkxtZGxkRU52Ym5SbGVIUkJkSFJ5YVdKMWRHVnpLQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxtWnZjbU5sUTI5dWRHVjRkRXh2YzNNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1V5QTlJSGxsTG1kbGRDZ2lWMFZDUjB4ZmJHOXpaVjlqYjI1MFpYaDBJaWs3Q2lBZ0lDQWdJQ0FnVXlBbUppQlRMbXh2YzJWRGIyNTBaWGgwS0NrN0NpQWdJQ0I5TENCMGFHbHpMbVp2Y21ObFEyOXVkR1Y0ZEZKbGMzUnZjbVVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnVXlBOUlIbGxMbWRsZENnaVYwVkNSMHhmYkc5elpWOWpiMjUwWlhoMElpazdDaUFnSUNBZ0lDQWdVeUFtSmlCVExuSmxjM1J2Y21WRGIyNTBaWGgwS0NrN0NpQWdJQ0I5TENCMGFHbHpMbWRsZEZCcGVHVnNVbUYwYVc4Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVRHNLSUNBZ0lIMHNJSFJvYVhNdWMyVjBVR2w0Wld4U1lYUnBieUE5SUdaMWJtTjBhVzl1S0ZNcElIc0tJQ0FnSUNBZ0lDQlRJQ0U5UFNCMmIybGtJREFnSmlZZ0tGQWdQU0JUTENCMGFHbHpMbk5sZEZOcGVtVW9heXdnUWl3Z0lURXBLVHNLSUNBZ0lIMHNJSFJvYVhNdVoyVjBVMmw2WlNBOUlHWjFibU4wYVc5dUtGTXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVeTV6WlhRb2F5d2dRaWs3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRk5wZW1VZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUtTQjdDaUFnSUNBZ0lDQWdhV1lnS0ZFdWFYTlFjbVZ6Wlc1MGFXNW5LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1EyRnVKM1FnWTJoaGJtZGxJSE5wZW1VZ2QyaHBiR1VnVmxJZ1pHVjJhV05sSUdseklIQnlaWE5sYm5ScGJtY3VJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2F5QTlJRk1zSUVJZ1BTQk9MQ0JsTG5kcFpIUm9JRDBnVFdGMGFDNW1iRzl2Y2loVElDb2dVQ2tzSUdVdWFHVnBaMmgwSUQwZ1RXRjBhQzVtYkc5dmNpaE9JQ29nVUNrc0lFZ2dJVDA5SUNFeElDWW1JQ2hsTG5OMGVXeGxMbmRwWkhSb0lEMGdVeUFySUNKd2VDSXNJR1V1YzNSNWJHVXVhR1ZwWjJoMElEMGdUaUFySUNKd2VDSXBMQ0IwYUdsekxuTmxkRlpwWlhkd2IzSjBLREFzSURBc0lGTXNJRTRwT3dvZ0lDQWdmU3dnZEdocGN5NW5aWFJFY21GM2FXNW5RblZtWm1WeVUybDZaU0E5SUdaMWJtTjBhVzl1S0ZNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1V5NXpaWFFvYXlBcUlGQXNJRUlnS2lCUUtTNW1iRzl2Y2lncE93b2dJQ0FnZlN3Z2RHaHBjeTV6WlhSRWNtRjNhVzVuUW5WbVptVnlVMmw2WlNBOUlHWjFibU4wYVc5dUtGTXNJRTRzSUVncElIc0tJQ0FnSUNBZ0lDQnJJRDBnVXl3Z1FpQTlJRTRzSUZBZ1BTQklMQ0JsTG5kcFpIUm9JRDBnVFdGMGFDNW1iRzl2Y2loVElDb2dTQ2tzSUdVdWFHVnBaMmgwSUQwZ1RXRjBhQzVtYkc5dmNpaE9JQ29nU0Nrc0lIUm9hWE11YzJWMFZtbGxkM0J2Y25Rb01Dd2dNQ3dnVXl3Z1RpazdDaUFnSUNCOUxDQjBhR2x6TG1kbGRFTjFjbkpsYm5SV2FXVjNjRzl5ZENBOUlHWjFibU4wYVc5dUtGTXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVeTVqYjNCNUtFRXBPd29nSUNBZ2ZTd2dkR2hwY3k1blpYUldhV1YzY0c5eWRDQTlJR1oxYm1OMGFXOXVLRk1wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVXk1amIzQjVLRVFwT3dvZ0lDQWdmU3dnZEdocGN5NXpaWFJXYVdWM2NHOXlkQ0E5SUdaMWJtTjBhVzl1S0ZNc0lFNHNJRWdzSUhvcElIc0tJQ0FnSUNBZ0lDQlRMbWx6Vm1WamRHOXlOQ0EvSUVRdWMyVjBLRk11ZUN3Z1V5NTVMQ0JUTG5vc0lGTXVkeWtnT2lCRUxuTmxkQ2hUTENCT0xDQklMQ0I2S1N3Z2VHVXVkbWxsZDNCdmNuUW9RUzVqYjNCNUtFUXBMbTExYkhScGNHeDVVMk5oYkdGeUtGQXBMbVpzYjI5eUtDa3BPd29nSUNBZ2ZTd2dkR2hwY3k1blpYUlRZMmx6YzI5eUlEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUTG1OdmNIa29WU2s3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRk5qYVhOemIzSWdQU0JtZFc1amRHbHZiaWhUTENCT0xDQklMQ0I2S1NCN0NpQWdJQ0FnSUNBZ1V5NXBjMVpsWTNSdmNqUWdQeUJWTG5ObGRDaFRMbmdzSUZNdWVTd2dVeTU2TENCVExuY3BJRG9nVlM1elpYUW9VeXdnVGl3Z1NDd2dlaWtzSUhobExuTmphWE56YjNJb1RDNWpiM0I1S0ZVcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0ZBcExtWnNiMjl5S0NrcE93b2dJQ0FnZlN3Z2RHaHBjeTVuWlhSVFkybHpjMjl5VkdWemRDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJHT3dvZ0lDQWdmU3dnZEdocGN5NXpaWFJUWTJsemMyOXlWR1Z6ZENBOUlHWjFibU4wYVc5dUtGTXBJSHNLSUNBZ0lDQWdJQ0I0WlM1elpYUlRZMmx6YzI5eVZHVnpkQ2hHSUQwZ1V5azdDaUFnSUNCOUxDQjBhR2x6TG5ObGRFOXdZWEYxWlZOdmNuUWdQU0JtZFc1amRHbHZiaWhUS1NCN0NpQWdJQ0FnSUNBZ2R5QTlJRk03Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRlJ5WVc1emNHRnlaVzUwVTI5eWRDQTlJR1oxYm1OMGFXOXVLRk1wSUhzS0lDQWdJQ0FnSUNCRklEMGdVenNLSUNBZ0lIMHNJSFJvYVhNdVoyVjBRMnhsWVhKRGIyeHZjaUE5SUdaMWJtTjBhVzl1S0ZNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1V5NWpiM0I1S0hKbExtZGxkRU5zWldGeVEyOXNiM0lvS1NrN0NpQWdJQ0I5TENCMGFHbHpMbk5sZEVOc1pXRnlRMjlzYjNJZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlM1elpYUkRiR1ZoY2tOdmJHOXlMbUZ3Y0d4NUtISmxMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdmU3dnZEdocGN5NW5aWFJEYkdWaGNrRnNjR2hoSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxMbWRsZEVOc1pXRnlRV3h3YUdFb0tUc0tJQ0FnSUgwc0lIUm9hWE11YzJWMFEyeGxZWEpCYkhCb1lTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbExuTmxkRU5zWldGeVFXeHdhR0V1WVhCd2JIa29jbVVzSUdGeVozVnRaVzUwY3lrN0NpQWdJQ0I5TENCMGFHbHpMbU5zWldGeUlEMGdablZ1WTNScGIyNG9VeXdnVGl3Z1NDa2dld29nSUNBZ0lDQWdJR3hsZENCNklEMGdNRHNLSUNBZ0lDQWdJQ0FvVXlBOVBUMGdkbTlwWkNBd0lIeDhJRk1wSUNZbUlDaDZJSHc5SURFMk16ZzBLU3dnS0U0Z1BUMDlJSFp2YVdRZ01DQjhmQ0JPS1NBbUppQW9laUI4UFNBeU5UWXBMQ0FvU0NBOVBUMGdkbTlwWkNBd0lIeDhJRWdwSUNZbUlDaDZJSHc5SURFd01qUXBMQ0JaTG1Oc1pXRnlLSG9wT3dvZ0lDQWdmU3dnZEdocGN5NWpiR1ZoY2tOdmJHOXlJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYkdWaGNpZ2hNQ3dnSVRFc0lDRXhLVHNLSUNBZ0lIMHNJSFJvYVhNdVkyeGxZWEpFWlhCMGFDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZMnhsWVhJb0lURXNJQ0V3TENBaE1TazdDaUFnSUNCOUxDQjBhR2x6TG1Oc1pXRnlVM1JsYm1OcGJDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZMnhsWVhJb0lURXNJQ0V4TENBaE1DazdDaUFnSUNCOUxDQjBhR2x6TG1ScGMzQnZjMlVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQmxMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW5kbFltZHNZMjl1ZEdWNGRHeHZjM1FpTENCRlpTd2dJVEVwTENCbExuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9JbmRsWW1kc1kyOXVkR1Y0ZEhKbGMzUnZjbVZrSWl3Z2JXVXNJQ0V4S1N3Z1F5NWthWE53YjNObEtDa3NJRlF1WkdsemNHOXpaU2dwTENCSExtUnBjM0J2YzJVb0tTd2dTeTVrYVhOd2IzTmxLQ2tzSUhWbExtUnBjM0J2YzJVb0tTd2dWR1V1WkdsemNHOXpaU2dwTENCU0xtUnBjM0J2YzJVb0tTd2dVR1V1WkdsemNHOXpaU2dwTENCUkxtUnBjM0J2YzJVb0tTd2dVUzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKelpYTnphVzl1YzNSaGNuUWlMQ0JWZENrc0lGRXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpYzJWemMybHZibVZ1WkNJc0lFOTBLU3dnVnlBbUppQW9WeTVrYVhOd2IzTmxLQ2tzSUZjZ1BTQnVkV3hzS1N3Z1RHNHVjM1J2Y0NncE93b2dJQ0FnZlRzS0lDQWdJR1oxYm1OMGFXOXVJRVZsS0ZNcElIc0tJQ0FnSUNBZ0lDQlRMbkJ5WlhabGJuUkVaV1poZFd4MEtDa3NJR052Ym5OdmJHVXViRzluS0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQkRiMjUwWlhoMElFeHZjM1F1SWlrc0lIWWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHMWxLQ2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJEYjI1MFpYaDBJRkpsYzNSdmNtVmtMaUlwTENCMklEMGdJVEU3Q2lBZ0lDQWdJQ0FnYkdWMElGTWdQU0JQWlM1aGRYUnZVbVZ6WlhRc0lFNGdQU0FrTG1WdVlXSnNaV1FzSUVnZ1BTQWtMbUYxZEc5VmNHUmhkR1VzSUhvZ1BTQWtMbTVsWldSelZYQmtZWFJsTENCeElEMGdKQzUwZVhCbE93b2dJQ0FnSUNBZ0lHVmxLQ2tzSUU5bExtRjFkRzlTWlhObGRDQTlJRk1zSUNRdVpXNWhZbXhsWkNBOUlFNHNJQ1F1WVhWMGIxVndaR0YwWlNBOUlFZ3NJQ1F1Ym1WbFpITlZjR1JoZEdVZ1BTQjZMQ0FrTG5SNWNHVWdQU0J4T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1VtVW9VeWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQk9JRDBnVXk1MFlYSm5aWFE3Q2lBZ0lDQWdJQ0FnVGk1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2dVbVVwTENCdlpTaE9LVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc5bEtGTXBJSHNLSUNBZ0lDQWdJQ0JNWlNoVEtTd2dSeTV5WlcxdmRtVW9VeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTVpTaFRLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFNGdQU0JITG1kbGRDaFRLUzV3Y205bmNtRnRjenNLSUNBZ0lDQWdJQ0JPSUNFOVBTQjJiMmxrSURBZ0ppWWdLRTR1Wm05eVJXRmphQ2htZFc1amRHbHZiaWhJS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRkJsTG5KbGJHVmhjMlZRY205bmNtRnRLRWdwT3dvZ0lDQWdJQ0FnSUgwcExDQlRMbWx6VTJoaFpHVnlUV0YwWlhKcFlXd2dKaVlnVUdVdWNtVnNaV0Z6WlZOb1lXUmxja05oWTJobEtGTXBLVHNLSUNBZ0lIMEtJQ0FnSUhSb2FYTXVjbVZ1WkdWeVFuVm1abVZ5UkdseVpXTjBJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpd2dTQ3dnZWl3Z2NTd2dZbVVwSUhzS0lDQWdJQ0FnSUNCT0lEMDlQU0J1ZFd4c0lDWW1JQ2hPSUQwZ1ptVXBPd29nSUNBZ0lDQWdJR3hsZENCQlpTQTlJSEV1YVhOTlpYTm9JQ1ltSUhFdWJXRjBjbWw0VjI5eWJHUXVaR1YwWlhKdGFXNWhiblFvS1NBOElEQXNJRWxsSUQwZ2JIVW9VeXdnVGl3Z1NDd2dlaXdnY1NrN0NpQWdJQ0FnSUNBZ2VHVXVjMlYwVFdGMFpYSnBZV3dvZWl3Z1FXVXBPd29nSUNBZ0lDQWdJR3hsZENCM1pTQTlJRWd1YVc1a1pYZ3NJRWhsSUQwZ1NDNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVPd29nSUNBZ0lDQWdJR2xtSUNoM1pTQTlQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9TR1VnUFQwOUlIWnZhV1FnTUNCOGZDQklaUzVqYjNWdWRDQTlQVDBnTUNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2QyVXVZMjkxYm5RZ1BUMDlJREFwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JzWlhRZ1JHVWdQU0F4T3dvZ0lDQWdJQ0FnSUhvdWQybHlaV1p5WVcxbElEMDlQU0FoTUNBbUppQW9kMlVnUFNCVFpTNW5aWFJYYVhKbFpuSmhiV1ZCZEhSeWFXSjFkR1VvU0Nrc0lFUmxJRDBnTWlrc0lGSXVjMlYwZFhBb2NTd2dlaXdnU1dVc0lFZ3NJSGRsS1RzS0lDQWdJQ0FnSUNCc1pYUWdlbVVzSUdwbElEMGdUV1U3Q2lBZ0lDQWdJQ0FnZDJVZ0lUMDlJRzUxYkd3Z0ppWWdLSHBsSUQwZ2MyVXVaMlYwS0hkbEtTd2dhbVVnUFNCMlpTd2dhbVV1YzJWMFNXNWtaWGdvZW1VcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnVW00Z1BTQjNaU0FoUFQwZ2JuVnNiQ0EvSUhkbExtTnZkVzUwSURvZ1NHVXVZMjkxYm5Rc0lHVnBJRDBnU0M1a2NtRjNVbUZ1WjJVdWMzUmhjblFnS2lCRVpTd2dSMlVnUFNCSUxtUnlZWGRTWVc1blpTNWpiM1Z1ZENBcUlFUmxMQ0JJZENBOUlHSmxJQ0U5UFNCdWRXeHNJRDhnWW1VdWMzUmhjblFnS2lCRVpTQTZJREFzSUdGMElEMGdZbVVnSVQwOUlHNTFiR3dnUHlCaVpTNWpiM1Z1ZENBcUlFUmxJRG9nTVNBdklEQXNJR3QwSUQwZ1RXRjBhQzV0WVhnb1pXa3NJRWgwS1N3Z1IzSWdQU0JOWVhSb0xtMXBiaWhTYml3Z1pXa2dLeUJIWlN3Z1NIUWdLeUJoZENrZ0xTQXhMQ0JIZENBOUlFMWhkR2d1YldGNEtEQXNJRWR5SUMwZ2EzUWdLeUF4S1RzS0lDQWdJQ0FnSUNCcFppQW9SM1FnSVQwOUlEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEV1YVhOTlpYTm9LU0I2TG5kcGNtVm1jbUZ0WlNBOVBUMGdJVEFnUHlBb2VHVXVjMlYwVEdsdVpWZHBaSFJvS0hvdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lDb2dRbVVvS1Nrc0lHcGxMbk5sZEUxdlpHVW9NU2twSURvZ2FtVXVjMlYwVFc5a1pTZzBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb2NTNXBjMHhwYm1VcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JhZENBOUlIb3ViR2x1WlhkcFpIUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdXblFnUFQwOUlIWnZhV1FnTUNBbUppQW9XblFnUFNBeEtTd2dlR1V1YzJWMFRHbHVaVmRwWkhSb0tGcDBJQ29nUW1Vb0tTa3NJSEV1YVhOTWFXNWxVMlZuYldWdWRITWdQeUJxWlM1elpYUk5iMlJsS0RFcElEb2djUzVwYzB4cGJtVk1iMjl3SUQ4Z2FtVXVjMlYwVFc5a1pTZ3lLU0E2SUdwbExuTmxkRTF2WkdVb015azdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J4TG1selVHOXBiblJ6SUQ4Z2FtVXVjMlYwVFc5a1pTZ3dLU0E2SUhFdWFYTlRjSEpwZEdVZ0ppWWdhbVV1YzJWMFRXOWtaU2cwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hFdWFYTkpibk4wWVc1alpXUk5aWE5vS1NCcVpTNXlaVzVrWlhKSmJuTjBZVzVqWlhNb2EzUXNJRWQwTENCeExtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCcFppQW9TQzVwYzBsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1duUWdQU0JOWVhSb0xtMXBiaWhJTG1sdWMzUmhibU5sUTI5MWJuUXNJRWd1WDIxaGVFbHVjM1JoYm1ObFEyOTFiblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYW1VdWNtVnVaR1Z5U1c1emRHRnVZMlZ6S0d0MExDQkhkQ3dnV25RcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhbVV1Y21WdVpHVnlLR3QwTENCSGRDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd2dkR2hwY3k1amIyMXdhV3hsSUQwZ1puVnVZM1JwYjI0b1V5d2dUaWtnZXdvZ0lDQWdJQ0FnSUdRZ1BTQlVMbWRsZENoVEtTd2daQzVwYm1sMEtDa3NJRzB1Y0hWemFDaGtLU3dnVXk1MGNtRjJaWEp6WlZacGMybGliR1VvWm5WdVkzUnBiMjRvU0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JJTG1selRHbG5hSFFnSmlZZ1NDNXNZWGxsY25NdWRHVnpkQ2hPTG14aGVXVnljeWtnSmlZZ0tHUXVjSFZ6YUV4cFoyaDBLRWdwTENCSUxtTmhjM1JUYUdGa2IzY2dKaVlnWkM1d2RYTm9VMmhoWkc5M0tFZ3BLVHNLSUNBZ0lDQWdJQ0I5S1N3Z1pDNXpaWFIxY0V4cFoyaDBjeWg0TG5Cb2VYTnBZMkZzYkhsRGIzSnlaV04wVEdsbmFIUnpLU3dnVXk1MGNtRjJaWEp6WlNobWRXNWpkR2x2YmloSUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjZJRDBnU0M1dFlYUmxjbWxoYkRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hvcElHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtIb3BLU0JtYjNJb2JHVjBJSEVnUFNBd095QnhJRHdnZWk1c1pXNW5kR2c3SUhFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWW1VZ1BTQjZXM0ZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUc4b1ltVXNJRk1zSUVncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZUc4b2Vpd2dVeXdnU0NrN0NpQWdJQ0FnSUNBZ2ZTa3NJRzB1Y0c5d0tDa3NJR1FnUFNCdWRXeHNPd29nSUNBZ2ZUc0tJQ0FnSUd4bGRDQllaU0E5SUc1MWJHdzdDaUFnSUNCbWRXNWpkR2x2YmlCWFpTaFRLU0I3Q2lBZ0lDQWdJQ0FnV0dVZ0ppWWdXR1VvVXlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlZkQ2dwSUhzS0lDQWdJQ0FnSUNCTWJpNXpkRzl3S0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlBkQ2dwSUhzS0lDQWdJQ0FnSUNCTWJpNXpkR0Z5ZENncE93b2dJQ0FnZlFvZ0lDQWdiR1YwSUV4dUlEMGdibVYzSUhKb093b2dJQ0FnVEc0dWMyVjBRVzVwYldGMGFXOXVURzl2Y0NoWFpTa3NJSFI1Y0dWdlppQjNhVzVrYjNjZ1BDQWlkU0lnSmlZZ1RHNHVjMlYwUTI5dWRHVjRkQ2gzYVc1a2IzY3BMQ0IwYUdsekxuTmxkRUZ1YVcxaGRHbHZia3h2YjNBZ1BTQm1kVzVqZEdsdmJpaFRLU0I3Q2lBZ0lDQWdJQ0FnV0dVZ1BTQlRMQ0JSTG5ObGRFRnVhVzFoZEdsdmJreHZiM0FvVXlrc0lGTWdQVDA5SUc1MWJHd2dQeUJNYmk1emRHOXdLQ2tnT2lCTWJpNXpkR0Z5ZENncE93b2dJQ0FnZlN3Z1VTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnpaWE56YVc5dWMzUmhjblFpTENCVmRDa3NJRkV1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYzJWemMybHZibVZ1WkNJc0lFOTBLU3dnZEdocGN5NXlaVzVrWlhJZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRTRnSVQwOUlIWnZhV1FnTUNBbUppQk9MbWx6UTJGdFpYSmhJQ0U5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5TG5KbGJtUmxjam9nWTJGdFpYSmhJR2x6SUc1dmRDQmhiaUJwYm5OMFlXNWpaU0J2WmlCVVNGSkZSUzVEWVcxbGNtRXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFlnUFQwOUlDRXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdVeTVoZFhSdlZYQmtZWFJsSUQwOVBTQWhNQ0FtSmlCVExuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDa3NJRTR1Y0dGeVpXNTBJRDA5UFNCdWRXeHNJQ1ltSUU0dWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb0tTd2dVUzVsYm1GaWJHVmtJRDA5UFNBaE1DQW1KaUJSTG1selVISmxjMlZ1ZEdsdVp5QTlQVDBnSVRBZ0ppWWdLRkV1WTJGdFpYSmhRWFYwYjFWd1pHRjBaU0E5UFQwZ0lUQWdKaVlnVVM1MWNHUmhkR1ZEWVcxbGNtRW9UaWtzSUU0Z1BTQlJMbWRsZEVOaGJXVnlZU2dwS1N3Z1V5NXBjMU5qWlc1bElEMDlQU0FoTUNBbUppQlRMbTl1UW1WbWIzSmxVbVZ1WkdWeUtIZ3NJRk1zSUU0c0lGOHBMQ0JrSUQwZ1ZDNW5aWFFvVXl3Z2JTNXNaVzVuZEdncExDQmtMbWx1YVhRb0tTd2diUzV3ZFhOb0tHUXBMQ0JvWlM1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0U0dWNISnZhbVZqZEdsdmJrMWhkSEpwZUN3Z1RpNXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXBMQ0J1WlM1elpYUkdjbTl0VUhKdmFtVmpkR2x2YmsxaGRISnBlQ2hvWlNrc0lGWWdQU0IwYUdsekxteHZZMkZzUTJ4cGNIQnBibWRGYm1GaWJHVmtMQ0JqWlNBOUlFb3VhVzVwZENoMGFHbHpMbU5zYVhCd2FXNW5VR3hoYm1WekxDQldMQ0JPS1N3Z2RTQTlJRU11WjJWMEtGTXNJR1l1YkdWdVozUm9LU3dnZFM1cGJtbDBLQ2tzSUdZdWNIVnphQ2gxS1N3Z1VXRW9VeXdnVGl3Z01Dd2dlQzV6YjNKMFQySnFaV04wY3lrc0lIVXVabWx1YVhOb0tDa3NJSGd1YzI5eWRFOWlhbVZqZEhNZ1BUMDlJQ0V3SUNZbUlIVXVjMjl5ZENoM0xDQkZLU3dnWTJVZ1BUMDlJQ0V3SUNZbUlFb3VZbVZuYVc1VGFHRmtiM2R6S0NrN0NpQWdJQ0FnSUNBZ2JHVjBJRWdnUFNCa0xuTjBZWFJsTG5Ob1lXUnZkM05CY25KaGVUc0tJQ0FnSUNBZ0lDQnBaaUFvSkM1eVpXNWtaWElvU0N3Z1V5d2dUaWtzSUdObElEMDlQU0FoTUNBbUppQktMbVZ1WkZOb1lXUnZkM01vS1N3Z2RHaHBjeTVwYm1adkxtRjFkRzlTWlhObGRDQTlQVDBnSVRBZ0ppWWdkR2hwY3k1cGJtWnZMbkpsYzJWMEtDa3NJSEpsTG5KbGJtUmxjaWgxTENCVEtTd2daQzV6WlhSMWNFeHBaMmgwY3loNExuQm9lWE5wWTJGc2JIbERiM0p5WldOMFRHbG5hSFJ6S1N3Z1RpNXBjMEZ5Y21GNVEyRnRaWEpoS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNklEMGdUaTVqWVcxbGNtRnpPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhFZ1BTQXdMQ0JpWlNBOUlIb3ViR1Z1WjNSb095QnhJRHdnWW1VN0lIRXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FXVWdQU0I2VzNGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1MyRW9kU3dnVXl3Z1FXVXNJRUZsTG5acFpYZHdiM0owS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBnWld4elpTQkxZU2gxTENCVExDQk9LVHNLSUNBZ0lDQWdJQ0JmSUNFOVBTQnVkV3hzSUNZbUlDaHFMblZ3WkdGMFpVMTFiSFJwYzJGdGNHeGxVbVZ1WkdWeVZHRnlaMlYwS0Y4cExDQnFMblZ3WkdGMFpWSmxibVJsY2xSaGNtZGxkRTFwY0cxaGNDaGZLU2tzSUZNdWFYTlRZMlZ1WlNBOVBUMGdJVEFnSmlZZ1V5NXZia0ZtZEdWeVVtVnVaR1Z5S0hnc0lGTXNJRTRwTENCNFpTNWlkV1ptWlhKekxtUmxjSFJvTG5ObGRGUmxjM1FvSVRBcExDQjRaUzVpZFdabVpYSnpMbVJsY0hSb0xuTmxkRTFoYzJzb0lUQXBMQ0I0WlM1aWRXWm1aWEp6TG1OdmJHOXlMbk5sZEUxaGMyc29JVEFwTENCNFpTNXpaWFJRYjJ4NVoyOXVUMlptYzJWMEtDRXhLU3dnVWk1eVpYTmxkRVJsWm1GMWJIUlRkR0YwWlNncExDQjVJRDBnTFRFc0lHSWdQU0J1ZFd4c0xDQnRMbkJ2Y0NncExDQnRMbXhsYm1kMGFDQStJREFnUHlCa0lEMGdiVnR0TG14bGJtZDBhQ0F0SURGZElEb2daQ0E5SUc1MWJHd3NJR1l1Y0c5d0tDa3NJR1l1YkdWdVozUm9JRDRnTUNBL0lIVWdQU0JtVzJZdWJHVnVaM1JvSUMwZ01WMGdPaUIxSUQwZ2JuVnNiRHNLSUNBZ0lIMDdDaUFnSUNCbWRXNWpkR2x2YmlCUllTaFRMQ0JPTENCSUxDQjZLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tGTXVkbWx6YVdKc1pTQTlQVDBnSVRFcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCcFppQW9VeTVzWVhsbGNuTXVkR1Z6ZENoT0xteGhlV1Z5Y3lrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGTXVhWE5IY205MWNDa2dTQ0E5SUZNdWNtVnVaR1Z5VDNKa1pYSTdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0ZNdWFYTk1UMFFwSUZNdVlYVjBiMVZ3WkdGMFpTQTlQVDBnSVRBZ0ppWWdVeTUxY0dSaGRHVW9UaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tGTXVhWE5NYVdkb2RDa2daQzV3ZFhOb1RHbG5hSFFvVXlrc0lGTXVZMkZ6ZEZOb1lXUnZkeUFtSmlCa0xuQjFjMmhUYUdGa2IzY29VeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tGTXVhWE5UY0hKcGRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFV5NW1jblZ6ZEhWdFEzVnNiR1ZrSUh4OElHNWxMbWx1ZEdWeWMyVmpkSE5UY0hKcGRHVW9VeWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjZJQ1ltSUd4bExuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhUTG0xaGRISnBlRmR2Y214a0tTNWhjSEJzZVUxaGRISnBlRFFvYUdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQlpTQTlJRlJsTG5Wd1pHRjBaU2hUS1N3Z1NXVWdQU0JUTG0xaGRHVnlhV0ZzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFbGxMblpwYzJsaWJHVWdKaVlnZFM1d2RYTm9LRk1zSUVGbExDQkpaU3dnU0N3Z2JHVXVlaXdnYm5Wc2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb0tGTXVhWE5OWlhOb0lIeDhJRk11YVhOTWFXNWxJSHg4SUZNdWFYTlFiMmx1ZEhNcElDWW1JQ2hUTG1selUydHBibTVsWkUxbGMyZ2dKaVlnVXk1emEyVnNaWFJ2Ymk1bWNtRnRaU0FoUFQwZ1QyVXVjbVZ1WkdWeUxtWnlZVzFsSUNZbUlDaFRMbk5yWld4bGRHOXVMblZ3WkdGMFpTZ3BMQ0JUTG5OclpXeGxkRzl1TG1aeVlXMWxJRDBnVDJVdWNtVnVaR1Z5TG1aeVlXMWxLU3dnSVZNdVpuSjFjM1IxYlVOMWJHeGxaQ0I4ZkNCdVpTNXBiblJsY25ObFkzUnpUMkpxWldOMEtGTXBLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZWlBbUppQnNaUzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b1V5NXRZWFJ5YVhoWGIzSnNaQ2t1WVhCd2JIbE5ZWFJ5YVhnMEtHaGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQlpTQTlJRlJsTG5Wd1pHRjBaU2hUS1N3Z1NXVWdQU0JUTG0xaGRHVnlhV0ZzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvU1dVcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZGxJRDBnUVdVdVozSnZkWEJ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1NHVWdQU0F3TENCRVpTQTlJSGRsTG14bGJtZDBhRHNnU0dVZ1BDQkVaVHNnU0dVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I2WlNBOUlIZGxXMGhsWFN3Z2FtVWdQU0JKWlZ0NlpTNXRZWFJsY21saGJFbHVaR1Y0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYW1VZ0ppWWdhbVV1ZG1semFXSnNaU0FtSmlCMUxuQjFjMmdvVXl3Z1FXVXNJR3BsTENCSUxDQnNaUzU2TENCNlpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJRWxsTG5acGMybGliR1VnSmlZZ2RTNXdkWE5vS0ZNc0lFRmxMQ0JKWlN3Z1NDd2diR1V1ZWl3Z2JuVnNiQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUdKbElEMGdVeTVqYUdsc1pISmxianNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUZsSUQwZ01Dd2dTV1VnUFNCaVpTNXNaVzVuZEdnN0lFRmxJRHdnU1dVN0lFRmxLeXNwVVdFb1ltVmJRV1ZkTENCT0xDQklMQ0I2S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFdGhLRk1zSUU0c0lFZ3NJSG9wSUhzS0lDQWdJQ0FnSUNCc1pYUWdjU0E5SUZNdWIzQmhjWFZsTENCaVpTQTlJRk11ZEhKaGJuTnRhWE56YVhabExDQkJaU0E5SUZNdWRISmhibk53WVhKbGJuUTdDaUFnSUNBZ0lDQWdaQzV6WlhSMWNFeHBaMmgwYzFacFpYY29TQ2tzSUdKbExteGxibWQwYUNBK0lEQWdKaVlnYjNVb2NTd2dUaXdnU0Nrc0lIb2dKaVlnZUdVdWRtbGxkM0J2Y25Rb1FTNWpiM0I1S0hvcEtTd2djUzVzWlc1bmRHZ2dQaUF3SUNZbUlHdHlLSEVzSUU0c0lFZ3BMQ0JpWlM1c1pXNW5kR2dnUGlBd0lDWW1JR3R5S0dKbExDQk9MQ0JJS1N3Z1FXVXViR1Z1WjNSb0lENGdNQ0FtSmlCcmNpaEJaU3dnVGl3Z1NDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ2ZFNoVExDQk9MQ0JJS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRmNnUFQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVGbElEMGdieUE5UFQwZ0lUQWdKaVlnWjJVdWFYTlhaV0pIVERJZ1BUMDlJQ0V3SUQ4Z1dITWdPaUJCZERzS0lDQWdJQ0FnSUNBZ0lDQWdWeUE5SUc1bGR5QkJaU2d4TURJMExDQXhNREkwTENCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpXNWxjbUYwWlUxcGNHMWhjSE02SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nZEdVdVkyOXVkbVZ5ZENocmJpa2dJVDA5SUc1MWJHd2dQeUJyYmlBNklISnVMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV2x1Um1sc2RHVnlPaUJWYVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaFowWnBiSFJsY2pvZ2NuUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNjbUZ3VXpvZ2RuUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNjbUZ3VkRvZ2RuUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVTZJSGxsTG1oaGN5Z2lWMFZDUjB4ZmJYVnNkR2x6WVcxd2JHVmtYM0psYm1SbGNsOTBiMTkwWlhoMGRYSmxJaWtLSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCNklEMGdlQzVuWlhSU1pXNWtaWEpVWVhKblpYUW9LVHNLSUNBZ0lDQWdJQ0I0TG5ObGRGSmxibVJsY2xSaGNtZGxkQ2hYS1N3Z2VDNWpiR1ZoY2lncE93b2dJQ0FnSUNBZ0lHeGxkQ0J4SUQwZ2VDNTBiMjVsVFdGd2NHbHVaenNLSUNBZ0lDQWdJQ0I0TG5SdmJtVk5ZWEJ3YVc1bklEMGdYMjRzSUd0eUtGTXNJRTRzSUVncExDQjRMblJ2Ym1WTllYQndhVzVuSUQwZ2NTd2dhaTUxY0dSaGRHVk5kV3gwYVhOaGJYQnNaVkpsYm1SbGNsUmhjbWRsZENoWEtTd2dhaTUxY0dSaGRHVlNaVzVrWlhKVVlYSm5aWFJOYVhCdFlYQW9WeWtzSUhndWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0hvcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhM0lvVXl3Z1Rpd2dTQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjZJRDBnVGk1cGMxTmpaVzVsSUQwOVBTQWhNQ0EvSUU0dWIzWmxjbkpwWkdWTllYUmxjbWxoYkNBNklHNTFiR3c3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J4SUQwZ01Dd2dZbVVnUFNCVExteGxibWQwYURzZ2NTQThJR0psT3lCeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRV1VnUFNCVFczRmRMQ0JKWlNBOUlFRmxMbTlpYW1WamRDd2dkMlVnUFNCQlpTNW5aVzl0WlhSeWVTd2dTR1VnUFNCNklEMDlQU0J1ZFd4c0lEOGdRV1V1YldGMFpYSnBZV3dnT2lCNkxDQkVaU0E5SUVGbExtZHliM1Z3T3dvZ0lDQWdJQ0FnSUNBZ0lDQkpaUzVzWVhsbGNuTXVkR1Z6ZENoSUxteGhlV1Z5Y3lrZ0ppWWdZWFVvU1dVc0lFNHNJRWdzSUhkbExDQklaU3dnUkdVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR0YxS0ZNc0lFNHNJRWdzSUhvc0lIRXNJR0psS1NCN0NpQWdJQ0FnSUNBZ1V5NXZia0psWm05eVpWSmxibVJsY2loNExDQk9MQ0JJTENCNkxDQnhMQ0JpWlNrc0lGTXViVzlrWld4V2FXVjNUV0YwY21sNExtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb1NDNXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXNJRk11YldGMGNtbDRWMjl5YkdRcExDQlRMbTV2Y20xaGJFMWhkSEpwZUM1blpYUk9iM0p0WVd4TllYUnlhWGdvVXk1dGIyUmxiRlpwWlhkTllYUnlhWGdwTENCeExtOXVRbVZtYjNKbFVtVnVaR1Z5S0hnc0lFNHNJRWdzSUhvc0lGTXNJR0psS1N3Z2NTNTBjbUZ1YzNCaGNtVnVkQ0E5UFQwZ0lUQWdKaVlnY1M1emFXUmxJRDA5UFNCRGFTQS9JQ2h4TG5OcFpHVWdQU0JwZEN3Z2NTNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjRMbkpsYm1SbGNrSjFabVpsY2tScGNtVmpkQ2hJTENCT0xDQjZMQ0J4TENCVExDQmlaU2tzSUhFdWMybGtaU0E5SUVGcExDQnhMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSGd1Y21WdVpHVnlRblZtWm1WeVJHbHlaV04wS0Vnc0lFNHNJSG9zSUhFc0lGTXNJR0psS1N3Z2NTNXphV1JsSUQwZ1Eya3BJRG9nZUM1eVpXNWtaWEpDZFdabVpYSkVhWEpsWTNRb1NDd2dUaXdnZWl3Z2NTd2dVeXdnWW1VcExDQlRMbTl1UVdaMFpYSlNaVzVrWlhJb2VDd2dUaXdnU0N3Z2Vpd2djU3dnWW1VcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlRzhvVXl3Z1Rpd2dTQ2tnZXdvZ0lDQWdJQ0FnSUU0dWFYTlRZMlZ1WlNBaFBUMGdJVEFnSmlZZ0tFNGdQU0JtWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJSG9nUFNCSExtZGxkQ2hUS1N3Z2NTQTlJR1F1YzNSaGRHVXViR2xuYUhSekxDQmlaU0E5SUdRdWMzUmhkR1V1YzJoaFpHOTNjMEZ5Y21GNUxDQkJaU0E5SUhFdWMzUmhkR1V1ZG1WeWMybHZiaXdnU1dVZ1BTQlFaUzVuWlhSUVlYSmhiV1YwWlhKektGTXNJSEV1YzNSaGRHVXNJR0psTENCT0xDQklLU3dnZDJVZ1BTQlFaUzVuWlhSUWNtOW5jbUZ0UTJGamFHVkxaWGtvU1dVcExDQklaU0E5SUhvdWNISnZaM0poYlhNN0NpQWdJQ0FnSUNBZ2VpNWxiblpwY205dWJXVnVkQ0E5SUZNdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0EvSUU0dVpXNTJhWEp2Ym0xbGJuUWdPaUJ1ZFd4c0xDQjZMbVp2WnlBOUlFNHVabTluTENCNkxtVnVkazFoY0NBOUlDaFRMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z1B5QjFaU0E2SUVzcExtZGxkQ2hUTG1WdWRrMWhjQ0I4ZkNCNkxtVnVkbWx5YjI1dFpXNTBLU3dnU0dVZ1BUMDlJSFp2YVdRZ01DQW1KaUFvVXk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z1VtVXBMQ0JJWlNBOUlHNWxkeUJOWVhBc0lIb3VjSEp2WjNKaGJYTWdQU0JJWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJRVJsSUQwZ1NHVXVaMlYwS0hkbEtUc0tJQ0FnSUNBZ0lDQnBaaUFvUkdVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9laTVqZFhKeVpXNTBVSEp2WjNKaGJTQTlQVDBnUkdVZ0ppWWdlaTVzYVdkb2RITlRkR0YwWlZabGNuTnBiMjRnUFQwOUlFRmxLU0J5WlhSMWNtNGdaV3dvVXl3Z1NXVXBMQ0JFWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnU1dVdWRXNXBabTl5YlhNZ1BTQlFaUzVuWlhSVmJtbG1iM0p0Y3loVEtTd2dVeTV2YmtKMWFXeGtLRWdzSUVsbExDQjRLU3dnVXk1dmJrSmxabTl5WlVOdmJYQnBiR1VvU1dVc0lIZ3BMQ0JFWlNBOUlGQmxMbUZqY1hWcGNtVlFjbTluY21GdEtFbGxMQ0IzWlNrc0lFaGxMbk5sZENoM1pTd2dSR1VwTENCNkxuVnVhV1p2Y20xeklEMGdTV1V1ZFc1cFptOXliWE03Q2lBZ0lDQWdJQ0FnYkdWMElIcGxJRDBnZWk1MWJtbG1iM0p0Y3pzS0lDQWdJQ0FnSUNBb0lWTXVhWE5UYUdGa1pYSk5ZWFJsY21saGJDQW1KaUFoVXk1cGMxSmhkMU5vWVdSbGNrMWhkR1Z5YVdGc0lIeDhJRk11WTJ4cGNIQnBibWNnUFQwOUlDRXdLU0FtSmlBb2VtVXVZMnhwY0hCcGJtZFFiR0Z1WlhNZ1BTQktMblZ1YVdadmNtMHBMQ0JsYkNoVExDQkpaU2tzSUhvdWJtVmxaSE5NYVdkb2RITWdQU0JvZFNoVEtTd2dlaTVzYVdkb2RITlRkR0YwWlZabGNuTnBiMjRnUFNCQlpTd2dlaTV1WldWa2MweHBaMmgwY3lBbUppQW9lbVV1WVcxaWFXVnVkRXhwWjJoMFEyOXNiM0l1ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbUZ0WW1sbGJuUXNJSHBsTG14cFoyaDBVSEp2WW1VdWRtRnNkV1VnUFNCeExuTjBZWFJsTG5CeWIySmxMQ0I2WlM1a2FYSmxZM1JwYjI1aGJFeHBaMmgwY3k1MllXeDFaU0E5SUhFdWMzUmhkR1V1WkdseVpXTjBhVzl1WVd3c0lIcGxMbVJwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNkekxuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1a2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZHl3Z2VtVXVjM0J2ZEV4cFoyaDBjeTUyWVd4MVpTQTlJSEV1YzNSaGRHVXVjM0J2ZEN3Z2VtVXVjM0J2ZEV4cFoyaDBVMmhoWkc5M2N5NTJZV3gxWlNBOUlIRXVjM1JoZEdVdWMzQnZkRk5vWVdSdmR5d2dlbVV1Y21WamRFRnlaV0ZNYVdkb2RITXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExuSmxZM1JCY21WaExDQjZaUzVzZEdOZk1TNTJZV3gxWlNBOUlIRXVjM1JoZEdVdWNtVmpkRUZ5WldGTVZFTXhMQ0I2WlM1c2RHTmZNaTUyWVd4MVpTQTlJSEV1YzNSaGRHVXVjbVZqZEVGeVpXRk1WRU15TENCNlpTNXdiMmx1ZEV4cFoyaDBjeTUyWVd4MVpTQTlJSEV1YzNSaGRHVXVjRzlwYm5Rc0lIcGxMbkJ2YVc1MFRHbG5hSFJUYUdGa2IzZHpMblpoYkhWbElEMGdjUzV6ZEdGMFpTNXdiMmx1ZEZOb1lXUnZkeXdnZW1VdWFHVnRhWE53YUdWeVpVeHBaMmgwY3k1MllXeDFaU0E5SUhFdWMzUmhkR1V1YUdWdGFTd2dlbVV1WkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhBdWRtRnNkV1VnUFNCeExuTjBZWFJsTG1ScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGd0xDQjZaUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoZEhKcGVDNTJZV3gxWlNBOUlIRXVjM1JoZEdVdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYUnlhWGdzSUhwbExuTndiM1JUYUdGa2IzZE5ZWEF1ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbk53YjNSVGFHRmtiM2ROWVhBc0lIcGxMbk53YjNSVGFHRmtiM2ROWVhSeWFYZ3VkbUZzZFdVZ1BTQnhMbk4wWVhSbExuTndiM1JUYUdGa2IzZE5ZWFJ5YVhnc0lIcGxMbkJ2YVc1MFUyaGhaRzkzVFdGd0xuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1d2IybHVkRk5vWVdSdmQwMWhjQ3dnZW1VdWNHOXBiblJUYUdGa2IzZE5ZWFJ5YVhndWRtRnNkV1VnUFNCeExuTjBZWFJsTG5CdmFXNTBVMmhoWkc5M1RXRjBjbWw0S1RzS0lDQWdJQ0FnSUNCc1pYUWdhbVVnUFNCRVpTNW5aWFJWYm1sbWIzSnRjeWdwTENCU2JpQTlJR0p1TG5ObGNWZHBkR2hXWVd4MVpTaHFaUzV6WlhFc0lIcGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdlaTVqZFhKeVpXNTBVSEp2WjNKaGJTQTlJRVJsTENCNkxuVnVhV1p2Y20xelRHbHpkQ0E5SUZKdUxDQkVaVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdWc0tGTXNJRTRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdTQ0E5SUVjdVoyVjBLRk1wT3dvZ0lDQWdJQ0FnSUVndWIzVjBjSFYwUlc1amIyUnBibWNnUFNCT0xtOTFkSEIxZEVWdVkyOWthVzVuTENCSUxtbHVjM1JoYm1OcGJtY2dQU0JPTG1sdWMzUmhibU5wYm1jc0lFZ3VjMnRwYm01cGJtY2dQU0JPTG5OcmFXNXVhVzVuTENCSUxtMXZjbkJvVkdGeVoyVjBjeUE5SUU0dWJXOXljR2hVWVhKblpYUnpMQ0JJTG0xdmNuQm9UbTl5YldGc2N5QTlJRTR1Ylc5eWNHaE9iM0p0WVd4ekxDQklMbTF2Y25Cb1ZHRnlaMlYwYzBOdmRXNTBJRDBnVGk1dGIzSndhRlJoY21kbGRITkRiM1Z1ZEN3Z1NDNXVkVzFEYkdsd2NHbHVaMUJzWVc1bGN5QTlJRTR1Ym5WdFEyeHBjSEJwYm1kUWJHRnVaWE1zSUVndWJuVnRTVzUwWlhKelpXTjBhVzl1SUQwZ1RpNXVkVzFEYkdsd1NXNTBaWEp6WldOMGFXOXVMQ0JJTG5abGNuUmxlRUZzY0doaGN5QTlJRTR1ZG1WeWRHVjRRV3h3YUdGekxDQklMblpsY25SbGVGUmhibWRsYm5SeklEMGdUaTUyWlhKMFpYaFVZVzVuWlc1MGN5d2dTQzUwYjI1bFRXRndjR2x1WnlBOUlFNHVkRzl1WlUxaGNIQnBibWM3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCc2RTaFRMQ0JPTENCSUxDQjZMQ0J4S1NCN0NpQWdJQ0FnSUNBZ1RpNXBjMU5qWlc1bElDRTlQU0FoTUNBbUppQW9UaUE5SUdabEtTd2dhaTV5WlhObGRGUmxlSFIxY21WVmJtbDBjeWdwT3dvZ0lDQWdJQ0FnSUd4bGRDQmlaU0E5SUU0dVptOW5MQ0JCWlNBOUlIb3VhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNBL0lFNHVaVzUyYVhKdmJtMWxiblFnT2lCdWRXeHNMQ0JKWlNBOUlGOGdQVDA5SUc1MWJHd2dQeUI0TG05MWRIQjFkRVZ1WTI5a2FXNW5JRG9nWHk1MFpYaDBkWEpsTG1WdVkyOWthVzVuTENCM1pTQTlJQ2g2TG1selRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2dQeUIxWlNBNklFc3BMbWRsZENoNkxtVnVkazFoY0NCOGZDQkJaU2tzSUVobElEMGdlaTUyWlhKMFpYaERiMnh2Y25NZ1BUMDlJQ0V3SUNZbUlDRWhTQzVoZEhSeWFXSjFkR1Z6TG1OdmJHOXlJQ1ltSUVndVlYUjBjbWxpZFhSbGN5NWpiMnh2Y2k1cGRHVnRVMmw2WlNBOVBUMGdOQ3dnUkdVZ1BTQWhJWG91Ym05eWJXRnNUV0Z3SUNZbUlDRWhTQzVoZEhSeWFXSjFkR1Z6TG5SaGJtZGxiblFzSUhwbElEMGdJU0ZJTG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaXdnYW1VZ1BTQWhJVWd1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbTV2Y20xaGJDd2dVbTRnUFNCSUxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2YmlBL0lFZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxteGxibWQwYUNBNklEQXNJR1ZwSUQwZ2VpNTBiMjVsVFdGd2NHVmtJRDhnZUM1MGIyNWxUV0Z3Y0dsdVp5QTZJRjl1TENCSFpTQTlJRWN1WjJWMEtIb3BMQ0JJZENBOUlHUXVjM1JoZEdVdWJHbG5hSFJ6T3dvZ0lDQWdJQ0FnSUdsbUlDaGpaU0E5UFQwZ0lUQWdKaVlnS0ZZZ1BUMDlJQ0V3SUh4OElGTWdJVDA5SUdJcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlFkQ0E5SUZNZ1BUMDlJR0lnSmlZZ2VpNXBaQ0E5UFQwZ2VUc0tJQ0FnSUNBZ0lDQWdJQ0FnU2k1elpYUlRkR0YwWlNoNkxDQlRMQ0JRZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JoZENBOUlDRXhPd29nSUNBZ0lDQWdJSG91ZG1WeWMybHZiaUE5UFQwZ1IyVXVYMTkyWlhKemFXOXVJRDhnS0VkbExtNWxaV1J6VEdsbmFIUnpJQ1ltSUVkbExteHBaMmgwYzFOMFlYUmxWbVZ5YzJsdmJpQWhQVDBnU0hRdWMzUmhkR1V1ZG1WeWMybHZiaUI4ZkNCSFpTNXZkWFJ3ZFhSRmJtTnZaR2x1WnlBaFBUMGdTV1VnZkh3Z2NTNXBjMGx1YzNSaGJtTmxaRTFsYzJnZ0ppWWdSMlV1YVc1emRHRnVZMmx1WnlBOVBUMGdJVEVnZkh3Z0lYRXVhWE5KYm5OMFlXNWpaV1JOWlhOb0lDWW1JRWRsTG1sdWMzUmhibU5wYm1jZ1BUMDlJQ0V3SUh4OElIRXVhWE5UYTJsdWJtVmtUV1Z6YUNBbUppQkhaUzV6YTJsdWJtbHVaeUE5UFQwZ0lURWdmSHdnSVhFdWFYTlRhMmx1Ym1Wa1RXVnphQ0FtSmlCSFpTNXphMmx1Ym1sdVp5QTlQVDBnSVRBZ2ZId2dSMlV1Wlc1MlRXRndJQ0U5UFNCM1pTQjhmQ0I2TG1adlp5QW1KaUJIWlM1bWIyY2dJVDA5SUdKbElIeDhJRWRsTG01MWJVTnNhWEJ3YVc1blVHeGhibVZ6SUNFOVBTQjJiMmxrSURBZ0ppWWdLRWRsTG01MWJVTnNhWEJ3YVc1blVHeGhibVZ6SUNFOVBTQktMbTUxYlZCc1lXNWxjeUI4ZkNCSFpTNXVkVzFKYm5SbGNuTmxZM1JwYjI0Z0lUMDlJRW91Ym5WdFNXNTBaWEp6WldOMGFXOXVLU0I4ZkNCSFpTNTJaWEowWlhoQmJIQm9ZWE1nSVQwOUlFaGxJSHg4SUVkbExuWmxjblJsZUZSaGJtZGxiblJ6SUNFOVBTQkVaU0I4ZkNCSFpTNXRiM0p3YUZSaGNtZGxkSE1nSVQwOUlIcGxJSHg4SUVkbExtMXZjbkJvVG05eWJXRnNjeUFoUFQwZ2FtVWdmSHdnUjJVdWRHOXVaVTFoY0hCcGJtY2dJVDA5SUdWcElIeDhJR2RsTG1selYyVmlSMHd5SUQwOVBTQWhNQ0FtSmlCSFpTNXRiM0p3YUZSaGNtZGxkSE5EYjNWdWRDQWhQVDBnVW00cElDWW1JQ2hoZENBOUlDRXdLU0E2SUNoaGRDQTlJQ0V3TENCSFpTNWZYM1psY25OcGIyNGdQU0I2TG5abGNuTnBiMjRwT3dvZ0lDQWdJQ0FnSUd4bGRDQnJkQ0E5SUVkbExtTjFjbkpsYm5SUWNtOW5jbUZ0T3dvZ0lDQWdJQ0FnSUdGMElEMDlQU0FoTUNBbUppQW9hM1FnUFNCNGJ5aDZMQ0JPTENCeEtTazdDaUFnSUNBZ0lDQWdiR1YwSUVkeUlEMGdJVEVzSUVkMElEMGdJVEVzSUZwMElEMGdJVEVzSUhoMElEMGdhM1F1WjJWMFZXNXBabTl5YlhNb0tTd2dXR2tnUFNCSFpTNTFibWxtYjNKdGN6c0tJQ0FnSUNBZ0lDQnBaaUFvZUdVdWRYTmxVSEp2WjNKaGJTaHJkQzV3Y205bmNtRnRLU0FtSmlBb1IzSWdQU0FoTUN3Z1IzUWdQU0FoTUN3Z1duUWdQU0FoTUNrc0lIb3VhV1FnSVQwOUlIa2dKaVlnS0hrZ1BTQjZMbWxrTENCSGRDQTlJQ0V3S1N3Z1IzSWdmSHdnWWlBaFBUMGdVeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZUhRdWMyVjBWbUZzZFdVb1dTd2dJbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ2lMQ0JUTG5CeWIycGxZM1JwYjI1TllYUnlhWGdwTENCblpTNXNiMmRoY21sMGFHMXBZMFJsY0hSb1FuVm1abVZ5SUNZbUlIaDBMbk5sZEZaaGJIVmxLRmtzSUNKc2IyZEVaWEIwYUVKMVprWkRJaXdnTWlBdklDaE5ZWFJvTG14dlp5aFRMbVpoY2lBcklERXBJQzhnVFdGMGFDNU1UaklwS1N3Z1lpQWhQVDBnVXlBbUppQW9ZaUE5SUZNc0lFZDBJRDBnSVRBc0lGcDBJRDBnSVRBcExDQjZMbWx6VTJoaFpHVnlUV0YwWlhKcFlXd2dmSHdnZWk1cGMwMWxjMmhRYUc5dVowMWhkR1Z5YVdGc0lIeDhJSG91YVhOTlpYTm9WRzl2YmsxaGRHVnlhV0ZzSUh4OElIb3VhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNCOGZDQjZMbVZ1ZGsxaGNDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZCMElEMGdlSFF1YldGd0xtTmhiV1Z5WVZCdmMybDBhVzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVUhRZ0lUMDlJSFp2YVdRZ01DQW1KaUJRZEM1elpYUldZV3gxWlNoWkxDQnNaUzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b1V5NXRZWFJ5YVhoWGIzSnNaQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNoNkxtbHpUV1Z6YUZCb2IyNW5UV0YwWlhKcFlXd2dmSHdnZWk1cGMwMWxjMmhVYjI5dVRXRjBaWEpwWVd3Z2ZId2dlaTVwYzAxbGMyaE1ZVzFpWlhKMFRXRjBaWEpwWVd3Z2ZId2dlaTVwYzAxbGMyaENZWE5wWTAxaGRHVnlhV0ZzSUh4OElIb3VhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNCOGZDQjZMbWx6VTJoaFpHVnlUV0YwWlhKcFlXd3BJQ1ltSUhoMExuTmxkRlpoYkhWbEtGa3NJQ0pwYzA5eWRHaHZaM0poY0docFl5SXNJRk11YVhOUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FZ1BUMDlJQ0V3S1N3Z0tIb3VhWE5OWlhOb1VHaHZibWROWVhSbGNtbGhiQ0I4ZkNCNkxtbHpUV1Z6YUZSdmIyNU5ZWFJsY21saGJDQjhmQ0I2TG1selRXVnphRXhoYldKbGNuUk5ZWFJsY21saGJDQjhmQ0I2TG1selRXVnphRUpoYzJsalRXRjBaWEpwWVd3Z2ZId2dlaTVwYzAxbGMyaFRkR0Z1WkdGeVpFMWhkR1Z5YVdGc0lIeDhJSG91YVhOVGFHRmtaWEpOWVhSbGNtbGhiQ0I4ZkNCNkxtbHpVMmhoWkc5M1RXRjBaWEpwWVd3Z2ZId2djUzVwYzFOcmFXNXVaV1JOWlhOb0tTQW1KaUI0ZEM1elpYUldZV3gxWlNoWkxDQWlkbWxsZDAxaGRISnBlQ0lzSUZNdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hFdWFYTlRhMmx1Ym1Wa1RXVnphQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjRkQzV6WlhSUGNIUnBiMjVoYkNoWkxDQnhMQ0FpWW1sdVpFMWhkSEpwZUNJcExDQjRkQzV6WlhSUGNIUnBiMjVoYkNoWkxDQnhMQ0FpWW1sdVpFMWhkSEpwZUVsdWRtVnljMlVpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZCMElEMGdjUzV6YTJWc1pYUnZianNLSUNBZ0lDQWdJQ0FnSUNBZ1VIUWdKaVlnS0dkbExtWnNiMkYwVm1WeWRHVjRWR1Y0ZEhWeVpYTWdQeUFvVUhRdVltOXVaVlJsZUhSMWNtVWdQVDA5SUc1MWJHd2dKaVlnVUhRdVkyOXRjSFYwWlVKdmJtVlVaWGgwZFhKbEtDa3NJSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSmliMjVsVkdWNGRIVnlaU0lzSUZCMExtSnZibVZVWlhoMGRYSmxMQ0JxS1N3Z2VIUXVjMlYwVm1Gc2RXVW9XU3dnSW1KdmJtVlVaWGgwZFhKbFUybDZaU0lzSUZCMExtSnZibVZVWlhoMGRYSmxVMmw2WlNrcElEb2dlSFF1YzJWMFQzQjBhVzl1WVd3b1dTd2dVSFFzSUNKaWIyNWxUV0YwY21salpYTWlLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoSVVnZ0ppWWdLRWd1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVJQ0U5UFNCMmIybGtJREFnZkh3Z1NDNXRiM0p3YUVGMGRISnBZblYwWlhNdWJtOXliV0ZzSUNFOVBTQjJiMmxrSURBcElDWW1JRm91ZFhCa1lYUmxLSEVzSUVnc0lIb3NJR3QwS1N3Z0tFZDBJSHg4SUVkbExuSmxZMlZwZG1WVGFHRmtiM2NnSVQwOUlIRXVjbVZqWldsMlpWTm9ZV1J2ZHlrZ0ppWWdLRWRsTG5KbFkyVnBkbVZUYUdGa2IzY2dQU0J4TG5KbFkyVnBkbVZUYUdGa2IzY3NJSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSnlaV05sYVhabFUyaGhaRzkzSWl3Z2NTNXlaV05sYVhabFUyaGhaRzkzS1Nrc0lFZDBJQ1ltSUNoNGRDNXpaWFJXWVd4MVpTaFpMQ0FpZEc5dVpVMWhjSEJwYm1kRmVIQnZjM1Z5WlNJc0lIZ3VkRzl1WlUxaGNIQnBibWRGZUhCdmMzVnlaU2tzSUVkbExtNWxaV1J6VEdsbmFIUnpJQ1ltSUdOMUtGaHBMQ0JhZENrc0lHSmxJQ1ltSUhvdVptOW5JQ1ltSUZsbExuSmxabkpsYzJoR2IyZFZibWxtYjNKdGN5aFlhU3dnWW1VcExDQlpaUzV5WldaeVpYTm9UV0YwWlhKcFlXeFZibWxtYjNKdGN5aFlhU3dnZWl3Z1VDd2dRaXdnVnlrc0lHSnVMblZ3Ykc5aFpDaFpMQ0JIWlM1MWJtbG1iM0p0YzB4cGMzUXNJRmhwTENCcUtTa3NJSG91YVhOVGFHRmtaWEpOWVhSbGNtbGhiQ0FtSmlCNkxuVnVhV1p2Y20xelRtVmxaRlZ3WkdGMFpTQTlQVDBnSVRBZ0ppWWdLR0p1TG5Wd2JHOWhaQ2haTENCSFpTNTFibWxtYjNKdGMweHBjM1FzSUZocExDQnFLU3dnZWk1MWJtbG1iM0p0YzA1bFpXUlZjR1JoZEdVZ1BTQWhNU2tzSUhvdWFYTlRjSEpwZEdWTllYUmxjbWxoYkNBbUppQjRkQzV6WlhSV1lXeDFaU2haTENBaVkyVnVkR1Z5SWl3Z2NTNWpaVzUwWlhJcExDQjRkQzV6WlhSV1lXeDFaU2haTENBaWJXOWtaV3hXYVdWM1RXRjBjbWw0SWl3Z2NTNXRiMlJsYkZacFpYZE5ZWFJ5YVhncExDQjRkQzV6WlhSV1lXeDFaU2haTENBaWJtOXliV0ZzVFdGMGNtbDRJaXdnY1M1dWIzSnRZV3hOWVhSeWFYZ3BMQ0I0ZEM1elpYUldZV3gxWlNoWkxDQWliVzlrWld4TllYUnlhWGdpTENCeExtMWhkSEpwZUZkdmNteGtLU3dnYTNRN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmpkU2hUTENCT0tTQjdDaUFnSUNBZ0lDQWdVeTVoYldKcFpXNTBUR2xuYUhSRGIyeHZjaTV1WldWa2MxVndaR0YwWlNBOUlFNHNJRk11YkdsbmFIUlFjbTlpWlM1dVpXVmtjMVZ3WkdGMFpTQTlJRTRzSUZNdVpHbHlaV04wYVc5dVlXeE1hV2RvZEhNdWJtVmxaSE5WY0dSaGRHVWdQU0JPTENCVExtUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2R6TG01bFpXUnpWWEJrWVhSbElEMGdUaXdnVXk1d2IybHVkRXhwWjJoMGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUU0c0lGTXVjRzlwYm5STWFXZG9kRk5vWVdSdmQzTXVibVZsWkhOVmNHUmhkR1VnUFNCT0xDQlRMbk53YjNSTWFXZG9kSE11Ym1WbFpITlZjR1JoZEdVZ1BTQk9MQ0JUTG5Od2IzUk1hV2RvZEZOb1lXUnZkM011Ym1WbFpITlZjR1JoZEdVZ1BTQk9MQ0JUTG5KbFkzUkJjbVZoVEdsbmFIUnpMbTVsWldSelZYQmtZWFJsSUQwZ1Rpd2dVeTVvWlcxcGMzQm9aWEpsVEdsbmFIUnpMbTVsWldSelZYQmtZWFJsSUQwZ1Rqc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR2gxS0ZNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1V5NXBjMDFsYzJoTVlXMWlaWEowVFdGMFpYSnBZV3dnZkh3Z1V5NXBjMDFsYzJoVWIyOXVUV0YwWlhKcFlXd2dmSHdnVXk1cGMwMWxjMmhRYUc5dVowMWhkR1Z5YVdGc0lIeDhJRk11YVhOTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJDQjhmQ0JUTG1selUyaGhaRzkzVFdGMFpYSnBZV3dnZkh3Z1V5NXBjMU5vWVdSbGNrMWhkR1Z5YVdGc0lDWW1JRk11YkdsbmFIUnpJRDA5UFNBaE1Ec0tJQ0FnSUgwS0lDQWdJSFJvYVhNdVoyVjBRV04wYVhabFEzVmlaVVpoWTJVZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaenNLSUNBZ0lIMHNJSFJvYVhNdVoyVjBRV04wYVhabFRXbHdiV0Z3VEdWMlpXd2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0RzS0lDQWdJSDBzSUhSb2FYTXVaMlYwVW1WdVpHVnlWR0Z5WjJWMElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRjg3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRkpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVZ6SUQwZ1puVnVZM1JwYjI0b1V5d2dUaXdnU0NrZ2V3b2dJQ0FnSUNBZ0lFY3VaMlYwS0ZNdWRHVjRkSFZ5WlNrdVgxOTNaV0puYkZSbGVIUjFjbVVnUFNCT0xDQkhMbWRsZENoVExtUmxjSFJvVkdWNGRIVnlaU2t1WDE5M1pXSm5iRlJsZUhSMWNtVWdQU0JJT3dvZ0lDQWdJQ0FnSUd4bGRDQjZJRDBnUnk1blpYUW9VeWs3Q2lBZ0lDQWdJQ0FnZWk1ZlgyaGhjMFY0ZEdWeWJtRnNWR1Y0ZEhWeVpYTWdQU0FoTUN3Z2VpNWZYMmhoYzBWNGRHVnlibUZzVkdWNGRIVnlaWE1nSmlZZ0tIb3VYMTloZFhSdlFXeHNiMk5oZEdWRVpYQjBhRUoxWm1abGNpQTlJRWdnUFQwOUlIWnZhV1FnTUN3Z2VpNWZYMkYxZEc5QmJHeHZZMkYwWlVSbGNIUm9RblZtWm1WeUlIeDhJRk11ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUNZbUlDaGpiMjV6YjJ4bExuZGhjbTRvSW5KbGJtUmxjaTEwYnkxMFpYaDBkWEpsSUdWNGRHVnVjMmx2YmlCM1lYTWdaR2x6WVdKc1pXUWdZbVZqWVhWelpTQmhiaUJsZUhSbGNtNWhiQ0IwWlhoMGRYSmxJSGRoY3lCd2NtOTJhV1JsWkNJcExDQlRMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0E5SUNFeExDQlRMblZ6WlZKbGJtUmxjbUoxWm1abGNpQTlJQ0V3S1NrN0NpQWdJQ0I5TENCMGFHbHpMbk5sZEZKbGJtUmxjbFJoY21kbGRFWnlZVzFsWW5WbVptVnlJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpa2dld29nSUNBZ0lDQWdJR3hsZENCSUlEMGdSeTVuWlhRb1V5azdDaUFnSUNBZ0lDQWdTQzVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElnUFNCT0xDQklMbDlmZFhObFJHVm1ZWFZzZEVaeVlXMWxZblZtWm1WeUlEMGdUaUE5UFQwZ2RtOXBaQ0F3T3dvZ0lDQWdmU3dnZEdocGN5NXpaWFJTWlc1a1pYSlVZWEpuWlhRZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPSUQwZ01Dd2dTQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQmZJRDBnVXl3Z1p5QTlJRTRzSUhBZ1BTQklPd29nSUNBZ0lDQWdJR3hsZENCNklEMGdJVEE3Q2lBZ0lDQWdJQ0FnYVdZZ0tGTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGRsSUQwZ1J5NW5aWFFvVXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSGRsTGw5ZmRYTmxSR1ZtWVhWc2RFWnlZVzFsWW5WbVptVnlJQ0U5UFNCMmIybGtJREFnUHlBb2VHVXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNVFl3TENCdWRXeHNLU3dnZWlBOUlDRXhLU0E2SUhkbExsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNpQTlQVDBnZG05cFpDQXdJRDhnYWk1elpYUjFjRkpsYm1SbGNsUmhjbWRsZENoVEtTQTZJSGRsTGw5ZmFHRnpSWGgwWlhKdVlXeFVaWGgwZFhKbGN5QW1KaUJxTG5KbFltbHVaRlJsZUhSMWNtVnpLRk1zSUVjdVoyVjBLRk11ZEdWNGRIVnlaU2t1WDE5M1pXSm5iRlJsZUhSMWNtVXNJRWN1WjJWMEtGTXVaR1Z3ZEdoVVpYaDBkWEpsS1M1ZlgzZGxZbWRzVkdWNGRIVnlaU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnhJRDBnYm5Wc2JDd2dZbVVnUFNBaE1Td2dRV1VnUFNBaE1Uc0tJQ0FnSUNBZ0lDQnBaaUFvVXlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2QyVWdQU0JUTG5SbGVIUjFjbVU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDaDNaUzVwYzBSaGRHRlVaWGgwZFhKbE0wUWdmSHdnZDJVdWFYTkVZWFJoVkdWNGRIVnlaVEpFUVhKeVlYa3BJQ1ltSUNoQlpTQTlJQ0V3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVobElEMGdSeTVuWlhRb1V5a3VYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlPd29nSUNBZ0lDQWdJQ0FnSUNCVExtbHpWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwSUQ4Z0tIRWdQU0JJWlZ0T1hTd2dZbVVnUFNBaE1Da2dPaUJUTG5WelpWSmxibVJsY21KMVptWmxjaUEvSUhFZ1BTQkhMbWRsZENoVEtTNWZYM2RsWW1kc1RYVnNkR2x6WVcxd2JHVmtSbkpoYldWaWRXWm1aWElnT2lCeElEMGdTR1VzSUVFdVkyOXdlU2hUTG5acFpYZHdiM0owS1N3Z1RDNWpiM0I1S0ZNdWMyTnBjM052Y2lrc0lFa2dQU0JUTG5OamFYTnpiM0pVWlhOME93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCQkxtTnZjSGtvUkNrdWJYVnNkR2x3YkhsVFkyRnNZWElvVUNrdVpteHZiM0lvS1N3Z1RDNWpiM0I1S0ZVcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0ZBcExtWnNiMjl5S0Nrc0lFa2dQU0JHT3dvZ0lDQWdJQ0FnSUdsbUlDaDRaUzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell4TmpBc0lIRXBJQ1ltSUdkbExtUnlZWGRDZFdabVpYSnpJQ1ltSUhvcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZGxJRDBnSVRFN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoVEtTQnBaaUFvVXk1cGMxZGxZa2RNVFhWc2RHbHdiR1ZTWlc1a1pYSlVZWEpuWlhSektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU0dVZ1BTQlRMblJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvVHk1c1pXNW5kR2dnSVQwOUlFaGxMbXhsYm1kMGFDQjhmQ0JQV3pCZElDRTlQU0F6TmpBMk5Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUkdVZ1BTQXdMQ0I2WlNBOUlFaGxMbXhsYm1kMGFEc2dSR1VnUENCNlpUc2dSR1VyS3lsUFcwUmxYU0E5SURNMk1EWTBJQ3NnUkdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUeTVzWlc1bmRHZ2dQU0JJWlM1c1pXNW5kR2dzSUhkbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNBb1R5NXNaVzVuZEdnZ0lUMDlJREVnZkh3Z1Qxc3dYU0FoUFQwZ016WXdOalFwSUNZbUlDaFBXekJkSUQwZ016WXdOalFzSUU4dWJHVnVaM1JvSUQwZ01Td2dkMlVnUFNBaE1DazdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdLRTh1YkdWdVozUm9JQ0U5UFNBeElIeDhJRTliTUYwZ0lUMDlJREV3TWprcElDWW1JQ2hQV3pCZElEMGdNVEF5T1N3Z1R5NXNaVzVuZEdnZ1BTQXhMQ0IzWlNBOUlDRXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2QyVWdKaVlnS0dkbExtbHpWMlZpUjB3eUlEOGdXUzVrY21GM1FuVm1abVZ5Y3loUEtTQTZJSGxsTG1kbGRDZ2lWMFZDUjB4ZlpISmhkMTlpZFdabVpYSnpJaWt1WkhKaGQwSjFabVpsY25OWFJVSkhUQ2hQS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2g0WlM1MmFXVjNjRzl5ZENoQktTd2dlR1V1YzJOcGMzTnZjaWhNS1N3Z2VHVXVjMlYwVTJOcGMzTnZjbFJsYzNRb1NTa3NJR0psS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCM1pTQTlJRWN1WjJWMEtGTXVkR1Y0ZEhWeVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUZrdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUW9Nell4TmpBc0lETTJNRFkwTENBek5EQTJPU0FySUU0c0lIZGxMbDlmZDJWaVoyeFVaWGgwZFhKbExDQklLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0VGbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjNaU0E5SUVjdVoyVjBLRk11ZEdWNGRIVnlaU2tzSUVobElEMGdUaUI4ZkNBd093b2dJQ0FnSUNBZ0lDQWdJQ0JaTG1aeVlXMWxZblZtWm1WeVZHVjRkSFZ5WlV4aGVXVnlLRE0yTVRZd0xDQXpOakEyTkN3Z2QyVXVYMTkzWldKbmJGUmxlSFIxY21Vc0lFZ2dmSHdnTUN3Z1NHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I1SUQwZ0xURTdDaUFnSUNCOUxDQjBhR2x6TG5KbFlXUlNaVzVrWlhKVVlYSm5aWFJRYVhobGJITWdQU0JtZFc1amRHbHZiaWhUTENCT0xDQklMQ0I2TENCeExDQmlaU3dnUVdVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvSVNoVElDWW1JRk11YVhOWFpXSkhURkpsYm1SbGNsUmhjbWRsZENrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjaTV5WldGa1VtVnVaR1Z5VkdGeVoyVjBVR2w0Wld4ek9pQnlaVzVrWlhKVVlYSm5aWFFnYVhNZ2JtOTBJRlJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWMExpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQkpaU0E5SUVjdVoyVjBLRk1wTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2pzS0lDQWdJQ0FnSUNCcFppQW9VeTVwYzFkbFlrZE1RM1ZpWlZKbGJtUmxjbFJoY21kbGRDQW1KaUJCWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hKWlNBOUlFbGxXMEZsWFNrc0lFbGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIaGxMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z1NXVXBPd29nSUNBZ0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhkbElEMGdVeTUwWlhoMGRYSmxMQ0JJWlNBOUlIZGxMbVp2Y20xaGRDd2dSR1VnUFNCM1pTNTBlWEJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFaGxJQ0U5UFNCamRDQW1KaUIwWlM1amIyNTJaWEowS0VobEtTQWhQVDBnV1M1blpYUlFZWEpoYldWMFpYSW9NelUzTXprcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjaTV5WldGa1VtVnVaR1Z5VkdGeVoyVjBVR2w0Wld4ek9pQnlaVzVrWlhKVVlYSm5aWFFnYVhNZ2JtOTBJR2x1SUZKSFFrRWdiM0lnYVcxd2JHVnRaVzUwWVhScGIyNGdaR1ZtYVc1bFpDQm1iM0p0WVhRdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhwbElEMGdSR1VnUFQwOUlHdHVJQ1ltSUNoNVpTNW9ZWE1vSWtWWVZGOWpiMnh2Y2w5aWRXWm1aWEpmYUdGc1psOW1iRzloZENJcElIeDhJR2RsTG1selYyVmlSMHd5SUNZbUlIbGxMbWhoY3lnaVJWaFVYMk52Ykc5eVgySjFabVpsY2w5bWJHOWhkQ0lwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaEVaU0FoUFQwZ2NtNGdKaVlnZEdVdVkyOXVkbVZ5ZENoRVpTa2dJVDA5SUZrdVoyVjBVR0Z5WVcxbGRHVnlLRE0xTnpNNEtTQW1KaUFoS0VSbElEMDlQU0J1YmlBbUppQW9aMlV1YVhOWFpXSkhURElnZkh3Z2VXVXVhR0Z6S0NKUFJWTmZkR1Y0ZEhWeVpWOW1iRzloZENJcElIeDhJSGxsTG1oaGN5Z2lWMFZDUjB4ZlkyOXNiM0pmWW5WbVptVnlYMlpzYjJGMElpa3BLU0FtSmlBaGVtVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5TG5KbFlXUlNaVzVrWlhKVVlYSm5aWFJRYVhobGJITTZJSEpsYm1SbGNsUmhjbWRsZENCcGN5QnViM1FnYVc0Z1ZXNXphV2R1WldSQ2VYUmxWSGx3WlNCdmNpQnBiWEJzWlcxbGJuUmhkR2x2YmlCa1pXWnBibVZrSUhSNWNHVXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnV1M1amFHVmphMFp5WVcxbFluVm1abVZ5VTNSaGRIVnpLRE0yTVRZd0tTQTlQVDBnTXpZd05UTWdQeUJPSUQ0OUlEQWdKaVlnVGlBOFBTQlRMbmRwWkhSb0lDMGdlaUFtSmlCSUlENDlJREFnSmlZZ1NDQThQU0JUTG1obGFXZG9kQ0F0SUhFZ0ppWWdXUzV5WldGa1VHbDRaV3h6S0U0c0lFZ3NJSG9zSUhFc0lIUmxMbU52Ym5abGNuUW9TR1VwTENCMFpTNWpiMjUyWlhKMEtFUmxLU3dnWW1VcElEb2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNpNXlaV0ZrVW1WdVpHVnlWR0Z5WjJWMFVHbDRaV3h6T2lCeVpXRmtVR2w0Wld4eklHWnliMjBnY21WdVpHVnlWR0Z5WjJWMElHWmhhV3hsWkM0Z1JuSmhiV1ZpZFdabVpYSWdibTkwSUdOdmJYQnNaWFJsTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdacGJtRnNiSGw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2QyVWdQU0JmSUNFOVBTQnVkV3hzSUQ4Z1J5NW5aWFFvWHlrdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeUlEb2diblZzYkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhobExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnZDJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dnZEdocGN5NWpiM0I1Um5KaGJXVmlkV1ptWlhKVWIxUmxlSFIxY21VZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUlEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaE9MbWx6Um5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsSUNFOVBTQWhNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQmpiM0I1Um5KaGJXVmlkV1ptWlhKVWIxUmxlSFIxY21Vb0tTQmpZVzRnYjI1c2VTQmlaU0IxYzJWa0lIZHBkR2dnUm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCNklEMGdUV0YwYUM1d2IzY29NaXdnTFVncExDQnhJRDBnVFdGMGFDNW1iRzl2Y2loT0xtbHRZV2RsTG5kcFpIUm9JQ29nZWlrc0lHSmxJRDBnVFdGMGFDNW1iRzl2Y2loT0xtbHRZV2RsTG1obGFXZG9kQ0FxSUhvcE93b2dJQ0FnSUNBZ0lHb3VjMlYwVkdWNGRIVnlaVEpFS0U0c0lEQXBMQ0JaTG1OdmNIbFVaWGhUZFdKSmJXRm5aVEpFS0RNMU5UTXNJRWdzSURBc0lEQXNJRk11ZUN3Z1V5NTVMQ0J4TENCaVpTa3NJSGhsTG5WdVltbHVaRlJsZUhSMWNtVW9LVHNLSUNBZ0lIMHNJSFJvYVhNdVkyOXdlVlJsZUhSMWNtVlViMVJsZUhSMWNtVWdQU0JtZFc1amRHbHZiaWhUTENCT0xDQklMQ0I2SUQwZ01Da2dld29nSUNBZ0lDQWdJR3hsZENCeElEMGdUaTVwYldGblpTNTNhV1IwYUN3Z1ltVWdQU0JPTG1sdFlXZGxMbWhsYVdkb2RDd2dRV1VnUFNCMFpTNWpiMjUyWlhKMEtFZ3VabTl5YldGMEtTd2dTV1VnUFNCMFpTNWpiMjUyWlhKMEtFZ3VkSGx3WlNrN0NpQWdJQ0FnSUNBZ2FpNXpaWFJVWlhoMGRYSmxNa1FvU0N3Z01Da3NJRmt1Y0dsNFpXeFRkRzl5Wldrb016YzBOREFzSUVndVpteHBjRmtwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE0zTkRReExDQklMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRXBMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXpNVGNzSUVndWRXNXdZV05yUVd4cFoyNXRaVzUwS1N3Z1RpNXBjMFJoZEdGVVpYaDBkWEpsSUQ4Z1dTNTBaWGhUZFdKSmJXRm5aVEpFS0RNMU5UTXNJSG9zSUZNdWVDd2dVeTU1TENCeExDQmlaU3dnUVdVc0lFbGxMQ0JPTG1sdFlXZGxMbVJoZEdFcElEb2dUaTVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsSUQ4Z1dTNWpiMjF3Y21WemMyVmtWR1Y0VTNWaVNXMWhaMlV5UkNnek5UVXpMQ0I2TENCVExuZ3NJRk11ZVN3Z1RpNXRhWEJ0WVhCeld6QmRMbmRwWkhSb0xDQk9MbTFwY0cxaGNITmJNRjB1YUdWcFoyaDBMQ0JCWlN3Z1RpNXRhWEJ0WVhCeld6QmRMbVJoZEdFcElEb2dXUzUwWlhoVGRXSkpiV0ZuWlRKRUtETTFOVE1zSUhvc0lGTXVlQ3dnVXk1NUxDQkJaU3dnU1dVc0lFNHVhVzFoWjJVcExDQjZJRDA5UFNBd0lDWW1JRWd1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJQ1ltSUZrdVoyVnVaWEpoZEdWTmFYQnRZWEFvTXpVMU15a3NJSGhsTG5WdVltbHVaRlJsZUhSMWNtVW9LVHNLSUNBZ0lIMHNJSFJvYVhNdVkyOXdlVlJsZUhSMWNtVlViMVJsZUhSMWNtVXpSQ0E5SUdaMWJtTjBhVzl1S0ZNc0lFNHNJRWdzSUhvc0lIRWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSGd1YVhOWFpXSkhUREZTWlc1a1pYSmxjaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJdVkyOXdlVlJsZUhSMWNtVlViMVJsZUhSMWNtVXpSRG9nWTJGdUlHOXViSGtnWW1VZ2RYTmxaQ0IzYVhSb0lGZGxZa2RNTWk0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1ltVWdQU0JUTG0xaGVDNTRJQzBnVXk1dGFXNHVlQ0FySURFc0lFRmxJRDBnVXk1dFlYZ3VlU0F0SUZNdWJXbHVMbmtnS3lBeExDQkpaU0E5SUZNdWJXRjRMbm9nTFNCVExtMXBiaTU2SUNzZ01Td2dkMlVnUFNCMFpTNWpiMjUyWlhKMEtIb3VabTl5YldGMEtTd2dTR1VnUFNCMFpTNWpiMjUyWlhKMEtIb3VkSGx3WlNrc0lFUmxPd29nSUNBZ0lDQWdJR2xtSUNoNkxtbHpSR0YwWVZSbGVIUjFjbVV6UkNrZ2FpNXpaWFJVWlhoMGRYSmxNMFFvZWl3Z01Da3NJRVJsSUQwZ016STROems3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvZWk1cGMwUmhkR0ZVWlhoMGRYSmxNa1JCY25KaGVTa2dhaTV6WlhSVVpYaDBkWEpsTWtSQmNuSmhlU2g2TENBd0tTd2dSR1VnUFNBek5UZzJOanNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlMbU52Y0hsVVpYaDBkWEpsVkc5VVpYaDBkWEpsTTBRNklHOXViSGtnYzNWd2NHOXlkSE1nVkVoU1JVVXVSR0YwWVZSbGVIUjFjbVV6UkNCaGJtUWdWRWhTUlVVdVJHRjBZVlJsZUhSMWNtVXlSRUZ5Y21GNUxpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUZrdWNHbDRaV3hUZEc5eVpXa29NemMwTkRBc0lIb3VabXhwY0ZrcExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNM05EUXhMQ0I2TG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE16TVRjc0lIb3VkVzV3WVdOclFXeHBaMjV0Wlc1MEtUc0tJQ0FnSUNBZ0lDQnNaWFFnZW1VZ1BTQlpMbWRsZEZCaGNtRnRaWFJsY2lnek16RTBLU3dnYW1VZ1BTQlpMbWRsZEZCaGNtRnRaWFJsY2lnek1qZzNPQ2tzSUZKdUlEMGdXUzVuWlhSUVlYSmhiV1YwWlhJb016TXhOaWtzSUdWcElEMGdXUzVuWlhSUVlYSmhiV1YwWlhJb016TXhOU2tzSUVkbElEMGdXUzVuWlhSUVlYSmhiV1YwWlhJb016STROemNwTENCSWRDQTlJRWd1YVhORGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlNBL0lFZ3ViV2x3YldGd2Mxc3dYU0E2SUVndWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnV1M1d2FYaGxiRk4wYjNKbGFTZ3pNekUwTENCSWRDNTNhV1IwYUNrc0lGa3VjR2w0Wld4VGRHOXlaV2tvTXpJNE56Z3NJRWgwTG1obGFXZG9kQ2tzSUZrdWNHbDRaV3hUZEc5eVpXa29Nek14Tml3Z1V5NXRhVzR1ZUNrc0lGa3VjR2w0Wld4VGRHOXlaV2tvTXpNeE5Td2dVeTV0YVc0dWVTa3NJRmt1Y0dsNFpXeFRkRzl5Wldrb016STROemNzSUZNdWJXbHVMbm9wTENCSUxtbHpSR0YwWVZSbGVIUjFjbVVnZkh3Z1NDNXBjMFJoZEdGVVpYaDBkWEpsTTBRZ1B5QlpMblJsZUZOMVlrbHRZV2RsTTBRb1JHVXNJSEVzSUU0dWVDd2dUaTU1TENCT0xub3NJR0psTENCQlpTd2dTV1VzSUhkbExDQklaU3dnU0hRdVpHRjBZU2tnT2lCSUxtbHpRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVWdQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlMbU52Y0hsVVpYaDBkWEpsVkc5VVpYaDBkWEpsTTBRNklIVnVkR1Z6ZEdWa0lITjFjSEJ2Y25RZ1ptOXlJR052YlhCeVpYTnpaV1FnYzNKalZHVjRkSFZ5WlM0aUtTd2dXUzVqYjIxd2NtVnpjMlZrVkdWNFUzVmlTVzFoWjJVelJDaEVaU3dnY1N3Z1RpNTRMQ0JPTG5rc0lFNHVlaXdnWW1Vc0lFRmxMQ0JKWlN3Z2QyVXNJRWgwTG1SaGRHRXBLU0E2SUZrdWRHVjRVM1ZpU1cxaFoyVXpSQ2hFWlN3Z2NTd2dUaTU0TENCT0xua3NJRTR1ZWl3Z1ltVXNJRUZsTENCSlpTd2dkMlVzSUVobExDQklkQ2tzSUZrdWNHbDRaV3hUZEc5eVpXa29Nek14TkN3Z2VtVXBMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXlPRGM0TENCcVpTa3NJRmt1Y0dsNFpXeFRkRzl5Wldrb016TXhOaXdnVW00cExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNek1UVXNJR1ZwS1N3Z1dTNXdhWGhsYkZOMGIzSmxhU2d6TWpnM055d2dSMlVwTENCeElEMDlQU0F3SUNZbUlIb3VaMlZ1WlhKaGRHVk5hWEJ0WVhCeklDWW1JRmt1WjJWdVpYSmhkR1ZOYVhCdFlYQW9SR1VwTENCNFpTNTFibUpwYm1SVVpYaDBkWEpsS0NrN0NpQWdJQ0I5TENCMGFHbHpMbWx1YVhSVVpYaDBkWEpsSUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJR291YzJWMFZHVjRkSFZ5WlRKRUtGTXNJREFwTENCNFpTNTFibUpwYm1SVVpYaDBkWEpsS0NrN0NpQWdJQ0I5TENCMGFHbHpMbkpsYzJWMFUzUmhkR1VnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQm5JRDBnTUN3Z2NDQTlJREFzSUY4Z1BTQnVkV3hzTENCNFpTNXlaWE5sZENncExDQlNMbkpsYzJWMEtDazdDaUFnSUNCOUxDQjBlWEJsYjJZZ1gxOVVTRkpGUlY5RVJWWlVUMDlNVTE5ZklEd2dJblVpSUNZbUlGOWZWRWhTUlVWZlJFVldWRTlQVEZOZlh5NWthWE53WVhSamFFVjJaVzUwS0c1bGR5QkRkWE4wYjIxRmRtVnVkQ2dpYjJKelpYSjJaU0lzSUhzS0lDQWdJQ0FnSUNCa1pYUmhhV3c2SUhSb2FYTUtJQ0FnSUgwcEtUc0tmUXB4WlM1d2NtOTBiM1I1Y0dVdWFYTlhaV0pIVEZKbGJtUmxjbVZ5SUQwZ0lUQTdDblpoY2lCZmFDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2NXVWdld3A5T3dwZmFDNXdjbTkwYjNSNWNHVXVhWE5YWldKSFRERlNaVzVrWlhKbGNpQTlJQ0V3T3dwMllYSWdUbklnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMElEMGdNalZsTFRVcGV3b2dJQ0FnSUNBZ0lIUm9hWE11Ym1GdFpTQTlJQ0lpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbEtHVXBMQ0IwYUdsekxtUmxibk5wZEhrZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCT2NpaDBhR2x6TG1OdmJHOXlMQ0IwYUdsekxtUmxibk5wZEhrcE93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0pHYjJkRmVIQXlJaXdLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUhSb2FYTXVZMjlzYjNJdVoyVjBTR1Y0S0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJR1JsYm5OcGRIazZJSFJvYVhNdVpHVnVjMmwwZVFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q24wN0NrNXlMbkJ5YjNSdmRIbHdaUzVwYzBadlowVjRjRElnUFNBaE1Ec0tkbUZ5SUVKeUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ0E5SURFc0lHNGdQU0F4WlRNcGV3b2dJQ0FnSUNBZ0lIUm9hWE11Ym1GdFpTQTlJQ0lpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbEtHVXBMQ0IwYUdsekxtNWxZWElnUFNCMExDQjBhR2x6TG1aaGNpQTlJRzQ3Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lFSnlLSFJvYVhNdVkyOXNiM0lzSUhSb2FYTXVibVZoY2l3Z2RHaHBjeTVtWVhJcE93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0pHYjJjaUxBb2dJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dkR2hwY3k1amIyeHZjaTVuWlhSSVpYZ29LU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVmhjam9nZEdocGN5NXVaV0Z5TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1ZWEk2SUhSb2FYTXVabUZ5Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLZlRzS1FuSXVjSEp2ZEc5MGVYQmxMbWx6Um05bklEMGdJVEE3Q25aaGNpQnVieUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlRZMlZ1WlNJc0lIUm9hWE11WW1GamEyZHliM1Z1WkNBOUlHNTFiR3dzSUhSb2FYTXVaVzUyYVhKdmJtMWxiblFnUFNCdWRXeHNMQ0IwYUdsekxtWnZaeUE5SUc1MWJHd3NJSFJvYVhNdWIzWmxjbkpwWkdWTllYUmxjbWxoYkNBOUlHNTFiR3dzSUhSb2FYTXVZWFYwYjFWd1pHRjBaU0E5SUNFd0xDQjBlWEJsYjJZZ1gxOVVTRkpGUlY5RVJWWlVUMDlNVTE5ZklEd2dJblVpSUNZbUlGOWZWRWhTUlVWZlJFVldWRTlQVEZOZlh5NWthWE53WVhSamFFVjJaVzUwS0c1bGR5QkRkWE4wYjIxRmRtVnVkQ2dpYjJKelpYSjJaU0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaR1YwWVdsc09pQjBhR2x6Q2lBZ0lDQWdJQ0FnZlNrcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlN3Z2RDa3NJR1V1WW1GamEyZHliM1Z1WkNBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1aVlXTnJaM0p2ZFc1a0lEMGdaUzVpWVdOclozSnZkVzVrTG1Oc2IyNWxLQ2twTENCbExtVnVkbWx5YjI1dFpXNTBJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbVZ1ZG1seWIyNXRaVzUwSUQwZ1pTNWxiblpwY205dWJXVnVkQzVqYkc5dVpTZ3BLU3dnWlM1bWIyY2dJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVabTluSUQwZ1pTNW1iMmN1WTJ4dmJtVW9LU2tzSUdVdWIzWmxjbkpwWkdWTllYUmxjbWxoYkNBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1dmRtVnljbWxrWlUxaGRHVnlhV0ZzSUQwZ1pTNXZkbVZ5Y21sa1pVMWhkR1Z5YVdGc0xtTnNiMjVsS0NrcExDQjBhR2x6TG1GMWRHOVZjR1JoZEdVZ1BTQmxMbUYxZEc5VmNHUmhkR1VzSUhSb2FYTXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJR1V1YldGMGNtbDRRWFYwYjFWd1pHRjBaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J6ZFhCbGNpNTBiMHBUVDA0b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Wm05bklDRTlQU0J1ZFd4c0lDWW1JQ2gwTG05aWFtVmpkQzVtYjJjZ1BTQjBhR2x6TG1adlp5NTBiMHBUVDA0b0tTa3NJSFE3Q2lBZ0lDQjlDbjA3Q201dkxuQnliM1J2ZEhsd1pTNXBjMU5qWlc1bElEMGdJVEE3Q25aaGNpQWtiaUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRcGV3b2dJQ0FnSUNBZ0lIUm9hWE11WVhKeVlYa2dQU0JsTENCMGFHbHpMbk4wY21sa1pTQTlJSFFzSUhSb2FYTXVZMjkxYm5RZ1BTQmxJQ0U5UFNCMmIybGtJREFnUHlCbExteGxibWQwYUNBdklIUWdPaUF3TENCMGFHbHpMblZ6WVdkbElEMGdhSElzSUhSb2FYTXVkWEJrWVhSbFVtRnVaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzltWm5ObGREb2dNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyOTFiblE2SUMweENpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1MlpYSnphVzl1SUQwZ01Dd2dkR2hwY3k1MWRXbGtJRDBnUlhRb0tUc0tJQ0FnSUgwS0lDQWdJRzl1VlhCc2IyRmtRMkZzYkdKaFkyc29LU0I3ZlFvZ0lDQWdjMlYwSUc1bFpXUnpWWEJrWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JsSUQwOVBTQWhNQ0FtSmlCMGFHbHpMblpsY25OcGIyNHJLenNLSUNBZ0lIMEtJQ0FnSUhObGRGVnpZV2RsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUxYzJGblpTQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNuSmhlU0E5SUc1bGR5QmxMbUZ5Y21GNUxtTnZibk4wY25WamRHOXlLR1V1WVhKeVlYa3BMQ0IwYUdsekxtTnZkVzUwSUQwZ1pTNWpiM1Z1ZEN3Z2RHaHBjeTV6ZEhKcFpHVWdQU0JsTG5OMGNtbGtaU3dnZEdocGN5NTFjMkZuWlNBOUlHVXVkWE5oWjJVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVRWFFvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUdVZ0tqMGdkR2hwY3k1emRISnBaR1VzSUc0Z0tqMGdkQzV6ZEhKcFpHVTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJSFJvYVhNdWMzUnlhV1JsT3lCcElEd2djanNnYVNzcktYUm9hWE11WVhKeVlYbGJaU0FySUdsZElEMGdkQzVoY25KaGVWdHVJQ3NnYVYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVTNXpaWFFvWlN3Z2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNobEtTQjdDaUFnSUNBZ0lDQWdaUzVoY25KaGVVSjFabVpsY25NZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWlM1aGNuSmhlVUoxWm1abGNuTWdQU0I3ZlNrc0lIUm9hWE11WVhKeVlYa3VZblZtWm1WeUxsOTFkV2xrSUQwOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdVlYSnlZWGt1WW5WbVptVnlMbDkxZFdsa0lEMGdSWFFvS1Nrc0lHVXVZWEp5WVhsQ2RXWm1aWEp6VzNSb2FYTXVZWEp5WVhrdVluVm1abVZ5TGw5MWRXbGtYU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbUZ5Y21GNVFuVm1abVZ5YzF0MGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaRjBnUFNCMGFHbHpMbUZ5Y21GNUxuTnNhV05sS0RBcExtSjFabVpsY2lrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCdVpYY2dkR2hwY3k1aGNuSmhlUzVqYjI1emRISjFZM1J2Y2lobExtRnljbUY1UW5WbVptVnljMXQwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpGMHBMQ0J1SUQwZ2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9kQ3dnZEdocGN5NXpkSEpwWkdVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxuTmxkRlZ6WVdkbEtIUm9hWE11ZFhOaFoyVXBMQ0J1T3dvZ0lDQWdmUW9nSUNBZ2IyNVZjR3h2WVdRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG05dVZYQnNiMkZrUTJGc2JHSmhZMnNnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWhjbkpoZVVKMVptWmxjbk1nUFQwOUlIWnZhV1FnTUNBbUppQW9aUzVoY25KaGVVSjFabVpsY25NZ1BTQjdmU2tzSUhSb2FYTXVZWEp5WVhrdVluVm1abVZ5TGw5MWRXbGtJRDA5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11WVhKeVlYa3VZblZtWm1WeUxsOTFkV2xrSUQwZ1JYUW9LU2tzSUdVdVlYSnlZWGxDZFdabVpYSnpXM1JvYVhNdVlYSnlZWGt1WW5WbVptVnlMbDkxZFdsa1hTQTlQVDBnZG05cFpDQXdJQ1ltSUNobExtRnljbUY1UW5WbVptVnljMXQwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpGMGdQU0JCY25KaGVTNXdjbTkwYjNSNWNHVXVjMnhwWTJVdVkyRnNiQ2h1WlhjZ1ZXbHVkRE15UVhKeVlYa29kR2hwY3k1aGNuSmhlUzVpZFdabVpYSXBLU2tzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkWFZwWkRvZ2RHaHBjeTUxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSTZJSFJvYVhNdVlYSnlZWGt1WW5WbVptVnlMbDkxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQjBhR2x6TG1GeWNtRjVMbU52Ym5OMGNuVmpkRzl5TG01aGJXVXNDaUFnSUNBZ0lDQWdJQ0FnSUhOMGNtbGtaVG9nZEdocGN5NXpkSEpwWkdVS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFwOU93b2tiaTV3Y205MGIzUjVjR1V1YVhOSmJuUmxjbXhsWVhabFpFSjFabVpsY2lBOUlDRXdPd3AyWVhJZ1MyVWdQU0J1WlhjZ1RTd2dVMjRnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwSUQwZ0lURXBld29nSUNBZ0lDQWdJSFJvYVhNdWJtRnRaU0E5SUNJaUxDQjBhR2x6TG1SaGRHRWdQU0JsTENCMGFHbHpMbWwwWlcxVGFYcGxJRDBnZEN3Z2RHaHBjeTV2Wm1aelpYUWdQU0J1TENCMGFHbHpMbTV2Y20xaGJHbDZaV1FnUFNCcElEMDlQU0FoTURzS0lDQWdJSDBLSUNBZ0lHZGxkQ0JqYjNWdWRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1lYUmhMbU52ZFc1ME93b2dJQ0FnZlFvZ0lDQWdaMlYwSUdGeWNtRjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUmhkR0V1WVhKeVlYazdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2JtVmxaSE5WY0dSaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaR0YwWVM1dVpXVmtjMVZ3WkdGMFpTQTlJR1U3Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVTFoZEhKcGVEUW9aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbVJoZEdFdVkyOTFiblE3SUhRZ1BDQnVPeUIwS3lzcFMyVXVlQ0E5SUhSb2FYTXVaMlYwV0NoMEtTd2dTMlV1ZVNBOUlIUm9hWE11WjJWMFdTaDBLU3dnUzJVdWVpQTlJSFJvYVhNdVoyVjBXaWgwS1N3Z1MyVXVZWEJ3YkhsTllYUnlhWGcwS0dVcExDQjBhR2x6TG5ObGRGaFpXaWgwTENCTFpTNTRMQ0JMWlM1NUxDQkxaUzU2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRtOXliV0ZzVFdGMGNtbDRLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2RHaHBjeTVqYjNWdWREc2dkQ0E4SUc0N0lIUXJLeWxMWlM1NElEMGdkR2hwY3k1blpYUllLSFFwTENCTFpTNTVJRDBnZEdocGN5NW5aWFJaS0hRcExDQkxaUzU2SUQwZ2RHaHBjeTVuWlhSYUtIUXBMQ0JMWlM1aGNIQnNlVTV2Y20xaGJFMWhkSEpwZUNobEtTd2dkR2hwY3k1elpYUllXVm9vZEN3Z1MyVXVlQ3dnUzJVdWVTd2dTMlV1ZWlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQjBhR2x6TG1OdmRXNTBPeUIwSUR3Z2Jqc2dkQ3NyS1V0bExuZ2dQU0IwYUdsekxtZGxkRmdvZENrc0lFdGxMbmtnUFNCMGFHbHpMbWRsZEZrb2RDa3NJRXRsTG5vZ1BTQjBhR2x6TG1kbGRGb29kQ2tzSUV0bExuUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpaGxLU3dnZEdocGN5NXpaWFJZV1Zvb2RDd2dTMlV1ZUN3Z1MyVXVlU3dnUzJVdWVpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFJkSUQwZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZENBcklERmRJRDBnZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGb29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkQ0FySURKZElEMGdkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZjb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGRDQXJJRE5kSUQwZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkRjA3Q2lBZ0lDQjlDaUFnSUNCblpYUlpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUWdLeUF4WFRzS0lDQWdJSDBLSUNBZ0lHZGxkRm9vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkQ0FySURKZE93b2dJQ0FnZlFvZ0lDQWdaMlYwVnlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDb2dkR2hwY3k1a1lYUmhMbk4wY21sa1pTQXJJSFJvYVhNdWIyWm1jMlYwSUNzZ00xMDdDaUFnSUNCOUNpQWdJQ0J6WlhSWVdTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdQU0JsSUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBMQ0IwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FySURCZElEMGdkQ3dnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS3lBeFhTQTlJRzRzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWVdWb29aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUQwZ1pTQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZEN3Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0t5QXdYU0E5SUhRc0lIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDc2dNVjBnUFNCdUxDQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXJJREpkSUQwZ2FTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmhaV2xjb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUQwZ1pTQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZEN3Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0t5QXdYU0E5SUhRc0lIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDc2dNVjBnUFNCdUxDQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXJJREpkSUQwZ2FTd2dkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLeUF6WFNBOUlISXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0dVZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5Z2lWRWhTUlVVdVNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVdVkyeHZibVVvS1RvZ1EyeHZibWx1WnlCaGJpQnBiblJsY214aGRtVmtJR0oxWm1abGNpQmhkSFJ5YVdKMWRHVWdkMmxzYkNCa1pXbHVkR1Z5YkdWaGRtVWdZblZtWm1WeUlHUmhkR0V1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQjBhR2x6TG1OdmRXNTBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUlDb2dkR2hwY3k1a1lYUmhMbk4wY21sa1pTQXJJSFJvYVhNdWIyWm1jMlYwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUE4SUhSb2FYTXVhWFJsYlZOcGVtVTdJSElyS3lsMExuQjFjMmdvZEdocGN5NWtZWFJoTG1GeWNtRjVXMmtnS3lCeVhTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJWWlNodVpYY2dkR2hwY3k1aGNuSmhlUzVqYjI1emRISjFZM1J2Y2loMEtTd2dkR2hwY3k1cGRHVnRVMmw2WlN3Z2RHaHBjeTV1YjNKdFlXeHBlbVZrS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnY21WMGRYSnVJR1V1YVc1MFpYSnNaV0YyWldSQ2RXWm1aWEp6SUQwOVBTQjJiMmxrSURBZ0ppWWdLR1V1YVc1MFpYSnNaV0YyWldSQ2RXWm1aWEp6SUQwZ2UzMHBMQ0JsTG1sdWRHVnliR1ZoZG1Wa1FuVm1abVZ5YzF0MGFHbHpMbVJoZEdFdWRYVnBaRjBnUFQwOUlIWnZhV1FnTUNBbUppQW9aUzVwYm5SbGNteGxZWFpsWkVKMVptWmxjbk5iZEdocGN5NWtZWFJoTG5WMWFXUmRJRDBnZEdocGN5NWtZWFJoTG1Oc2IyNWxLR1VwS1N3Z2JtVjNJRk51S0dVdWFXNTBaWEpzWldGMlpXUkNkV1ptWlhKelczUm9hWE11WkdGMFlTNTFkV2xrWFN3Z2RHaHBjeTVwZEdWdFUybDZaU3dnZEdocGN5NXZabVp6WlhRc0lIUm9hWE11Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR2xtSUNobElEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29JbFJJVWtWRkxrbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbExuUnZTbE5QVGlncE9pQlRaWEpwWVd4cGVtbHVaeUJoYmlCcGJuUmxjbXhoZG1Wa0lHSjFabVpsY2lCaGRIUnlhV0oxZEdVZ2QybHNiQ0JrWldsdWRHVnliR1ZoZG1VZ1luVm1abVZ5SUdSaGRHRXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENCMGFHbHpMbU52ZFc1ME95QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1SUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTURzZ2NpQThJSFJvYVhNdWFYUmxiVk5wZW1VN0lISXJLeWwwTG5CMWMyZ29kR2hwY3k1a1lYUmhMbUZ5Y21GNVcya2dLeUJ5WFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsMFpXMVRhWHBsT2lCMGFHbHpMbWwwWlcxVGFYcGxMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ2RHaHBjeTVoY25KaGVTNWpiMjV6ZEhKMVkzUnZjaTV1WVcxbExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYSnlZWGs2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdWIzSnRZV3hwZW1Wa09pQjBhR2x6TG01dmNtMWhiR2w2WldRS0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdjbVYwZFhKdUlHVXVhVzUwWlhKc1pXRjJaV1JDZFdabVpYSnpJRDA5UFNCMmIybGtJREFnSmlZZ0tHVXVhVzUwWlhKc1pXRjJaV1JDZFdabVpYSnpJRDBnZTMwcExDQmxMbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljMXQwYUdsekxtUmhkR0V1ZFhWcFpGMGdQVDA5SUhadmFXUWdNQ0FtSmlBb1pTNXBiblJsY214bFlYWmxaRUoxWm1abGNuTmJkR2hwY3k1a1lYUmhMblYxYVdSZElEMGdkR2hwY3k1a1lYUmhMblJ2U2xOUFRpaGxLU2tzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhWE5KYm5SbGNteGxZWFpsWkVKMVptWmxja0YwZEhKcFluVjBaVG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJR2wwWlcxVGFYcGxPaUIwYUdsekxtbDBaVzFUYVhwbExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWVhSaE9pQjBhR2x6TG1SaGRHRXVkWFZwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdiMlptYzJWME9pQjBhR2x6TG05bVpuTmxkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtOXliV0ZzYVhwbFpEb2dkR2hwY3k1dWIzSnRZV3hwZW1Wa0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS2ZUc0tVMjR1Y0hKdmRHOTBlWEJsTG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVZ1BTQWhNRHNLZG1GeUlHbHZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlRjSEpwZEdWTllYUmxjbWxoYkNJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9NVFkzTnpjeU1UVXBMQ0IwYUdsekxtMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbkp2ZEdGMGFXOXVJRDBnTUN3Z2RHaHBjeTV6YVhwbFFYUjBaVzUxWVhScGIyNGdQU0FoTUN3Z2RHaHBjeTUwY21GdWMzQmhjbVZ1ZENBOUlDRXdMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1OdmJHOXlMbU52Y0hrb1pTNWpiMnh2Y2lrc0lIUm9hWE11YldGd0lEMGdaUzV0WVhBc0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCbExtRnNjR2hoVFdGd0xDQjBhR2x6TG5KdmRHRjBhVzl1SUQwZ1pTNXliM1JoZEdsdmJpd2dkR2hwY3k1emFYcGxRWFIwWlc1MVlYUnBiMjRnUFNCbExuTnBlbVZCZEhSbGJuVmhkR2x2Yml3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLYVc4dWNISnZkRzkwZVhCbExtbHpVM0J5YVhSbFRXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlHZHBMQ0JSYVNBOUlHNWxkeUJOTENCNGFTQTlJRzVsZHlCTkxDQjVhU0E5SUc1bGR5Qk5MQ0IyYVNBOUlHNWxkeUJZTENCTGFTQTlJRzVsZHlCWUxDQk5hQ0E5SUc1bGR5QndaU3dnYUhNZ1BTQnVaWGNnVFN3Z1pYSWdQU0J1WlhjZ1RTd2dkWE1nUFNCdVpYY2dUU3dnYW13Z1BTQnVaWGNnV0N3Z2NXOGdQU0J1WlhjZ1dDd2dVV3dnUFNCdVpYY2dXQ3dnY204Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVkSGx3WlNBOUlDSlRjSEpwZEdVaUxDQm5hU0E5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RwSUQwZ2JtVjNJRjlsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xTNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMUzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXRMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdU5Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTFM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0FnSUNBZ1hTa3NJRzRnUFNCdVpYY2dKRzRvZEN3Z05TazdDaUFnSUNBZ0lDQWdJQ0FnSUdkcExuTmxkRWx1WkdWNEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTXdvZ0lDQWdJQ0FnSUNBZ0lDQmRLU3dnWjJrdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QlRiaWh1TENBekxDQXdMQ0FoTVNrcExDQm5hUzV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lGTnVLRzRzSURJc0lETXNJQ0V4S1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11WjJWdmJXVjBjbmtnUFNCbmFTd2dkR2hwY3k1dFlYUmxjbWxoYkNBOUlHVWdJVDA5SUhadmFXUWdNQ0EvSUdVZ09pQnVaWGNnYVc4c0lIUm9hWE11WTJWdWRHVnlJRDBnYm1WM0lGZ29MalVzSUM0MUtUc0tJQ0FnSUgwS0lDQWdJSEpoZVdOaGMzUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHVXVZMkZ0WlhKaElEMDlQU0J1ZFd4c0lDWW1JR052Ym5OdmJHVXVaWEp5YjNJb0oxUklVa1ZGTGxOd2NtbDBaVG9nSWxKaGVXTmhjM1JsY2k1allXMWxjbUVpSUc1bFpXUnpJSFJ2SUdKbElITmxkQ0JwYmlCdmNtUmxjaUIwYnlCeVlYbGpZWE4wSUdGbllXbHVjM1FnYzNCeWFYUmxjeTRuS1N3Z2VHa3VjMlYwUm5KdmJVMWhkSEpwZUZOallXeGxLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMQ0JOYUM1amIzQjVLR1V1WTJGdFpYSmhMbTFoZEhKcGVGZHZjbXhrS1N3Z2RHaHBjeTV0YjJSbGJGWnBaWGROWVhSeWFYZ3ViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aGxMbU5oYldWeVlTNXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXNJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMQ0I1YVM1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1dGIyUmxiRlpwWlhkTllYUnlhWGdwTENCbExtTmhiV1Z5WVM1cGMxQmxjbk53WldOMGFYWmxRMkZ0WlhKaElDWW1JSFJvYVhNdWJXRjBaWEpwWVd3dWMybDZaVUYwZEdWdWRXRjBhVzl1SUQwOVBTQWhNU0FtSmlCNGFTNXRkV3gwYVhCc2VWTmpZV3hoY2lndGVXa3VlaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtMWhkR1Z5YVdGc0xuSnZkR0YwYVc5dUxDQnBMQ0J5T3dvZ0lDQWdJQ0FnSUc0Z0lUMDlJREFnSmlZZ0tISWdQU0JOWVhSb0xtTnZjeWh1S1N3Z2FTQTlJRTFoZEdndWMybHVLRzRwS1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVZMlZ1ZEdWeU93b2dJQ0FnSUNBZ0lHUnpLR2h6TG5ObGRDZ3RMalVzSUMwdU5Td2dNQ2tzSUhscExDQnZMQ0I0YVN3Z2FTd2djaWtzSUdSektHVnlMbk5sZENndU5Td2dMUzQxTENBd0tTd2dlV2tzSUc4c0lIaHBMQ0JwTENCeUtTd2daSE1vZFhNdWMyVjBLQzQxTENBdU5Td2dNQ2tzSUhscExDQnZMQ0I0YVN3Z2FTd2djaWtzSUdwc0xuTmxkQ2d3TENBd0tTd2djVzh1YzJWMEtERXNJREFwTENCUmJDNXpaWFFvTVN3Z01TazdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQmxMbkpoZVM1cGJuUmxjbk5sWTNSVWNtbGhibWRzWlNob2N5d2daWElzSUhWekxDQWhNU3dnVVdrcE93b2dJQ0FnSUNBZ0lHbG1JQ2hoSUQwOVBTQnVkV3hzSUNZbUlDaGtjeWhsY2k1elpYUW9MUzQxTENBdU5Td2dNQ2tzSUhscExDQnZMQ0I0YVN3Z2FTd2djaWtzSUhGdkxuTmxkQ2d3TENBeEtTd2dZU0E5SUdVdWNtRjVMbWx1ZEdWeWMyVmpkRlJ5YVdGdVoyeGxLR2h6TENCMWN5d2daWElzSUNFeExDQlJhU2tzSUdFZ1BUMDlJRzUxYkd3cEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCbExuSmhlUzV2Y21sbmFXNHVaR2x6ZEdGdVkyVlVieWhSYVNrN0NpQWdJQ0FnSUNBZ2JDQThJR1V1Ym1WaGNpQjhmQ0JzSUQ0Z1pTNW1ZWElnZkh3Z2RDNXdkWE5vS0hzS0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnZhVzUwT2lCUmFTNWpiRzl1WlNncExBb2dJQ0FnSUNBZ0lDQWdJQ0IxZGpvZ2JuUXVaMlYwVlZZb1VXa3NJR2h6TENCbGNpd2dkWE1zSUdwc0xDQnhieXdnVVd3c0lHNWxkeUJZS1N3S0lDQWdJQ0FnSUNBZ0lDQWdabUZqWlRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2IySnFaV04wT2lCMGFHbHpDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2daUzVqWlc1MFpYSWdJVDA5SUhadmFXUWdNQ0FtSmlCMGFHbHpMbU5sYm5SbGNpNWpiM0I1S0dVdVkyVnVkR1Z5S1N3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUdVdWJXRjBaWEpwWVd3c0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q25KdkxuQnliM1J2ZEhsd1pTNXBjMU53Y21sMFpTQTlJQ0V3T3dwbWRXNWpkR2x2YmlCa2N5aHpMQ0JsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNCMmFTNXpkV0pXWldOMGIzSnpLSE1zSUhRcExtRmtaRk5qWVd4aGNpZ3VOU2t1YlhWc2RHbHdiSGtvYmlrc0lHa2dJVDA5SUhadmFXUWdNQ0EvSUNoTGFTNTRJRDBnY2lBcUlIWnBMbmdnTFNCcElDb2dkbWt1ZVN3Z1Mya3VlU0E5SUdrZ0tpQjJhUzU0SUNzZ2NpQXFJSFpwTG5rcElEb2dTMmt1WTI5d2VTaDJhU2tzSUhNdVkyOXdlU2hsS1N3Z2N5NTRJQ3M5SUV0cExuZ3NJSE11ZVNBclBTQkxhUzU1TENCekxtRndjR3g1VFdGMGNtbDROQ2hOYUNrN0NuMEtkbUZ5SUdaeklEMGdibVYzSUUwc0lFdHNJRDBnYm1WM0lFMHNJR0pvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJPWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWTNWeWNtVnVkRXhsZG1Wc0lEMGdNQ3dnZEdocGN5NTBlWEJsSUQwZ0lreFBSQ0lzSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGFXVnpLSFJvYVhNc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMlpXeHpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm5WdFpYSmhZbXhsT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBjMHhQUkRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUNFd0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTVoZFhSdlZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNWpiM0I1S0dVc0lDRXhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1YkdWMlpXeHpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdkRnR1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aFpHUk1aWFpsYkNoeUxtOWlhbVZqZEM1amJHOXVaU2dwTENCeUxtUnBjM1JoYm1ObEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhWMGIxVndaR0YwWlNBOUlHVXVZWFYwYjFWd1pHRjBaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkV4bGRtVnNLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnZENBOUlFMWhkR2d1WVdKektIUXBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1c1pYWmxiSE1zSUdrN0NpQWdJQ0FnSUNBZ1ptOXlLR2tnUFNBd095QnBJRHdnYmk1c1pXNW5kR2dnSmlZZ0lTaDBJRHdnYmx0cFhTNWthWE4wWVc1alpTazdJR2tyS3lrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWMzQnNhV05sS0drc0lEQXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nWlFvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TG1Ga1pDaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVOMWNuSmxiblJNWlhabGJDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlkzVnljbVZ1ZEV4bGRtVnNPd29nSUNBZ2ZRb2dJQ0FnWjJWMFQySnFaV04wUm05eVJHbHpkR0Z1WTJVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1c1pYWmxiSE03Q2lBZ0lDQWdJQ0FnYVdZZ0tIUXViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYml3Z2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHNGdQU0F4TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnUENCcElDWW1JQ0VvWlNBOElIUmJibDB1WkdsemRHRnVZMlVwT3lCdUt5c3BPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZ0dUlDMGdNVjB1YjJKcVpXTjBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lISmhlV05oYzNRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG14bGRtVnNjeTVzWlc1bmRHZ2dQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1p6TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDBhR2x6TG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsTG5KaGVTNXZjbWxuYVc0dVpHbHpkR0Z1WTJWVWJ5aG1jeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJWMFQySnFaV04wUm05eVJHbHpkR0Z1WTJVb2FTa3VjbUY1WTJGemRDaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1c1pYWmxiSE03Q2lBZ0lDQWdJQ0FnYVdZZ0tIUXViR1Z1WjNSb0lENGdNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1jeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b1pTNXRZWFJ5YVhoWGIzSnNaQ2tzSUV0c0xuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWgwYUdsekxtMWhkSEpwZUZkdmNteGtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbWN5NWthWE4wWVc1alpWUnZLRXRzS1NBdklHVXVlbTl2YlRzS0lDQWdJQ0FnSUNBZ0lDQWdkRnN3WFM1dlltcGxZM1F1ZG1semFXSnNaU0E5SUNFd093b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTd2djanNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR2tnUFNBeExDQnlJRDBnZEM1c1pXNW5kR2c3SUdrZ1BDQnlJQ1ltSUc0Z1BqMGdkRnRwWFM1a2FYTjBZVzVqWlRzZ2FTc3JLWFJiYVNBdElERmRMbTlpYW1WamRDNTJhWE5wWW14bElEMGdJVEVzSUhSYmFWMHViMkpxWldOMExuWnBjMmxpYkdVZ1BTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLSFJvYVhNdVgyTjFjbkpsYm5STVpYWmxiQ0E5SUdrZ0xTQXhPeUJwSUR3Z2Nqc2dhU3NyS1hSYmFWMHViMkpxWldOMExuWnBjMmxpYkdVZ1BTQWhNVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVZWFYwYjFWd1pHRjBaU0E5UFQwZ0lURWdKaVlnS0hRdWIySnFaV04wTG1GMWRHOVZjR1JoZEdVZ1BTQWhNU2tzSUhRdWIySnFaV04wTG14bGRtVnNjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVzWlhabGJITTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJRzR1YkdWdVozUm9PeUJwSUR3Z2Nqc2dhU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQnVXMmxkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbTlpYW1WamRDNXNaWFpsYkhNdWNIVnphQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUTZJRzh1YjJKcVpXTjBMblYxYVdRc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTjBZVzVqWlRvZ2J5NWthWE4wWVc1alpRb2dJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRN0NpQWdJQ0I5Q24wc0lHVmpJRDBnYm1WM0lFMHNJSFJqSUQwZ2JtVjNJRlpsTENCdVl5QTlJRzVsZHlCV1pTd2dVbmdnUFNCdVpYY2dUU3dnYVdNZ1BTQnVaWGNnY0dVc0lITnZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QnpkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUydHBibTVsWkUxbGMyZ2lMQ0IwYUdsekxtSnBibVJOYjJSbElEMGdJbUYwZEdGamFHVmtJaXdnZEdocGN5NWlhVzVrVFdGMGNtbDRJRDBnYm1WM0lIQmxMQ0IwYUdsekxtSnBibVJOWVhSeWFYaEpiblpsY25ObElEMGdibVYzSUhCbE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZbWx1WkUxdlpHVWdQU0JsTG1KcGJtUk5iMlJsTENCMGFHbHpMbUpwYm1STllYUnlhWGd1WTI5d2VTaGxMbUpwYm1STllYUnlhWGdwTENCMGFHbHpMbUpwYm1STllYUnlhWGhKYm5abGNuTmxMbU52Y0hrb1pTNWlhVzVrVFdGMGNtbDRTVzUyWlhKelpTa3NJSFJvYVhNdWMydGxiR1YwYjI0Z1BTQmxMbk5yWld4bGRHOXVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZbWx1WkNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXphMlZzWlhSdmJpQTlJR1VzSUhRZ1BUMDlJSFp2YVdRZ01DQW1KaUFvZEdocGN5NTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDZ2hNQ2tzSUhSb2FYTXVjMnRsYkdWMGIyNHVZMkZzWTNWc1lYUmxTVzUyWlhKelpYTW9LU3dnZENBOUlIUm9hWE11YldGMGNtbDRWMjl5YkdRcExDQjBhR2x6TG1KcGJtUk5ZWFJ5YVhndVkyOXdlU2gwS1N3Z2RHaHBjeTVpYVc1a1RXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtIUXBMbWx1ZG1WeWRDZ3BPd29nSUNBZ2ZRb2dJQ0FnY0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuTnJaV3hsZEc5dUxuQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lHNXZjbTFoYkdsNlpWTnJhVzVYWldsbmFIUnpLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYm1WM0lGWmxMQ0IwSUQwZ2RHaHBjeTVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6TG5OcmFXNVhaV2xuYUhRN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlIUXVZMjkxYm5RN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCbExuZ2dQU0IwTG1kbGRGZ29iaWtzSUdVdWVTQTlJSFF1WjJWMFdTaHVLU3dnWlM1NklEMGdkQzVuWlhSYUtHNHBMQ0JsTG5jZ1BTQjBMbWRsZEZjb2JpazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnTVNBdklHVXViV0Z1YUdGMGRHRnVUR1Z1WjNSb0tDazdDaUFnSUNBZ0lDQWdJQ0FnSUhJZ0lUMDlJREVnTHlBd0lEOGdaUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHlLU0E2SUdVdWMyVjBLREVzSURBc0lEQXNJREFwTENCMExuTmxkRmhaV2xjb2Jpd2daUzU0TENCbExua3NJR1V1ZWl3Z1pTNTNLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa3NJSFJvYVhNdVltbHVaRTF2WkdVZ1BUMDlJQ0poZEhSaFkyaGxaQ0lnUHlCMGFHbHpMbUpwYm1STllYUnlhWGhKYm5abGNuTmxMbU52Y0hrb2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrdWFXNTJaWEowS0NrZ09pQjBhR2x6TG1KcGJtUk5iMlJsSUQwOVBTQWlaR1YwWVdOb1pXUWlJRDhnZEdocGN5NWlhVzVrVFdGMGNtbDRTVzUyWlhKelpTNWpiM0I1S0hSb2FYTXVZbWx1WkUxaGRISnBlQ2t1YVc1MlpYSjBLQ2tnT2lCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsTnJhVzV1WldSTlpYTm9PaUJWYm5KbFkyOW5ibWw2WldRZ1ltbHVaRTF2WkdVNklDSWdLeUIwYUdsekxtSnBibVJOYjJSbEtUc0tJQ0FnSUgwS0lDQWdJR0p2Ym1WVWNtRnVjMlp2Y20wb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXphMlZzWlhSdmJpd2dhU0E5SUhSb2FYTXVaMlZ2YldWMGNuazdDaUFnSUNBZ0lDQWdkR011Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNocExtRjBkSEpwWW5WMFpYTXVjMnRwYmtsdVpHVjRMQ0JsS1N3Z2JtTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hwTG1GMGRISnBZblYwWlhNdWMydHBibGRsYVdkb2RDd2daU2tzSUdWakxtTnZjSGtvZENrdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNdVltbHVaRTFoZEhKcGVDa3NJSFF1YzJWMEtEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ1BDQTBPeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRzVqTG1kbGRFTnZiWEJ2Ym1WdWRDaHlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzhnSVQwOUlEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdkR011WjJWMFEyOXRjRzl1Wlc1MEtISXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV011YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWh1TG1KdmJtVnpXMkZkTG0xaGRISnBlRmR2Y214a0xDQnVMbUp2Ym1WSmJuWmxjbk5sYzF0aFhTa3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRko0TG1OdmNIa29aV01wTG1Gd2NHeDVUV0YwY21sNE5DaHBZeWtzSUc4cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6TG1KcGJtUk5ZWFJ5YVhoSmJuWmxjbk5sS1RzS0lDQWdJSDBLZlRzS2MyOHVjSEp2ZEc5MGVYQmxMbWx6VTJ0cGJtNWxaRTFsYzJnZ1BTQWhNRHNLZG1GeUlHOXZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk9aU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrSnZibVVpT3dvZ0lDQWdmUXA5T3dwdmJ5NXdjbTkwYjNSNWNHVXVhWE5DYjI1bElEMGdJVEE3Q25aaGNpQnhiaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNTFiR3dzSUhRZ1BTQXhMQ0J1SUQwZ01Td2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5QTlJSEowTENCb0lEMGdjblFzSUhVc0lHUXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNTFiR3dzSUc4c0lHRXNJR3dzSUdNc0lHZ3NJR2tzSUhJc0lIVXNJR1FwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVhVzFoWjJVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdSaGRHRTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJRzRLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbTFoWjBacGJIUmxjaUE5SUdNc0lIUm9hWE11YldsdVJtbHNkR1Z5SUQwZ2FDd2dkR2hwY3k1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Td2dkR2hwY3k1bWJHbHdXU0E5SUNFeExDQjBhR2x6TG5WdWNHRmphMEZzYVdkdWJXVnVkQ0E5SURFN0NpQWdJQ0I5Q24wN0NuRnVMbkJ5YjNSdmRIbHdaUzVwYzBSaGRHRlVaWGgwZFhKbElEMGdJVEE3Q25aaGNpQnlZeUE5SUc1bGR5QndaU3dnVUhnZ1BTQnVaWGNnY0dVc0lHRnZJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUZ0ZExDQjBJRDBnVzEwcGV3b2dJQ0FnSUNBZ0lIUm9hWE11ZFhWcFpDQTlJRVYwS0Nrc0lIUm9hWE11WW05dVpYTWdQU0JsTG5Oc2FXTmxLREFwTENCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3lBOUlIUXNJSFJvYVhNdVltOXVaVTFoZEhKcFkyVnpJRDBnYm5Wc2JDd2dkR2hwY3k1aWIyNWxWR1Y0ZEhWeVpTQTlJRzUxYkd3c0lIUm9hWE11WW05dVpWUmxlSFIxY21WVGFYcGxJRDBnTUN3Z2RHaHBjeTVtY21GdFpTQTlJQzB4TENCMGFHbHpMbWx1YVhRb0tUc0tJQ0FnSUgwS0lDQWdJR2x1YVhRb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1KdmJtVnpMQ0IwSUQwZ2RHaHBjeTVpYjI1bFNXNTJaWEp6WlhNN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVltOXVaVTFoZEhKcFkyVnpJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hsTG14bGJtZDBhQ0FxSURFMktTd2dkQzVzWlc1bmRHZ2dQVDA5SURBcElIUm9hWE11WTJGc1kzVnNZWFJsU1c1MlpYSnpaWE1vS1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNobExteGxibWQwYUNBaFBUMGdkQzVzWlc1bmRHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVRhMlZzWlhSdmJqb2dUblZ0WW1WeUlHOW1JR2x1ZG1WeWMyVWdZbTl1WlNCdFlYUnlhV05sY3lCa2IyVnpJRzV2ZENCdFlYUmphQ0JoYlc5MWJuUWdiMllnWW05dVpYTXVJaWtzSUhSb2FYTXVZbTl1WlVsdWRtVnljMlZ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCMGFHbHpMbUp2Ym1WekxteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDBhR2x6TG1KdmJtVkpiblpsY25ObGN5NXdkWE5vS0c1bGR5QndaU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1kyRnNZM1ZzWVhSbFNXNTJaWEp6WlhNb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1aWIyNWxTVzUyWlhKelpYTXViR1Z1WjNSb0lEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBd0xDQjBJRDBnZEdocGN5NWliMjVsY3k1c1pXNW5kR2c3SUdVZ1BDQjBPeUJsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRzVsZHlCd1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWliMjVsYzF0bFhTQW1KaUJ1TG1OdmNIa29kR2hwY3k1aWIyNWxjMXRsWFM1dFlYUnlhWGhYYjNKc1pDa3VhVzUyWlhKMEtDa3NJSFJvYVhNdVltOXVaVWx1ZG1WeWMyVnpMbkIxYzJnb2JpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnY0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBd0xDQjBJRDBnZEdocGN5NWliMjVsY3k1c1pXNW5kR2c3SUdVZ1BDQjBPeUJsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVltOXVaWE5iWlYwN0NpQWdJQ0FnSUNBZ0lDQWdJRzRnSmlZZ2JpNXRZWFJ5YVhoWGIzSnNaQzVqYjNCNUtIUm9hWE11WW05dVpVbHVkbVZ5YzJWelcyVmRLUzVwYm5abGNuUW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Dd2dkQ0E5SUhSb2FYTXVZbTl1WlhNdWJHVnVaM1JvT3lCbElEd2dkRHNnWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtSnZibVZ6VzJWZE93b2dJQ0FnSUNBZ0lDQWdJQ0J1SUNZbUlDaHVMbkJoY21WdWRDQW1KaUJ1TG5CaGNtVnVkQzVwYzBKdmJtVWdQeUFvYmk1dFlYUnlhWGd1WTI5d2VTaHVMbkJoY21WdWRDNXRZWFJ5YVhoWGIzSnNaQ2t1YVc1MlpYSjBLQ2tzSUc0dWJXRjBjbWw0TG0xMWJIUnBjR3g1S0c0dWJXRjBjbWw0VjI5eWJHUXBLU0E2SUc0dWJXRjBjbWw0TG1OdmNIa29iaTV0WVhSeWFYaFhiM0pzWkNrc0lHNHViV0YwY21sNExtUmxZMjl0Y0c5elpTaHVMbkJ2YzJsMGFXOXVMQ0J1TG5GMVlYUmxjbTVwYjI0c0lHNHVjMk5oYkdVcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtSnZibVZ6TENCMElEMGdkR2hwY3k1aWIyNWxTVzUyWlhKelpYTXNJRzRnUFNCMGFHbHpMbUp2Ym1WTllYUnlhV05sY3l3Z2FTQTlJSFJvYVhNdVltOXVaVlJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR1V1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQmxXM0pkSUQ4Z1pWdHlYUzV0WVhSeWFYaFhiM0pzWkNBNklGQjRPd29nSUNBZ0lDQWdJQ0FnSUNCeVl5NXRkV3gwYVhCc2VVMWhkSEpwWTJWektHRXNJSFJiY2wwcExDQnlZeTUwYjBGeWNtRjVLRzRzSUhJZ0tpQXhOaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdrZ0lUMDlJRzUxYkd3Z0ppWWdLR2t1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2s3Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHRnZLSFJvYVhNdVltOXVaWE1zSUhSb2FYTXVZbTl1WlVsdWRtVnljMlZ6S1RzS0lDQWdJSDBLSUNBZ0lHTnZiWEIxZEdWQ2IyNWxWR1Y0ZEhWeVpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJRTFoZEdndWMzRnlkQ2gwYUdsekxtSnZibVZ6TG14bGJtZDBhQ0FxSURRcE93b2dJQ0FnSUNBZ0lHVWdQU0JZWXlobEtTd2daU0E5SUUxaGRHZ3ViV0Y0S0dVc0lEUXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaGxJQ29nWlNBcUlEUXBPd29nSUNBZ0lDQWdJSFF1YzJWMEtIUm9hWE11WW05dVpVMWhkSEpwWTJWektUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHNWxkeUJ4YmloMExDQmxMQ0JsTENCamRDd2dibTRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhSb2FYTXVZbTl1WlUxaGRISnBZMlZ6SUQwZ2RDd2dkR2hwY3k1aWIyNWxWR1Y0ZEhWeVpTQTlJRzRzSUhSb2FYTXVZbTl1WlZSbGVIUjFjbVZUYVhwbElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVKdmJtVkNlVTVoYldVb1pTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxtSnZibVZ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1aWIyNWxjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drdWJtRnRaU0E5UFQwZ1pTa2djbVYwZFhKdUlHazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbUp2Ym1WVVpYaDBkWEpsSUNFOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG1KdmJtVlVaWGgwZFhKbExtUnBjM0J2YzJVb0tTd2dkR2hwY3k1aWIyNWxWR1Y0ZEhWeVpTQTlJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZFhWcFpDQTlJR1V1ZFhWcFpEc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdaUzVpYjI1bGN5NXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdVltOXVaWE5iYmwwc0lHOGdQU0IwVzNKZE93b2dJQ0FnSUNBZ0lDQWdJQ0J2SUQwOVBTQjJiMmxrSURBZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VTJ0bGJHVjBiMjQ2SUU1dklHSnZibVVnWm05MWJtUWdkMmwwYUNCVlZVbEVPaUlzSUhJcExDQnZJRDBnYm1WM0lHOXZLU3dnZEdocGN5NWliMjVsY3k1d2RYTm9LRzhwTENCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3k1d2RYTm9LRzVsZHlCd1pTZ3BMbVp5YjIxQmNuSmhlU2hsTG1KdmJtVkpiblpsY25ObGMxdHVYU2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBibWwwS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGa1lYUmhPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUEwTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpVTJ0bGJHVjBiMjRpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWdVpYSmhkRzl5T2lBaVUydGxiR1YwYjI0dWRHOUtVMDlPSWdvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCaWIyNWxjem9nVzEwc0NpQWdJQ0FnSUNBZ0lDQWdJR0p2Ym1WSmJuWmxjbk5sY3pvZ1cxMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR1V1ZFhWcFpDQTlJSFJvYVhNdWRYVnBaRHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVltOXVaWE1zSUc0Z1BTQjBhR2x6TG1KdmJtVkpiblpsY25ObGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdkQzVzWlc1bmRHZzdJR2tnUENCeU95QnBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUmJhVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVZbTl1WlhNdWNIVnphQ2h2TG5WMWFXUXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc1YmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdVdVltOXVaVWx1ZG1WeWMyVnpMbkIxYzJnb1lTNTBiMEZ5Y21GNUtDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lIMEtmU3dnV0c0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0c0lHa2dQU0F4S1hzS0lDQWdJQ0FnSUNCMGVYQmxiMllnYmlBOVBTQWliblZ0WW1WeUlpQW1KaUFvYVNBOUlHNHNJRzRnUFNBaE1Td2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1U1c1emRHRnVZMlZrUW5WbVptVnlRWFIwY21saWRYUmxPaUJVYUdVZ1kyOXVjM1J5ZFdOMGIzSWdibTkzSUdWNGNHVmpkSE1nYm05eWJXRnNhWHBsWkNCaGN5QjBhR1VnZEdocGNtUWdZWEpuZFcxbGJuUXVJaWtwT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRc0lHNHBPd29nSUNBZ0lDQWdJSFJvYVhNdWJXVnphRkJsY2tGMGRISnBZblYwWlNBOUlHazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV0WlhOb1VHVnlRWFIwY21saWRYUmxJRDBnWlM1dFpYTm9VR1Z5UVhSMGNtbGlkWFJsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTQTlJSFJvYVhNdWJXVnphRkJsY2tGMGRISnBZblYwWlN3Z1pTNXBjMGx1YzNSaGJtTmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTQTlJQ0V3TENCbE93b2dJQ0FnZlFwOU93cFliaTV3Y205MGIzUjVjR1V1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VnUFNBaE1Ec0tkbUZ5SUhOaklEMGdibVYzSUhCbExDQnZZeUE5SUc1bGR5QndaU3dnY0hNZ1BTQmJYU3dnZEhJZ1BTQnVaWGNnYzNRc0lIaGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QnpkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbWx1YzNSaGJtTmxUV0YwY21sNElEMGdibVYzSUZodUtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb2JpQXFJREUyS1N3Z01UWXBMQ0IwYUdsekxtbHVjM1JoYm1ObFEyOXNiM0lnUFNCdWRXeHNMQ0IwYUdsekxtTnZkVzUwSUQwZ2Jpd2dkR2hwY3k1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXBibk4wWVc1alpVMWhkSEpwZUM1amIzQjVLR1V1YVc1emRHRnVZMlZOWVhSeWFYZ3BMQ0JsTG1sdWMzUmhibU5sUTI5c2IzSWdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVhVzV6ZEdGdVkyVkRiMnh2Y2lBOUlHVXVhVzV6ZEdGdVkyVkRiMnh2Y2k1amJHOXVaU2dwS1N3Z2RHaHBjeTVqYjNWdWRDQTlJR1V1WTI5MWJuUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEYjJ4dmNrRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBMbVp5YjIxQmNuSmhlU2gwYUdsekxtbHVjM1JoYm1ObFEyOXNiM0l1WVhKeVlYa3NJR1VnS2lBektUc0tJQ0FnSUgwS0lDQWdJR2RsZEUxaGRISnBlRUYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwTG1aeWIyMUJjbkpoZVNoMGFHbHpMbWx1YzNSaGJtTmxUV0YwY21sNExtRnljbUY1TENCbElDb2dNVFlwT3dvZ0lDQWdmUW9nSUNBZ2NtRjVZMkZ6ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtMWhkSEpwZUZkdmNteGtMQ0JwSUQwZ2RHaHBjeTVqYjNWdWREc0tJQ0FnSUNBZ0lDQnBaaUFvZEhJdVoyVnZiV1YwY25rZ1BTQjBhR2x6TG1kbGIyMWxkSEo1TENCMGNpNXRZWFJsY21saGJDQTlJSFJvYVhNdWJXRjBaWEpwWVd3c0lIUnlMbTFoZEdWeWFXRnNJQ0U5UFNCMmIybGtJREFwSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnUENCcE95QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFMWhkSEpwZUVGMEtISXNJSE5qS1N3Z2IyTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aHVMQ0J6WXlrc0lIUnlMbTFoZEhKcGVGZHZjbXhrSUQwZ2IyTXNJSFJ5TG5KaGVXTmhjM1FvWlN3Z2NITXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdMQ0JoSUQwZ2NITXViR1Z1WjNSb095QnZJRHdnWVRzZ2J5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdjSE5iYjEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc0xtbHVjM1JoYm1ObFNXUWdQU0J5TENCc0xtOWlhbVZqZENBOUlIUm9hWE1zSUhRdWNIVnphQ2hzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCd2N5NXNaVzVuZEdnZ1BTQXdPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhObGRFTnZiRzl5UVhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhVzV6ZEdGdVkyVkRiMnh2Y2lBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1cGJuTjBZVzVqWlVOdmJHOXlJRDBnYm1WM0lGaHVLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29kR2hwY3k1cGJuTjBZVzVqWlUxaGRISnBlQzVqYjNWdWRDQXFJRE1wTENBektTa3NJSFF1ZEc5QmNuSmhlU2gwYUdsekxtbHVjM1JoYm1ObFEyOXNiM0l1WVhKeVlYa3NJR1VnS2lBektUc0tJQ0FnSUgwS0lDQWdJSE5sZEUxaGRISnBlRUYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwTG5SdlFYSnlZWGtvZEdocGN5NXBibk4wWVc1alpVMWhkSEpwZUM1aGNuSmhlU3dnWlNBcUlERTJLVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTF2Y25Cb1ZHRnlaMlYwY3lncElIdDlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0prYVhOd2IzTmxJZ29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUXA5T3dwNFlTNXdjbTkwYjNSNWNHVXVhWE5KYm5OMFlXNWpaV1JOWlhOb0lEMGdJVEE3Q25aaGNpQm1kQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdaSFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUR2x1WlVKaGMybGpUV0YwWlhKcFlXd2lMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1N3Z2RHaHBjeTVzYVc1bGQybGtkR2dnUFNBeExDQjBhR2x6TG14cGJtVmpZWEFnUFNBaWNtOTFibVFpTENCMGFHbHpMbXhwYm1WcWIybHVJRDBnSW5KdmRXNWtJaXdnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1amIyeHZjaTVqYjNCNUtHVXVZMjlzYjNJcExDQjBhR2x6TG14cGJtVjNhV1IwYUNBOUlHVXViR2x1WlhkcFpIUm9MQ0IwYUdsekxteHBibVZqWVhBZ1BTQmxMbXhwYm1WallYQXNJSFJvYVhNdWJHbHVaV3B2YVc0Z1BTQmxMbXhwYm1WcWIybHVMQ0IwYUdsek93b2dJQ0FnZlFwOU93cG1kQzV3Y205MGIzUjVjR1V1YVhOTWFXNWxRbUZ6YVdOTllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1lXTWdQU0J1WlhjZ1RTd2diR01nUFNCdVpYY2dUU3dnWTJNZ1BTQnVaWGNnY0dVc0lGaHZJRDBnYm1WM0lFTnVMQ0J0Y3lBOUlHNWxkeUJCYml3Z2IyNGdQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dYMlVzSUhRZ1BTQnVaWGNnWm5RcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa3hwYm1VaUxDQjBhR2x6TG1kbGIyMWxkSEo1SUQwZ1pTd2dkR2hwY3k1dFlYUmxjbWxoYkNBOUlIUXNJSFJvYVhNdWRYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUdVdWJXRjBaWEpwWVd3c0lIUm9hWE11WjJWdmJXVjBjbmtnUFNCbExtZGxiMjFsZEhKNUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlV4cGJtVkVhWE4wWVc1alpYTW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1selFuVm1abVZ5UjJWdmJXVjBjbmtwSUdsbUlDaGxMbWx1WkdWNElEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQnVJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUFvZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXhMQ0J5SUQwZ2RDNWpiM1Z1ZERzZ2FTQThJSEk3SUdrckt5bGhZeTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hRc0lHa2dMU0F4S1N3Z2JHTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCcEtTd2dibHRwWFNBOUlHNWJhU0F0SURGZExDQnVXMmxkSUNzOUlHRmpMbVJwYzNSaGJtTmxWRzhvYkdNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5ObGRFRjBkSEpwWW5WMFpTZ2liR2x1WlVScGMzUmhibU5sSWl3Z2JtVjNJR1JsS0c0c0lERXBLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVc1bExtTnZiWEIxZEdWTWFXNWxSR2x6ZEdGdVkyVnpLQ2s2SUVOdmJYQjFkR0YwYVc5dUlHOXViSGtnY0c5emMybGliR1VnZDJsMGFDQnViMjR0YVc1a1pYaGxaQ0JDZFdabVpYSkhaVzl0WlhSeWVTNGlLVHNLSUNBZ0lDQWdJQ0JsYkhObElHVXVhWE5IWlc5dFpYUnllU0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU1hVzVsTG1OdmJYQjFkR1ZNYVc1bFJHbHpkR0Z1WTJWektDa2dibThnYkc5dVoyVnlJSE4xY0hCdmNuUnpJRlJJVWtWRkxrZGxiMjFsZEhKNUxpQlZjMlVnVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKaGVXTmhjM1FvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1blpXOXRaWFJ5ZVN3Z2FTQTlJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXNJSElnUFNCbExuQmhjbUZ0Y3k1TWFXNWxMblJvY21WemFHOXNaQ3dnYnlBOUlHNHVaSEpoZDFKaGJtZGxPd29nSUNBZ0lDQWdJR2xtSUNodUxtSnZkVzVrYVc1blUzQm9aWEpsSUQwOVBTQnVkV3hzSUNZbUlHNHVZMjl0Y0hWMFpVSnZkVzVrYVc1blUzQm9aWEpsS0Nrc0lHMXpMbU52Y0hrb2JpNWliM1Z1WkdsdVoxTndhR1Z5WlNrc0lHMXpMbUZ3Y0d4NVRXRjBjbWw0TkNocEtTd2diWE11Y21Ga2FYVnpJQ3M5SUhJc0lHVXVjbUY1TG1sdWRHVnljMlZqZEhOVGNHaGxjbVVvYlhNcElEMDlQU0FoTVNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUdOakxtTnZjSGtvYVNrdWFXNTJaWEowS0Nrc0lGaHZMbU52Y0hrb1pTNXlZWGtwTG1Gd2NHeDVUV0YwY21sNE5DaGpZeWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J5SUM4Z0tDaDBhR2x6TG5OallXeGxMbmdnS3lCMGFHbHpMbk5qWVd4bExua2dLeUIwYUdsekxuTmpZV3hsTG5vcElDOGdNeWtzSUd3Z1BTQmhJQ29nWVN3Z1l5QTlJRzVsZHlCTkxDQm9JRDBnYm1WM0lFMHNJSFVnUFNCdVpYY2dUU3dnWkNBOUlHNWxkeUJOTENCbUlEMGdkR2hwY3k1cGMweHBibVZUWldkdFpXNTBjeUEvSURJZ09pQXhPd29nSUNBZ0lDQWdJR2xtSUNodUxtbHpRblZtWm1WeVIyVnZiV1YwY25rcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0J1TG1sdVpHVjRMQ0IySUQwZ2JpNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iU0FoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHY2dQU0JOWVhSb0xtMWhlQ2d3TENCdkxuTjBZWEowS1N3Z2NDQTlJRTFoZEdndWJXbHVLRzB1WTI5MWJuUXNJRzh1YzNSaGNuUWdLeUJ2TG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdYeUE5SUdjc0lIa2dQU0J3SUMwZ01Uc2dYeUE4SUhrN0lGOGdLejBnWmlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQnRMbWRsZEZnb1h5a3NJRUVnUFNCdExtZGxkRmdvWHlBcklERXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZGl3Z1lpa3NJR2d1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMkxDQkJLU3dnV0c4dVpHbHpkR0Z1WTJWVGNWUnZVMlZuYldWdWRDaGpMQ0JvTENCa0xDQjFLU0ErSUd3cElHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1F1WVhCd2JIbE5ZWFJ5YVhnMEtIUm9hWE11YldGMGNtbDRWMjl5YkdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCSklEMGdaUzV5WVhrdWIzSnBaMmx1TG1ScGMzUmhibU5sVkc4b1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnU1NBOElHVXVibVZoY2lCOGZDQkpJRDRnWlM1bVlYSWdmSHdnZEM1d2RYTm9LSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJRWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YVc1ME9pQjFMbU5zYjI1bEtDa3VZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXViV0YwY21sNFYyOXliR1FwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVEb2dYeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabUZqWlRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabUZqWlVsdVpHVjRPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1E2SUhSb2FYTUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JuSUQwZ1RXRjBhQzV0WVhnb01Dd2dieTV6ZEdGeWRDa3NJSEFnUFNCTllYUm9MbTFwYmloMkxtTnZkVzUwTENCdkxuTjBZWEowSUNzZ2J5NWpiM1Z1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY4Z1BTQm5MQ0I1SUQwZ2NDQXRJREU3SUY4Z1BDQjVPeUJmSUNzOUlHWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZGl3Z1h5a3NJR2d1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMkxDQmZJQ3NnTVNrc0lGaHZMbVJwYzNSaGJtTmxVM0ZVYjFObFoyMWxiblFvWXl3Z2FDd2daQ3dnZFNrZ1BpQnNLU0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa0xtRndjR3g1VFdGMGNtbDROQ2gwYUdsekxtMWhkSEpwZUZkdmNteGtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRU0E5SUdVdWNtRjVMbTl5YVdkcGJpNWthWE4wWVc1alpWUnZLR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFRWdQQ0JsTG01bFlYSWdmSHdnUVNBK0lHVXVabUZ5SUh4OElIUXVjSFZ6YUNoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzUmhibU5sT2lCQkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IybHVkRG9nZFM1amJHOXVaU2dwTG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6TG0xaGRISnBlRmR2Y214a0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtaWGc2SUY4c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdaaFkyVTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdaaFkyVkpibVJsZURvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOME9pQjBhR2x6Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYmk1cGMwZGxiMjFsZEhKNUlDWW1JR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGt4cGJtVXVjbUY1WTJGemRDZ3BJRzV2SUd4dmJtZGxjaUJ6ZFhCd2IzSjBjeUJVU0ZKRlJTNUhaVzl0WlhSeWVTNGdWWE5sSUZSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUlHbHVjM1JsWVdRdUlpazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5iM0p3YUZSaGNtZGxkSE1vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbWRsYjIxbGRISjVPd29nSUNBZ0lDQWdJR2xtSUNobExtbHpRblZtWm1WeVIyVnZiV1YwY25rcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG0xdmNuQm9RWFIwY21saWRYUmxjeXdnYmlBOUlFOWlhbVZqZEM1clpYbHpLSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYmk1c1pXNW5kR2dnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUmJibHN3WFYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTWdQU0JiWFN3Z2RHaHBjeTV0YjNKd2FGUmhjbWRsZEVScFkzUnBiMjVoY25rZ1BTQjdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0J2SUQwZ2FTNXNaVzVuZEdnN0lISWdQQ0J2T3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHbGJjbDB1Ym1GdFpTQjhmQ0JUZEhKcGJtY29jaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpMbkIxYzJnb01Da3NJSFJvYVhNdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVXMkZkSUQwZ2Nqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1Ylc5eWNHaFVZWEpuWlhSek93b2dJQ0FnSUNBZ0lDQWdJQ0IwSUNFOVBTQjJiMmxrSURBZ0ppWWdkQzVzWlc1bmRHZ2dQaUF3SUNZbUlHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa3hwYm1VdWRYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDa2daRzlsY3lCdWIzUWdjM1Z3Y0c5eWRDQlVTRkpGUlM1SFpXOXRaWFJ5ZVM0Z1ZYTmxJRlJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1SUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOU93cHZiaTV3Y205MGIzUjVjR1V1YVhOTWFXNWxJRDBnSVRBN0NuWmhjaUJvWXlBOUlHNWxkeUJOTENCMVl5QTlJRzVsZHlCTkxDQjNkQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiMjRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lreHBibVZUWldkdFpXNTBjeUk3Q2lBZ0lDQjlDaUFnSUNCamIyMXdkWFJsVEdsdVpVUnBjM1JoYm1ObGN5Z3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVoyVnZiV1YwY25rN0NpQWdJQ0FnSUNBZ2FXWWdLR1V1YVhOQ2RXWm1aWEpIWlc5dFpYUnllU2tnYVdZZ0tHVXVhVzVrWlhnZ1BUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG1GMGRISnBZblYwWlhNdWNHOXphWFJwYjI0c0lHNGdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJSFF1WTI5MWJuUTdJR2tnUENCeU95QnBJQ3M5SURJcGFHTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCcEtTd2dkV011Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMExDQnBJQ3NnTVNrc0lHNWJhVjBnUFNCcElEMDlQU0F3SUQ4Z01DQTZJRzViYVNBdElERmRMQ0J1VzJrZ0t5QXhYU0E5SUc1YmFWMGdLeUJvWXk1a2FYTjBZVzVqWlZSdktIVmpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNXpaWFJCZEhSeWFXSjFkR1VvSW14cGJtVkVhWE4wWVc1alpTSXNJRzVsZHlCa1pTaHVMQ0F4S1NrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbHVaVk5sWjIxbGJuUnpMbU52YlhCMWRHVk1hVzVsUkdsemRHRnVZMlZ6S0NrNklFTnZiWEIxZEdGMGFXOXVJRzl1YkhrZ2NHOXpjMmxpYkdVZ2QybDBhQ0J1YjI0dGFXNWtaWGhsWkNCQ2RXWm1aWEpIWlc5dFpYUnllUzRpS1RzS0lDQWdJQ0FnSUNCbGJITmxJR1V1YVhOSFpXOXRaWFJ5ZVNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVNYVc1bFUyVm5iV1Z1ZEhNdVkyOXRjSFYwWlV4cGJtVkVhWE4wWVc1alpYTW9LU0J1YnlCc2IyNW5aWElnYzNWd2NHOXlkSE1nVkVoU1JVVXVSMlZ2YldWMGNua3VJRlZ6WlNCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUXA5T3dwM2RDNXdjbTkwYjNSNWNHVXVhWE5NYVc1bFUyVm5iV1Z1ZEhNZ1BTQWhNRHNLZG1GeUlIbGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QnZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRHbHVaVXh2YjNBaU93b2dJQ0FnZlFwOU93cDVZUzV3Y205MGIzUjVjR1V1YVhOTWFXNWxURzl2Y0NBOUlDRXdPd3AyWVhJZ2FtNGdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsQnZhVzUwYzAxaGRHVnlhV0ZzSWl3Z2RHaHBjeTVqYjJ4dmNpQTlJRzVsZHlCaFpTZ3hOamMzTnpJeE5Ta3NJSFJvYVhNdWJXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVjMmw2WlNBOUlERXNJSFJvYVhNdWMybDZaVUYwZEdWdWRXRjBhVzl1SUQwZ0lUQXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WTI5c2IzSXVZMjl3ZVNobExtTnZiRzl5S1N3Z2RHaHBjeTV0WVhBZ1BTQmxMbTFoY0N3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUdVdVlXeHdhR0ZOWVhBc0lIUm9hWE11YzJsNlpTQTlJR1V1YzJsNlpTd2dkR2hwY3k1emFYcGxRWFIwWlc1MVlYUnBiMjRnUFNCbExuTnBlbVZCZEhSbGJuVmhkR2x2Yml3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLYW00dWNISnZkRzkwZVhCbExtbHpVRzlwYm5SelRXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlHUmpJRDBnYm1WM0lIQmxMQ0J6WVNBOUlHNWxkeUJEYml3Z1ozTWdQU0J1WlhjZ1FXNHNJSGh6SUQwZ2JtVjNJRTBzSUhweUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lGOWxMQ0IwSUQwZ2JtVjNJR3B1S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlFiMmx1ZEhNaUxDQjBhR2x6TG1kbGIyMWxkSEo1SUQwZ1pTd2dkR2hwY3k1dFlYUmxjbWxoYkNBOUlIUXNJSFJvYVhNdWRYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUdVdWJXRjBaWEpwWVd3c0lIUm9hWE11WjJWdmJXVjBjbmtnUFNCbExtZGxiMjFsZEhKNUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtRjVZMkZ6ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtZGxiMjFsZEhKNUxDQnBJRDBnZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ3dnY2lBOUlHVXVjR0Z5WVcxekxsQnZhVzUwY3k1MGFISmxjMmh2YkdRc0lHOGdQU0J1TG1SeVlYZFNZVzVuWlRzS0lDQWdJQ0FnSUNCcFppQW9iaTVpYjNWdVpHbHVaMU53YUdWeVpTQTlQVDBnYm5Wc2JDQW1KaUJ1TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMU53YUdWeVpTZ3BMQ0JuY3k1amIzQjVLRzR1WW05MWJtUnBibWRUY0dobGNtVXBMQ0JuY3k1aGNIQnNlVTFoZEhKcGVEUW9hU2tzSUdkekxuSmhaR2wxY3lBclBTQnlMQ0JsTG5KaGVTNXBiblJsY25ObFkzUnpVM0JvWlhKbEtHZHpLU0E5UFQwZ0lURXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQmtZeTVqYjNCNUtHa3BMbWx1ZG1WeWRDZ3BMQ0J6WVM1amIzQjVLR1V1Y21GNUtTNWhjSEJzZVUxaGRISnBlRFFvWkdNcE93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2NpQXZJQ2dvZEdocGN5NXpZMkZzWlM1NElDc2dkR2hwY3k1elkyRnNaUzU1SUNzZ2RHaHBjeTV6WTJGc1pTNTZLU0F2SURNcExDQnNJRDBnWVNBcUlHRTdDaUFnSUNBZ0lDQWdhV1lnS0c0dWFYTkNkV1ptWlhKSFpXOXRaWFJ5ZVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzR1YVc1a1pYZ3NJSFVnUFNCdUxtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpJQ0U5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJRTFoZEdndWJXRjRLREFzSUc4dWMzUmhjblFwTENCbUlEMGdUV0YwYUM1dGFXNG9ZeTVqYjNWdWRDd2dieTV6ZEdGeWRDQXJJRzh1WTI5MWJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnRJRDBnWkN3Z2VDQTlJR1k3SUcwZ1BDQjRPeUJ0S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdZeTVuWlhSWUtHMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhoekxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kU3dnZGlrc0lHWmpLSGh6TENCMkxDQnNMQ0JwTENCbExDQjBMQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdUV0YwYUM1dFlYZ29NQ3dnYnk1emRHRnlkQ2tzSUdZZ1BTQk5ZWFJvTG0xcGJpaDFMbU52ZFc1MExDQnZMbk4wWVhKMElDc2dieTVqYjNWdWRDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMGdQU0JrTENCNElEMGdaanNnYlNBOElIZzdJRzByS3lsNGN5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFVzSUcwcExDQm1ZeWg0Y3l3Z2JTd2diQ3dnYVN3Z1pTd2dkQ3dnZEdocGN5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVHOXBiblJ6TG5KaGVXTmhjM1FvS1NCdWJ5QnNiMjVuWlhJZ2MzVndjRzl5ZEhNZ1ZFaFNSVVV1UjJWdmJXVjBjbmt1SUZWelpTQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1blpXOXRaWFJ5ZVRzS0lDQWdJQ0FnSUNCcFppQW9aUzVwYzBKMVptWmxja2RsYjIxbGRISjVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNXRiM0p3YUVGMGRISnBZblYwWlhNc0lHNGdQU0JQWW1wbFkzUXVhMlY1Y3loMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNHViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwVzI1Yk1GMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUQwZ1cxMHNJSFJvYVhNdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVJRDBnZTMwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR2t1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0JwVzNKZExtNWhiV1VnZkh3Z1UzUnlhVzVuS0hJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3k1d2RYTm9LREFwTENCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwUkdsamRHbHZibUZ5ZVZ0aFhTQTlJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExtMXZjbkJvVkdGeVoyVjBjenNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQWhQVDBnZG05cFpDQXdJQ1ltSUhRdWJHVnVaM1JvSUQ0Z01DQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWIybHVkSE11ZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrZ1pHOWxjeUJ1YjNRZ2MzVndjRzl5ZENCVVNGSkZSUzVIWlc5dFpYUnllUzRnVlhObElGUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5T3dwNmNpNXdjbTkwYjNSNWNHVXVhWE5RYjJsdWRITWdQU0FoTURzS1puVnVZM1JwYjI0Z1ptTW9jeXdnWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdiR1YwSUdFZ1BTQnpZUzVrYVhOMFlXNWpaVk54Vkc5UWIybHVkQ2h6S1RzS0lDQWdJR2xtSUNoaElEd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdjMkV1WTJ4dmMyVnpkRkJ2YVc1MFZHOVFiMmx1ZENoekxDQnNLU3dnYkM1aGNIQnNlVTFoZEhKcGVEUW9iaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0JwTG5KaGVTNXZjbWxuYVc0dVpHbHpkR0Z1WTJWVWJ5aHNLVHNLSUNBZ0lDQWdJQ0JwWmlBb1l5QThJR2t1Ym1WaGNpQjhmQ0JqSUQ0Z2FTNW1ZWElwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0J5TG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNCa2FYTjBZVzVqWlRvZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlZVYjFKaGVUb2dUV0YwYUM1emNYSjBLR0VwTEFvZ0lDQWdJQ0FnSUNBZ0lDQndiMmx1ZERvZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZzZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWmhZMlU2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nYndvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnZlFwOUNuWmhjaUIzYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYjNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDd2dZeWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NW1iM0p0WVhRZ1BTQmhJQ0U5UFNCMmIybGtJREFnUHlCaElEb2dSMjRzSUhSb2FYTXViV2x1Um1sc2RHVnlJRDBnYnlBaFBUMGdkbTlwWkNBd0lEOGdieUE2SUhSMExDQjBhR2x6TG0xaFowWnBiSFJsY2lBOUlISWdJVDA5SUhadmFXUWdNQ0EvSUhJZ09pQjBkQ3dnZEdocGN5NW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJSFJvYVhNN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RTZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQmxMbkpsY1hWbGMzUldhV1JsYjBaeVlXMWxRMkZzYkdKaFkyc29kU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNKeVpYRjFaWE4wVm1sa1pXOUdjbUZ0WlVOaGJHeGlZV05ySWlCcGJpQmxJQ1ltSUdVdWNtVnhkV1Z6ZEZacFpHVnZSbkpoYldWRFlXeHNZbUZqYXloMUtUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxtbHRZV2RsS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1cGJXRm5aVHNLSUNBZ0lDQWdJQ0FpY21WeGRXVnpkRlpwWkdWdlJuSmhiV1ZEWVd4c1ltRmpheUlnYVc0Z1pTQTlQVDBnSVRFZ0ppWWdaUzV5WldGa2VWTjBZWFJsSUQ0OUlHVXVTRUZXUlY5RFZWSlNSVTVVWDBSQlZFRWdKaVlnS0hSb2FYTXVibVZsWkhOVmNHUmhkR1VnUFNBaE1DazdDaUFnSUNCOUNuMDdDbmRvTG5CeWIzUnZkSGx3WlM1cGMxWnBaR1Z2VkdWNGRIVnlaU0E5SUNFd093cDJZWElnVTJnZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUc5MElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0hzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lIUm9hWE11Wm05eWJXRjBJRDBnYml3Z2RHaHBjeTV0WVdkR2FXeDBaWElnUFNCeWRDd2dkR2hwY3k1dGFXNUdhV3gwWlhJZ1BTQnlkQ3dnZEdocGN5NW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNU3dnZEdocGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFwOU93cFRhQzV3Y205MGIzUjVjR1V1YVhOR2NtRnRaV0oxWm1abGNsUmxlSFIxY21VZ1BTQWhNRHNLZG1GeUlIWmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QnZkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoTENCc0xDQmpMQ0JvTENCMUxDQmtLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVkV3hzTENCdkxDQmhMQ0JzTENCakxDQm9MQ0JwTENCeUxDQjFMQ0JrS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbWx0WVdkbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQnVDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXRhWEJ0WVhCeklEMGdaU3dnZEdocGN5NW1iR2x3V1NBOUlDRXhMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhPd29nSUNBZ2ZRcDlPd3AyWVM1d2NtOTBiM1I1Y0dVdWFYTkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpTQTlJQ0V3T3dwMllYSWdWR2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzkwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01wZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTXBPd29nSUNBZ0lDQWdJSFJvYVhNdWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLZlRzS1ZHZ3VjSEp2ZEc5MGVYQmxMbWx6UTJGdWRtRnpWR1Y0ZEhWeVpTQTlJQ0V3T3dwMllYSWdabklnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ09Dd2diaUE5SURBc0lHa2dQU0JOWVhSb0xsQkpJQ29nTWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRMmx5WTJ4bFIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlZuYldWdWRITTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVTNSaGNuUTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVEdWdVozUm9PaUJwQ2lBZ0lDQWdJQ0FnZlN3Z2RDQTlJRTFoZEdndWJXRjRLRE1zSUhRcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ1cxMHNJRzhnUFNCYlhTd2dZU0E5SUZ0ZExDQnNJRDBnVzEwc0lHTWdQU0J1WlhjZ1RTd2dhQ0E5SUc1bGR5QllPd29nSUNBZ0lDQWdJRzh1Y0hWemFDZ3dMQ0F3TENBd0tTd2dZUzV3ZFhOb0tEQXNJREFzSURFcExDQnNMbkIxYzJnb0xqVXNJQzQxS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhVZ1BTQXdMQ0JrSUQwZ016c2dkU0E4UFNCME95QjFLeXNzSUdRZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2JpQXJJSFVnTHlCMElDb2dhVHNLSUNBZ0lDQWdJQ0FnSUNBZ1l5NTRJRDBnWlNBcUlFMWhkR2d1WTI5ektHWXBMQ0JqTG5rZ1BTQmxJQ29nVFdGMGFDNXphVzRvWmlrc0lHOHVjSFZ6YUNoakxuZ3NJR011ZVN3Z1l5NTZLU3dnWVM1d2RYTm9LREFzSURBc0lERXBMQ0JvTG5nZ1BTQW9iMXRrWFNBdklHVWdLeUF4S1NBdklESXNJR2d1ZVNBOUlDaHZXMlFnS3lBeFhTQXZJR1VnS3lBeEtTQXZJRElzSUd3dWNIVnphQ2hvTG5nc0lHZ3VlU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZFNBOUlERTdJSFVnUEQwZ2REc2dkU3NyS1hJdWNIVnphQ2gxTENCMUlDc2dNU3dnTUNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSSmJtUmxlQ2h5S1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHOHNJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNWxkeUJrWlNoaExDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCa1pTaHNMQ0F5S1NrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnWm5Jb1pTNXlZV1JwZFhNc0lHVXVjMlZuYldWdWRITXNJR1V1ZEdobGRHRlRkR0Z5ZEN3Z1pTNTBhR1YwWVV4bGJtZDBhQ2s3Q2lBZ0lDQjlDbjBzSUVwdUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCZlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJREVzSUc0Z1BTQXhMQ0JwSUQwZ09Dd2djaUE5SURFc0lHOGdQU0FoTVN3Z1lTQTlJREFzSUd3Z1BTQk5ZWFJvTGxCSklDb2dNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEzbHNhVzVrWlhKSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpWRzl3T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTkNiM1IwYjIwNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVdGc1UyVm5iV1Z1ZEhNNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRk5sWjIxbGJuUnpPaUJ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnZjR1Z1Ulc1a1pXUTZJRzhzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVTNSaGNuUTZJR0VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVEdWdVozUm9PaUJzQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUhSb2FYTTdDaUFnSUNBZ0lDQWdhU0E5SUUxaGRHZ3VabXh2YjNJb2FTa3NJSElnUFNCTllYUm9MbVpzYjI5eUtISXBPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdXMTBzSUhVZ1BTQmJYU3dnWkNBOUlGdGRMQ0JtSUQwZ1cxMHNJRzBnUFNBd0xDQjRJRDBnVzEwc0lIWWdQU0J1SUM4Z01pd2daeUE5SURBN0NpQWdJQ0FnSUNBZ2NDZ3BMQ0J2SUQwOVBTQWhNU0FtSmlBb1pTQStJREFnSmlZZ1h5Z2hNQ2tzSUhRZ1BpQXdJQ1ltSUY4b0lURXBLU3dnZEdocGN5NXpaWFJKYm1SbGVDaG9LU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0hVc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QmtaU2hrTENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJrWlNobUxDQXlLU2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnY0NncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIa2dQU0J1WlhjZ1RTd2dZaUE5SUc1bGR5Qk5MQ0JCSUQwZ01Dd2dUQ0E5SUNoMElDMGdaU2tnTHlCdU93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRWtnUFNBd095QkpJRHc5SUhJN0lFa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2F5QTlJRnRkTENCQ0lEMGdTU0F2SUhJc0lGQWdQU0JDSUNvZ0tIUWdMU0JsS1NBcklHVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIY2dQU0F3T3lCM0lEdzlJR2s3SUhjckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0IzSUM4Z2FTd2dSQ0E5SUVVZ0tpQnNJQ3NnWVN3Z1ZTQTlJRTFoZEdndWMybHVLRVFwTENCR0lEMGdUV0YwYUM1amIzTW9SQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpNTRJRDBnVUNBcUlGVXNJR0l1ZVNBOUlDMUNJQ29nYmlBcklIWXNJR0l1ZWlBOUlGQWdLaUJHTENCMUxuQjFjMmdvWWk1NExDQmlMbmtzSUdJdWVpa3NJSGt1YzJWMEtGVXNJRXdzSUVZcExtNXZjbTFoYkdsNlpTZ3BMQ0JrTG5CMWMyZ29lUzU0TENCNUxua3NJSGt1ZWlrc0lHWXVjSFZ6YUNoRkxDQXhJQzBnUWlrc0lHc3VjSFZ6YUNodEt5c3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQzV3ZFhOb0tHc3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdTU0E5SURBN0lFa2dQQ0JwT3lCSkt5c3BabTl5S0d4bGRDQnJJRDBnTURzZ2F5QThJSEk3SUdzckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUWlBOUlIaGJhMTFiU1Ywc0lGQWdQU0I0VzJzZ0t5QXhYVnRKWFN3Z2R5QTlJSGhiYXlBcklERmRXMGtnS3lBeFhTd2dSU0E5SUhoYmExMWJTU0FySURGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FDNXdkWE5vS0VJc0lGQXNJRVVwTENCb0xuQjFjMmdvVUN3Z2R5d2dSU2tzSUVFZ0t6MGdOanNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JqTG1Ga1pFZHliM1Z3S0djc0lFRXNJREFwTENCbklDczlJRUU3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUY4b2VTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZaUE5SUcwc0lFRWdQU0J1WlhjZ1dDd2dUQ0E5SUc1bGR5Qk5MQ0JKSUQwZ01Dd2dheUE5SUhrZ1BUMDlJQ0V3SUQ4Z1pTQTZJSFFzSUVJZ1BTQjVJRDA5UFNBaE1DQS9JREVnT2lBdE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IzSUQwZ01Uc2dkeUE4UFNCcE95QjNLeXNwZFM1d2RYTm9LREFzSUhZZ0tpQkNMQ0F3S1N3Z1pDNXdkWE5vS0RBc0lFSXNJREFwTENCbUxuQjFjMmdvTGpVc0lDNDFLU3dnYlNzck93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VDQTlJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2R5QTlJREE3SUhjZ1BEMGdhVHNnZHlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JFSUQwZ2R5QXZJR2tnS2lCc0lDc2dZU3dnVlNBOUlFMWhkR2d1WTI5ektFUXBMQ0JHSUQwZ1RXRjBhQzV6YVc0b1JDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQk1MbmdnUFNCcklDb2dSaXdnVEM1NUlEMGdkaUFxSUVJc0lFd3VlaUE5SUdzZ0tpQlZMQ0IxTG5CMWMyZ29UQzU0TENCTUxua3NJRXd1ZWlrc0lHUXVjSFZ6YUNnd0xDQkNMQ0F3S1N3Z1FTNTRJRDBnVlNBcUlDNDFJQ3NnTGpVc0lFRXVlU0E5SUVZZ0tpQXVOU0FxSUVJZ0t5QXVOU3dnWmk1d2RYTm9LRUV1ZUN3Z1FTNTVLU3dnYlNzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2R5QTlJREE3SUhjZ1BDQnBPeUIzS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCaUlDc2dkeXdnUkNBOUlGQWdLeUIzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVNBOVBUMGdJVEFnUHlCb0xuQjFjMmdvUkN3Z1JDQXJJREVzSUVVcElEb2dhQzV3ZFhOb0tFUWdLeUF4TENCRUxDQkZLU3dnU1NBclBTQXpPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR011WVdSa1IzSnZkWEFvWnl3Z1NTd2dlU0E5UFQwZ0lUQWdQeUF4SURvZ01pa3NJR2NnS3owZ1NUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1NtNG9aUzV5WVdScGRYTlViM0FzSUdVdWNtRmthWFZ6UW05MGRHOXRMQ0JsTG1obGFXZG9kQ3dnWlM1eVlXUnBZV3hUWldkdFpXNTBjeXdnWlM1b1pXbG5hSFJUWldkdFpXNTBjeXdnWlM1dmNHVnVSVzVrWldRc0lHVXVkR2hsZEdGVGRHRnlkQ3dnWlM1MGFHVjBZVXhsYm1kMGFDazdDaUFnSUNCOUNuMHNJSEJ5SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJLYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNU3dnZENBOUlERXNJRzRnUFNBNExDQnBJRDBnTVN3Z2NpQTlJQ0V4TENCdklEMGdNQ3dnWVNBOUlFMWhkR2d1VUVrZ0tpQXlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3dMQ0JsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRMjl1WlVkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FXRnNVMlZuYldWdWRITTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZEZObFoyMWxiblJ6T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0J2Y0dWdVJXNWtaV1E2SUhJc0NpQWdJQ0FnSUNBZ0lDQWdJSFJvWlhSaFUzUmhjblE2SUc4c0NpQWdJQ0FnSUNBZ0lDQWdJSFJvWlhSaFRHVnVaM1JvT2lCaENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCd2NpaGxMbkpoWkdsMWN5d2daUzVvWldsbmFIUXNJR1V1Y21Ga2FXRnNVMlZuYldWdWRITXNJR1V1YUdWcFoyaDBVMlZuYldWdWRITXNJR1V1YjNCbGJrVnVaR1ZrTENCbExuUm9aWFJoVTNSaGNuUXNJR1V1ZEdobGRHRk1aVzVuZEdncE93b2dJQ0FnZlFwOUxDQmhiaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdYMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlGdGRMQ0IwSUQwZ1cxMHNJRzRnUFNBeExDQnBJRDBnTUNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVRzlzZVdobFpISnZia2RsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowYVdObGN6b2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXNWthV05sY3pvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWFJoYVd3NklHa0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdXMTBzSUc4Z1BTQmJYVHNLSUNBZ0lDQWdJQ0JoS0drcExDQmpLRzRwTENCb0tDa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2h5TENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p1YjNKdFlXd2lMQ0J1WlhjZ1pHVW9jaTV6YkdsalpTZ3BMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QmtaU2h2TENBeUtTa3NJR2tnUFQwOUlEQWdQeUIwYUdsekxtTnZiWEIxZEdWV1pYSjBaWGhPYjNKdFlXeHpLQ2tnT2lCMGFHbHpMbTV2Y20xaGJHbDZaVTV2Y20xaGJITW9LVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJoS0hBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0J1WlhjZ1RTd2dlU0E5SUc1bGR5Qk5MQ0JpSUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1FTQTlJREE3SUVFZ1BDQjBMbXhsYm1kMGFEc2dRU0FyUFNBektXWW9kRnRCSUNzZ01GMHNJRjhwTENCbUtIUmJRU0FySURGZExDQjVLU3dnWmloMFcwRWdLeUF5WFN3Z1lpa3NJR3dvWHl3Z2VTd2dZaXdnY0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHd29jQ3dnWHl3Z2VTd2dZaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUVNBOUlHSWdLeUF4TENCTUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1NTQTlJREE3SUVrZ1BEMGdRVHNnU1NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFeGJTVjBnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JySUQwZ2NDNWpiRzl1WlNncExteGxjbkFvZVN3Z1NTQXZJRUVwTENCQ0lEMGdYeTVqYkc5dVpTZ3BMbXhsY25Bb2VTd2dTU0F2SUVFcExDQlFJRDBnUVNBdElFazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIY2dQU0F3T3lCM0lEdzlJRkE3SUhjckt5bDNJRDA5UFNBd0lDWW1JRWtnUFQwOUlFRWdQeUJNVzBsZFczZGRJRDBnYXlBNklFeGJTVjFiZDEwZ1BTQnJMbU5zYjI1bEtDa3ViR1Z5Y0NoQ0xDQjNJQzhnVUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSklEMGdNRHNnU1NBOElFRTdJRWtyS3lsbWIzSW9iR1YwSUdzZ1BTQXdPeUJySUR3Z01pQXFJQ2hCSUMwZ1NTa2dMU0F4T3lCckt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVJZ1BTQk5ZWFJvTG1ac2IyOXlLR3NnTHlBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHc2dKU0F5SUQwOVBTQXdJRDhnS0dRb1RGdEpYVnRDSUNzZ01WMHBMQ0JrS0V4YlNTQXJJREZkVzBKZEtTd2daQ2hNVzBsZFcwSmRLU2tnT2lBb1pDaE1XMGxkVzBJZ0t5QXhYU2tzSUdRb1RGdEpJQ3NnTVYxYlFpQXJJREZkS1N3Z1pDaE1XMGtnS3lBeFhWdENYU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR01vY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJRzVsZHlCTk93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGtnUFNBd095QjVJRHdnY2k1c1pXNW5kR2c3SUhrZ0t6MGdNeWxmTG5nZ1BTQnlXM2tnS3lBd1hTd2dYeTU1SUQwZ2NsdDVJQ3NnTVYwc0lGOHVlaUE5SUhKYmVTQXJJREpkTENCZkxtNXZjbTFoYkdsNlpTZ3BMbTExYkhScGNHeDVVMk5oYkdGeUtIQXBMQ0J5VzNrZ0t5QXdYU0E5SUY4dWVDd2djbHQ1SUNzZ01WMGdQU0JmTG5rc0lISmJlU0FySURKZElEMGdYeTU2T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCb0tDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUc1bGR5Qk5Pd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY4Z1BTQXdPeUJmSUR3Z2NpNXNaVzVuZEdnN0lGOGdLejBnTXlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd0xuZ2dQU0J5VzE4Z0t5QXdYU3dnY0M1NUlEMGdjbHRmSUNzZ01WMHNJSEF1ZWlBOUlISmJYeUFySURKZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCMktIQXBJQzhnTWlBdklFMWhkR2d1VUVrZ0t5QXVOU3dnWWlBOUlHY29jQ2tnTHlCTllYUm9MbEJKSUNzZ0xqVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZMbkIxYzJnb2VTd2dNU0F0SUdJcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHMG9LU3dnZFNncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQjFLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIQWdQU0F3T3lCd0lEd2dieTVzWlc1bmRHZzdJSEFnS3owZ05pbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlHOWJjQ0FySURCZExDQjVJRDBnYjF0d0lDc2dNbDBzSUdJZ1BTQnZXM0FnS3lBMFhTd2dRU0E5SUUxaGRHZ3ViV0Y0S0Y4c0lIa3NJR0lwTENCTUlEMGdUV0YwYUM1dGFXNG9YeXdnZVN3Z1lpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkJJRDRnTGprZ0ppWWdUQ0E4SUM0eElDWW1JQ2hmSUR3Z0xqSWdKaVlnS0c5YmNDQXJJREJkSUNzOUlERXBMQ0I1SUR3Z0xqSWdKaVlnS0c5YmNDQXJJREpkSUNzOUlERXBMQ0JpSUR3Z0xqSWdKaVlnS0c5YmNDQXJJRFJkSUNzOUlERXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmtLSEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjaTV3ZFhOb0tIQXVlQ3dnY0M1NUxDQndMbm9wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCbUtIQXNJRjhwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhrZ1BTQndJQ29nTXpzS0lDQWdJQ0FnSUNBZ0lDQWdYeTU0SUQwZ1pWdDVJQ3NnTUYwc0lGOHVlU0E5SUdWYmVTQXJJREZkTENCZkxub2dQU0JsVzNrZ0t5QXlYVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYlNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQWdQU0J1WlhjZ1RTd2dYeUE5SUc1bGR5Qk5MQ0I1SUQwZ2JtVjNJRTBzSUdJZ1BTQnVaWGNnVFN3Z1FTQTlJRzVsZHlCWUxDQk1JRDBnYm1WM0lGZ3NJRWtnUFNCdVpYY2dXRHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcklEMGdNQ3dnUWlBOUlEQTdJR3NnUENCeUxteGxibWQwYURzZ2F5QXJQU0E1TENCQ0lDczlJRFlwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0M1elpYUW9jbHRySUNzZ01GMHNJSEpiYXlBcklERmRMQ0J5VzJzZ0t5QXlYU2tzSUY4dWMyVjBLSEpiYXlBcklETmRMQ0J5VzJzZ0t5QTBYU3dnY2x0cklDc2dOVjBwTENCNUxuTmxkQ2h5VzJzZ0t5QTJYU3dnY2x0cklDc2dOMTBzSUhKYmF5QXJJRGhkS1N3Z1FTNXpaWFFvYjF0Q0lDc2dNRjBzSUc5YlFpQXJJREZkS1N3Z1RDNXpaWFFvYjF0Q0lDc2dNbDBzSUc5YlFpQXJJRE5kS1N3Z1NTNXpaWFFvYjF0Q0lDc2dORjBzSUc5YlFpQXJJRFZkS1N3Z1lpNWpiM0I1S0hBcExtRmtaQ2hmS1M1aFpHUW9lU2t1WkdsMmFXUmxVMk5oYkdGeUtETXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZBZ1BTQjJLR0lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUNoQkxDQkNJQ3NnTUN3Z2NDd2dVQ2tzSUhnb1RDd2dRaUFySURJc0lGOHNJRkFwTENCNEtFa3NJRUlnS3lBMExDQjVMQ0JRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUI0S0hBc0lGOHNJSGtzSUdJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWWlBOElEQWdKaVlnY0M1NElEMDlQU0F4SUNZbUlDaHZXMTlkSUQwZ2NDNTRJQzBnTVNrc0lIa3VlQ0E5UFQwZ01DQW1KaUI1TG5vZ1BUMDlJREFnSmlZZ0tHOWJYMTBnUFNCaUlDOGdNaUF2SUUxaGRHZ3VVRWtnS3lBdU5TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSFlvY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aGRHRnVNaWh3TG5vc0lDMXdMbmdwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCbktIQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VZWFJoYmpJb0xYQXVlU3dnVFdGMGFDNXpjWEowS0hBdWVDQXFJSEF1ZUNBcklIQXVlaUFxSUhBdWVpa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QmhiaWhsTG5abGNuUnBZMlZ6TENCbExtbHVaR2xqWlhNc0lHVXVjbUZrYVhWekxDQmxMbVJsZEdGcGJITXBPd29nSUNBZ2ZRcDlMQ0J0Y2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nWVc0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXdLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJQ2d4SUNzZ1RXRjBhQzV6Y1hKMEtEVXBLU0F2SURJc0lHa2dQU0F4SUM4Z2Jpd2djaUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMV2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0YVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnYVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdrc0NpQWdJQ0FnSUNBZ0lDQWdJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXBMQW9nSUNBZ0lDQWdJQ0FnSUNBdGJpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMV2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0Yml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXa3NDaUFnSUNBZ0lDQWdJQ0FnSUc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXBMQW9nSUNBZ0lDQWdJQ0FnSUNBdGJpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdhUW9nSUNBZ0lDQWdJRjBzSUc4Z1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJREV4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOU3dLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTVRVc0NpQWdJQ0FnSUNBZ0lDQWdJREV6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRjc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTNMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRjc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURFM0xBb2dJQ0FnSUNBZ0lDQWdJQ0E0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01UY3NDaUFnSUNBZ0lDQWdJQ0FnSURFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTRMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4Tml3S0lDQWdJQ0FnSUNBZ0lDQWdPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01UWXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01UZ3NDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOaXdLSUNBZ0lDQWdJQ0FnSUNBZ05pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRBc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJREV6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBeE15d0tJQ0FnSUNBZ0lDQWdJQ0FnTVRVc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTJMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdNVGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lERXpMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdPU3dLSUNBZ0lDQWdJQ0FnSUNBZ01UZ3NDaUFnSUNBZ0lDQWdJQ0FnSURrc0NpQWdJQ0FnSUNBZ0lDQWdJREV4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1pd0tJQ0FnSUNBZ0lDQWdJQ0FnTkN3S0lDQWdJQ0FnSUNBZ0lDQWdNVElzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURFeExBb2dJQ0FnSUNBZ0lDQWdJQ0E1TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdNVGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Td0tJQ0FnSUNBZ0lDQWdJQ0FnTnl3S0lDQWdJQ0FnSUNBZ0lDQWdNVGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURFMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4T1N3S0lDQWdJQ0FnSUNBZ0lDQWdNVFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURFNUxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOeXdLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRJc0NpQWdJQ0FnSUNBZ0lDQWdJREUwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ05Td0tJQ0FnSUNBZ0lDQWdJQ0FnT1FvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0FnSUNBZ2MzVndaWElvY2l3Z2J5d2daU3dnZENrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa1J2WkdWallXaGxaSEp2YmtkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxkR0ZwYkRvZ2RBb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2JYSW9aUzV5WVdScGRYTXNJR1V1WkdWMFlXbHNLVHNLSUNBZ0lIMEtmU3dnZVhNZ1BTQnVaWGNnVFN3Z2RuTWdQU0J1WlhjZ1RTd2dTbThnUFNCdVpYY2dUU3dnWDNNZ1BTQnVaWGNnYm5Rc0lGOWhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JuVnNiQ3dnZENBOUlERXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVkSGx3WlNBOUlDSkZaR2RsYzBkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JuWlc5dFpYUnllVG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdkR2h5WlhOb2IyeGtRVzVuYkdVNklIUUtJQ0FnSUNBZ0lDQjlMQ0JsSUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdUV0YwYUM1d2IzY29NVEFzSURRcExDQnlJRDBnVFdGMGFDNWpiM01vVjI0Z0tpQjBLU3dnYnlBOUlHVXVaMlYwU1c1a1pYZ29LU3dnWVNBOUlHVXVaMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJcExDQnNJRDBnYnlBL0lHOHVZMjkxYm5RZ09pQmhMbU52ZFc1MExDQmpJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0NpQWdJQ0FnSUNBZ0lDQWdJRjBzSUdnZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlZU0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpWWlJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaVl5SUtJQ0FnSUNBZ0lDQWdJQ0FnWFN3Z2RTQTlJRzVsZHlCQmNuSmhlU2d6S1N3Z1pDQTlJSHQ5TENCbUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQTlJREE3SUcwZ1BDQnNPeUJ0SUNzOUlETXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUEvSUNoald6QmRJRDBnYnk1blpYUllLRzBwTENCald6RmRJRDBnYnk1blpYUllLRzBnS3lBeEtTd2dZMXN5WFNBOUlHOHVaMlYwV0NodElDc2dNaWtwSURvZ0tHTmJNRjBnUFNCdExDQmpXekZkSUQwZ2JTQXJJREVzSUdOYk1sMGdQU0J0SUNzZ01pazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZXlCaE9pQjRJQ3dnWWpvZ2RpQXNJR002SUdjZ0lIMGdQU0JmY3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDRMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWVN3Z1kxc3dYU2tzSUhZdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGhMQ0JqV3pGZEtTd2daeTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dFc0lHTmJNbDBwTENCZmN5NW5aWFJPYjNKdFlXd29TbThwTENCMVd6QmRJRDBnWUNSN1RXRjBhQzV5YjNWdVpDaDRMbmdnS2lCcEtYMHNKSHROWVhSb0xuSnZkVzVrS0hndWVTQXFJR2twZlN3a2UwMWhkR2d1Y205MWJtUW9lQzU2SUNvZ2FTbDlZQ3dnZFZzeFhTQTlJR0FrZTAxaGRHZ3VjbTkxYm1Rb2RpNTRJQ29nYVNsOUxDUjdUV0YwYUM1eWIzVnVaQ2gyTG5rZ0tpQnBLWDBzSkh0TllYUm9Mbkp2ZFc1a0tIWXVlaUFxSUdrcGZXQXNJSFZiTWwwZ1BTQmdKSHROWVhSb0xuSnZkVzVrS0djdWVDQXFJR2twZlN3a2UwMWhkR2d1Y205MWJtUW9aeTU1SUNvZ2FTbDlMQ1I3VFdGMGFDNXliM1Z1WkNobkxub2dLaUJwS1gxZ0xDQWhLSFZiTUYwZ1BUMDlJSFZiTVYwZ2ZId2dkVnN4WFNBOVBUMGdkVnN5WFNCOGZDQjFXekpkSUQwOVBTQjFXekJkS1NrZ1ptOXlLR3hsZENCd0lEMGdNRHNnY0NBOElETTdJSEFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQW9jQ0FySURFcElDVWdNeXdnZVNBOUlIVmJjRjBzSUdJZ1BTQjFXMTlkTENCQklEMGdYM05iYUZ0d1hWMHNJRXdnUFNCZmMxdG9XMTlkWFN3Z1NTQTlJR0FrZTNsOVh5UjdZbjFnTENCcklEMGdZQ1I3WW4xZkpIdDVmV0E3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2F5QnBiaUJrSUNZbUlHUmJhMTBnUHlBb1NtOHVaRzkwS0dSYmExMHVibTl5YldGc0tTQThQU0J5SUNZbUlDaG1MbkIxYzJnb1FTNTRMQ0JCTG5rc0lFRXVlaWtzSUdZdWNIVnphQ2hNTG5nc0lFd3VlU3dnVEM1NktTa3NJR1JiYTEwZ1BTQnVkV3hzS1NBNklFa2dhVzRnWkNCOGZDQW9aRnRKWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtaWGd3T2lCalczQmRMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZURFNklHTmJYMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzV2Y20xaGJEb2dTbTh1WTJ4dmJtVW9LUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQnBiaUJrS1dsbUlDaGtXMjFkS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdleUJwYm1SbGVEQTZJSGdnTENCcGJtUmxlREU2SUhZZ0lIMGdQU0JrVzIxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VYTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hoTENCNEtTd2dkbk11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoaExDQjJLU3dnWmk1d2RYTm9LSGx6TG5nc0lIbHpMbmtzSUhsekxub3BMQ0JtTG5CMWMyZ29kbk11ZUN3Z2RuTXVlU3dnZG5NdWVpazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR1lzSURNcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMHNJRU4wSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRM1Z5ZG1VaUxDQjBhR2x6TG1GeVkweGxibWQwYUVScGRtbHphVzl1Y3lBOUlESXdNRHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrTjFjblpsT2lBdVoyVjBVRzlwYm5Rb0tTQnViM1FnYVcxd2JHVnRaVzUwWldRdUlpa3NJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WjJWMFZYUnZWRzFoY0hCcGJtY29aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBVRzlwYm5Rb2Jpd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZEhNb1pTQTlJRFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BEMGdaVHNnYmlzcktYUXVjSFZ6YUNoMGFHbHpMbWRsZEZCdmFXNTBLRzRnTHlCbEtTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNCOUNpQWdJQ0JuWlhSVGNHRmpaV1JRYjJsdWRITW9aU0E5SURVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQRDBnWlRzZ2Jpc3JLWFF1Y0hWemFDaDBhR2x6TG1kbGRGQnZhVzUwUVhRb2JpQXZJR1VwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZERzS0lDQWdJSDBLSUNBZ0lHZGxkRXhsYm1kMGFDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVoyVjBUR1Z1WjNSb2N5Z3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXMlV1YkdWdVozUm9JQzBnTVYwN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJNWlc1bmRHaHpLR1VnUFNCMGFHbHpMbUZ5WTB4bGJtZDBhRVJwZG1semFXOXVjeWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1OaFkyaGxRWEpqVEdWdVozUm9jeUFtSmlCMGFHbHpMbU5oWTJobFFYSmpUR1Z1WjNSb2N5NXNaVzVuZEdnZ1BUMDlJR1VnS3lBeElDWW1JQ0YwYUdsekxtNWxaV1J6VlhCa1lYUmxLU0J5WlhSMWNtNGdkR2hwY3k1allXTm9aVUZ5WTB4bGJtZDBhSE03Q2lBZ0lDQWdJQ0FnZEdocGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFeE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1cxMHNJRzRzSUdrZ1BTQjBhR2x6TG1kbGRGQnZhVzUwS0RBcExDQnlJRDBnTURzS0lDQWdJQ0FnSUNCMExuQjFjMmdvTUNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklEMGdNVHNnYnlBOFBTQmxPeUJ2S3lzcGJpQTlJSFJvYVhNdVoyVjBVRzlwYm5Rb2J5QXZJR1VwTENCeUlDczlJRzR1WkdsemRHRnVZMlZVYnlocEtTd2dkQzV3ZFhOb0tISXBMQ0JwSUQwZ2Jqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWVdOb1pVRnlZMHhsYm1kMGFITWdQU0IwTENCME93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFFYSmpUR1Z1WjNSb2N5Z3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE11WjJWMFRHVnVaM1JvY3lncE93b2dJQ0FnZlFvZ0lDQWdaMlYwVlhSdlZHMWhjSEJwYm1jb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NW5aWFJNWlc1bmRHaHpLQ2tzSUdrZ1BTQXdMQ0J5SUQwZ2JpNXNaVzVuZEdnc0lHODdDaUFnSUNBZ0lDQWdkQ0EvSUc4Z1BTQjBJRG9nYnlBOUlHVWdLaUJ1VzNJZ0xTQXhYVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJREFzSUd3Z1BTQnlJQzBnTVN3Z1l6c0tJQ0FnSUNBZ0lDQm1iM0lvT3lCaElEdzlJR3c3S1dsbUlDaHBJRDBnVFdGMGFDNW1iRzl2Y2loaElDc2dLR3dnTFNCaEtTQXZJRElwTENCaklEMGdibHRwWFNBdElHOHNJR01nUENBd0tTQmhJRDBnYVNBcklERTdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9ZeUErSURBcElHd2dQU0JwSUMwZ01Uc0tJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiQ0E5SUdrN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvYVNBOUlHd3NJRzViYVYwZ1BUMDlJRzhwSUhKbGRIVnliaUJwSUM4Z0tISWdMU0F4S1RzS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUc1YmFWMHNJR1FnUFNCdVcya2dLeUF4WFNBdElHZ3NJR1lnUFNBb2J5QXRJR2dwSUM4Z1pEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0tHa2dLeUJtS1NBdklDaHlJQzBnTVNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJVWVc1blpXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVWdMU0F4WlMwMExDQnlJRDBnWlNBcklERmxMVFE3Q2lBZ0lDQWdJQ0FnYVNBOElEQWdKaVlnS0drZ1BTQXdLU3dnY2lBK0lERWdKaVlnS0hJZ1BTQXhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVoyVjBVRzlwYm5Rb2FTa3NJR0VnUFNCMGFHbHpMbWRsZEZCdmFXNTBLSElwTENCc0lEMGdkQ0I4ZkNBb2J5NXBjMVpsWTNSdmNqSWdQeUJ1WlhjZ1dDQTZJRzVsZHlCTktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JDNWpiM0I1S0dFcExuTjFZaWh2S1M1dWIzSnRZV3hwZW1Vb0tTd2diRHNLSUNBZ0lIMEtJQ0FnSUdkbGRGUmhibWRsYm5SQmRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbWRsZEZWMGIxUnRZWEJ3YVc1bktHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRGUmhibWRsYm5Rb2Jpd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCamIyMXdkWFJsUm5KbGJtVjBSbkpoYldWektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUc1bGR5Qk5MQ0JwSUQwZ1cxMHNJSElnUFNCYlhTd2dieUE5SUZ0ZExDQmhJRDBnYm1WM0lFMHNJR3dnUFNCdVpYY2djR1U3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JtSUQwZ01Ec2daaUE4UFNCbE95Qm1LeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlHWWdMeUJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBXMlpkSUQwZ2RHaHBjeTVuWlhSVVlXNW5aVzUwUVhRb2JTd2dibVYzSUUwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlXekJkSUQwZ2JtVjNJRTBzSUc5Yk1GMGdQU0J1WlhjZ1RUc0tJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlFNTFiV0psY2k1TlFWaGZWa0ZNVlVVc0lHZ2dQU0JOWVhSb0xtRmljeWhwV3pCZExuZ3BMQ0IxSUQwZ1RXRjBhQzVoWW5Nb2FWc3dYUzU1S1N3Z1pDQTlJRTFoZEdndVlXSnpLR2xiTUYwdWVpazdDaUFnSUNBZ0lDQWdhQ0E4UFNCaklDWW1JQ2hqSUQwZ2FDd2diaTV6WlhRb01Td2dNQ3dnTUNrcExDQjFJRHc5SUdNZ0ppWWdLR01nUFNCMUxDQnVMbk5sZENnd0xDQXhMQ0F3S1Nrc0lHUWdQRDBnWXlBbUppQnVMbk5sZENnd0xDQXdMQ0F4S1N3Z1lTNWpjbTl6YzFabFkzUnZjbk1vYVZzd1hTd2diaWt1Ym05eWJXRnNhWHBsS0Nrc0lISmJNRjB1WTNKdmMzTldaV04wYjNKektHbGJNRjBzSUdFcExDQnZXekJkTG1OeWIzTnpWbVZqZEc5eWN5aHBXekJkTENCeVd6QmRLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1lnUFNBeE95Qm1JRHc5SUdVN0lHWXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5VzJaZElEMGdjbHRtSUMwZ01WMHVZMnh2Ym1Vb0tTd2diMXRtWFNBOUlHOWJaaUF0SURGZExtTnNiMjVsS0Nrc0lHRXVZM0p2YzNOV1pXTjBiM0p6S0dsYlppQXRJREZkTENCcFcyWmRLU3dnWVM1c1pXNW5kR2dvS1NBK0lFNTFiV0psY2k1RlVGTkpURTlPS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaExtNXZjbTFoYkdsNlpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQk5ZWFJvTG1GamIzTW9iWFFvYVZ0bUlDMGdNVjB1Wkc5MEtHbGJabDBwTENBdE1Td2dNU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY2x0bVhTNWhjSEJzZVUxaGRISnBlRFFvYkM1dFlXdGxVbTkwWVhScGIyNUJlR2x6S0dFc0lHMHBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J2VzJaZExtTnliM056Vm1WamRHOXljeWhwVzJaZExDQnlXMlpkS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFFnUFQwOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ1RXRjBhQzVoWTI5ektHMTBLSEpiTUYwdVpHOTBLSEpiWlYwcExDQXRNU3dnTVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtSUM4OUlHVXNJR2xiTUYwdVpHOTBLR0V1WTNKdmMzTldaV04wYjNKektISmJNRjBzSUhKYlpWMHBLU0ErSURBZ0ppWWdLR1lnUFNBdFppazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlERTdJRzBnUEQwZ1pUc2diU3NyS1hKYmJWMHVZWEJ3YkhsTllYUnlhWGcwS0d3dWJXRnJaVkp2ZEdGMGFXOXVRWGhwY3locFcyMWRMQ0JtSUNvZ2JTa3BMQ0J2VzIxZExtTnliM056Vm1WamRHOXljeWhwVzIxZExDQnlXMjFkS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkR0Z1WjJWdWRITTZJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNXZjbTFoYkhNNklISXNDaUFnSUNBZ0lDQWdJQ0FnSUdKcGJtOXliV0ZzY3pvZ2J3b2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKalRHVnVaM1JvUkdsMmFYTnBiMjV6SUQwZ1pTNWhjbU5NWlc1bmRHaEVhWFpwYzJsdmJuTXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUcxbGRHRmtZWFJoT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMlpYSnphVzl1T2lBMExqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVEzVnlkbVVpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWdVpYSmhkRzl5T2lBaVEzVnlkbVV1ZEc5S1UwOU9JZ29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWhjbU5NWlc1bmRHaEVhWFpwYzJsdmJuTWdQU0IwYUdsekxtRnlZMHhsYm1kMGFFUnBkbWx6YVc5dWN5d2daUzUwZVhCbElEMGdkR2hwY3k1MGVYQmxMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeVkweGxibWQwYUVScGRtbHphVzl1Y3lBOUlHVXVZWEpqVEdWdVozUm9SR2wyYVhOcGIyNXpMQ0IwYUdsek93b2dJQ0FnZlFwOUxDQlZjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlEQXNJSFFnUFNBd0xDQnVJRDBnTVN3Z2FTQTlJREVzSUhJZ1BTQXdMQ0J2SUQwZ1RXRjBhQzVRU1NBcUlESXNJR0VnUFNBaE1Td2diQ0E5SURBcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa1ZzYkdsd2MyVkRkWEoyWlNJc0lIUm9hWE11WVZnZ1BTQmxMQ0IwYUdsekxtRlpJRDBnZEN3Z2RHaHBjeTU0VW1Ga2FYVnpJRDBnYml3Z2RHaHBjeTU1VW1Ga2FYVnpJRDBnYVN3Z2RHaHBjeTVoVTNSaGNuUkJibWRzWlNBOUlISXNJSFJvYVhNdVlVVnVaRUZ1WjJ4bElEMGdieXdnZEdocGN5NWhRMnh2WTJ0M2FYTmxJRDBnWVN3Z2RHaHBjeTVoVW05MFlYUnBiMjRnUFNCc093b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RDQjhmQ0J1WlhjZ1dDd2dhU0E5SUUxaGRHZ3VVRWtnS2lBeUxDQnlJRDBnZEdocGN5NWhSVzVrUVc1bmJHVWdMU0IwYUdsekxtRlRkR0Z5ZEVGdVoyeGxMQ0J2SUQwZ1RXRjBhQzVoWW5Nb2Npa2dQQ0JPZFcxaVpYSXVSVkJUU1V4UFRqc0tJQ0FnSUNBZ0lDQm1iM0lvT3lCeUlEd2dNRHNwY2lBclBTQnBPd29nSUNBZ0lDQWdJR1p2Y2lnN0lISWdQaUJwT3lseUlDMDlJR2s3Q2lBZ0lDQWdJQ0FnY2lBOElFNTFiV0psY2k1RlVGTkpURTlPSUNZbUlDaHZJRDhnY2lBOUlEQWdPaUJ5SUQwZ2FTa3NJSFJvYVhNdVlVTnNiMk5yZDJselpTQTlQVDBnSVRBZ0ppWWdJVzhnSmlZZ0tISWdQVDA5SUdrZ1B5QnlJRDBnTFdrZ09pQnlJRDBnY2lBdElHa3BPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdkR2hwY3k1aFUzUmhjblJCYm1kc1pTQXJJR1VnS2lCeUxDQnNJRDBnZEdocGN5NWhXQ0FySUhSb2FYTXVlRkpoWkdsMWN5QXFJRTFoZEdndVkyOXpLR0VwTENCaklEMGdkR2hwY3k1aFdTQXJJSFJvYVhNdWVWSmhaR2wxY3lBcUlFMWhkR2d1YzJsdUtHRXBPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbUZTYjNSaGRHbHZiaUFoUFQwZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUUxaGRHZ3VZMjl6S0hSb2FYTXVZVkp2ZEdGMGFXOXVLU3dnZFNBOUlFMWhkR2d1YzJsdUtIUm9hWE11WVZKdmRHRjBhVzl1S1N3Z1pDQTlJR3dnTFNCMGFHbHpMbUZZTENCbUlEMGdZeUF0SUhSb2FYTXVZVms3Q2lBZ0lDQWdJQ0FnSUNBZ0lHd2dQU0JrSUNvZ2FDQXRJR1lnS2lCMUlDc2dkR2hwY3k1aFdDd2dZeUE5SUdRZ0tpQjFJQ3NnWmlBcUlHZ2dLeUIwYUdsekxtRlpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTV6WlhRb2JDd2dZeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1aFdDQTlJR1V1WVZnc0lIUm9hWE11WVZrZ1BTQmxMbUZaTENCMGFHbHpMbmhTWVdScGRYTWdQU0JsTG5oU1lXUnBkWE1zSUhSb2FYTXVlVkpoWkdsMWN5QTlJR1V1ZVZKaFpHbDFjeXdnZEdocGN5NWhVM1JoY25SQmJtZHNaU0E5SUdVdVlWTjBZWEowUVc1bmJHVXNJSFJvYVhNdVlVVnVaRUZ1WjJ4bElEMGdaUzVoUlc1a1FXNW5iR1VzSUhSb2FYTXVZVU5zYjJOcmQybHpaU0E5SUdVdVlVTnNiMk5yZDJselpTd2dkR2hwY3k1aFVtOTBZWFJwYjI0Z1BTQmxMbUZTYjNSaGRHbHZiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtRllJRDBnZEdocGN5NWhXQ3dnWlM1aFdTQTlJSFJvYVhNdVlWa3NJR1V1ZUZKaFpHbDFjeUE5SUhSb2FYTXVlRkpoWkdsMWN5d2daUzU1VW1Ga2FYVnpJRDBnZEdocGN5NTVVbUZrYVhWekxDQmxMbUZUZEdGeWRFRnVaMnhsSUQwZ2RHaHBjeTVoVTNSaGNuUkJibWRzWlN3Z1pTNWhSVzVrUVc1bmJHVWdQU0IwYUdsekxtRkZibVJCYm1kc1pTd2daUzVoUTJ4dlkydDNhWE5sSUQwZ2RHaHBjeTVoUTJ4dlkydDNhWE5sTENCbExtRlNiM1JoZEdsdmJpQTlJSFJvYVhNdVlWSnZkR0YwYVc5dUxDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVtY205dFNsTlBUaWhsS1N3Z2RHaHBjeTVoV0NBOUlHVXVZVmdzSUhSb2FYTXVZVmtnUFNCbExtRlpMQ0IwYUdsekxuaFNZV1JwZFhNZ1BTQmxMbmhTWVdScGRYTXNJSFJvYVhNdWVWSmhaR2wxY3lBOUlHVXVlVkpoWkdsMWN5d2dkR2hwY3k1aFUzUmhjblJCYm1kc1pTQTlJR1V1WVZOMFlYSjBRVzVuYkdVc0lIUm9hWE11WVVWdVpFRnVaMnhsSUQwZ1pTNWhSVzVrUVc1bmJHVXNJSFJvYVhNdVlVTnNiMk5yZDJselpTQTlJR1V1WVVOc2IyTnJkMmx6WlN3Z2RHaHBjeTVoVW05MFlYUnBiMjRnUFNCbExtRlNiM1JoZEdsdmJpd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1ZYSXVjSEp2ZEc5MGVYQmxMbWx6Uld4c2FYQnpaVU4xY25abElEMGdJVEE3Q25aaGNpQk5ZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWWElnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZEN3Z2Jpd2diaXdnYVN3Z2Npd2dieWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrRnlZME4xY25abElqc0tJQ0FnSUgwS2ZUc0tUV0V1Y0hKdmRHOTBlWEJsTG1selFYSmpRM1Z5ZG1VZ1BTQWhNRHNLWm5WdVkzUnBiMjRnWW1Fb0tTQjdDaUFnSUNCc1pYUWdjeUE5SURBc0lHVWdQU0F3TENCMElEMGdNQ3dnYmlBOUlEQTdDaUFnSUNCbWRXNWpkR2x2YmlCcEtISXNJRzhzSUdFc0lHd3BJSHNLSUNBZ0lDQWdJQ0J6SUQwZ2Npd2daU0E5SUdFc0lIUWdQU0F0TXlBcUlISWdLeUF6SUNvZ2J5QXRJRElnS2lCaElDMGdiQ3dnYmlBOUlESWdLaUJ5SUMwZ01pQXFJRzhnS3lCaElDc2diRHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnYVc1cGRFTmhkRzExYkd4U2IyMDZJR1oxYm1OMGFXOXVLSElzSUc4c0lHRXNJR3dzSUdNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVNodkxDQmhMQ0JqSUNvZ0tHRWdMU0J5S1N3Z1l5QXFJQ2hzSUMwZ2J5a3BPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYVc1cGRFNXZiblZ1YVdadmNtMURZWFJ0ZFd4c1VtOXRPaUJtZFc1amRHbHZiaWh5TENCdkxDQmhMQ0JzTENCakxDQm9MQ0IxS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdLRzhnTFNCeUtTQXZJR01nTFNBb1lTQXRJSElwSUM4Z0tHTWdLeUJvS1NBcklDaGhJQzBnYnlrZ0x5Qm9MQ0JtSUQwZ0tHRWdMU0J2S1NBdklHZ2dMU0FvYkNBdElHOHBJQzhnS0dnZ0t5QjFLU0FySUNoc0lDMGdZU2tnTHlCMU93b2dJQ0FnSUNBZ0lDQWdJQ0JrSUNvOUlHZ3NJR1lnS2owZ2FDd2dhU2h2TENCaExDQmtMQ0JtS1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHTmhiR002SUdaMWJtTjBhVzl1S0hJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0J5SUNvZ2Npd2dZU0E5SUc4Z0tpQnlPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY3lBcklHVWdLaUJ5SUNzZ2RDQXFJRzhnS3lCdUlDb2dZVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlPd3A5Q25aaGNpQk5jeUE5SUc1bGR5Qk5MQ0JaYnlBOUlHNWxkeUJpWVN3Z1dtOGdQU0J1WlhjZ1ltRXNJQ1J2SUQwZ2JtVjNJR0poTENCM1lTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1EzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUZ0ZExDQjBJRDBnSVRFc0lHNGdQU0FpWTJWdWRISnBjR1YwWVd3aUxDQnBJRDBnTGpVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa05oZEcxMWJHeFNiMjFEZFhKMlpUTWlMQ0IwYUdsekxuQnZhVzUwY3lBOUlHVXNJSFJvYVhNdVkyeHZjMlZrSUQwZ2RDd2dkR2hwY3k1amRYSjJaVlI1Y0dVZ1BTQnVMQ0IwYUdsekxuUmxibk5wYjI0Z1BTQnBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblFvWlN3Z2RDQTlJRzVsZHlCTktTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBMQ0JwSUQwZ2RHaHBjeTV3YjJsdWRITXNJSElnUFNCcExteGxibWQwYUN3Z2J5QTlJQ2h5SUMwZ0tIUm9hWE11WTJ4dmMyVmtJRDhnTUNBNklERXBLU0FxSUdVc0lHRWdQU0JOWVhSb0xtWnNiMjl5S0c4cExDQnNJRDBnYnlBdElHRTdDaUFnSUNBZ0lDQWdkR2hwY3k1amJHOXpaV1FnUHlCaElDczlJR0VnUGlBd0lEOGdNQ0E2SUNoTllYUm9MbVpzYjI5eUtFMWhkR2d1WVdKektHRXBJQzhnY2lrZ0t5QXhLU0FxSUhJZ09pQnNJRDA5UFNBd0lDWW1JR0VnUFQwOUlISWdMU0F4SUNZbUlDaGhJRDBnY2lBdElESXNJR3dnUFNBeEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWXl3Z2FEc0tJQ0FnSUNBZ0lDQjBhR2x6TG1Oc2IzTmxaQ0I4ZkNCaElENGdNQ0EvSUdNZ1BTQnBXeWhoSUMwZ01Ta2dKU0J5WFNBNklDaE5jeTV6ZFdKV1pXTjBiM0p6S0dsYk1GMHNJR2xiTVYwcExtRmtaQ2hwV3pCZEtTd2dZeUE5SUUxektUc0tJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHbGJZU0FsSUhKZExDQmtJRDBnYVZzb1lTQXJJREVwSUNVZ2NsMDdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZMnh2YzJWa0lIeDhJR0VnS3lBeUlEd2djaUEvSUdnZ1BTQnBXeWhoSUNzZ01pa2dKU0J5WFNBNklDaE5jeTV6ZFdKV1pXTjBiM0p6S0dsYmNpQXRJREZkTENCcFczSWdMU0F5WFNrdVlXUmtLR2xiY2lBdElERmRLU3dnYUNBOUlFMXpLU3dnZEdocGN5NWpkWEoyWlZSNWNHVWdQVDA5SUNKalpXNTBjbWx3WlhSaGJDSWdmSHdnZEdocGN5NWpkWEoyWlZSNWNHVWdQVDA5SUNKamFHOXlaR0ZzSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJSFJvYVhNdVkzVnlkbVZVZVhCbElEMDlQU0FpWTJodmNtUmhiQ0lnUHlBdU5TQTZJQzR5TlN3Z2JTQTlJRTFoZEdndWNHOTNLR011WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvZFNrc0lHWXBMQ0I0SUQwZ1RXRjBhQzV3YjNjb2RTNWthWE4wWVc1alpWUnZVM0YxWVhKbFpDaGtLU3dnWmlrc0lIWWdQU0JOWVhSb0xuQnZkeWhrTG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0dncExDQm1LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2VDQThJREZsTFRRZ0ppWWdLSGdnUFNBeEtTd2diU0E4SURGbExUUWdKaVlnS0cwZ1BTQjRLU3dnZGlBOElERmxMVFFnSmlZZ0tIWWdQU0I0S1N3Z1dXOHVhVzVwZEU1dmJuVnVhV1p2Y20xRFlYUnRkV3hzVW05dEtHTXVlQ3dnZFM1NExDQmtMbmdzSUdndWVDd2diU3dnZUN3Z2Rpa3NJRnB2TG1sdWFYUk9iMjUxYm1sbWIzSnRRMkYwYlhWc2JGSnZiU2hqTG5rc0lIVXVlU3dnWkM1NUxDQm9MbmtzSUcwc0lIZ3NJSFlwTENBa2J5NXBibWwwVG05dWRXNXBabTl5YlVOaGRHMTFiR3hTYjIwb1l5NTZMQ0IxTG5vc0lHUXVlaXdnYUM1NkxDQnRMQ0I0TENCMktUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2RHaHBjeTVqZFhKMlpWUjVjR1VnUFQwOUlDSmpZWFJ0ZFd4c2NtOXRJaUFtSmlBb1dXOHVhVzVwZEVOaGRHMTFiR3hTYjIwb1l5NTRMQ0IxTG5nc0lHUXVlQ3dnYUM1NExDQjBhR2x6TG5SbGJuTnBiMjRwTENCYWJ5NXBibWwwUTJGMGJYVnNiRkp2YlNoakxua3NJSFV1ZVN3Z1pDNTVMQ0JvTG5rc0lIUm9hWE11ZEdWdWMybHZiaWtzSUNSdkxtbHVhWFJEWVhSdGRXeHNVbTl0S0dNdWVpd2dkUzU2TENCa0xub3NJR2d1ZWl3Z2RHaHBjeTUwWlc1emFXOXVLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzJWMEtGbHZMbU5oYkdNb2JDa3NJRnB2TG1OaGJHTW9iQ2tzSUNSdkxtTmhiR01vYkNrcExDQnVPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1d2IybHVkSE1nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdaUzV3YjJsdWRITXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExuQnZhVzUwYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdiMmx1ZEhNdWNIVnphQ2hwTG1Oc2IyNWxLQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiRzl6WldRZ1BTQmxMbU5zYjNObFpDd2dkR2hwY3k1amRYSjJaVlI1Y0dVZ1BTQmxMbU4xY25abFZIbHdaU3dnZEdocGN5NTBaVzV6YVc5dUlEMGdaUzUwWlc1emFXOXVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ1pTNXdiMmx1ZEhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NXdiMmx1ZEhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxuQnZhVzUwYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1d2IybHVkSE11Y0hWemFDaHBMblJ2UVhKeVlYa29LU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1Oc2IzTmxaQ0E5SUhSb2FYTXVZMnh2YzJWa0xDQmxMbU4xY25abFZIbHdaU0E5SUhSb2FYTXVZM1Z5ZG1WVWVYQmxMQ0JsTG5SbGJuTnBiMjRnUFNCMGFHbHpMblJsYm5OcGIyNHNJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdWNHOXBiblJ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1Y0c5cGJuUnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNXdiMmx1ZEhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjRzlwYm5SekxuQjFjMmdvYm1WM0lFMG9LUzVtY205dFFYSnlZWGtvYVNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYkc5elpXUWdQU0JsTG1Oc2IzTmxaQ3dnZEdocGN5NWpkWEoyWlZSNWNHVWdQU0JsTG1OMWNuWmxWSGx3WlN3Z2RHaHBjeTUwWlc1emFXOXVJRDBnWlM1MFpXNXphVzl1TENCMGFHbHpPd29nSUNBZ2ZRcDlPd3AzWVM1d2NtOTBiM1I1Y0dVdWFYTkRZWFJ0ZFd4c1VtOXRRM1Z5ZG1VeklEMGdJVEE3Q21aMWJtTjBhVzl1SUhCaktITXNJR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJR3hsZENCeUlEMGdLRzRnTFNCbEtTQXFJQzQxTENCdklEMGdLR2tnTFNCMEtTQXFJQzQxTENCaElEMGdjeUFxSUhNc0lHd2dQU0J6SUNvZ1lUc0tJQ0FnSUhKbGRIVnliaUFvTWlBcUlIUWdMU0F5SUNvZ2JpQXJJSElnS3lCdktTQXFJR3dnS3lBb0xUTWdLaUIwSUNzZ015QXFJRzRnTFNBeUlDb2djaUF0SUc4cElDb2dZU0FySUhJZ0tpQnpJQ3NnZERzS2ZRcG1kVzVqZEdsdmJpQkplQ2h6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SURFZ0xTQnpPd29nSUNBZ2NtVjBkWEp1SUhRZ0tpQjBJQ29nWlRzS2ZRcG1kVzVqZEdsdmJpQkVlQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnTWlBcUlDZ3hJQzBnY3lrZ0tpQnpJQ29nWlRzS2ZRcG1kVzVqZEdsdmJpQkdlQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3lBcUlITWdLaUJsT3dwOUNtWjFibU4wYVc5dUlHRnlLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJSEpsZEhWeWJpQkplQ2h6TENCbEtTQXJJRVI0S0hNc0lIUXBJQ3NnUm5nb2N5d2diaWs3Q24wS1puVnVZM1JwYjI0Z1RuZ29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0F4SUMwZ2N6c0tJQ0FnSUhKbGRIVnliaUIwSUNvZ2RDQXFJSFFnS2lCbE93cDlDbVoxYm1OMGFXOXVJRUo0S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ01TQXRJSE03Q2lBZ0lDQnlaWFIxY200Z015QXFJSFFnS2lCMElDb2djeUFxSUdVN0NuMEtablZ1WTNScGIyNGdlbmdvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SURNZ0tpQW9NU0F0SUhNcElDb2djeUFxSUhNZ0tpQmxPd3A5Q21aMWJtTjBhVzl1SUZWNEtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ29nY3lBcUlITWdLaUJsT3dwOUNtWjFibU4wYVc5dUlHeHlLSE1zSUdVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUhKbGRIVnliaUJPZUNoekxDQmxLU0FySUVKNEtITXNJSFFwSUNzZ2VuZ29jeXdnYmlrZ0t5QlZlQ2h6TENCcEtUc0tmUXAyWVhJZ2JHOGdQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dXQ3dnZENBOUlHNWxkeUJZTENCdUlEMGdibVYzSUZnc0lHa2dQU0J1WlhjZ1dDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUTNWaWFXTkNaWHBwWlhKRGRYSjJaU0lzSUhSb2FYTXVkakFnUFNCbExDQjBhR2x6TG5ZeElEMGdkQ3dnZEdocGN5NTJNaUE5SUc0c0lIUm9hWE11ZGpNZ1BTQnBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblFvWlN3Z2RDQTlJRzVsZHlCWUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBMQ0JwSUQwZ2RHaHBjeTUyTUN3Z2NpQTlJSFJvYVhNdWRqRXNJRzhnUFNCMGFHbHpMbll5TENCaElEMGdkR2hwY3k1Mk16c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpaWFFvYkhJb1pTd2dhUzU0TENCeUxuZ3NJRzh1ZUN3Z1lTNTRLU3dnYkhJb1pTd2dhUzU1TENCeUxua3NJRzh1ZVN3Z1lTNTVLU2tzSUc0N0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NTJNQzVqYjNCNUtHVXVkakFwTENCMGFHbHpMbll4TG1OdmNIa29aUzUyTVNrc0lIUm9hWE11ZGpJdVkyOXdlU2hsTG5ZeUtTd2dkR2hwY3k1Mk15NWpiM0I1S0dVdWRqTXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWRqQWdQU0IwYUdsekxuWXdMblJ2UVhKeVlYa29LU3dnWlM1Mk1TQTlJSFJvYVhNdWRqRXVkRzlCY25KaGVTZ3BMQ0JsTG5ZeUlEMGdkR2hwY3k1Mk1pNTBiMEZ5Y21GNUtDa3NJR1V1ZGpNZ1BTQjBhR2x6TG5ZekxuUnZRWEp5WVhrb0tTd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11ZGpBdVpuSnZiVUZ5Y21GNUtHVXVkakFwTENCMGFHbHpMbll4TG1aeWIyMUJjbkpoZVNobExuWXhLU3dnZEdocGN5NTJNaTVtY205dFFYSnlZWGtvWlM1Mk1pa3NJSFJvYVhNdWRqTXVabkp2YlVGeWNtRjVLR1V1ZGpNcExDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwc2J5NXdjbTkwYjNSNWNHVXVhWE5EZFdKcFkwSmxlbWxsY2tOMWNuWmxJRDBnSVRBN0NuWmhjaUJUWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nUTNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCTkxDQjBJRDBnYm1WM0lFMHNJRzRnUFNCdVpYY2dUU3dnYVNBOUlHNWxkeUJOS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkRkV0pwWTBKbGVtbGxja04xY25abE15SXNJSFJvYVhNdWRqQWdQU0JsTENCMGFHbHpMbll4SUQwZ2RDd2dkR2hwY3k1Mk1pQTlJRzRzSUhSb2FYTXVkak1nUFNCcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUW9aU3dnZENBOUlHNWxkeUJOS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMExDQnBJRDBnZEdocGN5NTJNQ3dnY2lBOUlIUm9hWE11ZGpFc0lHOGdQU0IwYUdsekxuWXlMQ0JoSUQwZ2RHaHBjeTUyTXpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1elpYUW9iSElvWlN3Z2FTNTRMQ0J5TG5nc0lHOHVlQ3dnWVM1NEtTd2diSElvWlN3Z2FTNTVMQ0J5TG5rc0lHOHVlU3dnWVM1NUtTd2diSElvWlN3Z2FTNTZMQ0J5TG5vc0lHOHVlaXdnWVM1NktTa3NJRzQ3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1Mk1DNWpiM0I1S0dVdWRqQXBMQ0IwYUdsekxuWXhMbU52Y0hrb1pTNTJNU2tzSUhSb2FYTXVkakl1WTI5d2VTaGxMbll5S1N3Z2RHaHBjeTUyTXk1amIzQjVLR1V1ZGpNcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1ZGpBZ1BTQjBhR2x6TG5Zd0xuUnZRWEp5WVhrb0tTd2daUzUyTVNBOUlIUm9hWE11ZGpFdWRHOUJjbkpoZVNncExDQmxMbll5SUQwZ2RHaHBjeTUyTWk1MGIwRnljbUY1S0Nrc0lHVXVkak1nUFNCMGFHbHpMbll6TG5SdlFYSnlZWGtvS1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVkakF1Wm5KdmJVRnljbUY1S0dVdWRqQXBMQ0IwYUdsekxuWXhMbVp5YjIxQmNuSmhlU2hsTG5ZeEtTd2dkR2hwY3k1Mk1pNW1jbTl0UVhKeVlYa29aUzUyTWlrc0lIUm9hWE11ZGpNdVpuSnZiVUZ5Y21GNUtHVXVkak1wTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BUWVM1d2NtOTBiM1I1Y0dVdWFYTkRkV0pwWTBKbGVtbGxja04xY25abE15QTlJQ0V3T3dwMllYSWdUM0lnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnV0N3Z2RDQTlJRzVsZHlCWUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pNYVc1bFEzVnlkbVVpTENCMGFHbHpMbll4SUQwZ1pTd2dkR2hwY3k1Mk1pQTlJSFE3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZENobExDQjBJRDBnYm1WM0lGZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnUFQwOUlERWdQeUJ1TG1OdmNIa29kR2hwY3k1Mk1pa2dPaUFvYmk1amIzQjVLSFJvYVhNdWRqSXBMbk4xWWloMGFHbHpMbll4S1N3Z2JpNXRkV3gwYVhCc2VWTmpZV3hoY2lobEtTNWhaR1FvZEdocGN5NTJNU2twTENCdU93b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUkJkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFVHOXBiblFvWlN3Z2RDazdDaUFnSUNCOUNpQWdJQ0JuWlhSVVlXNW5aVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFnZkh3Z2JtVjNJRmc3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1WTI5d2VTaDBhR2x6TG5ZeUtTNXpkV0lvZEdocGN5NTJNU2t1Ym05eWJXRnNhWHBsS0Nrc0lHNDdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTUyTVM1amIzQjVLR1V1ZGpFcExDQjBhR2x6TG5ZeUxtTnZjSGtvWlM1Mk1pa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1Mk1TQTlJSFJvYVhNdWRqRXVkRzlCY25KaGVTZ3BMQ0JsTG5ZeUlEMGdkR2hwY3k1Mk1pNTBiMEZ5Y21GNUtDa3NJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1aeWIyMUtVMDlPS0dVcExDQjBhR2x6TG5ZeExtWnliMjFCY25KaGVTaGxMbll4S1N3Z2RHaHBjeTUyTWk1bWNtOXRRWEp5WVhrb1pTNTJNaWtzSUhSb2FYTTdDaUFnSUNCOUNuMDdDazl5TG5CeWIzUnZkSGx3WlM1cGMweHBibVZEZFhKMlpTQTlJQ0V3T3dwMllYSWdSV2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnVFN3Z2RDQTlJRzVsZHlCTktYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pNYVc1bFEzVnlkbVV6SWl3Z2RHaHBjeTVwYzB4cGJtVkRkWEoyWlRNZ1BTQWhNQ3dnZEdocGN5NTJNU0E5SUdVc0lIUm9hWE11ZGpJZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblFvWlN3Z2RDQTlJRzVsZHlCTktTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDA5UFNBeElEOGdiaTVqYjNCNUtIUm9hWE11ZGpJcElEb2dLRzR1WTI5d2VTaDBhR2x6TG5ZeUtTNXpkV0lvZEdocGN5NTJNU2tzSUc0dWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrdVlXUmtLSFJvYVhNdWRqRXBLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MFFYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEZCdmFXNTBLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVkakV1WTI5d2VTaGxMbll4S1N3Z2RHaHBjeTUyTWk1amIzQjVLR1V1ZGpJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1ZGpFZ1BTQjBhR2x6TG5ZeExuUnZRWEp5WVhrb0tTd2daUzUyTWlBOUlIUm9hWE11ZGpJdWRHOUJjbkpoZVNncExDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVtY205dFNsTlBUaWhsS1N3Z2RHaHBjeTUyTVM1bWNtOXRRWEp5WVhrb1pTNTJNU2tzSUhSb2FYTXVkakl1Wm5KdmJVRnljbUY1S0dVdWRqSXBMQ0IwYUdsek93b2dJQ0FnZlFwOUxDQmpieUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJZTENCMElEMGdibVYzSUZnc0lHNGdQU0J1WlhjZ1dDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVVhWaFpISmhkR2xqUW1WNmFXVnlRM1Z5ZG1VaUxDQjBhR2x6TG5Zd0lEMGdaU3dnZEdocGN5NTJNU0E5SUhRc0lIUm9hWE11ZGpJZ1BTQnVPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblFvWlN3Z2RDQTlJRzVsZHlCWUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBMQ0JwSUQwZ2RHaHBjeTUyTUN3Z2NpQTlJSFJvYVhNdWRqRXNJRzhnUFNCMGFHbHpMbll5T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG5ObGRDaGhjaWhsTENCcExuZ3NJSEl1ZUN3Z2J5NTRLU3dnWVhJb1pTd2dhUzU1TENCeUxua3NJRzh1ZVNrcExDQnVPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11ZGpBdVkyOXdlU2hsTG5Zd0tTd2dkR2hwY3k1Mk1TNWpiM0I1S0dVdWRqRXBMQ0IwYUdsekxuWXlMbU52Y0hrb1pTNTJNaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J6ZFhCbGNpNTBiMHBUVDA0b0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNTJNQ0E5SUhSb2FYTXVkakF1ZEc5QmNuSmhlU2dwTENCbExuWXhJRDBnZEdocGN5NTJNUzUwYjBGeWNtRjVLQ2tzSUdVdWRqSWdQU0IwYUdsekxuWXlMblJ2UVhKeVlYa29LU3dnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdWRqQXVabkp2YlVGeWNtRjVLR1V1ZGpBcExDQjBhR2x6TG5ZeExtWnliMjFCY25KaGVTaGxMbll4S1N3Z2RHaHBjeTUyTWk1bWNtOXRRWEp5WVhrb1pTNTJNaWtzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbU52TG5CeWIzUnZkSGx3WlM1cGMxRjFZV1J5WVhScFkwSmxlbWxsY2tOMWNuWmxJRDBnSVRBN0NuWmhjaUJvYnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nUTNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCTkxDQjBJRDBnYm1WM0lFMHNJRzRnUFNCdVpYY2dUU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVYVmhaSEpoZEdsalFtVjZhV1Z5UTNWeWRtVXpJaXdnZEdocGN5NTJNQ0E5SUdVc0lIUm9hWE11ZGpFZ1BTQjBMQ0IwYUdsekxuWXlJRDBnYmpzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtHVXNJSFFnUFNCdVpYY2dUU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEN3Z2FTQTlJSFJvYVhNdWRqQXNJSElnUFNCMGFHbHpMbll4TENCdklEMGdkR2hwY3k1Mk1qc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpaWFFvWVhJb1pTd2dhUzU0TENCeUxuZ3NJRzh1ZUNrc0lHRnlLR1VzSUdrdWVTd2djaTU1TENCdkxua3BMQ0JoY2lobExDQnBMbm9zSUhJdWVpd2dieTU2S1Nrc0lHNDdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTUyTUM1amIzQjVLR1V1ZGpBcExDQjBhR2x6TG5ZeExtTnZjSGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVZMjl3ZVNobExuWXlLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuWXdJRDBnZEdocGN5NTJNQzUwYjBGeWNtRjVLQ2tzSUdVdWRqRWdQU0IwYUdsekxuWXhMblJ2UVhKeVlYa29LU3dnWlM1Mk1pQTlJSFJvYVhNdWRqSXVkRzlCY25KaGVTZ3BMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1bWNtOXRTbE5QVGlobEtTd2dkR2hwY3k1Mk1DNW1jbTl0UVhKeVlYa29aUzUyTUNrc0lIUm9hWE11ZGpFdVpuSnZiVUZ5Y21GNUtHVXVkakVwTENCMGFHbHpMbll5TG1aeWIyMUJjbkpoZVNobExuWXlLU3dnZEdocGN6c0tJQ0FnSUgwS2ZUc0thRzh1Y0hKdmRHOTBlWEJsTG1selVYVmhaSEpoZEdsalFtVjZhV1Z5UTNWeWRtVXpJRDBnSVRBN0NuWmhjaUIxYnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nUTNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRnRkS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlRjR3hwYm1WRGRYSjJaU0lzSUhSb2FYTXVjRzlwYm5SeklEMGdaVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUWdQU0J1WlhjZ1dDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ3dnYVNBOUlIUm9hWE11Y0c5cGJuUnpMQ0J5SUQwZ0tHa3ViR1Z1WjNSb0lDMGdNU2tnS2lCbExDQnZJRDBnVFdGMGFDNW1iRzl2Y2loeUtTd2dZU0E5SUhJZ0xTQnZMQ0JzSUQwZ2FWdHZJRDA5UFNBd0lEOGdieUE2SUc4Z0xTQXhYU3dnWXlBOUlHbGJiMTBzSUdnZ1BTQnBXMjhnUGlCcExteGxibWQwYUNBdElESWdQeUJwTG14bGJtZDBhQ0F0SURFZ09pQnZJQ3NnTVYwc0lIVWdQU0JwVzI4Z1BpQnBMbXhsYm1kMGFDQXRJRE1nUHlCcExteGxibWQwYUNBdElERWdPaUJ2SUNzZ01sMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjMlYwS0hCaktHRXNJR3d1ZUN3Z1l5NTRMQ0JvTG5nc0lIVXVlQ2tzSUhCaktHRXNJR3d1ZVN3Z1l5NTVMQ0JvTG5rc0lIVXVlU2twTENCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV3YjJsdWRITWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNXdiMmx1ZEhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsTG5CdmFXNTBjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2IybHVkSE11Y0hWemFDaHBMbU5zYjI1bEtDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUdVdWNHOXBiblJ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJSFJvYVhNdWNHOXBiblJ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1d2IybHVkSE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1Y0c5cGJuUnpMbkIxYzJnb2FTNTBiMEZ5Y21GNUtDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnpkWEJsY2k1bWNtOXRTbE5QVGlobEtTd2dkR2hwY3k1d2IybHVkSE1nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdaUzV3YjJsdWRITXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExuQnZhVzUwYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdiMmx1ZEhNdWNIVnphQ2h1WlhjZ1dDZ3BMbVp5YjIxQmNuSmhlU2hwS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRcDlPd3AxYnk1d2NtOTBiM1I1Y0dVdWFYTlRjR3hwYm1WRGRYSjJaU0E5SUNFd093cDJZWElnVkdFZ1BTQlBZbXBsWTNRdVpuSmxaWHBsS0hzS0lDQWdJRjlmY0hKdmRHOWZYem9nYm5Wc2JDd0tJQ0FnSUVGeVkwTjFjblpsT2lCTllTd0tJQ0FnSUVOaGRHMTFiR3hTYjIxRGRYSjJaVE02SUhkaExBb2dJQ0FnUTNWaWFXTkNaWHBwWlhKRGRYSjJaVG9nYkc4c0NpQWdJQ0JEZFdKcFkwSmxlbWxsY2tOMWNuWmxNem9nVTJFc0NpQWdJQ0JGYkd4cGNITmxRM1Z5ZG1VNklGVnlMQW9nSUNBZ1RHbHVaVU4xY25abE9pQlBjaXdLSUNBZ0lFeHBibVZEZFhKMlpUTTZJRVZvTEFvZ0lDQWdVWFZoWkhKaGRHbGpRbVY2YVdWeVEzVnlkbVU2SUdOdkxBb2dJQ0FnVVhWaFpISmhkR2xqUW1WNmFXVnlRM1Z5ZG1Vek9pQm9ieXdLSUNBZ0lGTndiR2x1WlVOMWNuWmxPaUIxYndwOUtTd2dRV2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRM1Z5ZG1WUVlYUm9JaXdnZEdocGN5NWpkWEoyWlhNZ1BTQmJYU3dnZEdocGN5NWhkWFJ2UTJ4dmMyVWdQU0FoTVRzS0lDQWdJSDBLSUNBZ0lHRmtaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNobEtUc0tJQ0FnSUgwS0lDQWdJR05zYjNObFVHRjBhQ2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVZM1Z5ZG1Weld6QmRMbWRsZEZCdmFXNTBLREFwTENCMElEMGdkR2hwY3k1amRYSjJaWE5iZEdocGN5NWpkWEoyWlhNdWJHVnVaM1JvSUMwZ01WMHVaMlYwVUc5cGJuUW9NU2s3Q2lBZ0lDQWdJQ0FnWlM1bGNYVmhiSE1vZENrZ2ZId2dkR2hwY3k1amRYSjJaWE11Y0hWemFDaHVaWGNnVDNJb2RDd2daU2twT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlNBcUlIUm9hWE11WjJWMFRHVnVaM1JvS0Nrc0lHa2dQU0IwYUdsekxtZGxkRU4xY25abFRHVnVaM1JvY3lncExDQnlJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9PeUJ5SUR3Z2FTNXNaVzVuZEdnN0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbGJjbDBnUGowZ2Jpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQnBXM0pkSUMwZ2Jpd2dZU0E5SUhSb2FYTXVZM1Z5ZG1WelczSmRMQ0JzSUQwZ1lTNW5aWFJNWlc1bmRHZ29LU3dnWXlBOUlHd2dQVDA5SURBZ1B5QXdJRG9nTVNBdElHOGdMeUJzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0V1WjJWMFVHOXBiblJCZENoakxDQjBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5S3lzN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnWjJWMFRHVnVaM1JvS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVuWlhSRGRYSjJaVXhsYm1kMGFITW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnRsTG14bGJtZDBhQ0F0SURGZE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFFYSmpUR1Z1WjNSb2N5Z3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE11WTJGamFHVk1aVzVuZEdoeklEMGdiblZzYkN3Z2RHaHBjeTVuWlhSRGRYSjJaVXhsYm1kMGFITW9LVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFTjFjblpsVEdWdVozUm9jeWdwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1allXTm9aVXhsYm1kMGFITWdKaVlnZEdocGN5NWpZV05vWlV4bGJtZDBhSE11YkdWdVozUm9JRDA5UFNCMGFHbHpMbU4xY25abGN5NXNaVzVuZEdncElISmxkSFZ5YmlCMGFHbHpMbU5oWTJobFRHVnVaM1JvY3pzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUZ0ZExDQjBJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RHaHBjeTVqZFhKMlpYTXViR1Z1WjNSb095QnVJRHdnYVRzZ2Jpc3JLWFFnS3owZ2RHaHBjeTVqZFhKMlpYTmJibDB1WjJWMFRHVnVaM1JvS0Nrc0lHVXVjSFZ6YUNoMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWVdOb1pVeGxibWQwYUhNZ1BTQmxMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVM0JoWTJWa1VHOXBiblJ6S0dVZ1BTQTBNQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOFBTQmxPeUJ1S3lzcGRDNXdkWE5vS0hSb2FYTXVaMlYwVUc5cGJuUW9iaUF2SUdVcEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoZFhSdlEyeHZjMlVnSmlZZ2RDNXdkWE5vS0hSYk1GMHBMQ0IwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVRzlwYm5SektHVWdQU0F4TWlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1cxMHNJRzQ3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUhSb2FYTXVZM1Z5ZG1Wek95QnBJRHdnY2k1c1pXNW5kR2c3SUdrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnY2x0cFhTd2dZU0E5SUc4Z0ppWWdieTVwYzBWc2JHbHdjMlZEZFhKMlpTQS9JR1VnS2lBeUlEb2dieUFtSmlBb2J5NXBjMHhwYm1WRGRYSjJaU0I4ZkNCdkxtbHpUR2x1WlVOMWNuWmxNeWtnUHlBeElEb2dieUFtSmlCdkxtbHpVM0JzYVc1bFEzVnlkbVVnUHlCbElDb2dieTV3YjJsdWRITXViR1Z1WjNSb0lEb2daU3dnYkNBOUlHOHVaMlYwVUc5cGJuUnpLR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdQU0F3T3lCaklEd2diQzVzWlc1bmRHZzdJR01yS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUd4YlkxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVJQ1ltSUc0dVpYRjFZV3h6S0dncElIeDhJQ2gwTG5CMWMyZ29hQ2tzSUc0Z1BTQm9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoZFhSdlEyeHZjMlVnSmlZZ2RDNXNaVzVuZEdnZ1BpQXhJQ1ltSUNGMFczUXViR1Z1WjNSb0lDMGdNVjB1WlhGMVlXeHpLSFJiTUYwcElDWW1JSFF1Y0hWemFDaDBXekJkS1N3Z2REc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WTNWeWRtVnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVZM1Z5ZG1WekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1amRYSjJaWE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzVnlkbVZ6TG5CMWMyZ29hUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYVjBiME5zYjNObElEMGdaUzVoZFhSdlEyeHZjMlVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J6ZFhCbGNpNTBiMHBUVDA0b0tUc0tJQ0FnSUNBZ0lDQmxMbUYxZEc5RGJHOXpaU0E5SUhSb2FYTXVZWFYwYjBOc2IzTmxMQ0JsTG1OMWNuWmxjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQjBhR2x6TG1OMWNuWmxjeTVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WTNWeWRtVnpXM1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbU4xY25abGN5NXdkWE5vS0drdWRHOUtVMDlPS0NrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCemRYQmxjaTVtY205dFNsTlBUaWhsS1N3Z2RHaHBjeTVoZFhSdlEyeHZjMlVnUFNCbExtRjFkRzlEYkc5elpTd2dkR2hwY3k1amRYSjJaWE1nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdaUzVqZFhKMlpYTXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExtTjFjblpsYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpkWEoyWlhNdWNIVnphQ2h1WlhjZ1ZHRmJhUzUwZVhCbFhTZ3BMbVp5YjIxS1UwOU9LR2twS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNuMHNJR2R5SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJCYUNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pRWVhSb0lpd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUWdQU0J1WlhjZ1dDd2daU0FtSmlCMGFHbHpMbk5sZEVaeWIyMVFiMmx1ZEhNb1pTazdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVRzlwYm5SektHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtMXZkbVZVYnlobFd6QmRMbmdzSUdWYk1GMHVlU2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Td2diaUE5SUdVdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYUm9hWE11YkdsdVpWUnZLR1ZiZEYwdWVDd2daVnQwWFM1NUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxdmRtVlVieWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExuTmxkQ2hsTENCMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeHBibVZVYnlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0J1WlhjZ1QzSW9kR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVZMnh2Ym1Vb0tTd2dibVYzSUZnb1pTd2dkQ2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjblpsY3k1d2RYTm9LRzRwTENCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1elpYUW9aU3dnZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeGRXRmtjbUYwYVdORGRYSjJaVlJ2S0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNWxkeUJqYnloMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1amJHOXVaU2dwTENCdVpYY2dXQ2hsTENCMEtTd2dibVYzSUZnb2Jpd2dhU2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjblpsY3k1d2RYTm9LSElwTENCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1elpYUW9iaXdnYVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaVpYcHBaWEpEZFhKMlpWUnZLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzVsZHlCc2J5aDBhR2x6TG1OMWNuSmxiblJRYjJsdWRDNWpiRzl1WlNncExDQnVaWGNnV0NobExDQjBLU3dnYm1WM0lGZ29iaXdnYVNrc0lHNWxkeUJZS0hJc0lHOHBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amRYSjJaWE11Y0hWemFDaGhLU3dnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1YzJWMEtISXNJRzhwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNCc2FXNWxWR2h5ZFNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG1Oc2IyNWxLQ2tLSUNBZ0lDQWdJQ0JkTG1OdmJtTmhkQ2hsS1N3Z2JpQTlJRzVsZHlCMWJ5aDBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amRYSjJaWE11Y0hWemFDaHVLU3dnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1WTI5d2VTaGxXMlV1YkdWdVozUm9JQzBnTVYwcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYSmpLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMbmdzSUd3Z1BTQjBhR2x6TG1OMWNuSmxiblJRYjJsdWRDNTVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GaWMyRnlZeWhsSUNzZ1lTd2dkQ0FySUd3c0lHNHNJR2tzSUhJc0lHOHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZV0p6WVhKaktHVXNJSFFzSUc0c0lHa3NJSElzSUc4cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoWW5ObGJHeHBjSE5sS0dVc0lIUXNJRzRzSUc0c0lHa3NJSElzSUc4cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pXeHNhWEJ6WlNobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaExDQnNLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0IwYUdsekxtTjFjbkpsYm5SUWIybHVkQzU0TENCb0lEMGdkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVlVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aFluTmxiR3hwY0hObEtHVWdLeUJqTENCMElDc2dhQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWW5ObGJHeHBjSE5sS0dVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzVsZHlCVmNpaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhMQ0JzS1RzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1amRYSjJaWE11YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR011WjJWMFVHOXBiblFvTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFV1WlhGMVlXeHpLSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBLU0I4ZkNCMGFHbHpMbXhwYm1WVWJ5aDFMbmdzSUhVdWVTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdVkzVnlkbVZ6TG5CMWMyZ29ZeWs3Q2lBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JqTG1kbGRGQnZhVzUwS0RFcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1amIzQjVLR2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExtTnZjSGtvWlM1amRYSnlaVzUwVUc5cGJuUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVkzVnljbVZ1ZEZCdmFXNTBJRDBnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1ZEc5QmNuSmhlU2dwTENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNW1jbTl0U2xOUFRpaGxLU3dnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1Wm5KdmJVRnljbUY1S0dVdVkzVnljbVZ1ZEZCdmFXNTBLU3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dXSFFnUFNCamJHRnpjeUJsZUhSbGJtUnpJR2R5SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZFhWcFpDQTlJRVYwS0Nrc0lIUm9hWE11ZEhsd1pTQTlJQ0pUYUdGd1pTSXNJSFJvYVhNdWFHOXNaWE1nUFNCYlhUc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBjMGh2YkdWektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCMGFHbHpMbWh2YkdWekxteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDBXMjVkSUQwZ2RHaHBjeTVvYjJ4bGMxdHVYUzVuWlhSUWIybHVkSE1vWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRN0NpQWdJQ0I5Q2lBZ0lDQmxlSFJ5WVdOMFVHOXBiblJ6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGd1pUb2dkR2hwY3k1blpYUlFiMmx1ZEhNb1pTa3NDaUFnSUNBZ0lDQWdJQ0FnSUdodmJHVnpPaUIwYUdsekxtZGxkRkJ2YVc1MGMwaHZiR1Z6S0dVcENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11YUc5c1pYTWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNW9iMnhsY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1V1YUc5c1pYTmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YUc5c1pYTXVjSFZ6YUNocExtTnNiMjVsS0NrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJR1V1ZFhWcFpDQTlJSFJvYVhNdWRYVnBaQ3dnWlM1b2IyeGxjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQjBhR2x6TG1odmJHVnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVvYjJ4bGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNW9iMnhsY3k1d2RYTm9LR2t1ZEc5S1UwOU9LQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNW1jbTl0U2xOUFRpaGxLU3dnZEdocGN5NTFkV2xrSUQwZ1pTNTFkV2xrTENCMGFHbHpMbWh2YkdWeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWFHOXNaWE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQmxMbWh2YkdWelczUmRPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWh2YkdWekxuQjFjMmdvYm1WM0lHZHlLQ2t1Wm5KdmJVcFRUMDRvYVNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtmU3dnVDNnZ1BTQjdDaUFnSUNCMGNtbGhibWQxYkdGMFpUb2dablZ1WTNScGIyNG9jeXdnWlN3Z2RDQTlJRElwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVZ0ppWWdaUzVzWlc1bmRHZ3NJR2tnUFNCdUlEOGdaVnN3WFNBcUlIUWdPaUJ6TG14bGJtZDBhQ3dnY2lBOUlFTm9LSE1zSURBc0lHa3NJSFFzSUNFd0tTd2dieUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHbG1JQ2doY2lCOGZDQnlMbTVsZUhRZ1BUMDlJSEl1Y0hKbGRpa2djbVYwZFhKdUlHODdDaUFnSUNBZ0lDQWdiR1YwSUdFc0lHd3NJR01zSUdnc0lIVXNJR1FzSUdZN0NpQWdJQ0FnSUNBZ2FXWWdLRzRnSmlZZ0tISWdQU0JYZUNoekxDQmxMQ0J5TENCMEtTa3NJSE11YkdWdVozUm9JRDRnT0RBZ0tpQjBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0JqSUQwZ2Mxc3dYU3dnYkNBOUlHZ2dQU0J6V3pGZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzBnUFNCME95QnRJRHdnYVRzZ2JTQXJQU0IwS1hVZ1BTQnpXMjFkTENCa0lEMGdjMXR0SUNzZ01WMHNJSFVnUENCaElDWW1JQ2hoSUQwZ2RTa3NJR1FnUENCc0lDWW1JQ2hzSUQwZ1pDa3NJSFVnUGlCaklDWW1JQ2hqSUQwZ2RTa3NJR1FnUGlCb0lDWW1JQ2hvSUQwZ1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUdZZ1BTQk5ZWFJvTG0xaGVDaGpJQzBnWVN3Z2FDQXRJR3dwTENCbUlEMGdaaUFoUFQwZ01DQS9JREVnTHlCbUlEb2dNRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSGh5S0hJc0lHOHNJSFFzSUdFc0lHd3NJR1lwTENCdk93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQkRhQ2h6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCc1pYUWdjaXdnYnpzS0lDQWdJR2xtSUNocElEMDlQU0IwZVNoekxDQmxMQ0IwTENCdUtTQStJREFwSUdadmNpaHlJRDBnWlRzZ2NpQThJSFE3SUhJZ0t6MGdiaWx2SUQwZ2JXTW9jaXdnYzF0eVhTd2djMXR5SUNzZ01WMHNJRzhwT3dvZ0lDQWdaV3h6WlNCbWIzSW9jaUE5SUhRZ0xTQnVPeUJ5SUQ0OUlHVTdJSElnTFQwZ2JpbHZJRDBnYldNb2Npd2djMXR5WFN3Z2MxdHlJQ3NnTVYwc0lHOHBPd29nSUNBZ2NtVjBkWEp1SUc4Z0ppWWdabThvYnl3Z2J5NXVaWGgwS1NBbUppQW9kbklvYnlrc0lHOGdQU0J2TG01bGVIUXBMQ0J2T3dwOUNtWjFibU4wYVc5dUlGUnVLSE1zSUdVcElIc0tJQ0FnSUdsbUlDZ2hjeWtnY21WMGRYSnVJSE03Q2lBZ0lDQmxJSHg4SUNobElEMGdjeWs3Q2lBZ0lDQnNaWFFnZENBOUlITXNJRzQ3Q2lBZ0lDQmtieUJwWmlBb2JpQTlJQ0V4TENBaGRDNXpkR1ZwYm1WeUlDWW1JQ2htYnloMExDQjBMbTVsZUhRcElIeDhJQ1JsS0hRdWNISmxkaXdnZEN3Z2RDNXVaWGgwS1NBOVBUMGdNQ2twSUhzS0lDQWdJQ0FnSUNCcFppQW9kbklvZENrc0lIUWdQU0JsSUQwZ2RDNXdjbVYyTENCMElEMDlQU0IwTG01bGVIUXBJR0p5WldGck93b2dJQ0FnSUNBZ0lHNGdQU0FoTURzS0lDQWdJSDBnWld4elpTQjBJRDBnZEM1dVpYaDBPd29nSUNBZ2QyaHBiR1VnS0c0Z2ZId2dkQ0FoUFQwZ1pTa0tJQ0FnSUhKbGRIVnliaUJsT3dwOUNtWjFibU4wYVc5dUlIaHlLSE1zSUdVc0lIUXNJRzRzSUdrc0lISXNJRzhwSUhzS0lDQWdJR2xtSUNnaGN5a2djbVYwZFhKdU93b2dJQ0FnSVc4Z0ppWWdjaUFtSmlCYWVDaHpMQ0J1TENCcExDQnlLVHNLSUNBZ0lHeGxkQ0JoSUQwZ2N5d2diQ3dnWXpzS0lDQWdJR1p2Y2lnN0lITXVjSEpsZGlBaFBUMGdjeTV1WlhoME95bDdDaUFnSUNBZ0lDQWdhV1lnS0d3Z1BTQnpMbkJ5WlhZc0lHTWdQU0J6TG01bGVIUXNJSElnUHlCcmVDaHpMQ0J1TENCcExDQnlLU0E2SUVoNEtITXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVjSFZ6YUNoc0xta2dMeUIwS1N3Z1pTNXdkWE5vS0hNdWFTQXZJSFFwTENCbExuQjFjMmdvWXk1cElDOGdkQ2tzSUhaeUtITXBMQ0J6SUQwZ1l5NXVaWGgwTENCaElEMGdZeTV1WlhoME93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tITWdQU0JqTENCeklEMDlQU0JoS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnUHlCdklEMDlQU0F4SUQ4Z0tITWdQU0JIZUNoVWJpaHpLU3dnWlN3Z2RDa3NJSGh5S0hNc0lHVXNJSFFzSUc0c0lHa3NJSElzSURJcEtTQTZJRzhnUFQwOUlESWdKaVlnVm5nb2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2lrZ09pQjRjaWhVYmloektTd2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z01TazdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJJZUNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUhNdWNISmxkaXdnZENBOUlITXNJRzRnUFNCekxtNWxlSFE3Q2lBZ0lDQnBaaUFvSkdVb1pTd2dkQ3dnYmlrZ1BqMGdNQ2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdiR1YwSUdrZ1BTQnpMbTVsZUhRdWJtVjRkRHNLSUNBZ0lHWnZjaWc3SUdrZ0lUMDlJSE11Y0hKbGRqc3Bld29nSUNBZ0lDQWdJR2xtSUNoVGFTaGxMbmdzSUdVdWVTd2dkQzU0TENCMExua3NJRzR1ZUN3Z2JpNTVMQ0JwTG5nc0lHa3VlU2tnSmlZZ0pHVW9hUzV3Y21WMkxDQnBMQ0JwTG01bGVIUXBJRDQ5SURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnBJRDBnYVM1dVpYaDBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJQ0V3T3dwOUNtWjFibU4wYVc5dUlHdDRLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdjeTV3Y21WMkxDQnlJRDBnY3l3Z2J5QTlJSE11Ym1WNGREc0tJQ0FnSUdsbUlDZ2taU2hwTENCeUxDQnZLU0ErUFNBd0tTQnlaWFIxY200Z0lURTdDaUFnSUNCc1pYUWdZU0E5SUdrdWVDQThJSEl1ZUNBL0lHa3VlQ0E4SUc4dWVDQS9JR2t1ZUNBNklHOHVlQ0E2SUhJdWVDQThJRzh1ZUNBL0lISXVlQ0E2SUc4dWVDd2diQ0E5SUdrdWVTQThJSEl1ZVNBL0lHa3VlU0E4SUc4dWVTQS9JR2t1ZVNBNklHOHVlU0E2SUhJdWVTQThJRzh1ZVNBL0lISXVlU0E2SUc4dWVTd2dZeUE5SUdrdWVDQStJSEl1ZUNBL0lHa3VlQ0ErSUc4dWVDQS9JR2t1ZUNBNklHOHVlQ0E2SUhJdWVDQStJRzh1ZUNBL0lISXVlQ0E2SUc4dWVDd2dhQ0E5SUdrdWVTQStJSEl1ZVNBL0lHa3VlU0ErSUc4dWVTQS9JR2t1ZVNBNklHOHVlU0E2SUhJdWVTQStJRzh1ZVNBL0lISXVlU0E2SUc4dWVTd2dkU0E5SUc5aEtHRXNJR3dzSUdVc0lIUXNJRzRwTENCa0lEMGdiMkVvWXl3Z2FDd2daU3dnZEN3Z2Jpa3NJR1lnUFNCekxuQnlaWFphTENCdElEMGdjeTV1WlhoMFdqc0tJQ0FnSUdadmNpZzdJR1lnSmlZZ1ppNTZJRDQ5SUhVZ0ppWWdiU0FtSmlCdExub2dQRDBnWkRzcGV3b2dJQ0FnSUNBZ0lHbG1JQ2htSUNFOVBTQnpMbkJ5WlhZZ0ppWWdaaUFoUFQwZ2N5NXVaWGgwSUNZbUlGTnBLR2t1ZUN3Z2FTNTVMQ0J5TG5nc0lISXVlU3dnYnk1NExDQnZMbmtzSUdZdWVDd2daaTU1S1NBbUppQWtaU2htTG5CeVpYWXNJR1lzSUdZdWJtVjRkQ2tnUGowZ01DQjhmQ0FvWmlBOUlHWXVjSEpsZGxvc0lHMGdJVDA5SUhNdWNISmxkaUFtSmlCdElDRTlQU0J6TG01bGVIUWdKaVlnVTJrb2FTNTRMQ0JwTG5rc0lISXVlQ3dnY2k1NUxDQnZMbmdzSUc4dWVTd2diUzU0TENCdExua3BJQ1ltSUNSbEtHMHVjSEpsZGl3Z2JTd2diUzV1WlhoMEtTQStQU0F3S1NrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lHMGdQU0J0TG01bGVIUmFPd29nSUNBZ2ZRb2dJQ0FnWm05eUtEc2daaUFtSmlCbUxub2dQajBnZFRzcGV3b2dJQ0FnSUNBZ0lHbG1JQ2htSUNFOVBTQnpMbkJ5WlhZZ0ppWWdaaUFoUFQwZ2N5NXVaWGgwSUNZbUlGTnBLR2t1ZUN3Z2FTNTVMQ0J5TG5nc0lISXVlU3dnYnk1NExDQnZMbmtzSUdZdWVDd2daaTU1S1NBbUppQWtaU2htTG5CeVpYWXNJR1lzSUdZdWJtVjRkQ2tnUGowZ01Da2djbVYwZFhKdUlDRXhPd29nSUNBZ0lDQWdJR1lnUFNCbUxuQnlaWFphT3dvZ0lDQWdmUW9nSUNBZ1ptOXlLRHNnYlNBbUppQnRMbm9nUEQwZ1pEc3Bld29nSUNBZ0lDQWdJR2xtSUNodElDRTlQU0J6TG5CeVpYWWdKaVlnYlNBaFBUMGdjeTV1WlhoMElDWW1JRk5wS0drdWVDd2dhUzU1TENCeUxuZ3NJSEl1ZVN3Z2J5NTRMQ0J2TG5rc0lHMHVlQ3dnYlM1NUtTQW1KaUFrWlNodExuQnlaWFlzSUcwc0lHMHVibVY0ZENrZ1BqMGdNQ2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdJQ0FnSUcwZ1BTQnRMbTVsZUhSYU93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlDRXdPd3A5Q21aMWJtTjBhVzl1SUVkNEtITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnY3pzS0lDQWdJR1J2SUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc0dWNISmxkaXdnY2lBOUlHNHVibVY0ZEM1dVpYaDBPd29nSUNBZ0lDQWdJQ0ZtYnlocExDQnlLU0FtSmlCTWFDaHBMQ0J1TENCdUxtNWxlSFFzSUhJcElDWW1JSGx5S0drc0lISXBJQ1ltSUhseUtISXNJR2twSUNZbUlDaGxMbkIxYzJnb2FTNXBJQzhnZENrc0lHVXVjSFZ6YUNodUxta2dMeUIwS1N3Z1pTNXdkWE5vS0hJdWFTQXZJSFFwTENCMmNpaHVLU3dnZG5Jb2JpNXVaWGgwS1N3Z2JpQTlJSE1nUFNCeUtTd2diaUE5SUc0dWJtVjRkRHNLSUNBZ0lIMTNhR2xzWlNBb2JpQWhQVDBnY3lrS0lDQWdJSEpsZEhWeWJpQlViaWh1S1RzS2ZRcG1kVzVqZEdsdmJpQldlQ2h6TENCbExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQnNaWFFnYnlBOUlITTdDaUFnSUNCa2J5QjdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnZMbTVsZUhRdWJtVjRkRHNLSUNBZ0lDQWdJQ0JtYjNJb095QmhJQ0U5UFNCdkxuQnlaWFk3S1hzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c4dWFTQWhQVDBnWVM1cElDWW1JRkY0S0c4c0lHRXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJRkpvS0c4c0lHRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUZSdUtHOHNJRzh1Ym1WNGRDa3NJR3dnUFNCVWJpaHNMQ0JzTG01bGVIUXBMQ0I0Y2lodkxDQmxMQ0IwTENCdUxDQnBMQ0J5S1N3Z2VISW9iQ3dnWlN3Z2RDd2diaXdnYVN3Z2NpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1lTQTlJR0V1Ym1WNGREc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdieUE5SUc4dWJtVjRkRHNLSUNBZ0lIMTNhR2xzWlNBb2J5QWhQVDBnY3lrS2ZRcG1kVzVqZEdsdmJpQlhlQ2h6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJRnRkTENCeUxDQnZMQ0JoTENCc0xDQmpPd29nSUNBZ1ptOXlLSElnUFNBd0xDQnZJRDBnWlM1c1pXNW5kR2c3SUhJZ1BDQnZPeUJ5S3lzcFlTQTlJR1ZiY2wwZ0tpQnVMQ0JzSUQwZ2NpQThJRzhnTFNBeElEOGdaVnR5SUNzZ01WMGdLaUJ1SURvZ2N5NXNaVzVuZEdnc0lHTWdQU0JEYUNoekxDQmhMQ0JzTENCdUxDQWhNU2tzSUdNZ1BUMDlJR011Ym1WNGRDQW1KaUFvWXk1emRHVnBibVZ5SUQwZ0lUQXBMQ0JwTG5CMWMyZ29hbmdvWXlrcE93b2dJQ0FnWm05eUtHa3VjMjl5ZENoeGVDa3NJSElnUFNBd095QnlJRHdnYVM1c1pXNW5kR2c3SUhJckt5bFllQ2hwVzNKZExDQjBLU3dnZENBOUlGUnVLSFFzSUhRdWJtVjRkQ2s3Q2lBZ0lDQnlaWFIxY200Z2REc0tmUXBtZFc1amRHbHZiaUJ4ZUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5NTRJQzBnWlM1NE93cDlDbVoxYm1OMGFXOXVJRmg0S0hNc0lHVXBJSHNLSUNBZ0lHbG1JQ2hsSUQwZ1NuZ29jeXdnWlNrc0lHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRkpvS0dVc0lITXBPd29nSUNBZ0lDQWdJRlJ1S0dVc0lHVXVibVY0ZENrc0lGUnVLSFFzSUhRdWJtVjRkQ2s3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnU25nb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQmxMQ0J1SUQwZ2N5NTRMQ0JwSUQwZ2N5NTVMQ0J5SUQwZ0xURWdMeUF3TENCdk93b2dJQ0FnWkc4Z2V3b2dJQ0FnSUNBZ0lHbG1JQ2hwSUR3OUlIUXVlU0FtSmlCcElENDlJSFF1Ym1WNGRDNTVJQ1ltSUhRdWJtVjRkQzU1SUNFOVBTQjBMbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQjBMbmdnS3lBb2FTQXRJSFF1ZVNrZ0tpQW9kQzV1WlhoMExuZ2dMU0IwTG5ncElDOGdLSFF1Ym1WNGRDNTVJQzBnZEM1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUWdQRDBnYmlBbUppQmtJRDRnY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFNCa0xDQmtJRDA5UFNCdUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUhRdWVTa2djbVYwZFhKdUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUhRdWJtVjRkQzU1S1NCeVpYUjFjbTRnZEM1dVpYaDBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUhRdWVDQThJSFF1Ym1WNGRDNTRJRDhnZENBNklIUXVibVY0ZERzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwSUQwZ2RDNXVaWGgwT3dvZ0lDQWdmWGRvYVd4bElDaDBJQ0U5UFNCbEtRb2dJQ0FnYVdZZ0tDRnZLU0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJR2xtSUNodUlEMDlQU0J5S1NCeVpYUjFjbTRnYnpzS0lDQWdJR3hsZENCaElEMGdieXdnYkNBOUlHOHVlQ3dnWXlBOUlHOHVlU3dnYUNBOUlERWdMeUF3TENCMU93b2dJQ0FnZENBOUlHODdDaUFnSUNCa2J5QnVJRDQ5SUhRdWVDQW1KaUIwTG5nZ1BqMGdiQ0FtSmlCdUlDRTlQU0IwTG5nZ0ppWWdVMmtvYVNBOElHTWdQeUJ1SURvZ2Npd2dhU3dnYkN3Z1l5d2dhU0E4SUdNZ1B5QnlJRG9nYml3Z2FTd2dkQzU0TENCMExua3BJQ1ltSUNoMUlEMGdUV0YwYUM1aFluTW9hU0F0SUhRdWVTa2dMeUFvYmlBdElIUXVlQ2tzSUhseUtIUXNJSE1wSUNZbUlDaDFJRHdnYUNCOGZDQjFJRDA5UFNCb0lDWW1JQ2gwTG5nZ1BpQnZMbmdnZkh3Z2RDNTRJRDA5UFNCdkxuZ2dKaVlnV1hnb2J5d2dkQ2twS1NBbUppQW9ieUE5SUhRc0lHZ2dQU0IxS1Nrc0lIUWdQU0IwTG01bGVIUTdDaUFnSUNCM2FHbHNaU0FvZENBaFBUMGdZU2tLSUNBZ0lISmxkSFZ5YmlCdk93cDlDbVoxYm1OMGFXOXVJRmw0S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlBa1pTaHpMbkJ5WlhZc0lITXNJR1V1Y0hKbGRpa2dQQ0F3SUNZbUlDUmxLR1V1Ym1WNGRDd2djeXdnY3k1dVpYaDBLU0E4SURBN0NuMEtablZ1WTNScGIyNGdXbmdvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0J6T3dvZ0lDQWdaRzhnYVM1NklEMDlQU0J1ZFd4c0lDWW1JQ2hwTG5vZ1BTQnZZU2hwTG5nc0lHa3VlU3dnWlN3Z2RDd2diaWtwTENCcExuQnlaWFphSUQwZ2FTNXdjbVYyTENCcExtNWxlSFJhSUQwZ2FTNXVaWGgwTENCcElEMGdhUzV1WlhoME93b2dJQ0FnZDJocGJHVWdLR2tnSVQwOUlITXBDaUFnSUNCcExuQnlaWFphTG01bGVIUmFJRDBnYm5Wc2JDd2dhUzV3Y21WMldpQTlJRzUxYkd3c0lDUjRLR2twT3dwOUNtWjFibU4wYVc5dUlDUjRLSE1wSUhzS0lDQWdJR3hsZENCbExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaExDQnNMQ0JqSUQwZ01Uc0tJQ0FnSUdSdklIc0tJQ0FnSUNBZ0lDQm1iM0lvZENBOUlITXNJSE1nUFNCdWRXeHNMQ0J5SUQwZ2JuVnNiQ3dnYnlBOUlEQTdJSFE3S1hzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0c4ckt5d2diaUE5SUhRc0lHRWdQU0F3TENCbElEMGdNRHNnWlNBOElHTWdKaVlnS0dFckt5d2diaUE5SUc0dWJtVjRkRm9zSUNFaGJpazdJR1VyS3lrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc0lEMGdZenNnWVNBK0lEQWdmSHdnYkNBK0lEQWdKaVlnYmpzcFlTQWhQVDBnTUNBbUppQW9iQ0E5UFQwZ01DQjhmQ0FoYmlCOGZDQjBMbm9nUEQwZ2JpNTZLU0EvSUNocElEMGdkQ3dnZENBOUlIUXVibVY0ZEZvc0lHRXRMU2tnT2lBb2FTQTlJRzRzSUc0Z1BTQnVMbTVsZUhSYUxDQnNMUzBwTENCeUlEOGdjaTV1WlhoMFdpQTlJR2tnT2lCeklEMGdhU3dnYVM1d2NtVjJXaUE5SUhJc0lISWdQU0JwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnYmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NpNXVaWGgwV2lBOUlHNTFiR3dzSUdNZ0tqMGdNanNLSUNBZ0lIMTNhR2xzWlNBb2J5QStJREVwQ2lBZ0lDQnlaWFIxY200Z2N6c0tmUXBtZFc1amRHbHZiaUJ2WVNoekxDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5QTlJRE15TnpZM0lDb2dLSE1nTFNCMEtTQXFJR2tzSUdVZ1BTQXpNamMyTnlBcUlDaGxJQzBnYmlrZ0tpQnBMQ0J6SUQwZ0tITWdmQ0J6SUR3OElEZ3BJQ1lnTVRZM01URTVNelVzSUhNZ1BTQW9jeUI4SUhNZ1BEd2dOQ2tnSmlBeU5USTJORFV4TXpVc0lITWdQU0FvY3lCOElITWdQRHdnTWlrZ0ppQTROVGc1T1RNME5Ua3NJSE1nUFNBb2N5QjhJSE1nUER3Z01Ta2dKaUF4TkRNeE5qVTFOelkxTENCbElEMGdLR1VnZkNCbElEdzhJRGdwSUNZZ01UWTNNVEU1TXpVc0lHVWdQU0FvWlNCOElHVWdQRHdnTkNrZ0ppQXlOVEkyTkRVeE16VXNJR1VnUFNBb1pTQjhJR1VnUER3Z01pa2dKaUE0TlRnNU9UTTBOVGtzSUdVZ1BTQW9aU0I4SUdVZ1BEd2dNU2tnSmlBeE5ETXhOalUxTnpZMUxDQnpJSHdnWlNBOFBDQXhPd3A5Q21aMWJtTjBhVzl1SUdwNEtITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2N5d2dkQ0E5SUhNN0NpQWdJQ0JrYnlBb1pTNTRJRHdnZEM1NElIeDhJR1V1ZUNBOVBUMGdkQzU0SUNZbUlHVXVlU0E4SUhRdWVTa2dKaVlnS0hRZ1BTQmxLU3dnWlNBOUlHVXVibVY0ZERzS0lDQWdJSGRvYVd4bElDaGxJQ0U5UFNCektRb2dJQ0FnY21WMGRYSnVJSFE3Q24wS1puVnVZM1JwYjI0Z1Uya29jeXdnWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVNrZ2V3b2dJQ0FnY21WMGRYSnVJQ2hwSUMwZ2J5a2dLaUFvWlNBdElHRXBJQzBnS0hNZ0xTQnZLU0FxSUNoeUlDMGdZU2tnUGowZ01DQW1KaUFvY3lBdElHOHBJQ29nS0c0Z0xTQmhLU0F0SUNoMElDMGdieWtnS2lBb1pTQXRJR0VwSUQ0OUlEQWdKaVlnS0hRZ0xTQnZLU0FxSUNoeUlDMGdZU2tnTFNBb2FTQXRJRzhwSUNvZ0tHNGdMU0JoS1NBK1BTQXdPd3A5Q21aMWJtTjBhVzl1SUZGNEtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnpMbTVsZUhRdWFTQWhQVDBnWlM1cElDWW1JSE11Y0hKbGRpNXBJQ0U5UFNCbExta2dKaVlnSVV0NEtITXNJR1VwSUNZbUlDaDVjaWh6TENCbEtTQW1KaUI1Y2lobExDQnpLU0FtSmlCbGVTaHpMQ0JsS1NBbUppQW9KR1VvY3k1d2NtVjJMQ0J6TENCbExuQnlaWFlwSUh4OElDUmxLSE1zSUdVdWNISmxkaXdnWlNrcElIeDhJR1p2S0hNc0lHVXBJQ1ltSUNSbEtITXVjSEpsZGl3Z2N5d2djeTV1WlhoMEtTQStJREFnSmlZZ0pHVW9aUzV3Y21WMkxDQmxMQ0JsTG01bGVIUXBJRDRnTUNrN0NuMEtablZ1WTNScGIyNGdKR1VvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlDaGxMbmtnTFNCekxua3BJQ29nS0hRdWVDQXRJR1V1ZUNrZ0xTQW9aUzU0SUMwZ2N5NTRLU0FxSUNoMExua2dMU0JsTG5rcE93cDlDbVoxYm1OMGFXOXVJR1p2S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCekxuZ2dQVDA5SUdVdWVDQW1KaUJ6TG5rZ1BUMDlJR1V1ZVRzS2ZRcG1kVzVqZEdsdmJpQk1hQ2h6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJSGR6S0NSbEtITXNJR1VzSUhRcEtTd2djaUE5SUhkektDUmxLSE1zSUdVc0lHNHBLU3dnYnlBOUlIZHpLQ1JsS0hRc0lHNHNJSE1wS1N3Z1lTQTlJSGR6S0NSbEtIUXNJRzRzSUdVcEtUc0tJQ0FnSUhKbGRIVnliaUFoSVNocElDRTlQU0J5SUNZbUlHOGdJVDA5SUdFZ2ZId2dhU0E5UFQwZ01DQW1KaUJpY3loekxDQjBMQ0JsS1NCOGZDQnlJRDA5UFNBd0lDWW1JR0p6S0hNc0lHNHNJR1VwSUh4OElHOGdQVDA5SURBZ0ppWWdZbk1vZEN3Z2N5d2diaWtnZkh3Z1lTQTlQVDBnTUNBbUppQmljeWgwTENCbExDQnVLU2s3Q24wS1puVnVZM1JwYjI0Z1luTW9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUdVdWVDQThQU0JOWVhSb0xtMWhlQ2h6TG5nc0lIUXVlQ2tnSmlZZ1pTNTRJRDQ5SUUxaGRHZ3ViV2x1S0hNdWVDd2dkQzU0S1NBbUppQmxMbmtnUEQwZ1RXRjBhQzV0WVhnb2N5NTVMQ0IwTG5rcElDWW1JR1V1ZVNBK1BTQk5ZWFJvTG0xcGJpaHpMbmtzSUhRdWVTazdDbjBLWm5WdVkzUnBiMjRnZDNNb2N5a2dld29nSUNBZ2NtVjBkWEp1SUhNZ1BpQXdJRDhnTVNBNklITWdQQ0F3SUQ4Z0xURWdPaUF3T3dwOUNtWjFibU4wYVc5dUlFdDRLSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnY3pzS0lDQWdJR1J2SUhzS0lDQWdJQ0FnSUNCcFppQW9kQzVwSUNFOVBTQnpMbWtnSmlZZ2RDNXVaWGgwTG1rZ0lUMDlJSE11YVNBbUppQjBMbWtnSVQwOUlHVXVhU0FtSmlCMExtNWxlSFF1YVNBaFBUMGdaUzVwSUNZbUlFeG9LSFFzSUhRdWJtVjRkQ3dnY3l3Z1pTa3BJSEpsZEhWeWJpQWhNRHNLSUNBZ0lDQWdJQ0IwSUQwZ2RDNXVaWGgwT3dvZ0lDQWdmWGRvYVd4bElDaDBJQ0U5UFNCektRb2dJQ0FnY21WMGRYSnVJQ0V4T3dwOUNtWjFibU4wYVc5dUlIbHlLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUFrWlNoekxuQnlaWFlzSUhNc0lITXVibVY0ZENrZ1BDQXdJRDhnSkdVb2N5d2daU3dnY3k1dVpYaDBLU0ErUFNBd0lDWW1JQ1JsS0hNc0lITXVjSEpsZGl3Z1pTa2dQajBnTUNBNklDUmxLSE1zSUdVc0lITXVjSEpsZGlrZ1BDQXdJSHg4SUNSbEtITXNJSE11Ym1WNGRDd2daU2tnUENBd093cDlDbVoxYm1OMGFXOXVJR1Y1S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2N5d2diaUE5SUNFeExDQnBJRDBnS0hNdWVDQXJJR1V1ZUNrZ0x5QXlMQ0J5SUQwZ0tITXVlU0FySUdVdWVTa2dMeUF5T3dvZ0lDQWdaRzhnZEM1NUlENGdjaUFoUFNCMExtNWxlSFF1ZVNBK0lISWdKaVlnZEM1dVpYaDBMbmtnSVQwOUlIUXVlU0FtSmlCcElEd2dLSFF1Ym1WNGRDNTRJQzBnZEM1NEtTQXFJQ2h5SUMwZ2RDNTVLU0F2SUNoMExtNWxlSFF1ZVNBdElIUXVlU2tnS3lCMExuZ2dKaVlnS0c0Z1BTQWhiaWtzSUhRZ1BTQjBMbTVsZUhRN0NpQWdJQ0IzYUdsc1pTQW9kQ0FoUFQwZ2N5a0tJQ0FnSUhKbGRIVnliaUJ1T3dwOUNtWjFibU4wYVc5dUlGSm9LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnYm1WM0lHRmhLSE11YVN3Z2N5NTRMQ0J6TG5rcExDQnVJRDBnYm1WM0lHRmhLR1V1YVN3Z1pTNTRMQ0JsTG5rcExDQnBJRDBnY3k1dVpYaDBMQ0J5SUQwZ1pTNXdjbVYyT3dvZ0lDQWdjbVYwZFhKdUlITXVibVY0ZENBOUlHVXNJR1V1Y0hKbGRpQTlJSE1zSUhRdWJtVjRkQ0E5SUdrc0lHa3VjSEpsZGlBOUlIUXNJRzR1Ym1WNGRDQTlJSFFzSUhRdWNISmxkaUE5SUc0c0lISXVibVY0ZENBOUlHNHNJRzR1Y0hKbGRpQTlJSElzSUc0N0NuMEtablZ1WTNScGIyNGdiV01vY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0J1WlhjZ1lXRW9jeXdnWlN3Z2RDazdDaUFnSUNCeVpYUjFjbTRnYmlBL0lDaHBMbTVsZUhRZ1BTQnVMbTVsZUhRc0lHa3VjSEpsZGlBOUlHNHNJRzR1Ym1WNGRDNXdjbVYySUQwZ2FTd2diaTV1WlhoMElEMGdhU2tnT2lBb2FTNXdjbVYySUQwZ2FTd2dhUzV1WlhoMElEMGdhU2tzSUdrN0NuMEtablZ1WTNScGIyNGdkbklvY3lrZ2V3b2dJQ0FnY3k1dVpYaDBMbkJ5WlhZZ1BTQnpMbkJ5WlhZc0lITXVjSEpsZGk1dVpYaDBJRDBnY3k1dVpYaDBMQ0J6TG5CeVpYWmFJQ1ltSUNoekxuQnlaWFphTG01bGVIUmFJRDBnY3k1dVpYaDBXaWtzSUhNdWJtVjRkRm9nSmlZZ0tITXVibVY0ZEZvdWNISmxkbG9nUFNCekxuQnlaWFphS1RzS2ZRcG1kVzVqZEdsdmJpQmhZU2h6TENCbExDQjBLU0I3Q2lBZ0lDQjBhR2x6TG1rZ1BTQnpMQ0IwYUdsekxuZ2dQU0JsTENCMGFHbHpMbmtnUFNCMExDQjBhR2x6TG5CeVpYWWdQU0J1ZFd4c0xDQjBhR2x6TG01bGVIUWdQU0J1ZFd4c0xDQjBhR2x6TG5vZ1BTQnVkV3hzTENCMGFHbHpMbkJ5WlhaYUlEMGdiblZzYkN3Z2RHaHBjeTV1WlhoMFdpQTlJRzUxYkd3c0lIUm9hWE11YzNSbGFXNWxjaUE5SUNFeE93cDlDbVoxYm1OMGFXOXVJSFI1S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUd4bGRDQnBJRDBnTURzS0lDQWdJR1p2Y2loc1pYUWdjaUE5SUdVc0lHOGdQU0IwSUMwZ2Jqc2djaUE4SUhRN0lISWdLejBnYmlscElDczlJQ2h6VzI5ZElDMGdjMXR5WFNrZ0tpQW9jMXR5SUNzZ01WMGdLeUJ6VzI4Z0t5QXhYU2tzSUc4Z1BTQnlPd29nSUNBZ2NtVjBkWEp1SUdrN0NuMEtkbUZ5SUVwMElEMGdZMnhoYzNNZ2V3b2dJQ0FnYzNSaGRHbGpJR0Z5WldFb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVzWlc1bmRHZ3NJRzRnUFNBd093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJSFFnTFNBeExDQnlJRDBnTURzZ2NpQThJSFE3SUdrZ1BTQnlLeXNwYmlBclBTQmxXMmxkTG5nZ0tpQmxXM0pkTG5rZ0xTQmxXM0pkTG5nZ0tpQmxXMmxkTG5rN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z0tpQXVOVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJwYzBOc2IyTnJWMmx6WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFcDBMbUZ5WldFb1pTa2dQQ0F3T3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUhSeWFXRnVaM1ZzWVhSbFUyaGhjR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdXMTBzSUdrZ1BTQmJYU3dnY2lBOUlGdGRPd29nSUNBZ0lDQWdJR2RqS0dVcExDQjRZeWh1TENCbEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHVXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lIUXVabTl5UldGamFDaG5ZeWs3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzSUQwZ01Ec2diQ0E4SUhRdWJHVnVaM1JvT3lCc0t5c3BhUzV3ZFhOb0tHOHBMQ0J2SUNzOUlIUmJiRjB1YkdWdVozUm9MQ0I0WXlodUxDQjBXMnhkS1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUU5NExuUnlhV0Z1WjNWc1lYUmxLRzRzSUdrcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJREE3SUd3Z1BDQmhMbXhsYm1kMGFEc2diQ0FyUFNBektYSXVjSFZ6YUNoaExuTnNhV05sS0d3c0lHd2dLeUF6S1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlHZGpLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdjeTVzWlc1bmRHZzdDaUFnSUNCbElENGdNaUFtSmlCelcyVWdMU0F4WFM1bGNYVmhiSE1vYzFzd1hTa2dKaVlnY3k1d2IzQW9LVHNLZlFwbWRXNWpkR2x2YmlCNFl5aHpMQ0JsS1NCN0NpQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnWlM1c1pXNW5kR2c3SUhRckt5bHpMbkIxYzJnb1pWdDBYUzU0S1N3Z2N5NXdkWE5vS0dWYmRGMHVlU2s3Q24wS2RtRnlJR3h1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJmWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUZoMEtGc0tJQ0FnSUNBZ0lDQnVaWGNnV0NndU5Td2dMalVwTEFvZ0lDQWdJQ0FnSUc1bGR5QllLQzB1TlN3Z0xqVXBMQW9nSUNBZ0lDQWdJRzVsZHlCWUtDMHVOU3dnTFM0MUtTd0tJQ0FnSUNBZ0lDQnVaWGNnV0NndU5Td2dMUzQxS1FvZ0lDQWdYU2tzSUhRZ1BTQjdmU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVJYaDBjblZrWlVkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGd1pYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NNklIUUtJQ0FnSUNBZ0lDQjlMQ0JsSUQwZ1FYSnlZWGt1YVhOQmNuSmhlU2hsS1NBL0lHVWdPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lHVUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3l3Z2FTQTlJRnRkTENCeUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JoSUQwZ01Dd2diQ0E5SUdVdWJHVnVaM1JvT3lCaElEd2diRHNnWVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0JsVzJGZE93b2dJQ0FnSUNBZ0lDQWdJQ0J2S0dNcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9hU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2daR1VvY2l3Z01pa3BMQ0IwYUdsekxtTnZiWEIxZEdWV1pYSjBaWGhPYjNKdFlXeHpLQ2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYnloaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnVzEwc0lHTWdQU0IwTG1OMWNuWmxVMlZuYldWdWRITWdJVDA5SUhadmFXUWdNQ0EvSUhRdVkzVnlkbVZUWldkdFpXNTBjeUE2SURFeUxDQm9JRDBnZEM1emRHVndjeUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNXpkR1Z3Y3lBNklERXNJSFVnUFNCMExtUmxjSFJvSUNFOVBTQjJiMmxrSURBZ1B5QjBMbVJsY0hSb0lEb2dNU3dnWkNBOUlIUXVZbVYyWld4RmJtRmliR1ZrSUNFOVBTQjJiMmxrSURBZ1B5QjBMbUpsZG1Wc1JXNWhZbXhsWkNBNklDRXdMQ0JtSUQwZ2RDNWlaWFpsYkZSb2FXTnJibVZ6Y3lBaFBUMGdkbTlwWkNBd0lEOGdkQzVpWlhabGJGUm9hV05yYm1WemN5QTZJQzR5TENCdElEMGdkQzVpWlhabGJGTnBlbVVnSVQwOUlIWnZhV1FnTUNBL0lIUXVZbVYyWld4VGFYcGxJRG9nWmlBdElDNHhMQ0I0SUQwZ2RDNWlaWFpsYkU5bVpuTmxkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNWlaWFpsYkU5bVpuTmxkQ0E2SURBc0lIWWdQU0IwTG1KbGRtVnNVMlZuYldWdWRITWdJVDA5SUhadmFXUWdNQ0EvSUhRdVltVjJaV3hUWldkdFpXNTBjeUE2SURNc0lHY2dQU0IwTG1WNGRISjFaR1ZRWVhSb0xDQndJRDBnZEM1VlZrZGxibVZ5WVhSdmNpQWhQVDBnZG05cFpDQXdJRDhnZEM1VlZrZGxibVZ5WVhSdmNpQTZJRzU1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbUZ0YjNWdWRDQWhQVDBnZG05cFpDQXdJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrVjRkSEoxWkdWQ2RXWm1aWEpIWlc5dFpYUnllVG9nWVcxdmRXNTBJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnWkdWd2RHZ3VJaWtzSUhVZ1BTQjBMbUZ0YjNWdWRDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZMQ0I1SUQwZ0lURXNJR0lzSUVFc0lFd3NJRWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHY2dKaVlnS0Y4Z1BTQm5MbWRsZEZOd1lXTmxaRkJ2YVc1MGN5aG9LU3dnZVNBOUlDRXdMQ0JrSUQwZ0lURXNJR0lnUFNCbkxtTnZiWEIxZEdWR2NtVnVaWFJHY21GdFpYTW9hQ3dnSVRFcExDQkJJRDBnYm1WM0lFMHNJRXdnUFNCdVpYY2dUU3dnU1NBOUlHNWxkeUJOS1N3Z1pDQjhmQ0FvZGlBOUlEQXNJR1lnUFNBd0xDQnRJRDBnTUN3Z2VDQTlJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYXlBOUlHRXVaWGgwY21GamRGQnZhVzUwY3loaktTd2dRaUE5SUdzdWMyaGhjR1VzSUZBZ1BTQnJMbWh2YkdWek93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lVcDBMbWx6UTJ4dlkydFhhWE5sS0VJcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkNJRDBnUWk1eVpYWmxjbk5sS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVjZ1BTQXdMQ0JxSUQwZ1VDNXNaVzVuZEdnN0lFY2dQQ0JxT3lCSEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkxJRDBnVUZ0SFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JLZEM1cGMwTnNiMk5yVjJselpTaExLU0FtSmlBb1VGdEhYU0E5SUVzdWNtVjJaWEp6WlNncEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlFcDBMblJ5YVdGdVozVnNZWFJsVTJoaGNHVW9RaXdnVUNrc0lFUWdQU0JDT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFY2dQU0F3TENCcUlEMGdVQzVzWlc1bmRHZzdJRWNnUENCcU95QkhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFc2dQU0JRVzBkZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FpQTlJRUl1WTI5dVkyRjBLRXNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUZVb1J5d2dhaXdnU3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdvZ2ZId2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UlhoMGNuVmtaVWRsYjIxbGRISjVPaUIyWldNZ1pHOWxjeUJ1YjNRZ1pYaHBjM1FpS1N3Z2FpNWpiRzl1WlNncExtMTFiSFJwY0d4NVUyTmhiR0Z5S0VzcExtRmtaQ2hIS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUVJdWJHVnVaM1JvTENCUElEMGdSUzVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUc1bEtFY3NJR29zSUVzcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxWlN3Z2MyVXNJRk5sTENCVVpTQTlJRWN1ZUNBdElHb3VlQ3dnVUdVZ1BTQkhMbmtnTFNCcUxua3NJRmxsSUQwZ1N5NTRJQzBnUnk1NExDQkRJRDBnU3k1NUlDMGdSeTU1TENCVUlEMGdWR1VnS2lCVVpTQXJJRkJsSUNvZ1VHVXNJRW9nUFNCVVpTQXFJRU1nTFNCUVpTQXFJRmxsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFMWhkR2d1WVdKektFb3BJRDRnVG5WdFltVnlMa1ZRVTBsTVQwNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdKQ0E5SUUxaGRHZ3VjM0Z5ZENoVUtTd2djbVVnUFNCTllYUm9Mbk54Y25Rb1dXVWdLaUJaWlNBcklFTWdLaUJES1N3Z1dpQTlJR291ZUNBdElGQmxJQzhnSkN3Z1RXVWdQU0JxTG5rZ0t5QlVaU0F2SUNRc0lIWmxJRDBnU3k1NElDMGdReUF2SUhKbExDQjBaU0E5SUVzdWVTQXJJRmxsSUM4Z2NtVXNJRklnUFNBb0tIWmxJQzBnV2lrZ0tpQkRJQzBnS0hSbElDMGdUV1VwSUNvZ1dXVXBJQzhnS0ZSbElDb2dReUF0SUZCbElDb2dXV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVmxJRDBnV2lBcklGUmxJQ29nVWlBdElFY3VlQ3dnYzJVZ1BTQk5aU0FySUZCbElDb2dVaUF0SUVjdWVUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pXVWdQU0IxWlNBcUlIVmxJQ3NnYzJVZ0tpQnpaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aV1VnUEQwZ01pa2djbVYwZFhKdUlHNWxkeUJZS0hWbExDQnpaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1UyVWdQU0JOWVhSb0xuTnhjblFvWldVZ0x5QXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElDUWdQU0FoTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlVaU0ErSUU1MWJXSmxjaTVGVUZOSlRFOU9JRDhnV1dVZ1BpQk9kVzFpWlhJdVJWQlRTVXhQVGlBbUppQW9KQ0E5SUNFd0tTQTZJRlJsSUR3Z0xVNTFiV0psY2k1RlVGTkpURTlPSUQ4Z1dXVWdQQ0F0VG5WdFltVnlMa1ZRVTBsTVQwNGdKaVlnS0NRZ1BTQWhNQ2tnT2lCTllYUm9Mbk5wWjI0b1VHVXBJRDA5UFNCTllYUm9Mbk5wWjI0b1F5a2dKaVlnS0NRZ1BTQWhNQ2tzSUNRZ1B5QW9kV1VnUFNBdFVHVXNJSE5sSUQwZ1ZHVXNJRk5sSUQwZ1RXRjBhQzV6Y1hKMEtGUXBLU0E2SUNoMVpTQTlJRlJsTENCelpTQTlJRkJsTENCVFpTQTlJRTFoZEdndWMzRnlkQ2hVSUM4Z01pa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJZS0hWbElDOGdVMlVzSUhObElDOGdVMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpaU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRWNnUFNBd0xDQnFJRDBnUkM1c1pXNW5kR2dzSUVzZ1BTQnFJQzBnTVN3Z2RXVWdQU0JISUNzZ01Uc2dSeUE4SUdvN0lFY3JLeXdnU3lzckxDQjFaU3NyS1VzZ1BUMDlJR29nSmlZZ0tFc2dQU0F3S1N3Z2RXVWdQVDA5SUdvZ0ppWWdLSFZsSUQwZ01Da3NJR05sVzBkZElEMGdibVVvUkZ0SFhTd2dSRnRMWFN3Z1JGdDFaVjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVmlBOUlGdGRMQ0JYTENCb1pTQTlJR05sTG1OdmJtTmhkQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFY2dQU0F3TENCcUlEMGdVQzVzWlc1bmRHZzdJRWNnUENCcU95QkhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFc2dQU0JRVzBkZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1Z5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxWlNBOUlEQXNJSE5sSUQwZ1N5NXNaVzVuZEdnc0lGTmxJRDBnYzJVZ0xTQXhMQ0JVWlNBOUlIVmxJQ3NnTVRzZ2RXVWdQQ0J6WlRzZ2RXVXJLeXdnVTJVckt5d2dWR1VyS3lsVFpTQTlQVDBnYzJVZ0ppWWdLRk5sSUQwZ01Da3NJRlJsSUQwOVBTQnpaU0FtSmlBb1ZHVWdQU0F3S1N3Z1YxdDFaVjBnUFNCdVpTaExXM1ZsWFN3Z1MxdFRaVjBzSUV0YlZHVmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRll1Y0hWemFDaFhLU3dnYUdVZ1BTQm9aUzVqYjI1allYUW9WeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JISUQwZ01Ec2dSeUE4SUhZN0lFY3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FpQTlJRWNnTHlCMkxDQkxJRDBnWmlBcUlFMWhkR2d1WTI5ektHb2dLaUJOWVhSb0xsQkpJQzhnTWlrc0lIVmxJRDBnYlNBcUlFMWhkR2d1YzJsdUtHb2dLaUJOWVhSb0xsQkpJQzhnTWlrZ0t5QjRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnpaU0E5SURBc0lGTmxJRDBnUkM1c1pXNW5kR2c3SUhObElEd2dVMlU3SUhObEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlVaU0E5SUZVb1JGdHpaVjBzSUdObFczTmxYU3dnZFdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRU5sS0ZSbExuZ3NJRlJsTG5rc0lDMUxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjMlVnUFNBd0xDQlRaU0E5SUZBdWJHVnVaM1JvT3lCelpTQThJRk5sT3lCelpTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWR1VnUFNCUVczTmxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCWElEMGdWbHR6WlYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQlFaU0E5SURBc0lGbGxJRDBnVkdVdWJHVnVaM1JvT3lCUVpTQThJRmxsT3lCUVpTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVNZ1BTQlZLRlJsVzFCbFhTd2dWMXRRWlYwc0lIVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRMlVvUXk1NExDQkRMbmtzSUMxTEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHeGxJRDBnYlNBcklIZzdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUnlBOUlEQTdJRWNnUENCR095QkhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHb2dQU0JrSUQ4Z1ZTaENXMGRkTENCb1pWdEhYU3dnYkdVcElEb2dRbHRIWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhrZ1B5QW9UQzVqYjNCNUtHSXVibTl5YldGc2Mxc3dYU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9haTU0S1N3Z1FTNWpiM0I1S0dJdVltbHViM0p0WVd4eld6QmRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHFMbmtwTENCSkxtTnZjSGtvWDFzd1hTa3VZV1JrS0V3cExtRmtaQ2hCS1N3Z1EyVW9TUzU0TENCSkxua3NJRWt1ZWlrcElEb2dRMlVvYWk1NExDQnFMbmtzSURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1J5QTlJREU3SUVjZ1BEMGdhRHNnUnlzcktXWnZjaWhzWlhRZ2FpQTlJREE3SUdvZ1BDQkdPeUJxS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRXNnUFNCa0lEOGdWU2hDVzJwZExDQm9aVnRxWFN3Z2JHVXBJRG9nUWx0cVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIa2dQeUFvVEM1amIzQjVLR0l1Ym05eWJXRnNjMXRIWFNrdWJYVnNkR2x3YkhsVFkyRnNZWElvU3k1NEtTd2dRUzVqYjNCNUtHSXVZbWx1YjNKdFlXeHpXMGRkS1M1dGRXeDBhWEJzZVZOallXeGhjaWhMTG5rcExDQkpMbU52Y0hrb1gxdEhYU2t1WVdSa0tFd3BMbUZrWkNoQktTd2dRMlVvU1M1NExDQkpMbmtzSUVrdWVpa3BJRG9nUTJVb1N5NTRMQ0JMTG5rc0lIVWdMeUJvSUNvZ1J5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkhJRDBnZGlBdElERTdJRWNnUGowZ01Ec2dSeTB0S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnFJRDBnUnlBdklIWXNJRXNnUFNCbUlDb2dUV0YwYUM1amIzTW9haUFxSUUxaGRHZ3VVRWtnTHlBeUtTd2dkV1VnUFNCdElDb2dUV0YwYUM1emFXNG9haUFxSUUxaGRHZ3VVRWtnTHlBeUtTQXJJSGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSE5sSUQwZ01Dd2dVMlVnUFNCRUxteGxibWQwYURzZ2MyVWdQQ0JUWlRzZ2MyVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRlJsSUQwZ1ZTaEVXM05sWFN3Z1kyVmJjMlZkTENCMVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUTJVb1ZHVXVlQ3dnVkdVdWVTd2dkU0FySUVzcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCelpTQTlJREFzSUZObElEMGdVQzVzWlc1bmRHZzdJSE5sSUR3Z1UyVTdJSE5sS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVVpTQTlJRkJiYzJWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRmNnUFNCV1czTmxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZCbElEMGdNQ3dnV1dVZ1BTQlVaUzVzWlc1bmRHZzdJRkJsSUR3Z1dXVTdJRkJsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdReUE5SUZVb1ZHVmJVR1ZkTENCWFcxQmxYU3dnZFdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNUlEOGdRMlVvUXk1NExDQkRMbmtnS3lCZlcyZ2dMU0F4WFM1NUxDQmZXMmdnTFNBeFhTNTRJQ3NnU3lrZ09pQkRaU2hETG5nc0lFTXVlU3dnZFNBcklFc3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbVpTZ3BMQ0JDWlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJtWlNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JISUQwZ2FTNXNaVzVuZEdnZ0x5QXpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FpQTlJREFzSUVzZ1BTQkdJQ29nYWpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVmxJRDBnTURzZ2RXVWdQQ0JQT3lCMVpTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhObElEMGdSVnQxWlYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhsbEtITmxXekpkSUNzZ1N5d2djMlZiTVYwZ0t5QkxMQ0J6WlZzd1hTQXJJRXNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JxSUQwZ2FDQXJJSFlnS2lBeUxDQkxJRDBnUmlBcUlHbzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxWlNBOUlEQTdJSFZsSUR3Z1R6c2dkV1VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnpaU0E5SUVWYmRXVmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVaU2h6WlZzd1hTQXJJRXNzSUhObFd6RmRJQ3NnU3l3Z2MyVmJNbDBnS3lCTEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYWlBOUlEQTdJR29nUENCUE95QnFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1N5QTlJRVZiYWwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhsbEtFdGJNbDBzSUV0Yk1WMHNJRXRiTUYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdvZ1BTQXdPeUJxSUR3Z1R6c2dhaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFc2dQU0JGVzJwZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNVpTaExXekJkSUNzZ1JpQXFJR2dzSUV0Yk1WMGdLeUJHSUNvZ2FDd2dTMXN5WFNBcklFWWdLaUJvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVMbUZrWkVkeWIzVndLRWNzSUdrdWJHVnVaM1JvSUM4Z015QXRJRWNzSURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlFSmxLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFY2dQU0JwTG14bGJtZDBhQ0F2SURNc0lHb2dQU0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnV1NoRUxDQnFLU3dnYWlBclBTQkVMbXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1N5QTlJREFzSUhWbElEMGdVQzVzWlc1bmRHZzdJRXNnUENCMVpUc2dTeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYzJVZ1BTQlFXMHRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGa29jMlVzSUdvcExDQnFJQ3M5SUhObExteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc0dVlXUmtSM0p2ZFhBb1J5d2dhUzVzWlc1bmRHZ2dMeUF6SUMwZ1J5d2dNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnV1NoSExDQnFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1N5QTlJRWN1YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0RzZ0xTMUxJRDQ5SURBN0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RXVWdQU0JMTENCelpTQTlJRXNnTFNBeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sSUR3Z01DQW1KaUFvYzJVZ1BTQkhMbXhsYm1kMGFDQXRJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1UyVWdQU0F3TENCVVpTQTlJR2dnS3lCMklDb2dNanNnVTJVZ1BDQlVaVHNnVTJVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JRWlNBOUlFWWdLaUJUWlN3Z1dXVWdQU0JHSUNvZ0tGTmxJQ3NnTVNrc0lFTWdQU0JxSUNzZ2RXVWdLeUJRWlN3Z1ZDQTlJR29nS3lCelpTQXJJRkJsTENCS0lEMGdhaUFySUhObElDc2dXV1VzSUNRZ1BTQnFJQ3NnZFdVZ0t5QlpaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlVvUXl3Z1ZDd2dTaXdnSkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRU5sS0Vjc0lHb3NJRXNwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd3dWNIVnphQ2hIS1N3Z2JDNXdkWE5vS0dvcExDQnNMbkIxYzJnb1N5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdlV1VvUnl3Z2Fpd2dTeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUdVb1J5a3NJSGhsS0dvcExDQjRaU2hMS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFaU0E5SUdrdWJHVnVaM1JvSUM4Z015d2djMlVnUFNCd0xtZGxibVZ5WVhSbFZHOXdWVllvYml3Z2FTd2dkV1VnTFNBekxDQjFaU0F0SURJc0lIVmxJQzBnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCUFpTaHpaVnN3WFNrc0lFOWxLSE5sV3pGZEtTd2dUMlVvYzJWYk1sMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2RsS0Vjc0lHb3NJRXNzSUhWbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRaU2hIS1N3Z2VHVW9haWtzSUhobEtIVmxLU3dnZUdVb2Fpa3NJSGhsS0VzcExDQjRaU2gxWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjMlVnUFNCcExteGxibWQwYUNBdklETXNJRk5sSUQwZ2NDNW5aVzVsY21GMFpWTnBaR1ZYWVd4c1ZWWW9iaXdnYVN3Z2MyVWdMU0EyTENCelpTQXRJRE1zSUhObElDMGdNaXdnYzJVZ0xTQXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRTlsS0ZObFd6QmRLU3dnVDJVb1UyVmJNVjBwTENCUFpTaFRaVnN6WFNrc0lFOWxLRk5sV3pGZEtTd2dUMlVvVTJWYk1sMHBMQ0JQWlNoVFpWc3pYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZUdVb1J5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzV3ZFhOb0tHeGJSeUFxSURNZ0t5QXdYU2tzSUdrdWNIVnphQ2hzVzBjZ0tpQXpJQ3NnTVYwcExDQnBMbkIxYzJnb2JGdEhJQ29nTXlBcklESmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJQWlNoSEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlMbkIxYzJnb1J5NTRLU3dnY2k1d2RYTm9LRWN1ZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9LU3dnZENBOUlIUm9hWE11Y0dGeVlXMWxkR1Z5Y3k1emFHRndaWE1zSUc0Z1BTQjBhR2x6TG5CaGNtRnRaWFJsY25NdWIzQjBhVzl1Y3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVhrb2RDd2diaXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHVXVjMmhoY0dWekxteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnZEZ0bExuTm9ZWEJsYzF0eVhWMDdDaUFnSUNBZ0lDQWdJQ0FnSUc0dWNIVnphQ2hoS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExtOXdkR2x2Ym5NdVpYaDBjblZrWlZCaGRHZzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHa2dJVDA5SUhadmFXUWdNQ0FtSmlBb1pTNXZjSFJwYjI1ekxtVjRkSEoxWkdWUVlYUm9JRDBnYm1WM0lGUmhXMmt1ZEhsd1pWMG9LUzVtY205dFNsTlBUaWhwS1Nrc0lHNWxkeUJzYmlodUxDQmxMbTl3ZEdsdmJuTXBPd29nSUNBZ2ZRcDlMQ0J1ZVNBOUlIc0tJQ0FnSUdkbGJtVnlZWFJsVkc5d1ZWWTZJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHVmJkQ0FxSUROZExDQnZJRDBnWlZ0MElDb2dNeUFySURGZExDQmhJRDBnWlZ0dUlDb2dNMTBzSUd3Z1BTQmxXMjRnS2lBeklDc2dNVjBzSUdNZ1BTQmxXMmtnS2lBelhTd2dhQ0E5SUdWYmFTQXFJRE1nS3lBeFhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dDaHlMQ0J2S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZnb1lTd2diQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJZS0dNc0lHZ3BDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lIMHNDaUFnSUNCblpXNWxjbUYwWlZOcFpHVlhZV3hzVlZZNklHWjFibU4wYVc5dUtITXNJR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHVmJkQ0FxSUROZExDQmhJRDBnWlZ0MElDb2dNeUFySURGZExDQnNJRDBnWlZ0MElDb2dNeUFySURKZExDQmpJRDBnWlZ0dUlDb2dNMTBzSUdnZ1BTQmxXMjRnS2lBeklDc2dNVjBzSUhVZ1BTQmxXMjRnS2lBeklDc2dNbDBzSUdRZ1BTQmxXMmtnS2lBelhTd2daaUE5SUdWYmFTQXFJRE1nS3lBeFhTd2diU0E5SUdWYmFTQXFJRE1nS3lBeVhTd2dlQ0E5SUdWYmNpQXFJRE5kTENCMklEMGdaVnR5SUNvZ015QXJJREZkTENCbklEMGdaVnR5SUNvZ015QXJJREpkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRmljeWhoSUMwZ2FDa2dQQ0JOWVhSb0xtRmljeWh2SUMwZ1l5a2dQeUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJZS0c4c0lERWdMU0JzS1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZnb1l5d2dNU0F0SUhVcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dDaGtMQ0F4SUMwZ2JTa3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QllLSGdzSURFZ0xTQm5LUW9nSUNBZ0lDQWdJRjBnT2lCYkNpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCWUtHRXNJREVnTFNCc0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lGZ29hQ3dnTVNBdElIVXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dXQ2htTENBeElDMGdiU2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJZS0hZc0lERWdMU0JuS1FvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlHbDVLSE1zSUdVc0lIUXBJSHNLSUNBZ0lHbG1JQ2gwTG5Ob1lYQmxjeUE5SUZ0ZExDQkJjbkpoZVM1cGMwRnljbUY1S0hNcEtTQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdjeTVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYzF0dVhUc0tJQ0FnSUNBZ0lDQjBMbk5vWVhCbGN5NXdkWE5vS0hJdWRYVnBaQ2s3Q2lBZ0lDQjlDaUFnSUNCbGJITmxJSFF1YzJoaGNHVnpMbkIxYzJnb2N5NTFkV2xrS1RzS0lDQWdJSEpsZEhWeWJpQmxMbVY0ZEhKMVpHVlFZWFJvSUNFOVBTQjJiMmxrSURBZ0ppWWdLSFF1YjNCMGFXOXVjeTVsZUhSeWRXUmxVR0YwYUNBOUlHVXVaWGgwY25Wa1pWQmhkR2d1ZEc5S1UwOU9LQ2twTENCME93cDlDblpoY2lCZmNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1lXNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F3S1hzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUNneElDc2dUV0YwYUM1emNYSjBLRFVwS1NBdklESXNJR2tnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0Yml3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQmRMQ0J5SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ05Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdOU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ055d0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdOeXdLSUNBZ0lDQWdJQ0FnSUNBZ01UQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREV3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdPU3dLSUNBZ0lDQWdJQ0FnSUNBZ05Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRFc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdNVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEa3NDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURrc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEa3NDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURFeExBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnT0N3S0lDQWdJQ0FnSUNBZ0lDQWdOaXdLSUNBZ0lDQWdJQ0FnSUNBZ055d0tJQ0FnSUNBZ0lDQWdJQ0FnT1N3S0lDQWdJQ0FnSUNBZ0lDQWdPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Rb2dJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2FTd2djaXdnWlN3Z2RDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtsamIzTmhhR1ZrY205dVIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1YwWVdsc09pQjBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QmZjaWhsTG5KaFpHbDFjeXdnWlM1a1pYUmhhV3dwT3dvZ0lDQWdmUXA5TENCTmNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1gyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUZzS0lDQWdJQ0FnSUNCdVpYY2dXQ2d3TENBdU5Ta3NDaUFnSUNBZ0lDQWdibVYzSUZnb0xqVXNJREFwTEFvZ0lDQWdJQ0FnSUc1bGR5QllLREFzSUMwdU5Ta0tJQ0FnSUYwc0lIUWdQU0F4TWl3Z2JpQTlJREFzSUdrZ1BTQk5ZWFJvTGxCSklDb2dNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRHRjBhR1ZIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5Sek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCelpXZHRaVzUwY3pvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnY0docFUzUmhjblE2SUc0c0NpQWdJQ0FnSUNBZ0lDQWdJSEJvYVV4bGJtZDBhRG9nYVFvZ0lDQWdJQ0FnSUgwc0lIUWdQU0JOWVhSb0xtWnNiMjl5S0hRcExDQnBJRDBnYlhRb2FTd2dNQ3dnVFdGMGFDNVFTU0FxSURJcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ1cxMHNJRzhnUFNCYlhTd2dZU0E5SUZ0ZExDQnNJRDBnVzEwc0lHTWdQU0JiWFN3Z2FDQTlJREVnTHlCMExDQjFJRDBnYm1WM0lFMHNJR1FnUFNCdVpYY2dXQ3dnWmlBOUlHNWxkeUJOTENCdElEMGdibVYzSUUwc0lIZ2dQU0J1WlhjZ1RTd2dkaUE5SURBc0lHY2dQU0F3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY0NBOUlEQTdJSEFnUEQwZ1pTNXNaVzVuZEdnZ0xTQXhPeUJ3S3lzcGMzZHBkR05vS0hBcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEQTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJJRDBnWlZ0d0lDc2dNVjB1ZUNBdElHVmJjRjB1ZUN3Z1p5QTlJR1ZiY0NBcklERmRMbmtnTFNCbFczQmRMbmtzSUdZdWVDQTlJR2NnS2lBeExDQm1MbmtnUFNBdGRpd2daaTU2SUQwZ1p5QXFJREFzSUhndVkyOXdlU2htS1N3Z1ppNXViM0p0WVd4cGVtVW9LU3dnYkM1d2RYTm9LR1l1ZUN3Z1ppNTVMQ0JtTG5vcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnWlM1c1pXNW5kR2dnTFNBeE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JDNXdkWE5vS0hndWVDd2dlQzU1TENCNExub3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJJRDBnWlZ0d0lDc2dNVjB1ZUNBdElHVmJjRjB1ZUN3Z1p5QTlJR1ZiY0NBcklERmRMbmtnTFNCbFczQmRMbmtzSUdZdWVDQTlJR2NnS2lBeExDQm1MbmtnUFNBdGRpd2daaTU2SUQwZ1p5QXFJREFzSUcwdVkyOXdlU2htS1N3Z1ppNTRJQ3M5SUhndWVDd2daaTU1SUNzOUlIZ3VlU3dnWmk1NklDczlJSGd1ZWl3Z1ppNXViM0p0WVd4cGVtVW9LU3dnYkM1d2RYTm9LR1l1ZUN3Z1ppNTVMQ0JtTG5vcExDQjRMbU52Y0hrb2JTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjQ0E5SURBN0lIQWdQRDBnZERzZ2NDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjhnUFNCdUlDc2djQ0FxSUdnZ0tpQnBMQ0I1SUQwZ1RXRjBhQzV6YVc0b1h5a3NJR0lnUFNCTllYUm9MbU52Y3loZktUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JCSUQwZ01Ec2dRU0E4UFNCbExteGxibWQwYUNBdElERTdJRUVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMUxuZ2dQU0JsVzBGZExuZ2dLaUI1TENCMUxua2dQU0JsVzBGZExua3NJSFV1ZWlBOUlHVmJRVjB1ZUNBcUlHSXNJRzh1Y0hWemFDaDFMbmdzSUhVdWVTd2dkUzU2S1N3Z1pDNTRJRDBnY0NBdklIUXNJR1F1ZVNBOUlFRWdMeUFvWlM1c1pXNW5kR2dnTFNBeEtTd2dZUzV3ZFhOb0tHUXVlQ3dnWkM1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JNSUQwZ2JGc3pJQ29nUVNBcklEQmRJQ29nZVN3Z1NTQTlJR3hiTXlBcUlFRWdLeUF4WFN3Z2F5QTlJR3hiTXlBcUlFRWdLeUF3WFNBcUlHSTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpMbkIxYzJnb1RDd2dTU3dnYXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J3SUQwZ01Ec2djQ0E4SUhRN0lIQXJLeWxtYjNJb2JHVjBJRjhnUFNBd095QmZJRHdnWlM1c1pXNW5kR2dnTFNBeE95QmZLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlGOGdLeUJ3SUNvZ1pTNXNaVzVuZEdnc0lHSWdQU0I1TENCQklEMGdlU0FySUdVdWJHVnVaM1JvTENCTUlEMGdlU0FySUdVdWJHVnVaM1JvSUNzZ01Td2dTU0E5SUhrZ0t5QXhPd29nSUNBZ0lDQWdJQ0FnSUNCeUxuQjFjMmdvWWl3Z1FTd2dTU2tzSUhJdWNIVnphQ2hCTENCTUxDQkpLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXpaWFJKYm1SbGVDaHlLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0c4c0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdSbEtHRXNJRElwS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNWxkeUJrWlNoakxDQXpLU2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dUWElvWlM1d2IybHVkSE1zSUdVdWMyVm5iV1Z1ZEhNc0lHVXVjR2hwVTNSaGNuUXNJR1V1Y0docFRHVnVaM1JvS1RzS0lDQWdJSDBLZlN3Z1NXa2dQU0JqYkdGemN5QmxlSFJsYm1SeklHRnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTUNsN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURUtJQ0FnSUNBZ0lDQmRMQ0JwSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeUNpQWdJQ0FnSUNBZ1hUc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodUxDQnBMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVDJOMFlXaGxaSEp2YmtkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxkR0ZwYkRvZ2RBb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1NXa29aUzV5WVdScGRYTXNJR1V1WkdWMFlXbHNLVHNLSUNBZ0lIMEtmU3dnWW5JZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F1TlN3Z2RDQTlJREVzSUc0Z1BTQTRMQ0JwSUQwZ01Td2djaUE5SURBc0lHOGdQU0JOWVhSb0xsQkpJQ29nTWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVbWx1WjBkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwYm01bGNsSmhaR2wxY3pvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYjNWMFpYSlNZV1JwZFhNNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhVMlZuYldWdWRITTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQm9hVk5sWjIxbGJuUnpPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR1YwWVZOMFlYSjBPaUJ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR1YwWVV4bGJtZDBhRG9nYndvZ0lDQWdJQ0FnSUgwc0lHNGdQU0JOWVhSb0xtMWhlQ2d6TENCdUtTd2dhU0E5SUUxaGRHZ3ViV0Y0S0RFc0lHa3BPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdXMTBzSUd3Z1BTQmJYU3dnWXlBOUlGdGRMQ0JvSUQwZ1cxMHNJSFVnUFNCbExDQmtJRDBnS0hRZ0xTQmxLU0F2SUdrc0lHWWdQU0J1WlhjZ1RTd2diU0E5SUc1bGR5QllPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdlQ0E5SURBN0lIZ2dQRDBnYVRzZ2VDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMklEMGdNRHNnZGlBOFBTQnVPeUIyS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCeUlDc2dkaUF2SUc0Z0tpQnZPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaaTU0SUQwZ2RTQXFJRTFoZEdndVkyOXpLR2NwTENCbUxua2dQU0IxSUNvZ1RXRjBhQzV6YVc0b1p5a3NJR3d1Y0hWemFDaG1MbmdzSUdZdWVTd2daaTU2S1N3Z1l5NXdkWE5vS0RBc0lEQXNJREVwTENCdExuZ2dQU0FvWmk1NElDOGdkQ0FySURFcElDOGdNaXdnYlM1NUlEMGdLR1l1ZVNBdklIUWdLeUF4S1NBdklESXNJR2d1Y0hWemFDaHRMbmdzSUcwdWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdkU0FyUFNCa093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIZ2dQU0F3T3lCNElEd2dhVHNnZUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0I0SUNvZ0tHNGdLeUF4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm5JRDBnTURzZ1p5QThJRzQ3SUdjckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0NBOUlHY2dLeUIyTENCZklEMGdjQ3dnZVNBOUlIQWdLeUJ1SUNzZ01Td2dZaUE5SUhBZ0t5QnVJQ3NnTWl3Z1FTQTlJSEFnS3lBeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTNXdkWE5vS0Y4c0lIa3NJRUVwTENCaExuQjFjMmdvZVN3Z1lpd2dRU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1elpYUkpibVJsZUNoaEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR3dzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCa1pTaGpMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QmtaU2hvTENBeUtTazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1luSW9aUzVwYm01bGNsSmhaR2wxY3l3Z1pTNXZkWFJsY2xKaFpHbDFjeXdnWlM1MGFHVjBZVk5sWjIxbGJuUnpMQ0JsTG5Cb2FWTmxaMjFsYm5SekxDQmxMblJvWlhSaFUzUmhjblFzSUdVdWRHaGxkR0ZNWlc1bmRHZ3BPd29nSUNBZ2ZRcDlMQ0JFYVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCWWRDaGJDaUFnSUNBZ0lDQWdibVYzSUZnb01Dd2dMalVwTEFvZ0lDQWdJQ0FnSUc1bGR5QllLQzB1TlN3Z0xTNDFLU3dLSUNBZ0lDQWdJQ0J1WlhjZ1dDZ3VOU3dnTFM0MUtRb2dJQ0FnWFNrc0lIUWdQU0F4TWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVMmhoY0dWSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQmpkWEoyWlZObFoyMWxiblJ6T2lCMENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlGdGRMQ0JwSUQwZ1cxMHNJSElnUFNCYlhTd2dieUE5SUZ0ZExDQmhJRDBnTUN3Z2JDQTlJREE3Q2lBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWlNrZ1BUMDlJQ0V4S1NCaktHVXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ1ptOXlLR3hsZENCb0lEMGdNRHNnYUNBOElHVXViR1Z1WjNSb095Qm9LeXNwWXlobFcyaGRLU3dnZEdocGN5NWhaR1JIY205MWNDaGhMQ0JzTENCb0tTd2dZU0FyUFNCc0xDQnNJRDBnTURzS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVsdVpHVjRLRzRwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2FTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0hJc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdSbEtHOHNJRElwS1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCaktHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCcExteGxibWQwYUNBdklETXNJR1FnUFNCb0xtVjRkSEpoWTNSUWIybHVkSE1vZENrc0lHWWdQU0JrTG5Ob1lYQmxMQ0J0SUQwZ1pDNW9iMnhsY3pzS0lDQWdJQ0FnSUNBZ0lDQWdTblF1YVhORGJHOWphMWRwYzJVb1ppa2dQVDA5SUNFeElDWW1JQ2htSUQwZ1ppNXlaWFpsY25ObEtDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhZZ1BTQXdMQ0JuSUQwZ2JTNXNaVzVuZEdnN0lIWWdQQ0JuT3lCMkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQnRXM1pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnU25RdWFYTkRiRzlqYTFkcGMyVW9jQ2tnUFQwOUlDRXdJQ1ltSUNodFczWmRJRDBnY0M1eVpYWmxjbk5sS0NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ1NuUXVkSEpwWVc1bmRXeGhkR1ZUYUdGd1pTaG1MQ0J0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjJJRDBnTUN3Z1p5QTlJRzB1YkdWdVozUm9PeUIySUR3Z1p6c2dkaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnYlZ0MlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWWdQU0JtTG1OdmJtTmhkQ2h3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhZZ1BTQXdMQ0JuSUQwZ1ppNXNaVzVuZEdnN0lIWWdQQ0JuT3lCMkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQm1XM1pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1d2RYTm9LSEF1ZUN3Z2NDNTVMQ0F3S1N3Z2NpNXdkWE5vS0RBc0lEQXNJREVwTENCdkxuQjFjMmdvY0M1NExDQndMbmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZGlBOUlEQXNJR2NnUFNCNExteGxibWQwYURzZ2RpQThJR2M3SUhZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0NBOUlIaGJkbDBzSUY4Z1BTQndXekJkSUNzZ2RTd2dlU0E5SUhCYk1WMGdLeUIxTENCaUlEMGdjRnN5WFNBcklIVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVMbkIxYzJnb1h5d2dlU3dnWWlrc0lHd2dLejBnTXpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BMQ0IwSUQwZ2RHaHBjeTV3WVhKaGJXVjBaWEp6TG5Ob1lYQmxjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbmtvZEN3Z1pTazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJR1V1YzJoaGNHVnpMbXhsYm1kMGFEc2dhU0E4SUhJN0lHa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2RGdGxMbk5vWVhCbGMxdHBYVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVjSFZ6YUNodktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJFYVNodUxDQmxMbU4xY25abFUyVm5iV1Z1ZEhNcE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQnllU2h6TENCbEtTQjdDaUFnSUNCcFppQW9aUzV6YUdGd1pYTWdQU0JiWFN3Z1FYSnlZWGt1YVhOQmNuSmhlU2h6S1NrZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlITXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSE5iZEYwN0NpQWdJQ0FnSUNBZ1pTNXphR0Z3WlhNdWNIVnphQ2hwTG5WMWFXUXBPd29nSUNBZ2ZRb2dJQ0FnWld4elpTQmxMbk5vWVhCbGN5NXdkWE5vS0hNdWRYVnBaQ2s3Q2lBZ0lDQnlaWFIxY200Z1pUc0tmUXAyWVhJZ1Jta2dQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTXpJc0lHNGdQU0F4Tml3Z2FTQTlJREFzSUhJZ1BTQk5ZWFJvTGxCSklDb2dNaXdnYnlBOUlEQXNJR0VnUFNCTllYUm9MbEJKS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlRjR2hsY21WSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUZObFoyMWxiblJ6T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUlRaV2R0Wlc1MGN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NHaHBVM1JoY25RNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUhCb2FVeGxibWQwYURvZ2Npd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRlRkR0Z5ZERvZ2J5d0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRk1aVzVuZEdnNklHRUtJQ0FnSUNBZ0lDQjlMQ0IwSUQwZ1RXRjBhQzV0WVhnb015d2dUV0YwYUM1bWJHOXZjaWgwS1Nrc0lHNGdQU0JOWVhSb0xtMWhlQ2d5TENCTllYUm9MbVpzYjI5eUtHNHBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJRTFoZEdndWJXbHVLRzhnS3lCaExDQk5ZWFJvTGxCSktTd2dZeUE5SURBc0lHZ2dQU0JiWFN3Z2RTQTlJRzVsZHlCTkxDQmtJRDBnYm1WM0lFMHNJR1lnUFNCYlhTd2diU0E5SUZ0ZExDQjRJRDBnVzEwc0lIWWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdjZ1BTQXdPeUJuSUR3OUlHNDdJR2NyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdXMTBzSUY4Z1BTQm5JQzhnYml3Z2VTQTlJREE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHY2dQVDBnTUNBbUppQnZJRDA5SURBZ1B5QjVJRDBnTGpVZ0x5QjBJRG9nWnlBOVBTQnVJQ1ltSUd3Z1BUMGdUV0YwYUM1UVNTQW1KaUFvZVNBOUlDMHVOU0F2SUhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0lnUFNBd095QmlJRHc5SUhRN0lHSXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FTQTlJR0lnTHlCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RTNTRJRDBnTFdVZ0tpQk5ZWFJvTG1OdmN5aHBJQ3NnUVNBcUlISXBJQ29nVFdGMGFDNXphVzRvYnlBcklGOGdLaUJoS1N3Z2RTNTVJRDBnWlNBcUlFMWhkR2d1WTI5ektHOGdLeUJmSUNvZ1lTa3NJSFV1ZWlBOUlHVWdLaUJOWVhSb0xuTnBiaWhwSUNzZ1FTQXFJSElwSUNvZ1RXRjBhQzV6YVc0b2J5QXJJRjhnS2lCaEtTd2diUzV3ZFhOb0tIVXVlQ3dnZFM1NUxDQjFMbm9wTENCa0xtTnZjSGtvZFNrdWJtOXliV0ZzYVhwbEtDa3NJSGd1Y0hWemFDaGtMbmdzSUdRdWVTd2daQzU2S1N3Z2RpNXdkWE5vS0VFZ0t5QjVMQ0F4SUMwZ1h5a3NJSEF1Y0hWemFDaGpLeXNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdndWNIVnphQ2h3S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbklEMGdNRHNnWnlBOElHNDdJR2NyS3lsbWIzSW9iR1YwSUhBZ1BTQXdPeUJ3SUR3Z2REc2djQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQm9XMmRkVzNBZ0t5QXhYU3dnZVNBOUlHaGJaMTFiY0Ywc0lHSWdQU0JvVzJjZ0t5QXhYVnR3WFN3Z1FTQTlJR2hiWnlBcklERmRXM0FnS3lBeFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnS0djZ0lUMDlJREFnZkh3Z2J5QStJREFwSUNZbUlHWXVjSFZ6YUNoZkxDQjVMQ0JCS1N3Z0tHY2dJVDA5SUc0Z0xTQXhJSHg4SUd3Z1BDQk5ZWFJvTGxCSktTQW1KaUJtTG5CMWMyZ29lU3dnWWl3Z1FTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdWMyVjBTVzVrWlhnb1ppa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2h0TENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p1YjNKdFlXd2lMQ0J1WlhjZ1pHVW9lQ3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2daR1VvZGl3Z01pa3BPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lFWnBLR1V1Y21Ga2FYVnpMQ0JsTG5kcFpIUm9VMlZuYldWdWRITXNJR1V1YUdWcFoyaDBVMlZuYldWdWRITXNJR1V1Y0docFUzUmhjblFzSUdVdWNHaHBUR1Z1WjNSb0xDQmxMblJvWlhSaFUzUmhjblFzSUdVdWRHaGxkR0ZNWlc1bmRHZ3BPd29nSUNBZ2ZRcDlMQ0IzY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nWVc0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXdLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Rb2dJQ0FnSUNBZ0lGMHNJR2tnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0c0c0lHa3NJR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pVWlhSeVlXaGxaSEp2YmtkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxkR0ZwYkRvZ2RBb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2QzSW9aUzV5WVdScGRYTXNJR1V1WkdWMFlXbHNLVHNLSUNBZ0lIMEtmU3dnVTNJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdMalFzSUc0Z1BTQTRMQ0JwSUQwZ05pd2djaUE5SUUxaGRHZ3VVRWtnS2lBeUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pVYjNKMWMwZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBkWE02SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJSFIxWW1VNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbGhiRk5sWjIxbGJuUnpPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBkV0oxYkdGeVUyVm5iV1Z1ZEhNNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUdGeVl6b2djZ29nSUNBZ0lDQWdJSDBzSUc0Z1BTQk5ZWFJvTG1ac2IyOXlLRzRwTENCcElEMGdUV0YwYUM1bWJHOXZjaWhwS1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUZ0ZExDQmhJRDBnVzEwc0lHd2dQU0JiWFN3Z1l5QTlJRnRkTENCb0lEMGdibVYzSUUwc0lIVWdQU0J1WlhjZ1RTd2daQ0E5SUc1bGR5Qk5Pd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaaUE5SURBN0lHWWdQRDBnYmpzZ1ppc3JLV1p2Y2loc1pYUWdiU0E5SURBN0lHMGdQRDBnYVRzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCdElDOGdhU0FxSUhJc0lIWWdQU0JtSUM4Z2JpQXFJRTFoZEdndVVFa2dLaUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQjFMbmdnUFNBb1pTQXJJSFFnS2lCTllYUm9MbU52Y3loMktTa2dLaUJOWVhSb0xtTnZjeWg0S1N3Z2RTNTVJRDBnS0dVZ0t5QjBJQ29nVFdGMGFDNWpiM01vZGlrcElDb2dUV0YwYUM1emFXNG9lQ2tzSUhVdWVpQTlJSFFnS2lCTllYUm9Mbk5wYmloMktTd2dZUzV3ZFhOb0tIVXVlQ3dnZFM1NUxDQjFMbm9wTENCb0xuZ2dQU0JsSUNvZ1RXRjBhQzVqYjNNb2VDa3NJR2d1ZVNBOUlHVWdLaUJOWVhSb0xuTnBiaWg0S1N3Z1pDNXpkV0pXWldOMGIzSnpLSFVzSUdncExtNXZjbTFoYkdsNlpTZ3BMQ0JzTG5CMWMyZ29aQzU0TENCa0xua3NJR1F1ZWlrc0lHTXVjSFZ6YUNodElDOGdhU2tzSUdNdWNIVnphQ2htSUM4Z2JpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaaUE5SURFN0lHWWdQRDBnYmpzZ1ppc3JLV1p2Y2loc1pYUWdiU0E5SURFN0lHMGdQRDBnYVRzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNBb2FTQXJJREVwSUNvZ1ppQXJJRzBnTFNBeExDQjJJRDBnS0drZ0t5QXhLU0FxSUNobUlDMGdNU2tnS3lCdElDMGdNU3dnWnlBOUlDaHBJQ3NnTVNrZ0tpQW9aaUF0SURFcElDc2diU3dnY0NBOUlDaHBJQ3NnTVNrZ0tpQm1JQ3NnYlRzS0lDQWdJQ0FnSUNBZ0lDQWdieTV3ZFhOb0tIZ3NJSFlzSUhBcExDQnZMbkIxYzJnb2Rpd2daeXdnY0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11YzJWMFNXNWtaWGdvYnlrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaGhMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUxDQnVaWGNnWkdVb2JDd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ1pHVW9ZeXdnTWlrcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUZOeUtHVXVjbUZrYVhWekxDQmxMblIxWW1Vc0lHVXVjbUZrYVdGc1UyVm5iV1Z1ZEhNc0lHVXVkSFZpZFd4aGNsTmxaMjFsYm5SekxDQmxMbUZ5WXlrN0NpQWdJQ0I5Q24wc0lGUnlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Td2dkQ0E5SUM0MExDQnVJRDBnTmpRc0lHa2dQU0E0TENCeUlEMGdNaXdnYnlBOUlETXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxSdmNuVnpTMjV2ZEVkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUjFZbVU2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFIxWW5Wc1lYSlRaV2R0Wlc1MGN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthV0ZzVTJWbmJXVnVkSE02SUdrc0NpQWdJQ0FnSUNBZ0lDQWdJSEE2SUhJc0NpQWdJQ0FnSUNBZ0lDQWdJSEU2SUc4S0lDQWdJQ0FnSUNCOUxDQnVJRDBnVFdGMGFDNW1iRzl2Y2lodUtTd2dhU0E5SUUxaGRHZ3VabXh2YjNJb2FTazdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQmJYU3dnYkNBOUlGdGRMQ0JqSUQwZ1cxMHNJR2dnUFNCYlhTd2dkU0E5SUc1bGR5Qk5MQ0JrSUQwZ2JtVjNJRTBzSUdZZ1BTQnVaWGNnVFN3Z2JTQTlJRzVsZHlCTkxDQjRJRDBnYm1WM0lFMHNJSFlnUFNCdVpYY2dUU3dnWnlBOUlHNWxkeUJOT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWHlBOUlEQTdJRjhnUEQwZ2Jqc2dLeXRmS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhrZ1BTQmZJQzhnYmlBcUlISWdLaUJOWVhSb0xsQkpJQ29nTWpzS0lDQWdJQ0FnSUNBZ0lDQWdjQ2g1TENCeUxDQnZMQ0JsTENCbUtTd2djQ2g1SUNzZ0xqQXhMQ0J5TENCdkxDQmxMQ0J0S1N3Z2RpNXpkV0pXWldOMGIzSnpLRzBzSUdZcExDQm5MbUZrWkZabFkzUnZjbk1vYlN3Z1ppa3NJSGd1WTNKdmMzTldaV04wYjNKektIWXNJR2NwTENCbkxtTnliM056Vm1WamRHOXljeWg0TENCMktTd2dlQzV1YjNKdFlXeHBlbVVvS1N3Z1p5NXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaUlEMGdNRHNnWWlBOFBTQnBPeUFySzJJcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUVnUFNCaUlDOGdhU0FxSUUxaGRHZ3VVRWtnS2lBeUxDQk1JRDBnTFhRZ0tpQk5ZWFJvTG1OdmN5aEJLU3dnU1NBOUlIUWdLaUJOWVhSb0xuTnBiaWhCS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhVdWVDQTlJR1l1ZUNBcklDaE1JQ29nWnk1NElDc2dTU0FxSUhndWVDa3NJSFV1ZVNBOUlHWXVlU0FySUNoTUlDb2daeTU1SUNzZ1NTQXFJSGd1ZVNrc0lIVXVlaUE5SUdZdWVpQXJJQ2hNSUNvZ1p5NTZJQ3NnU1NBcUlIZ3VlaWtzSUd3dWNIVnphQ2gxTG5nc0lIVXVlU3dnZFM1NktTd2daQzV6ZFdKV1pXTjBiM0p6S0hVc0lHWXBMbTV2Y20xaGJHbDZaU2dwTENCakxuQjFjMmdvWkM1NExDQmtMbmtzSUdRdWVpa3NJR2d1Y0hWemFDaGZJQzhnYmlrc0lHZ3VjSFZ6YUNoaUlDOGdhU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmZJRDBnTVRzZ1h5QThQU0J1T3lCZkt5c3BabTl5S0d4bGRDQjVJRDBnTVRzZ2VTQThQU0JwT3lCNUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZaUE5SUNocElDc2dNU2tnS2lBb1h5QXRJREVwSUNzZ0tIa2dMU0F4S1N3Z1FTQTlJQ2hwSUNzZ01Ta2dLaUJmSUNzZ0tIa2dMU0F4S1N3Z1RDQTlJQ2hwSUNzZ01Ta2dLaUJmSUNzZ2VTd2dTU0E5SUNocElDc2dNU2tnS2lBb1h5QXRJREVwSUNzZ2VUc0tJQ0FnSUNBZ0lDQWdJQ0FnWVM1d2RYTm9LR0lzSUVFc0lFa3BMQ0JoTG5CMWMyZ29RU3dnVEN3Z1NTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdWMyVjBTVzVrWlhnb1lTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2hzTENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p1YjNKdFlXd2lMQ0J1WlhjZ1pHVW9ZeXdnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2daR1VvYUN3Z01pa3BPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSEFvWHl3Z2VTd2dZaXdnUVN3Z1RDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTU0E5SUUxaGRHZ3VZMjl6S0Y4cExDQnJJRDBnVFdGMGFDNXphVzRvWHlrc0lFSWdQU0JpSUM4Z2VTQXFJRjhzSUZBZ1BTQk5ZWFJvTG1OdmN5aENLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1RDNTRJRDBnUVNBcUlDZ3lJQ3NnVUNrZ0tpQXVOU0FxSUVrc0lFd3VlU0E5SUVFZ0tpQW9NaUFySUZBcElDb2dheUFxSUM0MUxDQk1Mbm9nUFNCQklDb2dUV0YwYUM1emFXNG9RaWtnS2lBdU5Uc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1ZISW9aUzV5WVdScGRYTXNJR1V1ZEhWaVpTd2daUzUwZFdKMWJHRnlVMlZuYldWdWRITXNJR1V1Y21Ga2FXRnNVMlZuYldWdWRITXNJR1V1Y0N3Z1pTNXhLVHNLSUNBZ0lIMEtmU3dnUlhJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ2FHOG9ibVYzSUUwb0xURXNJQzB4TENBd0tTd2dibVYzSUUwb0xURXNJREVzSURBcExDQnVaWGNnVFNneExDQXhMQ0F3S1Nrc0lIUWdQU0EyTkN3Z2JpQTlJREVzSUdrZ1BTQTRMQ0J5SUQwZ0lURXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxSMVltVkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHRjBhRG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdkSFZpZFd4aGNsTmxaMjFsYm5Sek9pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBkWE02SUc0c0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsaGJGTmxaMjFsYm5Sek9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCamJHOXpaV1E2SUhJS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1pTNWpiMjF3ZFhSbFJuSmxibVYwUm5KaGJXVnpLSFFzSUhJcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEdGdVoyVnVkSE1nUFNCdkxuUmhibWRsYm5SekxDQjBhR2x6TG01dmNtMWhiSE1nUFNCdkxtNXZjbTFoYkhNc0lIUm9hWE11WW1sdWIzSnRZV3h6SUQwZ2J5NWlhVzV2Y20xaGJITTdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVaWGNnVFN3Z2JDQTlJRzVsZHlCTkxDQmpJRDBnYm1WM0lGZ3NJR2dnUFNCdVpYY2dUU3dnZFNBOUlGdGRMQ0JrSUQwZ1cxMHNJR1lnUFNCYlhTd2diU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lIZ29LU3dnZEdocGN5NXpaWFJKYm1SbGVDaHRLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0hVc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QmtaU2hrTENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJrWlNobUxDQXlLU2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JmSUQwZ01Ec2dYeUE4SUhRN0lGOHJLeWwyS0Y4cE93b2dJQ0FnSUNBZ0lDQWdJQ0IyS0hJZ1BUMDlJQ0V4SUQ4Z2RDQTZJREFwTENCd0tDa3NJR2NvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RpaGZLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZ2dQU0JsTG1kbGRGQnZhVzUwUVhRb1h5QXZJSFFzSUdncE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJRzh1Ym05eWJXRnNjMXRmWFN3Z1lpQTlJRzh1WW1sdWIzSnRZV3h6VzE5ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUVnUFNBd095QkJJRHc5SUdrN0lFRXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1RDQTlJRUVnTHlCcElDb2dUV0YwYUM1UVNTQXFJRElzSUVrZ1BTQk5ZWFJvTG5OcGJpaE1LU3dnYXlBOUlDMU5ZWFJvTG1OdmN5aE1LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3d1ZUNBOUlHc2dLaUI1TG5nZ0t5QkpJQ29nWWk1NExDQnNMbmtnUFNCcklDb2dlUzU1SUNzZ1NTQXFJR0l1ZVN3Z2JDNTZJRDBnYXlBcUlIa3VlaUFySUVrZ0tpQmlMbm9zSUd3dWJtOXliV0ZzYVhwbEtDa3NJR1F1Y0hWemFDaHNMbmdzSUd3dWVTd2diQzU2S1N3Z1lTNTRJRDBnYUM1NElDc2diaUFxSUd3dWVDd2dZUzU1SUQwZ2FDNTVJQ3NnYmlBcUlHd3VlU3dnWVM1NklEMGdhQzU2SUNzZ2JpQXFJR3d1ZWl3Z2RTNXdkWE5vS0dFdWVDd2dZUzU1TENCaExub3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHY29LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1h5QTlJREU3SUY4Z1BEMGdkRHNnWHlzcktXWnZjaWhzWlhRZ2VTQTlJREU3SUhrZ1BEMGdhVHNnZVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpSUQwZ0tHa2dLeUF4S1NBcUlDaGZJQzBnTVNrZ0t5QW9lU0F0SURFcExDQkJJRDBnS0drZ0t5QXhLU0FxSUY4Z0t5QW9lU0F0SURFcExDQk1JRDBnS0drZ0t5QXhLU0FxSUY4Z0t5QjVMQ0JKSUQwZ0tHa2dLeUF4S1NBcUlDaGZJQzBnTVNrZ0t5QjVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiUzV3ZFhOb0tHSXNJRUVzSUVrcExDQnRMbkIxYzJnb1FTd2dUQ3dnU1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnY0NncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JmSUQwZ01Ec2dYeUE4UFNCME95QmZLeXNwWm05eUtHeGxkQ0I1SUQwZ01Ec2dlU0E4UFNCcE95QjVLeXNwWXk1NElEMGdYeUF2SUhRc0lHTXVlU0E5SUhrZ0x5QnBMQ0JtTG5CMWMyZ29ZeTU0TENCakxua3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbkJoZEdnZ1BTQjBhR2x6TG5CaGNtRnRaWFJsY25NdWNHRjBhQzUwYjBwVFQwNG9LU3dnWlRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJGY2lodVpYY2dWR0ZiWlM1d1lYUm9MblI1Y0dWZEtDa3Vabkp2YlVwVFQwNG9aUzV3WVhSb0tTd2daUzUwZFdKMWJHRnlVMlZuYldWdWRITXNJR1V1Y21Ga2FYVnpMQ0JsTG5KaFpHbGhiRk5sWjIxbGJuUnpMQ0JsTG1Oc2IzTmxaQ2s3Q2lBZ0lDQjlDbjBzSUVWaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCZlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm5Wc2JDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NTBlWEJsSUQwZ0lsZHBjbVZtY21GdFpVZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCblpXOXRaWFJ5ZVRvZ1pRb2dJQ0FnSUNBZ0lIMHNJR1VnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJYU3dnYmlBOUlHNWxkeUJUWlhRc0lHa2dQU0J1WlhjZ1RTd2djaUE5SUc1bGR5Qk5Pd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9aUzVwYm1SbGVDQWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQmxMbUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRzSUdFZ1BTQmxMbWx1WkdWNExDQnNJRDBnWlM1bmNtOTFjSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzTG14bGJtZDBhQ0E5UFQwZ01DQW1KaUFvYkNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKME9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiM1Z1ZERvZ1lTNWpiM1Z1ZEN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGMFpYSnBZV3hKYm1SbGVEb2dNQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklEMGdNQ3dnYUNBOUlHd3ViR1Z1WjNSb095QmpJRHdnYURzZ0t5dGpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUd4YlkxMHNJR1FnUFNCMUxuTjBZWEowTENCbUlEMGdkUzVqYjNWdWREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzBnUFNCa0xDQjRJRDBnWkNBcklHWTdJRzBnUENCNE95QnRJQ3M5SURNcFptOXlLR3hsZENCMklEMGdNRHNnZGlBOElETTdJSFlyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnWVM1blpYUllLRzBnS3lCMktTd2djQ0E5SUdFdVoyVjBXQ2h0SUNzZ0tIWWdLeUF4S1NBbElETXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYnl3Z1p5a3NJSEl1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNodkxDQndLU3dnZVdNb2FTd2djaXdnYmlrZ1BUMDlJQ0V3SUNZbUlDaDBMbkIxYzJnb2FTNTRMQ0JwTG5rc0lHa3VlaWtzSUhRdWNIVnphQ2h5TG5nc0lISXVlU3dnY2k1NktTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbExtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdQU0F3TENCc0lEMGdieTVqYjNWdWRDQXZJRE03SUdFZ1BDQnNPeUJoS3lzcFptOXlLR3hsZENCaklEMGdNRHNnWXlBOElETTdJR01yS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQXpJQ29nWVNBcklHTXNJSFVnUFNBeklDb2dZU0FySUNoaklDc2dNU2tnSlNBek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNodkxDQm9LU3dnY2k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHOHNJSFVwTENCNVl5aHBMQ0J5TENCdUtTQTlQVDBnSVRBZ0ppWWdLSFF1Y0hWemFDaHBMbmdzSUdrdWVTd2dhUzU2S1N3Z2RDNXdkWE5vS0hJdWVDd2djaTU1TENCeUxub3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvZEN3Z015a3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnZVdNb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0JnSkh0ekxuaDlMQ1I3Y3k1NWZTd2tlM011ZW4wdEpIdGxMbmg5TENSN1pTNTVmU3drZTJVdWVuMWdMQ0JwSUQwZ1lDUjdaUzU0ZlN3a2UyVXVlWDBzSkh0bExucDlMU1I3Y3k1NGZTd2tlM011ZVgwc0pIdHpMbnA5WURzS0lDQWdJSEpsZEhWeWJpQjBMbWhoY3lodUtTQTlQVDBnSVRBZ2ZId2dkQzVvWVhNb2FTa2dQVDA5SUNFd0lEOGdJVEVnT2lBb2RDNWhaR1FvYml3Z2FTa3NJQ0V3S1RzS2ZRcDJZWElnZG1NZ1BTQlBZbXBsWTNRdVpuSmxaWHBsS0hzS0lDQWdJRjlmY0hKdmRHOWZYem9nYm5Wc2JDd0tJQ0FnSUVKdmVFZGxiMjFsZEhKNU9pQjNiaXdLSUNBZ0lFSnZlRUoxWm1abGNrZGxiMjFsZEhKNU9pQjNiaXdLSUNBZ0lFTnBjbU5zWlVkbGIyMWxkSEo1T2lCbWNpd0tJQ0FnSUVOcGNtTnNaVUoxWm1abGNrZGxiMjFsZEhKNU9pQm1jaXdLSUNBZ0lFTnZibVZIWlc5dFpYUnllVG9nY0hJc0NpQWdJQ0JEYjI1bFFuVm1abVZ5UjJWdmJXVjBjbms2SUhCeUxBb2dJQ0FnUTNsc2FXNWtaWEpIWlc5dFpYUnllVG9nU200c0NpQWdJQ0JEZVd4cGJtUmxja0oxWm1abGNrZGxiMjFsZEhKNU9pQktiaXdLSUNBZ0lFUnZaR1ZqWVdobFpISnZia2RsYjIxbGRISjVPaUJ0Y2l3S0lDQWdJRVJ2WkdWallXaGxaSEp2YmtKMVptWmxja2RsYjIxbGRISjVPaUJ0Y2l3S0lDQWdJRVZrWjJWelIyVnZiV1YwY25rNklGOWhMQW9nSUNBZ1JYaDBjblZrWlVkbGIyMWxkSEo1T2lCc2Jpd0tJQ0FnSUVWNGRISjFaR1ZDZFdabVpYSkhaVzl0WlhSeWVUb2diRzRzQ2lBZ0lDQkpZMjl6WVdobFpISnZia2RsYjIxbGRISjVPaUJmY2l3S0lDQWdJRWxqYjNOaGFHVmtjbTl1UW5WbVptVnlSMlZ2YldWMGNuazZJRjl5TEFvZ0lDQWdUR0YwYUdWSFpXOXRaWFJ5ZVRvZ1RYSXNDaUFnSUNCTVlYUm9aVUoxWm1abGNrZGxiMjFsZEhKNU9pQk5jaXdLSUNBZ0lFOWpkR0ZvWldSeWIyNUhaVzl0WlhSeWVUb2dTV2tzQ2lBZ0lDQlBZM1JoYUdWa2NtOXVRblZtWm1WeVIyVnZiV1YwY25rNklFbHBMQW9nSUNBZ1VHeGhibVZIWlc5dFpYUnllVG9nVUdrc0NpQWdJQ0JRYkdGdVpVSjFabVpsY2tkbGIyMWxkSEo1T2lCUWFTd0tJQ0FnSUZCdmJIbG9aV1J5YjI1SFpXOXRaWFJ5ZVRvZ1lXNHNDaUFnSUNCUWIyeDVhR1ZrY205dVFuVm1abVZ5UjJWdmJXVjBjbms2SUdGdUxBb2dJQ0FnVW1sdVowZGxiMjFsZEhKNU9pQmljaXdLSUNBZ0lGSnBibWRDZFdabVpYSkhaVzl0WlhSeWVUb2dZbklzQ2lBZ0lDQlRhR0Z3WlVkbGIyMWxkSEo1T2lCRWFTd0tJQ0FnSUZOb1lYQmxRblZtWm1WeVIyVnZiV1YwY25rNklFUnBMQW9nSUNBZ1UzQm9aWEpsUjJWdmJXVjBjbms2SUVacExBb2dJQ0FnVTNCb1pYSmxRblZtWm1WeVIyVnZiV1YwY25rNklFWnBMQW9nSUNBZ1ZHVjBjbUZvWldSeWIyNUhaVzl0WlhSeWVUb2dkM0lzQ2lBZ0lDQlVaWFJ5WVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQjNjaXdLSUNBZ0lGUnZjblZ6UjJWdmJXVjBjbms2SUZOeUxBb2dJQ0FnVkc5eWRYTkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1UzSXNDaUFnSUNCVWIzSjFjMHR1YjNSSFpXOXRaWFJ5ZVRvZ1ZISXNDaUFnSUNCVWIzSjFjMHR1YjNSQ2RXWm1aWEpIWlc5dFpYUnllVG9nVkhJc0NpQWdJQ0JVZFdKbFIyVnZiV1YwY25rNklFVnlMQW9nSUNBZ1ZIVmlaVUoxWm1abGNrZGxiMjFsZEhKNU9pQkZjaXdLSUNBZ0lGZHBjbVZtY21GdFpVZGxiMjFsZEhKNU9pQkZZUXA5S1N3Z1FXRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsTm9ZV1J2ZDAxaGRHVnlhV0ZzSWl3Z2RHaHBjeTVqYjJ4dmNpQTlJRzVsZHlCaFpTZ3dLU3dnZEdocGN5NTBjbUZ1YzNCaGNtVnVkQ0E5SUNFd0xDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTTdDaUFnSUNCOUNuMDdDa0ZoTG5CeWIzUnZkSGx3WlM1cGMxTm9ZV1J2ZDAxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCd2J5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1pIUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxtUmxabWx1WlhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUZOVVFVNUVRVkpFT2lBaUlnb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJDSXNJSFJvYVhNdVkyOXNiM0lnUFNCdVpYY2dZV1VvTVRZM056Y3lNVFVwTENCMGFHbHpMbkp2ZFdkb2JtVnpjeUE5SURFc0lIUm9hWE11YldWMFlXeHVaWE56SUQwZ01Dd2dkR2hwY3k1dFlYQWdQU0J1ZFd4c0xDQjBhR2x6TG14cFoyaDBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVZVzlOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdNU3dnZEdocGN5NWxiV2x6YzJsMlpTQTlJRzVsZHlCaFpTZ3dLU3dnZEdocGN5NWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtSjFiWEJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUoxYlhCVFkyRnNaU0E5SURFc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ1NHa3NJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVWdQU0J1WlhjZ1dDZ3hMQ0F4S1N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ01Td2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUQwZ01Dd2dkR2hwY3k1eWIzVm5hRzVsYzNOTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG0xbGRHRnNibVZ6YzAxaGNDQTlJRzUxYkd3c0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtVnVkazFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaVzUyVFdGd1NXNTBaVzV6YVhSNUlEMGdNU3dnZEdocGN5NXlaV1p5WVdOMGFXOXVVbUYwYVc4Z1BTQXVPVGdzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnSVRFc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ01Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxZMkZ3SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUNKeWIzVnVaQ0lzSUhSb2FYTXVabXhoZEZOb1lXUnBibWNnUFNBaE1Td2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVrWldacGJtVnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQlRWRUZPUkVGU1JEb2dJaUlLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTXVjbTkxWjJodVpYTnpJRDBnWlM1eWIzVm5hRzVsYzNNc0lIUm9hWE11YldWMFlXeHVaWE56SUQwZ1pTNXRaWFJoYkc1bGMzTXNJSFJvYVhNdWJXRndJRDBnWlM1dFlYQXNJSFJvYVhNdWJHbG5hSFJOWVhBZ1BTQmxMbXhwWjJoMFRXRndMQ0IwYUdsekxteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU3dnZEdocGN5NWhiMDFoY0NBOUlHVXVZVzlOWVhBc0lIUm9hWE11WVc5TllYQkpiblJsYm5OcGRIa2dQU0JsTG1GdlRXRndTVzUwWlc1emFYUjVMQ0IwYUdsekxtVnRhWE56YVhabExtTnZjSGtvWlM1bGJXbHpjMmwyWlNrc0lIUm9hWE11WlcxcGMzTnBkbVZOWVhBZ1BTQmxMbVZ0YVhOemFYWmxUV0Z3TENCMGFHbHpMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVJRDBnWlM1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVN3Z2RHaHBjeTVpZFcxd1RXRndJRDBnWlM1aWRXMXdUV0Z3TENCMGFHbHpMbUoxYlhCVFkyRnNaU0E5SUdVdVluVnRjRk5qWVd4bExDQjBhR2x6TG01dmNtMWhiRTFoY0NBOUlHVXVibTl5YldGc1RXRndMQ0IwYUdsekxtNXZjbTFoYkUxaGNGUjVjR1VnUFNCbExtNXZjbTFoYkUxaGNGUjVjR1VzSUhSb2FYTXVibTl5YldGc1UyTmhiR1V1WTI5d2VTaGxMbTV2Y20xaGJGTmpZV3hsS1N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0JsTG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeXdnZEdocGN5NXliM1ZuYUc1bGMzTk5ZWEFnUFNCbExuSnZkV2RvYm1WemMwMWhjQ3dnZEdocGN5NXRaWFJoYkc1bGMzTk5ZWEFnUFNCbExtMWxkR0ZzYm1WemMwMWhjQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJR1V1WVd4d2FHRk5ZWEFzSUhSb2FYTXVaVzUyVFdGd0lEMGdaUzVsYm5aTllYQXNJSFJvYVhNdVpXNTJUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNWxiblpOWVhCSmJuUmxibk5wZEhrc0lIUm9hWE11Y21WbWNtRmpkR2x2YmxKaGRHbHZJRDBnWlM1eVpXWnlZV04wYVc5dVVtRjBhVzhzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnWlM1M2FYSmxabkpoYldVc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldOaGNDd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxhbTlwYmlBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNHNJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0JsTG1ac1lYUlRhR0ZrYVc1bkxDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwd2J5NXdjbTkwYjNSNWNHVXVhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1EyRWdQU0JqYkdGemN5QmxlSFJsYm1SeklIQnZJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWtaV1pwYm1WeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCVFZFRk9SRUZTUkRvZ0lpSXNDaUFnSUNBZ0lDQWdJQ0FnSUZCSVdWTkpRMEZNT2lBaUlnb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9VR2g1YzJsallXeE5ZWFJsY21saGJDSXNJSFJvYVhNdVkyeGxZWEpqYjJGMFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ1BTQXdMQ0IwYUdsekxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVWdQU0J1WlhjZ1dDZ3hMQ0F4S1N3Z2RHaHBjeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtbHZjaUE5SURFdU5Td2dUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0hSb2FYTXNJQ0p5Wldac1pXTjBhWFpwZEhraUxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiWFFvTWk0MUlDb2dLSFJvYVhNdWFXOXlJQzBnTVNrZ0x5QW9kR2hwY3k1cGIzSWdLeUF4S1N3Z01Dd2dNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9kQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBiM0lnUFNBb01TQXJJQzQwSUNvZ2RDa2dMeUFvTVNBdElDNDBJQ29nZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTV6YUdWbGJrTnZiRzl5SUQwZ2JtVjNJR0ZsS0RBcExDQjBhR2x6TG5Ob1pXVnVRMjlzYjNKTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG5Ob1pXVnVVbTkxWjJodVpYTnpJRDBnTVN3Z2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWRISmhibk50YVhOemFXOXVUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NTBhR2xqYTI1bGMzTWdQU0F3TENCMGFHbHpMblJvYVdOcmJtVnpjMDFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU0E5SURBc0lIUm9hWE11WVhSMFpXNTFZWFJwYjI1RGIyeHZjaUE5SUc1bGR5QmhaU2d4TENBeExDQXhLU3dnZEdocGN5NXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0lnUFNCdVpYY2dZV1VvTVN3Z01Td2dNU2tzSUhSb2FYTXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQTlJRzUxYkd3c0lIUm9hWE11WDNOb1pXVnVJRDBnTUN3Z2RHaHBjeTVmWTJ4bFlYSmpiMkYwSUQwZ01Dd2dkR2hwY3k1ZmRISmhibk50YVhOemFXOXVJRDBnTUN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnYzJobFpXNG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzTm9aV1Z1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSE5vWldWdUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXphR1ZsYmlBK0lEQWdJVDBnWlNBK0lEQWdKaVlnZEdocGN5NTJaWEp6YVc5dUt5c3NJSFJvYVhNdVgzTm9aV1Z1SUQwZ1pUc0tJQ0FnSUgwS0lDQWdJR2RsZENCamJHVmhjbU52WVhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJOc1pXRnlZMjloZERzS0lDQWdJSDBLSUNBZ0lITmxkQ0JqYkdWaGNtTnZZWFFvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDJOc1pXRnlZMjloZENBK0lEQWdJVDBnWlNBK0lEQWdKaVlnZEdocGN5NTJaWEp6YVc5dUt5c3NJSFJvYVhNdVgyTnNaV0Z5WTI5aGRDQTlJR1U3Q2lBZ0lDQjlDaUFnSUNCblpYUWdkSEpoYm5OdGFYTnphVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkwY21GdWMyMXBjM05wYjI0N0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnZEhKaGJuTnRhWE56YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOTBjbUZ1YzIxcGMzTnBiMjRnUGlBd0lDRTlJR1VnUGlBd0lDWW1JSFJvYVhNdWRtVnljMmx2YmlzckxDQjBhR2x6TGw5MGNtRnVjMjFwYzNOcGIyNGdQU0JsT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVpHVm1hVzVsY3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVTFSQlRrUkJVa1E2SUNJaUxBb2dJQ0FnSUNBZ0lDQWdJQ0JRU0ZsVFNVTkJURG9nSWlJS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1Oc1pXRnlZMjloZENBOUlHVXVZMnhsWVhKamIyRjBMQ0IwYUdsekxtTnNaV0Z5WTI5aGRFMWhjQ0E5SUdVdVkyeGxZWEpqYjJGMFRXRndMQ0IwYUdsekxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5QTlJR1V1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56TENCMGFHbHpMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NBOUlHVXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3TENCMGFHbHpMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ0E5SUdVdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0xDQjBhR2x6TG1Oc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bExtTnZjSGtvWlM1amJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pTa3NJSFJvYVhNdWFXOXlJRDBnWlM1cGIzSXNJSFJvYVhNdWMyaGxaVzRnUFNCbExuTm9aV1Z1TENCMGFHbHpMbk5vWldWdVEyOXNiM0l1WTI5d2VTaGxMbk5vWldWdVEyOXNiM0lwTENCMGFHbHpMbk5vWldWdVEyOXNiM0pOWVhBZ1BTQmxMbk5vWldWdVEyOXNiM0pOWVhBc0lIUm9hWE11YzJobFpXNVNiM1ZuYUc1bGMzTWdQU0JsTG5Ob1pXVnVVbTkxWjJodVpYTnpMQ0IwYUdsekxuTm9aV1Z1VW05MVoyaHVaWE56VFdGd0lEMGdaUzV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ3dnZEdocGN5NTBjbUZ1YzIxcGMzTnBiMjRnUFNCbExuUnlZVzV6YldsemMybHZiaXdnZEdocGN5NTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ1BTQmxMblJ5WVc1emJXbHpjMmx2YmsxaGNDd2dkR2hwY3k1MGFHbGphMjVsYzNNZ1BTQmxMblJvYVdOcmJtVnpjeXdnZEdocGN5NTBhR2xqYTI1bGMzTk5ZWEFnUFNCbExuUm9hV05yYm1WemMwMWhjQ3dnZEdocGN5NWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJRDBnWlM1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObExDQjBhR2x6TG1GMGRHVnVkV0YwYVc5dVEyOXNiM0l1WTI5d2VTaGxMbUYwZEdWdWRXRjBhVzl1UTI5c2IzSXBMQ0IwYUdsekxuTndaV04xYkdGeVNXNTBaVzV6YVhSNUlEMGdaUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlU3dnZEdocGN5NXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0E5SUdVdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQXNJSFJvYVhNdWMzQmxZM1ZzWVhKRGIyeHZjaTVqYjNCNUtHVXVjM0JsWTNWc1lYSkRiMnh2Y2lrc0lIUm9hWE11YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0E5SUdVdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0N3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLUTJFdWNISnZkRzkwZVhCbExtbHpUV1Z6YUZCb2VYTnBZMkZzVFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUV4aElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9VR2h2Ym1kTllYUmxjbWxoYkNJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9NVFkzTnpjeU1UVXBMQ0IwYUdsekxuTndaV04xYkdGeUlEMGdibVYzSUdGbEtERXhNVGcwT0RFcExDQjBhR2x6TG5Ob2FXNXBibVZ6Y3lBOUlETXdMQ0IwYUdsekxtMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJHbG5hSFJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnTVN3Z2RHaHBjeTVoYjAxaGNDQTlJRzUxYkd3c0lIUm9hWE11WVc5TllYQkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbVZ0YVhOemFYWmxJRDBnYm1WM0lHRmxLREFwTENCMGFHbHpMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVJRDBnTVN3Z2RHaHBjeTVsYldsemMybDJaVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZblZ0Y0UxaGNDQTlJRzUxYkd3c0lIUm9hWE11WW5WdGNGTmpZV3hsSUQwZ01Td2dkR2hwY3k1dWIzSnRZV3hOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQklhU3dnZEdocGN5NXViM0p0WVd4VFkyRnNaU0E5SUc1bGR5QllLREVzSURFcExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQXhMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQXdMQ0IwYUdsekxuTndaV04xYkdGeVRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaVzUyVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVqYjIxaWFXNWxJRDBnVm5Nc0lIUm9hWE11Y21WbWJHVmpkR2wyYVhSNUlEMGdNU3dnZEdocGN5NXlaV1p5WVdOMGFXOXVVbUYwYVc4Z1BTQXVPVGdzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnSVRFc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ01Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxZMkZ3SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUNKeWIzVnVaQ0lzSUhSb2FYTXVabXhoZEZOb1lXUnBibWNnUFNBaE1Td2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjJ4dmNpNWpiM0I1S0dVdVkyOXNiM0lwTENCMGFHbHpMbk53WldOMWJHRnlMbU52Y0hrb1pTNXpjR1ZqZFd4aGNpa3NJSFJvYVhNdWMyaHBibWx1WlhOeklEMGdaUzV6YUdsdWFXNWxjM01zSUhSb2FYTXViV0Z3SUQwZ1pTNXRZWEFzSUhSb2FYTXViR2xuYUhSTllYQWdQU0JsTG14cFoyaDBUV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnWlM1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTVoYjAxaGNDQTlJR1V1WVc5TllYQXNJSFJvYVhNdVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNCbExtRnZUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbVZ0YVhOemFYWmxMbU52Y0hrb1pTNWxiV2x6YzJsMlpTa3NJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0JsTG1WdGFYTnphWFpsVFdGd0xDQjBhR2x6TG1WdGFYTnphWFpsU1c1MFpXNXphWFI1SUQwZ1pTNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTd2dkR2hwY3k1aWRXMXdUV0Z3SUQwZ1pTNWlkVzF3VFdGd0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlHVXVZblZ0Y0ZOallXeGxMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJR1V1Ym05eWJXRnNUV0Z3TENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQmxMbTV2Y20xaGJFMWhjRlI1Y0dVc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVdVkyOXdlU2hsTG01dmNtMWhiRk5qWVd4bEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjeTV6Y0dWamRXeGhjazFoY0NBOUlHVXVjM0JsWTNWc1lYSk5ZWEFzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0JsTG1Gc2NHaGhUV0Z3TENCMGFHbHpMbVZ1ZGsxaGNDQTlJR1V1Wlc1MlRXRndMQ0IwYUdsekxtTnZiV0pwYm1VZ1BTQmxMbU52YldKcGJtVXNJSFJvYVhNdWNtVm1iR1ZqZEdsMmFYUjVJRDBnWlM1eVpXWnNaV04wYVhacGRIa3NJSFJvYVhNdWNtVm1jbUZqZEdsdmJsSmhkR2x2SUQwZ1pTNXlaV1p5WVdOMGFXOXVVbUYwYVc4c0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ1pTNTNhWEpsWm5KaGJXVXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRzSUhSb2FYTXVabXhoZEZOb1lXUnBibWNnUFNCbExtWnNZWFJUYUdGa2FXNW5MQ0IwYUdsek93b2dJQ0FnZlFwOU93cE1ZUzV3Y205MGIzUjVjR1V1YVhOTlpYTm9VR2h2Ym1kTllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1VtRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWtaV1pwYm1WeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCVVQwOU9PaUFpSWdvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb1ZHOXZiazFoZEdWeWFXRnNJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJoWlNneE5qYzNOekl4TlNrc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVuY21Ga2FXVnVkRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXViR2xuYUhSTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1SUQwZ01Td2dkR2hwY3k1aGIwMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1WdGFYTnphWFpsSUQwZ2JtVjNJR0ZsS0RBcExDQjBhR2x6TG1WdGFYTnphWFpsU1c1MFpXNXphWFI1SUQwZ01Td2dkR2hwY3k1bGJXbHpjMmwyWlUxaGNDQTlJRzUxYkd3c0lIUm9hWE11WW5WdGNFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVluVnRjRk5qWVd4bElEMGdNU3dnZEdocGN5NXViM0p0WVd4TllYQWdQU0J1ZFd4c0xDQjBhR2x6TG01dmNtMWhiRTFoY0ZSNWNHVWdQU0JJYVN3Z2RHaHBjeTV1YjNKdFlXeFRZMkZzWlNBOUlHNWxkeUJZS0RFc0lERXBMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0F4TENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0F3TENCMGFHbHpMbUZzY0doaFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1M2FYSmxabkpoYldVZ1BTQWhNU3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dQU0F4TENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WallYQWdQU0FpY205MWJtUWlMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZxYjJsdUlEMGdJbkp2ZFc1a0lpd2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjJ4dmNpNWpiM0I1S0dVdVkyOXNiM0lwTENCMGFHbHpMbTFoY0NBOUlHVXViV0Z3TENCMGFHbHpMbWR5WVdScFpXNTBUV0Z3SUQwZ1pTNW5jbUZrYVdWdWRFMWhjQ3dnZEdocGN5NXNhV2RvZEUxaGNDQTlJR1V1YkdsbmFIUk5ZWEFzSUhSb2FYTXViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0JsTG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbUZ2VFdGd0lEMGdaUzVoYjAxaGNDd2dkR2hwY3k1aGIwMWhjRWx1ZEdWdWMybDBlU0E5SUdVdVlXOU5ZWEJKYm5SbGJuTnBkSGtzSUhSb2FYTXVaVzFwYzNOcGRtVXVZMjl3ZVNobExtVnRhWE56YVhabEtTd2dkR2hwY3k1bGJXbHpjMmwyWlUxaGNDQTlJR1V1WlcxcGMzTnBkbVZOWVhBc0lIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnUFNCbExtVnRhWE56YVhabFNXNTBaVzV6YVhSNUxDQjBhR2x6TG1KMWJYQk5ZWEFnUFNCbExtSjFiWEJOWVhBc0lIUm9hWE11WW5WdGNGTmpZV3hsSUQwZ1pTNWlkVzF3VTJOaGJHVXNJSFJvYVhNdWJtOXliV0ZzVFdGd0lEMGdaUzV1YjNKdFlXeE5ZWEFzSUhSb2FYTXVibTl5YldGc1RXRndWSGx3WlNBOUlHVXVibTl5YldGc1RXRndWSGx3WlN3Z2RHaHBjeTV1YjNKdFlXeFRZMkZzWlM1amIzQjVLR1V1Ym05eWJXRnNVMk5oYkdVcExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6TENCMGFHbHpMbUZzY0doaFRXRndJRDBnWlM1aGJIQm9ZVTFoY0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNCbExuZHBjbVZtY21GdFpTd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsWTJGd0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bFkyRndMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZxYjJsdUlEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tVbUV1Y0hKdmRHOTBlWEJsTG1selRXVnphRlJ2YjI1TllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1VHRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrMWxjMmhPYjNKdFlXeE5ZWFJsY21saGJDSXNJSFJvYVhNdVluVnRjRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZblZ0Y0ZOallXeGxJRDBnTVN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtNXZjbTFoYkUxaGNGUjVjR1VnUFNCSWFTd2dkR2hwY3k1dWIzSnRZV3hUWTJGc1pTQTlJRzVsZHlCWUtERXNJREVwTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNBeExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNBd0xDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlDRXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJREVzSUhSb2FYTXVabTluSUQwZ0lURXNJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0FoTVN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWlkVzF3VFdGd0lEMGdaUzVpZFcxd1RXRndMQ0IwYUdsekxtSjFiWEJUWTJGc1pTQTlJR1V1WW5WdGNGTmpZV3hsTENCMGFHbHpMbTV2Y20xaGJFMWhjQ0E5SUdVdWJtOXliV0ZzVFdGd0xDQjBhR2x6TG01dmNtMWhiRTFoY0ZSNWNHVWdQU0JsTG01dmNtMWhiRTFoY0ZSNWNHVXNJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVXVZMjl3ZVNobExtNXZjbTFoYkZOallXeGxLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5d2dkR2hwY3k1M2FYSmxabkpoYldVZ1BTQmxMbmRwY21WbWNtRnRaU3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUN3Z2RHaHBjeTVtYkdGMFUyaGhaR2x1WnlBOUlHVXVabXhoZEZOb1lXUnBibWNzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbEJoTG5CeWIzUnZkSGx3WlM1cGMwMWxjMmhPYjNKdFlXeE5ZWFJsY21saGJDQTlJQ0V3T3dwMllYSWdTV0VnUFNCamJHRnpjeUJsZUhSbGJtUnpJR1IwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJazFsYzJoTVlXMWlaWEowVFdGMFpYSnBZV3dpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbEtERTJOemMzTWpFMUtTd2dkR2hwY3k1dFlYQWdQU0J1ZFd4c0xDQjBhR2x6TG14cFoyaDBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVZVzlOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdNU3dnZEdocGN5NWxiV2x6YzJsMlpTQTlJRzVsZHlCaFpTZ3dLU3dnZEdocGN5NWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxuTndaV04xYkdGeVRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaVzUyVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVqYjIxaWFXNWxJRDBnVm5Nc0lIUm9hWE11Y21WbWJHVmpkR2wyYVhSNUlEMGdNU3dnZEdocGN5NXlaV1p5WVdOMGFXOXVVbUYwYVc4Z1BTQXVPVGdzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnSVRFc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ01Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxZMkZ3SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUNKeWIzVnVaQ0lzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVkyOXNiM0l1WTI5d2VTaGxMbU52Ykc5eUtTd2dkR2hwY3k1dFlYQWdQU0JsTG0xaGNDd2dkR2hwY3k1c2FXZG9kRTFoY0NBOUlHVXViR2xuYUhSTllYQXNJSFJvYVhNdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQmxMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVMQ0IwYUdsekxtRnZUV0Z3SUQwZ1pTNWhiMDFoY0N3Z2RHaHBjeTVoYjAxaGNFbHVkR1Z1YzJsMGVTQTlJR1V1WVc5TllYQkpiblJsYm5OcGRIa3NJSFJvYVhNdVpXMXBjM05wZG1VdVkyOXdlU2hsTG1WdGFYTnphWFpsS1N3Z2RHaHBjeTVsYldsemMybDJaVTFoY0NBOUlHVXVaVzFwYzNOcGRtVk5ZWEFzSUhSb2FYTXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dQU0JsTG1WdGFYTnphWFpsU1c1MFpXNXphWFI1TENCMGFHbHpMbk53WldOMWJHRnlUV0Z3SUQwZ1pTNXpjR1ZqZFd4aGNrMWhjQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJR1V1WVd4d2FHRk5ZWEFzSUhSb2FYTXVaVzUyVFdGd0lEMGdaUzVsYm5aTllYQXNJSFJvYVhNdVkyOXRZbWx1WlNBOUlHVXVZMjl0WW1sdVpTd2dkR2hwY3k1eVpXWnNaV04wYVhacGRIa2dQU0JsTG5KbFpteGxZM1JwZG1sMGVTd2dkR2hwY3k1eVpXWnlZV04wYVc5dVVtRjBhVzhnUFNCbExuSmxabkpoWTNScGIyNVNZWFJwYnl3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNCbExuZHBjbVZtY21GdFpTd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsWTJGd0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bFkyRndMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZxYjJsdUlEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tTV0V1Y0hKdmRHOTBlWEJsTG1selRXVnphRXhoYldKbGNuUk5ZWFJsY21saGJDQTlJQ0V3T3dwMllYSWdSR0VnUFNCamJHRnpjeUJsZUhSbGJtUnpJR1IwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVrWldacGJtVnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQk5RVlJEUVZBNklDSWlDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NTBlWEJsSUQwZ0lrMWxjMmhOWVhSallYQk5ZWFJsY21saGJDSXNJSFJvYVhNdVkyOXNiM0lnUFNCdVpYY2dZV1VvTVRZM056Y3lNVFVwTENCMGFHbHpMbTFoZEdOaGNDQTlJRzUxYkd3c0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVpZFcxd1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQXhMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJRzUxYkd3c0lIUm9hWE11Ym05eWJXRnNUV0Z3Vkhsd1pTQTlJRWhwTENCMGFHbHpMbTV2Y20xaGJGTmpZV3hsSUQwZ2JtVjNJRmdvTVN3Z01Ta3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJREVzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJREFzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bklEMGdJVEVzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVpHVm1hVzVsY3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVFVGVVEwRlFPaUFpSWdvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WTI5c2IzSXVZMjl3ZVNobExtTnZiRzl5S1N3Z2RHaHBjeTV0WVhSallYQWdQU0JsTG0xaGRHTmhjQ3dnZEdocGN5NXRZWEFnUFNCbExtMWhjQ3dnZEdocGN5NWlkVzF3VFdGd0lEMGdaUzVpZFcxd1RXRndMQ0IwYUdsekxtSjFiWEJUWTJGc1pTQTlJR1V1WW5WdGNGTmpZV3hsTENCMGFHbHpMbTV2Y20xaGJFMWhjQ0E5SUdVdWJtOXliV0ZzVFdGd0xDQjBhR2x6TG01dmNtMWhiRTFoY0ZSNWNHVWdQU0JsTG01dmNtMWhiRTFoY0ZSNWNHVXNJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVXVZMjl3ZVNobExtNXZjbTFoYkZOallXeGxLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5d2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHVXVZV3h3YUdGTllYQXNJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0JsTG1ac1lYUlRhR0ZrYVc1bkxDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwRVlTNXdjbTkwYjNSNWNHVXVhWE5OWlhOb1RXRjBZMkZ3VFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUVaaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCbWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTWFXNWxSR0Z6YUdWa1RXRjBaWEpwWVd3aUxDQjBhR2x6TG5OallXeGxJRDBnTVN3Z2RHaHBjeTVrWVhOb1UybDZaU0E5SURNc0lIUm9hWE11WjJGd1UybDZaU0E5SURFc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVjMk5oYkdVZ1BTQmxMbk5qWVd4bExDQjBhR2x6TG1SaGMyaFRhWHBsSUQwZ1pTNWtZWE5vVTJsNlpTd2dkR2hwY3k1bllYQlRhWHBsSUQwZ1pTNW5ZWEJUYVhwbExDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwR1lTNXdjbTkwYjNSNWNHVXVhWE5NYVc1bFJHRnphR1ZrVFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUhONUlEMGdUMkpxWldOMExtWnlaV1Y2WlNoN0NpQWdJQ0JmWDNCeWIzUnZYMTg2SUc1MWJHd3NDaUFnSUNCVGFHRmtiM2ROWVhSbGNtbGhiRG9nUVdFc0NpQWdJQ0JUY0hKcGRHVk5ZWFJsY21saGJEb2dhVzhzQ2lBZ0lDQlNZWGRUYUdGa1pYSk5ZWFJsY21saGJEb2dSMmtzQ2lBZ0lDQlRhR0ZrWlhKTllYUmxjbWxoYkRvZ2MyNHNDaUFnSUNCUWIybHVkSE5OWVhSbGNtbGhiRG9nYW00c0NpQWdJQ0JOWlhOb1VHaDVjMmxqWVd4TllYUmxjbWxoYkRvZ1EyRXNDaUFnSUNCTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJEb2djRzhzQ2lBZ0lDQk5aWE5vVUdodmJtZE5ZWFJsY21saGJEb2dUR0VzQ2lBZ0lDQk5aWE5vVkc5dmJrMWhkR1Z5YVdGc09pQlNZU3dLSUNBZ0lFMWxjMmhPYjNKdFlXeE5ZWFJsY21saGJEb2dVR0VzQ2lBZ0lDQk5aWE5vVEdGdFltVnlkRTFoZEdWeWFXRnNPaUJKWVN3S0lDQWdJRTFsYzJoRVpYQjBhRTFoZEdWeWFXRnNPaUJsYnl3S0lDQWdJRTFsYzJoRWFYTjBZVzVqWlUxaGRHVnlhV0ZzT2lCMGJ5d0tJQ0FnSUUxbGMyaENZWE5wWTAxaGRHVnlhV0ZzT2lCb2Jpd0tJQ0FnSUUxbGMyaE5ZWFJqWVhCTllYUmxjbWxoYkRvZ1JHRXNDaUFnSUNCTWFXNWxSR0Z6YUdWa1RXRjBaWEpwWVd3NklFWmhMQW9nSUNBZ1RHbHVaVUpoYzJsalRXRjBaWEpwWVd3NklHWjBMQW9nSUNBZ1RXRjBaWEpwWVd3NklHUjBDbjBwTENCYVpTQTlJSHNLSUNBZ0lHRnljbUY1VTJ4cFkyVTZJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXbVV1YVhOVWVYQmxaRUZ5Y21GNUtITXBJRDhnYm1WM0lITXVZMjl1YzNSeWRXTjBiM0lvY3k1emRXSmhjbkpoZVNobExDQjBJQ0U5UFNCMmIybGtJREFnUHlCMElEb2djeTVzWlc1bmRHZ3BLU0E2SUhNdWMyeHBZMlVvWlN3Z2RDazdDaUFnSUNCOUxBb2dJQ0FnWTI5dWRtVnlkRUZ5Y21GNU9pQm1kVzVqZEdsdmJpaHpMQ0JsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDRnpJSHg4SUNGMElDWW1JSE11WTI5dWMzUnlkV04wYjNJZ1BUMDlJR1VnUHlCeklEb2dkSGx3Wlc5bUlHVXVRbGxVUlZOZlVFVlNYMFZNUlUxRlRsUWdQVDBnSW01MWJXSmxjaUlnUHlCdVpYY2daU2h6S1NBNklFRnljbUY1TG5CeWIzUnZkSGx3WlM1emJHbGpaUzVqWVd4c0tITXBPd29nSUNBZ2ZTd0tJQ0FnSUdselZIbHdaV1JCY25KaGVUb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJCY25KaGVVSjFabVpsY2k1cGMxWnBaWGNvY3lrZ0ppWWdJU2h6SUdsdWMzUmhibU5sYjJZZ1JHRjBZVlpwWlhjcE93b2dJQ0FnZlN3S0lDQWdJR2RsZEV0bGVXWnlZVzFsVDNKa1pYSTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCbEtHa3NJSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlITmJhVjBnTFNCelczSmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSE11YkdWdVozUm9MQ0J1SUQwZ2JtVjNJRUZ5Y21GNUtIUXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBN0lHa2dJVDA5SUhRN0lDc3JhU2x1VzJsZElEMGdhVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTV6YjNKMEtHVXBMQ0J1T3dvZ0lDQWdmU3dLSUNBZ0lITnZjblJsWkVGeWNtRjVPaUJtZFc1amRHbHZiaWh6TENCbExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0J6TG14bGJtZDBhQ3dnYVNBOUlHNWxkeUJ6TG1OdmJuTjBjblZqZEc5eUtHNHBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0F3T3lCdklDRTlQU0J1T3lBckszSXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSYmNsMGdLaUJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHd2dQU0F3T3lCc0lDRTlQU0JsT3lBcksyd3BhVnR2S3l0ZElEMGdjMXRoSUNzZ2JGMDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnBPd29nSUNBZ2ZTd0tJQ0FnSUdac1lYUjBaVzVLVTA5T09pQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0F4TENCeUlEMGdjMXN3WFRzS0lDQWdJQ0FnSUNCbWIzSW9PeUJ5SUNFOVBTQjJiMmxrSURBZ0ppWWdjbHR1WFNBOVBUMGdkbTlwWkNBd095bHlJRDBnYzF0cEt5dGRPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlISmJibDA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHOGdJVDA5SUhadmFXUWdNQ2tnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvYnlrcElHUnZJRzhnUFNCeVcyNWRMQ0J2SUNFOVBTQjJiMmxrSURBZ0ppWWdLR1V1Y0hWemFDaHlMblJwYldVcExDQjBMbkIxYzJndVlYQndiSGtvZEN3Z2J5a3BMQ0J5SUQwZ2MxdHBLeXRkT3dvZ0lDQWdJQ0FnSUhkb2FXeGxJQ2h5SUNFOVBTQjJiMmxrSURBcENpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb2J5NTBiMEZ5Y21GNUlDRTlQU0IyYjJsa0lEQXBJR1J2SUc4Z1BTQnlXMjVkTENCdklDRTlQU0IyYjJsa0lEQWdKaVlnS0dVdWNIVnphQ2h5TG5ScGJXVXBMQ0J2TG5SdlFYSnlZWGtvZEN3Z2RDNXNaVzVuZEdncEtTd2djaUE5SUhOYmFTc3JYVHNLSUNBZ0lDQWdJQ0IzYUdsc1pTQW9jaUFoUFQwZ2RtOXBaQ0F3S1FvZ0lDQWdJQ0FnSUdWc2MyVWdaRzhnYnlBOUlISmJibDBzSUc4Z0lUMDlJSFp2YVdRZ01DQW1KaUFvWlM1d2RYTm9LSEl1ZEdsdFpTa3NJSFF1Y0hWemFDaHZLU2tzSUhJZ1BTQnpXMmtySzEwN0NpQWdJQ0FnSUNBZ2QyaHBiR1VnS0hJZ0lUMDlJSFp2YVdRZ01Da0tJQ0FnSUgwc0NpQWdJQ0J6ZFdKamJHbHdPaUJtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1TENCcElEMGdNekFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhNdVkyeHZibVVvS1RzS0lDQWdJQ0FnSUNCeUxtNWhiV1VnUFNCbE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNJRDBnTURzZ2JDQThJSEl1ZEhKaFkydHpMbXhsYm1kMGFEc2dLeXRzS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQnlMblJ5WVdOcmMxdHNYU3dnYUNBOUlHTXVaMlYwVm1Gc2RXVlRhWHBsS0Nrc0lIVWdQU0JiWFN3Z1pDQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWWdQU0F3T3lCbUlEd2dZeTUwYVcxbGN5NXNaVzVuZEdnN0lDc3JaaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJR011ZEdsdFpYTmJabDBnS2lCcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0VvYlNBOElIUWdmSHdnYlNBK1BTQnVLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVXVjSFZ6YUNoakxuUnBiV1Z6VzJaZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGdnUFNBd095QjRJRHdnYURzZ0t5dDRLV1F1Y0hWemFDaGpMblpoYkhWbGMxdG1JQ29nYUNBcklIaGRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IxTG14bGJtZDBhQ0FoUFQwZ01DQW1KaUFvWXk1MGFXMWxjeUE5SUZwbExtTnZiblpsY25SQmNuSmhlU2gxTENCakxuUnBiV1Z6TG1OdmJuTjBjblZqZEc5eUtTd2dZeTUyWVd4MVpYTWdQU0JhWlM1amIyNTJaWEowUVhKeVlYa29aQ3dnWXk1MllXeDFaWE11WTI5dWMzUnlkV04wYjNJcExDQnZMbkIxYzJnb1l5a3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5TG5SeVlXTnJjeUE5SUc4N0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNBeElDOGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR3dnUFNBd095QnNJRHdnY2k1MGNtRmphM011YkdWdVozUm9PeUFySzJ3cFlTQStJSEl1ZEhKaFkydHpXMnhkTG5ScGJXVnpXekJkSUNZbUlDaGhJRDBnY2k1MGNtRmphM05iYkYwdWRHbHRaWE5iTUYwcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJREE3SUd3Z1BDQnlMblJ5WVdOcmN5NXNaVzVuZEdnN0lDc3JiQ2x5TG5SeVlXTnJjMXRzWFM1emFHbG1kQ2d0TVNBcUlHRXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnlMbkpsYzJWMFJIVnlZWFJwYjI0b0tTd2djanNLSUNBZ0lIMHNDaUFnSUNCdFlXdGxRMnhwY0VGa1pHbDBhWFpsT2lCbWRXNWpkR2x2YmloekxDQmxJRDBnTUN3Z2RDQTlJSE1zSUc0Z1BTQXpNQ2tnZXdvZ0lDQWdJQ0FnSUc0Z1BEMGdNQ0FtSmlBb2JpQTlJRE13S1RzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhRdWRISmhZMnR6TG14bGJtZDBhQ3dnY2lBOUlHVWdMeUJ1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQTdJRzhnUENCcE95QXJLMjhwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUXVkSEpoWTJ0elcyOWRMQ0JzSUQwZ1lTNVdZV3gxWlZSNWNHVk9ZVzFsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkNBOVBUMGdJbUp2YjJ3aUlIeDhJR3dnUFQwOUlDSnpkSEpwYm1jaUtTQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0J6TG5SeVlXTnJjeTVtYVc1a0tHWjFibU4wYVc5dUtHY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQm5MbTVoYldVZ1BUMDlJR0V1Ym1GdFpTQW1KaUJuTGxaaGJIVmxWSGx3WlU1aGJXVWdQVDA5SUd3N0NpQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWXlBOVBUMGdkbTlwWkNBd0tTQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0F3TENCMUlEMGdZUzVuWlhSV1lXeDFaVk5wZW1Vb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWVM1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZEM1cGMwbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkVkTVZFWkRkV0pwWTFOd2JHbHVaU0FtSmlBb2FDQTlJSFVnTHlBektUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0F3TENCbUlEMGdZeTVuWlhSV1lXeDFaVk5wZW1Vb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWXk1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZEM1cGMwbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkVkTVZFWkRkV0pwWTFOd2JHbHVaU0FtSmlBb1pDQTlJR1lnTHlBektUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0JoTG5ScGJXVnpMbXhsYm1kMGFDQXRJREVzSUhnN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEdzlJR0V1ZEdsdFpYTmJNRjBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnYUN3Z2NDQTlJSFVnTFNCb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDQTlJRnBsTG1GeWNtRjVVMnhwWTJVb1lTNTJZV3gxWlhNc0lHY3NJSEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSElnUGowZ1lTNTBhVzFsYzF0dFhTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQnRJQ29nZFNBcklHZ3NJSEFnUFNCbklDc2dkU0F0SUdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNElEMGdXbVV1WVhKeVlYbFRiR2xqWlNoaExuWmhiSFZsY3l3Z1p5d2djQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUdFdVkzSmxZWFJsU1c1MFpYSndiMnhoYm5Rb0tTd2djQ0E5SUdnc0lGOGdQU0IxSUMwZ2FEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHY3VaWFpoYkhWaGRHVW9jaWtzSUhnZ1BTQmFaUzVoY25KaGVWTnNhV05sS0djdWNtVnpkV3gwUW5WbVptVnlMQ0J3TENCZktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNJRDA5UFNBaWNYVmhkR1Z5Ym1sdmJpSWdKaVlnYm1WM0lHZDBLQ2t1Wm5KdmJVRnljbUY1S0hncExtNXZjbTFoYkdsNlpTZ3BMbU52Ym1wMVoyRjBaU2dwTG5SdlFYSnlZWGtvZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdZeTUwYVcxbGN5NXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaeUE5SURBN0lHY2dQQ0IyT3lBcksyY3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQm5JQ29nWmlBcklHUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkNBOVBUMGdJbkYxWVhSbGNtNXBiMjRpS1NCbmRDNXRkV3gwYVhCc2VWRjFZWFJsY201cGIyNXpSbXhoZENoakxuWmhiSFZsY3l3Z2NDd2dlQ3dnTUN3Z1l5NTJZV3gxWlhNc0lIQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQm1JQzBnWkNBcUlESTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I1SUQwZ01Ec2dlU0E4SUY4N0lDc3JlU2xqTG5aaGJIVmxjMXR3SUNzZ2VWMGdMVDBnZUZ0NVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY3k1aWJHVnVaRTF2WkdVZ1BTQnhZeXdnY3pzS0lDQWdJSDBLZlN3Z1kyNGdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBLWHNLSUNBZ0lDQWdJQ0IwYUdsekxuQmhjbUZ0WlhSbGNsQnZjMmwwYVc5dWN5QTlJR1VzSUhSb2FYTXVYMk5oWTJobFpFbHVaR1Y0SUQwZ01Dd2dkR2hwY3k1eVpYTjFiSFJDZFdabVpYSWdQU0JwSUNFOVBTQjJiMmxrSURBZ1B5QnBJRG9nYm1WM0lIUXVZMjl1YzNSeWRXTjBiM0lvYmlrc0lIUm9hWE11YzJGdGNHeGxWbUZzZFdWeklEMGdkQ3dnZEdocGN5NTJZV3gxWlZOcGVtVWdQU0J1TENCMGFHbHpMbk5sZEhScGJtZHpJRDBnYm5Wc2JDd2dkR2hwY3k1RVpXWmhkV3gwVTJWMGRHbHVaM05mSUQwZ2UzMDdDaUFnSUNCOUNpQWdJQ0JsZG1Gc2RXRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbkJoY21GdFpYUmxjbEJ2YzJsMGFXOXVjeXdnYmlBOUlIUm9hWE11WDJOaFkyaGxaRWx1WkdWNExDQnBJRDBnZEZ0dVhTd2djaUE5SUhSYmJpQXRJREZkT3dvZ0lDQWdJQ0FnSUdVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZERvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVG9nYVdZZ0tDRW9aU0E4SUdrcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJRzRnS3lBeU96c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobElEd2djaWtnWW5KbFlXc2dhVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQTlJSFF1YkdWdVozUm9MQ0IwYUdsekxsOWpZV05vWldSSmJtUmxlQ0E5SUc0c0lIUm9hWE11WVdaMFpYSkZibVJmS0c0Z0xTQXhMQ0JsTENCeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVJRDA5UFNCaEtTQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwZ2FTd2dhU0E5SUhSYkt5dHVYU3dnWlNBOElHa3BJR0p5WldGcklIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJSFF1YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXlCdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JU2hsSUQ0OUlISXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdkRnN4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlNBOElHRWdKaVlnS0c0Z1BTQXlMQ0J5SUQwZ1lTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJRzRnTFNBeU96c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJSFJvYVhNdVgyTmhZMmhsWkVsdVpHVjRJRDBnTUN3Z2RHaHBjeTVpWldadmNtVlRkR0Z5ZEY4b01Dd2daU3dnYVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYmlBOVBUMGdiQ2tnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQTlJSElzSUhJZ1BTQjBXeTB0YmlBdElERmRMQ0JsSUQ0OUlISXBJR0p5WldGcklIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzRzSUc0Z1BTQXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXlCdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhheUJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtEc2diaUE4SUc4N0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzRnS3lCdklENCtQaUF4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVWdQQ0IwVzJGZElEOGdieUE5SUdFZ09pQnVJRDBnWVNBcklERTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBOUlIUmJibDBzSUhJZ1BTQjBXMjRnTFNBeFhTd2djaUE5UFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnZEdocGN5NWZZMkZqYUdWa1NXNWtaWGdnUFNBd0xDQjBhR2x6TG1KbFptOXlaVk4wWVhKMFh5Z3dMQ0JsTENCcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCdUlEMGdkQzVzWlc1bmRHZ3NJSFJvYVhNdVgyTmhZMmhsWkVsdVpHVjRJRDBnYml3Z2RHaHBjeTVoWm5SbGNrVnVaRjhvYmlBdElERXNJSElzSUdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJOaFkyaGxaRWx1WkdWNElEMGdiaXdnZEdocGN5NXBiblJsY25aaGJFTm9ZVzVuWldSZktHNHNJSElzSUdrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYm5SbGNuQnZiR0YwWlY4b2Jpd2djaXdnWlN3Z2FTazdDaUFnSUNCOUNpQWdJQ0JuWlhSVFpYUjBhVzVuYzE4b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMGRHbHVaM01nZkh3Z2RHaHBjeTVFWldaaGRXeDBVMlYwZEdsdVozTmZPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VWTmhiWEJzWlZaaGJIVmxYeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbkpsYzNWc2RFSjFabVpsY2l3Z2JpQTlJSFJvYVhNdWMyRnRjR3hsVm1Gc2RXVnpMQ0JwSUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVzSUhJZ1BTQmxJQ29nYVRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdPeUJ2SUNFOVBTQnBPeUFySzI4cGRGdHZYU0E5SUc1YmNpQXJJRzlkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp3YjJ4aGRHVmZLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpWTJGc2JDQjBieUJoWW5OMGNtRmpkQ0J0WlhSb2IyUWlLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnlkbUZzUTJoaGJtZGxaRjhvS1NCN2ZRcDlPd3BqYmk1d2NtOTBiM1I1Y0dVdVltVm1iM0psVTNSaGNuUmZJRDBnWTI0dWNISnZkRzkwZVhCbExtTnZjSGxUWVcxd2JHVldZV3gxWlY4N0NtTnVMbkJ5YjNSdmRIbHdaUzVoWm5SbGNrVnVaRjhnUFNCamJpNXdjbTkwYjNSNWNHVXVZMjl3ZVZOaGJYQnNaVlpoYkhWbFh6c0tkbUZ5SUZCb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCamJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUxDQnBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxsOTNaV2xuYUhSUWNtVjJJRDBnTFRBc0lIUm9hWE11WDI5bVpuTmxkRkJ5WlhZZ1BTQXRNQ3dnZEdocGN5NWZkMlZwWjJoMFRtVjRkQ0E5SUMwd0xDQjBhR2x6TGw5dlptWnpaWFJPWlhoMElEMGdMVEFzSUhSb2FYTXVSR1ZtWVhWc2RGTmxkSFJwYm1kelh5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXNWthVzVuVTNSaGNuUTZJRTFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxibVJwYm1kRmJtUTZJRTFwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5ZG1Gc1EyaGhibWRsWkY4b1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTV3WVhKaGJXVjBaWEpRYjNOcGRHbHZibk1zSUhJZ1BTQmxJQzBnTWl3Z2J5QTlJR1VnS3lBeExDQmhJRDBnYVZ0eVhTd2diQ0E5SUdsYmIxMDdDaUFnSUNBZ0lDQWdhV1lnS0dFZ1BUMDlJSFp2YVdRZ01Da2djM2RwZEdOb0tIUm9hWE11WjJWMFUyVjBkR2x1WjNOZktDa3VaVzVrYVc1blUzUmhjblFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUdKcE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NpQTlJR1VzSUdFZ1BTQXlJQ29nZENBdElHNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCUGN6b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISWdQU0JwTG14bGJtZDBhQ0F0SURJc0lHRWdQU0IwSUNzZ2FWdHlYU0F0SUdsYmNpQXJJREZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5SUQwZ1pTd2dZU0E5SUc0N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hzSUQwOVBTQjJiMmxrSURBcElITjNhWFJqYUNoMGFHbHpMbWRsZEZObGRIUnBibWR6WHlncExtVnVaR2x1WjBWdVpDbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdZbWs2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ1pTd2diQ0E5SURJZ0tpQnVJQzBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJRTl6T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlERXNJR3dnUFNCdUlDc2dhVnN4WFNBdElHbGJNRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCbElDMGdNU3dnYkNBOUlIUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCaklEMGdLRzRnTFNCMEtTQXFJQzQxTENCb0lEMGdkR2hwY3k1MllXeDFaVk5wZW1VN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZDJWcFoyaDBVSEpsZGlBOUlHTWdMeUFvZENBdElHRXBMQ0IwYUdsekxsOTNaV2xuYUhST1pYaDBJRDBnWXlBdklDaHNJQzBnYmlrc0lIUm9hWE11WDI5bVpuTmxkRkJ5WlhZZ1BTQnlJQ29nYUN3Z2RHaHBjeTVmYjJabWMyVjBUbVY0ZENBOUlHOGdLaUJvT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp3YjJ4aGRHVmZLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXVjbVZ6ZFd4MFFuVm1abVZ5TENCdklEMGdkR2hwY3k1ellXMXdiR1ZXWVd4MVpYTXNJR0VnUFNCMGFHbHpMblpoYkhWbFUybDZaU3dnYkNBOUlHVWdLaUJoTENCaklEMGdiQ0F0SUdFc0lHZ2dQU0IwYUdsekxsOXZabVp6WlhSUWNtVjJMQ0IxSUQwZ2RHaHBjeTVmYjJabWMyVjBUbVY0ZEN3Z1pDQTlJSFJvYVhNdVgzZGxhV2RvZEZCeVpYWXNJR1lnUFNCMGFHbHpMbDkzWldsbmFIUk9aWGgwTENCdElEMGdLRzRnTFNCMEtTQXZJQ2hwSUMwZ2RDa3NJSGdnUFNCdElDb2diU3dnZGlBOUlIZ2dLaUJ0TENCbklEMGdMV1FnS2lCMklDc2dNaUFxSUdRZ0tpQjRJQzBnWkNBcUlHMHNJSEFnUFNBb01TQXJJR1FwSUNvZ2RpQXJJQ2d0TVM0MUlDMGdNaUFxSUdRcElDb2dlQ0FySUNndExqVWdLeUJrS1NBcUlHMGdLeUF4TENCZklEMGdLQzB4SUMwZ1ppa2dLaUIySUNzZ0tERXVOU0FySUdZcElDb2dlQ0FySUM0MUlDb2diU3dnZVNBOUlHWWdLaUIySUMwZ1ppQXFJSGc3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JpSUQwZ01Ec2dZaUFoUFQwZ1lUc2dLeXRpS1hKYllsMGdQU0JuSUNvZ2IxdG9JQ3NnWWwwZ0t5QndJQ29nYjF0aklDc2dZbDBnS3lCZklDb2diMXRzSUNzZ1lsMGdLeUI1SUNvZ2IxdDFJQ3NnWWwwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJN0NpQWdJQ0I5Q24wc0lFNWhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmpiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMExDQnVMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5Y0c5c1lYUmxYeWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMGFHbHpMbkpsYzNWc2RFSjFabVpsY2l3Z2J5QTlJSFJvYVhNdWMyRnRjR3hsVm1Gc2RXVnpMQ0JoSUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVzSUd3Z1BTQmxJQ29nWVN3Z1l5QTlJR3dnTFNCaExDQm9JRDBnS0c0Z0xTQjBLU0F2SUNocElDMGdkQ2tzSUhVZ1BTQXhJQzBnYURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdRZ1BTQXdPeUJrSUNFOVBTQmhPeUFySzJRcGNsdGtYU0E5SUc5Yll5QXJJR1JkSUNvZ2RTQXJJRzliYkNBcklHUmRJQ29nYURzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2pzS0lDQWdJSDBLZlN3Z1NXZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklHTnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHNJR2twZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRc0lHNHNJR2twT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp3YjJ4aGRHVmZLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiM0I1VTJGdGNHeGxWbUZzZFdWZktHVWdMU0F4S1RzS0lDQWdJSDBLZlN3Z2VuUWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBLWHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQTlQVDBnZG05cFpDQXdLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbFJJVWtWRkxrdGxlV1p5WVcxbFZISmhZMnM2SUhSeVlXTnJJRzVoYldVZ2FYTWdkVzVrWldacGJtVmtJaWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdQVDA5SUhadmFXUWdNQ0I4ZkNCMExteGxibWQwYUNBOVBUMGdNQ2tnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ0pVU0ZKRlJTNUxaWGxtY21GdFpWUnlZV05yT2lCdWJ5QnJaWGxtY21GdFpYTWdhVzRnZEhKaFkyc2dibUZ0WldRZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVibUZ0WlNBOUlHVXNJSFJvYVhNdWRHbHRaWE1nUFNCYVpTNWpiMjUyWlhKMFFYSnlZWGtvZEN3Z2RHaHBjeTVVYVcxbFFuVm1abVZ5Vkhsd1pTa3NJSFJvYVhNdWRtRnNkV1Z6SUQwZ1dtVXVZMjl1ZG1WeWRFRnljbUY1S0c0c0lIUm9hWE11Vm1Gc2RXVkNkV1ptWlhKVWVYQmxLU3dnZEdocGN5NXpaWFJKYm5SbGNuQnZiR0YwYVc5dUtHa2dmSHdnZEdocGN5NUVaV1poZFd4MFNXNTBaWEp3YjJ4aGRHbHZiaWs3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVkyOXVjM1J5ZFdOMGIzSXNJRzQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUXVkRzlLVTA5T0lDRTlQU0IwYUdsekxuUnZTbE5QVGlrZ2JpQTlJSFF1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCdUlEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ1pTNXVZVzFsTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdsdFpYTTZJRnBsTG1OdmJuWmxjblJCY25KaGVTaGxMblJwYldWekxDQkJjbkpoZVNrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaWE02SUZwbExtTnZiblpsY25SQmNuSmhlU2hsTG5aaGJIVmxjeXdnUVhKeVlYa3BDaUFnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaUzVuWlhSSmJuUmxjbkJ2YkdGMGFXOXVLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa2dJVDA5SUdVdVJHVm1ZWFZzZEVsdWRHVnljRzlzWVhScGIyNGdKaVlnS0c0dWFXNTBaWEp3YjJ4aGRHbHZiaUE5SUdrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNTBlWEJsSUQwZ1pTNVdZV3gxWlZSNWNHVk9ZVzFsTENCdU93b2dJQ0FnZlFvZ0lDQWdTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1JHbHpZM0psZEdVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnU1dnb2RHaHBjeTUwYVcxbGN5d2dkR2hwY3k1MllXeDFaWE1zSUhSb2FYTXVaMlYwVm1Gc2RXVlRhWHBsS0Nrc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnU1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtUR2x1WldGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUU1aEtIUm9hWE11ZEdsdFpYTXNJSFJvYVhNdWRtRnNkV1Z6TENCMGFHbHpMbWRsZEZaaGJIVmxVMmw2WlNncExDQmxLVHNLSUNBZ0lIMEtJQ0FnSUVsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRk50YjI5MGFDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCUWFDaDBhR2x6TG5ScGJXVnpMQ0IwYUdsekxuWmhiSFZsY3l3Z2RHaHBjeTVuWlhSV1lXeDFaVk5wZW1Vb0tTd2daU2s3Q2lBZ0lDQjlDaUFnSUNCelpYUkpiblJsY25CdmJHRjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZERzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2VuTTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnZEdocGN5NUpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSRWFYTmpjbVYwWlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJRlZ6T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIUm9hWE11U1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtUR2x1WldGeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZVc4NkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMElEMGdkR2hwY3k1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJUYlc5dmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFFnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJQ0oxYm5OMWNIQnZjblJsWkNCcGJuUmxjbkJ2YkdGMGFXOXVJR1p2Y2lBaUlDc2dkR2hwY3k1V1lXeDFaVlI1Y0dWT1lXMWxJQ3NnSWlCclpYbG1jbUZ0WlNCMGNtRmpheUJ1WVcxbFpDQWlJQ3NnZEdocGN5NXVZVzFsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWpjbVZoZEdWSmJuUmxjbkJ2YkdGdWRDQTlQVDBnZG05cFpDQXdLU0JwWmlBb1pTQWhQVDBnZEdocGN5NUVaV1poZFd4MFNXNTBaWEp3YjJ4aGRHbHZiaWtnZEdocGN5NXpaWFJKYm5SbGNuQnZiR0YwYVc5dUtIUm9hWE11UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lodUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2lMQ0J1S1N3Z2RHaHBjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzSmxZWFJsU1c1MFpYSndiMnhoYm5RZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwU1c1MFpYSndiMnhoZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29kR2hwY3k1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZENsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2RHaHBjeTVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUkVhWE5qY21WMFpUb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCNmN6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQjBhR2x6TGtsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRXhwYm1WaGNqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCVmN6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQjBhR2x6TGtsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRk50YjI5MGFEb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCNWJ6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JuWlhSV1lXeDFaVk5wZW1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZG1Gc2RXVnpMbXhsYm1kMGFDQXZJSFJvYVhNdWRHbHRaWE11YkdWdVozUm9Pd29nSUNBZ2ZRb2dJQ0FnYzJocFpuUW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGxJQ0U5UFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NTBhVzFsY3pzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJSFF1YkdWdVozUm9PeUJ1SUNFOVBTQnBPeUFySzI0cGRGdHVYU0FyUFNCbE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhOallXeGxLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9aU0FoUFQwZ01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVkR2x0WlhNN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBaFBUMGdhVHNnS3l0dUtYUmJibDBnS2owZ1pUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGNtbHRLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11ZEdsdFpYTXNJR2tnUFNCdUxteGxibWQwYUN3Z2NpQTlJREFzSUc4Z1BTQnBJQzBnTVRzS0lDQWdJQ0FnSUNCbWIzSW9PeUJ5SUNFOVBTQnBJQ1ltSUc1YmNsMGdQQ0JsT3lrckszSTdDaUFnSUNBZ0lDQWdabTl5S0RzZ2J5QWhQVDBnTFRFZ0ppWWdibHR2WFNBK0lIUTdLUzB0YnpzS0lDQWdJQ0FnSUNCcFppQW9LeXR2TENCeUlDRTlQU0F3SUh4OElHOGdJVDA5SUdrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY2lBK1BTQnZJQ1ltSUNodklEMGdUV0YwYUM1dFlYZ29ieXdnTVNrc0lISWdQU0J2SUMwZ01TazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnZEdocGN5NW5aWFJXWVd4MVpWTnBlbVVvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MGFXMWxjeUE5SUZwbExtRnljbUY1VTJ4cFkyVW9iaXdnY2l3Z2J5a3NJSFJvYVhNdWRtRnNkV1Z6SUQwZ1dtVXVZWEp5WVhsVGJHbGpaU2gwYUdsekxuWmhiSFZsY3l3Z2NpQXFJR0VzSUc4Z0tpQmhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjJZV3hwWkdGMFpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJQ0V3TENCMElEMGdkR2hwY3k1blpYUldZV3gxWlZOcGVtVW9LVHNLSUNBZ0lDQWdJQ0IwSUMwZ1RXRjBhQzVtYkc5dmNpaDBLU0FoUFQwZ01DQW1KaUFvWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVMyVjVabkpoYldWVWNtRmphem9nU1c1MllXeHBaQ0IyWVd4MVpTQnphWHBsSUdsdUlIUnlZV05yTGlJc0lIUm9hWE1wTENCbElEMGdJVEVwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NTBhVzFsY3l3Z2FTQTlJSFJvYVhNdWRtRnNkV1Z6TENCeUlEMGdiaTVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdjaUE5UFQwZ01DQW1KaUFvWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVMyVjVabkpoYldWVWNtRmphem9nVkhKaFkyc2dhWE1nWlcxd2RIa3VJaXdnZEdocGN5a3NJR1VnUFNBaE1TazdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQTdJR0VnSVQwOUlISTdJR0VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdibHRoWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJzSUQwOUlDSnVkVzFpWlhJaUlDWW1JR2x6VG1GT0tHd3BLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TFpYbG1jbUZ0WlZSeVlXTnJPaUJVYVcxbElHbHpJRzV2ZENCaElIWmhiR2xrSUc1MWJXSmxjaTRpTENCMGFHbHpMQ0JoTENCc0tTd2daU0E5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHOGdJVDA5SUc1MWJHd2dKaVlnYnlBK0lHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGt0bGVXWnlZVzFsVkhKaFkyczZJRTkxZENCdlppQnZjbVJsY2lCclpYbHpMaUlzSUhSb2FYTXNJR0VzSUd3c0lHOHBMQ0JsSUQwZ0lURTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCdklEMGdiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHa2dJVDA5SUhadmFXUWdNQ0FtSmlCYVpTNXBjMVI1Y0dWa1FYSnlZWGtvYVNrcElHWnZjaWhzWlhRZ1lTQTlJREFzSUd3Z1BTQnBMbXhsYm1kMGFEc2dZU0FoUFQwZ2JEc2dLeXRoS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQnBXMkZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVhOT1lVNG9ZeWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrdGxlV1p5WVcxbFZISmhZMnM2SUZaaGJIVmxJR2x6SUc1dmRDQmhJSFpoYkdsa0lHNTFiV0psY2k0aUxDQjBhR2x6TENCaExDQmpLU3dnWlNBOUlDRXhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1U3Q2lBZ0lDQjlDaUFnSUNCdmNIUnBiV2w2WlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlGcGxMbUZ5Y21GNVUyeHBZMlVvZEdocGN5NTBhVzFsY3lrc0lIUWdQU0JhWlM1aGNuSmhlVk5zYVdObEtIUm9hWE11ZG1Gc2RXVnpLU3dnYmlBOUlIUm9hWE11WjJWMFZtRnNkV1ZUYVhwbEtDa3NJR2tnUFNCMGFHbHpMbWRsZEVsdWRHVnljRzlzWVhScGIyNG9LU0E5UFQwZ2VXOHNJSElnUFNCbExteGxibWQwYUNBdElERXNJRzhnUFNBeE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJREU3SUdFZ1BDQnlPeUFySzJFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJQ0V4TENCaklEMGdaVnRoWFN3Z2FDQTlJR1ZiWVNBcklERmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZeUFoUFQwZ2FDQW1KaUFvWVNBaFBUMGdNU0I4ZkNCaklDRTlQU0JsV3pCZEtTa2dhV1lnS0drcElHd2dQU0FoTURzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUdFZ0tpQnVMQ0JrSUQwZ2RTQXRJRzRzSUdZZ1BTQjFJQ3NnYmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlEQTdJRzBnSVQwOUlHNDdJQ3NyYlNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhnZ1BTQjBXM1VnS3lCdFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2VDQWhQVDBnZEZ0a0lDc2diVjBnZkh3Z2VDQWhQVDBnZEZ0bUlDc2diVjBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkNBOUlDRXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoSUNFOVBTQnZLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pWdHZYU0E5SUdWYllWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0JoSUNvZ2Jpd2daQ0E5SUc4Z0tpQnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWmlBOUlEQTdJR1lnSVQwOUlHNDdJQ3NyWmlsMFcyUWdLeUJtWFNBOUlIUmJkU0FySUdaZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0t5dHZPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2h5SUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCbFcyOWRJRDBnWlZ0eVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JoSUQwZ2NpQXFJRzRzSUd3Z1BTQnZJQ29nYml3Z1l5QTlJREE3SUdNZ0lUMDlJRzQ3SUNzcll5bDBXMndnS3lCalhTQTlJSFJiWVNBcklHTmRPd29nSUNBZ0lDQWdJQ0FnSUNBcksyODdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnZJQ0U5UFNCbExteGxibWQwYUNBL0lDaDBhR2x6TG5ScGJXVnpJRDBnV21VdVlYSnlZWGxUYkdsalpTaGxMQ0F3TENCdktTd2dkR2hwY3k1MllXeDFaWE1nUFNCYVpTNWhjbkpoZVZOc2FXTmxLSFFzSURBc0lHOGdLaUJ1S1NrZ09pQW9kR2hwY3k1MGFXMWxjeUE5SUdVc0lIUm9hWE11ZG1Gc2RXVnpJRDBnZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUZwbExtRnljbUY1VTJ4cFkyVW9kR2hwY3k1MGFXMWxjeXdnTUNrc0lIUWdQU0JhWlM1aGNuSmhlVk5zYVdObEtIUm9hWE11ZG1Gc2RXVnpMQ0F3S1N3Z2JpQTlJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSXNJR2tnUFNCdVpYY2diaWgwYUdsekxtNWhiV1VzSUdVc0lIUXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBMbU55WldGMFpVbHVkR1Z5Y0c5c1lXNTBJRDBnZEdocGN5NWpjbVZoZEdWSmJuUmxjbkJ2YkdGdWRDd2dhVHNLSUNBZ0lIMEtmVHNLZW5RdWNISnZkRzkwZVhCbExsUnBiV1ZDZFdabVpYSlVlWEJsSUQwZ1JteHZZWFF6TWtGeWNtRjVPd3A2ZEM1d2NtOTBiM1I1Y0dVdVZtRnNkV1ZDZFdabVpYSlVlWEJsSUQwZ1JteHZZWFF6TWtGeWNtRjVPd3A2ZEM1d2NtOTBiM1I1Y0dVdVJHVm1ZWFZzZEVsdWRHVnljRzlzWVhScGIyNGdQU0JWY3pzS2RtRnlJRkZ1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUI2ZENCN0NuMDdDbEZ1TG5CeWIzUnZkSGx3WlM1V1lXeDFaVlI1Y0dWT1lXMWxJRDBnSW1KdmIyd2lPd3BSYmk1d2NtOTBiM1I1Y0dVdVZtRnNkV1ZDZFdabVpYSlVlWEJsSUQwZ1FYSnlZWGs3Q2xGdUxuQnliM1J2ZEhsd1pTNUVaV1poZFd4MFNXNTBaWEp3YjJ4aGRHbHZiaUE5SUhwek93cFJiaTV3Y205MGIzUjVjR1V1U1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtUR2x1WldGeUlEMGdkbTlwWkNBd093cFJiaTV3Y205MGIzUjVjR1V1U1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtVMjF2YjNSb0lEMGdkbTlwWkNBd093cDJZWElnUW1FZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhwMElIc0tmVHNLUW1FdWNISnZkRzkwZVhCbExsWmhiSFZsVkhsd1pVNWhiV1VnUFNBaVkyOXNiM0lpT3dwMllYSWdRWElnUFNCamJHRnpjeUJsZUhSbGJtUnpJSHAwSUhzS2ZUc0tRWEl1Y0hKdmRHOTBlWEJsTGxaaGJIVmxWSGx3WlU1aGJXVWdQU0FpYm5WdFltVnlJanNLZG1GeUlFUm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmpiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMExDQnVMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5Y0c5c1lYUmxYeWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMGFHbHpMbkpsYzNWc2RFSjFabVpsY2l3Z2J5QTlJSFJvYVhNdWMyRnRjR3hsVm1Gc2RXVnpMQ0JoSUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVzSUd3Z1BTQW9iaUF0SUhRcElDOGdLR2tnTFNCMEtTd2dZeUE5SUdVZ0tpQmhPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SUdNZ0t5QmhPeUJqSUNFOVBTQm9PeUJqSUNzOUlEUXBaM1F1YzJ4bGNuQkdiR0YwS0hJc0lEQXNJRzhzSUdNZ0xTQmhMQ0J2TENCakxDQnNLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjanNLSUNBZ0lIMEtmU3dnVjJrZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhwMElIc0tJQ0FnSUVsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRXhwYm1WaGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCRWFDaDBhR2x6TG5ScGJXVnpMQ0IwYUdsekxuWmhiSFZsY3l3Z2RHaHBjeTVuWlhSV1lXeDFaVk5wZW1Vb0tTd2daU2s3Q2lBZ0lDQjlDbjA3Q2xkcExuQnliM1J2ZEhsd1pTNVdZV3gxWlZSNWNHVk9ZVzFsSUQwZ0luRjFZWFJsY201cGIyNGlPd3BYYVM1d2NtOTBiM1I1Y0dVdVJHVm1ZWFZzZEVsdWRHVnljRzlzWVhScGIyNGdQU0JWY3pzS1Yya3VjSEp2ZEc5MGVYQmxMa2x1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpGTnRiMjkwYUNBOUlIWnZhV1FnTURzS2RtRnlJRXR1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUI2ZENCN0NuMDdDa3R1TG5CeWIzUnZkSGx3WlM1V1lXeDFaVlI1Y0dWT1lXMWxJRDBnSW5OMGNtbHVaeUk3Q2t0dUxuQnliM1J2ZEhsd1pTNVdZV3gxWlVKMVptWmxjbFI1Y0dVZ1BTQkJjbkpoZVRzS1MyNHVjSEp2ZEc5MGVYQmxMa1JsWm1GMWJIUkpiblJsY25CdmJHRjBhVzl1SUQwZ2VuTTdDa3R1TG5CeWIzUnZkSGx3WlM1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJNYVc1bFlYSWdQU0IyYjJsa0lEQTdDa3R1TG5CeWIzUnZkSGx3WlM1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJUYlc5dmRHZ2dQU0IyYjJsa0lEQTdDblpoY2lCRGNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2VuUWdld3A5T3dwRGNpNXdjbTkwYjNSNWNHVXVWbUZzZFdWVWVYQmxUbUZ0WlNBOUlDSjJaV04wYjNJaU93cDJZWElnVEhJZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBJRDBnTFRFc0lHNHNJR2tnUFNCMVlTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1dVlXMWxJRDBnWlN3Z2RHaHBjeTUwY21GamEzTWdQU0J1TENCMGFHbHpMbVIxY21GMGFXOXVJRDBnZEN3Z2RHaHBjeTVpYkdWdVpFMXZaR1VnUFNCcExDQjBhR2x6TG5WMWFXUWdQU0JGZENncExDQjBhR2x6TG1SMWNtRjBhVzl1SUR3Z01DQW1KaUIwYUdsekxuSmxjMlYwUkhWeVlYUnBiMjRvS1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCd1lYSnpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYlhTd2diaUE5SUdVdWRISmhZMnR6TENCcElEMGdNU0F2SUNobExtWndjeUI4ZkNBeEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3TENCaElEMGdiaTVzWlc1bmRHZzdJRzhnSVQwOUlHRTdJQ3NyYnlsMExuQjFjMmdvWVhrb2JsdHZYU2t1YzJOaGJHVW9hU2twT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lIUm9hWE1vWlM1dVlXMWxMQ0JsTG1SMWNtRjBhVzl1TENCMExDQmxMbUpzWlc1a1RXOWtaU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEl1ZFhWcFpDQTlJR1V1ZFhWcFpDd2djanNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUIwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVzEwc0lHNGdQU0JsTG5SeVlXTnJjeXdnYVNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2daUzV1WVcxbExBb2dJQ0FnSUNBZ0lDQWdJQ0JrZFhKaGRHbHZiam9nWlM1a2RYSmhkR2x2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdkSEpoWTJ0ek9pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCMWRXbGtPaUJsTG5WMWFXUXNDaUFnSUNBZ0lDQWdJQ0FnSUdKc1pXNWtUVzlrWlRvZ1pTNWliR1Z1WkUxdlpHVUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0J1TG14bGJtZDBhRHNnY2lBaFBUMGdienNnS3l0eUtYUXVjSFZ6YUNoNmRDNTBiMHBUVDA0b2JsdHlYU2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUVOeVpXRjBaVVp5YjIxTmIzSndhRlJoY21kbGRGTmxjWFZsYm1ObEtHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFF1YkdWdVozUm9MQ0J2SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmhJRDBnTURzZ1lTQThJSEk3SUdFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnVzEwc0lHTWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdiQzV3ZFhOb0tDaGhJQ3NnY2lBdElERXBJQ1VnY2l3Z1lTd2dLR0VnS3lBeEtTQWxJSElwTENCakxuQjFjMmdvTUN3Z01Td2dNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ1dtVXVaMlYwUzJWNVpuSmhiV1ZQY21SbGNpaHNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JDQTlJRnBsTG5OdmNuUmxaRUZ5Y21GNUtHd3NJREVzSUdncExDQmpJRDBnV21VdWMyOXlkR1ZrUVhKeVlYa29ZeXdnTVN3Z2FDa3NJQ0ZwSUNZbUlHeGJNRjBnUFQwOUlEQWdKaVlnS0d3dWNIVnphQ2h5S1N3Z1l5NXdkWE5vS0dOYk1GMHBLU3dnYnk1d2RYTm9LRzVsZHlCQmNpZ2lMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzaUlDc2dkRnRoWFM1dVlXMWxJQ3NnSWwwaUxDQnNMQ0JqS1M1elkyRnNaU2d4SUM4Z2Jpa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTW9aU3dnTFRFc0lHOHBPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1pwYm1SQ2VVNWhiV1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaVHNLSUNBZ0lDQWdJQ0JwWmlBb0lVRnljbUY1TG1selFYSnlZWGtvWlNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVJRDBnYVM1blpXOXRaWFJ5ZVNBbUppQnBMbWRsYjIxbGRISjVMbUZ1YVcxaGRHbHZibk1nZkh3Z2FTNWhibWx0WVhScGIyNXpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd095QnBJRHdnYmk1c1pXNW5kR2c3SUdrckt5bHBaaUFvYmx0cFhTNXVZVzFsSUQwOVBTQjBLU0J5WlhSMWNtNGdibHRwWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QkRjbVZoZEdWRGJHbHdjMFp5YjIxTmIzSndhRlJoY21kbGRGTmxjWFZsYm1ObGN5aGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjdmU3dnY2lBOUlDOWVLRnRjZHkxZEtqOHBLRnRjWkYwcktTUXZPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBc0lHd2dQU0JsTG14bGJtZDBhRHNnWVNBOElHdzdJR0VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdaVnRoWFN3Z2FDQTlJR011Ym1GdFpTNXRZWFJqYUNoeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHZ2dKaVlnYUM1c1pXNW5kR2dnUGlBeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHaGJNVjBzSUdRZ1BTQnBXM1ZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkNCOGZDQW9hVnQxWFNBOUlHUWdQU0JiWFNrc0lHUXVjSFZ6YUNoaktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQnBiaUJwS1c4dWNIVnphQ2gwYUdsekxrTnlaV0YwWlVaeWIyMU5iM0p3YUZSaGNtZGxkRk5sY1hWbGJtTmxLR0VzSUdsYllWMHNJSFFzSUc0cEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2J6c0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QndZWEp6WlVGdWFXMWhkR2x2YmlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tDRmxLU0J5WlhSMWNtNGdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UVc1cGJXRjBhVzl1UTJ4cGNEb2dUbThnWVc1cGJXRjBhVzl1SUdsdUlFcFRUMDVNYjJGa1pYSWdaR0YwWVM0aUtTd2diblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdaMWJtTjBhVzl1S0hVc0lHUXNJR1lzSUcwc0lIZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1l1YkdWdVozUm9JQ0U5UFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlGdGRMQ0JuSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmFaUzVtYkdGMGRHVnVTbE5QVGlobUxDQjJMQ0JuTENCdEtTd2dkaTVzWlc1bmRHZ2dJVDA5SURBZ0ppWWdlQzV3ZFhOb0tHNWxkeUIxS0dRc0lIWXNJR2NwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzSUdrZ1BTQmJYU3dnY2lBOUlHVXVibUZ0WlNCOGZDQWlaR1ZtWVhWc2RDSXNJRzhnUFNCbExtWndjeUI4ZkNBek1Dd2dZU0E5SUdVdVlteGxibVJOYjJSbExDQnNJRDBnWlM1c1pXNW5kR2dnZkh3Z0xURXNJR01nUFNCbExtaHBaWEpoY21Ob2VTQjhmQ0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhVZ1BTQXdPeUIxSUR3Z1l5NXNaVzVuZEdnN0lIVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1kxdDFYUzVyWlhsek93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lTZ2haQ0I4ZkNCa0xteGxibWQwYUNBOVBUMGdNQ2twSUdsbUlDaGtXekJkTG0xdmNuQm9WR0Z5WjJWMGN5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQjdmU3dnYlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHRJRDBnTURzZ2JTQThJR1F1YkdWdVozUm9PeUJ0S3lzcGFXWWdLR1JiYlYwdWJXOXljR2hVWVhKblpYUnpLU0JtYjNJb2JHVjBJSGdnUFNBd095QjRJRHdnWkZ0dFhTNXRiM0p3YUZSaGNtZGxkSE11YkdWdVozUm9PeUI0S3lzcFpsdGtXMjFkTG0xdmNuQm9WR0Z5WjJWMGMxdDRYVjBnUFNBdE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VDQnBiaUJtS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlGdGRMQ0JuSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J3SUQwZ01Ec2djQ0FoUFQwZ1pGdHRYUzV0YjNKd2FGUmhjbWRsZEhNdWJHVnVaM1JvT3lBckszQXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlHUmJiVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFl1Y0hWemFDaGZMblJwYldVcExDQm5MbkIxYzJnb1h5NXRiM0p3YUZSaGNtZGxkQ0E5UFQwZ2VDQS9JREVnT2lBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNXdkWE5vS0c1bGR5QkJjaWdpTG0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObFd5SWdLeUI0SUNzZ0lsMGlMQ0IyTENCbktTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNJRDBnWmk1c1pXNW5kR2dnS2lBb2J5QjhmQ0F4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ0lpNWliMjVsYzFzaUlDc2dkRnQxWFM1dVlXMWxJQ3NnSWwwaU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JpaERjaXdnWmlBcklDSXVjRzl6YVhScGIyNGlMQ0JrTENBaWNHOXpJaXdnYVNrc0lHNG9WMmtzSUdZZ0t5QWlMbkYxWVhSbGNtNXBiMjRpTENCa0xDQWljbTkwSWl3Z2FTa3NJRzRvUTNJc0lHWWdLeUFpTG5OallXeGxJaXdnWkN3Z0luTmpiQ0lzSUdrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwTG14bGJtZDBhQ0E5UFQwZ01DQS9JRzUxYkd3Z09pQnVaWGNnZEdocGN5aHlMQ0JzTENCcExDQmhLVHNLSUNBZ0lIMEtJQ0FnSUhKbGMyVjBSSFZ5WVhScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxuUnlZV05yY3l3Z2RDQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUdVdWJHVnVaM1JvT3lCdUlDRTlQU0JwT3lBcksyNHBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXVkSEpoWTJ0elcyNWRPd29nSUNBZ0lDQWdJQ0FnSUNCMElEMGdUV0YwYUM1dFlYZ29kQ3dnY2k1MGFXMWxjMXR5TG5ScGJXVnpMbXhsYm1kMGFDQXRJREZkS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaSFZ5WVhScGIyNGdQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEhKcGJTZ3BJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBd095QmxJRHdnZEdocGN5NTBjbUZqYTNNdWJHVnVaM1JvT3lCbEt5c3BkR2hwY3k1MGNtRmphM05iWlYwdWRISnBiU2d3TENCMGFHbHpMbVIxY21GMGFXOXVLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIWmhiR2xrWVhSbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Ec2dkQ0E4SUhSb2FYTXVkSEpoWTJ0ekxteGxibWQwYURzZ2RDc3JLV1VnUFNCbElDWW1JSFJvYVhNdWRISmhZMnR6VzNSZExuWmhiR2xrWVhSbEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVTdDaUFnSUNCOUNpQWdJQ0J2Y0hScGJXbDZaU2dwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdVZ1BTQXdPeUJsSUR3Z2RHaHBjeTUwY21GamEzTXViR1Z1WjNSb095QmxLeXNwZEdocGN5NTBjbUZqYTNOYlpWMHViM0IwYVcxcGVtVW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTURzZ2RDQThJSFJvYVhNdWRISmhZMnR6TG14bGJtZDBhRHNnZENzcktXVXVjSFZ6YUNoMGFHbHpMblJ5WVdOcmMxdDBYUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvZEdocGN5NXVZVzFsTENCMGFHbHpMbVIxY21GMGFXOXVMQ0JsTENCMGFHbHpMbUpzWlc1a1RXOWtaU2s3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl1YzNSeWRXTjBiM0l1ZEc5S1UwOU9LSFJvYVhNcE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQnZlU2h6S1NCN0NpQWdJQ0J6ZDJsMFkyZ29jeTUwYjB4dmQyVnlRMkZ6WlNncEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKelkyRnNZWElpT2dvZ0lDQWdJQ0FnSUdOaGMyVWdJbVJ2ZFdKc1pTSTZDaUFnSUNBZ0lDQWdZMkZ6WlNBaVpteHZZWFFpT2dvZ0lDQWdJQ0FnSUdOaGMyVWdJbTUxYldKbGNpSTZDaUFnSUNBZ0lDQWdZMkZ6WlNBaWFXNTBaV2RsY2lJNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkJjanNLSUNBZ0lDQWdJQ0JqWVhObElDSjJaV04wYjNJaU9nb2dJQ0FnSUNBZ0lHTmhjMlVnSW5abFkzUnZjaklpT2dvZ0lDQWdJQ0FnSUdOaGMyVWdJblpsWTNSdmNqTWlPZ29nSUNBZ0lDQWdJR05oYzJVZ0luWmxZM1J2Y2pRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdRM0k3Q2lBZ0lDQWdJQ0FnWTJGelpTQWlZMjlzYjNJaU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdRbUU3Q2lBZ0lDQWdJQ0FnWTJGelpTQWljWFZoZEdWeWJtbHZiaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCWGFUc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKaWIyOXNJam9LSUNBZ0lDQWdJQ0JqWVhObElDSmliMjlzWldGdUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRkZ1T3dvZ0lDQWdJQ0FnSUdOaGMyVWdJbk4wY21sdVp5STZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJMYmpzS0lDQWdJSDBLSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dWVzV6ZFhCd2IzSjBaV1FnZEhsd1pVNWhiV1U2SUNJZ0t5QnpLVHNLZlFwbWRXNWpkR2x2YmlCaGVTaHpLU0I3Q2lBZ0lDQnBaaUFvY3k1MGVYQmxJRDA5UFNCMmIybGtJREFwSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVkVoU1JVVXVTMlY1Wm5KaGJXVlVjbUZqYXpvZ2RISmhZMnNnZEhsd1pTQjFibVJsWm1sdVpXUXNJR05oYmlCdWIzUWdjR0Z5YzJVaUtUc0tJQ0FnSUd4bGRDQmxJRDBnYjNrb2N5NTBlWEJsS1RzS0lDQWdJR2xtSUNoekxuUnBiV1Z6SUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRMQ0J1SUQwZ1cxMDdDaUFnSUNBZ0lDQWdXbVV1Wm14aGRIUmxia3BUVDA0b2N5NXJaWGx6TENCMExDQnVMQ0FpZG1Gc2RXVWlLU3dnY3k1MGFXMWxjeUE5SUhRc0lITXVkbUZzZFdWeklEMGdianNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJsTG5CaGNuTmxJQ0U5UFNCMmIybGtJREFnUHlCbExuQmhjbk5sS0hNcElEb2dibVYzSUdVb2N5NXVZVzFsTENCekxuUnBiV1Z6TENCekxuWmhiSFZsY3l3Z2N5NXBiblJsY25CdmJHRjBhVzl1S1RzS2ZRcDJZWElnVG1rZ1BTQjdDaUFnSUNCbGJtRmliR1ZrT2lBaE1Td0tJQ0FnSUdacGJHVnpPaUI3ZlN3S0lDQWdJR0ZrWkRvZ1puVnVZM1JwYjI0b2N5d2daU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaVzVoWW14bFpDQWhQVDBnSVRFZ0ppWWdLSFJvYVhNdVptbHNaWE5iYzEwZ1BTQmxLVHNLSUNBZ0lIMHNDaUFnSUNCblpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1bGJtRmliR1ZrSUNFOVBTQWhNU2tnY21WMGRYSnVJSFJvYVhNdVptbHNaWE5iYzEwN0NpQWdJQ0I5TEFvZ0lDQWdjbVZ0YjNabE9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnWkdWc1pYUmxJSFJvYVhNdVptbHNaWE5iYzEwN0NpQWdJQ0I5TEFvZ0lDQWdZMnhsWVhJNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVptbHNaWE1nUFNCN2ZUc0tJQ0FnSUgwS2ZTd2dlbUVnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNc0lISWdQU0FoTVN3Z2J5QTlJREFzSUdFZ1BTQXdMQ0JzTENCaklEMGdXMTA3Q2lBZ0lDQWdJQ0FnZEdocGN5NXZibE4wWVhKMElEMGdkbTlwWkNBd0xDQjBhR2x6TG05dVRHOWhaQ0E5SUdVc0lIUm9hWE11YjI1UWNtOW5jbVZ6Y3lBOUlIUXNJSFJvYVhNdWIyNUZjbkp2Y2lBOUlHNHNJSFJvYVhNdWFYUmxiVk4wWVhKMElEMGdablZ1WTNScGIyNG9hQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmhLeXNzSUhJZ1BUMDlJQ0V4SUNZbUlHa3ViMjVUZEdGeWRDQWhQVDBnZG05cFpDQXdJQ1ltSUdrdWIyNVRkR0Z5ZENob0xDQnZMQ0JoS1N3Z2NpQTlJQ0V3T3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YVhSbGJVVnVaQ0E5SUdaMWJtTjBhVzl1S0dncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYnlzckxDQnBMbTl1VUhKdlozSmxjM01nSVQwOUlIWnZhV1FnTUNBbUppQnBMbTl1VUhKdlozSmxjM01vYUN3Z2J5d2dZU2tzSUc4Z1BUMDlJR0VnSmlZZ0tISWdQU0FoTVN3Z2FTNXZia3h2WVdRZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG05dVRHOWhaQ2dwS1RzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1sMFpXMUZjbkp2Y2lBOUlHWjFibU4wYVc5dUtHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTNXZia1Z5Y205eUlDRTlQU0IyYjJsa0lEQWdKaVlnYVM1dmJrVnljbTl5S0dncE93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWNtVnpiMngyWlZWU1RDQTlJR1oxYm1OMGFXOXVLR2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHd2dQeUJzS0dncElEb2dhRHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbk5sZEZWU1RFMXZaR2xtYVdWeUlEMGdablZ1WTNScGIyNG9hQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JDQTlJR2dzSUhSb2FYTTdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NWhaR1JJWVc1a2JHVnlJRDBnWm5WdVkzUnBiMjRvYUN3Z2RTa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWXk1d2RYTm9LR2dzSUhVcExDQjBhR2x6T3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11Y21WdGIzWmxTR0Z1Wkd4bGNpQTlJR1oxYm1OMGFXOXVLR2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQmpMbWx1WkdWNFQyWW9hQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMUlDRTlQU0F0TVNBbUppQmpMbk53YkdsalpTaDFMQ0F5S1N3Z2RHaHBjenNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbWRsZEVoaGJtUnNaWElnUFNCbWRXNWpkR2x2Ymlob0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZFNBOUlEQXNJR1FnUFNCakxteGxibWQwYURzZ2RTQThJR1E3SUhVZ0t6MGdNaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJR05iZFYwc0lHMGdQU0JqVzNVZ0t5QXhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobUxtZHNiMkpoYkNBbUppQW9aaTVzWVhOMFNXNWtaWGdnUFNBd0tTd2daaTUwWlhOMEtHZ3BLU0J5WlhSMWNtNGdiVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFwOUxDQnNlU0E5SUc1bGR5QjZZU3dnWW5RZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGJtRm5aWElnUFNCbElDRTlQU0IyYjJsa0lEQWdQeUJsSURvZ2JIa3NJSFJvYVhNdVkzSnZjM05QY21sbmFXNGdQU0FpWVc1dmJubHRiM1Z6SWl3Z2RHaHBjeTUzYVhSb1EzSmxaR1Z1ZEdsaGJITWdQU0FoTVN3Z2RHaHBjeTV3WVhSb0lEMGdJaUlzSUhSb2FYTXVjbVZ6YjNWeVkyVlFZWFJvSUQwZ0lpSXNJSFJvYVhNdWNtVnhkV1Z6ZEVobFlXUmxjaUE5SUh0OU93b2dJQ0FnZlFvZ0lDQWdiRzloWkNncElIdDlDaUFnSUNCc2IyRmtRWE41Ym1Nb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRkJ5YjIxcGMyVW9ablZ1WTNScGIyNG9hU3dnY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J1TG14dllXUW9aU3dnYVN3Z2RDd2djaWs3Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlNncElIdDlDaUFnSUNCelpYUkRjbTl6YzA5eWFXZHBiaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM0p2YzNOUGNtbG5hVzRnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBWMmwwYUVOeVpXUmxiblJwWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1M2FYUm9RM0psWkdWdWRHbGhiSE1nUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVR0YwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dGMGFDQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSU1pYTnZkWEpqWlZCaGRHZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmxjMjkxY21ObFVHRjBhQ0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlNaWEYxWlhOMFNHVmhaR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WlhGMVpYTjBTR1ZoWkdWeUlEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dkRzRnUFNCN2ZTd2dXWFFnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVcE93b2dJQ0FnZlFvZ0lDQWdiRzloWkNobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdaU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaGxJRDBnSWlJcExDQjBhR2x6TG5CaGRHZ2dJVDA5SUhadmFXUWdNQ0FtSmlBb1pTQTlJSFJvYVhNdWNHRjBhQ0FySUdVcExDQmxJRDBnZEdocGN5NXRZVzVoWjJWeUxuSmxjMjlzZG1WVlVrd29aU2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JPYVM1blpYUW9aU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdJVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJSFJvYVhNdWJXRnVZV2RsY2k1cGRHVnRVM1JoY25Rb1pTa3NJSE5sZEZScGJXVnZkWFFvS0NrOVBuc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBbUppQjBLSElwTENCMGFHbHpMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5TENBd0tTd2djanNLSUNBZ0lDQWdJQ0JwWmlBb2RHNWJaVjBnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwYmx0bFhTNXdkWE5vS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5dVRHOWhaRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5dVVISnZaM0psYzNNNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZia1Z5Y205eU9pQnBDaUFnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJ1VzJWZElEMGdXMTBzSUhSdVcyVmRMbkIxYzJnb2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2Ymt4dllXUTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOXVVSEp2WjNKbGMzTTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOXVSWEp5YjNJNklHa0tJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRzVsZHlCU1pYRjFaWE4wS0dVc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWaFpHVnljem9nYm1WM0lFaGxZV1JsY25Nb2RHaHBjeTV5WlhGMVpYTjBTR1ZoWkdWeUtTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTNKbFpHVnVkR2xoYkhNNklIUm9hWE11ZDJsMGFFTnlaV1JsYm5ScFlXeHpJRDhnSW1sdVkyeDFaR1VpSURvZ0luTmhiV1V0YjNKcFoybHVJZ29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUdabGRHTm9LRzhwTG5Sb1pXNG9LR0VwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaExuTjBZWFIxY3lBOVBUMGdNakF3SUh4OElHRXVjM1JoZEhWeklEMDlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZUzV6ZEdGMGRYTWdQVDA5SURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVHYVd4bFRHOWhaR1Z5T2lCSVZGUlFJRk4wWVhSMWN5QXdJSEpsWTJWcGRtVmtMaUlwTENCMGVYQmxiMllnVW1WaFpHRmliR1ZUZEhKbFlXMGdQaUFpZFNJZ2ZId2dZUzVpYjJSNUxtZGxkRkpsWVdSbGNpQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdZVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdkRzViWlYwc0lHTWdQU0JoTG1KdlpIa3VaMlYwVW1WaFpHVnlLQ2tzSUdnZ1BTQmhMbWhsWVdSbGNuTXVaMlYwS0NKRGIyNTBaVzUwTFV4bGJtZDBhQ0lwTENCMUlEMGdhQ0EvSUhCaGNuTmxTVzUwS0dncElEb2dNQ3dnWkNBOUlIVWdJVDA5SURBc0lHWWdQU0F3TENCdElEMGdibVYzSUZKbFlXUmhZbXhsVTNSeVpXRnRLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRHRnlkQ0FvZUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMktDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIWW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCakxuSmxZV1FvS1M1MGFHVnVLQ2g3SUdSdmJtVTZJR2NnTENCMllXeDFaVG9nY0NBZ2ZTazlQbnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWnlrZ2VDNWpiRzl6WlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtSUNzOUlIQXVZbmwwWlV4bGJtZDBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0J1WlhjZ1VISnZaM0psYzNORmRtVnVkQ2dpY0hKdlozSmxjM01pTENCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlc1bmRHaERiMjF3ZFhSaFlteGxPaUJrTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiRzloWkdWa09pQm1MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHOTBZV3c2SUhVS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBc0lHSWdQU0JzTG14bGJtZDBhRHNnZVNBOElHSTdJSGtyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FTQTlJR3hiZVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JCTG05dVVISnZaM0psYzNNZ0ppWWdRUzV2YmxCeWIyZHlaWE56S0Y4cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGd1Wlc1eGRXVjFaU2h3S1N3Z2RpZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRkpsYzNCdmJuTmxLRzBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2RHaHliM2NnUlhKeWIzSW9ZR1psZEdOb0lHWnZjaUFpSkh0aExuVnliSDBpSUhKbGMzQnZibVJsWkNCM2FYUm9JQ1I3WVM1emRHRjBkWE45T2lBa2UyRXVjM1JoZEhWelZHVjRkSDFnS1RzS0lDQWdJQ0FnSUNCOUtTNTBhR1Z1S0NoaEtUMCtld29nSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvZEdocGN5NXlaWE53YjI1elpWUjVjR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlZWEp5WVhsaWRXWm1aWElpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaExtRnljbUY1UW5WbVptVnlLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSmliRzlpSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lTNWliRzlpS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0prYjJOMWJXVnVkQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFdWRHVjRkQ2dwTG5Sb1pXNG9LR3dwUFQ1dVpYY2dSRTlOVUdGeWMyVnlLQ2t1Y0dGeWMyVkdjbTl0VTNSeWFXNW5LR3dzSUhSb2FYTXViV2x0WlZSNWNHVXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0ltcHpiMjRpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaExtcHpiMjRvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFdWRHVjRkQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU2t1ZEdobGJpZ29ZU2s5UG5zS0lDQWdJQ0FnSUNBZ0lDQWdUbWt1WVdSa0tHVXNJR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUnVXMlZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2RHNWJaVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QTlJREFzSUdnZ1BTQnNMbXhsYm1kMGFEc2dZeUE4SUdnN0lHTXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR3hiWTEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMUxtOXVURzloWkNBbUppQjFMbTl1VEc5aFpDaGhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHBMbU5oZEdOb0tDaGhLVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUnVXMlZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkNBOVBUMGdkbTlwWkNBd0tTQjBhSEp2ZHlCMGFHbHpMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwTENCaE93b2dJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdkRzViWlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZeUE5SURBc0lHZ2dQU0JzTG14bGJtZDBhRHNnWXlBOElHZzdJR01yS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUd4YlkxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFMbTl1UlhKeWIzSWdKaVlnZFM1dmJrVnljbTl5S0dFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldGdVlXZGxjaTVwZEdWdFJYSnliM0lvWlNrN0NpQWdJQ0FnSUNBZ2ZTa3VabWx1WVd4c2VTZ29LVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtUc0tJQ0FnSUgwS0lDQWdJSE5sZEZKbGMzQnZibk5sVkhsd1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtVnpjRzl1YzJWVWVYQmxJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFMXBiV1ZVZVhCbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXMWxWSGx3WlNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q24wc0lHTjVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeXdnYnlBOUlHNWxkeUJaZENoMGFHbHpMbTFoYm1GblpYSXBPd29nSUNBZ0lDQWdJRzh1YzJWMFVHRjBhQ2gwYUdsekxuQmhkR2dwTENCdkxuTmxkRkpsY1hWbGMzUklaV0ZrWlhJb2RHaHBjeTV5WlhGMVpYTjBTR1ZoWkdWeUtTd2dieTV6WlhSWGFYUm9RM0psWkdWdWRHbGhiSE1vZEdocGN5NTNhWFJvUTNKbFpHVnVkR2xoYkhNcExDQnZMbXh2WVdRb1pTd2dablZ1WTNScGIyNG9ZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENoeUxuQmhjbk5sS0VwVFQwNHVjR0Z5YzJVb1lTa3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0EvSUdrb2JDa2dPaUJqYjI1emIyeGxMbVZ5Y205eUtHd3BMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3Z2Jpd2dhU2s3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEd2daUzVzWlc1bmRHZzdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdUSEl1Y0dGeWMyVW9aVnR1WFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1Y0hWemFDaHBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFE3Q2lBZ0lDQjlDbjBzSUdoNUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUZ0ZExDQmhJRDBnYm1WM0lIWmhMQ0JzSUQwZ2JtVjNJRmwwS0hSb2FYTXViV0Z1WVdkbGNpazdDaUFnSUNBZ0lDQWdiQzV6WlhSUVlYUm9LSFJvYVhNdWNHRjBhQ2tzSUd3dWMyVjBVbVZ6Y0c5dWMyVlVlWEJsS0NKaGNuSmhlV0oxWm1abGNpSXBMQ0JzTG5ObGRGSmxjWFZsYzNSSVpXRmtaWElvZEdocGN5NXlaWEYxWlhOMFNHVmhaR1Z5S1N3Z2JDNXpaWFJYYVhSb1EzSmxaR1Z1ZEdsaGJITW9jaTUzYVhSb1EzSmxaR1Z1ZEdsaGJITXBPd29nSUNBZ0lDQWdJR3hsZENCaklEMGdNRHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJvS0hVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkM1c2IyRmtLR1ZiZFYwc0lHWjFibU4wYVc5dUtHUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdjaTV3WVhKelpTaGtMQ0FoTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdlczVmRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCbUxuZHBaSFJvTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ1ppNW9aV2xuYUhRc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5YldGME9pQm1MbVp2Y20xaGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YVhCdFlYQnpPaUJtTG0xcGNHMWhjSE1LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzSUdNZ0t6MGdNU3dnWXlBOVBUMGdOaUFtSmlBb1ppNXRhWEJ0WVhCRGIzVnVkQ0E5UFQwZ01TQW1KaUFvWVM1dGFXNUdhV3gwWlhJZ1BTQjBkQ2tzSUdFdWFXMWhaMlVnUFNCdkxDQmhMbVp2Y20xaGRDQTlJR1l1Wm05eWJXRjBMQ0JoTG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhRZ0ppWWdkQ2hoS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzSUc0c0lHa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hsS1NrZ1ptOXlLR3hsZENCMUlEMGdNQ3dnWkNBOUlHVXViR1Z1WjNSb095QjFJRHdnWkRzZ0t5dDFLV2dvZFNrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JzTG14dllXUW9aU3dnWm5WdVkzUnBiMjRvZFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJSEl1Y0dGeWMyVW9kU3dnSVRBcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pDNXBjME4xWW1WdFlYQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdaQzV0YVhCdFlYQnpMbXhsYm1kMGFDQXZJR1F1Yldsd2JXRndRMjkxYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUcwZ1BTQXdPeUJ0SUR3Z1pqc2diU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZXMjFkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGFYQnRZWEJ6T2lCYlhRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNElEMGdNRHNnZUNBOElHUXViV2x3YldGd1EyOTFiblE3SUhnckt5bHZXMjFkTG0xcGNHMWhjSE11Y0hWemFDaGtMbTFwY0cxaGNITmJiU0FxSUdRdWJXbHdiV0Z3UTI5MWJuUWdLeUI0WFNrc0lHOWJiVjB1Wm05eWJXRjBJRDBnWkM1bWIzSnRZWFFzSUc5YmJWMHVkMmxrZEdnZ1BTQmtMbmRwWkhSb0xDQnZXMjFkTG1obGFXZG9kQ0E5SUdRdWFHVnBaMmgwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVM1cGJXRm5aU0E5SUc4N0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQmhMbWx0WVdkbExuZHBaSFJvSUQwZ1pDNTNhV1IwYUN3Z1lTNXBiV0ZuWlM1b1pXbG5hSFFnUFNCa0xtaGxhV2RvZEN3Z1lTNXRhWEJ0WVhCeklEMGdaQzV0YVhCdFlYQnpPd29nSUNBZ0lDQWdJQ0FnSUNCa0xtMXBjRzFoY0VOdmRXNTBJRDA5UFNBeElDWW1JQ2hoTG0xcGJrWnBiSFJsY2lBOUlIUjBLU3dnWVM1bWIzSnRZWFFnUFNCa0xtWnZjbTFoZEN3Z1lTNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjBJQ1ltSUhRb1lTazdDaUFnSUNBZ0lDQWdmU3dnYml3Z2FTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRTdDaUFnSUNCOUNuMHNJRkp5SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNHRjBhQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaGxJRDBnZEdocGN5NXdZWFJvSUNzZ1pTa3NJR1VnUFNCMGFHbHpMbTFoYm1GblpYSXVjbVZ6YjJ4MlpWVlNUQ2hsS1RzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXNJRzhnUFNCT2FTNW5aWFFvWlNrN0NpQWdJQ0FnSUNBZ2FXWWdLRzhnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUhJdWJXRnVZV2RsY2k1cGRHVnRVM1JoY25Rb1pTa3NJSE5sZEZScGJXVnZkWFFvWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFFnSmlZZ2RDaHZLU3dnY2k1dFlXNWhaMlZ5TG1sMFpXMUZibVFvWlNrN0NpQWdJQ0FnSUNBZ2ZTd2dNQ2tzSUc4N0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCeGN5Z2lhVzFuSWlrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2JDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FDZ3BMQ0JPYVM1aFpHUW9aU3dnZEdocGN5a3NJSFFnSmlZZ2RDaDBhR2x6S1N3Z2NpNXRZVzVoWjJWeUxtbDBaVzFGYm1Rb1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR01vZFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JvS0Nrc0lHa2dKaVlnYVNoMUtTd2djaTV0WVc1aFoyVnlMbWwwWlcxRmNuSnZjaWhsS1N3Z2NpNXRZVzVoWjJWeUxtbDBaVzFGYm1Rb1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2dvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR0V1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaWJHOWhaQ0lzSUd3c0lDRXhLU3dnWVM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSmxjbkp2Y2lJc0lHTXNJQ0V4S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWJHOWhaQ0lzSUd3c0lDRXhLU3dnWVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKbGNuSnZjaUlzSUdNc0lDRXhLU3dnWlM1emRXSnpkSElvTUN3Z05Ta2dJVDA5SUNKa1lYUmhPaUlnSmlZZ2RHaHBjeTVqY205emMwOXlhV2RwYmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hoTG1OeWIzTnpUM0pwWjJsdUlEMGdkR2hwY3k1amNtOXpjMDl5YVdkcGJpa3NJSEl1YldGdVlXZGxjaTVwZEdWdFUzUmhjblFvWlNrc0lHRXVjM0pqSUQwZ1pTd2dZVHNLSUNBZ0lIMEtmU3dnUm1nZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdKMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBPd29nSUNBZ2ZRb2dJQ0FnYkc5aFpDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ2Eya3NJRzhnUFNCdVpYY2dVbklvZEdocGN5NXRZVzVoWjJWeUtUc0tJQ0FnSUNBZ0lDQnZMbk5sZEVOeWIzTnpUM0pwWjJsdUtIUm9hWE11WTNKdmMzTlBjbWxuYVc0cExDQnZMbk5sZEZCaGRHZ29kR2hwY3k1d1lYUm9LVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJREE3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYkNoaktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc4dWJHOWhaQ2hsVzJOZExDQm1kVzVqZEdsdmJpaG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5TG1sdFlXZGxjMXRqWFNBOUlHZ3NJR0VyS3l3Z1lTQTlQVDBnTmlBbUppQW9jaTV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwSUNZbUlIUW9jaWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQ0IyYjJsa0lEQXNJR2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdPeUJqSUR3Z1pTNXNaVzVuZEdnN0lDc3JZeWxzS0dNcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeU93b2dJQ0FnZlFwOUxDQk9hQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE1zSUc4Z1BTQnVaWGNnY1c0c0lHRWdQU0J1WlhjZ1dYUW9kR2hwY3k1dFlXNWhaMlZ5S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVM1elpYUlNaWE53YjI1elpWUjVjR1VvSW1GeWNtRjVZblZtWm1WeUlpa3NJR0V1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWgwYUdsekxuSmxjWFZsYzNSSVpXRmtaWElwTENCaExuTmxkRkJoZEdnb2RHaHBjeTV3WVhSb0tTd2dZUzV6WlhSWGFYUm9RM0psWkdWdWRHbGhiSE1vY2k1M2FYUm9RM0psWkdWdWRHbGhiSE1wTENCaExteHZZV1FvWlN3Z1puVnVZM1JwYjI0b2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUhJdWNHRnljMlVvYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0ZqSUh4OElDaGpMbWx0WVdkbElDRTlQU0IyYjJsa0lEQWdQeUJ2TG1sdFlXZGxJRDBnWXk1cGJXRm5aU0E2SUdNdVpHRjBZU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbWx0WVdkbExuZHBaSFJvSUQwZ1l5NTNhV1IwYUN3Z2J5NXBiV0ZuWlM1b1pXbG5hSFFnUFNCakxtaGxhV2RvZEN3Z2J5NXBiV0ZuWlM1a1lYUmhJRDBnWXk1a1lYUmhLU3dnYnk1M2NtRndVeUE5SUdNdWQzSmhjRk1nSVQwOUlIWnZhV1FnTUNBL0lHTXVkM0poY0ZNZ09pQjJkQ3dnYnk1M2NtRndWQ0E5SUdNdWQzSmhjRlFnSVQwOUlIWnZhV1FnTUNBL0lHTXVkM0poY0ZRZ09pQjJkQ3dnYnk1dFlXZEdhV3gwWlhJZ1BTQmpMbTFoWjBacGJIUmxjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z1l5NXRZV2RHYVd4MFpYSWdPaUIwZEN3Z2J5NXRhVzVHYVd4MFpYSWdQU0JqTG0xcGJrWnBiSFJsY2lBaFBUMGdkbTlwWkNBd0lEOGdZeTV0YVc1R2FXeDBaWElnT2lCMGRDd2dieTVoYm1semIzUnliM0I1SUQwZ1l5NWhibWx6YjNSeWIzQjVJQ0U5UFNCMmIybGtJREFnUHlCakxtRnVhWE52ZEhKdmNIa2dPaUF4TENCakxtVnVZMjlrYVc1bklDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVpXNWpiMlJwYm1jZ1BTQmpMbVZ1WTI5a2FXNW5LU3dnWXk1bWJHbHdXU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbVpzYVhCWklEMGdZeTVtYkdsd1dTa3NJR011Wm05eWJXRjBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVabTl5YldGMElEMGdZeTVtYjNKdFlYUXBMQ0JqTG5SNWNHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NTBlWEJsSUQwZ1l5NTBlWEJsS1N3Z1l5NXRhWEJ0WVhCeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWJXbHdiV0Z3Y3lBOUlHTXViV2x3YldGd2N5d2dieTV0YVc1R2FXeDBaWElnUFNCVmFTa3NJR011Yldsd2JXRndRMjkxYm5RZ1BUMDlJREVnSmlZZ0tHOHViV2x1Um1sc2RHVnlJRDBnZEhRcExDQmpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlHTXVaMlZ1WlhKaGRHVk5hWEJ0WVhCektTd2dieTV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwSUNZbUlIUW9ieXdnWXlrcE93b2dJQ0FnSUNBZ0lIMHNJRzRzSUdrcExDQnZPd29nSUNBZ2ZRcDlMQ0JDYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzYjJGa0tHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCdmRDd2dieUE5SUc1bGR5QlNjaWgwYUdsekxtMWhibUZuWlhJcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdkxuTmxkRU55YjNOelQzSnBaMmx1S0hSb2FYTXVZM0p2YzNOUGNtbG5hVzRwTENCdkxuTmxkRkJoZEdnb2RHaHBjeTV3WVhSb0tTd2dieTVzYjJGa0tHVXNJR1oxYm1OMGFXOXVLR0VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjaTVwYldGblpTQTlJR0VzSUhJdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z2RDQWhQVDBnZG05cFpDQXdJQ1ltSUhRb2NpazdDaUFnSUNBZ0lDQWdmU3dnYml3Z2FTa3NJSEk3Q2lBZ0lDQjlDbjBzSUVKMElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwSUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVEdsbmFIUWlMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0dVcExDQjBhR2x6TG1sdWRHVnVjMmwwZVNBOUlIUTdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZTMwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTXVhVzUwWlc1emFYUjVJRDBnWlM1cGJuUmxibk5wZEhrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG05aWFtVmpkQzVqYjJ4dmNpQTlJSFJvYVhNdVkyOXNiM0l1WjJWMFNHVjRLQ2tzSUhRdWIySnFaV04wTG1sdWRHVnVjMmwwZVNBOUlIUm9hWE11YVc1MFpXNXphWFI1TENCMGFHbHpMbWR5YjNWdVpFTnZiRzl5SUNFOVBTQjJiMmxrSURBZ0ppWWdLSFF1YjJKcVpXTjBMbWR5YjNWdVpFTnZiRzl5SUQwZ2RHaHBjeTVuY205MWJtUkRiMnh2Y2k1blpYUklaWGdvS1Nrc0lIUm9hWE11WkdsemRHRnVZMlVnSVQwOUlIWnZhV1FnTUNBbUppQW9kQzV2WW1wbFkzUXVaR2x6ZEdGdVkyVWdQU0IwYUdsekxtUnBjM1JoYm1ObEtTd2dkR2hwY3k1aGJtZHNaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBMbTlpYW1WamRDNWhibWRzWlNBOUlIUm9hWE11WVc1bmJHVXBMQ0IwYUdsekxtUmxZMkY1SUNFOVBTQjJiMmxrSURBZ0ppWWdLSFF1YjJKcVpXTjBMbVJsWTJGNUlEMGdkR2hwY3k1a1pXTmhlU2tzSUhSb2FYTXVjR1Z1ZFcxaWNtRWdJVDA5SUhadmFXUWdNQ0FtSmlBb2RDNXZZbXBsWTNRdWNHVnVkVzFpY21FZ1BTQjBhR2x6TG5CbGJuVnRZbkpoS1N3Z2RHaHBjeTV6YUdGa2IzY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2RDNXZZbXBsWTNRdWMyaGhaRzkzSUQwZ2RHaHBjeTV6YUdGa2IzY3VkRzlLVTA5T0tDa3BMQ0IwT3dvZ0lDQWdmUXA5T3dwQ2RDNXdjbTkwYjNSNWNHVXVhWE5NYVdkb2RDQTlJQ0V3T3dwMllYSWdWV0VnUFNCamJHRnpjeUJsZUhSbGJtUnpJRUowSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUc0cE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pJWlcxcGMzQm9aWEpsVEdsbmFIUWlMQ0IwYUdsekxuQnZjMmwwYVc5dUxtTnZjSGtvVG1VdVJHVm1ZWFZzZEZWd0tTd2dkR2hwY3k1MWNHUmhkR1ZOWVhSeWFYZ29LU3dnZEdocGN5NW5jbTkxYm1SRGIyeHZjaUE5SUc1bGR5QmhaU2gwS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCQ2RDNXdjbTkwYjNSNWNHVXVZMjl3ZVM1allXeHNLSFJvYVhNc0lHVXBMQ0IwYUdsekxtZHliM1Z1WkVOdmJHOXlMbU52Y0hrb1pTNW5jbTkxYm1SRGIyeHZjaWtzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbFZoTG5CeWIzUnZkSGx3WlM1cGMwaGxiV2x6Y0dobGNtVk1hV2RvZENBOUlDRXdPd3AyWVhJZ1gyTWdQU0J1WlhjZ2NHVXNJRTFqSUQwZ2JtVjNJRTBzSUdKaklEMGdibVYzSUUwc0lHMXZJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpZVzFsY21FZ1BTQmxMQ0IwYUdsekxtSnBZWE1nUFNBd0xDQjBhR2x6TG01dmNtMWhiRUpwWVhNZ1BTQXdMQ0IwYUdsekxuSmhaR2wxY3lBOUlERXNJSFJvYVhNdVlteDFjbE5oYlhCc1pYTWdQU0E0TENCMGFHbHpMbTFoY0ZOcGVtVWdQU0J1WlhjZ1dDZzFNVElzSURVeE1pa3NJSFJvYVhNdWJXRndJRDBnYm5Wc2JDd2dkR2hwY3k1dFlYQlFZWE56SUQwZ2JuVnNiQ3dnZEdocGN5NXRZWFJ5YVhnZ1BTQnVaWGNnY0dVc0lIUm9hWE11WVhWMGIxVndaR0YwWlNBOUlDRXdMQ0IwYUdsekxtNWxaV1J6VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11WDJaeWRYTjBkVzBnUFNCdVpYY2dSSElzSUhSb2FYTXVYMlp5WVcxbFJYaDBaVzUwY3lBOUlHNWxkeUJZS0RFc0lERXBMQ0IwYUdsekxsOTJhV1YzY0c5eWRFTnZkVzUwSUQwZ01Td2dkR2hwY3k1ZmRtbGxkM0J2Y25SeklEMGdXd29nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dWbVVvTUN3Z01Dd2dNU3dnTVNrS0lDQWdJQ0FnSUNCZE93b2dJQ0FnZlFvZ0lDQWdaMlYwVm1sbGQzQnZjblJEYjNWdWRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmRtbGxkM0J2Y25SRGIzVnVkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFWnlkWE4wZFcwb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJaeWRYTjBkVzA3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1ZOWVhSeWFXTmxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oYldWeVlTd2diaUE5SUhSb2FYTXViV0YwY21sNE93b2dJQ0FnSUNBZ0lFMWpMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmlobExtMWhkSEpwZUZkdmNteGtLU3dnZEM1d2IzTnBkR2x2Ymk1amIzQjVLRTFqS1N3Z1ltTXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0dVdWRHRnlaMlYwTG0xaGRISnBlRmR2Y214a0tTd2dkQzVzYjI5clFYUW9ZbU1wTENCMExuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDa3NJRjlqTG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vZEM1d2NtOXFaV04wYVc5dVRXRjBjbWw0TENCMExtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTa3NJSFJvYVhNdVgyWnlkWE4wZFcwdWMyVjBSbkp2YlZCeWIycGxZM1JwYjI1TllYUnlhWGdvWDJNcExDQnVMbk5sZENndU5Td2dNQ3dnTUN3Z0xqVXNJREFzSUM0MUxDQXdMQ0F1TlN3Z01Dd2dNQ3dnTGpVc0lDNDFMQ0F3TENBd0xDQXdMQ0F4S1N3Z2JpNXRkV3gwYVhCc2VTaDBMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BMQ0J1TG0xMWJIUnBjR3g1S0hRdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtUc0tJQ0FnSUgwS0lDQWdJR2RsZEZacFpYZHdiM0owS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZG1sbGQzQnZjblJ6VzJWZE93b2dJQ0FnZlFvZ0lDQWdaMlYwUm5KaGJXVkZlSFJsYm5SektDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bWNtRnRaVVY0ZEdWdWRITTdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0Z3SUNZbUlIUm9hWE11YldGd0xtUnBjM0J2YzJVb0tTd2dkR2hwY3k1dFlYQlFZWE56SUNZbUlIUm9hWE11YldGd1VHRnpjeTVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpZVzFsY21FZ1BTQmxMbU5oYldWeVlTNWpiRzl1WlNncExDQjBhR2x6TG1KcFlYTWdQU0JsTG1KcFlYTXNJSFJvYVhNdWNtRmthWFZ6SUQwZ1pTNXlZV1JwZFhNc0lIUm9hWE11YldGd1UybDZaUzVqYjNCNUtHVXViV0Z3VTJsNlpTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2UzMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WW1saGN5QWhQVDBnTUNBbUppQW9aUzVpYVdGeklEMGdkR2hwY3k1aWFXRnpLU3dnZEdocGN5NXViM0p0WVd4Q2FXRnpJQ0U5UFNBd0lDWW1JQ2hsTG01dmNtMWhiRUpwWVhNZ1BTQjBhR2x6TG01dmNtMWhiRUpwWVhNcExDQjBhR2x6TG5KaFpHbDFjeUFoUFQwZ01TQW1KaUFvWlM1eVlXUnBkWE1nUFNCMGFHbHpMbkpoWkdsMWN5a3NJQ2gwYUdsekxtMWhjRk5wZW1VdWVDQWhQVDBnTlRFeUlIeDhJSFJvYVhNdWJXRndVMmw2WlM1NUlDRTlQU0ExTVRJcElDWW1JQ2hsTG0xaGNGTnBlbVVnUFNCMGFHbHpMbTFoY0ZOcGVtVXVkRzlCY25KaGVTZ3BLU3dnWlM1allXMWxjbUVnUFNCMGFHbHpMbU5oYldWeVlTNTBiMHBUVDA0b0lURXBMbTlpYW1WamRDd2daR1ZzWlhSbElHVXVZMkZ0WlhKaExtMWhkSEpwZUN3Z1pUc0tJQ0FnSUgwS2ZTd2dUMkVnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzF2SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lIVjBLRFV3TENBeExDQXVOU3dnTlRBd0tTazdDaUFnSUNBZ0lDQWdkR2hwY3k1bWIyTjFjeUE5SURFN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWTllYUnlhV05sY3lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaGJXVnlZU3dnYmlBOUlHUnlJQ29nTWlBcUlHVXVZVzVuYkdVZ0tpQjBhR2x6TG1adlkzVnpMQ0JwSUQwZ2RHaHBjeTV0WVhCVGFYcGxMbmRwWkhSb0lDOGdkR2hwY3k1dFlYQlRhWHBsTG1obGFXZG9kQ3dnY2lBOUlHVXVaR2x6ZEdGdVkyVWdmSHdnZEM1bVlYSTdDaUFnSUNBZ0lDQWdLRzRnSVQwOUlIUXVabTkySUh4OElHa2dJVDA5SUhRdVlYTndaV04wSUh4OElISWdJVDA5SUhRdVptRnlLU0FtSmlBb2RDNW1iM1lnUFNCdUxDQjBMbUZ6Y0dWamRDQTlJR2tzSUhRdVptRnlJRDBnY2l3Z2RDNTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrcExDQnpkWEJsY2k1MWNHUmhkR1ZOWVhSeWFXTmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtWnZZM1Z6SUQwZ1pTNW1iMk4xY3l3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLVDJFdWNISnZkRzkwZVhCbExtbHpVM0J2ZEV4cFoyaDBVMmhoWkc5M0lEMGdJVEE3Q25aaGNpQklZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaUE5SURBc0lHa2dQU0JOWVhSb0xsQkpJQzhnTXl3Z2NpQTlJREFzSUc4Z1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVM0J2ZEV4cFoyaDBJaXdnZEdocGN5NXdiM05wZEdsdmJpNWpiM0I1S0U1bExrUmxabUYxYkhSVmNDa3NJSFJvYVhNdWRYQmtZWFJsVFdGMGNtbDRLQ2tzSUhSb2FYTXVkR0Z5WjJWMElEMGdibVYzSUU1bExDQjBhR2x6TG1ScGMzUmhibU5sSUQwZ2Jpd2dkR2hwY3k1aGJtZHNaU0E5SUdrc0lIUm9hWE11Y0dWdWRXMWljbUVnUFNCeUxDQjBhR2x6TG1SbFkyRjVJRDBnYnl3Z2RHaHBjeTV6YUdGa2IzY2dQU0J1WlhjZ1QyRTdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2NHOTNaWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhVzUwWlc1emFYUjVJQ29nVFdGMGFDNVFTVHNLSUNBZ0lIMEtJQ0FnSUhObGRDQndiM2RsY2lobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1cGJuUmxibk5wZEhrZ1BTQmxJQzhnVFdGMGFDNVFTVHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6YUdGa2IzY3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WkdsemRHRnVZMlVnUFNCbExtUnBjM1JoYm1ObExDQjBhR2x6TG1GdVoyeGxJRDBnWlM1aGJtZHNaU3dnZEdocGN5NXdaVzUxYldKeVlTQTlJR1V1Y0dWdWRXMWljbUVzSUhSb2FYTXVaR1ZqWVhrZ1BTQmxMbVJsWTJGNUxDQjBhR2x6TG5SaGNtZGxkQ0E5SUdVdWRHRnlaMlYwTG1Oc2IyNWxLQ2tzSUhSb2FYTXVjMmhoWkc5M0lEMGdaUzV6YUdGa2IzY3VZMnh2Ym1Vb0tTd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1NHRXVjSEp2ZEc5MGVYQmxMbWx6VTNCdmRFeHBaMmgwSUQwZ0lUQTdDblpoY2lCM1l5QTlJRzVsZHlCd1pTd2dibklnUFNCdVpYY2dUU3dnYW04Z1BTQnVaWGNnVFN3Z2EyRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHMXZJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUhWMEtEa3dMQ0F4TENBdU5Td2dOVEF3S1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWm5KaGJXVkZlSFJsYm5SeklEMGdibVYzSUZnb05Dd2dNaWtzSUhSb2FYTXVYM1pwWlhkd2IzSjBRMjkxYm5RZ1BTQTJMQ0IwYUdsekxsOTJhV1YzY0c5eWRITWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJXWlNneUxDQXhMQ0F4TENBeEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lGWmxLREFzSURFc0lERXNJREVwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVm1Vb015d2dNU3dnTVN3Z01Ta3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QldaU2d4TENBeExDQXhMQ0F4S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZabEtETXNJREFzSURFc0lERXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dWbVVvTVN3Z01Dd2dNU3dnTVNrS0lDQWdJQ0FnSUNCZExDQjBhR2x6TGw5amRXSmxSR2x5WldOMGFXOXVjeUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUUwb01Td2dNQ3dnTUNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCTktDMHhMQ0F3TENBd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9NQ3dnTUN3Z01Ta3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5Qk5LREFzSURBc0lDMHhLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRTBvTUN3Z01Td2dNQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJOS0RBc0lDMHhMQ0F3S1FvZ0lDQWdJQ0FnSUYwc0lIUm9hWE11WDJOMVltVlZjSE1nUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCTktEQXNJREVzSURBcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1RTZ3dMQ0F4TENBd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9NQ3dnTVN3Z01Da3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5Qk5LREFzSURFc0lEQXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dUU2d3TENBd0xDQXhLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRTBvTUN3Z01Dd2dMVEVwQ2lBZ0lDQWdJQ0FnWFRzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxaGRISnBZMlZ6S0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU5oYldWeVlTd2dhU0E5SUhSb2FYTXViV0YwY21sNExDQnlJRDBnWlM1a2FYTjBZVzVqWlNCOGZDQnVMbVpoY2pzS0lDQWdJQ0FnSUNCeUlDRTlQU0J1TG1aaGNpQW1KaUFvYmk1bVlYSWdQU0J5TENCdUxuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1Nrc0lHNXlMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmlobExtMWhkSEpwZUZkdmNteGtLU3dnYmk1d2IzTnBkR2x2Ymk1amIzQjVLRzV5S1N3Z2FtOHVZMjl3ZVNodUxuQnZjMmwwYVc5dUtTd2dhbTh1WVdSa0tIUm9hWE11WDJOMVltVkVhWEpsWTNScGIyNXpXM1JkS1N3Z2JpNTFjQzVqYjNCNUtIUm9hWE11WDJOMVltVlZjSE5iZEYwcExDQnVMbXh2YjJ0QmRDaHFieWtzSUc0dWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb0tTd2dhUzV0WVd0bFZISmhibk5zWVhScGIyNG9MVzV5TG5nc0lDMXVjaTU1TENBdGJuSXVlaWtzSUhkakxtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb2JpNXdjbTlxWldOMGFXOXVUV0YwY21sNExDQnVMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaU2tzSUhSb2FYTXVYMlp5ZFhOMGRXMHVjMlYwUm5KdmJWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb2QyTXBPd29nSUNBZ2ZRcDlPd3ByWVM1d2NtOTBiM1I1Y0dVdWFYTlFiMmx1ZEV4cFoyaDBVMmhoWkc5M0lEMGdJVEE3Q25aaGNpQkhZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaUE5SURBc0lHa2dQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVUc5cGJuUk1hV2RvZENJc0lIUm9hWE11WkdsemRHRnVZMlVnUFNCdUxDQjBhR2x6TG1SbFkyRjVJRDBnYVN3Z2RHaHBjeTV6YUdGa2IzY2dQU0J1WlhjZ2EyRTdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2NHOTNaWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhVzUwWlc1emFYUjVJQ29nTkNBcUlFMWhkR2d1VUVrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnY0c5M1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhVzUwWlc1emFYUjVJRDBnWlNBdklDZzBJQ29nVFdGMGFDNVFTU2s3Q2lBZ0lDQjlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YzJoaFpHOTNMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1ScGMzUmhibU5sSUQwZ1pTNWthWE4wWVc1alpTd2dkR2hwY3k1a1pXTmhlU0E5SUdVdVpHVmpZWGtzSUhSb2FYTXVjMmhoWkc5M0lEMGdaUzV6YUdGa2IzY3VZMnh2Ym1Vb0tTd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1IyRXVjSEp2ZEc5MGVYQmxMbWx6VUc5cGJuUk1hV2RvZENBOUlDRXdPd3AyWVhJZ1ZtRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHMXZJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUVaeUtDMDFMQ0ExTENBMUxDQXROU3dnTGpVc0lEVXdNQ2twT3dvZ0lDQWdmUXA5T3dwV1lTNXdjbTkwYjNSNWNHVXVhWE5FYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M0lEMGdJVEE3Q25aaGNpQlhZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrUnBjbVZqZEdsdmJtRnNUR2xuYUhRaUxDQjBhR2x6TG5CdmMybDBhVzl1TG1OdmNIa29UbVV1UkdWbVlYVnNkRlZ3S1N3Z2RHaHBjeTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2dkR2hwY3k1MFlYSm5aWFFnUFNCdVpYY2dUbVVzSUhSb2FYTXVjMmhoWkc5M0lEMGdibVYzSUZaaE93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuTm9ZV1J2ZHk1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NTBZWEpuWlhRZ1BTQmxMblJoY21kbGRDNWpiRzl1WlNncExDQjBhR2x6TG5Ob1lXUnZkeUE5SUdVdWMyaGhaRzkzTG1Oc2IyNWxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbGRoTG5CeWIzUnZkSGx3WlM1cGMwUnBjbVZqZEdsdmJtRnNUR2xuYUhRZ1BTQWhNRHNLZG1GeUlIRmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVFXMWlhV1Z1ZEV4cFoyaDBJanNLSUNBZ0lIMEtmVHNLY1dFdWNISnZkRzkwZVhCbExtbHpRVzFpYVdWdWRFeHBaMmgwSUQwZ0lUQTdDblpoY2lCWVlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FuUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpQTlJREV3TENCcElEMGdNVEFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pTWldOMFFYSmxZVXhwWjJoMElpd2dkR2hwY3k1M2FXUjBhQ0E5SUc0c0lIUm9hWE11YUdWcFoyaDBJRDBnYVRzS0lDQWdJSDBLSUNBZ0lHZGxkQ0J3YjNkbGNpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJuUmxibk5wZEhrZ0tpQjBhR2x6TG5kcFpIUm9JQ29nZEdocGN5NW9aV2xuYUhRZ0tpQk5ZWFJvTGxCSk93b2dJQ0FnZlFvZ0lDQWdjMlYwSUhCdmQyVnlLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWx1ZEdWdWMybDBlU0E5SUdVZ0x5QW9kR2hwY3k1M2FXUjBhQ0FxSUhSb2FYTXVhR1ZwWjJoMElDb2dUV0YwYUM1UVNTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTUzYVdSMGFDQTlJR1V1ZDJsa2RHZ3NJSFJvYVhNdWFHVnBaMmgwSUQwZ1pTNW9aV2xuYUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG05aWFtVmpkQzUzYVdSMGFDQTlJSFJvYVhNdWQybGtkR2dzSUhRdWIySnFaV04wTG1obGFXZG9kQ0E5SUhSb2FYTXVhR1ZwWjJoMExDQjBPd29nSUNBZ2ZRcDlPd3BZWVM1d2NtOTBiM1I1Y0dVdWFYTlNaV04wUVhKbFlVeHBaMmgwSUQwZ0lUQTdDblpoY2lCS1lTQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdkR2hwY3k1amIyVm1abWxqYVdWdWRITWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdVZ1BTQXdPeUJsSUR3Z09Uc2daU3NyS1hSb2FYTXVZMjlsWm1acFkybGxiblJ6TG5CMWMyZ29ibVYzSUUwcE93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dPVHNnZENzcktYUm9hWE11WTI5bFptWnBZMmxsYm5SelczUmRMbU52Y0hrb1pWdDBYU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjZaWEp2S0NrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pTQTlJREE3SUdVZ1BDQTVPeUJsS3lzcGRHaHBjeTVqYjJWbVptbGphV1Z1ZEhOYlpWMHVjMlYwS0RBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwUVhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1NExDQnBJRDBnWlM1NUxDQnlJRDBnWlM1NkxDQnZJRDBnZEdocGN5NWpiMlZtWm1samFXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1WTI5d2VTaHZXekJkS1M1dGRXeDBhWEJzZVZOallXeGhjaWd1TWpneU1EazFLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzeFhTd2dMalE0T0RZd015QXFJR2twTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2lodld6SmRMQ0F1TkRnNE5qQXpJQ29nY2lrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHOWJNMTBzSUM0ME9EZzJNRE1nS2lCdUtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXMwWFN3Z01TNHdPVEkxTkRnZ0tpQW9iaUFxSUdrcEtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXMxWFN3Z01TNHdPVEkxTkRnZ0tpQW9hU0FxSUhJcEtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXMyWFN3Z0xqTXhOVE01TWlBcUlDZ3pJQ29nY2lBcUlISWdMU0F4S1Nrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHOWJOMTBzSURFdU1Ea3lOVFE0SUNvZ0tHNGdLaUJ5S1Nrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHOWJPRjBzSUM0MU5EWXlOelFnS2lBb2JpQXFJRzRnTFNCcElDb2dhU2twTENCME93b2dJQ0FnZlFvZ0lDQWdaMlYwU1hKeVlXUnBZVzVqWlVGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdWVDd2dhU0E5SUdVdWVTd2djaUE5SUdVdWVpd2dieUE5SUhSb2FYTXVZMjlsWm1acFkybGxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1OdmNIa29iMXN3WFNrdWJYVnNkR2x3YkhsVFkyRnNZWElvTGpnNE5qSXlOeWtzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk1WMHNJRElnS2lBdU5URXhOalkwSUNvZ2FTa3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRzliTWwwc0lESWdLaUF1TlRFeE5qWTBJQ29nY2lrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHOWJNMTBzSURJZ0tpQXVOVEV4TmpZMElDb2diaWtzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk5GMHNJRElnS2lBdU5ESTVNRFF6SUNvZ2JpQXFJR2twTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2lodld6VmRMQ0F5SUNvZ0xqUXlPVEEwTXlBcUlHa2dLaUJ5S1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2IxczJYU3dnTGpjME16RXlOU0FxSUhJZ0tpQnlJQzBnTGpJME56Y3dPQ2tzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk4xMHNJRElnS2lBdU5ESTVNRFF6SUNvZ2JpQXFJSElwTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2lodld6aGRMQ0F1TkRJNU1EUXpJQ29nS0c0Z0tpQnVJQzBnYVNBcUlHa3BLU3dnZERzS0lDQWdJSDBLSUNBZ0lHRmtaQ2hsS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNRHNnZENBOElEazdJSFFyS3lsMGFHbHpMbU52WldabWFXTnBaVzUwYzF0MFhTNWhaR1FvWlM1amIyVm1abWxqYVdWdWRITmJkRjBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZV1JrVTJOaGJHVmtVMGdvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0E1T3lCdUt5c3BkR2hwY3k1amIyVm1abWxqYVdWdWRITmJibDB1WVdSa1UyTmhiR1ZrVm1WamRHOXlLR1V1WTI5bFptWnBZMmxsYm5SelcyNWRMQ0IwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5qWVd4bEtHVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnT1RzZ2RDc3JLWFJvYVhNdVkyOWxabVpwWTJsbGJuUnpXM1JkTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdiR1Z5Y0NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURrN0lHNHJLeWwwYUdsekxtTnZaV1ptYVdOcFpXNTBjMXR1WFM1c1pYSndLR1V1WTI5bFptWnBZMmxsYm5SelcyNWRMQ0IwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Ec2dkQ0E4SURrN0lIUXJLeWxwWmlBb0lYUm9hWE11WTI5bFptWnBZMmxsYm5SelczUmRMbVZ4ZFdGc2N5aGxMbU52WldabWFXTnBaVzUwYzF0MFhTa3BJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvWlM1amIyVm1abWxqYVdWdWRITXBPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxQmNuSmhlU2hsTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWpiMlZtWm1samFXVnVkSE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Ec2dhU0E4SURrN0lHa3JLeWx1VzJsZExtWnliMjFCY25KaGVTaGxMQ0IwSUNzZ2FTQXFJRE1wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlCY25KaGVTaGxJRDBnVzEwc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU52WldabWFXTnBaVzUwY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdPeUJwSUR3Z09Uc2dhU3NyS1c1YmFWMHVkRzlCY25KaGVTaGxMQ0IwSUNzZ2FTQXFJRE1wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdkbGRFSmhjMmx6UVhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1NExDQnBJRDBnWlM1NUxDQnlJRDBnWlM1Nk93b2dJQ0FnSUNBZ0lIUmJNRjBnUFNBdU1qZ3lNRGsxTENCMFd6RmRJRDBnTGpRNE9EWXdNeUFxSUdrc0lIUmJNbDBnUFNBdU5EZzROakF6SUNvZ2Npd2dkRnN6WFNBOUlDNDBPRGcyTURNZ0tpQnVMQ0IwV3pSZElEMGdNUzR3T1RJMU5EZ2dLaUJ1SUNvZ2FTd2dkRnMxWFNBOUlERXVNRGt5TlRRNElDb2dhU0FxSUhJc0lIUmJObDBnUFNBdU16RTFNemt5SUNvZ0tETWdLaUJ5SUNvZ2NpQXRJREVwTENCMFd6ZGRJRDBnTVM0d09USTFORGdnS2lCdUlDb2djaXdnZEZzNFhTQTlJQzQxTkRZeU56UWdLaUFvYmlBcUlHNGdMU0JwSUNvZ2FTazdDaUFnSUNCOUNuMDdDa3BoTG5CeWIzUnZkSGx3WlM1cGMxTndhR1Z5YVdOaGJFaGhjbTF2Ym1samN6TWdQU0FoTURzS2RtRnlJRWh5SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJDZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUVwaExDQjBJRDBnTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvZG05cFpDQXdMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbk5vSUQwZ1pUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbk5vTG1OdmNIa29aUzV6YUNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVc1MFpXNXphWFI1SUQwZ1pTNXBiblJsYm5OcGRIa3NJSFJvYVhNdWMyZ3Vabkp2YlVGeWNtRjVLR1V1YzJncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlITjFjR1Z5TG5SdlNsTlBUaWhsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1dlltcGxZM1F1YzJnZ1BTQjBhR2x6TG5Ob0xuUnZRWEp5WVhrb0tTd2dkRHNLSUNBZ0lIMEtmVHNLU0hJdWNISnZkRzkwZVhCbExtbHpUR2xuYUhSUWNtOWlaU0E5SUNFd093cDJZWElnZW1nZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdKMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBPd29nSUNBZ0lDQWdJSFJvYVhNdWRHVjRkSFZ5WlhNZ1BTQjdmVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUc1bGR5QlpkQ2h5TG0xaGJtRm5aWElwT3dvZ0lDQWdJQ0FnSUc4dWMyVjBVR0YwYUNoeUxuQmhkR2dwTENCdkxuTmxkRkpsY1hWbGMzUklaV0ZrWlhJb2NpNXlaWEYxWlhOMFNHVmhaR1Z5S1N3Z2J5NXpaWFJYYVhSb1EzSmxaR1Z1ZEdsaGJITW9jaTUzYVhSb1EzSmxaR1Z1ZEdsaGJITXBMQ0J2TG14dllXUW9aU3dnWm5WdVkzUnBiMjRvWVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwY25rZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDaHlMbkJoY25ObEtFcFRUMDR1Y0dGeWMyVW9ZU2twS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JqWVhSamFDQW9iQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBL0lHa29iQ2tnT2lCamIyNXpiMnhsTG1WeWNtOXlLR3dwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ5Y205eUtHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd2diaXdnYVNrN0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5SbGVIUjFjbVZ6T3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUc0b2Npa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZ0eVhTQTlQVDBnZG05cFpDQXdJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBaWEpwWVd4TWIyRmtaWEk2SUZWdVpHVm1hVzVsWkNCMFpYaDBkWEpsSWl3Z2Npa3NJSFJiY2wwN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJSE41VzJVdWRIbHdaVjA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVkWFZwWkNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5WMWFXUWdQU0JsTG5WMWFXUXBMQ0JsTG01aGJXVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXVZVzFsSUQwZ1pTNXVZVzFsS1N3Z1pTNWpiMnh2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1WTI5c2IzSWdJVDA5SUhadmFXUWdNQ0FtSmlCcExtTnZiRzl5TG5ObGRFaGxlQ2hsTG1OdmJHOXlLU3dnWlM1eWIzVm5hRzVsYzNNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1eWIzVm5hRzVsYzNNZ1BTQmxMbkp2ZFdkb2JtVnpjeWtzSUdVdWJXVjBZV3h1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWJXVjBZV3h1WlhOeklEMGdaUzV0WlhSaGJHNWxjM01wTENCbExuTm9aV1Z1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzJobFpXNGdQU0JsTG5Ob1pXVnVLU3dnWlM1emFHVmxia052Ykc5eUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMyaGxaVzVEYjJ4dmNpQTlJRzVsZHlCaFpTZ3BMbk5sZEVobGVDaGxMbk5vWldWdVEyOXNiM0lwS1N3Z1pTNXphR1ZsYmxKdmRXZG9ibVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5Ob1pXVnVVbTkxWjJodVpYTnpJRDBnWlM1emFHVmxibEp2ZFdkb2JtVnpjeWtzSUdVdVpXMXBjM05wZG1VZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG1WdGFYTnphWFpsSUNFOVBTQjJiMmxrSURBZ0ppWWdhUzVsYldsemMybDJaUzV6WlhSSVpYZ29aUzVsYldsemMybDJaU2tzSUdVdWMzQmxZM1ZzWVhJZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG5Od1pXTjFiR0Z5SUNFOVBTQjJiMmxrSURBZ0ppWWdhUzV6Y0dWamRXeGhjaTV6WlhSSVpYZ29aUzV6Y0dWamRXeGhjaWtzSUdVdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVNBOUlHVXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIa3BMQ0JsTG5Od1pXTjFiR0Z5UTI5c2IzSWdJVDA5SUhadmFXUWdNQ0FtSmlCcExuTndaV04xYkdGeVEyOXNiM0lnSVQwOUlIWnZhV1FnTUNBbUppQnBMbk53WldOMWJHRnlRMjlzYjNJdWMyVjBTR1Y0S0dVdWMzQmxZM1ZzWVhKRGIyeHZjaWtzSUdVdWMyaHBibWx1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMyaHBibWx1WlhOeklEMGdaUzV6YUdsdWFXNWxjM01wTENCbExtTnNaV0Z5WTI5aGRDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtTnNaV0Z5WTI5aGRDQTlJR1V1WTJ4bFlYSmpiMkYwS1N3Z1pTNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdQU0JsTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lrc0lHVXVkSEpoYm5OdGFYTnphVzl1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZEhKaGJuTnRhWE56YVc5dUlEMGdaUzUwY21GdWMyMXBjM05wYjI0cExDQmxMblJvYVdOcmJtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMblJvYVdOcmJtVnpjeUE5SUdVdWRHaHBZMnR1WlhOektTd2daUzVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlNBOUlHVXVZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU2tzSUdVdVlYUjBaVzUxWVhScGIyNURiMnh2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1WVhSMFpXNTFZWFJwYjI1RGIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpNXpaWFJJWlhnb1pTNWhkSFJsYm5WaGRHbHZia052Ykc5eUtTd2daUzVtYjJjZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bWIyY2dQU0JsTG1adlp5a3NJR1V1Wm14aGRGTm9ZV1JwYm1jZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bWJHRjBVMmhoWkdsdVp5QTlJR1V1Wm14aGRGTm9ZV1JwYm1jcExDQmxMbUpzWlc1a2FXNW5JQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZbXhsYm1ScGJtY2dQU0JsTG1Kc1pXNWthVzVuS1N3Z1pTNWpiMjFpYVc1bElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVkyOXRZbWx1WlNBOUlHVXVZMjl0WW1sdVpTa3NJR1V1YzJsa1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTnBaR1VnUFNCbExuTnBaR1VwTENCbExuTm9ZV1J2ZDFOcFpHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXphR0ZrYjNkVGFXUmxJRDBnWlM1emFHRmtiM2RUYVdSbEtTd2daUzV2Y0dGamFYUjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3ViM0JoWTJsMGVTQTlJR1V1YjNCaFkybDBlU2tzSUdVdVptOXliV0YwSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Wm05eWJXRjBJRDBnWlM1bWIzSnRZWFFwTENCbExuUnlZVzV6Y0dGeVpXNTBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkSEpoYm5Od1lYSmxiblFnUFNCbExuUnlZVzV6Y0dGeVpXNTBLU3dnWlM1aGJIQm9ZVlJsYzNRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1aGJIQm9ZVlJsYzNRZ1BTQmxMbUZzY0doaFZHVnpkQ2tzSUdVdVpHVndkR2hVWlhOMElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpHVndkR2hVWlhOMElEMGdaUzVrWlhCMGFGUmxjM1FwTENCbExtUmxjSFJvVjNKcGRHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWtaWEIwYUZkeWFYUmxJRDBnWlM1a1pYQjBhRmR5YVhSbEtTd2daUzVqYjJ4dmNsZHlhWFJsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WTI5c2IzSlhjbWwwWlNBOUlHVXVZMjlzYjNKWGNtbDBaU2tzSUdVdWMzUmxibU5wYkZkeWFYUmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjM1JsYm1OcGJGZHlhWFJsSUQwZ1pTNXpkR1Z1WTJsc1YzSnBkR1VwTENCbExuTjBaVzVqYVd4WGNtbDBaVTFoYzJzZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emRHVnVZMmxzVjNKcGRHVk5ZWE5ySUQwZ1pTNXpkR1Z1WTJsc1YzSnBkR1ZOWVhOcktTd2daUzV6ZEdWdVkybHNSblZ1WXlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5OMFpXNWphV3hHZFc1aklEMGdaUzV6ZEdWdVkybHNSblZ1WXlrc0lHVXVjM1JsYm1OcGJGSmxaaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk4wWlc1amFXeFNaV1lnUFNCbExuTjBaVzVqYVd4U1pXWXBMQ0JsTG5OMFpXNWphV3hHZFc1alRXRnpheUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk4wWlc1amFXeEdkVzVqVFdGemF5QTlJR1V1YzNSbGJtTnBiRVoxYm1OTllYTnJLU3dnWlM1emRHVnVZMmxzUm1GcGJDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTjBaVzVqYVd4R1lXbHNJRDBnWlM1emRHVnVZMmxzUm1GcGJDa3NJR1V1YzNSbGJtTnBiRnBHWVdsc0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzUmxibU5wYkZwR1lXbHNJRDBnWlM1emRHVnVZMmxzV2taaGFXd3BMQ0JsTG5OMFpXNWphV3hhVUdGemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTjBaVzVqYVd4YVVHRnpjeUE5SUdVdWMzUmxibU5wYkZwUVlYTnpLU3dnWlM1M2FYSmxabkpoYldVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1M2FYSmxabkpoYldVZ1BTQmxMbmRwY21WbWNtRnRaU2tzSUdVdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dwTENCbExuZHBjbVZtY21GdFpVeHBibVZqWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1M2FYSmxabkpoYldWTWFXNWxZMkZ3SUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsWTJGd0tTd2daUzUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVJRDBnWlM1M2FYSmxabkpoYldWTWFXNWxhbTlwYmlrc0lHVXVjbTkwWVhScGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXliM1JoZEdsdmJpQTlJR1V1Y205MFlYUnBiMjRwTENCbExteHBibVYzYVdSMGFDQWhQVDBnTVNBbUppQW9hUzVzYVc1bGQybGtkR2dnUFNCbExteHBibVYzYVdSMGFDa3NJR1V1WkdGemFGTnBlbVVnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVrWVhOb1UybDZaU0E5SUdVdVpHRnphRk5wZW1VcExDQmxMbWRoY0ZOcGVtVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNW5ZWEJUYVhwbElEMGdaUzVuWVhCVGFYcGxLU3dnWlM1elkyRnNaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk5qWVd4bElEMGdaUzV6WTJGc1pTa3NJR1V1Y0c5c2VXZHZiazltWm5ObGRDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuQnZiSGxuYjI1UFptWnpaWFFnUFNCbExuQnZiSGxuYjI1UFptWnpaWFFwTENCbExuQnZiSGxuYjI1UFptWnpaWFJHWVdOMGIzSWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXdiMng1WjI5dVQyWm1jMlYwUm1GamRHOXlJRDBnWlM1d2IyeDVaMjl1VDJabWMyVjBSbUZqZEc5eUtTd2daUzV3YjJ4NVoyOXVUMlptYzJWMFZXNXBkSE1nSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV3YjJ4NVoyOXVUMlptYzJWMFZXNXBkSE1nUFNCbExuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5a3NJR1V1WkdsMGFHVnlhVzVuSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WkdsMGFHVnlhVzVuSUQwZ1pTNWthWFJvWlhKcGJtY3BMQ0JsTG1Gc2NHaGhWRzlEYjNabGNtRm5aU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUZzY0doaFZHOURiM1psY21GblpTQTlJR1V1WVd4d2FHRlViME52ZG1WeVlXZGxLU3dnWlM1d2NtVnRkV3gwYVhCc2FXVmtRV3h3YUdFZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1d2NtVnRkV3gwYVhCc2FXVmtRV3h3YUdFZ1BTQmxMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU2tzSUdVdWRtbHphV0pzWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5acGMybGliR1VnUFNCbExuWnBjMmxpYkdVcExDQmxMblJ2Ym1WTllYQndaV1FnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUwYjI1bFRXRndjR1ZrSUQwZ1pTNTBiMjVsVFdGd2NHVmtLU3dnWlM1MWMyVnlSR0YwWVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5WelpYSkVZWFJoSUQwZ1pTNTFjMlZ5UkdGMFlTa3NJR1V1ZG1WeWRHVjRRMjlzYjNKeklDRTlQU0IyYjJsa0lEQWdKaVlnS0hSNWNHVnZaaUJsTG5abGNuUmxlRU52Ykc5eWN5QTlQU0FpYm5WdFltVnlJaUEvSUdrdWRtVnlkR1Y0UTI5c2IzSnpJRDBnWlM1MlpYSjBaWGhEYjJ4dmNuTWdQaUF3SURvZ2FTNTJaWEowWlhoRGIyeHZjbk1nUFNCbExuWmxjblJsZUVOdmJHOXljeWtzSUdVdWRXNXBabTl5YlhNZ0lUMDlJSFp2YVdRZ01Da2dabTl5S0d4bGRDQnlJR2x1SUdVdWRXNXBabTl5YlhNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1V1ZFc1cFptOXliWE5iY2wwN0NpQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFDaHBMblZ1YVdadmNtMXpXM0pkSUQwZ2UzMHNJRzh1ZEhsd1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG5WdWFXWnZjbTF6VzNKZExuWmhiSFZsSUQwZ2JpaHZMblpoYkhWbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW1NaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1ZFc1cFptOXliWE5iY2wwdWRtRnNkV1VnUFNCdVpYY2dZV1VvS1M1elpYUklaWGdvYnk1MllXeDFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSjJNaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNTFibWxtYjNKdGMxdHlYUzUyWVd4MVpTQTlJRzVsZHlCWUtDa3Vabkp2YlVGeWNtRjVLRzh1ZG1Gc2RXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWRqTWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWRXNXBabTl5YlhOYmNsMHVkbUZzZFdVZ1BTQnVaWGNnVFNncExtWnliMjFCY25KaGVTaHZMblpoYkhWbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW5ZMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG5WdWFXWnZjbTF6VzNKZExuWmhiSFZsSUQwZ2JtVjNJRlpsS0NrdVpuSnZiVUZ5Y21GNUtHOHVkbUZzZFdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpYlRNaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1ZFc1cFptOXliWE5iY2wwdWRtRnNkV1VnUFNCdVpYY2diSFFvS1M1bWNtOXRRWEp5WVhrb2J5NTJZV3gxWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0p0TkNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzUxYm1sbWIzSnRjMXR5WFM1MllXeDFaU0E5SUc1bGR5QndaU2dwTG1aeWIyMUJjbkpoZVNodkxuWmhiSFZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNTFibWxtYjNKdGMxdHlYUzUyWVd4MVpTQTlJRzh1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1V1WkdWbWFXNWxjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVJsWm1sdVpYTWdQU0JsTG1SbFptbHVaWE1wTENCbExuWmxjblJsZUZOb1lXUmxjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMblpsY25SbGVGTm9ZV1JsY2lBOUlHVXVkbVZ5ZEdWNFUyaGhaR1Z5S1N3Z1pTNW1jbUZuYldWdWRGTm9ZV1JsY2lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1aeVlXZHRaVzUwVTJoaFpHVnlJRDBnWlM1bWNtRm5iV1Z1ZEZOb1lXUmxjaWtzSUdVdVpYaDBaVzV6YVc5dWN5QWhQVDBnZG05cFpDQXdLU0JtYjNJb2JHVjBJSElnYVc0Z1pTNWxlSFJsYm5OcGIyNXpLV2t1WlhoMFpXNXphVzl1YzF0eVhTQTlJR1V1WlhoMFpXNXphVzl1YzF0eVhUc0tJQ0FnSUNBZ0lDQnBaaUFvWlM1emFHRmthVzVuSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Wm14aGRGTm9ZV1JwYm1jZ1BTQmxMbk5vWVdScGJtY2dQVDA5SURFcExDQmxMbk5wZW1VZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emFYcGxJRDBnWlM1emFYcGxLU3dnWlM1emFYcGxRWFIwWlc1MVlYUnBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YVhwbFFYUjBaVzUxWVhScGIyNGdQU0JsTG5OcGVtVkJkSFJsYm5WaGRHbHZiaWtzSUdVdWJXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3ViV0Z3SUQwZ2JpaGxMbTFoY0NrcExDQmxMbTFoZEdOaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtMWhkR05oY0NBOUlHNG9aUzV0WVhSallYQXBLU3dnWlM1aGJIQm9ZVTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1Gc2NHaGhUV0Z3SUQwZ2JpaGxMbUZzY0doaFRXRndLU2tzSUdVdVluVnRjRTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1KMWJYQk5ZWEFnUFNCdUtHVXVZblZ0Y0UxaGNDa3BMQ0JsTG1KMWJYQlRZMkZzWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1KMWJYQlRZMkZzWlNBOUlHVXVZblZ0Y0ZOallXeGxLU3dnWlM1dWIzSnRZV3hOWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1dWIzSnRZV3hOWVhBZ1BTQnVLR1V1Ym05eWJXRnNUV0Z3S1Nrc0lHVXVibTl5YldGc1RXRndWSGx3WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG01dmNtMWhiRTFoY0ZSNWNHVWdQU0JsTG01dmNtMWhiRTFoY0ZSNWNHVXBMQ0JsTG01dmNtMWhiRk5qWVd4bElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCbExtNXZjbTFoYkZOallXeGxPd29nSUNBZ0lDQWdJQ0FnSUNCQmNuSmhlUzVwYzBGeWNtRjVLSElwSUQwOVBTQWhNU0FtSmlBb2NpQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSElzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5Q2lBZ0lDQWdJQ0FnSUNBZ0lGMHBMQ0JwTG01dmNtMWhiRk5qWVd4bElEMGdibVYzSUZnb0tTNW1jbTl0UVhKeVlYa29jaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1ScGMzQnNZV05sYldWdWRFMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTlJRzRvWlM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFwS1N3Z1pTNWthWE53YkdGalpXMWxiblJUWTJGc1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElEMGdaUzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU2tzSUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCbExtUnBjM0JzWVdObGJXVnVkRUpwWVhNcExDQmxMbkp2ZFdkb2JtVnpjMDFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5KdmRXZG9ibVZ6YzAxaGNDQTlJRzRvWlM1eWIzVm5hRzVsYzNOTllYQXBLU3dnWlM1dFpYUmhiRzVsYzNOTllYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXRaWFJoYkc1bGMzTk5ZWEFnUFNCdUtHVXViV1YwWVd4dVpYTnpUV0Z3S1Nrc0lHVXVaVzFwYzNOcGRtVk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVsYldsemMybDJaVTFoY0NBOUlHNG9aUzVsYldsemMybDJaVTFoY0NrcExDQmxMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dQU0JsTG1WdGFYTnphWFpsU1c1MFpXNXphWFI1S1N3Z1pTNXpjR1ZqZFd4aGNrMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk53WldOMWJHRnlUV0Z3SUQwZ2JpaGxMbk53WldOMWJHRnlUV0Z3S1Nrc0lHVXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBOUlHNG9aUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NrcExDQmxMbk53WldOMWJHRnlRMjlzYjNKTllYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0lEMGdiaWhsTG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFwS1N3Z1pTNWxiblpOWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bGJuWk5ZWEFnUFNCdUtHVXVaVzUyVFdGd0tTa3NJR1V1Wlc1MlRXRndTVzUwWlc1emFYUjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaVzUyVFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVsYm5aTllYQkpiblJsYm5OcGRIa3BMQ0JsTG5KbFpteGxZM1JwZG1sMGVTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuSmxabXhsWTNScGRtbDBlU0E5SUdVdWNtVm1iR1ZqZEdsMmFYUjVLU3dnWlM1eVpXWnlZV04wYVc5dVVtRjBhVzhnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV5WldaeVlXTjBhVzl1VW1GMGFXOGdQU0JsTG5KbFpuSmhZM1JwYjI1U1lYUnBieWtzSUdVdWJHbG5hSFJOWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1c2FXZG9kRTFoY0NBOUlHNG9aUzVzYVdkb2RFMWhjQ2twTENCbExteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQmxMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVLU3dnWlM1aGIwMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUZ2VFdGd0lEMGdiaWhsTG1GdlRXRndLU2tzSUdVdVlXOU5ZWEJKYm5SbGJuTnBkSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVoYjAxaGNFbHVkR1Z1YzJsMGVTQTlJR1V1WVc5TllYQkpiblJsYm5OcGRIa3BMQ0JsTG1keVlXUnBaVzUwVFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVozSmhaR2xsYm5STllYQWdQU0J1S0dVdVozSmhaR2xsYm5STllYQXBLU3dnWlM1amJHVmhjbU52WVhSTllYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWpiR1ZoY21OdllYUk5ZWEFnUFNCdUtHVXVZMnhsWVhKamIyRjBUV0Z3S1Nrc0lHVXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0lEMGdiaWhsTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDa3BMQ0JsTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NBOUlHNG9aUzVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFwS1N3Z1pTNWpiR1ZoY21OdllYUk9iM0p0WVd4VFkyRnNaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbU5zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsSUQwZ2JtVjNJRmdvS1M1bWNtOXRRWEp5WVhrb1pTNWpiR1ZoY21OdllYUk9iM0p0WVd4VFkyRnNaU2twTENCbExuUnlZVzV6YldsemMybHZiazFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5SeVlXNXpiV2x6YzJsdmJrMWhjQ0E5SUc0b1pTNTBjbUZ1YzIxcGMzTnBiMjVOWVhBcEtTd2daUzUwYUdsamEyNWxjM05OWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1MGFHbGphMjVsYzNOTllYQWdQU0J1S0dVdWRHaHBZMnR1WlhOelRXRndLU2tzSUdVdWMyaGxaVzVEYjJ4dmNrMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk5vWldWdVEyOXNiM0pOWVhBZ1BTQnVLR1V1YzJobFpXNURiMnh2Y2sxaGNDa3BMQ0JsTG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFnUFNCdUtHVXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQXBLU3dnYVRzS0lDQWdJSDBLSUNBZ0lITmxkRlJsZUhSMWNtVnpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBaWGgwZFhKbGN5QTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNuMHNJRWR6SUQwZ1kyeGhjM01nZXdvZ0lDQWdjM1JoZEdsaklHUmxZMjlrWlZSbGVIUW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ1ZHVjRkRVJsWTI5a1pYSWdQQ0FpZFNJcElISmxkSFZ5YmlCdVpYY2dWR1Y0ZEVSbFkyOWtaWElvS1M1a1pXTnZaR1VvWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNBaUlqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdaUzVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZENBclBTQlRkSEpwYm1jdVpuSnZiVU5vWVhKRGIyUmxLR1ZiYmwwcE93b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCa1pXTnZaR1ZWVWtsRGIyMXdiMjVsYm5Rb1pYTmpZWEJsS0hRcEtUc0tJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbGVIUnlZV04wVlhKc1FtRnpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExteGhjM1JKYm1SbGVFOW1LQ0l2SWlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ1BUMDlJQzB4SUQ4Z0lpNHZJaUE2SUdVdWMzVmljM1J5S0RBc0lIUWdLeUF4S1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCeVpYTnZiSFpsVlZKTUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhsd1pXOW1JR1VnSVQwZ0luTjBjbWx1WnlJZ2ZId2daU0E5UFQwZ0lpSWdQeUFpSWlBNklDZ3ZYbWgwZEhCelB6cGNMMXd2TDJrdWRHVnpkQ2gwS1NBbUppQXZYbHd2THk1MFpYTjBLR1VwSUNZbUlDaDBJRDBnZEM1eVpYQnNZV05sS0M4b1htaDBkSEJ6UHpwY0wxd3ZXMTVjTDEwcktTNHFMMmtzSUNJa01TSXBLU3dnTDE0b2FIUjBjSE0vT2lrL1hDOWNMeTlwTG5SbGMzUW9aU2tnZkh3Z0wxNWtZWFJoT2k0cUxDNHFKQzlwTG5SbGMzUW9aU2tnZkh3Z0wxNWliRzlpT2k0cUpDOXBMblJsYzNRb1pTa2dQeUJsSURvZ2RDQXJJR1VwT3dvZ0lDQWdmUXA5TENCWllTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1gyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKSmJuTjBZVzVqWldSQ2RXWm1aWEpIWlc5dFpYUnllU0lzSUhSb2FYTXVhVzV6ZEdGdVkyVkRiM1Z1ZENBOUlERWdMeUF3T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWFXNXpkR0Z1WTJWRGIzVnVkQ0E5SUdVdWFXNXpkR0Z1WTJWRGIzVnVkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvZEdocGN5azdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVhVzV6ZEdGdVkyVkRiM1Z1ZENBOUlIUm9hWE11YVc1emRHRnVZMlZEYjNWdWRDd2daUzVwYzBsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVJRDBnSVRBc0lHVTdDaUFnSUNCOUNuMDdDbGxoTG5CeWIzUnZkSGx3WlM1cGMwbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SUQwZ0lUQTdDblpoY2lCVmFDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1luUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc2IyRmtLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXNJRzhnUFNCdVpYY2dXWFFvY2k1dFlXNWhaMlZ5S1RzS0lDQWdJQ0FnSUNCdkxuTmxkRkJoZEdnb2NpNXdZWFJvS1N3Z2J5NXpaWFJTWlhGMVpYTjBTR1ZoWkdWeUtISXVjbVZ4ZFdWemRFaGxZV1JsY2lrc0lHOHVjMlYwVjJsMGFFTnlaV1JsYm5ScFlXeHpLSEl1ZDJsMGFFTnlaV1JsYm5ScFlXeHpLU3dnYnk1c2IyRmtLR1VzSUdaMWJtTjBhVzl1S0dFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUW9jaTV3WVhKelpTaEtVMDlPTG5CaGNuTmxLR0VwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1B5QnBLR3dwSURvZ1kyOXVjMjlzWlM1bGNuSnZjaWhzS1N3Z2NpNXRZVzVoWjJWeUxtbDBaVzFGY25KdmNpaGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNJRzRzSUdrcE93b2dJQ0FnZlFvZ0lDQWdjR0Z5YzJVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdlMzBzSUc0Z1BTQjdmVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJwS0dZc0lHMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFJiYlYwZ0lUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlIUmJiVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ1ppNXBiblJsY214bFlYWmxaRUoxWm1abGNuTmJiVjBzSUdjZ1BTQnlLR1lzSUhZdVluVm1abVZ5S1N3Z2NDQTlJSGRwS0hZdWRIbHdaU3dnWnlrc0lGOGdQU0J1WlhjZ0pHNG9jQ3dnZGk1emRISnBaR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1h5NTFkV2xrSUQwZ2RpNTFkV2xrTENCMFcyMWRJRDBnWHl3Z1h6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdjaWhtTENCdEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVXMjFkSUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCdVcyMWRPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUdZdVlYSnlZWGxDZFdabVpYSnpXMjFkTENCbklEMGdibVYzSUZWcGJuUXpNa0Z5Y21GNUtIWXBMbUoxWm1abGNqc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzViYlYwZ1BTQm5MQ0JuT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdVdWFYTkpibk4wWVc1alpXUkNkV1ptWlhKSFpXOXRaWFJ5ZVNBL0lHNWxkeUJaWVNBNklHNWxkeUJmWlN3Z1lTQTlJR1V1WkdGMFlTNXBibVJsZURzS0lDQWdJQ0FnSUNCcFppQW9ZU0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdkMmtvWVM1MGVYQmxMQ0JoTG1GeWNtRjVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5NXpaWFJKYm1SbGVDaHVaWGNnVldVb1ppd2dNU2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUdVdVpHRjBZUzVoZEhSeWFXSjFkR1Z6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWmlCcGJpQnNLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCc1cyWmRMQ0I0T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYlM1cGMwbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlHa29aUzVrWVhSaExDQnRMbVJoZEdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDQTlJRzVsZHlCVGJpaDJMQ0J0TG1sMFpXMVRhWHBsTENCdExtOW1abk5sZEN3Z2JTNXViM0p0WVd4cGVtVmtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnZDJrb2JTNTBlWEJsTENCdExtRnljbUY1S1N3Z1p5QTlJRzB1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VnUHlCWWJpQTZJRlZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUNBOUlHNWxkeUJuS0hZc0lHMHVhWFJsYlZOcGVtVXNJRzB1Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JTNXVZVzFsSUNFOVBTQjJiMmxrSURBZ0ppWWdLSGd1Ym1GdFpTQTlJRzB1Ym1GdFpTa3NJRzB1ZFhOaFoyVWdJVDA5SUhadmFXUWdNQ0FtSmlCNExuTmxkRlZ6WVdkbEtHMHVkWE5oWjJVcExDQnRMblZ3WkdGMFpWSmhibWRsSUNFOVBTQjJiMmxrSURBZ0ppWWdLSGd1ZFhCa1lYUmxVbUZ1WjJVdWIyWm1jMlYwSUQwZ2JTNTFjR1JoZEdWU1lXNW5aUzV2Wm1aelpYUXNJSGd1ZFhCa1lYUmxVbUZ1WjJVdVkyOTFiblFnUFNCdExuVndaR0YwWlZKaGJtZGxMbU52ZFc1MEtTd2dieTV6WlhSQmRIUnlhV0oxZEdVb1ppd2dlQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnWlM1a1lYUmhMbTF2Y25Cb1FYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQnBaaUFvWXlrZ1ptOXlLR3hsZENCbUlHbHVJR01wZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlHTmJabDBzSUhnZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMklEMGdNQ3dnWnlBOUlHMHViR1Z1WjNSb095QjJJRHdnWnpzZ2Rpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdiVnQyWFN3Z1h6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3TG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJR2tvWlM1a1lYUmhMQ0J3TG1SaGRHRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY4Z1BTQnVaWGNnVTI0b2VTd2djQzVwZEdWdFUybDZaU3dnY0M1dlptWnpaWFFzSUhBdWJtOXliV0ZzYVhwbFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNUlEMGdkMmtvY0M1MGVYQmxMQ0J3TG1GeWNtRjVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZklEMGdibVYzSUZWbEtIa3NJSEF1YVhSbGJWTnBlbVVzSUhBdWJtOXliV0ZzYVhwbFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndMbTVoYldVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWHk1dVlXMWxJRDBnY0M1dVlXMWxLU3dnZUM1d2RYTm9LRjhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUc4dWJXOXljR2hCZEhSeWFXSjFkR1Z6VzJaZElEMGdlRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWlM1a1lYUmhMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsSUNZbUlDaHZMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsSUQwZ0lUQXBPd29nSUNBZ0lDQWdJR3hsZENCMUlEMGdaUzVrWVhSaExtZHliM1Z3Y3lCOGZDQmxMbVJoZEdFdVpISmhkMk5oYkd4eklIeDhJR1V1WkdGMFlTNXZabVp6WlhSek93b2dJQ0FnSUNBZ0lHbG1JQ2gxSUNFOVBTQjJiMmxrSURBcElHWnZjaWhzWlhRZ1ppQTlJREFzSUcwZ1BTQjFMbXhsYm1kMGFEc2daaUFoUFQwZ2JUc2dLeXRtS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhnZ1BTQjFXMlpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZMbUZrWkVkeWIzVndLSGd1YzNSaGNuUXNJSGd1WTI5MWJuUXNJSGd1YldGMFpYSnBZV3hKYm1SbGVDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCa0lEMGdaUzVrWVhSaExtSnZkVzVrYVc1blUzQm9aWEpsT3dvZ0lDQWdJQ0FnSUdsbUlDaGtJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNBZ0lDQWdaQzVqWlc1MFpYSWdJVDA5SUhadmFXUWdNQ0FtSmlCbUxtWnliMjFCY25KaGVTaGtMbU5sYm5SbGNpa3NJRzh1WW05MWJtUnBibWRUY0dobGNtVWdQU0J1WlhjZ1FXNG9aaXdnWkM1eVlXUnBkWE1wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dVlXMWxJQ1ltSUNodkxtNWhiV1VnUFNCbExtNWhiV1VwTENCbExuVnpaWEpFWVhSaElDWW1JQ2h2TG5WelpYSkVZWFJoSUQwZ1pTNTFjMlZ5UkdGMFlTa3NJRzg3Q2lBZ0lDQjlDbjBzSUhWNUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUhSb2FYTXVjR0YwYUNBOVBUMGdJaUlnUHlCSGN5NWxlSFJ5WVdOMFZYSnNRbUZ6WlNobEtTQTZJSFJvYVhNdWNHRjBhRHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjkxY21ObFVHRjBhQ0E5SUhSb2FYTXVjbVZ6YjNWeVkyVlFZWFJvSUh4OElHODdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVaWGNnV1hRb2RHaHBjeTV0WVc1aFoyVnlLVHNLSUNBZ0lDQWdJQ0JoTG5ObGRGQmhkR2dvZEdocGN5NXdZWFJvS1N3Z1lTNXpaWFJTWlhGMVpYTjBTR1ZoWkdWeUtIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpa3NJR0V1YzJWMFYybDBhRU55WldSbGJuUnBZV3h6S0hSb2FYTXVkMmwwYUVOeVpXUmxiblJwWVd4ektTd2dZUzVzYjJGa0tHVXNJR1oxYm1OMGFXOXVLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWXlBOUlFcFRUMDR1Y0dGeWMyVW9iQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tIVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnSVQwOUlIWnZhV1FnTUNBbUppQnBLSFVwTENCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJUcFBZbXBsWTNSTWIyRmtaWEk2SUVOaGJpZDBJSEJoY25ObElDSWdLeUJsSUNzZ0lpNGlMQ0IxTG0xbGMzTmhaMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdZeTV0WlhSaFpHRjBZVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2dnUFQwOUlIWnZhV1FnTUNCOGZDQm9MblI1Y0dVZ1BUMDlJSFp2YVdRZ01DQjhmQ0JvTG5SNWNHVXVkRzlNYjNkbGNrTmhjMlVvS1NBOVBUMGdJbWRsYjIxbGRISjVJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVQySnFaV04wVEc5aFpHVnlPaUJEWVc0bmRDQnNiMkZrSUNJZ0t5QmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlMbkJoY25ObEtHTXNJSFFwT3dvZ0lDQWdJQ0FnSUgwc0lHNHNJR2twT3dvZ0lDQWdmUW9nSUNBZ1lYTjVibU1nYkc5aFpFRnplVzVqS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNc0lHa2dQU0IwYUdsekxuQmhkR2dnUFQwOUlDSWlJRDhnUjNNdVpYaDBjbUZqZEZWeWJFSmhjMlVvWlNrZ09pQjBhR2x6TG5CaGRHZzdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZkWEpqWlZCaGRHZ2dQU0IwYUdsekxuSmxjMjkxY21ObFVHRjBhQ0I4ZkNCcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJRmwwS0hSb2FYTXViV0Z1WVdkbGNpazdDaUFnSUNBZ0lDQWdjaTV6WlhSUVlYUm9LSFJvYVhNdWNHRjBhQ2tzSUhJdWMyVjBVbVZ4ZFdWemRFaGxZV1JsY2loMGFHbHpMbkpsY1hWbGMzUklaV0ZrWlhJcExDQnlMbk5sZEZkcGRHaERjbVZrWlc1MGFXRnNjeWgwYUdsekxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCaGQyRnBkQ0J5TG14dllXUkJjM2x1WXlobExDQjBLU3dnWVNBOUlFcFRUMDR1Y0dGeWMyVW9ieWtzSUd3Z1BTQmhMbTFsZEdGa1lYUmhPd29nSUNBZ0lDQWdJR2xtSUNoc0lEMDlQU0IyYjJsa0lEQWdmSHdnYkM1MGVYQmxJRDA5UFNCMmIybGtJREFnZkh3Z2JDNTBlWEJsTG5SdlRHOTNaWEpEWVhObEtDa2dQVDA5SUNKblpXOXRaWFJ5ZVNJcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQkRZVzRuZENCc2IyRmtJQ0lnS3lCbEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1lYZGhhWFFnYmk1d1lYSnpaVUZ6ZVc1aktHRXBPd29nSUNBZ2ZRb2dJQ0FnY0dGeWMyVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTV3WVhKelpVRnVhVzFoZEdsdmJuTW9aUzVoYm1sdFlYUnBiMjV6S1N3Z2FTQTlJSFJvYVhNdWNHRnljMlZUYUdGd1pYTW9aUzV6YUdGd1pYTXBMQ0J5SUQwZ2RHaHBjeTV3WVhKelpVZGxiMjFsZEhKcFpYTW9aUzVuWlc5dFpYUnlhV1Z6TENCcEtTd2dieUE5SUhSb2FYTXVjR0Z5YzJWSmJXRm5aWE1vWlM1cGJXRm5aWE1zSUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwSUNFOVBTQjJiMmxrSURBZ0ppWWdkQ2hqS1RzS0lDQWdJQ0FnSUNCOUtTd2dZU0E5SUhSb2FYTXVjR0Z5YzJWVVpYaDBkWEpsY3lobExuUmxlSFIxY21WekxDQnZLU3dnYkNBOUlIUm9hWE11Y0dGeWMyVk5ZWFJsY21saGJITW9aUzV0WVhSbGNtbGhiSE1zSUdFcExDQmpJRDBnZEdocGN5NXdZWEp6WlU5aWFtVmpkQ2hsTG05aWFtVmpkQ3dnY2l3Z2JDd2dZU3dnYmlrc0lHZ2dQU0IwYUdsekxuQmhjbk5sVTJ0bGJHVjBiMjV6S0dVdWMydGxiR1YwYjI1ekxDQmpLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVpYVc1a1UydGxiR1YwYjI1ektHTXNJR2dwTENCMElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JrSUdsdUlHOHBhV1lnS0c5YlpGMGdhVzV6ZEdGdVkyVnZaaUJJVkUxTVNXMWhaMlZGYkdWdFpXNTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxSUQwZ0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMUlEMDlQU0FoTVNBbUppQjBLR01wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWXpzS0lDQWdJSDBLSUNBZ0lHRnplVzVqSUhCaGNuTmxRWE41Ym1Nb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1d1lYSnpaVUZ1YVcxaGRHbHZibk1vWlM1aGJtbHRZWFJwYjI1ektTd2diaUE5SUhSb2FYTXVjR0Z5YzJWVGFHRndaWE1vWlM1emFHRndaWE1wTENCcElEMGdkR2hwY3k1d1lYSnpaVWRsYjIxbGRISnBaWE1vWlM1blpXOXRaWFJ5YVdWekxDQnVLU3dnY2lBOUlHRjNZV2wwSUhSb2FYTXVjR0Z5YzJWSmJXRm5aWE5CYzNsdVl5aGxMbWx0WVdkbGN5a3NJRzhnUFNCMGFHbHpMbkJoY25ObFZHVjRkSFZ5WlhNb1pTNTBaWGgwZFhKbGN5d2djaWtzSUdFZ1BTQjBhR2x6TG5CaGNuTmxUV0YwWlhKcFlXeHpLR1V1YldGMFpYSnBZV3h6TENCdktTd2diQ0E5SUhSb2FYTXVjR0Z5YzJWUFltcGxZM1FvWlM1dlltcGxZM1FzSUdrc0lHRXNJRzhzSUhRcExDQmpJRDBnZEdocGN5NXdZWEp6WlZOclpXeGxkRzl1Y3lobExuTnJaV3hsZEc5dWN5d2diQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVltbHVaRk5yWld4bGRHOXVjeWhzTENCaktTd2diRHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxVMmhoY0dWektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdsbUlDaGxJQ0U5UFNCMmIybGtJREFwSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCbExteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lGaDBLQ2t1Wm5KdmJVcFRUMDRvWlZ0dVhTazdDaUFnSUNBZ0lDQWdJQ0FnSUhSYmNpNTFkV2xrWFNBOUlISTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBPd29nSUNBZ2ZRb2dJQ0FnY0dGeWMyVlRhMlZzWlhSdmJuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2UzMHNJR2tnUFNCN2ZUc0tJQ0FnSUNBZ0lDQnBaaUFvZEM1MGNtRjJaWEp6WlNobWRXNWpkR2x2YmloeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhJdWFYTkNiMjVsSUNZbUlDaHBXM0l1ZFhWcFpGMGdQU0J5S1RzS0lDQWdJQ0FnSUNCOUtTd2daU0FoUFQwZ2RtOXBaQ0F3S1NCbWIzSW9iR1YwSUhJZ1BTQXdMQ0J2SUQwZ1pTNXNaVzVuZEdnN0lISWdQQ0J2T3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc1bGR5QmhieWdwTG1aeWIyMUtVMDlPS0dWYmNsMHNJR2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVXMkV1ZFhWcFpGMGdQU0JoT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmpzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sUjJWdmJXVjBjbWxsY3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3ZlRzS0lDQWdJQ0FnSUNCcFppQW9aU0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdibVYzSUZWb093b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd0xDQnZJRDBnWlM1c1pXNW5kR2c3SUhJZ1BDQnZPeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VzSUd3Z1BTQmxXM0pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNkcGRHTm9LR3d1ZEhsd1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlRblZtWm1WeVIyVnZiV1YwY25raU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lrbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVNBOUlHa3VjR0Z5YzJVb2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWtkbGIyMWxkSEo1SWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVQySnFaV04wVEc5aFpHVnlPaUJVYUdVZ2JHVm5ZV041SUVkbGIyMWxkSEo1SUhSNWNHVWdhWE1nYm04Z2JHOXVaMlZ5SUhOMWNIQnZjblJsWkM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkM1MGVYQmxJR2x1SUhaaklEOGdZU0E5SUhaalcyd3VkSGx3WlYwdVpuSnZiVXBUVDA0b2JDd2dkQ2tnT2lCamIyNXpiMnhsTG5kaGNtNG9ZRlJJVWtWRkxrOWlhbVZqZEV4dllXUmxjam9nVlc1emRYQndiM0owWldRZ1oyVnZiV1YwY25rZ2RIbHdaU0FpSkh0c0xuUjVjR1Y5SW1BcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTNTFkV2xrSUQwZ2JDNTFkV2xrTENCc0xtNWhiV1VnSVQwOUlIWnZhV1FnTUNBbUppQW9ZUzV1WVcxbElEMGdiQzV1WVcxbEtTd2dZUzVwYzBKMVptWmxja2RsYjIxbGRISjVJRDA5UFNBaE1DQW1KaUJzTG5WelpYSkVZWFJoSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1ZFhObGNrUmhkR0VnUFNCc0xuVnpaWEpFWVhSaEtTd2dibHRzTG5WMWFXUmRJRDBnWVRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdianNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxUV0YwWlhKcFlXeHpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIdDlMQ0JwSUQwZ2UzMDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc1bGR5QjZhRHNLSUNBZ0lDQWdJQ0FnSUNBZ2NpNXpaWFJVWlhoMGRYSmxjeWgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnZJRDBnTUN3Z1lTQTlJR1V1YkdWdVozUm9PeUJ2SUR3Z1lUc2dieXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWlZ0dlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzTG5SNWNHVWdQVDA5SUNKTmRXeDBhVTFoZEdWeWFXRnNJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvSUQwZ01Ec2dhQ0E4SUd3dWJXRjBaWEpwWVd4ekxteGxibWQwYURzZ2FDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQnNMbTFoZEdWeWFXRnNjMXRvWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmx0MUxuVjFhV1JkSUQwOVBTQjJiMmxrSURBZ0ppWWdLRzViZFM1MWRXbGtYU0E5SUhJdWNHRnljMlVvZFNrcExDQmpMbkIxYzJnb2JsdDFMblYxYVdSZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FWdHNMblYxYVdSZElEMGdZenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnVXMnd1ZFhWcFpGMGdQVDA5SUhadmFXUWdNQ0FtSmlBb2JsdHNMblYxYVdSZElEMGdjaTV3WVhKelpTaHNLU2tzSUdsYmJDNTFkV2xrWFNBOUlHNWJiQzUxZFdsa1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVRzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sUVc1cGJXRjBhVzl1Y3lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjdmVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQWhQVDBnZG05cFpDQXdLU0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnWlM1c1pXNW5kR2c3SUc0ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlZ0dVhTd2djaUE5SUV4eUxuQmhjbk5sS0drcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwVzNJdWRYVnBaRjBnUFNCeU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2REc0tJQ0FnSUgwS0lDQWdJSEJoY25ObFNXMWhaMlZ6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNc0lHa2dQU0I3ZlN3Z2Nqc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnZLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNHViV0Z1WVdkbGNpNXBkR1Z0VTNSaGNuUW9iQ2tzSUhJdWJHOWhaQ2hzTENCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNHViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUxDQjJiMmxrSURBc0lHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiaTV0WVc1aFoyVnlMbWwwWlcxRmNuSnZjaWhzS1N3Z2JpNXRZVzVoWjJWeUxtbDBaVzFGYm1Rb2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmhLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJzSUQwOUlDSnpkSEpwYm1jaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHd3NJR2dnUFNBdlhpaGNMMXd2S1h3b1cyRXRlbDByT2loY0wxd3ZLVDhwTDJrdWRHVnpkQ2hqS1NBL0lHTWdPaUJ1TG5KbGMyOTFjbU5sVUdGMGFDQXJJR003Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdieWhvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElISmxkSFZ5YmlCc0xtUmhkR0VnUHlCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1lYUmhPaUIzYVNoc0xuUjVjR1VzSUd3dVpHRjBZU2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2diQzUzYVdSMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ2JDNW9aV2xuYUhRS0lDQWdJQ0FnSUNBZ0lDQWdmU0E2SUc1MWJHdzdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0IyYjJsa0lEQWdKaVlnWlM1c1pXNW5kR2dnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnYm1WM0lIcGhLSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlJRDBnYm1WM0lGSnlLR3dwTENCeUxuTmxkRU55YjNOelQzSnBaMmx1S0hSb2FYTXVZM0p2YzNOUGNtbG5hVzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdQU0F3TENCb0lEMGdaUzVzWlc1bmRHZzdJR01nUENCb095QmpLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0JsVzJOZExDQmtJRDBnZFM1MWNtdzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGtLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbGJkUzUxZFdsa1hTQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ppQTlJREFzSUcwZ1BTQmtMbXhsYm1kMGFEc2daaUE4SUcwN0lHWXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdaRnRtWFN3Z2RpQTlJR0VvZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZZ0lUMDlJRzUxYkd3Z0ppWWdLSFlnYVc1emRHRnVZMlZ2WmlCSVZFMU1TVzFoWjJWRmJHVnRaVzUwSUQ4Z2FWdDFMblYxYVdSZExuQjFjMmdvZGlrZ09pQnBXM1V1ZFhWcFpGMHVjSFZ6YUNodVpYY2djVzRvZGk1a1lYUmhMQ0IyTG5kcFpIUm9MQ0IyTG1obGFXZG9kQ2twS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdZU2gxTG5WeWJDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWmlBaFBUMGdiblZzYkNBbUppQW9hVnQxTG5WMWFXUmRJRDBnWmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2s3Q2lBZ0lDQjlDaUFnSUNCaGMzbHVZeUJ3WVhKelpVbHRZV2RsYzBGemVXNWpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXNJRzRnUFNCN2ZTd2dhVHNLSUNBZ0lDQWdJQ0JoYzNsdVl5Qm1kVzVqZEdsdmJpQnlLRzhwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJ2SUQwOUlDSnpkSEpwYm1jaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHOHNJR3dnUFNBdlhpaGNMMXd2S1h3b1cyRXRlbDByT2loY0wxd3ZLVDhwTDJrdWRHVnpkQ2hoS1NBL0lHRWdPaUIwTG5KbGMyOTFjbU5sVUdGMGFDQXJJR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZWGRoYVhRZ2FTNXNiMkZrUVhONWJtTW9iQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnYnk1a1lYUmhJRDhnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2dkMmtvYnk1MGVYQmxMQ0J2TG1SaGRHRXBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHOHVkMmxrZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUc4dWFHVnBaMmgwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMGdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWlNBaFBUMGdkbTlwWkNBd0lDWW1JR1V1YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2JtVjNJRkp5S0hSb2FYTXViV0Z1WVdkbGNpa3NJR2t1YzJWMFEzSnZjM05QY21sbmFXNG9kR2hwY3k1amNtOXpjMDl5YVdkcGJpazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQXNJR0VnUFNCbExteGxibWQwYURzZ2J5QThJR0U3SUc4ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHVmJiMTBzSUdNZ1BTQnNMblZ5YkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0dNcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmx0c0xuVjFhV1JkSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvSUQwZ01Dd2dkU0E5SUdNdWJHVnVaM1JvT3lCb0lEd2dkVHNnYUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCalcyaGRMQ0JtSUQwZ1lYZGhhWFFnY2loa0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ppQWhQVDBnYm5Wc2JDQW1KaUFvWmlCcGJuTjBZVzVqWlc5bUlFaFVUVXhKYldGblpVVnNaVzFsYm5RZ1B5QnVXMnd1ZFhWcFpGMHVjSFZ6YUNobUtTQTZJRzViYkM1MWRXbGtYUzV3ZFhOb0tHNWxkeUJ4YmlobUxtUmhkR0VzSUdZdWQybGtkR2dzSUdZdWFHVnBaMmgwS1NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JoZDJGcGRDQnlLR3d1ZFhKc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvSUNFOVBTQnVkV3hzSUNZbUlDaHVXMnd1ZFhWcFpGMGdQU0JvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdianNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxWR1Y0ZEhWeVpYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHNG9jaXdnYnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSGx3Wlc5bUlISWdQVDBnSW01MWJXSmxjaUlnUHlCeUlEb2dLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeUxuQmhjbk5sVkdWNGRIVnlaVG9nUTI5dWMzUmhiblFnYzJodmRXeGtJR0psSUdsdUlHNTFiV1Z5YVdNZ1ptOXliUzRpTENCeUtTd2diMXR5WFNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2UzMDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR1V1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQmxXM0pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQmhMbWx0WVdkbElEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDZFVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRTV2SUNKcGJXRm5aU0lnYzNCbFkybG1hV1ZrSUdadmNpY3NJR0V1ZFhWcFpDa3NJSFJiWVM1cGJXRm5aVjBnUFQwOUlIWnZhV1FnTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazlpYW1WamRFeHZZV1JsY2pvZ1ZXNWtaV1pwYm1Wa0lHbHRZV2RsSWl3Z1lTNXBiV0ZuWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0xDQmpJRDBnZEZ0aExtbHRZV2RsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdRWEp5WVhrdWFYTkJjbkpoZVNoaktTQS9JQ2hzSUQwZ2JtVjNJR3RwS0dNcExDQmpMbXhsYm1kMGFDQTlQVDBnTmlBbUppQW9iQzV1WldWa2MxVndaR0YwWlNBOUlDRXdLU2tnT2lBb1l5QW1KaUJqTG1SaGRHRWdQeUJzSUQwZ2JtVjNJSEZ1S0dNdVpHRjBZU3dnWXk1M2FXUjBhQ3dnWXk1b1pXbG5hSFFwSURvZ2JDQTlJRzVsZHlCdmRDaGpLU3dnWXlBbUppQW9iQzV1WldWa2MxVndaR0YwWlNBOUlDRXdLU2tzSUd3dWRYVnBaQ0E5SUdFdWRYVnBaQ3dnWVM1dVlXMWxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHd3VibUZ0WlNBOUlHRXVibUZ0WlNrc0lHRXViV0Z3Y0dsdVp5QWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xtMWhjSEJwYm1jZ1BTQnVLR0V1YldGd2NHbHVaeXdnWkhrcEtTd2dZUzV2Wm1aelpYUWdJVDA5SUhadmFXUWdNQ0FtSmlCc0xtOW1abk5sZEM1bWNtOXRRWEp5WVhrb1lTNXZabVp6WlhRcExDQmhMbkpsY0dWaGRDQWhQVDBnZG05cFpDQXdJQ1ltSUd3dWNtVndaV0YwTG1aeWIyMUJjbkpoZVNoaExuSmxjR1ZoZENrc0lHRXVZMlZ1ZEdWeUlDRTlQU0IyYjJsa0lEQWdKaVlnYkM1alpXNTBaWEl1Wm5KdmJVRnljbUY1S0dFdVkyVnVkR1Z5S1N3Z1lTNXliM1JoZEdsdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xuSnZkR0YwYVc5dUlEMGdZUzV5YjNSaGRHbHZiaWtzSUdFdWQzSmhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHNMbmR5WVhCVElEMGdiaWhoTG5keVlYQmJNRjBzSUZOaktTd2diQzUzY21Gd1ZDQTlJRzRvWVM1M2NtRndXekZkTENCVFl5a3BMQ0JoTG1admNtMWhkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHNMbVp2Y20xaGRDQTlJR0V1Wm05eWJXRjBLU3dnWVM1MGVYQmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHd3VkSGx3WlNBOUlHRXVkSGx3WlNrc0lHRXVaVzVqYjJScGJtY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2JDNWxibU52WkdsdVp5QTlJR0V1Wlc1amIyUnBibWNwTENCaExtMXBia1pwYkhSbGNpQWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xtMXBia1pwYkhSbGNpQTlJRzRvWVM1dGFXNUdhV3gwWlhJc0lGUmpLU2tzSUdFdWJXRm5SbWxzZEdWeUlDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dWJXRm5SbWxzZEdWeUlEMGdiaWhoTG0xaFowWnBiSFJsY2l3Z1ZHTXBLU3dnWVM1aGJtbHpiM1J5YjNCNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dVlXNXBjMjkwY205d2VTQTlJR0V1WVc1cGMyOTBjbTl3ZVNrc0lHRXVabXhwY0ZrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1bWJHbHdXU0E5SUdFdVpteHBjRmtwTENCaExuQnlaVzExYkhScGNHeDVRV3h3YUdFZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1d2NtVnRkV3gwYVhCc2VVRnNjR2hoSUQwZ1lTNXdjbVZ0ZFd4MGFYQnNlVUZzY0doaEtTd2dZUzUxYm5CaFkydEJiR2xuYm0xbGJuUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JDNTFibkJoWTJ0QmJHbG5ibTFsYm5RZ1BTQmhMblZ1Y0dGamEwRnNhV2R1YldWdWRDa3NJR0V1ZFhObGNrUmhkR0VnSVQwOUlIWnZhV1FnTUNBbUppQW9iQzUxYzJWeVJHRjBZU0E5SUdFdWRYTmxja1JoZEdFcExDQnBXMkV1ZFhWcFpGMGdQU0JzT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVRzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sVDJKcVpXTjBLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYnpzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCaEtHUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYlpGMGdQVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZEV4dllXUmxjam9nVlc1a1pXWnBibVZrSUdkbGIyMWxkSEo1SWl3Z1pDa3NJSFJiWkYwN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHd29aQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWkNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGtLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0SUQwZ01Dd2dlQ0E5SUdRdWJHVnVaM1JvT3lCdElEd2dlRHNnYlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCa1cyMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVXM1pkSUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklGVnVaR1ZtYVc1bFpDQnRZWFJsY21saGJDSXNJSFlwTENCbUxuQjFjMmdvYmx0MlhTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1YlpGMGdQVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZEV4dllXUmxjam9nVlc1a1pXWnBibVZrSUcxaGRHVnlhV0ZzSWl3Z1pDa3NJRzViWkYwN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWXloa0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJwVzJSZElEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRlZ1WkdWbWFXNWxaQ0IwWlhoMGRYSmxJaXdnWkNrc0lHbGJaRjA3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQm9MQ0IxT3dvZ0lDQWdJQ0FnSUhOM2FYUmphQ2hsTG5SNWNHVXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pUWTJWdVpTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYm1WM0lHNXZMQ0JsTG1KaFkydG5jbTkxYm1RZ0lUMDlJSFp2YVdRZ01DQW1KaUFvVG5WdFltVnlMbWx6U1c1MFpXZGxjaWhsTG1KaFkydG5jbTkxYm1RcElEOGdieTVpWVdOclozSnZkVzVrSUQwZ2JtVjNJR0ZsS0dVdVltRmphMmR5YjNWdVpDa2dPaUJ2TG1KaFkydG5jbTkxYm1RZ1BTQmpLR1V1WW1GamEyZHliM1Z1WkNrcExDQmxMbVZ1ZG1seWIyNXRaVzUwSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1Wlc1MmFYSnZibTFsYm5RZ1BTQmpLR1V1Wlc1MmFYSnZibTFsYm5RcEtTd2daUzVtYjJjZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWlM1bWIyY3VkSGx3WlNBOVBUMGdJa1p2WnlJZ1B5QnZMbVp2WnlBOUlHNWxkeUJDY2lobExtWnZaeTVqYjJ4dmNpd2daUzVtYjJjdWJtVmhjaXdnWlM1bWIyY3VabUZ5S1NBNklHVXVabTluTG5SNWNHVWdQVDA5SUNKR2IyZEZlSEF5SWlBbUppQW9ieTVtYjJjZ1BTQnVaWGNnVG5Jb1pTNW1iMmN1WTI5c2IzSXNJR1V1Wm05bkxtUmxibk5wZEhrcEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVVHVnljM0JsWTNScGRtVkRZVzFsY21FaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCMWRDaGxMbVp2ZGl3Z1pTNWhjM0JsWTNRc0lHVXVibVZoY2l3Z1pTNW1ZWElwTENCbExtWnZZM1Z6SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1Wm05amRYTWdQU0JsTG1adlkzVnpLU3dnWlM1NmIyOXRJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVlbTl2YlNBOUlHVXVlbTl2YlNrc0lHVXVabWxzYlVkaGRXZGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVabWxzYlVkaGRXZGxJRDBnWlM1bWFXeHRSMkYxWjJVcExDQmxMbVpwYkcxUFptWnpaWFFnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTVtYVd4dFQyWm1jMlYwSUQwZ1pTNW1hV3h0VDJabWMyVjBLU3dnWlM1MmFXVjNJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVkbWxsZHlBOUlFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHVXVkbWxsZHlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWs5eWRHaHZaM0poY0docFkwTmhiV1Z5WVNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUVaeUtHVXViR1ZtZEN3Z1pTNXlhV2RvZEN3Z1pTNTBiM0FzSUdVdVltOTBkRzl0TENCbExtNWxZWElzSUdVdVptRnlLU3dnWlM1NmIyOXRJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVlbTl2YlNBOUlHVXVlbTl2YlNrc0lHVXVkbWxsZHlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG5acFpYY2dQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG5acFpYY3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSkJiV0pwWlc1MFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJ4WVNobExtTnZiRzl5TENCbExtbHVkR1Z1YzJsMGVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVJHbHlaV04wYVc5dVlXeE1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUZkaEtHVXVZMjlzYjNJc0lHVXVhVzUwWlc1emFYUjVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlFiMmx1ZEV4cFoyaDBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2dSMkVvWlM1amIyeHZjaXdnWlM1cGJuUmxibk5wZEhrc0lHVXVaR2x6ZEdGdVkyVXNJR1V1WkdWallYa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsSmxZM1JCY21WaFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJZWVNobExtTnZiRzl5TENCbExtbHVkR1Z1YzJsMGVTd2daUzUzYVdSMGFDd2daUzVvWldsbmFIUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsTndiM1JNYVdkb2RDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYm1WM0lFaGhLR1V1WTI5c2IzSXNJR1V1YVc1MFpXNXphWFI1TENCbExtUnBjM1JoYm1ObExDQmxMbUZ1WjJ4bExDQmxMbkJsYm5WdFluSmhMQ0JsTG1SbFkyRjVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSklaVzFwYzNCb1pYSmxUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCVllTaGxMbU52Ykc5eUxDQmxMbWR5YjNWdVpFTnZiRzl5TENCbExtbHVkR1Z1YzJsMGVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVRHbG5hSFJRY205aVpTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYm1WM0lFaHlLQ2t1Wm5KdmJVcFRUMDRvWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVTJ0cGJtNWxaRTFsYzJnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FDQTlJR0VvWlM1blpXOXRaWFJ5ZVNrc0lIVWdQU0JzS0dVdWJXRjBaWEpwWVd3cExDQnZJRDBnYm1WM0lITnZLR2dzSUhVcExDQmxMbUpwYm1STmIyUmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVZbWx1WkUxdlpHVWdQU0JsTG1KcGJtUk5iMlJsS1N3Z1pTNWlhVzVrVFdGMGNtbDRJQ0U5UFNCMmIybGtJREFnSmlZZ2J5NWlhVzVrVFdGMGNtbDRMbVp5YjIxQmNuSmhlU2hsTG1KcGJtUk5ZWFJ5YVhncExDQmxMbk5yWld4bGRHOXVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVjMnRsYkdWMGIyNGdQU0JsTG5OclpXeGxkRzl1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pOWlhOb0lqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZ2dQU0JoS0dVdVoyVnZiV1YwY25rcExDQjFJRDBnYkNobExtMWhkR1Z5YVdGc0tTd2dieUE5SUc1bGR5QnpkQ2hvTENCMUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKSmJuTjBZVzVqWldSTlpYTm9Jam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2dnUFNCaEtHVXVaMlZ2YldWMGNua3BMQ0IxSUQwZ2JDaGxMbTFoZEdWeWFXRnNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdaUzVqYjNWdWRDd2daaUE5SUdVdWFXNXpkR0Z1WTJWTllYUnlhWGdzSUcwZ1BTQmxMbWx1YzNSaGJtTmxRMjlzYjNJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUhoaEtHZ3NJSFVzSUdRcExDQnZMbWx1YzNSaGJtTmxUV0YwY21sNElEMGdibVYzSUZodUtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1ppNWhjbkpoZVNrc0lERTJLU3dnYlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1sdWMzUmhibU5sUTI5c2IzSWdQU0J1WlhjZ1dHNG9ibVYzSUVac2IyRjBNekpCY25KaGVTaHRMbUZ5Y21GNUtTd2diUzVwZEdWdFUybDZaU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa3hQUkNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUdKb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWt4cGJtVWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QnZiaWhoS0dVdVoyVnZiV1YwY25rcExDQnNLR1V1YldGMFpYSnBZV3dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pNYVc1bFRHOXZjQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JtVjNJSGxoS0dFb1pTNW5aVzl0WlhSeWVTa3NJR3dvWlM1dFlYUmxjbWxoYkNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWt4cGJtVlRaV2R0Wlc1MGN5STZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYm1WM0lIZDBLR0VvWlM1blpXOXRaWFJ5ZVNrc0lHd29aUzV0WVhSbGNtbGhiQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbEJ2YVc1MFEyeHZkV1FpT2dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKUWIybHVkSE1pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUI2Y2loaEtHVXVaMlZ2YldWMGNua3BMQ0JzS0dVdWJXRjBaWEpwWVd3cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKVGNISnBkR1VpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJ5Ynloc0tHVXViV0YwWlhKcFlXd3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSkhjbTkxY0NJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUVodU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWtKdmJtVWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QnZienNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5Qk9aVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHOHVkWFZwWkNBOUlHVXVkWFZwWkN3Z1pTNXVZVzFsSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1Ym1GdFpTQTlJR1V1Ym1GdFpTa3NJR1V1YldGMGNtbDRJQ0U5UFNCMmIybGtJREFnUHlBb2J5NXRZWFJ5YVhndVpuSnZiVUZ5Y21GNUtHVXViV0YwY21sNEtTd2daUzV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJR1V1YldGMGNtbDRRWFYwYjFWd1pHRjBaU2tzSUc4dWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBbUppQnZMbTFoZEhKcGVDNWtaV052YlhCdmMyVW9ieTV3YjNOcGRHbHZiaXdnYnk1eGRXRjBaWEp1YVc5dUxDQnZMbk5qWVd4bEtTa2dPaUFvWlM1d2IzTnBkR2x2YmlBaFBUMGdkbTlwWkNBd0lDWW1JRzh1Y0c5emFYUnBiMjR1Wm5KdmJVRnljbUY1S0dVdWNHOXphWFJwYjI0cExDQmxMbkp2ZEdGMGFXOXVJQ0U5UFNCMmIybGtJREFnSmlZZ2J5NXliM1JoZEdsdmJpNW1jbTl0UVhKeVlYa29aUzV5YjNSaGRHbHZiaWtzSUdVdWNYVmhkR1Z5Ym1sdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUc4dWNYVmhkR1Z5Ym1sdmJpNW1jbTl0UVhKeVlYa29aUzV4ZFdGMFpYSnVhVzl1S1N3Z1pTNXpZMkZzWlNBaFBUMGdkbTlwWkNBd0lDWW1JRzh1YzJOaGJHVXVabkp2YlVGeWNtRjVLR1V1YzJOaGJHVXBLU3dnWlM1allYTjBVMmhoWkc5M0lDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVkyRnpkRk5vWVdSdmR5QTlJR1V1WTJGemRGTm9ZV1J2ZHlrc0lHVXVjbVZqWldsMlpWTm9ZV1J2ZHlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG5KbFkyVnBkbVZUYUdGa2IzY2dQU0JsTG5KbFkyVnBkbVZUYUdGa2IzY3BMQ0JsTG5Ob1lXUnZkeUFtSmlBb1pTNXphR0ZrYjNjdVltbGhjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbk5vWVdSdmR5NWlhV0Z6SUQwZ1pTNXphR0ZrYjNjdVltbGhjeWtzSUdVdWMyaGhaRzkzTG01dmNtMWhiRUpwWVhNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1emFHRmtiM2N1Ym05eWJXRnNRbWxoY3lBOUlHVXVjMmhoWkc5M0xtNXZjbTFoYkVKcFlYTXBMQ0JsTG5Ob1lXUnZkeTV5WVdScGRYTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXphR0ZrYjNjdWNtRmthWFZ6SUQwZ1pTNXphR0ZrYjNjdWNtRmthWFZ6S1N3Z1pTNXphR0ZrYjNjdWJXRndVMmw2WlNBaFBUMGdkbTlwWkNBd0lDWW1JRzh1YzJoaFpHOTNMbTFoY0ZOcGVtVXVabkp2YlVGeWNtRjVLR1V1YzJoaFpHOTNMbTFoY0ZOcGVtVXBMQ0JsTG5Ob1lXUnZkeTVqWVcxbGNtRWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXphR0ZrYjNjdVkyRnRaWEpoSUQwZ2RHaHBjeTV3WVhKelpVOWlhbVZqZENobExuTm9ZV1J2ZHk1allXMWxjbUVwS1Nrc0lHVXVkbWx6YVdKc1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxuWnBjMmxpYkdVZ1BTQmxMblpwYzJsaWJHVXBMQ0JsTG1aeWRYTjBkVzFEZFd4c1pXUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NW1jblZ6ZEhWdFEzVnNiR1ZrSUQwZ1pTNW1jblZ6ZEhWdFEzVnNiR1ZrS1N3Z1pTNXlaVzVrWlhKUGNtUmxjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbkpsYm1SbGNrOXlaR1Z5SUQwZ1pTNXlaVzVrWlhKUGNtUmxjaWtzSUdVdWRYTmxja1JoZEdFZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1MWMyVnlSR0YwWVNBOUlHVXVkWE5sY2tSaGRHRXBMQ0JsTG14aGVXVnljeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbXhoZVdWeWN5NXRZWE5ySUQwZ1pTNXNZWGxsY25NcExDQmxMbU5vYVd4a2NtVnVJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQmxMbU5vYVd4a2NtVnVPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdPeUJtSUR3Z1pDNXNaVzVuZEdnN0lHWXJLeWx2TG1Ga1pDaDBhR2x6TG5CaGNuTmxUMkpxWldOMEtHUmJabDBzSUhRc0lHNHNJR2tzSUhJcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0dVdVlXNXBiV0YwYVc5dWN5QWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1pTNWhibWx0WVhScGIyNXpPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdPeUJtSUR3Z1pDNXNaVzVuZEdnN0lHWXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJR1JiWmwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdkxtRnVhVzFoZEdsdmJuTXVjSFZ6YUNoeVcyMWRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWlM1MGVYQmxJRDA5UFNBaVRFOUVJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmxMbUYxZEc5VmNHUmhkR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTVoZFhSdlZYQmtZWFJsSUQwZ1pTNWhkWFJ2VlhCa1lYUmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCbExteGxkbVZzY3pzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm1JRDBnTURzZ1ppQThJR1F1YkdWdVozUm9PeUJtS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCa1cyWmRMQ0I0SUQwZ2J5NW5aWFJQWW1wbFkzUkNlVkJ5YjNCbGNuUjVLQ0oxZFdsa0lpd2diUzV2WW1wbFkzUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVZV1JrVEdWMlpXd29lQ3dnYlM1a2FYTjBZVzVqWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzg3Q2lBZ0lDQjlDaUFnSUNCaWFXNWtVMnRsYkdWMGIyNXpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQlBZbXBsWTNRdWEyVjVjeWgwS1M1c1pXNW5kR2dnSVQwOUlEQWdKaVlnWlM1MGNtRjJaWEp6WlNobWRXNWpkR2x2YmlodUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVMbWx6VTJ0cGJtNWxaRTFsYzJnZ1BUMDlJQ0V3SUNZbUlHNHVjMnRsYkdWMGIyNGdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwVzI0dWMydGxiR1YwYjI1ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQTlQVDBnZG05cFpDQXdJRDhnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRTV2SUhOclpXeGxkRzl1SUdadmRXNWtJSGRwZEdnZ1ZWVkpSRG9pTENCdUxuTnJaV3hsZEc5dUtTQTZJRzR1WW1sdVpDaHBMQ0J1TG1KcGJtUk5ZWFJ5YVhncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJVWlhoMGRYSmxVR0YwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5T2lBdWMyVjBWR1Y0ZEhWeVpWQmhkR2dvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXpaWFJTWlhOdmRYSmpaVkJoZEdnb0tTNGlLU3dnZEdocGN5NXpaWFJTWlhOdmRYSmpaVkJoZEdnb1pTazdDaUFnSUNCOUNuMHNJR1I1SUQwZ2V3b2dJQ0FnVlZaTllYQndhVzVuT2lCb1lTd0tJQ0FnSUVOMVltVlNaV1pzWldOMGFXOXVUV0Z3Y0dsdVp6b2dRbWtzQ2lBZ0lDQkRkV0psVW1WbWNtRmpkR2x2YmsxaGNIQnBibWM2SUhwcExBb2dJQ0FnUlhGMWFYSmxZM1JoYm1kMWJHRnlVbVZtYkdWamRHbHZiazFoY0hCcGJtYzZJRVJ6TEFvZ0lDQWdSWEYxYVhKbFkzUmhibWQxYkdGeVVtVm1jbUZqZEdsdmJrMWhjSEJwYm1jNklFWnpMQW9nSUNBZ1EzVmlaVlZXVW1WbWJHVmpkR2x2YmsxaGNIQnBibWM2SUZCeUxBb2dJQ0FnUTNWaVpWVldVbVZtY21GamRHbHZiazFoY0hCcGJtYzZJRmR6Q24wc0lGTmpJRDBnZXdvZ0lDQWdVbVZ3WldGMFYzSmhjSEJwYm1jNklFNXpMQW9nSUNBZ1EyeGhiWEJVYjBWa1oyVlhjbUZ3Y0dsdVp6b2dkblFzQ2lBZ0lDQk5hWEp5YjNKbFpGSmxjR1ZoZEZkeVlYQndhVzVuT2lCQ2N3cDlMQ0JVWXlBOUlIc0tJQ0FnSUU1bFlYSmxjM1JHYVd4MFpYSTZJSEowTEFvZ0lDQWdUbVZoY21WemRFMXBjRzFoY0U1bFlYSmxjM1JHYVd4MFpYSTZJSFJoTEFvZ0lDQWdUbVZoY21WemRFMXBjRzFoY0V4cGJtVmhja1pwYkhSbGNqb2dibUVzQ2lBZ0lDQk1hVzVsWVhKR2FXeDBaWEk2SUhSMExBb2dJQ0FnVEdsdVpXRnlUV2x3YldGd1RtVmhjbVZ6ZEVacGJIUmxjam9nVjJNc0NpQWdJQ0JNYVc1bFlYSk5hWEJ0WVhCTWFXNWxZWEpHYVd4MFpYSTZJRlZwQ24wc0lFOW9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJQ0FnSUNCMGVYQmxiMllnWTNKbFlYUmxTVzFoWjJWQ2FYUnRZWEFnUGlBaWRTSWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVUpwZEcxaGNFeHZZV1JsY2pvZ1kzSmxZWFJsU1cxaFoyVkNhWFJ0WVhBb0tTQnViM1FnYzNWd2NHOXlkR1ZrTGlJcExDQjBlWEJsYjJZZ1ptVjBZMmdnUGlBaWRTSWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVUpwZEcxaGNFeHZZV1JsY2pvZ1ptVjBZMmdvS1NCdWIzUWdjM1Z3Y0c5eWRHVmtMaUlwTENCMGFHbHpMbTl3ZEdsdmJuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQnlaVzExYkhScGNHeDVRV3h3YUdFNklDSnViMjVsSWdvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJQY0hScGIyNXpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZjSFJwYjI1eklEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR1VnUFQwOUlIWnZhV1FnTUNBbUppQW9aU0E5SUNJaUtTd2dkR2hwY3k1d1lYUm9JQ0U5UFNCMmIybGtJREFnSmlZZ0tHVWdQU0IwYUdsekxuQmhkR2dnS3lCbEtTd2daU0E5SUhSb2FYTXViV0Z1WVdkbGNpNXlaWE52YkhabFZWSk1LR1VwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUU1cExtZGxkQ2hsS1RzS0lDQWdJQ0FnSUNCcFppQW9ieUFoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnY2k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtTd2djMlYwVkdsdFpXOTFkQ2htZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0FtSmlCMEtHOHBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUxDQXdLU3dnYnpzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUh0OU93b2dJQ0FnSUNBZ0lHRXVZM0psWkdWdWRHbGhiSE1nUFNCMGFHbHpMbU55YjNOelQzSnBaMmx1SUQwOVBTQWlZVzV2Ym5sdGIzVnpJaUEvSUNKellXMWxMVzl5YVdkcGJpSWdPaUFpYVc1amJIVmtaU0lzSUdFdWFHVmhaR1Z5Y3lBOUlIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpd2dabVYwWTJnb1pTd2dZU2t1ZEdobGJpaG1kVzVqZEdsdmJpaHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCc0xtSnNiMklvS1RzS0lDQWdJQ0FnSUNCOUtTNTBhR1Z1S0daMWJtTjBhVzl1S0d3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR055WldGMFpVbHRZV2RsUW1sMGJXRndLR3dzSUU5aWFtVmpkQzVoYzNOcFoyNG9jaTV2Y0hScGIyNXpMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNsTndZV05sUTI5dWRtVnljMmx2YmpvZ0ltNXZibVVpQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHBLVHNLSUNBZ0lDQWdJQ0I5S1M1MGFHVnVLR1oxYm1OMGFXOXVLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdUbWt1WVdSa0tHVXNJR3dwTENCMElDWW1JSFFvYkNrc0lISXViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHVXBPd29nSUNBZ0lDQWdJSDBwTG1OaGRHTm9LR1oxYm1OMGFXOXVLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhU0FtSmlCcEtHd3BMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcExDQnlMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5S1N3Z2NpNXRZVzVoWjJWeUxtbDBaVzFUZEdGeWRDaGxLVHNLSUNBZ0lIMEtmVHNLVDJndWNISnZkRzkwZVhCbExtbHpTVzFoWjJWQ2FYUnRZWEJNYjJGa1pYSWdQU0FoTURzS2RtRnlJRk56TENCSWFDQTlJSHNLSUNBZ0lHZGxkRU52Ym5SbGVIUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUY3lBOVBUMGdkbTlwWkNBd0lDWW1JQ2hUY3lBOUlHNWxkeUFvZDJsdVpHOTNMa0YxWkdsdlEyOXVkR1Y0ZENCOGZDQjNhVzVrYjNjdWQyVmlhMmwwUVhWa2FXOURiMjUwWlhoMEtTa3NJRk56T3dvZ0lDQWdmU3dLSUNBZ0lITmxkRU52Ym5SbGVIUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNCVGN5QTlJSE03Q2lBZ0lDQjlDbjBzSUd0b0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUc1bGR5QlpkQ2gwYUdsekxtMWhibUZuWlhJcE93b2dJQ0FnSUNBZ0lHOHVjMlYwVW1WemNHOXVjMlZVZVhCbEtDSmhjbkpoZVdKMVptWmxjaUlwTENCdkxuTmxkRkJoZEdnb2RHaHBjeTV3WVhSb0tTd2dieTV6WlhSU1pYRjFaWE4wU0dWaFpHVnlLSFJvYVhNdWNtVnhkV1Z6ZEVobFlXUmxjaWtzSUc4dWMyVjBWMmwwYUVOeVpXUmxiblJwWVd4ektIUm9hWE11ZDJsMGFFTnlaV1JsYm5ScFlXeHpLU3dnYnk1c2IyRmtLR1VzSUdaMWJtTjBhVzl1S0dFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1lTNXpiR2xqWlNnd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFaG9MbWRsZEVOdmJuUmxlSFFvS1M1a1pXTnZaR1ZCZFdScGIwUmhkR0VvYkN3Z1puVnVZM1JwYjI0b2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRb2FDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0EvSUdrb2JDa2dPaUJqYjI1emIyeGxMbVZ5Y205eUtHd3BMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3Z2Jpd2dhU2s3Q2lBZ0lDQjlDbjBzSUVkb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCSWNpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUlEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9kbTlwWkNBd0xDQnVLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzVsZHlCaFpTZ3BMbk5sZENobEtTd2djaUE5SUc1bGR5QmhaU2dwTG5ObGRDaDBLU3dnYnlBOUlHNWxkeUJOS0drdWNpd2dhUzVuTENCcExtSXBMQ0JoSUQwZ2JtVjNJRTBvY2k1eUxDQnlMbWNzSUhJdVlpa3NJR3dnUFNCTllYUm9Mbk54Y25Rb1RXRjBhQzVRU1Nrc0lHTWdQU0JzSUNvZ1RXRjBhQzV6Y1hKMEtDNDNOU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXphQzVqYjJWbVptbGphV1Z1ZEhOYk1GMHVZMjl3ZVNodktTNWhaR1FvWVNrdWJYVnNkR2x3YkhsVFkyRnNZWElvYkNrc0lIUm9hWE11YzJndVkyOWxabVpwWTJsbGJuUnpXekZkTG1OdmNIa29ieWt1YzNWaUtHRXBMbTExYkhScGNHeDVVMk5oYkdGeUtHTXBPd29nSUNBZ2ZRcDlPd3BIYUM1d2NtOTBiM1I1Y0dVdWFYTklaVzFwYzNCb1pYSmxUR2xuYUhSUWNtOWlaU0E5SUNFd093cDJZWElnVm1nZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVoeUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2loMmIybGtJREFzSUhRcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2JtVjNJR0ZsS0NrdWMyVjBLR1VwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjMmd1WTI5bFptWnBZMmxsYm5Seld6QmRMbk5sZENodUxuSXNJRzR1Wnl3Z2JpNWlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3lJQ29nVFdGMGFDNXpjWEowS0UxaGRHZ3VVRWtwS1RzS0lDQWdJSDBLZlRzS1ZtZ3VjSEp2ZEc5MGVYQmxMbWx6UVcxaWFXVnVkRXhwWjJoMFVISnZZbVVnUFNBaE1Ec0tkbUZ5SUVWaklEMGdibVYzSUhCbExDQkJZeUE5SUc1bGR5QndaU3dnUm00Z1BTQnVaWGNnY0dVc0lHWjVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUzUmxjbVZ2UTJGdFpYSmhJaXdnZEdocGN5NWhjM0JsWTNRZ1BTQXhMQ0IwYUdsekxtVjVaVk5sY0NBOUlDNHdOalFzSUhSb2FYTXVZMkZ0WlhKaFRDQTlJRzVsZHlCMWRDd2dkR2hwY3k1allXMWxjbUZNTG14aGVXVnljeTVsYm1GaWJHVW9NU2tzSUhSb2FYTXVZMkZ0WlhKaFRDNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVZMkZ0WlhKaFVpQTlJRzVsZHlCMWRDd2dkR2hwY3k1allXMWxjbUZTTG14aGVXVnljeTVsYm1GaWJHVW9NaWtzSUhSb2FYTXVZMkZ0WlhKaFVpNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVYMk5oWTJobElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCbWIyTjFjem9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnWm05Mk9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQmhjM0JsWTNRNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxZWEk2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUdaaGNqb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdlbTl2YlRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pYbGxVMlZ3T2lCdWRXeHNDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDlqWVdOb1pUc0tJQ0FnSUNBZ0lDQnBaaUFvZEM1bWIyTjFjeUFoUFQwZ1pTNW1iMk4xY3lCOGZDQjBMbVp2ZGlBaFBUMGdaUzVtYjNZZ2ZId2dkQzVoYzNCbFkzUWdJVDA5SUdVdVlYTndaV04wSUNvZ2RHaHBjeTVoYzNCbFkzUWdmSHdnZEM1dVpXRnlJQ0U5UFNCbExtNWxZWElnZkh3Z2RDNW1ZWElnSVQwOUlHVXVabUZ5SUh4OElIUXVlbTl2YlNBaFBUMGdaUzU2YjI5dElIeDhJSFF1WlhsbFUyVndJQ0U5UFNCMGFHbHpMbVY1WlZObGNDa2dld29nSUNBZ0lDQWdJQ0FnSUNCMExtWnZZM1Z6SUQwZ1pTNW1iMk4xY3l3Z2RDNW1iM1lnUFNCbExtWnZkaXdnZEM1aGMzQmxZM1FnUFNCbExtRnpjR1ZqZENBcUlIUm9hWE11WVhOd1pXTjBMQ0IwTG01bFlYSWdQU0JsTG01bFlYSXNJSFF1Wm1GeUlEMGdaUzVtWVhJc0lIUXVlbTl2YlNBOUlHVXVlbTl2YlN3Z2RDNWxlV1ZUWlhBZ1BTQjBhR2x6TG1WNVpWTmxjQ3dnUm00dVkyOXdlU2hsTG5CeWIycGxZM1JwYjI1TllYUnlhWGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUXVaWGxsVTJWd0lDOGdNaXdnY2lBOUlHa2dLaUIwTG01bFlYSWdMeUIwTG1adlkzVnpMQ0J2SUQwZ2RDNXVaV0Z5SUNvZ1RXRjBhQzUwWVc0b1YyNGdLaUIwTG1admRpQXFJQzQxS1NBdklIUXVlbTl2YlN3Z1lTd2diRHNLSUNBZ0lDQWdJQ0FnSUNBZ1FXTXVaV3hsYldWdWRITmJNVEpkSUQwZ0xXa3NJRVZqTG1Wc1pXMWxiblJ6V3pFeVhTQTlJR2tzSUdFZ1BTQXRieUFxSUhRdVlYTndaV04wSUNzZ2Npd2diQ0E5SUc4Z0tpQjBMbUZ6Y0dWamRDQXJJSElzSUVadUxtVnNaVzFsYm5Seld6QmRJRDBnTWlBcUlIUXVibVZoY2lBdklDaHNJQzBnWVNrc0lFWnVMbVZzWlcxbGJuUnpXemhkSUQwZ0tHd2dLeUJoS1NBdklDaHNJQzBnWVNrc0lIUm9hWE11WTJGdFpYSmhUQzV3Y205cVpXTjBhVzl1VFdGMGNtbDRMbU52Y0hrb1JtNHBMQ0JoSUQwZ0xXOGdLaUIwTG1GemNHVmpkQ0F0SUhJc0lHd2dQU0J2SUNvZ2RDNWhjM0JsWTNRZ0xTQnlMQ0JHYmk1bGJHVnRaVzUwYzFzd1hTQTlJRElnS2lCMExtNWxZWElnTHlBb2JDQXRJR0VwTENCR2JpNWxiR1Z0Wlc1MGMxczRYU0E5SUNoc0lDc2dZU2tnTHlBb2JDQXRJR0VwTENCMGFHbHpMbU5oYldWeVlWSXVjSEp2YW1WamRHbHZiazFoZEhKcGVDNWpiM0I1S0VadUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1allXMWxjbUZNTG0xaGRISnBlRmR2Y214a0xtTnZjSGtvWlM1dFlYUnlhWGhYYjNKc1pDa3ViWFZzZEdsd2JIa29RV01wTENCMGFHbHpMbU5oYldWeVlWSXViV0YwY21sNFYyOXliR1F1WTI5d2VTaGxMbTFoZEhKcGVGZHZjbXhrS1M1dGRXeDBhWEJzZVNoRll5azdDaUFnSUNCOUNuMHNJRmRvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlDRXdLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtRjFkRzlUZEdGeWRDQTlJR1VzSUhSb2FYTXVjM1JoY25SVWFXMWxJRDBnTUN3Z2RHaHBjeTV2YkdSVWFXMWxJRDBnTUN3Z2RHaHBjeTVsYkdGd2MyVmtWR2x0WlNBOUlEQXNJSFJvYVhNdWNuVnVibWx1WnlBOUlDRXhPd29nSUNBZ2ZRb2dJQ0FnYzNSaGNuUW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXpkR0Z5ZEZScGJXVWdQU0JEWXlncExDQjBhR2x6TG05c1pGUnBiV1VnUFNCMGFHbHpMbk4wWVhKMFZHbHRaU3dnZEdocGN5NWxiR0Z3YzJWa1ZHbHRaU0E5SURBc0lIUm9hWE11Y25WdWJtbHVaeUE5SUNFd093b2dJQ0FnZlFvZ0lDQWdjM1J2Y0NncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFVnNZWEJ6WldSVWFXMWxLQ2tzSUhSb2FYTXVjblZ1Ym1sdVp5QTlJQ0V4TENCMGFHbHpMbUYxZEc5VGRHRnlkQ0E5SUNFeE93b2dJQ0FnZlFvZ0lDQWdaMlYwUld4aGNITmxaRlJwYldVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFJHVnNkR0VvS1N3Z2RHaHBjeTVsYkdGd2MyVmtWR2x0WlRzS0lDQWdJSDBLSUNBZ0lHZGxkRVJsYkhSaEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdNRHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVoZFhSdlUzUmhjblFnSmlZZ0lYUm9hWE11Y25WdWJtbHVaeWtnY21WMGRYSnVJSFJvYVhNdWMzUmhjblFvS1N3Z01Ec0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXlkVzV1YVc1bktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnUTJNb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlDaDBJQzBnZEdocGN5NXZiR1JVYVcxbEtTQXZJREZsTXl3Z2RHaHBjeTV2YkdSVWFXMWxJRDBnZEN3Z2RHaHBjeTVsYkdGd2MyVmtWR2x0WlNBclBTQmxPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnUTJNb0tTQjdDaUFnSUNCeVpYUjFjbTRnS0hSNWNHVnZaaUJ3WlhKbWIzSnRZVzVqWlNBK0lDSjFJaUEvSUVSaGRHVWdPaUJ3WlhKbWIzSnRZVzVqWlNrdWJtOTNLQ2s3Q24wS2RtRnlJRTV1SUQwZ2JtVjNJRTBzSUV4aklEMGdibVYzSUdkMExDQndlU0E5SUc1bGR5Qk5MQ0JDYmlBOUlHNWxkeUJOTENCdGVTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKQmRXUnBiMHhwYzNSbGJtVnlJaXdnZEdocGN5NWpiMjUwWlhoMElEMGdTR2d1WjJWMFEyOXVkR1Y0ZENncExDQjBhR2x6TG1kaGFXNGdQU0IwYUdsekxtTnZiblJsZUhRdVkzSmxZWFJsUjJGcGJpZ3BMQ0IwYUdsekxtZGhhVzR1WTI5dWJtVmpkQ2gwYUdsekxtTnZiblJsZUhRdVpHVnpkR2x1WVhScGIyNHBMQ0IwYUdsekxtWnBiSFJsY2lBOUlHNTFiR3dzSUhSb2FYTXVkR2x0WlVSbGJIUmhJRDBnTUN3Z2RHaHBjeTVmWTJ4dlkyc2dQU0J1WlhjZ1YyZzdDaUFnSUNCOUNpQWdJQ0JuWlhSSmJuQjFkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5ZV2x1T3dvZ0lDQWdmUW9nSUNBZ2NtVnRiM1psUm1sc2RHVnlLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWnBiSFJsY2lBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1bllXbHVMbVJwYzJOdmJtNWxZM1FvZEdocGN5NW1hV3gwWlhJcExDQjBhR2x6TG1acGJIUmxjaTVrYVhOamIyNXVaV04wS0hSb2FYTXVZMjl1ZEdWNGRDNWtaWE4wYVc1aGRHbHZiaWtzSUhSb2FYTXVaMkZwYmk1amIyNXVaV04wS0hSb2FYTXVZMjl1ZEdWNGRDNWtaWE4wYVc1aGRHbHZiaWtzSUhSb2FYTXVabWxzZEdWeUlEMGdiblZzYkNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkdhV3gwWlhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Wm1sc2RHVnlPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJtbHNkR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVtYVd4MFpYSWdJVDA5SUc1MWJHd2dQeUFvZEdocGN5NW5ZV2x1TG1ScGMyTnZibTVsWTNRb2RHaHBjeTVtYVd4MFpYSXBMQ0IwYUdsekxtWnBiSFJsY2k1a2FYTmpiMjV1WldOMEtIUm9hWE11WTI5dWRHVjRkQzVrWlhOMGFXNWhkR2x2YmlrcElEb2dkR2hwY3k1bllXbHVMbVJwYzJOdmJtNWxZM1FvZEdocGN5NWpiMjUwWlhoMExtUmxjM1JwYm1GMGFXOXVLU3dnZEdocGN5NW1hV3gwWlhJZ1BTQmxMQ0IwYUdsekxtZGhhVzR1WTI5dWJtVmpkQ2gwYUdsekxtWnBiSFJsY2lrc0lIUm9hWE11Wm1sc2RHVnlMbU52Ym01bFkzUW9kR2hwY3k1amIyNTBaWGgwTG1SbGMzUnBibUYwYVc5dUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoYzNSbGNsWnZiSFZ0WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWVdsdUxtZGhhVzR1ZG1Gc2RXVTdDaUFnSUNCOUNpQWdJQ0J6WlhSTllYTjBaWEpXYjJ4MWJXVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGhhVzR1WjJGcGJpNXpaWFJVWVhKblpYUkJkRlJwYldVb1pTd2dkR2hwY3k1amIyNTBaWGgwTG1OMWNuSmxiblJVYVcxbExDQXVNREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYjI1MFpYaDBMbXhwYzNSbGJtVnlMQ0J1SUQwZ2RHaHBjeTUxY0RzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1MGFXMWxSR1ZzZEdFZ1BTQjBhR2x6TGw5amJHOWpheTVuWlhSRVpXeDBZU2dwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG1SbFkyOXRjRzl6WlNoT2Jpd2dUR01zSUhCNUtTd2dRbTR1YzJWMEtEQXNJREFzSUMweEtTNWhjSEJzZVZGMVlYUmxjbTVwYjI0b1RHTXBMQ0IwTG5CdmMybDBhVzl1V0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTQXJJSFJvYVhNdWRHbHRaVVJsYkhSaE93b2dJQ0FnSUNBZ0lDQWdJQ0IwTG5CdmMybDBhVzl1V0M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2hPYmk1NExDQnBLU3dnZEM1d2IzTnBkR2x2YmxrdWJHbHVaV0Z5VW1GdGNGUnZWbUZzZFdWQmRGUnBiV1VvVG00dWVTd2dhU2tzSUhRdWNHOXphWFJwYjI1YUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0U1dUxub3NJR2twTENCMExtWnZjbmRoY21SWUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0VKdUxuZ3NJR2twTENCMExtWnZjbmRoY21SWkxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0VKdUxua3NJR2twTENCMExtWnZjbmRoY21SYUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0VKdUxub3NJR2twTENCMExuVndXQzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaHVMbmdzSUdrcExDQjBMblZ3V1M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2h1TG5rc0lHa3BMQ0IwTG5Wd1dpNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNodUxub3NJR2twT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwTG5ObGRGQnZjMmwwYVc5dUtFNXVMbmdzSUU1dUxua3NJRTV1TG5vcExDQjBMbk5sZEU5eWFXVnVkR0YwYVc5dUtFSnVMbmdzSUVKdUxua3NJRUp1TG5vc0lHNHVlQ3dnYmk1NUxDQnVMbm9wT3dvZ0lDQWdmUXA5TENCYVlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVFYVmthVzhpTENCMGFHbHpMbXhwYzNSbGJtVnlJRDBnWlN3Z2RHaHBjeTVqYjI1MFpYaDBJRDBnWlM1amIyNTBaWGgwTENCMGFHbHpMbWRoYVc0Z1BTQjBhR2x6TG1OdmJuUmxlSFF1WTNKbFlYUmxSMkZwYmlncExDQjBhR2x6TG1kaGFXNHVZMjl1Ym1WamRDaGxMbWRsZEVsdWNIVjBLQ2twTENCMGFHbHpMbUYxZEc5d2JHRjVJRDBnSVRFc0lIUm9hWE11WW5WbVptVnlJRDBnYm5Wc2JDd2dkR2hwY3k1a1pYUjFibVVnUFNBd0xDQjBhR2x6TG14dmIzQWdQU0FoTVN3Z2RHaHBjeTVzYjI5d1UzUmhjblFnUFNBd0xDQjBhR2x6TG14dmIzQkZibVFnUFNBd0xDQjBhR2x6TG05bVpuTmxkQ0E5SURBc0lIUm9hWE11WkhWeVlYUnBiMjRnUFNCMmIybGtJREFzSUhSb2FYTXVjR3hoZVdKaFkydFNZWFJsSUQwZ01Td2dkR2hwY3k1cGMxQnNZWGxwYm1jZ1BTQWhNU3dnZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQU0FoTUN3Z2RHaHBjeTV6YjNWeVkyVWdQU0J1ZFd4c0xDQjBhR2x6TG5OdmRYSmpaVlI1Y0dVZ1BTQWlaVzF3ZEhraUxDQjBhR2x6TGw5emRHRnlkR1ZrUVhRZ1BTQXdMQ0IwYUdsekxsOXdjbTluY21WemN5QTlJREFzSUhSb2FYTXVYMk52Ym01bFkzUmxaQ0E5SUNFeExDQjBhR2x6TG1acGJIUmxjbk1nUFNCYlhUc0tJQ0FnSUgwS0lDQWdJR2RsZEU5MWRIQjFkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5ZV2x1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBUbTlrWlZOdmRYSmpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhR0Z6VUd4aGVXSmhZMnREYjI1MGNtOXNJRDBnSVRFc0lIUm9hWE11YzI5MWNtTmxWSGx3WlNBOUlDSmhkV1JwYjA1dlpHVWlMQ0IwYUdsekxuTnZkWEpqWlNBOUlHVXNJSFJvYVhNdVkyOXVibVZqZENncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBUV1ZrYVdGRmJHVnRaVzUwVTI5MWNtTmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQU0FoTVN3Z2RHaHBjeTV6YjNWeVkyVlVlWEJsSUQwZ0ltMWxaR2xoVG05a1pTSXNJSFJvYVhNdWMyOTFjbU5sSUQwZ2RHaHBjeTVqYjI1MFpYaDBMbU55WldGMFpVMWxaR2xoUld4bGJXVnVkRk52ZFhKalpTaGxLU3dnZEdocGN5NWpiMjV1WldOMEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJOWldScFlWTjBjbVZoYlZOdmRYSmpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhR0Z6VUd4aGVXSmhZMnREYjI1MGNtOXNJRDBnSVRFc0lIUm9hWE11YzI5MWNtTmxWSGx3WlNBOUlDSnRaV1JwWVZOMGNtVmhiVTV2WkdVaUxDQjBhR2x6TG5OdmRYSmpaU0E5SUhSb2FYTXVZMjl1ZEdWNGRDNWpjbVZoZEdWTlpXUnBZVk4wY21WaGJWTnZkWEpqWlNobEtTd2dkR2hwY3k1amIyNXVaV04wS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkNkV1ptWlhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1KMVptWmxjaUE5SUdVc0lIUm9hWE11YzI5MWNtTmxWSGx3WlNBOUlDSmlkV1ptWlhJaUxDQjBhR2x6TG1GMWRHOXdiR0Y1SUNZbUlIUm9hWE11Y0d4aGVTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjR3hoZVNobElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1selVHeGhlV2x1WnlBOVBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dRWFZrYVc4Z2FYTWdZV3h5WldGa2VTQndiR0Y1YVc1bkxpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1oaGMxQnNZWGxpWVdOclEyOXVkSEp2YkNBOVBUMGdJVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dkR2hwY3lCQmRXUnBieUJvWVhNZ2JtOGdjR3hoZVdKaFkyc2dZMjl1ZEhKdmJDNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbDl6ZEdGeWRHVmtRWFFnUFNCMGFHbHpMbU52Ym5SbGVIUXVZM1Z5Y21WdWRGUnBiV1VnS3lCbE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYjI1MFpYaDBMbU55WldGMFpVSjFabVpsY2xOdmRYSmpaU2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1KMVptWmxjaUE5SUhSb2FYTXVZblZtWm1WeUxDQjBMbXh2YjNBZ1BTQjBhR2x6TG14dmIzQXNJSFF1Ykc5dmNGTjBZWEowSUQwZ2RHaHBjeTVzYjI5d1UzUmhjblFzSUhRdWJHOXZjRVZ1WkNBOUlIUm9hWE11Ykc5dmNFVnVaQ3dnZEM1dmJtVnVaR1ZrSUQwZ2RHaHBjeTV2YmtWdVpHVmtMbUpwYm1Rb2RHaHBjeWtzSUhRdWMzUmhjblFvZEdocGN5NWZjM1JoY25SbFpFRjBMQ0IwYUdsekxsOXdjbTluY21WemN5QXJJSFJvYVhNdWIyWm1jMlYwTENCMGFHbHpMbVIxY21GMGFXOXVLU3dnZEdocGN5NXBjMUJzWVhscGJtY2dQU0FoTUN3Z2RHaHBjeTV6YjNWeVkyVWdQU0IwTENCMGFHbHpMbk5sZEVSbGRIVnVaU2gwYUdsekxtUmxkSFZ1WlNrc0lIUm9hWE11YzJWMFVHeGhlV0poWTJ0U1lYUmxLSFJvYVhNdWNHeGhlV0poWTJ0U1lYUmxLU3dnZEdocGN5NWpiMjV1WldOMEtDazdDaUFnSUNCOUNpQWdJQ0J3WVhWelpTZ3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRWFZrYVc4NklIUm9hWE1nUVhWa2FXOGdhR0Z6SUc1dklIQnNZWGxpWVdOcklHTnZiblJ5YjJ3dUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTlFiR0Y1YVc1bklEMDlQU0FoTUNBbUppQW9kR2hwY3k1ZmNISnZaM0psYzNNZ0t6MGdUV0YwYUM1dFlYZ29kR2hwY3k1amIyNTBaWGgwTG1OMWNuSmxiblJVYVcxbElDMGdkR2hwY3k1ZmMzUmhjblJsWkVGMExDQXdLU0FxSUhSb2FYTXVjR3hoZVdKaFkydFNZWFJsTENCMGFHbHpMbXh2YjNBZ1BUMDlJQ0V3SUNZbUlDaDBhR2x6TGw5d2NtOW5jbVZ6Y3lBOUlIUm9hWE11WDNCeWIyZHlaWE56SUNVZ0tIUm9hWE11WkhWeVlYUnBiMjRnZkh3Z2RHaHBjeTVpZFdabVpYSXVaSFZ5WVhScGIyNHBLU3dnZEdocGN5NXpiM1Z5WTJVdWMzUnZjQ2dwTENCMGFHbHpMbk52ZFhKalpTNXZibVZ1WkdWa0lEMGdiblZzYkN3Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFNBaE1Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkRzl3S0NrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtaGhjMUJzWVhsaVlXTnJRMjl1ZEhKdmJDQTlQVDBnSVRFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1QmRXUnBiem9nZEdocGN5QkJkV1JwYnlCb1lYTWdibThnY0d4aGVXSmhZMnNnWTI5dWRISnZiQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmY0hKdlozSmxjM01nUFNBd0xDQjBhR2x6TG5OdmRYSmpaUzV6ZEc5d0tDa3NJSFJvYVhNdWMyOTFjbU5sTG05dVpXNWtaV1FnUFNCdWRXeHNMQ0IwYUdsekxtbHpVR3hoZVdsdVp5QTlJQ0V4TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5dWJtVmpkQ2dwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1bWFXeDBaWEp6TG14bGJtZDBhQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpiM1Z5WTJVdVkyOXVibVZqZENoMGFHbHpMbVpwYkhSbGNuTmJNRjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHVWdQU0F4TENCMElEMGdkR2hwY3k1bWFXeDBaWEp6TG14bGJtZDBhRHNnWlNBOElIUTdJR1VyS3lsMGFHbHpMbVpwYkhSbGNuTmJaU0F0SURGZExtTnZibTVsWTNRb2RHaHBjeTVtYVd4MFpYSnpXMlZkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bWFXeDBaWEp6VzNSb2FYTXVabWxzZEdWeWN5NXNaVzVuZEdnZ0xTQXhYUzVqYjI1dVpXTjBLSFJvYVhNdVoyVjBUM1YwY0hWMEtDa3BPd29nSUNBZ0lDQWdJSDBnWld4elpTQjBhR2x6TG5OdmRYSmpaUzVqYjI1dVpXTjBLSFJvYVhNdVoyVjBUM1YwY0hWMEtDa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5amIyNXVaV04wWldRZ1BTQWhNQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwYzJOdmJtNWxZM1FvS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVptbHNkR1Z5Y3k1c1pXNW5kR2dnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMjkxY21ObExtUnBjMk52Ym01bFkzUW9kR2hwY3k1bWFXeDBaWEp6V3pCZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Td2dkQ0E5SUhSb2FYTXVabWxzZEdWeWN5NXNaVzVuZEdnN0lHVWdQQ0IwT3lCbEt5c3BkR2hwY3k1bWFXeDBaWEp6VzJVZ0xTQXhYUzVrYVhOamIyNXVaV04wS0hSb2FYTXVabWxzZEdWeWMxdGxYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wm1sc2RHVnljMXQwYUdsekxtWnBiSFJsY25NdWJHVnVaM1JvSUMwZ01WMHVaR2x6WTI5dWJtVmpkQ2gwYUdsekxtZGxkRTkxZEhCMWRDZ3BLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdkR2hwY3k1emIzVnlZMlV1WkdselkyOXVibVZqZENoMGFHbHpMbWRsZEU5MWRIQjFkQ2dwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZZMjl1Ym1WamRHVmtJRDBnSVRFc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkdhV3gwWlhKektDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1acGJIUmxjbk03Q2lBZ0lDQjlDaUFnSUNCelpYUkdhV3gwWlhKektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0I4ZkNBb1pTQTlJRnRkS1N3Z2RHaHBjeTVmWTI5dWJtVmpkR1ZrSUQwOVBTQWhNQ0EvSUNoMGFHbHpMbVJwYzJOdmJtNWxZM1FvS1N3Z2RHaHBjeTVtYVd4MFpYSnpJRDBnWlM1emJHbGpaU2dwTENCMGFHbHpMbU52Ym01bFkzUW9LU2tnT2lCMGFHbHpMbVpwYkhSbGNuTWdQU0JsTG5Oc2FXTmxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSRVpYUjFibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtUmxkSFZ1WlNBOUlHVXNJSFJvYVhNdWMyOTFjbU5sTG1SbGRIVnVaU0FoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnZEdocGN5NXBjMUJzWVhscGJtY2dQVDA5SUNFd0lDWW1JSFJvYVhNdWMyOTFjbU5sTG1SbGRIVnVaUzV6WlhSVVlYSm5aWFJCZEZScGJXVW9kR2hwY3k1a1pYUjFibVVzSUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU3dnTGpBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRVJsZEhWdVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1pYUjFibVU3Q2lBZ0lDQjlDaUFnSUNCblpYUkdhV3gwWlhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFJtbHNkR1Z5Y3lncFd6QmRPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJtbHNkR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhSR2FXeDBaWEp6S0dVZ1B5QmJDaUFnSUNBZ0lDQWdJQ0FnSUdVS0lDQWdJQ0FnSUNCZElEb2dXMTBwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVR3hoZVdKaFkydFNZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFYVmthVzg2SUhSb2FYTWdRWFZrYVc4Z2FHRnpJRzV2SUhCc1lYbGlZV05ySUdOdmJuUnliMnd1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0d4aGVXSmhZMnRTWVhSbElEMGdaU3dnZEdocGN5NXBjMUJzWVhscGJtY2dQVDA5SUNFd0lDWW1JSFJvYVhNdWMyOTFjbU5sTG5Cc1lYbGlZV05yVW1GMFpTNXpaWFJVWVhKblpYUkJkRlJwYldVb2RHaHBjeTV3YkdGNVltRmphMUpoZEdVc0lIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlN3Z0xqQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEZCc1lYbGlZV05yVW1GMFpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d2JHRjVZbUZqYTFKaGRHVTdDaUFnSUNCOUNpQWdJQ0J2YmtWdVpHVmtLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhWE5RYkdGNWFXNW5JRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJNYjI5d0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1oaGMxQnNZWGxpWVdOclEyOXVkSEp2YkNBOVBUMGdJVEVnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYnpvZ2RHaHBjeUJCZFdScGJ5Qm9ZWE1nYm04Z2NHeGhlV0poWTJzZ1kyOXVkSEp2YkM0aUtTd2dJVEVwSURvZ2RHaHBjeTVzYjI5d093b2dJQ0FnZlFvZ0lDQWdjMlYwVEc5dmNDaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YUdGelVHeGhlV0poWTJ0RGIyNTBjbTlzSUQwOVBTQWhNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0YxWkdsdk9pQjBhR2x6SUVGMVpHbHZJR2hoY3lCdWJ5QndiR0Y1WW1GamF5QmpiMjUwY205c0xpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxteHZiM0FnUFNCbExDQjBhR2x6TG1selVHeGhlV2x1WnlBOVBUMGdJVEFnSmlZZ0tIUm9hWE11YzI5MWNtTmxMbXh2YjNBZ1BTQjBhR2x6TG14dmIzQXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVEc5dmNGTjBZWEowS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVzYjI5d1UzUmhjblFnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBURzl2Y0VWdVpDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJHOXZjRVZ1WkNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJXYjJ4MWJXVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyRnBiaTVuWVdsdUxuWmhiSFZsT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWbTlzZFcxbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bllXbHVMbWRoYVc0dWMyVjBWR0Z5WjJWMFFYUlVhVzFsS0dVc0lIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlN3Z0xqQXhLU3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dlbTRnUFNCdVpYY2dUU3dnVW1NZ1BTQnVaWGNnWjNRc0lHZDVJRDBnYm1WM0lFMHNJRlZ1SUQwZ2JtVjNJRTBzSUhoNUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCYVlTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuQmhibTVsY2lBOUlIUm9hWE11WTI5dWRHVjRkQzVqY21WaGRHVlFZVzV1WlhJb0tTd2dkR2hwY3k1d1lXNXVaWEl1Y0dGdWJtbHVaMDF2WkdWc0lEMGdJa2hTVkVZaUxDQjBhR2x6TG5CaGJtNWxjaTVqYjI1dVpXTjBLSFJvYVhNdVoyRnBiaWs3Q2lBZ0lDQjlDaUFnSUNCblpYUlBkWFJ3ZFhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dGdWJtVnlPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVtVm1SR2x6ZEdGdVkyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHRnVibVZ5TG5KbFprUnBjM1JoYm1ObE93b2dJQ0FnZlFvZ0lDQWdjMlYwVW1WbVJHbHpkR0Z1WTJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGJtNWxjaTV5WldaRWFYTjBZVzVqWlNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJTYjJ4c2IyWm1SbUZqZEc5eUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGJtNWxjaTV5YjJ4c2IyWm1SbUZqZEc5eU93b2dJQ0FnZlFvZ0lDQWdjMlYwVW05c2JHOW1aa1poWTNSdmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHRnVibVZ5TG5KdmJHeHZabVpHWVdOMGIzSWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFJHbHpkR0Z1WTJWTmIyUmxiQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdVpHbHpkR0Z1WTJWTmIyUmxiRHNLSUNBZ0lIMEtJQ0FnSUhObGRFUnBjM1JoYm1ObFRXOWtaV3dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNWthWE4wWVc1alpVMXZaR1ZzSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoZUVScGMzUmhibU5sS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNXRZWGhFYVhOMFlXNWpaVHNLSUNBZ0lIMEtJQ0FnSUhObGRFMWhlRVJwYzNSaGJtTmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdWJXRjRSR2x6ZEdGdVkyVWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJHbHlaV04wYVc5dVlXeERiMjVsS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdVkyOXVaVWx1Ym1WeVFXNW5iR1VnUFNCbExDQjBhR2x6TG5CaGJtNWxjaTVqYjI1bFQzVjBaWEpCYm1kc1pTQTlJSFFzSUhSb2FYTXVjR0Z1Ym1WeUxtTnZibVZQZFhSbGNrZGhhVzRnUFNCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoemRYQmxjaTUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1N3Z2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFQwOUlDRXdJQ1ltSUhSb2FYTXVhWE5RYkdGNWFXNW5JRDA5UFNBaE1Ta2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRWMjl5YkdRdVpHVmpiMjF3YjNObEtIcHVMQ0JTWXl3Z1oza3BMQ0JWYmk1elpYUW9NQ3dnTUN3Z01Ta3VZWEJ3YkhsUmRXRjBaWEp1YVc5dUtGSmpLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNHRnVibVZ5T3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbkJ2YzJsMGFXOXVXQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlNBcklIUm9hWE11YkdsemRHVnVaWEl1ZEdsdFpVUmxiSFJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbkJ2YzJsMGFXOXVXQzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaDZiaTU0TENCdUtTd2dkQzV3YjNOcGRHbHZibGt1YkdsdVpXRnlVbUZ0Y0ZSdlZtRnNkV1ZCZEZScGJXVW9lbTR1ZVN3Z2Jpa3NJSFF1Y0c5emFYUnBiMjVhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLSHB1TG5vc0lHNHBMQ0IwTG05eWFXVnVkR0YwYVc5dVdDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNoVmJpNTRMQ0J1S1N3Z2RDNXZjbWxsYm5SaGRHbHZibGt1YkdsdVpXRnlVbUZ0Y0ZSdlZtRnNkV1ZCZEZScGJXVW9WVzR1ZVN3Z2Jpa3NJSFF1YjNKcFpXNTBZWFJwYjI1YUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0ZWdUxub3NJRzRwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwTG5ObGRGQnZjMmwwYVc5dUtIcHVMbmdzSUhwdUxua3NJSHB1TG5vcExDQjBMbk5sZEU5eWFXVnVkR0YwYVc5dUtGVnVMbmdzSUZWdUxua3NJRlZ1TG5vcE93b2dJQ0FnZlFwOUxDQnhhQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXlNRFE0S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbUZ1WVd4NWMyVnlJRDBnWlM1amIyNTBaWGgwTG1OeVpXRjBaVUZ1WVd4NWMyVnlLQ2tzSUhSb2FYTXVZVzVoYkhselpYSXVabVowVTJsNlpTQTlJSFFzSUhSb2FYTXVaR0YwWVNBOUlHNWxkeUJWYVc1ME9FRnljbUY1S0hSb2FYTXVZVzVoYkhselpYSXVabkpsY1hWbGJtTjVRbWx1UTI5MWJuUXBMQ0JsTG1kbGRFOTFkSEIxZENncExtTnZibTVsWTNRb2RHaHBjeTVoYm1Gc2VYTmxjaWs3Q2lBZ0lDQjlDaUFnSUNCblpYUkdjbVZ4ZFdWdVkzbEVZWFJoS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ1WVd4NWMyVnlMbWRsZEVKNWRHVkdjbVZ4ZFdWdVkzbEVZWFJoS0hSb2FYTXVaR0YwWVNrc0lIUm9hWE11WkdGMFlUc0tJQ0FnSUgwS0lDQWdJR2RsZEVGMlpYSmhaMlZHY21WeGRXVnVZM2tvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBd0xDQjBJRDBnZEdocGN5NW5aWFJHY21WeGRXVnVZM2xFWVhSaEtDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJSFF1YkdWdVozUm9PeUJ1S3lzcFpTQXJQU0IwVzI1ZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDOGdkQzVzWlc1bmRHZzdDaUFnSUNCOUNuMHNJRmhvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnZEdocGN5NWlhVzVrYVc1bklEMGdaU3dnZEdocGN5NTJZV3gxWlZOcGVtVWdQU0J1T3dvZ0lDQWdJQ0FnSUd4bGRDQnBMQ0J5TENCdk93b2dJQ0FnSUNBZ0lITjNhWFJqYUNoMEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWljWFZoZEdWeWJtbHZiaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2RHaHBjeTVmYzJ4bGNuQXNJSElnUFNCMGFHbHpMbDl6YkdWeWNFRmtaR2wwYVhabExDQnZJRDBnZEdocGN5NWZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVkYxWVhSbGNtNXBiMjRzSUhSb2FYTXVZblZtWm1WeUlEMGdibVYzSUVac2IyRjBOalJCY25KaGVTaHVJQ29nTmlrc0lIUm9hWE11WDNkdmNtdEpibVJsZUNBOUlEVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWMzUnlhVzVuSWpvS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVltOXZiQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2RHaHBjeTVmYzJWc1pXTjBMQ0J5SUQwZ2RHaHBjeTVmYzJWc1pXTjBMQ0J2SUQwZ2RHaHBjeTVmYzJWMFFXUmthWFJwZG1WSlpHVnVkR2wwZVU5MGFHVnlMQ0IwYUdsekxtSjFabVpsY2lBOUlHNWxkeUJCY25KaGVTaHVJQ29nTlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1BTQjBhR2x6TGw5c1pYSndMQ0J5SUQwZ2RHaHBjeTVmYkdWeWNFRmtaR2wwYVhabExDQnZJRDBnZEdocGN5NWZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVTUxYldWeWFXTXNJSFJvYVhNdVluVm1abVZ5SUQwZ2JtVjNJRVpzYjJGME5qUkJjbkpoZVNodUlDb2dOU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJpQTlJR2tzSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJrRmtaR2wwYVhabElEMGdjaXdnZEdocGN5NWZjMlYwU1dSbGJuUnBkSGtnUFNCdkxDQjBhR2x6TGw5dmNtbG5TVzVrWlhnZ1BTQXpMQ0IwYUdsekxsOWhaR1JKYm1SbGVDQTlJRFFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RDQTlJREFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RFRmtaR2wwYVhabElEMGdNQ3dnZEdocGN5NTFjMlZEYjNWdWRDQTlJREFzSUhSb2FYTXVjbVZtWlhKbGJtTmxRMjkxYm5RZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWVdOamRXMTFiR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtSjFabVpsY2l3Z2FTQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQnlJRDBnWlNBcUlHa2dLeUJwTENCdklEMGdkR2hwY3k1amRXMTFiR0YwYVhabFYyVnBaMmgwT3dvZ0lDQWdJQ0FnSUdsbUlDaHZJRDA5UFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQTdJR0VnSVQwOUlHazdJQ3NyWVNsdVczSWdLeUJoWFNBOUlHNWJZVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0IwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdLejBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBJQzhnYnpzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmJXbDRRblZtWm1WeVVtVm5hVzl1S0c0c0lISXNJREFzSUdFc0lHa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxtTjFiWFZzWVhScGRtVlhaV2xuYUhRZ1BTQnZPd29nSUNBZ2ZRb2dJQ0FnWVdOamRXMTFiR0YwWlVGa1pHbDBhWFpsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WW5WbVptVnlMQ0J1SUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVzSUdrZ1BTQnVJQ29nZEdocGN5NWZZV1JrU1c1a1pYZzdDaUFnSUNBZ0lDQWdkR2hwY3k1amRXMTFiR0YwYVhabFYyVnBaMmgwUVdSa2FYUnBkbVVnUFQwOUlEQWdKaVlnZEdocGN5NWZjMlYwU1dSbGJuUnBkSGtvS1N3Z2RHaHBjeTVmYldsNFFuVm1abVZ5VW1WbmFXOXVRV1JrYVhScGRtVW9kQ3dnYVN3Z01Dd2daU3dnYmlrc0lIUm9hWE11WTNWdGRXeGhkR2wyWlZkbGFXZG9kRUZrWkdsMGFYWmxJQ3M5SUdVN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5aaGJIVmxVMmw2WlN3Z2JpQTlJSFJvYVhNdVluVm1abVZ5TENCcElEMGdaU0FxSUhRZ0t5QjBMQ0J5SUQwZ2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBMQ0J2SUQwZ2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBRV1JrYVhScGRtVXNJR0VnUFNCMGFHbHpMbUpwYm1ScGJtYzdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RDQTlJREFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RFRmtaR2wwYVhabElEMGdNQ3dnY2lBOElERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCMElDb2dkR2hwY3k1ZmIzSnBaMGx1WkdWNE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXRhWGhDZFdabVpYSlNaV2RwYjI0b2Jpd2dhU3dnYkN3Z01TQXRJSElzSUhRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnZJRDRnTUNBbUppQjBhR2x6TGw5dGFYaENkV1ptWlhKU1pXZHBiMjVCWkdScGRHbDJaU2h1TENCcExDQjBhR2x6TGw5aFpHUkpibVJsZUNBcUlIUXNJREVzSUhRcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJSFFzSUdNZ1BTQjBJQ3NnZERzZ2JDQWhQVDBnWXpzZ0t5dHNLV2xtSUNodVcyeGRJQ0U5UFNCdVcyd2dLeUIwWFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JoTG5ObGRGWmhiSFZsS0c0c0lHa3BPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCellYWmxUM0pwWjJsdVlXeFRkR0YwWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WW1sdVpHbHVaeXdnZENBOUlIUm9hWE11WW5WbVptVnlMQ0J1SUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVzSUdrZ1BTQnVJQ29nZEdocGN5NWZiM0pwWjBsdVpHVjRPd29nSUNBZ0lDQWdJR1V1WjJWMFZtRnNkV1VvZEN3Z2FTazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnYml3Z2J5QTlJR2s3SUhJZ0lUMDlJRzg3SUNzcmNpbDBXM0pkSUQwZ2RGdHBJQ3NnY2lBbElHNWRPd29nSUNBZ0lDQWdJSFJvYVhNdVgzTmxkRWxrWlc1MGFYUjVLQ2tzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RDQTlJREFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RFRmtaR2wwYVhabElEMGdNRHNLSUNBZ0lIMEtJQ0FnSUhKbGMzUnZjbVZQY21sbmFXNWhiRk4wWVhSbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1MllXeDFaVk5wZW1VZ0tpQXpPd29nSUNBZ0lDQWdJSFJvYVhNdVltbHVaR2x1Wnk1elpYUldZV3gxWlNoMGFHbHpMbUoxWm1abGNpd2daU2s3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBRV1JrYVhScGRtVkpaR1Z1ZEdsMGVVNTFiV1Z5YVdNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TGw5aFpHUkpibVJsZUNBcUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCMElEMGdaU0FySUhSb2FYTXVkbUZzZFdWVGFYcGxPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SUdVN0lHNGdQQ0IwT3lCdUt5c3BkR2hwY3k1aWRXWm1aWEpiYmwwZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWDNObGRFRmtaR2wwYVhabFNXUmxiblJwZEhsUmRXRjBaWEp1YVc5dUtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgzTmxkRUZrWkdsMGFYWmxTV1JsYm5ScGRIbE9kVzFsY21saktDa3NJSFJvYVhNdVluVm1abVZ5VzNSb2FYTXVYMkZrWkVsdVpHVjRJQ29nZEdocGN5NTJZV3gxWlZOcGVtVWdLeUF6WFNBOUlERTdDaUFnSUNCOUNpQWdJQ0JmYzJWMFFXUmthWFJwZG1WSlpHVnVkR2wwZVU5MGFHVnlLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZiM0pwWjBsdVpHVjRJQ29nZEdocGN5NTJZV3gxWlZOcGVtVXNJSFFnUFNCMGFHbHpMbDloWkdSSmJtUmxlQ0FxSUhSb2FYTXVkbUZzZFdWVGFYcGxPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0IwYUdsekxuWmhiSFZsVTJsNlpUc2diaXNyS1hSb2FYTXVZblZtWm1WeVczUWdLeUJ1WFNBOUlIUm9hWE11WW5WbVptVnlXMlVnS3lCdVhUc0tJQ0FnSUgwS0lDQWdJRjl6Wld4bFkzUW9aU3dnZEN3Z2Jpd2dhU3dnY2lrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hwSUQ0OUlDNDFLU0JtYjNJb2JHVjBJRzhnUFNBd095QnZJQ0U5UFNCeU95QXJLMjhwWlZ0MElDc2diMTBnUFNCbFcyNGdLeUJ2WFRzS0lDQWdJSDBLSUNBZ0lGOXpiR1Z5Y0NobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdaM1F1YzJ4bGNuQkdiR0YwS0dVc0lIUXNJR1VzSUhRc0lHVXNJRzRzSUdrcE93b2dJQ0FnZlFvZ0lDQWdYM05zWlhKd1FXUmthWFJwZG1Vb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnZEdocGN5NWZkMjl5YTBsdVpHVjRJQ29nY2pzS0lDQWdJQ0FnSUNCbmRDNXRkV3gwYVhCc2VWRjFZWFJsY201cGIyNXpSbXhoZENobExDQnZMQ0JsTENCMExDQmxMQ0J1S1N3Z1ozUXVjMnhsY25CR2JHRjBLR1VzSUhRc0lHVXNJSFFzSUdVc0lHOHNJR2twT3dvZ0lDQWdmUW9nSUNBZ1gyeGxjbkFvWlN3Z2RDd2diaXdnYVN3Z2Npa2dld29nSUNBZ0lDQWdJR3hsZENCdklEMGdNU0F0SUdrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaElEMGdNRHNnWVNBaFBUMGdjanNnS3l0aEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0IwSUNzZ1lUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlZ0c1hTQTlJR1ZiYkYwZ0tpQnZJQ3NnWlZ0dUlDc2dZVjBnS2lCcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJRjlzWlhKd1FXUmthWFJwZG1Vb1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQTdJRzhnSVQwOUlISTdJQ3NyYnlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdkQ0FySUc4N0NpQWdJQ0FnSUNBZ0lDQWdJR1ZiWVYwZ1BTQmxXMkZkSUNzZ1pWdHVJQ3NnYjEwZ0tpQnBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU3dnSkdFZ1BTQWlYRnhiWEZ4ZFhGd3VPbHhjTHlJc0lIbDVJRDBnYm1WM0lGSmxaMFY0Y0NnaVd5SWdLeUFrWVNBcklDSmRJaXdnSW1jaUtTd2dhbUVnUFNBaVcxNGlJQ3NnSkdFZ0t5QWlYU0lzSUhaNUlEMGdJbHRlSWlBcklDUmhMbkpsY0d4aFkyVW9JbHhjTGlJc0lDSWlLU0FySUNKZElpd2dYM2tnUFNBdktDZy9PbGRESzF0Y0x6cGRLU29wTHk1emIzVnlZMlV1Y21Wd2JHRmpaU2dpVjBNaUxDQnFZU2tzSUUxNUlEMGdMeWhYUTA5RUt5ay9MeTV6YjNWeVkyVXVjbVZ3YkdGalpTZ2lWME5QUkNJc0lIWjVLU3dnWW5rZ1BTQXZLRDg2WEM0b1YwTXJLU2cvT2x4YktDNHJLVnhkS1Q4cFB5OHVjMjkxY21ObExuSmxjR3hoWTJVb0lsZERJaXdnYW1FcExDQjNlU0E5SUM5Y0xpaFhReXNwS0Q4NlhGc29MaXNwWEYwcFB5OHVjMjkxY21ObExuSmxjR3hoWTJVb0lsZERJaXdnYW1FcExDQlRlU0E5SUc1bGR5QlNaV2RGZUhBb0lsNGlJQ3NnWDNrZ0t5Qk5lU0FySUdKNUlDc2dkM2tnS3lBaUpDSXBMQ0JVZVNBOUlGc0tJQ0FnSUNKdFlYUmxjbWxoYkNJc0NpQWdJQ0FpYldGMFpYSnBZV3h6SWl3S0lDQWdJQ0ppYjI1bGN5SUtYU3dnU21nZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc0Z2ZId2dhMlV1Y0dGeWMyVlVjbUZqYTA1aGJXVW9kQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZkR0Z5WjJWMFIzSnZkWEFnUFNCbExDQjBhR2x6TGw5aWFXNWthVzVuY3lBOUlHVXVjM1ZpYzJOeWFXSmxYeWgwTENCcEtUc0tJQ0FnSUgwS0lDQWdJR2RsZEZaaGJIVmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1KcGJtUW9LVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgzUmhjbWRsZEVkeWIzVndMbTVEWVdOb1pXUlBZbXBsWTNSelh5d2dhU0E5SUhSb2FYTXVYMkpwYm1ScGJtZHpXMjVkT3dvZ0lDQWdJQ0FnSUdrZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG1kbGRGWmhiSFZsS0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZtRnNkV1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1ZlltbHVaR2x1WjNNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdkR2hwY3k1ZmRHRnlaMlYwUjNKdmRYQXVia05oWTJobFpFOWlhbVZqZEhOZkxDQnlJRDBnYmk1c1pXNW5kR2c3SUdrZ0lUMDlJSEk3SUNzcmFTbHVXMmxkTG5ObGRGWmhiSFZsS0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnWW1sdVpDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVgySnBibVJwYm1kek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJSFJvYVhNdVgzUmhjbWRsZEVkeWIzVndMbTVEWVdOb1pXUlBZbXBsWTNSelh5d2diaUE5SUdVdWJHVnVaM1JvT3lCMElDRTlQU0J1T3lBckszUXBaVnQwWFM1aWFXNWtLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWJtSnBibVFvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbDlpYVc1a2FXNW5jenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNCMGFHbHpMbDkwWVhKblpYUkhjbTkxY0M1dVEyRmphR1ZrVDJKcVpXTjBjMThzSUc0Z1BTQmxMbXhsYm1kMGFEc2dkQ0FoUFQwZ2Jqc2dLeXQwS1dWYmRGMHVkVzVpYVc1a0tDazdDaUFnSUNCOUNuMHNJR3RsSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdZWFJvSUQwZ2RDd2dkR2hwY3k1d1lYSnpaV1JRWVhSb0lEMGdiaUI4ZkNCclpTNXdZWEp6WlZSeVlXTnJUbUZ0WlNoMEtTd2dkR2hwY3k1dWIyUmxJRDBnYTJVdVptbHVaRTV2WkdVb1pTd2dkR2hwY3k1d1lYSnpaV1JRWVhSb0xtNXZaR1ZPWVcxbEtTQjhmQ0JsTENCMGFHbHpMbkp2YjNST2IyUmxJRDBnWlN3Z2RHaHBjeTVuWlhSV1lXeDFaU0E5SUhSb2FYTXVYMmRsZEZaaGJIVmxYM1Z1WW05MWJtUXNJSFJvYVhNdWMyVjBWbUZzZFdVZ1BTQjBhR2x6TGw5elpYUldZV3gxWlY5MWJtSnZkVzVrT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdOeVpXRjBaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnSmlZZ1pTNXBjMEZ1YVcxaGRHbHZiazlpYW1WamRFZHliM1Z3SUQ4Z2JtVjNJR3RsTGtOdmJYQnZjMmwwWlNobExDQjBMQ0J1S1NBNklHNWxkeUJyWlNobExDQjBMQ0J1S1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCellXNXBkR2w2WlU1dlpHVk9ZVzFsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXlaWEJzWVdObEtDOWNjeTluTENBaVh5SXBMbkpsY0d4aFkyVW9lWGtzSUNJaUtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QndZWEp6WlZSeVlXTnJUbUZ0WlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQlRlUzVsZUdWaktHVXBPd29nSUNBZ0lDQWdJR2xtSUNnaGRDa2dkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSlFjbTl3WlhKMGVVSnBibVJwYm1jNklFTmhibTV2ZENCd1lYSnpaU0IwY21GamEwNWhiV1U2SUNJZ0t5QmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JtOWtaVTVoYldVNklIUmJNbDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZEU1aGJXVTZJSFJiTTEwc0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamRFbHVaR1Y0T2lCMFd6UmRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowZVU1aGJXVTZJSFJiTlYwc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNCbGNuUjVTVzVrWlhnNklIUmJObDBLSUNBZ0lDQWdJQ0I5TENCcElEMGdiaTV1YjJSbFRtRnRaU0FtSmlCdUxtNXZaR1ZPWVcxbExteGhjM1JKYm1SbGVFOW1LQ0l1SWlrN0NpQWdJQ0FnSUNBZ2FXWWdLR2tnSVQwOUlIWnZhV1FnTUNBbUppQnBJQ0U5UFNBdE1Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc0dWJtOWtaVTVoYldVdWMzVmljM1J5YVc1bktHa2dLeUF4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdWSGt1YVc1a1pYaFBaaWh5S1NBaFBUMGdMVEVnSmlZZ0tHNHVibTlrWlU1aGJXVWdQU0J1TG01dlpHVk9ZVzFsTG5OMVluTjBjbWx1Wnlnd0xDQnBLU3dnYmk1dlltcGxZM1JPWVcxbElEMGdjaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHVMbkJ5YjNCbGNuUjVUbUZ0WlNBOVBUMGdiblZzYkNCOGZDQnVMbkJ5YjNCbGNuUjVUbUZ0WlM1c1pXNW5kR2dnUFQwOUlEQXBJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lVSEp2Y0dWeWRIbENhVzVrYVc1bk9pQmpZVzRnYm05MElIQmhjbk5sSUhCeWIzQmxjblI1VG1GdFpTQm1jbTl0SUhSeVlXTnJUbUZ0WlRvZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1T3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdacGJtUk9iMlJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb0lYUWdmSHdnZENBOVBUMGdJaUlnZkh3Z2RDQTlQVDBnSWk0aUlIeDhJSFFnUFQwOUlDMHhJSHg4SUhRZ1BUMDlJR1V1Ym1GdFpTQjhmQ0IwSUQwOVBTQmxMblYxYVdRcElISmxkSFZ5YmlCbE93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG5OclpXeGxkRzl1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzV6YTJWc1pYUnZiaTVuWlhSQ2IyNWxRbmxPWVcxbEtIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaUFoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnYmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1V1WTJocGJHUnlaVzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQm1kVzVqZEdsdmJpaHlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd095QnZJRHdnY2k1c1pXNW5kR2c3SUc4ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J5VzI5ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaExtNWhiV1VnUFQwOUlIUWdmSHdnWVM1MWRXbGtJRDA5UFNCMEtTQnlaWFIxY200Z1lUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJRzRvWVM1amFHbHNaSEpsYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3cElISmxkSFZ5YmlCc093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0lHa2dQU0J1S0dVdVkyaHBiR1J5Wlc0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTa2djbVYwZFhKdUlHazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdmUW9nSUNBZ1gyZGxkRlpoYkhWbFgzVnVZWFpoYVd4aFlteGxLQ2tnZTMwS0lDQWdJRjl6WlhSV1lXeDFaVjkxYm1GMllXbHNZV0pzWlNncElIdDlDaUFnSUNCZloyVjBWbUZzZFdWZlpHbHlaV04wS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JsVzNSZElEMGdkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUmJkR2hwY3k1d2NtOXdaWEowZVU1aGJXVmRPd29nSUNBZ2ZRb2dJQ0FnWDJkbGRGWmhiSFZsWDJGeWNtRjVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnYmk1c1pXNW5kR2c3SUdrZ0lUMDlJSEk3SUNzcmFTbGxXM1FySzEwZ1BTQnVXMmxkT3dvZ0lDQWdmUW9nSUNBZ1gyZGxkRlpoYkhWbFgyRnljbUY1Uld4bGJXVnVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdaVnQwWFNBOUlIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlVnQwYUdsekxuQnliM0JsY25SNVNXNWtaWGhkT3dvZ0lDQWdmUW9nSUNBZ1gyZGxkRlpoYkhWbFgzUnZRWEp5WVhrb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVTNTBiMEZ5Y21GNUtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgyUnBjbVZqZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBZWEpuWlhSUFltcGxZM1JiZEdocGN5NXdjbTl3WlhKMGVVNWhiV1ZkSUQwZ1pWdDBYVHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5a2FYSmxZM1JmYzJWMFRtVmxaSE5WY0dSaGRHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZEdGeVoyVjBUMkpxWldOMFczUm9hWE11Y0hKdmNHVnlkSGxPWVcxbFhTQTlJR1ZiZEYwc0lIUm9hWE11ZEdGeVoyVjBUMkpxWldOMExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZaR2x5WldOMFgzTmxkRTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wVzNSb2FYTXVjSEp2Y0dWeWRIbE9ZVzFsWFNBOUlHVmJkRjBzSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wTG0xaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOWhjbkpoZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb095QnBJQ0U5UFNCeU95QXJLMmtwYmx0cFhTQTlJR1ZiZENzclhUc0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjloY25KaGVWOXpaWFJPWldWa2MxVndaR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb095QnBJQ0U5UFNCeU95QXJLMmtwYmx0cFhTQTlJR1ZiZENzclhUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYMkZ5Y21GNVgzTmxkRTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQnVMbXhsYm1kMGFEc2dhU0FoUFQwZ2Nqc2dLeXRwS1c1YmFWMGdQU0JsVzNRcksxMDdDaUFnSUNBZ0lDQWdkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUXViV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmJIWmxaRkJ5YjNCbGNuUjVXM1JvYVhNdWNISnZjR1Z5ZEhsSmJtUmxlRjBnUFNCbFczUmRPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRGOXpaWFJPWldWa2MxVndaR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNVczUm9hWE11Y0hKdmNHVnlkSGxKYm1SbGVGMGdQU0JsVzNSZExDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYMkZ5Y21GNVJXeGxiV1Z1ZEY5elpYUk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhsYmRHaHBjeTV3Y205d1pYSjBlVWx1WkdWNFhTQTlJR1ZiZEYwc0lIUm9hWE11ZEdGeVoyVjBUMkpxWldOMExtMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjltY205dFFYSnlZWGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNtVnpiMngyWldSUWNtOXdaWEowZVM1bWNtOXRRWEp5WVhrb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBWbUZzZFdWZlpuSnZiVUZ5Y21GNVgzTmxkRTVsWldSelZYQmtZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrdVpuSnZiVUZ5Y21GNUtHVXNJSFFwTENCMGFHbHpMblJoY21kbGRFOWlhbVZqZEM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgyWnliMjFCY25KaGVWOXpaWFJOWVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa3Vabkp2YlVGeWNtRjVLR1VzSUhRcExDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXRZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNCOUNpQWdJQ0JmWjJWMFZtRnNkV1ZmZFc1aWIzVnVaQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1aWFXNWtLQ2tzSUhSb2FYTXVaMlYwVm1Gc2RXVW9aU3dnZENrN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZkVzVpYjNWdVpDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYVc1a0tDa3NJSFJvYVhNdWMyVjBWbUZzZFdVb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCaWFXNWtLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NXViMlJsTENCMElEMGdkR2hwY3k1d1lYSnpaV1JRWVhSb0xDQnVJRDBnZEM1dlltcGxZM1JPWVcxbExDQnBJRDBnZEM1d2NtOXdaWEowZVU1aGJXVXNJSElnUFNCMExuQnliM0JsY25SNVNXNWtaWGc3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdmSHdnS0dVZ1BTQnJaUzVtYVc1a1RtOWtaU2gwYUdsekxuSnZiM1JPYjJSbExDQjBMbTV2WkdWT1lXMWxLU0I4ZkNCMGFHbHpMbkp2YjNST2IyUmxMQ0IwYUdsekxtNXZaR1VnUFNCbEtTd2dkR2hwY3k1blpYUldZV3gxWlNBOUlIUm9hWE11WDJkbGRGWmhiSFZsWDNWdVlYWmhhV3hoWW14bExDQjBhR2x6TG5ObGRGWmhiSFZsSUQwZ2RHaHBjeTVmYzJWMFZtRnNkV1ZmZFc1aGRtRnBiR0ZpYkdVc0lDRmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbEJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dWSEo1YVc1bklIUnZJSFZ3WkdGMFpTQnViMlJsSUdadmNpQjBjbUZqYXpvZ0lpQXJJSFJvYVhNdWNHRjBhQ0FySUNJZ1luVjBJR2wwSUhkaGMyNG5kQ0JtYjNWdVpDNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9iaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlIUXViMkpxWldOMFNXNWtaWGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNodUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW0xaGRHVnlhV0ZzY3lJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGbExtMWhkR1Z5YVdGc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbEJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dRMkZ1SUc1dmRDQmlhVzVrSUhSdklHMWhkR1Z5YVdGc0lHRnpJRzV2WkdVZ1pHOWxjeUJ1YjNRZ2FHRjJaU0JoSUcxaGRHVnlhV0ZzTGlJc0lIUm9hWE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWlM1dFlYUmxjbWxoYkM1dFlYUmxjbWxoYkhNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVSEp2Y0dWeWRIbENhVzVrYVc1bk9pQkRZVzRnYm05MElHSnBibVFnZEc4Z2JXRjBaWEpwWVd3dWJXRjBaWEpwWVd4eklHRnpJRzV2WkdVdWJXRjBaWEpwWVd3Z1pHOWxjeUJ1YjNRZ2FHRjJaU0JoSUcxaGRHVnlhV0ZzY3lCaGNuSmhlUzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbElEMGdaUzV0WVhSbGNtbGhiQzV0WVhSbGNtbGhiSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSmliMjVsY3lJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGbExuTnJaV3hsZEc5dUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbEJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dRMkZ1SUc1dmRDQmlhVzVrSUhSdklHSnZibVZ6SUdGeklHNXZaR1VnWkc5bGN5QnViM1FnYUdGMlpTQmhJSE5yWld4bGRHOXVMaUlzSUhSb2FYTXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVZ1BTQmxMbk5yWld4bGRHOXVMbUp2Ym1Wek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBN0lHZ2dQQ0JsTG14bGJtZDBhRHNnYUNzcktXbG1JQ2hsVzJoZExtNWhiV1VnUFQwOUlHTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZeUE5SUdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1ZiYmwwZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRU5oYmlCdWIzUWdZbWx1WkNCMGJ5QnZZbXBsWTNST1lXMWxJRzltSUc1dlpHVWdkVzVrWldacGJtVmtMaUlzSUhSb2FYTXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVZ1BTQmxXMjVkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxXMk5kSUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWNtOXdaWEowZVVKcGJtUnBibWM2SUZSeWVXbHVaeUIwYnlCaWFXNWtJSFJ2SUc5aWFtVmpkRWx1WkdWNElHOW1JRzlpYW1WamRFNWhiV1VzSUdKMWRDQnBjeUIxYm1SbFptbHVaV1F1SWl3Z2RHaHBjeXdnWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJR1ZiWTEwN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsVzJsZE93b2dJQ0FnSUNBZ0lHbG1JQ2h2SUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0IwTG01dlpHVk9ZVzFsT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRlJ5ZVdsdVp5QjBieUIxY0dSaGRHVWdjSEp2Y0dWeWRIa2dabTl5SUhSeVlXTnJPaUFpSUNzZ1l5QXJJQ0l1SWlBcklHa2dLeUFpSUdKMWRDQnBkQ0IzWVhOdUozUWdabTkxYm1RdUlpd2daU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMGFHbHpMbFpsY25OcGIyNXBibWN1VG05dVpUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDQTlJR1VzSUdVdWJtVmxaSE5WY0dSaGRHVWdJVDA5SUhadmFXUWdNQ0EvSUdFZ1BTQjBhR2x6TGxabGNuTnBiMjVwYm1jdVRtVmxaSE5WY0dSaGRHVWdPaUJsTG0xaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb1lTQTlJSFJvYVhNdVZtVnljMmx2Ym1sdVp5NU5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsS1RzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhSb2FYTXVRbWx1WkdsdVoxUjVjR1V1UkdseVpXTjBPd29nSUNBZ0lDQWdJR2xtSUNoeUlDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUFQwOUlDSnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE1pS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV1V1WjJWdmJXVjBjbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRU5oYmlCdWIzUWdZbWx1WkNCMGJ5QnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE1nWW1WallYVnpaU0J1YjJSbElHUnZaWE1nYm05MElHaGhkbVVnWVNCblpXOXRaWFJ5ZVM0aUxDQjBhR2x6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aUzVuWlc5dFpYUnllUzVwYzBKMVptWmxja2RsYjIxbGRISjVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG1kbGIyMWxkSEo1TG0xdmNuQm9RWFIwY21saWRYUmxjeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWNtOXdaWEowZVVKcGJtUnBibWM2SUVOaGJpQnViM1FnWW1sdVpDQjBieUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNZ1ltVmpZWFZ6WlNCdWIyUmxJR1J2WlhNZ2JtOTBJR2hoZG1VZ1lTQm5aVzl0WlhSeWVTNXRiM0p3YUVGMGRISnBZblYwWlhNdUlpd2dkR2hwY3lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzV0YjNKd2FGUmhjbWRsZEVScFkzUnBiMjVoY25sYmNsMGdJVDA5SUhadmFXUWdNQ0FtSmlBb2NpQTlJR1V1Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNVczSmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCRFlXNGdibTkwSUdKcGJtUWdkRzhnYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeklHOXVJRlJJVWtWRkxrZGxiMjFsZEhKNUxpQlZjMlVnVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rZ2FXNXpkR1ZoWkM0aUxDQjBhR2x6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JDQTlJSFJvYVhNdVFtbHVaR2x1WjFSNWNHVXVRWEp5WVhsRmJHVnRaVzUwTENCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa2dQU0J2TENCMGFHbHpMbkJ5YjNCbGNuUjVTVzVrWlhnZ1BTQnlPd29nSUNBZ0lDQWdJSDBnWld4elpTQnZMbVp5YjIxQmNuSmhlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVkRzlCY25KaGVTQWhQVDBnZG05cFpDQXdJRDhnS0d3Z1BTQjBhR2x6TGtKcGJtUnBibWRVZVhCbExraGhjMFp5YjIxVWIwRnljbUY1TENCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa2dQU0J2S1NBNklFRnljbUY1TG1selFYSnlZWGtvYnlrZ1B5QW9iQ0E5SUhSb2FYTXVRbWx1WkdsdVoxUjVjR1V1Ulc1MGFYSmxRWEp5WVhrc0lIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlU0E5SUc4cElEb2dkR2hwY3k1d2NtOXdaWEowZVU1aGJXVWdQU0JwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IwYUdsekxrZGxkSFJsY2tKNVFtbHVaR2x1WjFSNWNHVmJiRjBzSUhSb2FYTXVjMlYwVm1Gc2RXVWdQU0IwYUdsekxsTmxkSFJsY2tKNVFtbHVaR2x1WjFSNWNHVkJibVJXWlhKemFXOXVhVzVuVzJ4ZFcyRmRPd29nSUNBZ2ZRb2dJQ0FnZFc1aWFXNWtLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVibTlrWlNBOUlHNTFiR3dzSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IwYUdsekxsOW5aWFJXWVd4MVpWOTFibUp2ZFc1a0xDQjBhR2x6TG5ObGRGWmhiSFZsSUQwZ2RHaHBjeTVmYzJWMFZtRnNkV1ZmZFc1aWIzVnVaRHNLSUNBZ0lIMEtmVHNLYTJVdVEyOXRjRzl6YVhSbElEMGdTbWc3Q210bExuQnliM1J2ZEhsd1pTNUNhVzVrYVc1blZIbHdaU0E5SUhzS0lDQWdJRVJwY21WamREb2dNQ3dLSUNBZ0lFVnVkR2x5WlVGeWNtRjVPaUF4TEFvZ0lDQWdRWEp5WVhsRmJHVnRaVzUwT2lBeUxBb2dJQ0FnU0dGelJuSnZiVlJ2UVhKeVlYazZJRE1LZlRzS2EyVXVjSEp2ZEc5MGVYQmxMbFpsY25OcGIyNXBibWNnUFNCN0NpQWdJQ0JPYjI1bE9pQXdMQW9nSUNBZ1RtVmxaSE5WY0dSaGRHVTZJREVzQ2lBZ0lDQk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsT2lBeUNuMDdDbXRsTG5CeWIzUnZkSGx3WlM1SFpYUjBaWEpDZVVKcGJtUnBibWRVZVhCbElEMGdXd29nSUNBZ2EyVXVjSEp2ZEc5MGVYQmxMbDluWlhSV1lXeDFaVjlrYVhKbFkzUXNDaUFnSUNCclpTNXdjbTkwYjNSNWNHVXVYMmRsZEZaaGJIVmxYMkZ5Y21GNUxBb2dJQ0FnYTJVdWNISnZkRzkwZVhCbExsOW5aWFJXWVd4MVpWOWhjbkpoZVVWc1pXMWxiblFzQ2lBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDJkbGRGWmhiSFZsWDNSdlFYSnlZWGtLWFRzS2EyVXVjSEp2ZEc5MGVYQmxMbE5sZEhSbGNrSjVRbWx1WkdsdVoxUjVjR1ZCYm1SV1pYSnphVzl1YVc1bklEMGdXd29nSUNBZ1d3b2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWkdseVpXTjBMQW9nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpHbHlaV04wWDNObGRFNWxaV1J6VlhCa1lYUmxMQW9nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpHbHlaV04wWDNObGRFMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VLSUNBZ0lGMHNDaUFnSUNCYkNpQWdJQ0FnSUNBZ2EyVXVjSEp2ZEc5MGVYQmxMbDl6WlhSV1lXeDFaVjloY25KaGVTd0tJQ0FnSUNBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJGeWNtRjVYM05sZEU1bFpXUnpWWEJrWVhSbExBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWVhKeVlYbGZjMlYwVFdGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpRb2dJQ0FnWFN3S0lDQWdJRnNLSUNBZ0lDQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgzTmxkRlpoYkhWbFgyRnljbUY1Uld4bGJXVnVkQ3dLSUNBZ0lDQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgzTmxkRlpoYkhWbFgyRnljbUY1Uld4bGJXVnVkRjl6WlhST1pXVmtjMVZ3WkdGMFpTd0tJQ0FnSUNBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRGOXpaWFJOWVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbENpQWdJQ0JkTEFvZ0lDQWdXd29nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpuSnZiVUZ5Y21GNUxBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWm5KdmJVRnljbUY1WDNObGRFNWxaV1J6VlhCa1lYUmxMQW9nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpuSnZiVUZ5Y21GNVgzTmxkRTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVS0lDQWdJRjBLWFRzS2RtRnlJRmxvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblYxYVdRZ1BTQkZkQ2dwTENCMGFHbHpMbDl2WW1wbFkzUnpJRDBnUVhKeVlYa3VjSEp2ZEc5MGVYQmxMbk5zYVdObExtTmhiR3dvWVhKbmRXMWxiblJ6S1N3Z2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxOGdQU0F3T3dvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZTMwN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmYVc1a2FXTmxjMEo1VlZWSlJDQTlJR1U3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUc0Z0lUMDlJR2s3SUNzcmJpbGxXMkZ5WjNWdFpXNTBjMXR1WFM1MWRXbGtYU0E5SUc0N0NpQWdJQ0FnSUNBZ2RHaHBjeTVmY0dGMGFITWdQU0JiWFN3Z2RHaHBjeTVmY0dGeWMyVmtVR0YwYUhNZ1BTQmJYU3dnZEdocGN5NWZZbWx1WkdsdVozTWdQU0JiWFN3Z2RHaHBjeTVmWW1sdVpHbHVaM05KYm1ScFkyVnpRbmxRWVhSb0lEMGdlMzA3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsek93b2dJQ0FnSUNBZ0lIUm9hWE11YzNSaGRITWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZEhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ0IwYjNSaGJDQW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVgyOWlhbVZqZEhNdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQnBibFZ6WlNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRHOTBZV3dnTFNCMExtNURZV05vWldSUFltcGxZM1J6WHpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBJR0pwYm1ScGJtZHpVR1Z5VDJKcVpXTjBJQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTGw5aWFXNWthVzVuY3k1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWVdSa0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZmIySnFaV04wY3l3Z2RDQTlJSFJvYVhNdVgybHVaR2xqWlhOQ2VWVlZTVVFzSUc0Z1BTQjBhR2x6TGw5d1lYUm9jeXdnYVNBOUlIUm9hWE11WDNCaGNuTmxaRkJoZEdoekxDQnlJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJRzhnUFNCeUxteGxibWQwYUN3Z1lTd2diQ0E5SUdVdWJHVnVaM1JvTENCaklEMGdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMTg3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvSUQwZ01Dd2dkU0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUdnZ0lUMDlJSFU3SUNzcmFDbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWVhKbmRXMWxiblJ6VzJoZExDQm1JRDBnWkM1MWRXbGtMQ0J0SUQwZ2RGdG1YVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzBnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JTQTlJR3dyS3l3Z2RGdG1YU0E5SUcwc0lHVXVjSFZ6YUNoa0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VDQTlJREFzSUhZZ1BTQnZPeUI0SUNFOVBTQjJPeUFySzNncGNsdDRYUzV3ZFhOb0tHNWxkeUJyWlNoa0xDQnVXM2hkTENCcFczaGRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9iU0E4SUdNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0JsVzIxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNBdExXTXNJSFlnUFNCbFczaGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRnQyTG5WMWFXUmRJRDBnYlN3Z1pWdHRYU0E5SUhZc0lIUmJabDBnUFNCNExDQmxXM2hkSUQwZ1pEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p5QTlJREFzSUhBZ1BTQnZPeUJuSUNFOVBTQndPeUFySzJjcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdjbHRuWFN3Z2VTQTlJRjliZUYwc0lHSWdQU0JmVzIxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjliYlYwZ1BTQjVMQ0JpSUQwOVBTQjJiMmxrSURBZ0ppWWdLR0lnUFNCdVpYY2dhMlVvWkN3Z2JsdG5YU3dnYVZ0blhTa3BMQ0JmVzNoZElEMGdZanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdWYmJWMGdJVDA5SUdFZ0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UVc1cGJXRjBhVzl1VDJKcVpXTjBSM0p2ZFhBNklFUnBabVpsY21WdWRDQnZZbXBsWTNSeklIZHBkR2dnZEdobElITmhiV1VnVlZWSlJDQmtaWFJsWTNSbFpDNGdRMnhsWVc0Z2RHaGxJR05oWTJobGN5QnZjaUJ5WldOeVpXRjBaU0I1YjNWeUlHbHVabkpoYzNSeWRXTjBkWEpsSUhkb1pXNGdjbVZzYjJGa2FXNW5JSE5qWlc1bGN5NGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4Z1BTQmpPd29nSUNBZ2ZRb2dJQ0FnY21WdGIzWmxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZiMkpxWldOMGN5d2dkQ0E5SUhSb2FYTXVYMmx1WkdsalpYTkNlVlZWU1VRc0lHNGdQU0IwYUdsekxsOWlhVzVrYVc1bmN5d2dhU0E5SUc0dWJHVnVaM1JvTENCeUlEMGdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMTg3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUQwZ01Dd2dZU0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUc4Z0lUMDlJR0U3SUNzcmJ5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVhKbmRXMWxiblJ6VzI5ZExDQmpJRDBnYkM1MWRXbGtMQ0JvSUQwZ2RGdGpYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2dnSVQwOUlIWnZhV1FnTUNBbUppQm9JRDQ5SUhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2Npc3JMQ0JrSUQwZ1pWdDFYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJiWkM1MWRXbGtYU0E5SUdnc0lHVmJhRjBnUFNCa0xDQjBXMk5kSUQwZ2RTd2daVnQxWFNBOUlHdzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWWdQU0F3TENCdElEMGdhVHNnWmlBaFBUMGdiVHNnS3l0bUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VDQTlJRzViWmwwc0lIWWdQU0I0VzNWZExDQm5JRDBnZUZ0b1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0VzJoZElEMGdkaXdnZUZ0MVhTQTlJR2M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMThnUFNCeU93b2dJQ0FnZlFvZ0lDQWdkVzVqWVdOb1pTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVgyOWlhbVZqZEhNc0lIUWdQU0IwYUdsekxsOXBibVJwWTJWelFubFZWVWxFTENCdUlEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHa2dQU0J1TG14bGJtZDBhQ3dnY2lBOUlIUm9hWE11YmtOaFkyaGxaRTlpYW1WamRITmZMQ0J2SUQwZ1pTNXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaElEMGdNQ3dnYkNBOUlHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnN0lHRWdJVDA5SUd3N0lDc3JZU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ1lYSm5kVzFsYm5SelcyRmRMQ0JvSUQwZ1l5NTFkV2xrTENCMUlEMGdkRnRvWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hVZ0lUMDlJSFp2YVdRZ01Da2dhV1lnS0dSbGJHVjBaU0IwVzJoZExDQjFJRHdnY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNBdExYSXNJR1lnUFNCbFcyUmRMQ0J0SUQwZ0xTMXZMQ0I0SUQwZ1pWdHRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJiWmk1MWRXbGtYU0E5SUhVc0lHVmJkVjBnUFNCbUxDQjBXM2d1ZFhWcFpGMGdQU0JrTENCbFcyUmRJRDBnZUN3Z1pTNXdiM0FvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZGlBOUlEQXNJR2NnUFNCcE95QjJJQ0U5UFNCbk95QXJLM1lwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ2JsdDJYU3dnWHlBOUlIQmJaRjBzSUhrZ1BTQndXMjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmJkVjBnUFNCZkxDQndXMlJkSUQwZ2VTd2djQzV3YjNBb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdMUzF2TENCbUlEMGdaVnRrWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdRZ1BpQXdJQ1ltSUNoMFcyWXVkWFZwWkYwZ1BTQjFLU3dnWlZ0MVhTQTlJR1lzSUdVdWNHOXdLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzBnUFNBd0xDQjRJRDBnYVRzZ2JTQWhQVDBnZURzZ0t5dHRLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUc1YmJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGx0MVhTQTlJSFpiWkYwc0lIWXVjRzl3S0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4Z1BTQnlPd29nSUNBZ2ZRb2dJQ0FnYzNWaWMyTnlhV0psWHlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxsOWlhVzVrYVc1bmMwbHVaR2xqWlhOQ2VWQmhkR2dzSUdrZ1BTQnVXMlZkTENCeUlEMGdkR2hwY3k1ZlltbHVaR2x1WjNNN0NpQWdJQ0FnSUNBZ2FXWWdLR2tnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUhKYmFWMDdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBhR2x6TGw5d1lYUm9jeXdnWVNBOUlIUm9hWE11WDNCaGNuTmxaRkJoZEdoekxDQnNJRDBnZEdocGN5NWZiMkpxWldOMGN5d2dZeUE5SUd3dWJHVnVaM1JvTENCb0lEMGdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMThzSUhVZ1BTQnVaWGNnUVhKeVlYa29ZeWs3Q2lBZ0lDQWdJQ0FnYVNBOUlISXViR1Z1WjNSb0xDQnVXMlZkSUQwZ2FTd2dieTV3ZFhOb0tHVXBMQ0JoTG5CMWMyZ29kQ2tzSUhJdWNIVnphQ2gxS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdRZ1BTQm9MQ0JtSUQwZ2JDNXNaVzVuZEdnN0lHUWdJVDA5SUdZN0lDc3JaQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0SUQwZ2JGdGtYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RWdGtYU0E5SUc1bGR5QnJaU2h0TENCbExDQjBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFU3Q2lBZ0lDQjlDaUFnSUNCMWJuTjFZbk5qY21saVpWOG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZbWx1WkdsdVozTkpibVJwWTJWelFubFFZWFJvTENCdUlEMGdkRnRsWFRzS0lDQWdJQ0FnSUNCcFppQW9iaUFoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1ZmNHRjBhSE1zSUhJZ1BTQjBhR2x6TGw5d1lYSnpaV1JRWVhSb2N5d2dieUE5SUhSb2FYTXVYMkpwYm1ScGJtZHpMQ0JoSUQwZ2J5NXNaVzVuZEdnZ0xTQXhMQ0JzSUQwZ2IxdGhYU3dnWXlBOUlHVmJZVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmJZMTBnUFNCdUxDQnZXMjVkSUQwZ2JDd2dieTV3YjNBb0tTd2djbHR1WFNBOUlISmJZVjBzSUhJdWNHOXdLQ2tzSUdsYmJsMGdQU0JwVzJGZExDQnBMbkJ2Y0NncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZUc0tXV2d1Y0hKdmRHOTBlWEJsTG1selFXNXBiV0YwYVc5dVQySnFaV04wUjNKdmRYQWdQU0FoTURzS2RtRnlJRnBvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaUE5SUc1MWJHd3NJR2tnUFNCMExtSnNaVzVrVFc5a1pTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmJXbDRaWElnUFNCbExDQjBhR2x6TGw5amJHbHdJRDBnZEN3Z2RHaHBjeTVmYkc5allXeFNiMjkwSUQwZ2Jpd2dkR2hwY3k1aWJHVnVaRTF2WkdVZ1BTQnBPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkQzUwY21GamEzTXNJRzhnUFNCeUxteGxibWQwYUN3Z1lTQTlJRzVsZHlCQmNuSmhlU2h2S1N3Z2JDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXNWthVzVuVTNSaGNuUTZJRTFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxibVJwYm1kRmJtUTZJRTFwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdPeUJqSUNFOVBTQnZPeUFySzJNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJSEpiWTEwdVkzSmxZWFJsU1c1MFpYSndiMnhoYm5Rb2JuVnNiQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRmJZMTBnUFNCb0xDQm9Mbk5sZEhScGJtZHpJRDBnYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTVmYVc1MFpYSndiMnhoYm5SVFpYUjBhVzVuY3lBOUlHd3NJSFJvYVhNdVgybHVkR1Z5Y0c5c1lXNTBjeUE5SUdFc0lIUm9hWE11WDNCeWIzQmxjblI1UW1sdVpHbHVaM01nUFNCdVpYY2dRWEp5WVhrb2J5a3NJSFJvYVhNdVgyTmhZMmhsU1c1a1pYZ2dQU0J1ZFd4c0xDQjBhR2x6TGw5aWVVTnNhWEJEWVdOb1pVbHVaR1Y0SUQwZ2JuVnNiQ3dnZEdocGN5NWZkR2x0WlZOallXeGxTVzUwWlhKd2IyeGhiblFnUFNCdWRXeHNMQ0IwYUdsekxsOTNaV2xuYUhSSmJuUmxjbkJ2YkdGdWRDQTlJRzUxYkd3c0lIUm9hWE11Ykc5dmNDQTlJRWxrTENCMGFHbHpMbDlzYjI5d1EyOTFiblFnUFNBdE1Td2dkR2hwY3k1ZmMzUmhjblJVYVcxbElEMGdiblZzYkN3Z2RHaHBjeTUwYVcxbElEMGdNQ3dnZEdocGN5NTBhVzFsVTJOaGJHVWdQU0F4TENCMGFHbHpMbDlsWm1abFkzUnBkbVZVYVcxbFUyTmhiR1VnUFNBeExDQjBhR2x6TG5kbGFXZG9kQ0E5SURFc0lIUm9hWE11WDJWbVptVmpkR2wyWlZkbGFXZG9kQ0E5SURFc0lIUm9hWE11Y21Wd1pYUnBkR2x2Ym5NZ1BTQXhJQzhnTUN3Z2RHaHBjeTV3WVhWelpXUWdQU0FoTVN3Z2RHaHBjeTVsYm1GaWJHVmtJRDBnSVRBc0lIUm9hWE11WTJ4aGJYQlhhR1Z1Um1sdWFYTm9aV1FnUFNBaE1Td2dkR2hwY3k1NlpYSnZVMnh2Y0dWQmRGTjBZWEowSUQwZ0lUQXNJSFJvYVhNdWVtVnliMU5zYjNCbFFYUkZibVFnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJSEJzWVhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDIxcGVHVnlMbDloWTNScGRtRjBaVUZqZEdsdmJpaDBhR2x6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhOMGIzQW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyMXBlR1Z5TGw5a1pXRmpkR2wyWVhSbFFXTjBhVzl1S0hSb2FYTXBMQ0IwYUdsekxuSmxjMlYwS0NrN0NpQWdJQ0I5Q2lBZ0lDQnlaWE5sZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3WVhWelpXUWdQU0FoTVN3Z2RHaHBjeTVsYm1GaWJHVmtJRDBnSVRBc0lIUm9hWE11ZEdsdFpTQTlJREFzSUhSb2FYTXVYMnh2YjNCRGIzVnVkQ0E5SUMweExDQjBhR2x6TGw5emRHRnlkRlJwYldVZ1BTQnVkV3hzTENCMGFHbHpMbk4wYjNCR1lXUnBibWNvS1M1emRHOXdWMkZ5Y0dsdVp5Z3BPd29nSUNBZ2ZRb2dJQ0FnYVhOU2RXNXVhVzVuS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVZ1WVdKc1pXUWdKaVlnSVhSb2FYTXVjR0YxYzJWa0lDWW1JSFJvYVhNdWRHbHRaVk5qWVd4bElDRTlQU0F3SUNZbUlIUm9hWE11WDNOMFlYSjBWR2x0WlNBOVBUMGdiblZzYkNBbUppQjBhR2x6TGw5dGFYaGxjaTVmYVhOQlkzUnBkbVZCWTNScGIyNG9kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnBjMU5qYUdWa2RXeGxaQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZiV2w0WlhJdVgybHpRV04wYVhabFFXTjBhVzl1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnYzNSaGNuUkJkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM04wWVhKMFZHbHRaU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUk1iMjl3S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1c2IyOXdJRDBnWlN3Z2RHaHBjeTV5WlhCbGRHbDBhVzl1Y3lBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJGWm1abFkzUnBkbVZYWldsbmFIUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZGxhV2RvZENBOUlHVXNJSFJvYVhNdVgyVm1abVZqZEdsMlpWZGxhV2RvZENBOUlIUm9hWE11Wlc1aFlteGxaQ0EvSUdVZ09pQXdMQ0IwYUdsekxuTjBiM0JHWVdScGJtY29LVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFVm1abVZqZEdsMlpWZGxhV2RvZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWldabVpXTjBhWFpsVjJWcFoyaDBPd29nSUNBZ2ZRb2dJQ0FnWm1Ga1pVbHVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZjMk5vWldSMWJHVkdZV1JwYm1jb1pTd2dNQ3dnTVNrN0NpQWdJQ0I5Q2lBZ0lDQm1ZV1JsVDNWMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmMyTm9aV1IxYkdWR1lXUnBibWNvWlN3Z01Td2dNQ2s3Q2lBZ0lDQjlDaUFnSUNCamNtOXpjMFpoWkdWR2NtOXRLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNW1ZV1JsVDNWMEtIUXBMQ0IwYUdsekxtWmhaR1ZKYmloMEtTd2diaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDJOc2FYQXVaSFZ5WVhScGIyNHNJSElnUFNCbExsOWpiR2x3TG1SMWNtRjBhVzl1TENCdklEMGdjaUF2SUdrc0lHRWdQU0JwSUM4Z2Nqc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1M1lYSndLREVzSUc4c0lIUXBMQ0IwYUdsekxuZGhjbkFvWVN3Z01Td2dkQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZM0p2YzNOR1lXUmxWRzhvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1OeWIzTnpSbUZrWlVaeWIyMG9kR2hwY3l3Z2RDd2diaWs3Q2lBZ0lDQjlDaUFnSUNCemRHOXdSbUZrYVc1bktDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZmQyVnBaMmgwU1c1MFpYSndiMnhoYm5RN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVgzZGxhV2RvZEVsdWRHVnljRzlzWVc1MElEMGdiblZzYkN3Z2RHaHBjeTVmYldsNFpYSXVYM1JoYTJWQ1lXTnJRMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBLR1VwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFVm1abVZqZEdsMlpWUnBiV1ZUWTJGc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRHbHRaVk5qWVd4bElEMGdaU3dnZEdocGN5NWZaV1ptWldOMGFYWmxWR2x0WlZOallXeGxJRDBnZEdocGN5NXdZWFZ6WldRZ1B5QXdJRG9nWlN3Z2RHaHBjeTV6ZEc5d1YyRnljR2x1WnlncE93b2dJQ0FnZlFvZ0lDQWdaMlYwUldabVpXTjBhWFpsVkdsdFpWTmpZV3hsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlsWm1abFkzUnBkbVZVYVcxbFUyTmhiR1U3Q2lBZ0lDQjlDaUFnSUNCelpYUkVkWEpoZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRHbHRaVk5qWVd4bElEMGdkR2hwY3k1ZlkyeHBjQzVrZFhKaGRHbHZiaUF2SUdVc0lIUm9hWE11YzNSdmNGZGhjbkJwYm1jb0tUc0tJQ0FnSUgwS0lDQWdJSE41Ym1OWGFYUm9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBhVzFsSUQwZ1pTNTBhVzFsTENCMGFHbHpMblJwYldWVFkyRnNaU0E5SUdVdWRHbHRaVk5qWVd4bExDQjBhR2x6TG5OMGIzQlhZWEp3YVc1bktDazdDaUFnSUNCOUNpQWdJQ0JvWVd4MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1M1lYSndLSFJvYVhNdVgyVm1abVZqZEdsMlpWUnBiV1ZUWTJGc1pTd2dNQ3dnWlNrN0NpQWdJQ0I5Q2lBZ0lDQjNZWEp3S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMjFwZUdWeUxDQnlJRDBnYVM1MGFXMWxMQ0J2SUQwZ2RHaHBjeTUwYVcxbFUyTmhiR1VzSUdFZ1BTQjBhR2x6TGw5MGFXMWxVMk5oYkdWSmJuUmxjbkJ2YkdGdWREc0tJQ0FnSUNBZ0lDQmhJRDA5UFNCdWRXeHNJQ1ltSUNoaElEMGdhUzVmYkdWdVpFTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRDZ3BMQ0IwYUdsekxsOTBhVzFsVTJOaGJHVkpiblJsY25CdmJHRnVkQ0E5SUdFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1lTNXdZWEpoYldWMFpYSlFiM05wZEdsdmJuTXNJR01nUFNCaExuTmhiWEJzWlZaaGJIVmxjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiRnN3WFNBOUlISXNJR3hiTVYwZ1BTQnlJQ3NnYml3Z1kxc3dYU0E5SUdVZ0x5QnZMQ0JqV3pGZElEMGdkQ0F2SUc4c0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRHOXdWMkZ5Y0dsdVp5Z3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVgzUnBiV1ZUWTJGc1pVbHVkR1Z5Y0c5c1lXNTBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDkwYVcxbFUyTmhiR1ZKYm5SbGNuQnZiR0Z1ZENBOUlHNTFiR3dzSUhSb2FYTXVYMjFwZUdWeUxsOTBZV3RsUW1GamEwTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRDaGxLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSTmFYaGxjaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZiV2w0WlhJN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEYkdsd0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5amJHbHdPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVtOXZkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZiRzlqWVd4U2IyOTBJSHg4SUhSb2FYTXVYMjFwZUdWeUxsOXliMjkwT3dvZ0lDQWdmUW9nSUNBZ1gzVndaR0YwWlNobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0NGMGFHbHpMbVZ1WVdKc1pXUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZFhCa1lYUmxWMlZwWjJoMEtHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5NWZjM1JoY25SVWFXMWxPd29nSUNBZ0lDQWdJR2xtSUNoeUlDRTlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnS0dVZ0xTQnlLU0FxSUc0N0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoc0lEd2dNQ0I4ZkNCdUlEMDlQU0F3S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNOMFlYSjBWR2x0WlNBOUlHNTFiR3dzSUhRZ1BTQnVJQ29nYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RDQXFQU0IwYUdsekxsOTFjR1JoZEdWVWFXMWxVMk5oYkdVb1pTazdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBhR2x6TGw5MWNHUmhkR1ZVYVcxbEtIUXBMQ0JoSUQwZ2RHaHBjeTVmZFhCa1lYUmxWMlZwWjJoMEtHVXBPd29nSUNBZ0lDQWdJR2xtSUNoaElENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUm9hWE11WDJsdWRHVnljRzlzWVc1MGN5d2dZeUE5SUhSb2FYTXVYM0J5YjNCbGNuUjVRbWx1WkdsdVozTTdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2gwYUdsekxtSnNaVzVrVFc5a1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhGak9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBc0lIVWdQU0JzTG14bGJtZDBhRHNnYUNBaFBUMGdkVHNnS3l0b0tXeGJhRjB1WlhaaGJIVmhkR1VvYnlrc0lHTmJhRjB1WVdOamRXMTFiR0YwWlVGa1pHbDBhWFpsS0dFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0IxWVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCb0lEMGdNQ3dnZFNBOUlHd3ViR1Z1WjNSb095Qm9JQ0U5UFNCMU95QXJLMmdwYkZ0b1hTNWxkbUZzZFdGMFpTaHZLU3dnWTF0b1hTNWhZMk4xYlhWc1lYUmxLR2tzSUdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1gzVndaR0YwWlZkbGFXZG9kQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNBd093b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtVnVZV0pzWldRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIUm9hWE11ZDJWcFoyaDBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYM2RsYVdkb2RFbHVkR1Z5Y0c5c1lXNTBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaUFoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1TG1WMllXeDFZWFJsS0dVcFd6QmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0FxUFNCcExDQmxJRDRnYmk1d1lYSmhiV1YwWlhKUWIzTnBkR2x2Ym5OYk1WMGdKaVlnS0hSb2FYTXVjM1J2Y0VaaFpHbHVaeWdwTENCcElEMDlQU0F3SUNZbUlDaDBhR2x6TG1WdVlXSnNaV1FnUFNBaE1Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlsWm1abFkzUnBkbVZYWldsbmFIUWdQU0IwTENCME93b2dJQ0FnZlFvZ0lDQWdYM1Z3WkdGMFpWUnBiV1ZUWTJGc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0F3T3dvZ0lDQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1d1lYVnpaV1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhSb2FYTXVkR2x0WlZOallXeGxPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYM1JwYldWVFkyRnNaVWx1ZEdWeWNHOXNZVzUwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVJQ0U5UFNCdWRXeHNJQ1ltSUNoMElDbzlJRzR1WlhaaGJIVmhkR1VvWlNsYk1GMHNJR1VnUGlCdUxuQmhjbUZ0WlhSbGNsQnZjMmwwYVc5dWMxc3hYU0FtSmlBb2RHaHBjeTV6ZEc5d1YyRnljR2x1WnlncExDQjBJRDA5UFNBd0lEOGdkR2hwY3k1d1lYVnpaV1FnUFNBaE1DQTZJSFJvYVhNdWRHbHRaVk5qWVd4bElEMGdkQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZaV1ptWldOMGFYWmxWR2x0WlZOallXeGxJRDBnZEN3Z2REc0tJQ0FnSUgwS0lDQWdJRjkxY0dSaGRHVlVhVzFsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDJOc2FYQXVaSFZ5WVhScGIyNHNJRzRnUFNCMGFHbHpMbXh2YjNBc0lHa2dQU0IwYUdsekxuUnBiV1VnS3lCbExDQnlJRDBnZEdocGN5NWZiRzl2Y0VOdmRXNTBMQ0J2SUQwZ2JpQTlQVDBnUkdRN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnUFQwOUlEQXBJSEpsZEhWeWJpQnlJRDA5UFNBdE1TQS9JR2tnT2lCdklDWW1JQ2h5SUNZZ01Ta2dQVDA5SURFZ1B5QjBJQzBnYVNBNklHazdDaUFnSUNBZ0lDQWdhV1lnS0c0Z1BUMDlJRkJrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSElnUFQwOUlDMHhJQ1ltSUNoMGFHbHpMbDlzYjI5d1EyOTFiblFnUFNBd0xDQjBhR2x6TGw5elpYUkZibVJwYm1kektDRXdMQ0FoTUN3Z0lURXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BqMGdkQ2tnYVNBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaHBJRHdnTUNrZ2FTQTlJREE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuUnBiV1VnUFNCcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGcklHVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Oc1lXMXdWMmhsYmtacGJtbHphR1ZrSUQ4Z2RHaHBjeTV3WVhWelpXUWdQU0FoTUNBNklIUm9hWE11Wlc1aFlteGxaQ0E5SUNFeExDQjBhR2x6TG5ScGJXVWdQU0JwTENCMGFHbHpMbDl0YVhobGNpNWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVptbHVhWE5vWldRaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZqZEdsdmJqb2dkR2hwY3l3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNDZJR1VnUENBd0lEOGdMVEVnT2lBeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQXRNU0FtSmlBb1pTQStQU0F3SUQ4Z0tISWdQU0F3TENCMGFHbHpMbDl6WlhSRmJtUnBibWR6S0NFd0xDQjBhR2x6TG5KbGNHVjBhWFJwYjI1eklEMDlQU0F3TENCdktTa2dPaUIwYUdsekxsOXpaWFJGYm1ScGJtZHpLSFJvYVhNdWNtVndaWFJwZEdsdmJuTWdQVDA5SURBc0lDRXdMQ0J2S1Nrc0lHa2dQajBnZENCOGZDQnBJRHdnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCTllYUm9MbVpzYjI5eUtHa2dMeUIwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ0xUMGdkQ0FxSUdFc0lISWdLejBnVFdGMGFDNWhZbk1vWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhSb2FYTXVjbVZ3WlhScGRHbHZibk1nTFNCeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3dnUEQwZ01Da2dkR2hwY3k1amJHRnRjRmRvWlc1R2FXNXBjMmhsWkNBL0lIUm9hWE11Y0dGMWMyVmtJRDBnSVRBZ09pQjBhR2x6TG1WdVlXSnNaV1FnUFNBaE1Td2dhU0E5SUdVZ1BpQXdJRDhnZENBNklEQXNJSFJvYVhNdWRHbHRaU0E5SUdrc0lIUm9hWE11WDIxcGVHVnlMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSm1hVzVwYzJobFpDSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVdOMGFXOXVPaUIwYUdsekxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiam9nWlNBK0lEQWdQeUF4SURvZ0xURUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3Z1BUMDlJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0JsSUR3Z01Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYzJWMFJXNWthVzVuY3loakxDQWhZeXdnYnlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIUm9hWE11WDNObGRFVnVaR2x1WjNNb0lURXNJQ0V4TENCdktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXNiMjl3UTI5MWJuUWdQU0J5TENCMGFHbHpMblJwYldVZ1BTQnBMQ0IwYUdsekxsOXRhWGhsY2k1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0lteHZiM0FpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWTNScGIyNDZJSFJvYVhNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4dmIzQkVaV3gwWVRvZ1lRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2RHaHBjeTUwYVcxbElEMGdhVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzhnSmlZZ0tISWdKaUF4S1NBOVBUMGdNU2tnY21WMGRYSnVJSFFnTFNCcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2FUc0tJQ0FnSUgwS0lDQWdJRjl6WlhSRmJtUnBibWR6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMmx1ZEdWeWNHOXNZVzUwVTJWMGRHbHVaM003Q2lBZ0lDQWdJQ0FnYmlBL0lDaHBMbVZ1WkdsdVoxTjBZWEowSUQwZ1lta3NJR2t1Wlc1a2FXNW5SVzVrSUQwZ1lta3BJRG9nS0dVZ1B5QnBMbVZ1WkdsdVoxTjBZWEowSUQwZ2RHaHBjeTU2WlhKdlUyeHZjR1ZCZEZOMFlYSjBJRDhnWW1rZ09pQk5hU0E2SUdrdVpXNWthVzVuVTNSaGNuUWdQU0JQY3l3Z2RDQS9JR2t1Wlc1a2FXNW5SVzVrSUQwZ2RHaHBjeTU2WlhKdlUyeHZjR1ZCZEVWdVpDQS9JR0pwSURvZ1RXa2dPaUJwTG1WdVpHbHVaMFZ1WkNBOUlFOXpLVHNLSUNBZ0lIMEtJQ0FnSUY5elkyaGxaSFZzWlVaaFpHbHVaeWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxsOXRhWGhsY2l3Z2NpQTlJR2t1ZEdsdFpTd2dieUE5SUhSb2FYTXVYM2RsYVdkb2RFbHVkR1Z5Y0c5c1lXNTBPd29nSUNBZ0lDQWdJRzhnUFQwOUlHNTFiR3dnSmlZZ0tHOGdQU0JwTGw5c1pXNWtRMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBLQ2tzSUhSb2FYTXVYM2RsYVdkb2RFbHVkR1Z5Y0c5c1lXNTBJRDBnYnlrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdkxuQmhjbUZ0WlhSbGNsQnZjMmwwYVc5dWN5d2diQ0E5SUc4dWMyRnRjR3hsVm1Gc2RXVnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmhXekJkSUQwZ2Npd2diRnN3WFNBOUlIUXNJR0ZiTVYwZ1BTQnlJQ3NnWlN3Z2JGc3hYU0E5SUc0c0lIUm9hWE03Q2lBZ0lDQjlDbjBzSUNSb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRmJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdVgzSnZiM1FnUFNCbExDQjBhR2x6TGw5cGJtbDBUV1Z0YjNKNVRXRnVZV2RsY2lncExDQjBhR2x6TGw5aFkyTjFTVzVrWlhnZ1BTQXdMQ0IwYUdsekxuUnBiV1VnUFNBd0xDQjBhR2x6TG5ScGJXVlRZMkZzWlNBOUlERTdDaUFnSUNCOUNpQWdJQ0JmWW1sdVpFRmpkR2x2YmlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsTGw5c2IyTmhiRkp2YjNRZ2ZId2dkR2hwY3k1ZmNtOXZkQ3dnYVNBOUlHVXVYMk5zYVhBdWRISmhZMnR6TENCeUlEMGdhUzVzWlc1bmRHZ3NJRzhnUFNCbExsOXdjbTl3WlhKMGVVSnBibVJwYm1kekxDQmhJRDBnWlM1ZmFXNTBaWEp3YjJ4aGJuUnpMQ0JzSUQwZ2JpNTFkV2xrTENCaklEMGdkR2hwY3k1ZlltbHVaR2x1WjNOQ2VWSnZiM1JCYm1ST1lXMWxMQ0JvSUQwZ1kxdHNYVHNLSUNBZ0lDQWdJQ0JvSUQwOVBTQjJiMmxrSURBZ0ppWWdLR2dnUFNCN2ZTd2dZMXRzWFNBOUlHZ3BPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkU0E5SURBN0lIVWdJVDA5SUhJN0lDc3JkU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2FWdDFYU3dnWmlBOUlHUXVibUZ0WlN3Z2JTQTlJR2hiWmwwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodElDRTlQU0IyYjJsa0lEQXBJRzliZFYwZ1BTQnRPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodElEMGdiMXQxWFN3Z2JTQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JTNWZZMkZqYUdWSmJtUmxlQ0E5UFQwZ2JuVnNiQ0FtSmlBb0t5dHRMbkpsWm1WeVpXNWpaVU52ZFc1MExDQjBhR2x6TGw5aFpHUkpibUZqZEdsMlpVSnBibVJwYm1jb2JTd2diQ3dnWmlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhnZ1BTQjBJQ1ltSUhRdVgzQnliM0JsY25SNVFtbHVaR2x1WjNOYmRWMHVZbWx1WkdsdVp5NXdZWEp6WldSUVlYUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiU0E5SUc1bGR5QllhQ2hyWlM1amNtVmhkR1VvYml3Z1ppd2dlQ2tzSUdRdVZtRnNkV1ZVZVhCbFRtRnRaU3dnWkM1blpYUldZV3gxWlZOcGVtVW9LU2tzSUNzcmJTNXlaV1psY21WdVkyVkRiM1Z1ZEN3Z2RHaHBjeTVmWVdSa1NXNWhZM1JwZG1WQ2FXNWthVzVuS0cwc0lHd3NJR1lwTENCdlczVmRJRDBnYlRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCaFczVmRMbkpsYzNWc2RFSjFabVpsY2lBOUlHMHVZblZtWm1WeU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJRjloWTNScGRtRjBaVUZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tDRjBhR2x6TGw5cGMwRmpkR2wyWlVGamRHbHZiaWhsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pTNWZZMkZqYUdWSmJtUmxlQ0E5UFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0FvWlM1ZmJHOWpZV3hTYjI5MElIeDhJSFJvYVhNdVgzSnZiM1FwTG5WMWFXUXNJR2tnUFNCbExsOWpiR2x3TG5WMWFXUXNJSElnUFNCMGFHbHpMbDloWTNScGIyNXpRbmxEYkdsd1cybGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZlltbHVaRUZqZEdsdmJpaGxMQ0J5SUNZbUlISXVhMjV2ZDI1QlkzUnBiMjV6V3pCZEtTd2dkR2hwY3k1ZllXUmtTVzVoWTNScGRtVkJZM1JwYjI0b1pTd2dhU3dnYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExsOXdjbTl3WlhKMGVVSnBibVJwYm1kek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z0lUMDlJR2s3SUNzcmJpbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUmJibDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5TG5WelpVTnZkVzUwS3lzZ1BUMDlJREFnSmlZZ0tIUm9hWE11WDJ4bGJtUkNhVzVrYVc1bktISXBMQ0J5TG5OaGRtVlBjbWxuYVc1aGJGTjBZWFJsS0NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJ4bGJtUkJZM1JwYjI0b1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWDJSbFlXTjBhWFpoZEdWQlkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxsOXBjMEZqZEdsMlpVRmpkR2x2YmlobEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVgzQnliM0JsY25SNVFtbHVaR2x1WjNNN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBaFBUMGdhVHNnS3l0dUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RGdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzB0Y2k1MWMyVkRiM1Z1ZENBOVBUMGdNQ0FtSmlBb2NpNXlaWE4wYjNKbFQzSnBaMmx1WVd4VGRHRjBaU2dwTENCMGFHbHpMbDkwWVd0bFFtRmphMEpwYm1ScGJtY29jaWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM1JoYTJWQ1lXTnJRV04wYVc5dUtHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUY5cGJtbDBUV1Z0YjNKNVRXRnVZV2RsY2lncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5aFkzUnBiMjV6SUQwZ1cxMHNJSFJvYVhNdVgyNUJZM1JwZG1WQlkzUnBiMjV6SUQwZ01Dd2dkR2hwY3k1ZllXTjBhVzl1YzBKNVEyeHBjQ0E5SUh0OUxDQjBhR2x6TGw5aWFXNWthVzVuY3lBOUlGdGRMQ0IwYUdsekxsOXVRV04wYVhabFFtbHVaR2x1WjNNZ1BTQXdMQ0IwYUdsekxsOWlhVzVrYVc1bmMwSjVVbTl2ZEVGdVpFNWhiV1VnUFNCN2ZTd2dkR2hwY3k1ZlkyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN5QTlJRnRkTENCMGFHbHpMbDl1UVdOMGFYWmxRMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBjeUE5SURBN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpPd29nSUNBZ0lDQWdJSFJvYVhNdWMzUmhkSE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR0ZqZEdsdmJuTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZENCMGIzUmhiQ0FvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVXVYMkZqZEdsdmJuTXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ0JwYmxWelpTQW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVgyNUJZM1JwZG1WQlkzUnBiMjV6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCaWFXNWthVzVuY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBJSFJ2ZEdGc0lDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1ZlltbHVaR2x1WjNNdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQnBibFZ6WlNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDI1QlkzUnBkbVZDYVc1a2FXNW5jenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBJSFJ2ZEdGc0lDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1ZlkyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN5NXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBJR2x1VlhObElDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1ZmJrRmpkR2wyWlVOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ1gybHpRV04wYVhabFFXTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVYMk5oWTJobFNXNWtaWGc3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlHNTFiR3dnSmlZZ2RDQThJSFJvYVhNdVgyNUJZM1JwZG1WQlkzUnBiMjV6T3dvZ0lDQWdmUW9nSUNBZ1gyRmtaRWx1WVdOMGFYWmxRV04wYVc5dUtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDJGamRHbHZibk1zSUhJZ1BTQjBhR2x6TGw5aFkzUnBiMjV6UW5sRGJHbHdMQ0J2SUQwZ2NsdDBYVHNLSUNBZ0lDQWdJQ0JwWmlBb2J5QTlQVDBnZG05cFpDQXdLU0J2SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JyYm05M2JrRmpkR2x2Ym5NNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVUtJQ0FnSUNBZ0lDQWdJQ0FnWFN3S0lDQWdJQ0FnSUNBZ0lDQWdZV04wYVc5dVFubFNiMjkwT2lCN2ZRb2dJQ0FnSUNBZ0lIMHNJR1V1WDJKNVEyeHBjRU5oWTJobFNXNWtaWGdnUFNBd0xDQnlXM1JkSUQwZ2J6c0tJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnZMbXR1YjNkdVFXTjBhVzl1Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdaUzVmWW5sRGJHbHdRMkZqYUdWSmJtUmxlQ0E5SUdFdWJHVnVaM1JvTENCaExuQjFjMmdvWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHVXVYMk5oWTJobFNXNWtaWGdnUFNCcExteGxibWQwYUN3Z2FTNXdkWE5vS0dVcExDQnZMbUZqZEdsdmJrSjVVbTl2ZEZ0dVhTQTlJR1U3Q2lBZ0lDQjlDaUFnSUNCZmNtVnRiM1psU1c1aFkzUnBkbVZCWTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZV04wYVc5dWN5d2diaUE5SUhSYmRDNXNaVzVuZEdnZ0xTQXhYU3dnYVNBOUlHVXVYMk5oWTJobFNXNWtaWGc3Q2lBZ0lDQWdJQ0FnYmk1ZlkyRmphR1ZKYm1SbGVDQTlJR2tzSUhSYmFWMGdQU0J1TENCMExuQnZjQ2dwTENCbExsOWpZV05vWlVsdVpHVjRJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHVXVYMk5zYVhBdWRYVnBaQ3dnYnlBOUlIUm9hWE11WDJGamRHbHZibk5DZVVOc2FYQXNJR0VnUFNCdlczSmRMQ0JzSUQwZ1lTNXJibTkzYmtGamRHbHZibk1zSUdNZ1BTQnNXMnd1YkdWdVozUm9JQzBnTVYwc0lHZ2dQU0JsTGw5aWVVTnNhWEJEWVdOb1pVbHVaR1Y0T3dvZ0lDQWdJQ0FnSUdNdVgySjVRMnhwY0VOaFkyaGxTVzVrWlhnZ1BTQm9MQ0JzVzJoZElEMGdZeXdnYkM1d2IzQW9LU3dnWlM1ZllubERiR2x3UTJGamFHVkpibVJsZUNBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnYkdWMElIVWdQU0JoTG1GamRHbHZia0o1VW05dmRDd2daQ0E5SUNobExsOXNiMk5oYkZKdmIzUWdmSHdnZEdocGN5NWZjbTl2ZENrdWRYVnBaRHNLSUNBZ0lDQWdJQ0JrWld4bGRHVWdkVnRrWFN3Z2JDNXNaVzVuZEdnZ1BUMDlJREFnSmlZZ1pHVnNaWFJsSUc5YmNsMHNJSFJvYVhNdVgzSmxiVzkyWlVsdVlXTjBhWFpsUW1sdVpHbHVaM05HYjNKQlkzUnBiMjRvWlNrN0NpQWdJQ0I5Q2lBZ0lDQmZjbVZ0YjNabFNXNWhZM1JwZG1WQ2FXNWthVzVuYzBadmNrRmpkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMbDl3Y205d1pYSjBlVUpwYm1ScGJtZHpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBaFBUMGdhVHNnS3l0dUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISWdQU0IwVzI1ZE93b2dJQ0FnSUNBZ0lDQWdJQ0F0TFhJdWNtVm1aWEpsYm1ObFEyOTFiblFnUFQwOUlEQWdKaVlnZEdocGN5NWZjbVZ0YjNabFNXNWhZM1JwZG1WQ2FXNWthVzVuS0hJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJRjlzWlc1a1FXTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDJGamRHbHZibk1zSUc0Z1BTQmxMbDlqWVdOb1pVbHVaR1Y0TENCcElEMGdkR2hwY3k1ZmJrRmpkR2wyWlVGamRHbHZibk1yS3l3Z2NpQTlJSFJiYVYwN0NpQWdJQ0FnSUNBZ1pTNWZZMkZqYUdWSmJtUmxlQ0E5SUdrc0lIUmJhVjBnUFNCbExDQnlMbDlqWVdOb1pVbHVaR1Y0SUQwZ2Jpd2dkRnR1WFNBOUlISTdDaUFnSUNCOUNpQWdJQ0JmZEdGclpVSmhZMnRCWTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZV04wYVc5dWN5d2diaUE5SUdVdVgyTmhZMmhsU1c1a1pYZ3NJR2tnUFNBdExYUm9hWE11WDI1QlkzUnBkbVZCWTNScGIyNXpMQ0J5SUQwZ2RGdHBYVHNLSUNBZ0lDQWdJQ0JsTGw5allXTm9aVWx1WkdWNElEMGdhU3dnZEZ0cFhTQTlJR1VzSUhJdVgyTmhZMmhsU1c1a1pYZ2dQU0J1TENCMFcyNWRJRDBnY2pzS0lDQWdJSDBLSUNBZ0lGOWhaR1JKYm1GamRHbDJaVUpwYm1ScGJtY29aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1ZlltbHVaR2x1WjNOQ2VWSnZiM1JCYm1ST1lXMWxMQ0J5SUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUc4Z1BTQnBXM1JkT3dvZ0lDQWdJQ0FnSUc4Z1BUMDlJSFp2YVdRZ01DQW1KaUFvYnlBOUlIdDlMQ0JwVzNSZElEMGdieWtzSUc5YmJsMGdQU0JsTENCbExsOWpZV05vWlVsdVpHVjRJRDBnY2k1c1pXNW5kR2dzSUhJdWNIVnphQ2hsS1RzS0lDQWdJSDBLSUNBZ0lGOXlaVzF2ZG1WSmJtRmpkR2wyWlVKcGJtUnBibWNvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUc0Z1BTQmxMbUpwYm1ScGJtY3NJR2tnUFNCdUxuSnZiM1JPYjJSbExuVjFhV1FzSUhJZ1BTQnVMbkJoZEdnc0lHOGdQU0IwYUdsekxsOWlhVzVrYVc1bmMwSjVVbTl2ZEVGdVpFNWhiV1VzSUdFZ1BTQnZXMmxkTENCc0lEMGdkRnQwTG14bGJtZDBhQ0F0SURGZExDQmpJRDBnWlM1ZlkyRmphR1ZKYm1SbGVEc0tJQ0FnSUNBZ0lDQnNMbDlqWVdOb1pVbHVaR1Y0SUQwZ1l5d2dkRnRqWFNBOUlHd3NJSFF1Y0c5d0tDa3NJR1JsYkdWMFpTQmhXM0pkTENCUFltcGxZM1F1YTJWNWN5aGhLUzVzWlc1bmRHZ2dQVDA5SURBZ0ppWWdaR1ZzWlhSbElHOWJhVjA3Q2lBZ0lDQjlDaUFnSUNCZmJHVnVaRUpwYm1ScGJtY29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJRzRnUFNCbExsOWpZV05vWlVsdVpHVjRMQ0JwSUQwZ2RHaHBjeTVmYmtGamRHbDJaVUpwYm1ScGJtZHpLeXNzSUhJZ1BTQjBXMmxkT3dvZ0lDQWdJQ0FnSUdVdVgyTmhZMmhsU1c1a1pYZ2dQU0JwTENCMFcybGRJRDBnWlN3Z2NpNWZZMkZqYUdWSmJtUmxlQ0E5SUc0c0lIUmJibDBnUFNCeU93b2dJQ0FnZlFvZ0lDQWdYM1JoYTJWQ1lXTnJRbWx1WkdsdVp5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxsOWlhVzVrYVc1bmN5d2diaUE5SUdVdVgyTmhZMmhsU1c1a1pYZ3NJR2tnUFNBdExYUm9hWE11WDI1QlkzUnBkbVZDYVc1a2FXNW5jeXdnY2lBOUlIUmJhVjA3Q2lBZ0lDQWdJQ0FnWlM1ZlkyRmphR1ZKYm1SbGVDQTlJR2tzSUhSYmFWMGdQU0JsTENCeUxsOWpZV05vWlVsdVpHVjRJRDBnYml3Z2RGdHVYU0E5SUhJN0NpQWdJQ0I5Q2lBZ0lDQmZiR1Z1WkVOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZENncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDJOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhNc0lIUWdQU0IwYUdsekxsOXVRV04wYVhabFEyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN5c3JMQ0J1SUQwZ1pWdDBYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaHVJRDBnYm1WM0lFNWhLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29NaWtzSUc1bGR5QkdiRzloZERNeVFYSnlZWGtvTWlrc0lERXNJSFJvYVhNdVgyTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRITlNaWE4xYkhSQ2RXWm1aWElwTENCdUxsOWZZMkZqYUdWSmJtUmxlQ0E5SUhRc0lHVmJkRjBnUFNCdUtTd2dianNLSUNBZ0lIMEtJQ0FnSUY5MFlXdGxRbUZqYTBOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZENobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5amIyNTBjbTlzU1c1MFpYSndiMnhoYm5SekxDQnVJRDBnWlM1ZlgyTmhZMmhsU1c1a1pYZ3NJR2tnUFNBdExYUm9hWE11WDI1QlkzUnBkbVZEYjI1MGNtOXNTVzUwWlhKd2IyeGhiblJ6TENCeUlEMGdkRnRwWFRzS0lDQWdJQ0FnSUNCbExsOWZZMkZqYUdWSmJtUmxlQ0E5SUdrc0lIUmJhVjBnUFNCbExDQnlMbDlmWTJGamFHVkpibVJsZUNBOUlHNHNJSFJiYmwwZ1BTQnlPd29nSUNBZ2ZRb2dJQ0FnWTJ4cGNFRmpkR2x2YmlobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMElIeDhJSFJvYVhNdVgzSnZiM1FzSUhJZ1BTQnBMblYxYVdRc0lHOGdQU0IwZVhCbGIyWWdaU0E5UFNBaWMzUnlhVzVuSWlBL0lFeHlMbVpwYm1SQ2VVNWhiV1VvYVN3Z1pTa2dPaUJsTENCaElEMGdieUFoUFQwZ2JuVnNiQ0EvSUc4dWRYVnBaQ0E2SUdVc0lHd2dQU0IwYUdsekxsOWhZM1JwYjI1elFubERiR2x3VzJGZExDQmpJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnBaaUFvYmlBOVBUMGdkbTlwWkNBd0lDWW1JQ2h2SUNFOVBTQnVkV3hzSUQ4Z2JpQTlJRzh1WW14bGJtUk5iMlJsSURvZ2JpQTlJSFZoS1N3Z2JDQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JDNWhZM1JwYjI1Q2VWSnZiM1JiY2wwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMUlDRTlQU0IyYjJsa0lEQWdKaVlnZFM1aWJHVnVaRTF2WkdVZ1BUMDlJRzRwSUhKbGRIVnliaUIxT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpJRDBnYkM1cmJtOTNia0ZqZEdsdmJuTmJNRjBzSUc4Z1BUMDlJRzUxYkd3Z0ppWWdLRzhnUFNCakxsOWpiR2x3S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLRzhnUFQwOUlHNTFiR3dwSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2JtVjNJRnBvS0hSb2FYTXNJRzhzSUhRc0lHNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5aWFXNWtRV04wYVc5dUtHZ3NJR01wTENCMGFHbHpMbDloWkdSSmJtRmpkR2wyWlVGamRHbHZiaWhvTENCaExDQnlLU3dnYURzS0lDQWdJSDBLSUNBZ0lHVjRhWE4wYVc1blFXTjBhVzl1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFnZkh3Z2RHaHBjeTVmY205dmRDd2dhU0E5SUc0dWRYVnBaQ3dnY2lBOUlIUjVjR1Z2WmlCbElEMDlJQ0p6ZEhKcGJtY2lJRDhnVEhJdVptbHVaRUo1VG1GdFpTaHVMQ0JsS1NBNklHVXNJRzhnUFNCeUlEOGdjaTUxZFdsa0lEb2daU3dnWVNBOUlIUm9hWE11WDJGamRHbHZibk5DZVVOc2FYQmJiMTA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0VnSVQwOUlIWnZhV1FnTUNBbUppQmhMbUZqZEdsdmJrSjVVbTl2ZEZ0cFhTQjhmQ0J1ZFd4c093b2dJQ0FnZlFvZ0lDQWdjM1J2Y0VGc2JFRmpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDJGamRHbHZibk1zSUhRZ1BTQjBhR2x6TGw5dVFXTjBhWFpsUVdOMGFXOXVjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNCMElDMGdNVHNnYmlBK1BTQXdPeUF0TFc0cFpWdHVYUzV6ZEc5d0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHVWdLajBnZEdocGN5NTBhVzFsVTJOaGJHVTdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5aFkzUnBiMjV6TENCdUlEMGdkR2hwY3k1ZmJrRmpkR2wyWlVGamRHbHZibk1zSUdrZ1BTQjBhR2x6TG5ScGJXVWdLejBnWlN3Z2NpQTlJRTFoZEdndWMybG5iaWhsS1N3Z2J5QTlJSFJvYVhNdVgyRmpZM1ZKYm1SbGVDQmVQU0F4T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlBOUlEQTdJR01nSVQwOUlHNDdJQ3NyWXlsMFcyTmRMbDkxY0dSaGRHVW9hU3dnWlN3Z2Npd2dieWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxsOWlhVzVrYVc1bmN5d2diQ0E5SUhSb2FYTXVYMjVCWTNScGRtVkNhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdQU0F3T3lCaklDRTlQU0JzT3lBcksyTXBZVnRqWFM1aGNIQnNlU2h2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZScGJXVW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkR2x0WlNBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTURzZ2RDQThJSFJvYVhNdVgyRmpkR2x2Ym5NdWJHVnVaM1JvT3lCMEt5c3BkR2hwY3k1ZllXTjBhVzl1YzF0MFhTNTBhVzFsSUQwZ01Ec0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUxY0dSaGRHVW9aU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlNiMjkwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl5YjI5ME93b2dJQ0FnZlFvZ0lDQWdkVzVqWVdOb1pVTnNhWEFvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVmWVdOMGFXOXVjeXdnYmlBOUlHVXVkWFZwWkN3Z2FTQTlJSFJvYVhNdVgyRmpkR2x2Ym5OQ2VVTnNhWEFzSUhJZ1BTQnBXMjVkT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQnlMbXR1YjNkdVFXTjBhVzl1Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmhJRDBnTUN3Z2JDQTlJRzh1YkdWdVozUm9PeUJoSUNFOVBTQnNPeUFySzJFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCdlcyRmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZlpHVmhZM1JwZG1GMFpVRmpkR2x2YmloaktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ1l5NWZZMkZqYUdWSmJtUmxlQ3dnZFNBOUlIUmJkQzVzWlc1bmRHZ2dMU0F4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdNdVgyTmhZMmhsU1c1a1pYZ2dQU0J1ZFd4c0xDQmpMbDlpZVVOc2FYQkRZV05vWlVsdVpHVjRJRDBnYm5Wc2JDd2dkUzVmWTJGamFHVkpibVJsZUNBOUlHZ3NJSFJiYUYwZ1BTQjFMQ0IwTG5CdmNDZ3BMQ0IwYUdsekxsOXlaVzF2ZG1WSmJtRmpkR2wyWlVKcGJtUnBibWR6Um05eVFXTjBhVzl1S0dNcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCcFcyNWRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhWdVkyRmphR1ZTYjI5MEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1ZFhWcFpDd2diaUE5SUhSb2FYTXVYMkZqZEdsdmJuTkNlVU5zYVhBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklHbHVJRzRwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHNWJiMTB1WVdOMGFXOXVRbmxTYjI5MExDQnNJRDBnWVZ0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkNBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwYUdsekxsOWtaV0ZqZEdsMllYUmxRV04wYVc5dUtHd3BMQ0IwYUdsekxsOXlaVzF2ZG1WSmJtRmpkR2wyWlVGamRHbHZiaWhzS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM05DZVZKdmIzUkJibVJPWVcxbExDQnlJRDBnYVZ0MFhUc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBaFBUMGdkbTlwWkNBd0tTQm1iM0lvYkdWMElHOGdhVzRnY2lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdjbHR2WFRzS0lDQWdJQ0FnSUNBZ0lDQWdZUzV5WlhOMGIzSmxUM0pwWjJsdVlXeFRkR0YwWlNncExDQjBhR2x6TGw5eVpXMXZkbVZKYm1GamRHbDJaVUpwYm1ScGJtY29ZU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RXNWpZV05vWlVGamRHbHZiaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1WNGFYTjBhVzVuUVdOMGFXOXVLR1VzSUhRcE93b2dJQ0FnSUNBZ0lHNGdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYMlJsWVdOMGFYWmhkR1ZCWTNScGIyNG9iaWtzSUhSb2FYTXVYM0psYlc5MlpVbHVZV04wYVhabFFXTjBhVzl1S0c0cEtUc0tJQ0FnSUgwS2ZUc0tKR2d1Y0hKdmRHOTBlWEJsTGw5amIyNTBjbTlzU1c1MFpYSndiMnhoYm5SelVtVnpkV3gwUW5WbVptVnlJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2d4S1RzS2RtRnlJR2R2SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2RIbHdaVzltSUdVZ1BUMGdJbk4wY21sdVp5SWdKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZXNXBabTl5YlRvZ1ZIbHdaU0J3WVhKaGJXVjBaWElnYVhNZ2JtOGdiRzl1WjJWeUlHNWxaV1JsWkM0aUtTd2daU0E5SUdGeVozVnRaVzUwYzFzeFhTa3NJSFJvYVhNdWRtRnNkV1VnUFNCbE93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJuYnloMGFHbHpMblpoYkhWbExtTnNiMjVsSUQwOVBTQjJiMmxrSURBZ1B5QjBhR2x6TG5aaGJIVmxJRG9nZEdocGN5NTJZV3gxWlM1amJHOXVaU2dwS1RzS0lDQWdJSDBLZlN3Z2FtZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklDUnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNGdQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xbGMyaFFaWEpCZEhSeWFXSjFkR1VnUFNCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTQTlJR1V1YldWemFGQmxja0YwZEhKcFluVjBaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSE4xY0dWeUxtTnNiMjVsS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtMWxjMmhRWlhKQmRIUnlhV0oxZEdVZ1BTQjBhR2x6TG0xbGMyaFFaWEpCZEhSeWFXSjFkR1VzSUhRN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdjM1Z3WlhJdWRHOUtVMDlPS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtbHpTVzV6ZEdGdVkyVmtTVzUwWlhKc1pXRjJaV1JDZFdabVpYSWdQU0FoTUN3Z2RDNXRaWE5vVUdWeVFYUjBjbWxpZFhSbElEMGdkR2hwY3k1dFpYTm9VR1Z5UVhSMGNtbGlkWFJsTENCME93b2dJQ0FnZlFwOU93cHFhQzV3Y205MGIzUjVjR1V1YVhOSmJuTjBZVzVqWldSSmJuUmxjbXhsWVhabFpFSjFabVpsY2lBOUlDRXdPd3AyWVhJZ1VXZ2dQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBMQ0J5S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbUoxWm1abGNpQTlJR1VzSUhSb2FYTXVkSGx3WlNBOUlIUXNJSFJvYVhNdWFYUmxiVk5wZW1VZ1BTQnVMQ0IwYUdsekxtVnNaVzFsYm5SVGFYcGxJRDBnYVN3Z2RHaHBjeTVqYjNWdWRDQTlJSElzSUhSb2FYTXVkbVZ5YzJsdmJpQTlJREE3Q2lBZ0lDQjlDaUFnSUNCelpYUWdibVZsWkhOVmNHUmhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHVWdQVDA5SUNFd0lDWW1JSFJvYVhNdWRtVnljMmx2Ymlzck93b2dJQ0FnZlFvZ0lDQWdjMlYwUW5WbVptVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWlkV1ptWlhJZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVkhsd1pTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkSGx3WlNBOUlHVXNJSFJvYVhNdVpXeGxiV1Z1ZEZOcGVtVWdQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFNYUmxiVk5wZW1Vb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1sMFpXMVRhWHBsSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRU52ZFc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amIzVnVkQ0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q2xGb0xuQnliM1J2ZEhsd1pTNXBjMGRNUW5WbVptVnlRWFIwY21saWRYUmxJRDBnSVRBN0NuWmhjaUJGZVNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRnUFNBd0xDQnBJRDBnTVNBdklEQXBld29nSUNBZ0lDQWdJSFJvYVhNdWNtRjVJRDBnYm1WM0lFTnVLR1VzSUhRcExDQjBhR2x6TG01bFlYSWdQU0J1TENCMGFHbHpMbVpoY2lBOUlHa3NJSFJvYVhNdVkyRnRaWEpoSUQwZ2JuVnNiQ3dnZEdocGN5NXNZWGxsY25NZ1BTQnVaWGNnU25Nc0lIUm9hWE11Y0dGeVlXMXpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQk5aWE5vT2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnVEdsdVpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2h5WlhOb2IyeGtPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUV4UFJEb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lGQnZhVzUwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHlaWE5vYjJ4a09pQXhDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJRk53Y21sMFpUb2dlMzBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KaGVTNXpaWFFvWlN3Z2RDazdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMkZ0WlhKaEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMElDWW1JSFF1YVhOUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVNBL0lDaDBhR2x6TG5KaGVTNXZjbWxuYVc0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSFF1YldGMGNtbDRWMjl5YkdRcExDQjBhR2x6TG5KaGVTNWthWEpsWTNScGIyNHVjMlYwS0dVdWVDd2daUzU1TENBdU5Ta3VkVzV3Y205cVpXTjBLSFFwTG5OMVlpaDBhR2x6TG5KaGVTNXZjbWxuYVc0cExtNXZjbTFoYkdsNlpTZ3BMQ0IwYUdsekxtTmhiV1Z5WVNBOUlIUXBJRG9nZENBbUppQjBMbWx6VDNKMGFHOW5jbUZ3YUdsalEyRnRaWEpoSUQ4Z0tIUm9hWE11Y21GNUxtOXlhV2RwYmk1elpYUW9aUzU0TENCbExua3NJQ2gwTG01bFlYSWdLeUIwTG1aaGNpa2dMeUFvZEM1dVpXRnlJQzBnZEM1bVlYSXBLUzUxYm5CeWIycGxZM1FvZENrc0lIUm9hWE11Y21GNUxtUnBjbVZqZEdsdmJpNXpaWFFvTUN3Z01Dd2dMVEVwTG5SeVlXNXpabTl5YlVScGNtVmpkR2x2YmloMExtMWhkSEpwZUZkdmNteGtLU3dnZEdocGN5NWpZVzFsY21FZ1BTQjBLU0E2SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsSmhlV05oYzNSbGNqb2dWVzV6ZFhCd2IzSjBaV1FnWTJGdFpYSmhJSFI1Y0dVNklDSWdLeUIwTG5SNWNHVXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wVDJKcVpXTjBLR1VzSUhRZ1BTQWhNQ3dnYmlBOUlGdGRLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR3hoS0dVc0lIUm9hWE1zSUc0c0lIUXBMQ0J1TG5OdmNuUW9VR01wTENCdU93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBUMkpxWldOMGN5aGxMQ0IwSUQwZ0lUQXNJRzRnUFNCYlhTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0JsTG14bGJtZDBhRHNnYVNBOElISTdJR2tyS3lsc1lTaGxXMmxkTENCMGFHbHpMQ0J1TENCMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpiM0owS0ZCaktTd2dianNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnVUdNb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITXVaR2x6ZEdGdVkyVWdMU0JsTG1ScGMzUmhibU5sT3dwOUNtWjFibU4wYVc5dUlHeGhLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR2xtSUNoekxteGhlV1Z5Y3k1MFpYTjBLR1V1YkdGNVpYSnpLU0FtSmlCekxuSmhlV05oYzNRb1pTd2dkQ2tzSUc0Z1BUMDlJQ0V3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCekxtTm9hV3hrY21WdU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQnBMbXhsYm1kMGFEc2djaUE4SUc4N0lISXJLeWxzWVNocFczSmRMQ0JsTENCMExDQWhNQ2s3Q2lBZ0lDQjlDbjBLZG1GeUlFRjVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F3TENCdUlEMGdNQ2w3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtRmthWFZ6SUQwZ1pTd2dkR2hwY3k1d2FHa2dQU0IwTENCMGFHbHpMblJvWlhSaElEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjbUZrYVhWeklEMGdaU3dnZEdocGN5NXdhR2tnUFNCMExDQjBhR2x6TG5Sb1pYUmhJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOUlHVXVjbUZrYVhWekxDQjBhR2x6TG5Cb2FTQTlJR1V1Y0docExDQjBhR2x6TG5Sb1pYUmhJRDBnWlM1MGFHVjBZU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWVFlXWmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQm9hU0E5SUUxaGRHZ3ViV0Y0S0RGbExUWXNJRTFoZEdndWJXbHVLRTFoZEdndVVFa2dMU0F4WlMwMkxDQjBhR2x6TG5Cb2FTa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWWmxZM1J2Y2pNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRFWnliMjFEWVhKMFpYTnBZVzVEYjI5eVpITW9aUzU0TENCbExua3NJR1V1ZWlrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEyRnlkR1Z6YVdGdVEyOXZjbVJ6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlZV1JwZFhNZ1BTQk5ZWFJvTG5OeGNuUW9aU0FxSUdVZ0t5QjBJQ29nZENBcklHNGdLaUJ1S1N3Z2RHaHBjeTV5WVdScGRYTWdQVDA5SURBZ1B5QW9kR2hwY3k1MGFHVjBZU0E5SURBc0lIUm9hWE11Y0docElEMGdNQ2tnT2lBb2RHaHBjeTUwYUdWMFlTQTlJRTFoZEdndVlYUmhiaklvWlN3Z2Jpa3NJSFJvYVhNdWNHaHBJRDBnVFdGMGFDNWhZMjl6S0cxMEtIUWdMeUIwYUdsekxuSmhaR2wxY3l3Z0xURXNJREVwS1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRcDlMQ0JEZVNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ01Dd2diaUE5SURBcGV3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpoWkdsMWN5QTlJR1VzSUhSb2FYTXVkR2hsZEdFZ1BTQjBMQ0IwYUdsekxua2dQU0J1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WVdScGRYTWdQU0JsTENCMGFHbHpMblJvWlhSaElEMGdkQ3dnZEdocGN5NTVJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOUlHVXVjbUZrYVhWekxDQjBhR2x6TG5Sb1pYUmhJRDBnWlM1MGFHVjBZU3dnZEdocGN5NTVJRDBnWlM1NUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZabFkzUnZjak1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEVaeWIyMURZWEowWlhOcFlXNURiMjl5WkhNb1pTNTRMQ0JsTG5rc0lHVXVlaWs3Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UTJGeWRHVnphV0Z1UTI5dmNtUnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVlXUnBkWE1nUFNCTllYUm9Mbk54Y25Rb1pTQXFJR1VnS3lCdUlDb2diaWtzSUhSb2FYTXVkR2hsZEdFZ1BTQk5ZWFJvTG1GMFlXNHlLR1VzSUc0cExDQjBhR2x6TG5rZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLZlN3Z1NXTWdQU0J1WlhjZ1dDd2djV2tnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRmdvTVNBdklEQXNJREVnTHlBd0tTd2dkQ0E5SUc1bGR5QllLQzB4SUM4Z01Dd2dMVEVnTHlBd0tTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1dGFXNGdQU0JsTENCMGFHbHpMbTFoZUNBOUlIUTdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTVqYjNCNUtHVXBMQ0IwYUdsekxtMWhlQzVqYjNCNUtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWQnZhVzUwY3lobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlXdGxSVzF3ZEhrb0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdaUzVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZEdocGN5NWxlSEJoYm1SQ2VWQnZhVzUwS0dWYmRGMHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlVObGJuUmxja0Z1WkZOcGVtVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1NXTXVZMjl3ZVNoMEtTNXRkV3gwYVhCc2VWTmpZV3hoY2lndU5TazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtTnZjSGtvWlNrdWMzVmlLRzRwTENCMGFHbHpMbTFoZUM1amIzQjVLR1VwTG1Ga1pDaHVLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dVkyOXdlU2hsTG0xcGJpa3NJSFJvYVhNdWJXRjRMbU52Y0hrb1pTNXRZWGdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpVVnRjSFI1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1NElEMGdkR2hwY3k1dGFXNHVlU0E5SURFZ0x5QXdMQ0IwYUdsekxtMWhlQzU0SUQwZ2RHaHBjeTV0WVhndWVTQTlJQzB4SUM4Z01Dd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHbHpSVzF3ZEhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldGNExuZ2dQQ0IwYUdsekxtMXBiaTU0SUh4OElIUm9hWE11YldGNExua2dQQ0IwYUdsekxtMXBiaTU1T3dvZ0lDQWdmUW9nSUNBZ1oyVjBRMlZ1ZEdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGMwVnRjSFI1S0NrZ1B5QmxMbk5sZENnd0xDQXdLU0E2SUdVdVlXUmtWbVZqZEc5eWN5aDBhR2x6TG0xcGJpd2dkR2hwY3k1dFlYZ3BMbTExYkhScGNHeDVVMk5oYkdGeUtDNDFLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGTnBlbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWx6Ulcxd2RIa29LU0EvSUdVdWMyVjBLREFzSURBcElEb2daUzV6ZFdKV1pXTjBiM0p6S0hSb2FYTXViV0Y0TENCMGFHbHpMbTFwYmlrN0NpQWdJQ0I5Q2lBZ0lDQmxlSEJoYm1SQ2VWQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXbHVLR1VwTENCMGFHbHpMbTFoZUM1dFlYZ29aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsZUhCaGJtUkNlVlpsWTNSdmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbk4xWWlobEtTd2dkR2hwY3k1dFlYZ3VZV1JrS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYaHdZVzVrUW5sVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1aFpHUlRZMkZzWVhJb0xXVXBMQ0IwYUdsekxtMWhlQzVoWkdSVFkyRnNZWElvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIyNTBZV2x1YzFCdmFXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSVNobExuZ2dQQ0IwYUdsekxtMXBiaTU0SUh4OElHVXVlQ0ErSUhSb2FYTXViV0Y0TG5nZ2ZId2daUzU1SUR3Z2RHaHBjeTV0YVc0dWVTQjhmQ0JsTG5rZ1BpQjBhR2x6TG0xaGVDNTVLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuUmhhVzV6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVlQ0E4UFNCbExtMXBiaTU0SUNZbUlHVXViV0Y0TG5nZ1BEMGdkR2hwY3k1dFlYZ3VlQ0FtSmlCMGFHbHpMbTFwYmk1NUlEdzlJR1V1YldsdUxua2dKaVlnWlM1dFlYZ3VlU0E4UFNCMGFHbHpMbTFoZUM1NU93b2dJQ0FnZlFvZ0lDQWdaMlYwVUdGeVlXMWxkR1Z5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzV6WlhRb0tHVXVlQ0F0SUhSb2FYTXViV2x1TG5ncElDOGdLSFJvYVhNdWJXRjRMbmdnTFNCMGFHbHpMbTFwYmk1NEtTd2dLR1V1ZVNBdElIUm9hWE11YldsdUxua3BJQzhnS0hSb2FYTXViV0Y0TG5rZ0xTQjBhR2x6TG0xcGJpNTVLU2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSVNobExtMWhlQzU0SUR3Z2RHaHBjeTV0YVc0dWVDQjhmQ0JsTG0xcGJpNTRJRDRnZEdocGN5NXRZWGd1ZUNCOGZDQmxMbTFoZUM1NUlEd2dkR2hwY3k1dGFXNHVlU0I4ZkNCbExtMXBiaTU1SUQ0Z2RHaHBjeTV0WVhndWVTazdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNGQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVqYjNCNUtHVXBMbU5zWVcxd0tIUm9hWE11YldsdUxDQjBhR2x6TG0xaGVDazdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJKWXk1amIzQjVLR1VwTG1Oc1lXMXdLSFJvYVhNdWJXbHVMQ0IwYUdsekxtMWhlQ2t1YzNWaUtHVXBMbXhsYm1kMGFDZ3BPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXRjRLR1V1YldsdUtTd2dkR2hwY3k1dFlYZ3ViV2x1S0dVdWJXRjRLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFZ1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHViV2x1S0dVdWJXbHVLU3dnZEdocGN5NXRZWGd1YldGNEtHVXViV0Y0S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtRmtaQ2hsS1N3Z2RHaHBjeTV0WVhndVlXUmtLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dGFXNHVaWEYxWVd4ektIUm9hWE11YldsdUtTQW1KaUJsTG0xaGVDNWxjWFZoYkhNb2RHaHBjeTV0WVhncE93b2dJQ0FnZlFwOU93cHhhUzV3Y205MGIzUjVjR1V1YVhOQ2IzZ3lJRDBnSVRBN0NuWmhjaUJFWXlBOUlHNWxkeUJOTENCVWN5QTlJRzVsZHlCTkxDQkxhQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dUU3dnZENBOUlHNWxkeUJOS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbk4wWVhKMElEMGdaU3dnZEdocGN5NWxibVFnUFNCME93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1emRHRnlkQzVqYjNCNUtHVXBMQ0IwYUdsekxtVnVaQzVqYjNCNUtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzNSaGNuUXVZMjl3ZVNobExuTjBZWEowS1N3Z2RHaHBjeTVsYm1RdVkyOXdlU2hsTG1WdVpDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEWlc1MFpYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1Ga1pGWmxZM1J2Y25Nb2RHaHBjeTV6ZEdGeWRDd2dkR2hwY3k1bGJtUXBMbTExYkhScGNHeDVVMk5oYkdGeUtDNDFLVHNLSUNBZ0lIMEtJQ0FnSUdSbGJIUmhLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1emRXSldaV04wYjNKektIUm9hWE11Wlc1a0xDQjBhR2x6TG5OMFlYSjBLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVTNFb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzNSaGNuUXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9kR2hwY3k1bGJtUXBPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjM1JoY25RdVpHbHpkR0Z1WTJWVWJ5aDBhR2x6TG1WdVpDazdDaUFnSUNCOUNpQWdJQ0JoZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHVnNkR0VvZENrdWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrdVlXUmtLSFJvYVhNdWMzUmhjblFwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZjMlZ6ZEZCdmFXNTBWRzlRYjJsdWRGQmhjbUZ0WlhSbGNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ1JHTXVjM1ZpVm1WamRHOXljeWhsTENCMGFHbHpMbk4wWVhKMEtTd2dWSE11YzNWaVZtVmpkRzl5Y3loMGFHbHpMbVZ1WkN3Z2RHaHBjeTV6ZEdGeWRDazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQlVjeTVrYjNRb1ZITXBMQ0J5SUQwZ1ZITXVaRzkwS0VSaktTQXZJRzQ3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSmlZZ0tISWdQU0J0ZENoeUxDQXdMQ0F4S1Nrc0lISTdDaUFnSUNCOUNpQWdJQ0JqYkc5elpYTjBVRzlwYm5SVWIxQnZhVzUwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVZMnh2YzJWemRGQnZhVzUwVkc5UWIybHVkRkJoY21GdFpYUmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWld4MFlTaHVLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHBLUzVoWkdRb2RHaHBjeTV6ZEdGeWRDazdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVMWhkSEpwZURRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5OMFlYSjBMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dkR2hwY3k1bGJtUXVZWEJ3YkhsTllYUnlhWGcwS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXpkR0Z5ZEM1bGNYVmhiSE1vZEdocGN5NXpkR0Z5ZENrZ0ppWWdaUzVsYm1RdVpYRjFZV3h6S0hSb2FYTXVaVzVrS1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDbjBzSUVaaklEMGdibVYzSUUwc0lFeDVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk9aU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11YkdsbmFIUWdQU0JsTENCMGFHbHpMbXhwWjJoMExuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDa3NJSFJvYVhNdWJXRjBjbWw0SUQwZ1pTNXRZWFJ5YVhoWGIzSnNaQ3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVZMjlzYjNJZ1BTQjBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdibVYzSUY5bExDQnBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QTlJREFzSUdFZ1BTQXhMQ0JzSUQwZ016STdJRzhnUENCc095QnZLeXNzSUdFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnYnlBdklHd2dLaUJOWVhSb0xsQkpJQ29nTWl3Z2FDQTlJR0VnTHlCc0lDb2dUV0YwYUM1UVNTQXFJREk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa3VjSFZ6YUNoTllYUm9MbU52Y3loaktTd2dUV0YwYUM1emFXNG9ZeWtzSURFc0lFMWhkR2d1WTI5ektHZ3BMQ0JOWVhSb0xuTnBiaWhvS1N3Z01TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRzR1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaHBMQ0F6S1NrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCdVpYY2dablFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iMmM2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSFJvYVhNdVkyOXVaU0E5SUc1bGR5QjNkQ2h1TENCeUtTd2dkR2hwY3k1aFpHUW9kR2hwY3k1amIyNWxLU3dnZEdocGN5NTFjR1JoZEdVb0tUc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpiMjVsTG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTVqYjI1bExtMWhkR1Z5YVdGc0xtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxteHBaMmgwTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0NrN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbXhwWjJoMExtUnBjM1JoYm1ObElEOGdkR2hwY3k1c2FXZG9kQzVrYVhOMFlXNWpaU0E2SURGbE15d2dkQ0E5SUdVZ0tpQk5ZWFJvTG5SaGJpaDBhR2x6TG14cFoyaDBMbUZ1WjJ4bEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJtVXVjMk5oYkdVdWMyVjBLSFFzSUhRc0lHVXBMQ0JHWXk1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1c2FXZG9kQzUwWVhKblpYUXViV0YwY21sNFYyOXliR1FwTENCMGFHbHpMbU52Ym1VdWJHOXZhMEYwS0VaaktTd2dkR2hwY3k1amIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RHaHBjeTVqYjI1bExtMWhkR1Z5YVdGc0xtTnZiRzl5TG5ObGRDaDBhR2x6TG1OdmJHOXlLU0E2SUhSb2FYTXVZMjl1WlM1dFlYUmxjbWxoYkM1amIyeHZjaTVqYjNCNUtIUm9hWE11YkdsbmFIUXVZMjlzYjNJcE93b2dJQ0FnZlFwOUxDQjViaUE5SUc1bGR5Qk5MQ0JGY3lBOUlHNWxkeUJ3WlN3Z1VXOGdQU0J1WlhjZ2NHVXNJR1YxSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUIzZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUjFLR1VwTENCdUlEMGdibVYzSUY5bExDQnBJRDBnVzEwc0lISWdQU0JiWFN3Z2J5QTlJRzVsZHlCaFpTZ3dMQ0F3TENBeEtTd2dZU0E5SUc1bGR5QmhaU2d3TENBeExDQXdLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nUFNBd095QmpJRHdnZEM1c1pXNW5kR2c3SUdNckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnZEZ0alhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYUM1d1lYSmxiblFnSmlZZ2FDNXdZWEpsYm5RdWFYTkNiMjVsSUNZbUlDaHBMbkIxYzJnb01Dd2dNQ3dnTUNrc0lHa3VjSFZ6YUNnd0xDQXdMQ0F3S1N3Z2NpNXdkWE5vS0c4dWNpd2dieTVuTENCdkxtSXBMQ0J5TG5CMWMyZ29ZUzV5TENCaExtY3NJR0V1WWlrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnVMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2FTd2dNeWtwTENCdUxuTmxkRUYwZEhKcFluVjBaU2dpWTI5c2IzSWlMQ0J1WlhjZ1pHVW9jaXdnTXlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFEyOXNiM0p6T2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFVaWE4wT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjM0JoY21WdWREb2dJVEFLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWh1TENCc0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTJ0bGJHVjBiMjVJWld4d1pYSWlMQ0IwYUdsekxtbHpVMnRsYkdWMGIyNUlaV3h3WlhJZ1BTQWhNQ3dnZEdocGN5NXliMjkwSUQwZ1pTd2dkR2hwY3k1aWIyNWxjeUE5SUhRc0lIUm9hWE11YldGMGNtbDRJRDBnWlM1dFlYUnlhWGhYYjNKc1pDd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbUp2Ym1WekxDQnVJRDBnZEdocGN5NW5aVzl0WlhSeWVTd2dhU0E5SUc0dVoyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlwT3dvZ0lDQWdJQ0FnSUZGdkxtTnZjSGtvZEdocGN5NXliMjkwTG0xaGRISnBlRmR2Y214a0tTNXBiblpsY25Rb0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3TENCdklEMGdNRHNnY2lBOElIUXViR1Z1WjNSb095QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUmJjbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXVjR0Z5Wlc1MElDWW1JR0V1Y0dGeVpXNTBMbWx6UW05dVpTQW1KaUFvUlhNdWJYVnNkR2x3YkhsTllYUnlhV05sY3loUmJ5d2dZUzV0WVhSeWFYaFhiM0pzWkNrc0lIbHVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloRmN5a3NJR2t1YzJWMFdGbGFLRzhzSUhsdUxuZ3NJSGx1TG5rc0lIbHVMbm9wTENCRmN5NXRkV3gwYVhCc2VVMWhkSEpwWTJWektGRnZMQ0JoTG5CaGNtVnVkQzV0WVhSeWFYaFhiM0pzWkNrc0lIbHVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloRmN5a3NJR2t1YzJWMFdGbGFLRzhnS3lBeExDQjViaTU0TENCNWJpNTVMQ0I1Ymk1NktTd2dieUFyUFNBeUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiaTVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpa3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Dd2djM1Z3WlhJdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTazdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJSFIxS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnVzEwN0NpQWdJQ0J6SUNZbUlITXVhWE5DYjI1bElDWW1JR1V1Y0hWemFDaHpLVHNLSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREE3SUhRZ1BDQnpMbU5vYVd4a2NtVnVMbXhsYm1kMGFEc2dkQ3NyS1dVdWNIVnphQzVoY0hCc2VTaGxMQ0IwZFNoekxtTm9hV3hrY21WdVczUmRLU2s3Q2lBZ0lDQnlaWFIxY200Z1pUc0tmUXAyWVhJZ1Vua2dQU0JqYkdGemN5QmxlSFJsYm1SeklITjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJR3hsZENCcElEMGdibVYzSUVacEtIUXNJRFFzSURJcExDQnlJRDBnYm1WM0lHaHVLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2QybHlaV1p5WVcxbE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptOW5PaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2locExDQnlLVHNLSUNBZ0lDQWdJQ0IwYUdsekxteHBaMmgwSUQwZ1pTd2dkR2hwY3k1c2FXZG9kQzUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2dwTENCMGFHbHpMbU52Ykc5eUlEMGdiaXdnZEdocGN5NTBlWEJsSUQwZ0lsQnZhVzUwVEdsbmFIUklaV3h3WlhJaUxDQjBhR2x6TG0xaGRISnBlQ0E5SUhSb2FYTXViR2xuYUhRdWJXRjBjbWw0VjI5eWJHUXNJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxuVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1dFlYUmxjbWxoYkM1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1amIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RHaHBjeTV0WVhSbGNtbGhiQzVqYjJ4dmNpNXpaWFFvZEdocGN5NWpiMnh2Y2lrZ09pQjBhR2x6TG0xaGRHVnlhV0ZzTG1OdmJHOXlMbU52Y0hrb2RHaHBjeTVzYVdkb2RDNWpiMnh2Y2lrN0NpQWdJQ0I5Q24wc0lGQjVJRDBnYm1WM0lFMHNJRTVqSUQwZ2JtVjNJR0ZsTENCQ1l5QTlJRzVsZHlCaFpTd2dTWGtnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXNhV2RvZENBOUlHVXNJSFJvYVhNdWJHbG5hSFF1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1N3Z2RHaHBjeTV0WVhSeWFYZ2dQU0JsTG0xaGRISnBlRmR2Y214a0xDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1amIyeHZjaUE5SUc0N0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdVpYY2dTV2tvZENrN0NpQWdJQ0FnSUNBZ2FTNXliM1JoZEdWWktFMWhkR2d1VUVrZ0tpQXVOU2tzSUhSb2FYTXViV0YwWlhKcFlXd2dQU0J1WlhjZ2FHNG9ld29nSUNBZ0lDQWdJQ0FnSUNCM2FYSmxabkpoYldVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCbWIyYzZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TG1OdmJHOXlJRDA5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11YldGMFpYSnBZV3d1ZG1WeWRHVjRRMjlzYjNKeklEMGdJVEFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYVM1blpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaWtzSUc4Z1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtISXVZMjkxYm5RZ0tpQXpLVHNLSUNBZ0lDQWdJQ0JwTG5ObGRFRjBkSEpwWW5WMFpTZ2lZMjlzYjNJaUxDQnVaWGNnVldVb2J5d2dNeWtwTENCMGFHbHpMbUZrWkNodVpYY2djM1FvYVN3Z2RHaHBjeTV0WVhSbGNtbGhiQ2twTENCMGFHbHpMblZ3WkdGMFpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbU5vYVd4a2NtVnVXekJkTG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTVqYUdsc1pISmxibHN3WFM1dFlYUmxjbWxoYkM1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1Ob2FXeGtjbVZ1V3pCZE93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtTnZiRzl5SUNFOVBTQjJiMmxrSURBcElIUm9hWE11YldGMFpYSnBZV3d1WTI5c2IzSXVjMlYwS0hSb2FYTXVZMjlzYjNJcE93b2dJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVaMlZ2YldWMGNua3VaMlYwUVhSMGNtbGlkWFJsS0NKamIyeHZjaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQk9ZeTVqYjNCNUtIUm9hWE11YkdsbmFIUXVZMjlzYjNJcExDQkNZeTVqYjNCNUtIUm9hWE11YkdsbmFIUXVaM0p2ZFc1a1EyOXNiM0lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVqYjNWdWREc2diaUE4SUdrN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzRnUENCcElDOGdNaUEvSUU1aklEb2dRbU03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwTG5ObGRGaFpXaWh1TENCeUxuSXNJSEl1Wnl3Z2NpNWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IwTG01bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdVdWJHOXZhMEYwS0ZCNUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWgwYUdsekxteHBaMmgwTG0xaGRISnBlRmR2Y214a0tTNXVaV2RoZEdVb0tTazdDaUFnSUNCOUNuMHNJRzUxSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUIzZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNVEFzSUhRZ1BTQXhNQ3dnYmlBOUlEUTBOek01TWpRc0lHa2dQU0E0T1RRM09EUTRLWHNLSUNBZ0lDQWdJQ0J1SUQwZ2JtVjNJR0ZsS0c0cExDQnBJRDBnYm1WM0lHRmxLR2twT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZENBdklESXNJRzhnUFNCbElDOGdkQ3dnWVNBOUlHVWdMeUF5TENCc0lEMGdXMTBzSUdNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1FnUFNBd0xDQm1JRDBnTUN3Z2JTQTlJQzFoT3lCa0lEdzlJSFE3SUdRckt5d2diU0FyUFNCdktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkM1d2RYTm9LQzFoTENBd0xDQnRMQ0JoTENBd0xDQnRLU3dnYkM1d2RYTm9LRzBzSURBc0lDMWhMQ0J0TENBd0xDQmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCa0lEMDlQU0J5SUQ4Z2JpQTZJR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZ3VkRzlCY25KaGVTaGpMQ0JtS1N3Z1ppQXJQU0F6TENCNExuUnZRWEp5WVhrb1l5d2daaWtzSUdZZ0t6MGdNeXdnZUM1MGIwRnljbUY1S0dNc0lHWXBMQ0JtSUNzOUlETXNJSGd1ZEc5QmNuSmhlU2hqTENCbUtTd2daaUFyUFNBek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHNWxkeUJmWlRzS0lDQWdJQ0FnSUNCb0xuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYkN3Z015a3BMQ0JvTG5ObGRFRjBkSEpwWW5WMFpTZ2lZMjlzYjNJaUxDQnVaWGNnWkdVb1l5d2dNeWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UTI5c2IzSnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2lob0xDQjFLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVIzSnBaRWhsYkhCbGNpSTdDaUFnSUNCOUNuMHNJRVI1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUIzZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNVEFzSUhRZ1BTQXhOaXdnYmlBOUlEZ3NJR2tnUFNBMk5Dd2djaUE5SURRME56TTVNalFzSUc4Z1BTQTRPVFEzT0RRNEtYc0tJQ0FnSUNBZ0lDQnlJRDBnYm1WM0lHRmxLSElwTENCdklEMGdibVYzSUdGbEtHOHBPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdXMTBzSUd3Z1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd095QjFJRHc5SUhRN0lIVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2RTQXZJSFFnS2lBb1RXRjBhQzVRU1NBcUlESXBMQ0JtSUQwZ1RXRjBhQzV6YVc0b1pDa2dLaUJsTENCdElEMGdUV0YwYUM1amIzTW9aQ2tnS2lCbE93b2dJQ0FnSUNBZ0lDQWdJQ0JoTG5CMWMyZ29NQ3dnTUN3Z01Da3NJR0V1Y0hWemFDaG1MQ0F3TENCdEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0IxSUNZZ01TQS9JSElnT2lCdk93b2dJQ0FnSUNBZ0lDQWdJQ0JzTG5CMWMyZ29lQzV5TENCNExtY3NJSGd1WWlrc0lHd3VjSFZ6YUNoNExuSXNJSGd1Wnl3Z2VDNWlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxSUQwZ01Ec2dkU0E4UFNCdU95QjFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlIVWdKaUF4SUQ4Z2NpQTZJRzhzSUdZZ1BTQmxJQzBnWlNBdklHNGdLaUIxT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMGdQU0F3T3lCdElEd2dhVHNnYlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ2JTQXZJR2tnS2lBb1RXRjBhQzVRU1NBcUlESXBMQ0IySUQwZ1RXRjBhQzV6YVc0b2VDa2dLaUJtTENCbklEMGdUV0YwYUM1amIzTW9lQ2tnS2lCbU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTNXdkWE5vS0hZc0lEQXNJR2NwTENCc0xuQjFjMmdvWkM1eUxDQmtMbWNzSUdRdVlpa3NJSGdnUFNBb2JTQXJJREVwSUM4Z2FTQXFJQ2hOWVhSb0xsQkpJQ29nTWlrc0lIWWdQU0JOWVhSb0xuTnBiaWg0S1NBcUlHWXNJR2NnUFNCTllYUm9MbU52Y3loNEtTQXFJR1lzSUdFdWNIVnphQ2gyTENBd0xDQm5LU3dnYkM1d2RYTm9LR1F1Y2l3Z1pDNW5MQ0JrTG1JcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnYm1WM0lGOWxPd29nSUNBZ0lDQWdJR011YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaGhMQ0F6S1Nrc0lHTXVjMlYwUVhSMGNtbGlkWFJsS0NKamIyeHZjaUlzSUc1bGR5QmtaU2hzTENBektTazdDaUFnSUNBZ0lDQWdiR1YwSUdnZ1BTQnVaWGNnWm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaERiMnh2Y25NNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLR01zSUdncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pRYjJ4aGNrZHlhV1JJWld4d1pYSWlPd29nSUNBZ2ZRcDlMQ0I2WXlBOUlHNWxkeUJOTENCQmN5QTlJRzVsZHlCTkxDQlZZeUE5SUc1bGR5Qk5MQ0JHZVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbXhwWjJoMElEMGdaU3dnZEdocGN5NXNhV2RvZEM1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNncExDQjBhR2x6TG0xaGRISnBlQ0E5SUdVdWJXRjBjbWw0VjI5eWJHUXNJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxtTnZiRzl5SUQwZ2Jpd2dkQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaDBJRDBnTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdVpYY2dYMlU3Q2lBZ0lDQWdJQ0FnYVM1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLRnNLSUNBZ0lDQWdJQ0FnSUNBZ0xYUXNDaUFnSUNBZ0lDQWdJQ0FnSUhRc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhRc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUXNDaUFnSUNBZ0lDQWdJQ0FnSUMxMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xYUXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzEwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBMQW9nSUNBZ0lDQWdJQ0FnSUNBd0NpQWdJQ0FnSUNBZ1hTd2dNeWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOW5PaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG14cFoyaDBVR3hoYm1VZ1BTQnVaWGNnYjI0b2FTd2djaWtzSUhSb2FYTXVZV1JrS0hSb2FYTXViR2xuYUhSUWJHRnVaU2tzSUdrZ1BTQnVaWGNnWDJVc0lHa3VjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNoYkNpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZExDQXpLU2tzSUhSb2FYTXVkR0Z5WjJWMFRHbHVaU0E5SUc1bGR5QnZiaWhwTENCeUtTd2dkR2hwY3k1aFpHUW9kR2hwY3k1MFlYSm5aWFJNYVc1bEtTd2dkR2hwY3k1MWNHUmhkR1VvS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1c2FXZG9kRkJzWVc1bExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1c2FXZG9kRkJzWVc1bExtMWhkR1Z5YVdGc0xtUnBjM0J2YzJVb0tTd2dkR2hwY3k1MFlYSm5aWFJNYVc1bExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1MFlYSm5aWFJNYVc1bExtMWhkR1Z5YVdGc0xtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpTZ3BJSHNLSUNBZ0lDQWdJQ0I2WXk1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1c2FXZG9kQzV0WVhSeWFYaFhiM0pzWkNrc0lFRnpMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloMGFHbHpMbXhwWjJoMExuUmhjbWRsZEM1dFlYUnlhWGhYYjNKc1pDa3NJRlZqTG5OMVlsWmxZM1J2Y25Nb1FYTXNJSHBqS1N3Z2RHaHBjeTVzYVdkb2RGQnNZVzVsTG14dmIydEJkQ2hCY3lrc0lIUm9hWE11WTI5c2IzSWdJVDA5SUhadmFXUWdNQ0EvSUNoMGFHbHpMbXhwWjJoMFVHeGhibVV1YldGMFpYSnBZV3d1WTI5c2IzSXVjMlYwS0hSb2FYTXVZMjlzYjNJcExDQjBhR2x6TG5SaGNtZGxkRXhwYm1VdWJXRjBaWEpwWVd3dVkyOXNiM0l1YzJWMEtIUm9hWE11WTI5c2IzSXBLU0E2SUNoMGFHbHpMbXhwWjJoMFVHeGhibVV1YldGMFpYSnBZV3d1WTI5c2IzSXVZMjl3ZVNoMGFHbHpMbXhwWjJoMExtTnZiRzl5S1N3Z2RHaHBjeTUwWVhKblpYUk1hVzVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbU52Y0hrb2RHaHBjeTVzYVdkb2RDNWpiMnh2Y2lrcExDQjBhR2x6TG5SaGNtZGxkRXhwYm1VdWJHOXZhMEYwS0VGektTd2dkR2hwY3k1MFlYSm5aWFJNYVc1bExuTmpZV3hsTG5vZ1BTQlZZeTVzWlc1bmRHZ29LVHNLSUNBZ0lIMEtmU3dnUTNNZ1BTQnVaWGNnVFN3Z1VXVWdQU0J1WlhjZ1NYSXNJRTU1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUIzZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHNWxkeUJmWlN3Z2JpQTlJRzVsZHlCbWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUF4TmpjM056SXhOU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UTI5c2IzSnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtTd2dhU0E5SUZ0ZExDQnlJRDBnVzEwc0lHOGdQU0I3ZlN3Z1lTQTlJRzVsZHlCaFpTZ3hOamMxTlRJd01Da3NJR3dnUFNCdVpYY2dZV1VvTVRZM01URTJPREFwTENCaklEMGdibVYzSUdGbEtEUXpOemMxS1N3Z2FDQTlJRzVsZHlCaFpTZ3hOamMzTnpJeE5Ta3NJSFVnUFNCdVpYY2dZV1VvTXpNMU5UUTBNeWs3Q2lBZ0lDQWdJQ0FnWkNnaWJqRWlMQ0FpYmpJaUxDQmhLU3dnWkNnaWJqSWlMQ0FpYmpRaUxDQmhLU3dnWkNnaWJqUWlMQ0FpYmpNaUxDQmhLU3dnWkNnaWJqTWlMQ0FpYmpFaUxDQmhLU3dnWkNnaVpqRWlMQ0FpWmpJaUxDQmhLU3dnWkNnaVpqSWlMQ0FpWmpRaUxDQmhLU3dnWkNnaVpqUWlMQ0FpWmpNaUxDQmhLU3dnWkNnaVpqTWlMQ0FpWmpFaUxDQmhLU3dnWkNnaWJqRWlMQ0FpWmpFaUxDQmhLU3dnWkNnaWJqSWlMQ0FpWmpJaUxDQmhLU3dnWkNnaWJqTWlMQ0FpWmpNaUxDQmhLU3dnWkNnaWJqUWlMQ0FpWmpRaUxDQmhLU3dnWkNnaWNDSXNJQ0p1TVNJc0lHd3BMQ0JrS0NKd0lpd2dJbTR5SWl3Z2JDa3NJR1FvSW5BaUxDQWliak1pTENCc0tTd2daQ2dpY0NJc0lDSnVOQ0lzSUd3cExDQmtLQ0oxTVNJc0lDSjFNaUlzSUdNcExDQmtLQ0oxTWlJc0lDSjFNeUlzSUdNcExDQmtLQ0oxTXlJc0lDSjFNU0lzSUdNcExDQmtLQ0pqSWl3Z0luUWlMQ0JvS1N3Z1pDZ2ljQ0lzSUNKaklpd2dkU2tzSUdRb0ltTnVNU0lzSUNKamJqSWlMQ0IxS1N3Z1pDZ2lZMjR6SWl3Z0ltTnVOQ0lzSUhVcExDQmtLQ0pqWmpFaUxDQWlZMll5SWl3Z2RTa3NJR1FvSW1ObU15SXNJQ0pqWmpRaUxDQjFLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJrS0cwc0lIZ3NJSFlwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaaWh0TENCMktTd2daaWg0TENCMktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdaaWh0TENCNEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdrdWNIVnphQ2d3TENBd0xDQXdLU3dnY2k1d2RYTm9LSGd1Y2l3Z2VDNW5MQ0I0TG1JcExDQnZXMjFkSUQwOVBTQjJiMmxrSURBZ0ppWWdLRzliYlYwZ1BTQmJYU2tzSUc5YmJWMHVjSFZ6YUNocExteGxibWQwYUNBdklETWdMU0F4S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RDNXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0drc0lETXBLU3dnZEM1elpYUkJkSFJ5YVdKMWRHVW9JbU52Ykc5eUlpd2dibVYzSUdSbEtISXNJRE1wS1RzS0lDQWdJQ0FnSUNCemRYQmxjaWgwTENCdUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUTJGdFpYSmhTR1ZzY0dWeUlpd2dkR2hwY3k1allXMWxjbUVnUFNCbExDQjBhR2x6TG1OaGJXVnlZUzUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNElDWW1JSFJvYVhNdVkyRnRaWEpoTG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LU3dnZEdocGN5NXRZWFJ5YVhnZ1BTQmxMbTFoZEhKcGVGZHZjbXhrTENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTV3YjJsdWRFMWhjQ0E5SUc4c0lIUm9hWE11ZFhCa1lYUmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbWRsYjIxbGRISjVMQ0IwSUQwZ2RHaHBjeTV3YjJsdWRFMWhjQ3dnYmlBOUlERXNJR2tnUFNBeE93b2dJQ0FnSUNBZ0lGRmxMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYaEpiblpsY25ObExtTnZjSGtvZEdocGN5NWpZVzFsY21FdWNISnZhbVZqZEdsdmJrMWhkSEpwZUVsdWRtVnljMlVwTENCbGRDZ2lZeUlzSUhRc0lHVXNJRkZsTENBd0xDQXdMQ0F0TVNrc0lHVjBLQ0owSWl3Z2RDd2daU3dnVVdVc0lEQXNJREFzSURFcExDQmxkQ2dpYmpFaUxDQjBMQ0JsTENCUlpTd2dMVzRzSUMxcExDQXRNU2tzSUdWMEtDSnVNaUlzSUhRc0lHVXNJRkZsTENCdUxDQXRhU3dnTFRFcExDQmxkQ2dpYmpNaUxDQjBMQ0JsTENCUlpTd2dMVzRzSUdrc0lDMHhLU3dnWlhRb0ltNDBJaXdnZEN3Z1pTd2dVV1VzSUc0c0lHa3NJQzB4S1N3Z1pYUW9JbVl4SWl3Z2RDd2daU3dnVVdVc0lDMXVMQ0F0YVN3Z01Ta3NJR1YwS0NKbU1pSXNJSFFzSUdVc0lGRmxMQ0J1TENBdGFTd2dNU2tzSUdWMEtDSm1NeUlzSUhRc0lHVXNJRkZsTENBdGJpd2dhU3dnTVNrc0lHVjBLQ0ptTkNJc0lIUXNJR1VzSUZGbExDQnVMQ0JwTENBeEtTd2daWFFvSW5VeElpd2dkQ3dnWlN3Z1VXVXNJRzRnS2lBdU55d2dhU0FxSURFdU1Td2dMVEVwTENCbGRDZ2lkVElpTENCMExDQmxMQ0JSWlN3Z0xXNGdLaUF1Tnl3Z2FTQXFJREV1TVN3Z0xURXBMQ0JsZENnaWRUTWlMQ0IwTENCbExDQlJaU3dnTUN3Z2FTQXFJRElzSUMweEtTd2daWFFvSW1ObU1TSXNJSFFzSUdVc0lGRmxMQ0F0Yml3Z01Dd2dNU2tzSUdWMEtDSmpaaklpTENCMExDQmxMQ0JSWlN3Z2Jpd2dNQ3dnTVNrc0lHVjBLQ0pqWmpNaUxDQjBMQ0JsTENCUlpTd2dNQ3dnTFdrc0lERXBMQ0JsZENnaVkyWTBJaXdnZEN3Z1pTd2dVV1VzSURBc0lHa3NJREVwTENCbGRDZ2lZMjR4SWl3Z2RDd2daU3dnVVdVc0lDMXVMQ0F3TENBdE1Ta3NJR1YwS0NKamJqSWlMQ0IwTENCbExDQlJaU3dnYml3Z01Dd2dMVEVwTENCbGRDZ2lZMjR6SWl3Z2RDd2daU3dnVVdVc0lEQXNJQzFwTENBdE1Ta3NJR1YwS0NKamJqUWlMQ0IwTENCbExDQlJaU3dnTUN3Z2FTd2dMVEVwTENCbExtZGxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpS1M1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUdWMEtITXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBJSHNLSUNBZ0lFTnpMbk5sZENocExDQnlMQ0J2S1M1MWJuQnliMnBsWTNRb2JpazdDaUFnSUNCc1pYUWdZU0E5SUdWYmMxMDdDaUFnSUNCcFppQW9ZU0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCMExtZGxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdMQ0JvSUQwZ1lTNXNaVzVuZEdnN0lHTWdQQ0JvT3lCakt5c3BiQzV6WlhSWVdWb29ZVnRqWFN3Z1EzTXVlQ3dnUTNNdWVTd2dRM011ZWlrN0NpQWdJQ0I5Q24wS2RtRnlJRXh6SUQwZ2JtVjNJRXgwTENCcGRTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2QzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENBOUlERTJOemMyT1RZd0tYc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHNWxkeUJWYVc1ME1UWkJjbkpoZVNoYkNpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURjS0lDQWdJQ0FnSUNCZEtTd2dhU0E5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvT0NBcUlETXBMQ0J5SUQwZ2JtVjNJRjlsT3dvZ0lDQWdJQ0FnSUhJdWMyVjBTVzVrWlhnb2JtVjNJRlZsS0c0c0lERXBLU3dnY2k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lGVmxLR2tzSURNcEtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2loeUxDQnVaWGNnWm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV2WW1wbFkzUWdQU0JsTENCMGFHbHpMblI1Y0dVZ1BTQWlRbTk0U0dWc2NHVnlJaXdnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVkWEJrWVhSbEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGxJQ0U5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNiM2hJWld4d1pYSTZJQzUxY0dSaGRHVW9LU0JvWVhNZ2JtOGdiRzl1WjJWeUlHRnlaM1Z0Wlc1MGN5NGlLU3dnZEdocGN5NXZZbXBsWTNRZ0lUMDlJSFp2YVdRZ01DQW1KaUJNY3k1elpYUkdjbTl0VDJKcVpXTjBLSFJvYVhNdWIySnFaV04wS1N3Z1RITXVhWE5GYlhCMGVTZ3BLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQk1jeTV0YVc0c0lHNGdQU0JNY3k1dFlYZ3NJR2tnUFNCMGFHbHpMbWRsYjIxbGRISjVMbUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRzSUhJZ1BTQnBMbUZ5Y21GNU93b2dJQ0FnSUNBZ0lISmJNRjBnUFNCdUxuZ3NJSEpiTVYwZ1BTQnVMbmtzSUhKYk1sMGdQU0J1TG5vc0lISmJNMTBnUFNCMExuZ3NJSEpiTkYwZ1BTQnVMbmtzSUhKYk5WMGdQU0J1TG5vc0lISmJObDBnUFNCMExuZ3NJSEpiTjEwZ1BTQjBMbmtzSUhKYk9GMGdQU0J1TG5vc0lISmJPVjBnUFNCdUxuZ3NJSEpiTVRCZElEMGdkQzU1TENCeVd6RXhYU0E5SUc0dWVpd2djbHN4TWwwZ1BTQnVMbmdzSUhKYk1UTmRJRDBnYmk1NUxDQnlXekUwWFNBOUlIUXVlaXdnY2xzeE5WMGdQU0IwTG5nc0lISmJNVFpkSUQwZ2JpNTVMQ0J5V3pFM1hTQTlJSFF1ZWl3Z2Nsc3hPRjBnUFNCMExuZ3NJSEpiTVRsZElEMGdkQzU1TENCeVd6SXdYU0E5SUhRdWVpd2djbHN5TVYwZ1BTQnVMbmdzSUhKYk1qSmRJRDBnZEM1NUxDQnlXekl6WFNBOUlIUXVlaXdnYVM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMGFHbHpMbWRsYjIxbGRISjVMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncE93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVOWlhbVZqZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YjJKcVpXTjBJRDBnWlN3Z2RHaHBjeTUxY0dSaGRHVW9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjNkQzV3Y205MGIzUjVjR1V1WTI5d2VTNWpZV3hzS0hSb2FYTXNJR1VwTENCMGFHbHpMbTlpYW1WamRDQTlJR1V1YjJKcVpXTjBMQ0IwYUdsek93b2dJQ0FnZlFwOUxDQkNlU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdkM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDQTlJREUyTnpjMk9UWXdLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRzVsZHlCVmFXNTBNVFpCY25KaGVTaGJDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEY0tJQ0FnSUNBZ0lDQmRLU3dnYVNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNUW9nSUNBZ0lDQWdJRjBzSUhJZ1BTQnVaWGNnWDJVN0NpQWdJQ0FnSUNBZ2NpNXpaWFJKYm1SbGVDaHVaWGNnVldVb2Jpd2dNU2twTENCeUxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYVN3Z015a3BPd29nSUNBZ0lDQWdJSE4xY0dWeUtISXNJRzVsZHlCbWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1KdmVDQTlJR1VzSUhSb2FYTXVkSGx3WlNBOUlDSkNiM2d6U0dWc2NHVnlJaXdnZEdocGN5NW5aVzl0WlhSeWVTNWpiMjF3ZFhSbFFtOTFibVJwYm1kVGNHaGxjbVVvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVltOTRPd29nSUNBZ0lDQWdJSFF1YVhORmJYQjBlU2dwSUh4OElDaDBMbWRsZEVObGJuUmxjaWgwYUdsekxuQnZjMmwwYVc5dUtTd2dkQzVuWlhSVGFYcGxLSFJvYVhNdWMyTmhiR1VwTENCMGFHbHpMbk5qWVd4bExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0MUtTd2djM1Z3WlhJdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa3BPd29nSUNBZ2ZRcDlMQ0I2ZVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYjI0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ0E5SURFc0lHNGdQU0F4TmpjM05qazJNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1TENCeUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQmRMQ0J2SUQwZ2JtVjNJRjlsT3dvZ0lDQWdJQ0FnSUc4dWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2h5TENBektTa3NJRzh1WTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDazdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2J5d2dibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnZibVZOWVhCd1pXUTZJQ0V4Q2lBZ0lDQWdJQ0FnZlNrcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pRYkdGdVpVaGxiSEJsY2lJc0lIUm9hWE11Y0d4aGJtVWdQU0JsTENCMGFHbHpMbk5wZW1VZ1BTQjBPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ1hTd2diQ0E5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0JzTG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9ZU3dnTXlrcExDQnNMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncExDQjBhR2x6TG1Ga1pDaHVaWGNnYzNRb2JDd2dibVYzSUdodUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOXdZV05wZEhrNklDNHlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjM0JoY21WdWREb2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvVjNKcGRHVTZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcEtTazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNBdGRHaHBjeTV3YkdGdVpTNWpiMjV6ZEdGdWREc0tJQ0FnSUNBZ0lDQk5ZWFJvTG1GaWN5aDBLU0E4SURGbExUZ2dKaVlnS0hRZ1BTQXhaUzA0S1N3Z2RHaHBjeTV6WTJGc1pTNXpaWFFvTGpVZ0tpQjBhR2x6TG5OcGVtVXNJQzQxSUNvZ2RHaHBjeTV6YVhwbExDQjBLU3dnZEdocGN5NWphR2xzWkhKbGJsc3dYUzV0WVhSbGNtbGhiQzV6YVdSbElEMGdkQ0E4SURBZ1B5QnBkQ0E2SUVGcExDQjBhR2x6TG14dmIydEJkQ2gwYUdsekxuQnNZVzVsTG01dmNtMWhiQ2tzSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwT3dvZ0lDQWdmUXA5TENCUFl5QTlJRzVsZHlCTkxDQlNjeXdnUzI4c0lGVjVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk9aU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRTBvTUN3Z01Dd2dNU2tzSUhRZ1BTQnVaWGNnVFNnd0xDQXdMQ0F3S1N3Z2JpQTlJREVzSUdrZ1BTQXhOamMzTmprMk1Dd2djaUE5SUc0Z0tpQXVNaXdnYnlBOUlISWdLaUF1TWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRWEp5YjNkSVpXeHdaWElpTENCU2N5QTlQVDBnZG05cFpDQXdJQ1ltSUNoU2N5QTlJRzVsZHlCZlpTd2dVbk11YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaGJDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQmRMQ0F6S1Nrc0lFdHZJRDBnYm1WM0lFcHVLREFzSUM0MUxDQXhMQ0ExTENBeEtTd2dTMjh1ZEhKaGJuTnNZWFJsS0RBc0lDMHVOU3dnTUNrcExDQjBhR2x6TG5CdmMybDBhVzl1TG1OdmNIa29kQ2tzSUhSb2FYTXViR2x1WlNBOUlHNWxkeUJ2YmloU2N5d2dibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnZibVZOWVhCd1pXUTZJQ0V4Q2lBZ0lDQWdJQ0FnZlNrcExDQjBhR2x6TG14cGJtVXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMbUZrWkNoMGFHbHpMbXhwYm1VcExDQjBhR2x6TG1OdmJtVWdQU0J1WlhjZ2MzUW9TMjhzSUc1bGR5Qm9iaWg3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBLU3dnZEdocGN5NWpiMjVsTG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1aFpHUW9kR2hwY3k1amIyNWxLU3dnZEdocGN5NXpaWFJFYVhKbFkzUnBiMjRvWlNrc0lIUm9hWE11YzJWMFRHVnVaM1JvS0c0c0lISXNJRzhwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSR2x5WldOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9aUzU1SUQ0Z0xqazVPVGs1S1NCMGFHbHpMbkYxWVhSbGNtNXBiMjR1YzJWMEtEQXNJREFzSURBc0lERXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLR1V1ZVNBOElDMHVPVGs1T1RrcElIUm9hWE11Y1hWaGRHVnlibWx2Ymk1elpYUW9NU3dnTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUU5akxuTmxkQ2hsTG5vc0lEQXNJQzFsTG5ncExtNXZjbTFoYkdsNlpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUUxaGRHZ3VZV052Y3lobExua3BPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkYxWVhSbGNtNXBiMjR1YzJWMFJuSnZiVUY0YVhOQmJtZHNaU2hQWXl3Z2RDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnYzJWMFRHVnVaM1JvS0dVc0lIUWdQU0JsSUNvZ0xqSXNJRzRnUFNCMElDb2dMaklwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbXhwYm1VdWMyTmhiR1V1YzJWMEtERXNJRTFoZEdndWJXRjRLREZsTFRRc0lHVWdMU0IwS1N3Z01Ta3NJSFJvYVhNdWJHbHVaUzUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2dkR2hwY3k1amIyNWxMbk5qWVd4bExuTmxkQ2h1TENCMExDQnVLU3dnZEdocGN5NWpiMjVsTG5CdmMybDBhVzl1TG5rZ1BTQmxMQ0IwYUdsekxtTnZibVV1ZFhCa1lYUmxUV0YwY21sNEtDazdDaUFnSUNCOUNpQWdJQ0J6WlhSRGIyeHZjaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVzYVc1bExtMWhkR1Z5YVdGc0xtTnZiRzl5TG5ObGRDaGxLU3dnZEdocGN5NWpiMjVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbk5sZENobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VzSUNFeEtTd2dkR2hwY3k1c2FXNWxMbU52Y0hrb1pTNXNhVzVsS1N3Z2RHaHBjeTVqYjI1bExtTnZjSGtvWlM1amIyNWxLU3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2djblVnUFNCamJHRnpjeUJsZUhSbGJtUnpJSGQwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWlN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdaUW9nSUNBZ0lDQWdJRjBzSUc0Z1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzQyTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdU5pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTGpZc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkTENCcElEMGdibVYzSUY5bE93b2dJQ0FnSUNBZ0lHa3VjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNoMExDQXpLU2tzSUdrdWMyVjBRWFIwY21saWRYUmxLQ0pqYjJ4dmNpSXNJRzVsZHlCa1pTaHVMQ0F6S1NrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCdVpYY2dablFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoRGIyeHZjbk02SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSE4xY0dWeUtHa3NJSElwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkJlR1Z6U0dWc2NHVnlJanNLSUNBZ0lIMEtJQ0FnSUhObGRFTnZiRzl5Y3lobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdVpYY2dZV1VzSUhJZ1BTQjBhR2x6TG1kbGIyMWxkSEo1TG1GMGRISnBZblYwWlhNdVkyOXNiM0l1WVhKeVlYazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHa3VjMlYwS0dVcExDQnBMblJ2UVhKeVlYa29jaXdnTUNrc0lHa3VkRzlCY25KaGVTaHlMQ0F6S1N3Z2FTNXpaWFFvZENrc0lHa3VkRzlCY25KaGVTaHlMQ0EyS1N3Z2FTNTBiMEZ5Y21GNUtISXNJRGtwTENCcExuTmxkQ2h1S1N3Z2FTNTBiMEZ5Y21GNUtISXNJREV5S1N3Z2FTNTBiMEZ5Y21GNUtISXNJREUxS1N3Z2RHaHBjeTVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6TG1OdmJHOXlMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVoyVnZiV1YwY25rdVpHbHpjRzl6WlNncExDQjBhR2x6TG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLZlN3Z1Qza2dQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKVGFHRndaVkJoZEdnaUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lHRmxMQ0IwYUdsekxuTjFZbEJoZEdoeklEMGdXMTBzSUhSb2FYTXVZM1Z5Y21WdWRGQmhkR2dnUFNCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnYlc5MlpWUnZLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKeVpXNTBVR0YwYUNBOUlHNWxkeUJuY2l3Z2RHaHBjeTV6ZFdKUVlYUm9jeTV3ZFhOb0tIUm9hWE11WTNWeWNtVnVkRkJoZEdncExDQjBhR2x6TG1OMWNuSmxiblJRWVhSb0xtMXZkbVZVYnlobExDQjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3hwYm1WVWJ5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5Y21WdWRGQmhkR2d1YkdsdVpWUnZLR1VzSUhRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NYVmhaSEpoZEdsalEzVnlkbVZVYnlobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTNWeWNtVnVkRkJoZEdndWNYVmhaSEpoZEdsalEzVnlkbVZVYnlobExDQjBMQ0J1TENCcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHSmxlbWxsY2tOMWNuWmxWRzhvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjbkpsYm5SUVlYUm9MbUpsZW1sbGNrTjFjblpsVkc4b1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemNHeHBibVZVYUhKMUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amRYSnlaVzUwVUdGMGFDNXpjR3hwYm1WVWFISjFLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5VGFHRndaWE1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzRvY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIa2dQU0F3TENCaUlEMGdjQzVzWlc1bmRHZzdJSGtnUENCaU95QjVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFRWdQU0J3VzNsZExDQk1JRDBnYm1WM0lGaDBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUQzVqZFhKMlpYTWdQU0JCTG1OMWNuWmxjeXdnWHk1d2RYTm9LRXdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJmT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCcEtIQXNJRjhwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhrZ1BTQmZMbXhsYm1kMGFDd2dZaUE5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUVnUFNCNUlDMGdNU3dnVENBOUlEQTdJRXdnUENCNU95QkJJRDBnVENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JKSUQwZ1gxdEJYU3dnYXlBOUlGOWJURjBzSUVJZ1BTQnJMbmdnTFNCSkxuZ3NJRkFnUFNCckxua2dMU0JKTG5rN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9UV0YwYUM1aFluTW9VQ2tnUGlCT2RXMWlaWEl1UlZCVFNVeFBUaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hRSUR3Z01DQW1KaUFvU1NBOUlGOWJURjBzSUVJZ1BTQXRRaXdnYXlBOUlGOWJRVjBzSUZBZ1BTQXRVQ2tzSUhBdWVTQThJRWt1ZVNCOGZDQndMbmtnUGlCckxua3BJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdMbmtnUFQwOUlFa3VlU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NDNTRJRDA5UFNCSkxuZ3BJSEpsZEhWeWJpQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2R5QTlJRkFnS2lBb2NDNTRJQzBnU1M1NEtTQXRJRUlnS2lBb2NDNTVJQzBnU1M1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSGNnUFQwOUlEQXBJSEpsZEhWeWJpQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hjZ1BDQXdLU0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZaUE5SUNGaU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQXVlU0FoUFQwZ1NTNTVLU0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9heTU0SUR3OUlIQXVlQ0FtSmlCd0xuZ2dQRDBnU1M1NElIeDhJRWt1ZUNBOFBTQndMbmdnSmlZZ2NDNTRJRHc5SUdzdWVDa2djbVYwZFhKdUlDRXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmlPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRXAwTG1selEyeHZZMnRYYVhObExDQnZJRDBnZEdocGN5NXpkV0pRWVhSb2N6c0tJQ0FnSUNBZ0lDQnBaaUFvYnk1c1pXNW5kR2dnUFQwOUlEQXBJSEpsZEhWeWJpQmJYVHNLSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnSVRBcElISmxkSFZ5YmlCdUtHOHBPd29nSUNBZ0lDQWdJR3hsZENCaExDQnNMQ0JqTENCb0lEMGdXMTA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHOHViR1Z1WjNSb0lEMDlQU0F4S1NCeVpYUjFjbTRnYkNBOUlHOWJNRjBzSUdNZ1BTQnVaWGNnV0hRc0lHTXVZM1Z5ZG1WeklEMGdiQzVqZFhKMlpYTXNJR2d1Y0hWemFDaGpLU3dnYURzS0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUNGeUtHOWJNRjB1WjJWMFVHOXBiblJ6S0NrcE93b2dJQ0FnSUNBZ0lIVWdQU0JsSUQ4Z0lYVWdPaUIxT3dvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnVzEwc0lHWWdQU0JiWFN3Z2JTQTlJRnRkTENCNElEMGdNQ3dnZGpzS0lDQWdJQ0FnSUNCbVczaGRJRDBnZG05cFpDQXdMQ0J0VzNoZElEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J3SUQwZ01Dd2dYeUE5SUc4dWJHVnVaM1JvT3lCd0lEd2dYenNnY0NzcktXd2dQU0J2VzNCZExDQjJJRDBnYkM1blpYUlFiMmx1ZEhNb0tTd2dZU0E5SUhJb2Rpa3NJR0VnUFNCbElEOGdJV0VnT2lCaExDQmhJRDhnS0NGMUlDWW1JR1piZUYwZ0ppWWdlQ3NyTENCbVczaGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpPaUJ1WlhjZ1dIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhBNklIWUtJQ0FnSUNBZ0lDQjlMQ0JtVzNoZExuTXVZM1Z5ZG1WeklEMGdiQzVqZFhKMlpYTXNJSFVnSmlZZ2VDc3JMQ0J0VzNoZElEMGdXMTBwSURvZ2JWdDRYUzV3ZFhOb0tIc0tJQ0FnSUNBZ0lDQWdJQ0FnYURvZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnY0RvZ2Rsc3dYUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUdsbUlDZ2habHN3WFNrZ2NtVjBkWEp1SUc0b2J5azdDaUFnSUNBZ0lDQWdhV1lnS0dZdWJHVnVaM1JvSUQ0Z01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUNFeExDQmZJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBc0lHSWdQU0JtTG14bGJtZDBhRHNnZVNBOElHSTdJSGtyS3lsa1czbGRJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBc0lHSWdQU0JtTG14bGJtZDBhRHNnZVNBOElHSTdJSGtyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRU0E5SUcxYmVWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFd2dQU0F3T3lCTUlEd2dRUzVzWlc1bmRHZzdJRXdyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVrZ1BTQkJXMHhkTENCcklEMGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCQ0lEMGdNRHNnUWlBOElHWXViR1Z1WjNSb095QkNLeXNwYVNoSkxuQXNJR1piUWwwdWNDa2dKaVlnS0hrZ0lUMDlJRUlnSmlZZ1h5NXdkWE5vS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm5KdmJYTTZJSGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ2Y3pvZ1Fpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHOXNaVG9nVEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBMQ0JySUQ4Z0tHc2dQU0FoTVN3Z1pGdENYUzV3ZFhOb0tFa3BLU0E2SUhBZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2F5QW1KaUJrVzNsZExuQjFjMmdvU1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1h5NXNaVzVuZEdnZ1BpQXdJQ1ltSUNod0lIeDhJQ2h0SUQwZ1pDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1p6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIQWdQU0F3TENCZklEMGdaaTVzWlc1bmRHZzdJSEFnUENCZk95QndLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpJRDBnWmx0d1hTNXpMQ0JvTG5CMWMyZ29ZeWtzSUdjZ1BTQnRXM0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIa2dQU0F3TENCaUlEMGdaeTVzWlc1bmRHZzdJSGtnUENCaU95QjVLeXNwWXk1b2IyeGxjeTV3ZFhOb0tHZGJlVjB1YUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCb093b2dJQ0FnZlFwOUxDQnpkU0E5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvTVNrc0lFaDVJRDBnYm1WM0lFbHVkRE15UVhKeVlYa29jM1V1WW5WbVptVnlLU3dnYTNrZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0J6ZEdGMGFXTWdkRzlJWVd4bVJteHZZWFFvWlNrZ2V3b2dJQ0FnSUNBZ0lHVWdQaUEyTlRVd05DQW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1RVlYUmhWWFJwYkhNdWRHOUlZV3htUm14dllYUW9LVG9nZG1Gc2RXVWdaWGhqWldWa2N5QTJOVFV3TkM0aUtTd2daU0E5SURZMU5UQTBLU3dnYzNWYk1GMGdQU0JsT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnU0hsYk1GMHNJRzRnUFNCMElENCtJREUySUNZZ016STNOamdzSUdrZ1BTQjBJRDQrSURFeUlDWWdNakEwTnl3Z2NpQTlJSFFnUGo0Z01qTWdKaUF5TlRVN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJZ1BDQXhNRE1nUHlCdUlEb2djaUErSURFME1pQS9JQ2h1SUh3OUlETXhOelEwTENCdUlIdzlJQ2h5SUQwOUlESTFOU0EvSURBZ09pQXhLU0FtSmlCMElDWWdPRE00T0RZd055d2diaWtnT2lCeUlEd2dNVEV6SUQ4Z0tHa2dmRDBnTWpBME9Dd2diaUI4UFNBb2FTQStQaUF4TVRRZ0xTQnlLU0FySUNocElENCtJREV4TXlBdElISWdKaUF4S1N3Z2Jpa2dPaUFvYmlCOFBTQnlJQzBnTVRFeUlEdzhJREV3SUh3Z2FTQStQaUF4TENCdUlDczlJR2tnSmlBeExDQnVLVHNLSUNBZ0lIMEtmU3dnWWpBZ1BTQXdMQ0IzTUNBOUlERXNJRk13SUQwZ01Dd2dWREFnUFNBeExDQkZNQ0E5SURJN0NtWjFibU4wYVc5dUlFRXdLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFsYzJoR1lXTmxUV0YwWlhKcFlXd2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUdGdUlFRnljbUY1SUdsdWMzUmxZV1F1SWlrc0lITTdDbjBLWm5WdVkzUnBiMjRnUXpBb2N5QTlJRnRkS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOZFd4MGFVMWhkR1Z5YVdGc0lHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JoYmlCQmNuSmhlU0JwYm5OMFpXRmtMaUlwTENCekxtbHpUWFZzZEdsTllYUmxjbWxoYkNBOUlDRXdMQ0J6TG0xaGRHVnlhV0ZzY3lBOUlITXNJSE11WTJ4dmJtVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY3k1emJHbGpaU2dwT3dvZ0lDQWdmU3dnY3pzS2ZRcG1kVzVqZEdsdmJpQk1NQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UWIybHVkRU5zYjNWa0lHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdWRWhTUlVVdVVHOXBiblJ6TGlJcExDQnVaWGNnZW5Jb2N5d2daU2s3Q24wS1puVnVZM1JwYjI0Z1VqQW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVR0Z5ZEdsamJHVWdhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUJVU0ZKRlJTNVRjSEpwZEdVdUlpa3NJRzVsZHlCeWJ5aHpLVHNLZlFwbWRXNWpkR2x2YmlCUU1DaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVRWVhKMGFXTnNaVk41YzNSbGJTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJRlJJVWtWRkxsQnZhVzUwY3k0aUtTd2dibVYzSUhweUtITXNJR1VwT3dwOUNtWjFibU4wYVc5dUlFa3dLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEJ2YVc1MFEyeHZkV1JOWVhSbGNtbGhiQ0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUZSSVVrVkZMbEJ2YVc1MGMwMWhkR1Z5YVdGc0xpSXBMQ0J1WlhjZ2FtNG9jeWs3Q24wS1puVnVZM1JwYjI0Z1JEQW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVR0Z5ZEdsamJHVkNZWE5wWTAxaGRHVnlhV0ZzSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z1ZFaFNSVVV1VUc5cGJuUnpUV0YwWlhKcFlXd3VJaWtzSUc1bGR5QnFiaWh6S1RzS2ZRcG1kVzVqZEdsdmJpQkdNQ2h6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVRWVhKMGFXTnNaVk41YzNSbGJVMWhkR1Z5YVdGc0lHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdWRWhTUlVVdVVHOXBiblJ6VFdGMFpYSnBZV3d1SWlrc0lHNWxkeUJxYmloektUc0tmUXBtZFc1amRHbHZiaUJPTUNoekxDQmxMQ0IwS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWlhKMFpYZ2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUZSSVVrVkZMbFpsWTNSdmNqTWdhVzV6ZEdWaFpDNGlLU3dnYm1WM0lFMG9jeXdnWlN3Z2RDazdDbjBLWm5WdVkzUnBiMjRnUWpBb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVSSGx1WVcxcFkwSjFabVpsY2tGMGRISnBZblYwWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdibVYzSUZSSVVrVkZMa0oxWm1abGNrRjBkSEpwWW5WMFpTZ3BMbk5sZEZWellXZGxLQ0JVU0ZKRlJTNUVlVzVoYldsalJISmhkMVZ6WVdkbElDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lGVmxLSE1zSUdVcExuTmxkRlZ6WVdkbEtIVnlLVHNLZlFwbWRXNWpkR2x2YmlCNk1DaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYm5RNFFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1U1c1ME9FSjFabVpsY2tGMGRISnBZblYwWlNncElHbHVjM1JsWVdRdUlpa3NJRzVsZHlCcVl5aHpMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQlZNQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VmFXNTBPRUYwZEhKcFluVjBaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2JtVjNJRlJJVWtWRkxsVnBiblE0UW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJRkZqS0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUU4d0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFZwYm5RNFEyeGhiWEJsWkVGMGRISnBZblYwWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdibVYzSUZSSVVrVkZMbFZwYm5RNFEyeGhiWEJsWkVKMVptWmxja0YwZEhKcFluVjBaU2dwSUdsdWMzUmxZV1F1SWlrc0lHNWxkeUJMWXloekxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCSU1DaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYm5ReE5rRjBkSEpwWW5WMFpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnYm1WM0lGUklVa1ZGTGtsdWRERTJRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lHVm9LSE1zSUdVcE93cDlDbVoxYm1OMGFXOXVJR3N3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsVnBiblF4TmtGMGRISnBZblYwWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdibVYzSUZSSVVrVkZMbFZwYm5ReE5rSjFabVpsY2tGMGRISnBZblYwWlNncElHbHVjM1JsWVdRdUlpa3NJRzVsZHlCWmN5aHpMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQkhNQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJuUXpNa0YwZEhKcFluVjBaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2JtVjNJRlJJVWtWRkxrbHVkRE15UW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJSFJvS0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUZZd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFZwYm5Rek1rRjBkSEpwWW5WMFpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnYm1WM0lGUklVa1ZGTGxWcGJuUXpNa0oxWm1abGNrRjBkSEpwWW5WMFpTZ3BJR2x1YzNSbFlXUXVJaWtzSUc1bGR5QmFjeWh6TENCbEtUc0tmUXBtZFc1amRHbHZiaUJYTUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUdiRzloZERNeVFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1Um14dllYUXpNa0oxWm1abGNrRjBkSEpwWW5WMFpTZ3BJR2x1YzNSbFlXUXVJaWtzSUc1bGR5QmtaU2h6TENCbEtUc0tmUXBtZFc1amRHbHZiaUJ4TUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUdiRzloZERZMFFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1Um14dllYUTJORUoxWm1abGNrRjBkSEpwWW5WMFpTZ3BJR2x1YzNSbFlXUXVJaWtzSUc1bGR5QnBhQ2h6TENCbEtUc0tmUXBEZEM1amNtVmhkR1VnUFNCbWRXNWpkR2x2YmloekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1c2IyY29JbFJJVWtWRkxrTjFjblpsTG1OeVpXRjBaU2dwSUdoaGN5QmlaV1Z1SUdSbGNISmxZMkYwWldRaUtTd2djeTV3Y205MGIzUjVjR1VnUFNCUFltcGxZM1F1WTNKbFlYUmxLRU4wTG5CeWIzUnZkSGx3WlNrc0lITXVjSEp2ZEc5MGVYQmxMbU52Ym5OMGNuVmpkRzl5SUQwZ2N5d2djeTV3Y205MGIzUjVjR1V1WjJWMFVHOXBiblFnUFNCbExDQnpPd3A5T3dwbmNpNXdjbTkwYjNSNWNHVXVabkp2YlZCdmFXNTBjeUE5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxCaGRHZzZJQzVtY205dFVHOXBiblJ6S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVjMlYwUm5KdmJWQnZhVzUwY3lncExpSXBMQ0IwYUdsekxuTmxkRVp5YjIxUWIybHVkSE1vY3lrN0NuMDdDbVoxYm1OMGFXOXVJRmd3S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtGNGFYTklaV3h3WlhJZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QlVTRkpGUlM1QmVHVnpTR1ZzY0dWeUxpSXBMQ0J1WlhjZ2NuVW9jeWs3Q24wS1puVnVZM1JwYjI0Z1NqQW9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW05MWJtUnBibWRDYjNoSVpXeHdaWElnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1EzSmxZWFJwYm1jZ1lTQlVTRkpGUlM1Q2IzaElaV3h3WlhJZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUdsMUtITXNJR1VwT3dwOUNtWjFibU4wYVc5dUlGa3dLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtWa1oyVnpTR1ZzY0dWeUlHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JVU0ZKRlJTNUZaR2RsYzBkbGIyMWxkSEo1SUdsdWMzUmxZV1F1SWlrc0lHNWxkeUIzZENodVpYY2dYMkVvY3k1blpXOXRaWFJ5ZVNrc0lHNWxkeUJtZENoN0NpQWdJQ0FnSUNBZ1kyOXNiM0k2SUdVZ0lUMDlJSFp2YVdRZ01DQS9JR1VnT2lBeE5qYzNOekl4TlFvZ0lDQWdmU2twT3dwOUNtNTFMbkJ5YjNSdmRIbHdaUzV6WlhSRGIyeHZjbk1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrZHlhV1JJWld4d1pYSTZJSE5sZEVOdmJHOXljeWdwSUdoaGN5QmlaV1Z1SUdSbGNISmxZMkYwWldRc0lIQmhjM01nZEdobGJTQnBiaUIwYUdVZ1kyOXVjM1J5ZFdOMGIzSWdhVzV6ZEdWaFpDNGlLVHNLZlRzS1pYVXVjSEp2ZEc5MGVYQmxMblZ3WkdGMFpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VTJ0bGJHVjBiMjVJWld4d1pYSTZJSFZ3WkdGMFpTZ3BJRzV2SUd4dmJtZGxjaUJ1WldWa2N5QjBieUJpWlNCallXeHNaV1F1SWlrN0NuMDdDbVoxYm1OMGFXOXVJRm93S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZHBjbVZtY21GdFpVaGxiSEJsY2lCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdWRWhTUlVVdVYybHlaV1p5WVcxbFIyVnZiV1YwY25rZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUhkMEtHNWxkeUJGWVNoekxtZGxiMjFsZEhKNUtTd2dibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ1pTQWhQVDBnZG05cFpDQXdJRDhnWlNBNklERTJOemMzTWpFMUNpQWdJQ0I5S1NrN0NuMEtZblF1Y0hKdmRHOTBlWEJsTG1WNGRISmhZM1JWY214Q1lYTmxJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEc5aFpHVnlPaUF1WlhoMGNtRmpkRlZ5YkVKaGMyVW9LU0JvWVhNZ1ltVmxiaUJrWlhCeVpXTmhkR1ZrTGlCVmMyVWdWRWhTUlVVdVRHOWhaR1Z5VlhScGJITXVaWGgwY21GamRGVnliRUpoYzJVb0tTQnBibk4wWldGa0xpSXBMQ0JIY3k1bGVIUnlZV04wVlhKc1FtRnpaU2h6S1RzS2ZUc0tZblF1U0dGdVpHeGxjbk1nUFNCN0NpQWdJQ0JoWkdRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGt4dllXUmxjam9nU0dGdVpHeGxjbk11WVdSa0tDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUV4dllXUnBibWROWVc1aFoyVnlMbUZrWkVoaGJtUnNaWElvS1NCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnZlN3S0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VEc5aFpHVnlPaUJJWVc1a2JHVnljeTVuWlhRb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnVEc5aFpHbHVaMDFoYm1GblpYSXVaMlYwU0dGdVpHeGxjaWdwSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlDUXdLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGhJVWt4dllXUmxjaUJvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUZSSVVrVkZMa1pwYkdWTWIyRmtaWEl1SWlrc0lHNWxkeUJaZENoektUc0tmUXBtZFc1amRHbHZiaUJxTUNoektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2FXNWhjbmxVWlhoMGRYSmxURzloWkdWeUlHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdWRWhTUlVVdVJHRjBZVlJsZUhSMWNtVk1iMkZrWlhJdUlpa3NJRzVsZHlCT2FDaHpLVHNLZlFweGFTNXdjbTkwYjNSNWNHVXVZMlZ1ZEdWeUlEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRbTk0TWpvZ0xtTmxiblJsY2lncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEVObGJuUmxjaWdwTGlJcExDQjBhR2x6TG1kbGRFTmxiblJsY2loektUc0tmVHNLY1drdWNISnZkRzkwZVhCbExtVnRjSFI1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzZ3lPaUF1Wlcxd2RIa29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1cGMwVnRjSFI1S0NrdUlpa3NJSFJvYVhNdWFYTkZiWEIwZVNncE93cDlPd3B4YVM1d2NtOTBiM1I1Y0dVdWFYTkpiblJsY25ObFkzUnBiMjVDYjNnZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNiM2d5T2lBdWFYTkpiblJsY25ObFkzUnBiMjVDYjNnb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVwYm5SbGNuTmxZM1J6UW05NEtDa3VJaWtzSUhSb2FYTXVhVzUwWlhKelpXTjBjMEp2ZUNoektUc0tmVHNLY1drdWNISnZkRzkwZVhCbExuTnBlbVVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzZ3lPaUF1YzJsNlpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1kbGRGTnBlbVVvS1M0aUtTd2dkR2hwY3k1blpYUlRhWHBsS0hNcE93cDlPd3BNZEM1d2NtOTBiM1I1Y0dVdVkyVnVkR1Z5SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFtOTRNem9nTG1ObGJuUmxjaWdwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZGxkRU5sYm5SbGNpZ3BMaUlwTENCMGFHbHpMbWRsZEVObGJuUmxjaWh6S1RzS2ZUc0tUSFF1Y0hKdmRHOTBlWEJsTG1WdGNIUjVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNnek9pQXVaVzF3ZEhrb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVwYzBWdGNIUjVLQ2t1SWlrc0lIUm9hWE11YVhORmJYQjBlU2dwT3dwOU93cE1kQzV3Y205MGIzUjVjR1V1YVhOSmJuUmxjbk5sWTNScGIyNUNiM2dnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzZ3pPaUF1YVhOSmJuUmxjbk5sWTNScGIyNUNiM2dvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXBiblJsY25ObFkzUnpRbTk0S0NrdUlpa3NJSFJvYVhNdWFXNTBaWEp6WldOMGMwSnZlQ2h6S1RzS2ZUc0tUSFF1Y0hKdmRHOTBlWEJsTG1selNXNTBaWEp6WldOMGFXOXVVM0JvWlhKbElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRbTk0TXpvZ0xtbHpTVzUwWlhKelpXTjBhVzl1VTNCb1pYSmxLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWFXNTBaWEp6WldOMGMxTndhR1Z5WlNncExpSXBMQ0IwYUdsekxtbHVkR1Z5YzJWamRITlRjR2hsY21Vb2N5azdDbjA3Q2t4MExuQnliM1J2ZEhsd1pTNXphWHBsSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFtOTRNem9nTG5OcGVtVW9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1blpYUlRhWHBsS0NrdUlpa3NJSFJvYVhNdVoyVjBVMmw2WlNoektUc0tmVHNLUVc0dWNISnZkRzkwZVhCbExtVnRjSFI1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VGNHaGxjbVU2SUM1bGJYQjBlU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtbHpSVzF3ZEhrb0tTNGlLU3dnZEdocGN5NXBjMFZ0Y0hSNUtDazdDbjA3Q2tSeUxuQnliM1J2ZEhsd1pTNXpaWFJHY205dFRXRjBjbWw0SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVJuSjFjM1IxYlRvZ0xuTmxkRVp5YjIxTllYUnlhWGdvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXpaWFJHY205dFVISnZhbVZqZEdsdmJrMWhkSEpwZUNncExpSXBMQ0IwYUdsekxuTmxkRVp5YjIxUWNtOXFaV04wYVc5dVRXRjBjbWw0S0hNcE93cDlPd3BMYUM1d2NtOTBiM1I1Y0dVdVkyVnVkR1Z5SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbHVaVE02SUM1alpXNTBaWElvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNW5aWFJEWlc1MFpYSW9LUzRpS1N3Z2RHaHBjeTVuWlhSRFpXNTBaWElvY3lrN0NuMDdDbXgwTG5CeWIzUnZkSGx3WlM1bWJHRjBkR1Z1Vkc5QmNuSmhlVTltWm5ObGRDQTlJR1oxYm1OMGFXOXVLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRE02SUM1bWJHRjBkR1Z1Vkc5QmNuSmhlVTltWm5ObGRDZ3BJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1F1SUZWelpTQXVkRzlCY25KaGVTZ3BJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVkRzlCY25KaGVTaHpMQ0JsS1RzS2ZUc0tiSFF1Y0hKdmRHOTBlWEJsTG0xMWJIUnBjR3g1Vm1WamRHOXlNeUE5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRE02SUM1dGRXeDBhWEJzZVZabFkzUnZjak1vS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdkbVZqZEc5eUxtRndjR3g1VFdGMGNtbDRNeWdnYldGMGNtbDRJQ2tnYVc1emRHVmhaQzRpS1N3Z2N5NWhjSEJzZVUxaGRISnBlRE1vZEdocGN5azdDbjA3Q214MExuQnliM1J2ZEhsd1pTNXRkV3gwYVhCc2VWWmxZM1J2Y2pOQmNuSmhlU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXRjBjbWw0TXpvZ0xtMTFiSFJwY0d4NVZtVmpkRzl5TTBGeWNtRjVLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tiSFF1Y0hKdmRHOTBlWEJsTG1Gd2NHeDVWRzlDZFdabVpYSkJkSFJ5YVdKMWRHVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZ3pPaUF1WVhCd2JIbFViMEoxWm1abGNrRjBkSEpwWW5WMFpTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCaGRIUnlhV0oxZEdVdVlYQndiSGxOWVhSeWFYZ3pLQ0J0WVhSeWFYZ2dLU0JwYm5OMFpXRmtMaUlwTENCekxtRndjR3g1VFdGMGNtbDRNeWgwYUdsektUc0tmVHNLYkhRdWNISnZkRzkwZVhCbExtRndjR3g1Vkc5V1pXTjBiM0l6UVhKeVlYa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGsxaGRISnBlRE02SUM1aGNIQnNlVlJ2Vm1WamRHOXlNMEZ5Y21GNUtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2JIUXVjSEp2ZEc5MGVYQmxMbWRsZEVsdWRtVnljMlVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGd6T2lBdVoyVjBTVzUyWlhKelpTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdFlYUnlhWGhKYm5ZdVkyOXdlU2dnYldGMGNtbDRJQ2t1YVc1MlpYSjBLQ2s3SUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11WTI5d2VTaHpLUzVwYm5abGNuUW9LVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbVY0ZEhKaFkzUlFiM05wZEdsdmJpQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzVsZUhSeVlXTjBVRzl6YVhScGIyNG9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1amIzQjVVRzl6YVhScGIyNG9LUzRpS1N3Z2RHaHBjeTVqYjNCNVVHOXphWFJwYjI0b2N5azdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNW1iR0YwZEdWdVZHOUJjbkpoZVU5bVpuTmxkQ0E5SUdaMWJtTjBhVzl1S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNW1iR0YwZEdWdVZHOUJjbkpoZVU5bVpuTmxkQ2dwSUdoaGN5QmlaV1Z1SUdSbGNISmxZMkYwWldRdUlGVnpaU0F1ZEc5QmNuSmhlU2dwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11ZEc5QmNuSmhlU2h6TENCbEtUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExtZGxkRkJ2YzJsMGFXOXVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1WjJWMFVHOXphWFJwYjI0b0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnVm1WamRHOXlNeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b0lHMWhkSEpwZUNBcElHbHVjM1JsWVdRdUlpa3NJRzVsZHlCTktDa3VjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWgwYUdsekxDQXpLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbk5sZEZKdmRHRjBhVzl1Um5KdmJWRjFZWFJsY201cGIyNGdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1YzJWMFVtOTBZWFJwYjI1R2NtOXRVWFZoZEdWeWJtbHZiaWdwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtMWhhMlZTYjNSaGRHbHZia1p5YjIxUmRXRjBaWEp1YVc5dUtDa3VJaWtzSUhSb2FYTXViV0ZyWlZKdmRHRjBhVzl1Um5KdmJWRjFZWFJsY201cGIyNG9jeWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzV0ZFd4MGFYQnNlVlJ2UVhKeVlYa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG0xMWJIUnBjR3g1Vkc5QmNuSmhlU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1dGRXeDBhWEJzZVZabFkzUnZjak1nUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWJYVnNkR2x3YkhsV1pXTjBiM0l6S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJSFpsWTNSdmNpNWhjSEJzZVUxaGRISnBlRFFvSUcxaGRISnBlQ0FwSUdsdWMzUmxZV1F1SWlrc0lITXVZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXViWFZzZEdsd2JIbFdaV04wYjNJMElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbTExYkhScGNHeDVWbVZqZEc5eU5DZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCMlpXTjBiM0l1WVhCd2JIbE5ZWFJ5YVhnMEtDQnRZWFJ5YVhnZ0tTQnBibk4wWldGa0xpSXBMQ0J6TG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6S1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG0xMWJIUnBjR3g1Vm1WamRHOXlNMEZ5Y21GNUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1YlhWc2RHbHdiSGxXWldOMGIzSXpRWEp5WVhrb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVjbTkwWVhSbFFYaHBjeUE5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xuSnZkR0YwWlVGNGFYTW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1ZtVmpkRzl5TXk1MGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lHMWhkSEpwZUNBcElHbHVjM1JsWVdRdUlpa3NJSE11ZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0hSb2FYTXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVZM0p2YzNOV1pXTjBiM0lnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdVkzSnZjM05XWldOMGIzSW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2RtVmpkRzl5TG1Gd2NHeDVUV0YwY21sNE5DZ2diV0YwY21sNElDa2dhVzV6ZEdWaFpDNGlLU3dnY3k1aGNIQnNlVTFoZEhKcGVEUW9kR2hwY3lrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1MGNtRnVjMnhoZEdVZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzUwY21GdWMyeGhkR1VvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdWNtOTBZWFJsV0NBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbkp2ZEdGMFpWZ29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1Y205MFlYUmxXU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xuSnZkR0YwWlZrb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVjbTkwWVhSbFdpQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG5KdmRHRjBaVm9vS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdWNtOTBZWFJsUW5sQmVHbHpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWNtOTBZWFJsUW5sQmVHbHpLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG1Gd2NHeDVWRzlDZFdabVpYSkJkSFJ5YVdKMWRHVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1WVhCd2JIbFViMEoxWm1abGNrRjBkSEpwWW5WMFpTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCaGRIUnlhV0oxZEdVdVlYQndiSGxOWVhSeWFYZzBLQ0J0WVhSeWFYZ2dLU0JwYm5OMFpXRmtMaUlwTENCekxtRndjR3g1VFdGMGNtbDROQ2gwYUdsektUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExtRndjR3g1Vkc5V1pXTjBiM0l6UVhKeVlYa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1aGNIQnNlVlJ2Vm1WamRHOXlNMEZ5Y21GNUtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbTFoYTJWR2NuVnpkSFZ0SUQwZ1puVnVZM1JwYjI0b2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG0xaGEyVkdjblZ6ZEhWdEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUM1dFlXdGxVR1Z5YzNCbFkzUnBkbVVvSUd4bFpuUXNJSEpwWjJoMExDQjBiM0FzSUdKdmRIUnZiU3dnYm1WaGNpd2dabUZ5SUNrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1dFlXdGxVR1Z5YzNCbFkzUnBkbVVvY3l3Z1pTd2diaXdnZEN3Z2FTd2djaWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzVuWlhSSmJuWmxjbk5sSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xtZGxkRWx1ZG1WeWMyVW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2JXRjBjbWw0U1c1MkxtTnZjSGtvSUcxaGRISnBlQ0FwTG1sdWRtVnlkQ2dwT3lCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG1OdmNIa29jeWt1YVc1MlpYSjBLQ2s3Q24wN0NsZDBMbkJ5YjNSdmRIbHdaUzVwYzBsdWRHVnljMlZqZEdsdmJreHBibVVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UWJHRnVaVG9nTG1selNXNTBaWEp6WldOMGFXOXVUR2x1WlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWx1ZEdWeWMyVmpkSE5NYVc1bEtDa3VJaWtzSUhSb2FYTXVhVzUwWlhKelpXTjBjMHhwYm1Vb2N5azdDbjA3Q21kMExuQnliM1J2ZEhsd1pTNXRkV3gwYVhCc2VWWmxZM1J2Y2pNZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVJkV0YwWlhKdWFXOXVPaUF1YlhWc2RHbHdiSGxXWldOMGIzSXpLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHbHpJRzV2ZHlCMlpXTjBiM0l1WVhCd2JIbFJkV0YwWlhKdWFXOXVLQ0J4ZFdGMFpYSnVhVzl1SUNrZ2FXNXpkR1ZoWkM0aUtTd2djeTVoY0hCc2VWRjFZWFJsY201cGIyNG9kR2hwY3lrN0NuMDdDbWQwTG5CeWIzUnZkSGx3WlM1cGJuWmxjbk5sSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UmRXRjBaWEp1YVc5dU9pQXVhVzUyWlhKelpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnYVc1MlpYSjBLQ2t1SWlrc0lIUm9hWE11YVc1MlpYSjBLQ2s3Q24wN0NrTnVMbkJ5YjNSdmRIbHdaUzVwYzBsdWRHVnljMlZqZEdsdmJrSnZlQ0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxKaGVUb2dMbWx6U1c1MFpYSnpaV04wYVc5dVFtOTRLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWFXNTBaWEp6WldOMGMwSnZlQ2dwTGlJcExDQjBhR2x6TG1sdWRHVnljMlZqZEhOQ2IzZ29jeWs3Q24wN0NrTnVMbkJ5YjNSdmRIbHdaUzVwYzBsdWRHVnljMlZqZEdsdmJsQnNZVzVsSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVtRjVPaUF1YVhOSmJuUmxjbk5sWTNScGIyNVFiR0Z1WlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWx1ZEdWeWMyVmpkSE5RYkdGdVpTZ3BMaUlwTENCMGFHbHpMbWx1ZEdWeWMyVmpkSE5RYkdGdVpTaHpLVHNLZlRzS1EyNHVjSEp2ZEc5MGVYQmxMbWx6U1c1MFpYSnpaV04wYVc5dVUzQm9aWEpsSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVtRjVPaUF1YVhOSmJuUmxjbk5sWTNScGIyNVRjR2hsY21Vb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVwYm5SbGNuTmxZM1J6VTNCb1pYSmxLQ2t1SWlrc0lIUm9hWE11YVc1MFpYSnpaV04wYzFOd2FHVnlaU2h6S1RzS2ZUc0tiblF1Y0hKdmRHOTBlWEJsTG1GeVpXRWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFJ5YVdGdVoyeGxPaUF1WVhKbFlTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1kbGRFRnlaV0VvS1M0aUtTd2dkR2hwY3k1blpYUkJjbVZoS0NrN0NuMDdDbTUwTG5CeWIzUnZkSGx3WlM1aVlYSjVZMjl2Y21SR2NtOXRVRzlwYm5RZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVVY21saGJtZHNaVG9nTG1KaGNubGpiMjl5WkVaeWIyMVFiMmx1ZENncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEVKaGNubGpiMjl5WkNncExpSXBMQ0IwYUdsekxtZGxkRUpoY25samIyOXlaQ2h6TENCbEtUc0tmVHNLYm5RdWNISnZkRzkwZVhCbExtMXBaSEJ2YVc1MElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWSEpwWVc1bmJHVTZJQzV0YVdSd2IybHVkQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZGxkRTFwWkhCdmFXNTBLQ2t1SWlrc0lIUm9hWE11WjJWMFRXbGtjRzlwYm5Rb2N5azdDbjA3Q201MExuQnliM1J2ZEhsd1pXNXZjbTFoYkNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsUnlhV0Z1WjJ4bE9pQXVibTl5YldGc0tDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFRtOXliV0ZzS0NrdUlpa3NJSFJvYVhNdVoyVjBUbTl5YldGc0tITXBPd3A5T3dwdWRDNXdjbTkwYjNSNWNHVXVjR3hoYm1VZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVVjbWxoYm1kc1pUb2dMbkJzWVc1bEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFVHeGhibVVvS1M0aUtTd2dkR2hwY3k1blpYUlFiR0Z1WlNoektUc0tmVHNLYm5RdVltRnllV052YjNKa1JuSnZiVkJ2YVc1MElEMGdablZ1WTNScGIyNG9jeXdnWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VkhKcFlXNW5iR1U2SUM1aVlYSjVZMjl2Y21SR2NtOXRVRzlwYm5Rb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVuWlhSQ1lYSjVZMjl2Y21Rb0tTNGlLU3dnYm5RdVoyVjBRbUZ5ZVdOdmIzSmtLSE1zSUdVc0lIUXNJRzRzSUdrcE93cDlPd3B1ZEM1dWIzSnRZV3dnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VWNtbGhibWRzWlRvZ0xtNXZjbTFoYkNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEU1dmNtMWhiQ2dwTGlJcExDQnVkQzVuWlhST2IzSnRZV3dvY3l3Z1pTd2dkQ3dnYmlrN0NuMDdDbGgwTG5CeWIzUnZkSGx3WlM1bGVIUnlZV04wUVd4c1VHOXBiblJ6SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVUyaGhjR1U2SUM1bGVIUnlZV04wUVd4c1VHOXBiblJ6S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJQzVsZUhSeVlXTjBVRzlwYm5SektDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NWxlSFJ5WVdOMFVHOXBiblJ6S0hNcE93cDlPd3BZZEM1d2NtOTBiM1I1Y0dVdVpYaDBjblZrWlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsTm9ZWEJsT2lBdVpYaDBjblZrWlNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JGZUhSeWRXUmxSMlZ2YldWMGNua29LU0JwYm5OMFpXRmtMaUlwTENCdVpYY2diRzRvZEdocGN5d2djeWs3Q24wN0NsaDBMbkJ5YjNSdmRIbHdaUzV0WVd0bFIyVnZiV1YwY25rZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVRhR0Z3WlRvZ0xtMWhhMlZIWlc5dFpYUnllU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQlRhR0Z3WlVkbGIyMWxkSEo1S0NrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUVScEtIUm9hWE1zSUhNcE93cDlPd3BZTG5CeWIzUnZkSGx3WlM1bWNtOXRRWFIwY21saWRYUmxJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU1qb2dMbVp5YjIxQmRIUnlhV0oxZEdVb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrdUlpa3NJSFJvYVhNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHpMQ0JsTENCMEtUc0tmVHNLV0M1d2NtOTBiM1I1Y0dVdVpHbHpkR0Z1WTJWVWIwMWhibWhoZEhSaGJpQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqSTZJQzVrYVhOMFlXNWpaVlJ2VFdGdWFHRjBkR0Z1S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXViV0Z1YUdGMGRHRnVSR2x6ZEdGdVkyVlVieWdwTGlJcExDQjBhR2x6TG0xaGJtaGhkSFJoYmtScGMzUmhibU5sVkc4b2N5azdDbjA3Q2xndWNISnZkRzkwZVhCbExteGxibWQwYUUxaGJtaGhkSFJoYmlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TWpvZ0xteGxibWQwYUUxaGJtaGhkSFJoYmlncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbTFoYm1oaGRIUmhia3hsYm1kMGFDZ3BMaUlwTENCMGFHbHpMbTFoYm1oaGRIUmhia3hsYm1kMGFDZ3BPd3A5T3dwTkxuQnliM1J2ZEhsd1pTNXpaWFJGZFd4bGNrWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG5ObGRFVjFiR1Z5Um5KdmJWSnZkR0YwYVc5dVRXRjBjbWw0S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRVYxYkdWeUxuTmxkRVp5YjIxU2IzUmhkR2x2YmsxaGRISnBlQ2dwSUdsdWMzUmxZV1F1SWlrN0NuMDdDazB1Y0hKdmRHOTBlWEJsTG5ObGRFVjFiR1Z5Um5KdmJWRjFZWFJsY201cGIyNGdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxabFkzUnZjak02SUM1elpYUkZkV3hsY2taeWIyMVJkV0YwWlhKdWFXOXVLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElFVjFiR1Z5TG5ObGRFWnliMjFSZFdGMFpYSnVhVzl1S0NrZ2FXNXpkR1ZoWkM0aUtUc0tmVHNLVFM1d2NtOTBiM1I1Y0dVdVoyVjBVRzl6YVhScGIyNUdjbTl0VFdGMGNtbDRJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG1kbGRGQnZjMmwwYVc5dVJuSnZiVTFoZEhKcGVDZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpZ3BMaUlwTENCMGFHbHpMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloektUc0tmVHNLVFM1d2NtOTBiM1I1Y0dVdVoyVjBVMk5oYkdWR2NtOXRUV0YwY21sNElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbWRsZEZOallXeGxSbkp2YlUxaGRISnBlQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xuTmxkRVp5YjIxTllYUnlhWGhUWTJGc1pTZ3BMaUlwTENCMGFHbHpMbk5sZEVaeWIyMU5ZWFJ5YVhoVFkyRnNaU2h6S1RzS2ZUc0tUUzV3Y205MGIzUjVjR1V1WjJWMFEyOXNkVzF1Um5KdmJVMWhkSEpwZUNBOUlHWjFibU4wYVc5dUtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqTTZJQzVuWlhSRGIyeDFiVzVHY205dFRXRjBjbWw0S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWdwTGlJcExDQjBhR2x6TG5ObGRFWnliMjFOWVhSeWFYaERiMngxYlc0b1pTd2djeWs3Q24wN0NrMHVjSEp2ZEc5MGVYQmxMbUZ3Y0d4NVVISnZhbVZqZEdsdmJpQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqTTZJQzVoY0hCc2VWQnliMnBsWTNScGIyNG9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ0xtRndjR3g1VFdGMGNtbDROQ2dnYlNBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLSE1wT3dwOU93cE5MbkJ5YjNSdmRIbHdaUzVtY205dFFYUjBjbWxpZFhSbElEMGdablZ1WTNScGIyNG9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xtWnliMjFCZEhSeWFXSjFkR1VvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLQ2t1SWlrc0lIUm9hWE11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoekxDQmxMQ0IwS1RzS2ZUc0tUUzV3Y205MGIzUjVjR1V1WkdsemRHRnVZMlZVYjAxaGJtaGhkSFJoYmlBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pNNklDNWthWE4wWVc1alpWUnZUV0Z1YUdGMGRHRnVLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWJXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5Z3BMaUlwTENCMGFHbHpMbTFoYm1oaGRIUmhia1JwYzNSaGJtTmxWRzhvY3lrN0NuMDdDazB1Y0hKdmRHOTBlWEJsTG14bGJtZDBhRTFoYm1oaGRIUmhiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG14bGJtZDBhRTFoYm1oaGRIUmhiaWdwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtMWhibWhoZEhSaGJreGxibWQwYUNncExpSXBMQ0IwYUdsekxtMWhibWhoZEhSaGJreGxibWQwYUNncE93cDlPd3BXWlM1d2NtOTBiM1I1Y0dVdVpuSnZiVUYwZEhKcFluVjBaU0E5SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqUTZJQzVtY205dFFYUjBjbWxpZFhSbEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNncExpSXBMQ0IwYUdsekxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9jeXdnWlN3Z2RDazdDbjA3Q2xabExuQnliM1J2ZEhsd1pTNXNaVzVuZEdoTllXNW9ZWFIwWVc0Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pRNklDNXNaVzVuZEdoTllXNW9ZWFIwWVc0b0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzV0WVc1b1lYUjBZVzVNWlc1bmRHZ29LUzRpS1N3Z2RHaHBjeTV0WVc1b1lYUjBZVzVNWlc1bmRHZ29LVHNLZlRzS1RtVXVjSEp2ZEc5MGVYQmxMbWRsZEVOb2FXeGtRbmxPWVcxbElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOME0wUTZJQzVuWlhSRGFHbHNaRUo1VG1GdFpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1kbGRFOWlhbVZqZEVKNVRtRnRaU2dwTGlJcExDQjBhR2x6TG1kbGRFOWlhbVZqZEVKNVRtRnRaU2h6S1RzS2ZUc0tUbVV1Y0hKdmRHOTBlWEJsTG5KbGJtUmxja1JsY0hSb0lEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazlpYW1WamRETkVPaUF1Y21WdVpHVnlSR1Z3ZEdnZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJQzV5Wlc1a1pYSlBjbVJsY2l3Z2FXNXpkR1ZoWkM0aUtUc0tmVHNLVG1VdWNISnZkRzkwZVhCbExuUnlZVzV6YkdGMFpTQTlJR1oxYm1OMGFXOXVLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGs5aWFtVmpkRE5FT2lBdWRISmhibk5zWVhSbEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUM1MGNtRnVjMnhoZEdWUGJrRjRhWE1vSUdGNGFYTXNJR1JwYzNSaGJtTmxJQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTUwY21GdWMyeGhkR1ZQYmtGNGFYTW9aU3dnY3lrN0NuMDdDazVsTG5CeWIzUnZkSGx3WlM1blpYUlhiM0pzWkZKdmRHRjBhVzl1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVBZbXBsWTNRelJEb2dMbWRsZEZkdmNteGtVbTkwWVhScGIyNG9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1ZFaFNSVVV1VDJKcVpXTjBNMFF1WjJWMFYyOXliR1JSZFdGMFpYSnVhVzl1S0NCMFlYSm5aWFFnS1NCcGJuTjBaV0ZrTGlJcE93cDlPd3BPWlM1d2NtOTBiM1I1Y0dVdVlYQndiSGxOWVhSeWFYZ2dQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUXpSRG9nTG1Gd2NHeDVUV0YwY21sNEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WVhCd2JIbE5ZWFJ5YVhnMEtDa3VJaWtzSUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0hNcE93cDlPd3BQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aE9aUzV3Y205MGIzUjVjR1VzSUhzS0lDQWdJR1YxYkdWeVQzSmtaWEk2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNRelJEb2dMbVYxYkdWeVQzSmtaWElnYVhNZ2JtOTNJQzV5YjNSaGRHbHZiaTV2Y21SbGNpNGlLU3dnZEdocGN5NXliM1JoZEdsdmJpNXZjbVJsY2pzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGs5aWFtVmpkRE5FT2lBdVpYVnNaWEpQY21SbGNpQnBjeUJ1YjNjZ0xuSnZkR0YwYVc5dUxtOXlaR1Z5TGlJcExDQjBhR2x6TG5KdmRHRjBhVzl1TG05eVpHVnlJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdkWE5sVVhWaGRHVnlibWx2YmpvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBNMFE2SUM1MWMyVlJkV0YwWlhKdWFXOXVJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlJvWlNCc2FXSnlZWEo1SUc1dmR5QjFjMlZ6SUhGMVlYUmxjbTVwYjI1eklHSjVJR1JsWm1GMWJIUXVJaWs3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazlpYW1WamRETkVPaUF1ZFhObFVYVmhkR1Z5Ym1sdmJpQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlVhR1VnYkdsaWNtRnllU0J1YjNjZ2RYTmxjeUJ4ZFdGMFpYSnVhVzl1Y3lCaWVTQmtaV1poZFd4MExpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU2s3Q25OMExuQnliM1J2ZEhsd1pTNXpaWFJFY21GM1RXOWtaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXVnphRG9nTG5ObGRFUnlZWGROYjJSbEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWR2hsSUhKbGJtUmxjbVZ5SUc1dmR5QmhiSGRoZVhNZ1lYTnpkVzFsY3lCVVNGSkZSUzVVY21saGJtZHNaWE5FY21GM1RXOWtaUzRnVkhKaGJuTm1iM0p0SUhsdmRYSWdaMlZ2YldWMGNua2dkbWxoSUVKMVptWmxja2RsYjIxbGRISjVWWFJwYkhNdWRHOVVjbWxoYm1kc1pYTkVjbUYzVFc5a1pTZ3BJR2xtSUc1bFkyVnpjMkZ5ZVM0aUtUc0tmVHNLVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25ScFpYTW9jM1F1Y0hKdmRHOTBlWEJsTENCN0NpQWdJQ0JrY21GM1RXOWtaVG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5aWE5vT2lBdVpISmhkMDF2WkdVZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZHaGxJSEpsYm1SbGNtVnlJRzV2ZHlCaGJIZGhlWE1nWVhOemRXMWxjeUJVU0ZKRlJTNVVjbWxoYm1kc1pYTkVjbUYzVFc5a1pTNGlLU3dnUm1RN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TlpYTm9PaUF1WkhKaGQwMXZaR1VnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVkdobElISmxibVJsY21WeUlHNXZkeUJoYkhkaGVYTWdZWE56ZFcxbGN5QlVTRkpGUlM1VWNtbGhibWRzWlhORWNtRjNUVzlrWlM0Z1ZISmhibk5tYjNKdElIbHZkWElnWjJWdmJXVjBjbmtnZG1saElFSjFabVpsY2tkbGIyMWxkSEo1VlhScGJITXVkRzlVY21saGJtZHNaWE5FY21GM1RXOWtaU2dwSUdsbUlHNWxZMlZ6YzJGeWVTNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBwT3dwemJ5NXdjbTkwYjNSNWNHVXVhVzVwZEVKdmJtVnpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1VGEybHVibVZrVFdWemFEb2dhVzVwZEVKdmJtVnpLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tkWFF1Y0hKdmRHOTBlWEJsTG5ObGRFeGxibk1nUFNCbWRXNWpkR2x2YmloekxDQmxLU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEJsY25Od1pXTjBhWFpsUTJGdFpYSmhMbk5sZEV4bGJuTWdhWE1nWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJQzV6WlhSR2IyTmhiRXhsYm1kMGFDQmhibVFnTG1acGJHMUhZWFZuWlNCbWIzSWdZU0J3YUc5MGIyZHlZWEJvYVdNZ2MyVjBkWEF1SWlrc0lHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2RHaHBjeTVtYVd4dFIyRjFaMlVnUFNCbEtTd2dkR2hwY3k1elpYUkdiMk5oYkV4bGJtZDBhQ2h6S1RzS2ZUc0tUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblJwWlhNb1FuUXVjSEp2ZEc5MGVYQmxMQ0I3Q2lBZ0lDQnZibXg1VTJoaFpHOTNPaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hV2RvZERvZ0xtOXViSGxUYUdGa2IzY2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MyaGhaRzkzUTJGdFpYSmhSbTkyT2lCN0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEdsbmFIUTZJQzV6YUdGa2IzZERZVzFsY21GR2IzWWdhWE1nYm05M0lDNXphR0ZrYjNjdVkyRnRaWEpoTG1admRpNGlLU3dnZEdocGN5NXphR0ZrYjNjdVkyRnRaWEpoTG1admRpQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDBOaGJXVnlZVXhsWm5RNklIc0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXZG9kRG9nTG5Ob1lXUnZkME5oYldWeVlVeGxablFnYVhNZ2JtOTNJQzV6YUdGa2IzY3VZMkZ0WlhKaExteGxablF1SWlrc0lIUm9hWE11YzJoaFpHOTNMbU5oYldWeVlTNXNaV1owSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNRMkZ0WlhKaFVtbG5hSFE2SUhzS0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVdkb2REb2dMbk5vWVdSdmQwTmhiV1Z5WVZKcFoyaDBJR2x6SUc1dmR5QXVjMmhoWkc5M0xtTmhiV1Z5WVM1eWFXZG9kQzRpS1N3Z2RHaHBjeTV6YUdGa2IzY3VZMkZ0WlhKaExuSnBaMmgwSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNRMkZ0WlhKaFZHOXdPaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUR2xuYUhRNklDNXphR0ZrYjNkRFlXMWxjbUZVYjNBZ2FYTWdibTkzSUM1emFHRmtiM2N1WTJGdFpYSmhMblJ2Y0M0aUtTd2dkR2hwY3k1emFHRmtiM2N1WTJGdFpYSmhMblJ2Y0NBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkME5oYldWeVlVSnZkSFJ2YlRvZ2V3b2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt4cFoyaDBPaUF1YzJoaFpHOTNRMkZ0WlhKaFFtOTBkRzl0SUdseklHNXZkeUF1YzJoaFpHOTNMbU5oYldWeVlTNWliM1IwYjIwdUlpa3NJSFJvYVhNdWMyaGhaRzkzTG1OaGJXVnlZUzVpYjNSMGIyMGdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnphR0ZrYjNkRFlXMWxjbUZPWldGeU9pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbG5hSFE2SUM1emFHRmtiM2REWVcxbGNtRk9aV0Z5SUdseklHNXZkeUF1YzJoaFpHOTNMbU5oYldWeVlTNXVaV0Z5TGlJcExDQjBhR2x6TG5Ob1lXUnZkeTVqWVcxbGNtRXVibVZoY2lBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkME5oYldWeVlVWmhjam9nZXdvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwWjJoME9pQXVjMmhoWkc5M1EyRnRaWEpoUm1GeUlHbHpJRzV2ZHlBdWMyaGhaRzkzTG1OaGJXVnlZUzVtWVhJdUlpa3NJSFJvYVhNdWMyaGhaRzkzTG1OaGJXVnlZUzVtWVhJZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCemFHRmtiM2REWVcxbGNtRldhWE5wWW14bE9pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXZG9kRG9nTG5Ob1lXUnZkME5oYldWeVlWWnBjMmxpYkdVZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRzVsZHlCVVNGSkZSUzVEWVcxbGNtRklaV3h3WlhJb0lHeHBaMmgwTG5Ob1lXUnZkeTVqWVcxbGNtRWdLU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnphR0ZrYjNkQ2FXRnpPaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUR2xuYUhRNklDNXphR0ZrYjNkQ2FXRnpJR2x6SUc1dmR5QXVjMmhoWkc5M0xtSnBZWE11SWlrc0lIUm9hWE11YzJoaFpHOTNMbUpwWVhNZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCemFHRmtiM2RFWVhKcmJtVnpjem9nZXdvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUR2xuYUhRNklDNXphR0ZrYjNkRVlYSnJibVZ6Y3lCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J6YUdGa2IzZE5ZWEJYYVdSMGFEb2dld29nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxreHBaMmgwT2lBdWMyaGhaRzkzVFdGd1YybGtkR2dnYVhNZ2JtOTNJQzV6YUdGa2IzY3ViV0Z3VTJsNlpTNTNhV1IwYUM0aUtTd2dkR2hwY3k1emFHRmtiM2N1YldGd1UybDZaUzUzYVdSMGFDQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDAxaGNFaGxhV2RvZERvZ2V3b2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt4cFoyaDBPaUF1YzJoaFpHOTNUV0Z3U0dWcFoyaDBJR2x6SUc1dmR5QXVjMmhoWkc5M0xtMWhjRk5wZW1VdWFHVnBaMmgwTGlJcExDQjBhR2x6TG5Ob1lXUnZkeTV0WVhCVGFYcGxMbWhsYVdkb2RDQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5S1RzS1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUnBaWE1vVldVdWNISnZkRzkwZVhCbExDQjdDaUFnSUNCc1pXNW5kR2c2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKQmRIUnlhV0oxZEdVNklDNXNaVzVuZEdnZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDNGdWWE5sSUM1amIzVnVkQ0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbUZ5Y21GNUxteGxibWQwYURzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdaSGx1WVcxcFl6b2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja0YwZEhKcFluVjBaVG9nTG1SNWJtRnRhV01nYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJQzUxYzJGblpTQnBibk4wWldGa0xpSXBMQ0IwYUdsekxuVnpZV2RsSUQwOVBTQjFjanNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVFYUjBjbWxpZFhSbE9pQXVaSGx1WVcxcFl5Qm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJWYzJVZ0xuVnpZV2RsSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11YzJWMFZYTmhaMlVvZFhJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTazdDbFZsTG5CeWIzUnZkSGx3WlM1elpYUkVlVzVoYldsaklEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVFYUjBjbWxpZFhSbE9pQXVjMlYwUkhsdVlXMXBZeWdwSUdoaGN5QmlaV1Z1SUdSbGNISmxZMkYwWldRdUlGVnpaU0F1YzJWMFZYTmhaMlVvS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG5ObGRGVnpZV2RsS0hNZ1BUMDlJQ0V3SUQ4Z2RYSWdPaUJvY2lrc0lIUm9hWE03Q24wN0NsVmxMbkJ5YjNSdmRIbHdaUzVqYjNCNVNXNWthV05sYzBGeWNtRjVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1U2SUM1amIzQjVTVzVrYVdObGMwRnljbUY1S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmU3dnVldVdWNISnZkRzkwZVhCbExuTmxkRUZ5Y21GNUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVTZJQzV6WlhSQmNuSmhlU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1FuVm1abVZ5UjJWdmJXVjBjbmtnTG5ObGRFRjBkSEpwWW5WMFpTQjBieUJ5WlhCc1lXTmxMM0psYzJsNlpTQmhkSFJ5YVdKMWRHVWdZblZtWm1WeWN5SXBPd3A5T3dwZlpTNXdjbTkwYjNSNWNHVXVZV1JrU1c1a1pYZ2dQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVPaUF1WVdSa1NXNWtaWGdvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXpaWFJKYm1SbGVDZ3BMaUlwTENCMGFHbHpMbk5sZEVsdVpHVjRLSE1wT3dwOU93cGZaUzV3Y205MGIzUjVjR1V1WVdSa1FYUjBjbWxpZFhSbElEMGdablZ1WTNScGIyNG9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNuazZJQzVoWkdSQmRIUnlhV0oxZEdVb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzV6WlhSQmRIUnlhV0oxZEdVb0tTNGlLU3dnSVNobElDWW1JR1V1YVhOQ2RXWm1aWEpCZEhSeWFXSjFkR1VwSUNZbUlDRW9aU0FtSmlCbExtbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVXBJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbms2SUM1aFpHUkJkSFJ5YVdKMWRHVW9LU0J1YjNjZ1pYaHdaV04wY3lBb0lHNWhiV1VzSUdGMGRISnBZblYwWlNBcExpSXBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2h6TENCdVpYY2dWV1VvWVhKbmRXMWxiblJ6V3pGZExDQmhjbWQxYldWdWRITmJNbDBwS1NrZ09pQnpJRDA5UFNBaWFXNWtaWGdpSUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rdVlXUmtRWFIwY21saWRYUmxPaUJWYzJVZ0xuTmxkRWx1WkdWNEtDa2dabTl5SUdsdVpHVjRJR0YwZEhKcFluVjBaUzRpS1N3Z2RHaHBjeTV6WlhSSmJtUmxlQ2hsS1N3Z2RHaHBjeWtnT2lCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNoekxDQmxLVHNLZlRzS1gyVXVjSEp2ZEc5MGVYQmxMbUZrWkVSeVlYZERZV3hzSUQwZ1puVnVZM1JwYjI0b2N5d2daU3dnZENrZ2V3b2dJQ0FnZENBaFBUMGdkbTlwWkNBd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNuazZJQzVoWkdSRWNtRjNRMkZzYkNncElHNXZJR3h2Ym1kbGNpQnpkWEJ3YjNKMGN5QnBibVJsZUU5bVpuTmxkQzRpS1N3Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtRmtaRVJ5WVhkRFlXeHNLQ2tnYVhNZ2JtOTNJQzVoWkdSSGNtOTFjQ2dwTGlJcExDQjBhR2x6TG1Ga1pFZHliM1Z3S0hNc0lHVXBPd3A5T3dwZlpTNXdjbTkwYjNSNWNHVXVZMnhsWVhKRWNtRjNRMkZzYkhNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rNklDNWpiR1ZoY2tSeVlYZERZV3hzY3lncElHbHpJRzV2ZHlBdVkyeGxZWEpIY205MWNITW9LUzRpS1N3Z2RHaHBjeTVqYkdWaGNrZHliM1Z3Y3lncE93cDlPd3BmWlM1d2NtOTBiM1I1Y0dVdVkyOXRjSFYwWlU5bVpuTmxkSE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbms2SUM1amIyMXdkWFJsVDJabWMyVjBjeWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbDlsTG5CeWIzUnZkSGx3WlM1eVpXMXZkbVZCZEhSeWFXSjFkR1VnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG5KbGJXOTJaVUYwZEhKcFluVjBaU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtUmxiR1YwWlVGMGRISnBZblYwWlNncExpSXBMQ0IwYUdsekxtUmxiR1YwWlVGMGRISnBZblYwWlNoektUc0tmVHNLWDJVdWNISnZkRzkwZVhCbExtRndjR3g1VFdGMGNtbDRJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNuazZJQzVoY0hCc2VVMWhkSEpwZUNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbUZ3Y0d4NVRXRjBjbWw0TkNncExpSXBMQ0IwYUdsekxtRndjR3g1VFdGMGNtbDROQ2h6S1RzS2ZUc0tUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblJwWlhNb1gyVXVjSEp2ZEc5MGVYQmxMQ0I3Q2lBZ0lDQmtjbUYzWTJGc2JITTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbms2SUM1a2NtRjNZMkZzYkhNZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaM0p2ZFhCekxpSXBMQ0IwYUdsekxtZHliM1Z3Y3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdiMlptYzJWMGN6b2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVPaUF1YjJabWMyVjBjeUJvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1bmNtOTFjSE11SWlrc0lIUm9hWE11WjNKdmRYQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU2s3Q2lSdUxuQnliM1J2ZEhsd1pTNXpaWFJFZVc1aGJXbGpJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEk2SUM1elpYUkVlVzVoYldsaktDa2dhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElDNXpaWFJWYzJGblpTZ3BJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVjMlYwVlhOaFoyVW9jeUE5UFQwZ0lUQWdQeUIxY2lBNklHaHlLU3dnZEdocGN6c0tmVHNLSkc0dWNISnZkRzkwZVhCbExuTmxkRUZ5Y21GNUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVKYm5SbGNteGxZWFpsWkVKMVptWmxjam9nTG5ObGRFRnljbUY1SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQkNkV1ptWlhKSFpXOXRaWFJ5ZVNBdWMyVjBRWFIwY21saWRYUmxJSFJ2SUhKbGNHeGhZMlV2Y21WemFYcGxJR0YwZEhKcFluVjBaU0JpZFdabVpYSnpJaWs3Q24wN0NteHVMbkJ5YjNSdmRIbHdaUzVuWlhSQmNuSmhlWE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrVjRkSEoxWkdWSFpXOXRaWFJ5ZVRvZ0xtZGxkRUZ5Y21GNWN5Z3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NteHVMbkJ5YjNSdmRIbHdaUzVoWkdSVGFHRndaVXhwYzNRZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa1Y0ZEhKMVpHVkhaVzl0WlhSeWVUb2dMbUZrWkZOb1lYQmxUR2x6ZENncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q214dUxuQnliM1J2ZEhsd1pTNWhaR1JUYUdGd1pTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UlhoMGNuVmtaVWRsYjIxbGRISjVPaUF1WVdSa1UyaGhjR1VvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B1Ynk1d2NtOTBiM1I1Y0dVdVpHbHpjRzl6WlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVMk5sYm1VNklDNWthWE53YjNObEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS1oyOHVjSEp2ZEc5MGVYQmxMbTl1VlhCa1lYUmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVWYm1sbWIzSnRPaUF1YjI1VmNHUmhkR1VvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdiMkpxWldOMExtOXVRbVZtYjNKbFVtVnVaR1Z5S0NrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3pzS2ZUc0tUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblJwWlhNb1pIUXVjSEp2ZEc5MGVYQmxMQ0I3Q2lBZ0lDQjNjbUZ3UVhKdmRXNWtPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJsY21saGJEb2dMbmR5WVhCQmNtOTFibVFnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMFpYSnBZV3c2SUM1M2NtRndRWEp2ZFc1a0lHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUc5MlpYSmtjbUYzT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSbGNtbGhiRG9nTG05MlpYSmtjbUYzSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRHVnlhV0ZzT2lBdWIzWmxjbVJ5WVhjZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnZDNKaGNGSkhRam9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkR1Z5YVdGc09pQXVkM0poY0ZKSFFpQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBMQ0J1WlhjZ1lXVTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnBibWM2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzRpSUNzZ2RHaHBjeTUwZVhCbElDc2dJam9nTG5Ob1lXUnBibWNnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElIUm9aU0JpYjI5c1pXRnVJQzVtYkdGMFUyaGhaR2x1WnlCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdUlpQXJJSFJvYVhNdWRIbHdaU0FySUNJNklDNXphR0ZrYVc1bklHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0IwYUdVZ1ltOXZiR1ZoYmlBdVpteGhkRk5vWVdScGJtY2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NW1iR0YwVTJoaFpHbHVaeUE5SUhNZ1BUMDlJR3RqT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnpkR1Z1WTJsc1RXRnphem9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxpSWdLeUIwYUdsekxuUjVjR1VnS3lBaU9pQXVjM1JsYm1OcGJFMWhjMnNnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElDNXpkR1Z1WTJsc1JuVnVZMDFoYzJzZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1emRHVnVZMmxzUm5WdVkwMWhjMnM3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzRpSUNzZ2RHaHBjeTUwZVhCbElDc2dJam9nTG5OMFpXNWphV3hOWVhOcklHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0F1YzNSbGJtTnBiRVoxYm1OTllYTnJJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVjM1JsYm1OcGJFWjFibU5OWVhOcklEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2RtVnlkR1Y0VkdGdVoyVnVkSE02SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMaUlnS3lCMGFHbHpMblI1Y0dVZ0t5QWlPaUF1ZG1WeWRHVjRWR0Z1WjJWdWRITWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVJaUFySUhSb2FYTXVkSGx3WlNBcklDSTZJQzUyWlhKMFpYaFVZVzVuWlc1MGN5Qm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU2s3Q2s5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGFXVnpLSE51TG5CeWIzUnZkSGx3WlN3Z2V3b2dJQ0FnWkdWeWFYWmhkR2wyWlhNNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVUYUdGa1pYSk5ZWFJsY21saGJEb2dMbVJsY21sMllYUnBkbVZ6SUdoaGN5QmlaV1Z1SUcxdmRtVmtJSFJ2SUM1bGVIUmxibk5wYjI1ekxtUmxjbWwyWVhScGRtVnpMaUlwTENCMGFHbHpMbVY0ZEdWdWMybHZibk11WkdWeWFYWmhkR2wyWlhNN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM0Z1UyaGhaR1Z5VFdGMFpYSnBZV3c2SUM1a1pYSnBkbUYwYVhabGN5Qm9ZWE1nWW1WbGJpQnRiM1psWkNCMGJ5QXVaWGgwWlc1emFXOXVjeTVrWlhKcGRtRjBhWFpsY3k0aUtTd2dkR2hwY3k1bGVIUmxibk5wYjI1ekxtUmxjbWwyWVhScGRtVnpJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wcE93cHhaUzV3Y205MGIzUjVjR1V1WTJ4bFlYSlVZWEpuWlhRZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNWpiR1ZoY2xSaGNtZGxkQ2dwSUdoaGN5QmlaV1Z1SUdSbGNISmxZMkYwWldRdUlGVnpaU0F1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLQ2tnWVc1a0lDNWpiR1ZoY2lncElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0hNcExDQjBhR2x6TG1Oc1pXRnlLR1VzSUhRc0lHNHBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVZVzVwYldGMFpTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbUZ1YVcxaGRHVW9LU0JwY3lCdWIzY2dMbk5sZEVGdWFXMWhkR2x2Ymt4dmIzQW9LUzRpS1N3Z2RHaHBjeTV6WlhSQmJtbHRZWFJwYjI1TWIyOXdLSE1wT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1WjJWMFEzVnljbVZ1ZEZKbGJtUmxjbFJoY21kbGRDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtZGxkRU4xY25KbGJuUlNaVzVrWlhKVVlYSm5aWFFvS1NCcGN5QnViM2NnTG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwTGlJcExDQjBhR2x6TG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1WjJWMFRXRjRRVzVwYzI5MGNtOXdlU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbWRsZEUxaGVFRnVhWE52ZEhKdmNIa29LU0JwY3lCdWIzY2dMbU5oY0dGaWFXeHBkR2xsY3k1blpYUk5ZWGhCYm1semIzUnliM0I1S0NrdUlpa3NJSFJvYVhNdVkyRndZV0pwYkdsMGFXVnpMbWRsZEUxaGVFRnVhWE52ZEhKdmNIa29LVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbWRsZEZCeVpXTnBjMmx2YmlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1kbGRGQnlaV05wYzJsdmJpZ3BJR2x6SUc1dmR5QXVZMkZ3WVdKcGJHbDBhV1Z6TG5CeVpXTnBjMmx2Ymk0aUtTd2dkR2hwY3k1allYQmhZbWxzYVhScFpYTXVjSEpsWTJsemFXOXVPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVjbVZ6WlhSSFRGTjBZWFJsSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1Y21WelpYUkhURk4wWVhSbEtDa2dhWE1nYm05M0lDNXpkR0YwWlM1eVpYTmxkQ2dwTGlJcExDQjBhR2x6TG5OMFlYUmxMbkpsYzJWMEtDazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNXpkWEJ3YjNKMGMwWnNiMkYwVkdWNGRIVnlaWE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6ZFhCd2IzSjBjMFpzYjJGMFZHVjRkSFZ5WlhNb0tTQnBjeUJ1YjNjZ0xtVjRkR1Z1YzJsdmJuTXVaMlYwS0NBblQwVlRYM1JsZUhSMWNtVmZabXh2WVhRbklDa3VJaWtzSUhSb2FYTXVaWGgwWlc1emFXOXVjeTVuWlhRb0lrOUZVMTkwWlhoMGRYSmxYMlpzYjJGMElpazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNXpkWEJ3YjNKMGMwaGhiR1pHYkc5aGRGUmxlSFIxY21WeklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWMzVndjRzl5ZEhOSVlXeG1SbXh2WVhSVVpYaDBkWEpsY3lncElHbHpJRzV2ZHlBdVpYaDBaVzV6YVc5dWN5NW5aWFFvSUNkUFJWTmZkR1Y0ZEhWeVpWOW9ZV3htWDJac2IyRjBKeUFwTGlJcExDQjBhR2x6TG1WNGRHVnVjMmx2Ym5NdVoyVjBLQ0pQUlZOZmRHVjRkSFZ5WlY5b1lXeG1YMlpzYjJGMElpazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNXpkWEJ3YjNKMGMxTjBZVzVrWVhKa1JHVnlhWFpoZEdsMlpYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpkWEJ3YjNKMGMxTjBZVzVrWVhKa1JHVnlhWFpoZEdsMlpYTW9LU0JwY3lCdWIzY2dMbVY0ZEdWdWMybHZibk11WjJWMEtDQW5UMFZUWDNOMFlXNWtZWEprWDJSbGNtbDJZWFJwZG1Wekp5QXBMaUlwTENCMGFHbHpMbVY0ZEdWdWMybHZibk11WjJWMEtDSlBSVk5mYzNSaGJtUmhjbVJmWkdWeWFYWmhkR2wyWlhNaUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTjFjSEJ2Y25SelEyOXRjSEpsYzNObFpGUmxlSFIxY21WVE0xUkRJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVjM1Z3Y0c5eWRITkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpWTXpWRU1vS1NCcGN5QnViM2NnTG1WNGRHVnVjMmx2Ym5NdVoyVjBLQ0FuVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYM016ZEdNbklDa3VJaWtzSUhSb2FYTXVaWGgwWlc1emFXOXVjeTVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5ek0zUmpJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzV6ZFhCd2IzSjBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxVRlpTVkVNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emRYQndiM0owYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsVUZaU1ZFTW9LU0JwY3lCdWIzY2dMbVY0ZEdWdWMybHZibk11WjJWMEtDQW5WMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzQjJjblJqSnlBcExpSXBMQ0IwYUdsekxtVjRkR1Z1YzJsdmJuTXVaMlYwS0NKWFJVSkhURjlqYjIxd2NtVnpjMlZrWDNSbGVIUjFjbVZmY0haeWRHTWlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk4xY0hCdmNuUnpRbXhsYm1STmFXNU5ZWGdnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6ZFhCd2IzSjBjMEpzWlc1a1RXbHVUV0Y0S0NrZ2FYTWdibTkzSUM1bGVIUmxibk5wYjI1ekxtZGxkQ2dnSjBWWVZGOWliR1Z1WkY5dGFXNXRZWGduSUNrdUlpa3NJSFJvYVhNdVpYaDBaVzV6YVc5dWN5NW5aWFFvSWtWWVZGOWliR1Z1WkY5dGFXNXRZWGdpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5OMWNIQnZjblJ6Vm1WeWRHVjRWR1Y0ZEhWeVpYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpkWEJ3YjNKMGMxWmxjblJsZUZSbGVIUjFjbVZ6S0NrZ2FYTWdibTkzSUM1allYQmhZbWxzYVhScFpYTXVkbVZ5ZEdWNFZHVjRkSFZ5WlhNdUlpa3NJSFJvYVhNdVkyRndZV0pwYkdsMGFXVnpMblpsY25SbGVGUmxlSFIxY21Wek93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdWMzVndjRzl5ZEhOSmJuTjBZVzVqWldSQmNuSmhlWE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6ZFhCd2IzSjBjMGx1YzNSaGJtTmxaRUZ5Y21GNWN5Z3BJR2x6SUc1dmR5QXVaWGgwWlc1emFXOXVjeTVuWlhRb0lDZEJUa2RNUlY5cGJuTjBZVzVqWldSZllYSnlZWGx6SnlBcExpSXBMQ0IwYUdsekxtVjRkR1Z1YzJsdmJuTXVaMlYwS0NKQlRrZE1SVjlwYm5OMFlXNWpaV1JmWVhKeVlYbHpJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVsYm1GaWJHVlRZMmx6YzI5eVZHVnpkQ0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1WdVlXSnNaVk5qYVhOemIzSlVaWE4wS0NrZ2FYTWdibTkzSUM1elpYUlRZMmx6YzI5eVZHVnpkQ2dwTGlJcExDQjBhR2x6TG5ObGRGTmphWE56YjNKVVpYTjBLSE1wT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1YVc1cGRFMWhkR1Z5YVdGc0lEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXBibWwwVFdGMFpYSnBZV3dvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdVlXUmtVSEpsVUd4MVoybHVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzVoWkdSUWNtVlFiSFZuYVc0b0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVZV1JrVUc5emRGQnNkV2RwYmlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVlXUmtVRzl6ZEZCc2RXZHBiaWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1MWNHUmhkR1ZUYUdGa2IzZE5ZWEFnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Wd1pHRjBaVk5vWVdSdmQwMWhjQ2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1elpYUkdZV05sUTNWc2JHbHVaeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1YzJWMFJtRmpaVU4xYkd4cGJtY29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1WVd4c2IyTlVaWGgwZFhKbFZXNXBkQ0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WVd4c2IyTlVaWGgwZFhKbFZXNXBkQ2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1elpYUlVaWGgwZFhKbElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpaWFJVWlhoMGRYSmxLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5ObGRGUmxlSFIxY21VeVJDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVjMlYwVkdWNGRIVnlaVEpFS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTmxkRlJsZUhSMWNtVkRkV0psSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1elpYUlVaWGgwZFhKbFEzVmlaU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1blpYUkJZM1JwZG1WTmFYQk5ZWEJNWlhabGJDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtZGxkRUZqZEdsMlpVMXBjRTFoY0V4bGRtVnNLQ2tnYVhNZ2JtOTNJQzVuWlhSQlkzUnBkbVZOYVhCdFlYQk1aWFpsYkNncExpSXBMQ0IwYUdsekxtZGxkRUZqZEdsMlpVMXBjRzFoY0V4bGRtVnNLQ2s3Q24wN0NrOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBhV1Z6S0hGbExuQnliM1J2ZEhsd1pTd2dld29nSUNBZ2MyaGhaRzkzVFdGd1JXNWhZbXhsWkRvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Ob1lXUnZkMDFoY0M1bGJtRmliR1ZrT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5vWVdSdmQwMWhjRVZ1WVdKc1pXUWdhWE1nYm05M0lDNXphR0ZrYjNkTllYQXVaVzVoWW14bFpDNGlLU3dnZEdocGN5NXphR0ZrYjNkTllYQXVaVzVoWW14bFpDQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDAxaGNGUjVjR1U2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6YUdGa2IzZE5ZWEF1ZEhsd1pUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emFHRmtiM2ROWVhCVWVYQmxJR2x6SUc1dmR5QXVjMmhoWkc5M1RXRndMblI1Y0dVdUlpa3NJSFJvYVhNdWMyaGhaRzkzVFdGd0xuUjVjR1VnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J6YUdGa2IzZE5ZWEJEZFd4c1JtRmpaVG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNFTjFiR3hHWVdObElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGTmxkQ0JOWVhSbGNtbGhiQzV6YUdGa2IzZFRhV1JsSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6YUdGa2IzZE5ZWEJEZFd4c1JtRmpaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJUWlhRZ1RXRjBaWEpwWVd3dWMyaGhaRzkzVTJsa1pTQnBibk4wWldGa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCamIyNTBaWGgwT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtTnZiblJsZUhRZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJQzVuWlhSRGIyNTBaWGgwS0NrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1blpYUkRiMjUwWlhoMEtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhaeU9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMblp5SUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xuaHlJaWtzSUhSb2FYTXVlSEk3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHZGhiVzFoU1c1d2RYUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WjJGdGJXRkpibkIxZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVFpYUWdkR2hsSUdWdVkyOWthVzVuSUdadmNpQjBaWGgwZFhKbGN5QjJhV0VnVkdWNGRIVnlaUzVsYm1OdlpHbHVaeUJwYm5OMFpXRmtMaUlwTENBaE1Uc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1kaGJXMWhTVzV3ZFhRZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1UyVjBJSFJvWlNCbGJtTnZaR2x1WnlCbWIzSWdkR1Y0ZEhWeVpYTWdkbWxoSUZSbGVIUjFjbVV1Wlc1amIyUnBibWNnYVc1emRHVmhaQzRpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdaMkZ0YldGUGRYUndkWFE2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVoyRnRiV0ZQZFhSd2RYUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdVMlYwSUZkbFlrZE1VbVZ1WkdWeVpYSXViM1YwY0hWMFJXNWpiMlJwYm1jZ2FXNXpkR1ZoWkM0aUtTd2dJVEU3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaMkZ0YldGUGRYUndkWFFnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVTJWMElGZGxZa2RNVW1WdVpHVnlaWEl1YjNWMGNIVjBSVzVqYjJScGJtY2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NXZkWFJ3ZFhSRmJtTnZaR2x1WnlBOUlITWdQVDA5SUNFd0lEOGdUMmtnT2lCT2REc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnZEc5dVpVMWhjSEJwYm1kWGFHbDBaVkJ2YVc1ME9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMblJ2Ym1WTllYQndhVzVuVjJocGRHVlFiMmx1ZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcExDQXhPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWRHOXVaVTFoY0hCcGJtZFhhR2wwWlZCdmFXNTBJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHZGhiVzFoUm1GamRHOXlPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1kaGJXMWhSbUZqZEc5eUlHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpa3NJREk3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNW5ZVzF0WVVaaFkzUnZjaUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlNrN0NrOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBhV1Z6S0hsb0xuQnliM1J2ZEhsd1pTd2dld29nSUNBZ1kzVnNiRVpoWTJVNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6YUdGa2IzZE5ZWEF1WTNWc2JFWmhZMlVnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVTJWMElFMWhkR1Z5YVdGc0xuTm9ZV1J2ZDFOcFpHVWdhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNDNWpkV3hzUm1GalpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlRaWFFnVFdGMFpYSnBZV3d1YzJoaFpHOTNVMmxrWlNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J5Wlc1a1pYSlNaWFpsY25ObFUybGtaV1E2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXphR0ZrYjNkTllYQXVjbVZ1WkdWeVVtVjJaWEp6WlZOcFpHVmtJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRk5sZENCTllYUmxjbWxoYkM1emFHRmtiM2RUYVdSbElHbHVjM1JsWVdRdUlpazdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emFHRmtiM2ROWVhBdWNtVnVaR1Z5VW1WMlpYSnpaVk5wWkdWa0lHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGTmxkQ0JOWVhSbGNtbGhiQzV6YUdGa2IzZFRhV1JsSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSEpsYm1SbGNsTnBibWRzWlZOcFpHVmtPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWMyaGhaRzkzVFdGd0xuSmxibVJsY2xOcGJtZHNaVk5wWkdWa0lHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGTmxkQ0JOWVhSbGNtbGhiQzV6YUdGa2IzZFRhV1JsSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6YUdGa2IzZE5ZWEF1Y21WdVpHVnlVMmx1WjJ4bFUybGtaV1FnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVTJWMElFMWhkR1Z5YVdGc0xuTm9ZV1J2ZDFOcFpHVWdhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBwT3dwbWRXNWpkR2x2YmlCUk1DaHpMQ0JsTENCMEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZEVOMVltVW9JSGRwWkhSb0xDQm9aV2xuYUhRc0lHOXdkR2x2Ym5NZ0tTQnBjeUJ1YjNjZ1YyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBLQ0J6YVhwbExDQnZjSFJwYjI1eklDa3VJaWtzSUc1bGR5QnFjeWh6TENCMEtUc0tmUXBQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aEJkQzV3Y205MGIzUjVjR1VzSUhzS0lDQWdJSGR5WVhCVE9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1M2NtRndVeUJwY3lCdWIzY2dMblJsZUhSMWNtVXVkM0poY0ZNdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1M2NtRndVenNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1ZDNKaGNGTWdhWE1nYm05M0lDNTBaWGgwZFhKbExuZHlZWEJUTGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1ZDNKaGNGTWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQjNjbUZ3VkRvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1ZDNKaGNGUWdhWE1nYm05M0lDNTBaWGgwZFhKbExuZHlZWEJVTGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1ZDNKaGNGUTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbmR5WVhCVUlHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1M2NtRndWQzRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbmR5WVhCVUlEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2JXRm5SbWxzZEdWeU9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1dFlXZEdhV3gwWlhJZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG0xaFowWnBiSFJsY2k0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG0xaFowWnBiSFJsY2pzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdWJXRm5SbWxzZEdWeUlHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1dFlXZEdhV3gwWlhJdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1dFlXZEdhV3gwWlhJZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCdGFXNUdhV3gwWlhJNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG0xcGJrWnBiSFJsY2lCcGN5QnViM2NnTG5SbGVIUjFjbVV1YldsdVJtbHNkR1Z5TGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1YldsdVJtbHNkR1Z5T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1dGFXNUdhV3gwWlhJZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG0xcGJrWnBiSFJsY2k0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG0xcGJrWnBiSFJsY2lBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdGdWFYTnZkSEp2Y0hrNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG1GdWFYTnZkSEp2Y0hrZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG1GdWFYTnZkSEp2Y0hrdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1aGJtbHpiM1J5YjNCNU93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNWhibWx6YjNSeWIzQjVJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNWhibWx6YjNSeWIzQjVMaUlwTENCMGFHbHpMblJsZUhSMWNtVXVZVzVwYzI5MGNtOXdlU0E5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJRzltWm5ObGREb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdWIyWm1jMlYwSUdseklHNXZkeUF1ZEdWNGRIVnlaUzV2Wm1aelpYUXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNXZabVp6WlhRN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xtOW1abk5sZENCcGN5QnViM2NnTG5SbGVIUjFjbVV1YjJabWMyVjBMaUlwTENCMGFHbHpMblJsZUhSMWNtVXViMlptYzJWMElEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2NtVndaV0YwT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzV5WlhCbFlYUWdhWE1nYm05M0lDNTBaWGgwZFhKbExuSmxjR1ZoZEM0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG5KbGNHVmhkRHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1Y21Wd1pXRjBJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNXlaWEJsWVhRdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1eVpYQmxZWFFnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JtYjNKdFlYUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xtWnZjbTFoZENCcGN5QnViM2NnTG5SbGVIUjFjbVV1Wm05eWJXRjBMaUlwTENCMGFHbHpMblJsZUhSMWNtVXVabTl5YldGME93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNW1iM0p0WVhRZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG1admNtMWhkQzRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbVp2Y20xaGRDQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lIUjVjR1U2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMblI1Y0dVZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG5SNWNHVXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNTBlWEJsT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1MGVYQmxJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNTBlWEJsTGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1ZEhsd1pTQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHZGxibVZ5WVhSbFRXbHdiV0Z3Y3pvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNW5aVzVsY21GMFpVMXBjRzFoY0hNdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1blpXNWxjbUYwWlUxcGNHMWhjSE03Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG1kbGJtVnlZWFJsVFdsd2JXRndjeUJwY3lCdWIzY2dMblJsZUhSMWNtVXVaMlZ1WlhKaGRHVk5hWEJ0WVhCekxpSXBMQ0IwYUdsekxuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMHBPd3BhWVM1d2NtOTBiM1I1Y0dVdWJHOWhaQ0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFYVmthVzg2SUM1c2IyRmtJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1F1SUZWelpTQlVTRkpGUlM1QmRXUnBiMHh2WVdSbGNpQnBibk4wWldGa0xpSXBPd29nSUNBZ2JHVjBJR1VnUFNCMGFHbHpPd29nSUNBZ2NtVjBkWEp1SUc1bGR5QnJhQ2dwTG14dllXUW9jeXdnWm5WdVkzUnBiMjRvYmlrZ2V3b2dJQ0FnSUNBZ0lHVXVjMlYwUW5WbVptVnlLRzRwT3dvZ0lDQWdmU2tzSUhSb2FYTTdDbjA3Q25Gb0xuQnliM1J2ZEhsd1pTNW5aWFJFWVhSaElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYjBGdVlXeDVjMlZ5T2lBdVoyVjBSR0YwWVNncElHbHpJRzV2ZHlBdVoyVjBSbkpsY1hWbGJtTjVSR0YwWVNncExpSXBMQ0IwYUdsekxtZGxkRVp5WlhGMVpXNWplVVJoZEdFb0tUc0tmVHNLSkhNdWNISnZkRzkwZVhCbExuVndaR0YwWlVOMVltVk5ZWEFnUFNCbWRXNWpkR2x2YmloekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNURkV0psUTJGdFpYSmhPaUF1ZFhCa1lYUmxRM1ZpWlUxaGNDZ3BJR2x6SUc1dmR5QXVkWEJrWVhSbEtDa3VJaWtzSUhSb2FYTXVkWEJrWVhSbEtITXNJR1VwT3dwOU93b2tjeTV3Y205MGIzUjVjR1V1WTJ4bFlYSWdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVEZFdKbFEyRnRaWEpoT2lBdVkyeGxZWElvS1NCcGN5QnViM2NnTG5KbGJtUmxjbFJoY21kbGRDNWpiR1ZoY2lncExpSXBMQ0IwYUdsekxuSmxibVJsY2xSaGNtZGxkQzVqYkdWaGNpaHpMQ0JsTENCMExDQnVLVHNLZlRzS1dXNHVZM0p2YzNOUGNtbG5hVzRnUFNCMmIybGtJREE3Q2xsdUxteHZZV1JVWlhoMGRYSmxJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVlYwYVd4ekxteHZZV1JVWlhoMGRYSmxJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1F1SUZWelpTQlVTRkpGUlM1VVpYaDBkWEpsVEc5aFpHVnlLQ2tnYVc1emRHVmhaQzRpS1RzS0lDQWdJR3hsZENCcElEMGdibVYzSUVKb093b2dJQ0FnYVM1elpYUkRjbTl6YzA5eWFXZHBiaWgwYUdsekxtTnliM056VDNKcFoybHVLVHNLSUNBZ0lHeGxkQ0J5SUQwZ2FTNXNiMkZrS0hNc0lIUXNJSFp2YVdRZ01Dd2diaWs3Q2lBZ0lDQnlaWFIxY200Z1pTQW1KaUFvY2k1dFlYQndhVzVuSUQwZ1pTa3NJSEk3Q24wN0NsbHVMbXh2WVdSVVpYaDBkWEpsUTNWaVpTQTlJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1U1cxaFoyVlZkR2xzY3k1c2IyRmtWR1Y0ZEhWeVpVTjFZbVVnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJRlJJVWtWRkxrTjFZbVZVWlhoMGRYSmxURzloWkdWeUtDa2dhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJRVpvT3dvZ0lDQWdhUzV6WlhSRGNtOXpjMDl5YVdkcGJpaDBhR2x6TG1OeWIzTnpUM0pwWjJsdUtUc0tJQ0FnSUd4bGRDQnlJRDBnYVM1c2IyRmtLSE1zSUhRc0lIWnZhV1FnTUN3Z2JpazdDaUFnSUNCeVpYUjFjbTRnWlNBbUppQW9jaTV0WVhCd2FXNW5JRDBnWlNrc0lISTdDbjA3Q2xsdUxteHZZV1JEYjIxd2NtVnpjMlZrVkdWNGRIVnlaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVNXMWhaMlZWZEdsc2N5NXNiMkZrUTI5dGNISmxjM05sWkZSbGVIUjFjbVVnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElGUklVa1ZGTGtSRVUweHZZV1JsY2lCcGJuTjBaV0ZrTGlJcE93cDlPd3BaYmk1c2IyRmtRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVkRkV0psSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUpiV0ZuWlZWMGFXeHpMbXh2WVdSRGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlVOMVltVWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUZSSVVrVkZMa1JFVTB4dllXUmxjaUJwYm5OMFpXRmtMaUlwT3dwOU93cG1kVzVqZEdsdmJpQkxNQ2dwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtOaGJuWmhjMUpsYm1SbGNtVnlJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUWlLVHNLZlFwbWRXNWpkR2x2YmlCbGRpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa3BUVDA1TWIyRmtaWElnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZRcDJZWElnZEhZZ1BTQjdDaUFnSUNCamNtVmhkR1ZOZFd4MGFVMWhkR1Z5YVdGc1QySnFaV04wT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVUWTJWdVpWVjBhV3h6SUdoaGN5QmlaV1Z1SUcxdmRtVmtJSFJ2SUM5bGVHRnRjR3hsY3k5cWMyMHZkWFJwYkhNdlUyTmxibVZWZEdsc2N5NXFjeUlwT3dvZ0lDQWdmU3dLSUNBZ0lHUmxkR0ZqYURvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VTJObGJtVlZkR2xzY3lCb1lYTWdZbVZsYmlCdGIzWmxaQ0IwYnlBdlpYaGhiWEJzWlhNdmFuTnRMM1YwYVd4ekwxTmpaVzVsVlhScGJITXVhbk1pS1RzS0lDQWdJSDBzQ2lBZ0lDQmhkSFJoWTJnNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxOalpXNWxWWFJwYkhNZ2FHRnpJR0psWlc0Z2JXOTJaV1FnZEc4Z0wyVjRZVzF3YkdWekwycHpiUzkxZEdsc2N5OVRZMlZ1WlZWMGFXeHpMbXB6SWlrN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlHNTJLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VEdWdWMwWnNZWEpsSUdoaGN5QmlaV1Z1SUcxdmRtVmtJSFJ2SUM5bGVHRnRjR3hsY3k5cWMyMHZiMkpxWldOMGN5OU1aVzV6Wm14aGNtVXVhbk1pS1RzS2ZRcG1kVzVqZEdsdmJpQnBkaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRWVhKaGJXVjBjbWxqUjJWdmJXVjBjbmtnYUdGeklHSmxaVzRnYlc5MlpXUWdkRzhnTDJWNFlXMXdiR1Z6TDJwemJTOW5aVzl0WlhSeWFXVnpMMUJoY21GdFpYUnlhV05IWlc5dFpYUnllUzVxY3lJcExDQnVaWGNnWDJVN0NuMEtablZ1WTNScGIyNGdjbllvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VkdWNGRFZGxiMjFsZEhKNUlHaGhjeUJpWldWdUlHMXZkbVZrSUhSdklDOWxlR0Z0Y0d4bGN5OXFjMjB2WjJWdmJXVjBjbWxsY3k5VVpYaDBSMlZ2YldWMGNua3Vhbk1pS1N3Z2JtVjNJRjlsT3dwOUNtWjFibU4wYVc5dUlITjJLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1Um05dWRFeHZZV1JsY2lCb1lYTWdZbVZsYmlCdGIzWmxaQ0IwYnlBdlpYaGhiWEJzWlhNdmFuTnRMMnh2WVdSbGNuTXZSbTl1ZEV4dllXUmxjaTVxY3lJcE93cDlDbVoxYm1OMGFXOXVJRzkyS0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVJtOXVkQ0JvWVhNZ1ltVmxiaUJ0YjNabFpDQjBieUF2WlhoaGJYQnNaWE12YW5OdEwyeHZZV1JsY25NdlJtOXVkRXh2WVdSbGNpNXFjeUlwT3dwOUNtWjFibU4wYVc5dUlHRjJLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1U1cxdFpXUnBZWFJsVW1WdVpHVnlUMkpxWldOMElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjBLZEhsd1pXOW1JRjlmVkVoU1JVVmZSRVZXVkU5UFRGTmZYeUE4SUNKMUlpQW1KaUJmWDFSSVVrVkZYMFJGVmxSUFQweFRYMTh1WkdsemNHRjBZMmhGZG1WdWRDaHVaWGNnUTNWemRHOXRSWFpsYm5Rb0luSmxaMmx6ZEdWeUlpd2dld29nSUNBZ1pHVjBZV2xzT2lCN0NpQWdJQ0FnSUNBZ2NtVjJhWE5wYjI0NklHTmhDaUFnSUNCOUNuMHBLVHNLZEhsd1pXOW1JSGRwYm1SdmR5QThJQ0oxSWlBbUppQW9kMmx1Wkc5M0xsOWZWRWhTUlVWZlh5QS9JR052Ym5OdmJHVXVkMkZ5YmlnaVYwRlNUa2xPUnpvZ1RYVnNkR2x3YkdVZ2FXNXpkR0Z1WTJWeklHOW1JRlJvY21WbExtcHpJR0psYVc1bklHbHRjRzl5ZEdWa0xpSXBJRG9nZDJsdVpHOTNMbDlmVkVoU1JVVmZYeUE5SUdOaEtUc0tZMjl1YzNRZ2JXOWtJRDBnZXdvZ0lDQWdRVU5GVTBacGJHMXBZMVJ2Ym1WTllYQndhVzVuT2lCVmRTd0tJQ0FnSUVGa1pFVnhkV0YwYVc5dU9pQmZhU3dLSUNBZ0lFRmtaRTl3WlhKaGRHbHZiam9nUm5Vc0NpQWdJQ0JCWkdScGRHbDJaVUZ1YVcxaGRHbHZia0pzWlc1a1RXOWtaVG9nY1dNc0NpQWdJQ0JCWkdScGRHbDJaVUpzWlc1a2FXNW5PaUJ1YkN3S0lDQWdJRUZzY0doaFJtOXliV0YwT2lCWWRTd0tJQ0FnSUVGc2QyRjVjMFJsY0hSb09pQkJkU3dLSUNBZ0lFRnNkMkY1YzFOMFpXNWphV3hHZFc1ak9pQlZaQ3dLSUNBZ0lFRnRZbWxsYm5STWFXZG9kRG9nY1dFc0NpQWdJQ0JCYldKcFpXNTBUR2xuYUhSUWNtOWlaVG9nVm1nc0NpQWdJQ0JCYm1sdFlYUnBiMjVEYkdsd09pQk1jaXdLSUNBZ0lFRnVhVzFoZEdsdmJreHZZV1JsY2pvZ1kza3NDaUFnSUNCQmJtbHRZWFJwYjI1TmFYaGxjam9nSkdnc0NpQWdJQ0JCYm1sdFlYUnBiMjVQWW1wbFkzUkhjbTkxY0RvZ1dXZ3NDaUFnSUNCQmJtbHRZWFJwYjI1VmRHbHNjem9nV21Vc0NpQWdJQ0JCY21ORGRYSjJaVG9nVFdFc0NpQWdJQ0JCY25KaGVVTmhiV1Z5WVRvZ1oyRXNDaUFnSUNCQmNuSnZkMGhsYkhCbGNqb2dWWGtzQ2lBZ0lDQkJkV1JwYnpvZ1dtRXNDaUFnSUNCQmRXUnBiMEZ1WVd4NWMyVnlPaUJ4YUN3S0lDQWdJRUYxWkdsdlEyOXVkR1Y0ZERvZ1NHZ3NDaUFnSUNCQmRXUnBiMHhwYzNSbGJtVnlPaUJ0ZVN3S0lDQWdJRUYxWkdsdlRHOWhaR1Z5T2lCcmFDd0tJQ0FnSUVGNFpYTklaV3h3WlhJNklISjFMQW9nSUNBZ1FYaHBjMGhsYkhCbGNqb2dXREFzQ2lBZ0lDQkNZV05yVTJsa1pUb2dhWFFzQ2lBZ0lDQkNZWE5wWTBSbGNIUm9VR0ZqYTJsdVp6b2dUbVFzQ2lBZ0lDQkNZWE5wWTFOb1lXUnZkMDFoY0RvZ2NYa3NDaUFnSUNCQ2FXNWhjbmxVWlhoMGRYSmxURzloWkdWeU9pQnFNQ3dLSUNBZ0lFSnZibVU2SUc5dkxBb2dJQ0FnUW05dmJHVmhia3RsZVdaeVlXMWxWSEpoWTJzNklGRnVMQW9nSUNBZ1FtOTFibVJwYm1kQ2IzaElaV3h3WlhJNklFb3dMQW9nSUNBZ1FtOTRNam9nY1drc0NpQWdJQ0JDYjNnek9pQk1kQ3dLSUNBZ0lFSnZlRE5JWld4d1pYSTZJRUo1TEFvZ0lDQWdRbTk0UW5WbVptVnlSMlZ2YldWMGNuazZJSGR1TEFvZ0lDQWdRbTk0UjJWdmJXVjBjbms2SUhkdUxBb2dJQ0FnUW05NFNHVnNjR1Z5T2lCcGRTd0tJQ0FnSUVKMVptWmxja0YwZEhKcFluVjBaVG9nVldVc0NpQWdJQ0JDZFdabVpYSkhaVzl0WlhSeWVUb2dYMlVzQ2lBZ0lDQkNkV1ptWlhKSFpXOXRaWFJ5ZVV4dllXUmxjam9nVldnc0NpQWdJQ0JDZVhSbFZIbHdaVG9nU0hVc0NpQWdJQ0JEWVdOb1pUb2dUbWtzQ2lBZ0lDQkRZVzFsY21FNklFbHlMQW9nSUNBZ1EyRnRaWEpoU0dWc2NHVnlPaUJPZVN3S0lDQWdJRU5oYm5aaGMxSmxibVJsY21WeU9pQkxNQ3dLSUNBZ0lFTmhiblpoYzFSbGVIUjFjbVU2SUZSb0xBb2dJQ0FnUTJGMGJYVnNiRkp2YlVOMWNuWmxNem9nZDJFc0NpQWdJQ0JEYVc1bGIyNVViMjVsVFdGd2NHbHVaem9nZW5Vc0NpQWdJQ0JEYVhKamJHVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1puSXNDaUFnSUNCRGFYSmpiR1ZIWlc5dFpYUnllVG9nWm5Jc0NpQWdJQ0JEYkdGdGNGUnZSV1JuWlZkeVlYQndhVzVuT2lCMmRDd0tJQ0FnSUVOc2IyTnJPaUJYYUN3S0lDQWdJRU52Ykc5eU9pQmhaU3dLSUNBZ0lFTnZiRzl5UzJWNVpuSmhiV1ZVY21GamF6b2dRbUVzQ2lBZ0lDQkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpUb2dkbUVzQ2lBZ0lDQkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpVeHZZV1JsY2pvZ2FIa3NDaUFnSUNCRGIyNWxRblZtWm1WeVIyVnZiV1YwY25rNklIQnlMQW9nSUNBZ1EyOXVaVWRsYjIxbGRISjVPaUJ3Y2l3S0lDQWdJRU4xWW1WRFlXMWxjbUU2SUNSekxBb2dJQ0FnUTNWaVpWSmxabXhsWTNScGIyNU5ZWEJ3YVc1bk9pQkNhU3dLSUNBZ0lFTjFZbVZTWldaeVlXTjBhVzl1VFdGd2NHbHVaem9nZW1rc0NpQWdJQ0JEZFdKbFZHVjRkSFZ5WlRvZ2Eya3NDaUFnSUNCRGRXSmxWR1Y0ZEhWeVpVeHZZV1JsY2pvZ1JtZ3NDaUFnSUNCRGRXSmxWVlpTWldac1pXTjBhVzl1VFdGd2NHbHVaem9nVUhJc0NpQWdJQ0JEZFdKbFZWWlNaV1p5WVdOMGFXOXVUV0Z3Y0dsdVp6b2dWM01zQ2lBZ0lDQkRkV0pwWTBKbGVtbGxja04xY25abE9pQnNieXdLSUNBZ0lFTjFZbWxqUW1WNmFXVnlRM1Z5ZG1Vek9pQlRZU3dLSUNBZ0lFTjFZbWxqU1c1MFpYSndiMnhoYm5RNklGQm9MQW9nSUNBZ1EzVnNiRVpoWTJWQ1lXTnJPaUIwYkN3S0lDQWdJRU4xYkd4R1lXTmxSbkp2Ym5RNklHUjFMQW9nSUNBZ1EzVnNiRVpoWTJWR2NtOXVkRUpoWTJzNklGZDVMQW9nSUNBZ1EzVnNiRVpoWTJWT2IyNWxPaUIxZFN3S0lDQWdJRU4xY25abE9pQkRkQ3dLSUNBZ0lFTjFjblpsVUdGMGFEb2dRV2dzQ2lBZ0lDQkRkWE4wYjIxQ2JHVnVaR2x1WnpvZ2NIVXNDaUFnSUNCRGRYTjBiMjFVYjI1bFRXRndjR2x1WnpvZ1QzVXNDaUFnSUNCRGVXeHBibVJsY2tKMVptWmxja2RsYjIxbGRISjVPaUJLYml3S0lDQWdJRU41YkdsdVpHVnlSMlZ2YldWMGNuazZJRXB1TEFvZ0lDQWdRM2xzYVc1a2NtbGpZV3c2SUVONUxBb2dJQ0FnUkdGMFlWUmxlSFIxY21VNklIRnVMQW9nSUNBZ1JHRjBZVlJsZUhSMWNtVXlSRUZ5Y21GNU9pQlJjeXdLSUNBZ0lFUmhkR0ZVWlhoMGRYSmxNMFE2SUcxaExBb2dJQ0FnUkdGMFlWUmxlSFIxY21WTWIyRmtaWEk2SUU1b0xBb2dJQ0FnUkdGMFlWVjBhV3h6T2lCcmVTd0tJQ0FnSUVSbFkzSmxiV1Z1ZEZOMFpXNWphV3hQY0RvZ2JqQXNDaUFnSUNCRVpXTnlaVzFsYm5SWGNtRndVM1JsYm1OcGJFOXdPaUJ5TUN3S0lDQWdJRVJsWm1GMWJIUk1iMkZrYVc1blRXRnVZV2RsY2pvZ2JIa3NDaUFnSUNCRVpYQjBhRVp2Y20xaGREb2dWbTRzQ2lBZ0lDQkVaWEIwYUZOMFpXNWphV3hHYjNKdFlYUTZJRXhwTEFvZ0lDQWdSR1Z3ZEdoVVpYaDBkWEpsT2lCcmN5d0tJQ0FnSUVScGNtVmpkR2x2Ym1Gc1RHbG5hSFE2SUZkaExBb2dJQ0FnUkdseVpXTjBhVzl1WVd4TWFXZG9kRWhsYkhCbGNqb2dSbmtzQ2lBZ0lDQkVhWE5qY21WMFpVbHVkR1Z5Y0c5c1lXNTBPaUJKYUN3S0lDQWdJRVJ2WkdWallXaGxaSEp2YmtKMVptWmxja2RsYjIxbGRISjVPaUJ0Y2l3S0lDQWdJRVJ2WkdWallXaGxaSEp2YmtkbGIyMWxkSEo1T2lCdGNpd0tJQ0FnSUVSdmRXSnNaVk5wWkdVNklFTnBMQW9nSUNBZ1JITjBRV3h3YUdGR1lXTjBiM0k2SUUxMUxBb2dJQ0FnUkhOMFEyOXNiM0pHWVdOMGIzSTZJSGQxTEFvZ0lDQWdSSGx1WVcxcFkwSjFabVpsY2tGMGRISnBZblYwWlRvZ1FqQXNDaUFnSUNCRWVXNWhiV2xqUTI5d2VWVnpZV2RsT2lCNU1Dd0tJQ0FnSUVSNWJtRnRhV05FY21GM1ZYTmhaMlU2SUhWeUxBb2dJQ0FnUkhsdVlXMXBZMUpsWVdSVmMyRm5aVG9nYlRBc0NpQWdJQ0JGWkdkbGMwZGxiMjFsZEhKNU9pQmZZU3dLSUNBZ0lFVmtaMlZ6U0dWc2NHVnlPaUJaTUN3S0lDQWdJRVZzYkdsd2MyVkRkWEoyWlRvZ1ZYSXNDaUFnSUNCRmNYVmhiRVJsY0hSb09pQk1kU3dLSUNBZ0lFVnhkV0ZzVTNSbGJtTnBiRVoxYm1NNklHd3dMQW9nSUNBZ1JYRjFhWEpsWTNSaGJtZDFiR0Z5VW1WbWJHVmpkR2x2YmsxaGNIQnBibWM2SUVSekxBb2dJQ0FnUlhGMWFYSmxZM1JoYm1kMWJHRnlVbVZtY21GamRHbHZiazFoY0hCcGJtYzZJRVp6TEFvZ0lDQWdSWFZzWlhJNklGcHVMQW9nSUNBZ1JYWmxiblJFYVhOd1lYUmphR1Z5T2lCRmJpd0tJQ0FnSUVWNGRISjFaR1ZDZFdabVpYSkhaVzl0WlhSeWVUb2diRzRzQ2lBZ0lDQkZlSFJ5ZFdSbFIyVnZiV1YwY25rNklHeHVMQW9nSUNBZ1JtRmpaVU52Ykc5eWN6b2dWREFzQ2lBZ0lDQkdhV3hsVEc5aFpHVnlPaUJaZEN3S0lDQWdJRVpzWVhSVGFHRmthVzVuT2lCcll5d0tJQ0FnSUVac2IyRjBNVFpDZFdabVpYSkJkSFJ5YVdKMWRHVTZJRzVvTEFvZ0lDQWdSbXh2WVhRek1rRjBkSEpwWW5WMFpUb2dWekFzQ2lBZ0lDQkdiRzloZERNeVFuVm1abVZ5UVhSMGNtbGlkWFJsT2lCa1pTd0tJQ0FnSUVac2IyRjBOalJCZEhSeWFXSjFkR1U2SUhFd0xBb2dJQ0FnUm14dllYUTJORUoxWm1abGNrRjBkSEpwWW5WMFpUb2dhV2dzQ2lBZ0lDQkdiRzloZEZSNWNHVTZJRzV1TEFvZ0lDQWdSbTluT2lCQ2Npd0tJQ0FnSUVadlowVjRjREk2SUU1eUxBb2dJQ0FnUm05dWREb2diM1lzQ2lBZ0lDQkdiMjUwVEc5aFpHVnlPaUJ6ZGl3S0lDQWdJRVp5WVcxbFluVm1abVZ5VkdWNGRIVnlaVG9nVTJnc0NpQWdJQ0JHY205dWRGTnBaR1U2SUVGcExBb2dJQ0FnUm5KMWMzUjFiVG9nUkhJc0NpQWdJQ0JIVEVKMVptWmxja0YwZEhKcFluVjBaVG9nVVdnc0NpQWdJQ0JIVEZOTU1Ub2dYekFzQ2lBZ0lDQkhURk5NTXpvZ2VHd3NDaUFnSUNCSGNtVmhkR1Z5UkdWd2RHZzZJRkIxTEFvZ0lDQWdSM0psWVhSbGNrVnhkV0ZzUkdWd2RHZzZJRkoxTEFvZ0lDQWdSM0psWVhSbGNrVnhkV0ZzVTNSbGJtTnBiRVoxYm1NNklHUXdMQW9nSUNBZ1IzSmxZWFJsY2xOMFpXNWphV3hHZFc1ak9pQm9NQ3dLSUNBZ0lFZHlhV1JJWld4d1pYSTZJRzUxTEFvZ0lDQWdSM0p2ZFhBNklFaHVMQW9nSUNBZ1NHRnNaa1pzYjJGMFZIbHdaVG9nYTI0c0NpQWdJQ0JJWlcxcGMzQm9aWEpsVEdsbmFIUTZJRlZoTEFvZ0lDQWdTR1Z0YVhOd2FHVnlaVXhwWjJoMFNHVnNjR1Z5T2lCSmVTd0tJQ0FnSUVobGJXbHpjR2hsY21WTWFXZG9kRkJ5YjJKbE9pQkhhQ3dLSUNBZ0lFbGpiM05oYUdWa2NtOXVRblZtWm1WeVIyVnZiV1YwY25rNklGOXlMQW9nSUNBZ1NXTnZjMkZvWldSeWIyNUhaVzl0WlhSeWVUb2dYM0lzQ2lBZ0lDQkpiV0ZuWlVKcGRHMWhjRXh2WVdSbGNqb2dUMmdzQ2lBZ0lDQkpiV0ZuWlV4dllXUmxjam9nVW5Jc0NpQWdJQ0JKYldGblpWVjBhV3h6T2lCWmJpd0tJQ0FnSUVsdGJXVmthV0YwWlZKbGJtUmxjazlpYW1WamREb2dZWFlzQ2lBZ0lDQkpibU55WlcxbGJuUlRkR1Z1WTJsc1QzQTZJSFF3TEFvZ0lDQWdTVzVqY21WdFpXNTBWM0poY0ZOMFpXNWphV3hQY0RvZ2FUQXNDaUFnSUNCSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1U2SUZodUxBb2dJQ0FnU1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNuazZJRmxoTEFvZ0lDQWdTVzV6ZEdGdVkyVmtTVzUwWlhKc1pXRjJaV1JDZFdabVpYSTZJR3BvTEFvZ0lDQWdTVzV6ZEdGdVkyVmtUV1Z6YURvZ2VHRXNDaUFnSUNCSmJuUXhOa0YwZEhKcFluVjBaVG9nU0RBc0NpQWdJQ0JKYm5ReE5rSjFabVpsY2tGMGRISnBZblYwWlRvZ1pXZ3NDaUFnSUNCSmJuUXpNa0YwZEhKcFluVjBaVG9nUnpBc0NpQWdJQ0JKYm5Rek1rSjFabVpsY2tGMGRISnBZblYwWlRvZ2RHZ3NDaUFnSUNCSmJuUTRRWFIwY21saWRYUmxPaUI2TUN3S0lDQWdJRWx1ZERoQ2RXWm1aWEpCZEhSeWFXSjFkR1U2SUdwakxBb2dJQ0FnU1c1MFZIbHdaVG9nUjNVc0NpQWdJQ0JKYm5SbGNteGxZWFpsWkVKMVptWmxjam9nSkc0c0NpQWdJQ0JKYm5SbGNteGxZWFpsWkVKMVptWmxja0YwZEhKcFluVjBaVG9nVTI0c0NpQWdJQ0JKYm5SbGNuQnZiR0Z1ZERvZ1kyNHNDaUFnSUNCSmJuUmxjbkJ2YkdGMFpVUnBjMk55WlhSbE9pQjZjeXdLSUNBZ0lFbHVkR1Z5Y0c5c1lYUmxUR2x1WldGeU9pQlZjeXdLSUNBZ0lFbHVkR1Z5Y0c5c1lYUmxVMjF2YjNSb09pQjVieXdLSUNBZ0lFbHVkbVZ5ZEZOMFpXNWphV3hQY0RvZ2N6QXNDaUFnSUNCS1UwOU9URzloWkdWeU9pQmxkaXdLSUNBZ0lFdGxaWEJUZEdWdVkybHNUM0E2SUhadkxBb2dJQ0FnUzJWNVpuSmhiV1ZVY21GamF6b2dlblFzQ2lBZ0lDQk1UMFE2SUdKb0xBb2dJQ0FnVEdGMGFHVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1RYSXNDaUFnSUNCTVlYUm9aVWRsYjIxbGRISjVPaUJOY2l3S0lDQWdJRXhoZVdWeWN6b2dTbk1zQ2lBZ0lDQk1aVzV6Um14aGNtVTZJRzUyTEFvZ0lDQWdUR1Z6YzBSbGNIUm9PaUJEZFN3S0lDQWdJRXhsYzNORmNYVmhiRVJsY0hSb09pQmxZU3dLSUNBZ0lFeGxjM05GY1hWaGJGTjBaVzVqYVd4R2RXNWpPaUJqTUN3S0lDQWdJRXhsYzNOVGRHVnVZMmxzUm5WdVl6b2dZVEFzQ2lBZ0lDQk1hV2RvZERvZ1FuUXNDaUFnSUNCTWFXZG9kRkJ5YjJKbE9pQkljaXdLSUNBZ0lFeHBibVU2SUc5dUxBb2dJQ0FnVEdsdVpUTTZJRXRvTEFvZ0lDQWdUR2x1WlVKaGMybGpUV0YwWlhKcFlXdzZJR1owTEFvZ0lDQWdUR2x1WlVOMWNuWmxPaUJQY2l3S0lDQWdJRXhwYm1WRGRYSjJaVE02SUVWb0xBb2dJQ0FnVEdsdVpVUmhjMmhsWkUxaGRHVnlhV0ZzT2lCR1lTd0tJQ0FnSUV4cGJtVk1iMjl3T2lCNVlTd0tJQ0FnSUV4cGJtVlFhV1ZqWlhNNklIY3dMQW9nSUNBZ1RHbHVaVk5sWjIxbGJuUnpPaUIzZEN3S0lDQWdJRXhwYm1WVGRISnBjRG9nWWpBc0NpQWdJQ0JNYVc1bFlYSkZibU52WkdsdVp6b2dUblFzQ2lBZ0lDQk1hVzVsWVhKR2FXeDBaWEk2SUhSMExBb2dJQ0FnVEdsdVpXRnlTVzUwWlhKd2IyeGhiblE2SUU1aExBb2dJQ0FnVEdsdVpXRnlUV2x3VFdGd1RHbHVaV0Z5Um1sc2RHVnlPaUFrZVN3S0lDQWdJRXhwYm1WaGNrMXBjRTFoY0U1bFlYSmxjM1JHYVd4MFpYSTZJRnA1TEFvZ0lDQWdUR2x1WldGeVRXbHdiV0Z3VEdsdVpXRnlSbWxzZEdWeU9pQlZhU3dLSUNBZ0lFeHBibVZoY2sxcGNHMWhjRTVsWVhKbGMzUkdhV3gwWlhJNklGZGpMQW9nSUNBZ1RHbHVaV0Z5Vkc5dVpVMWhjSEJwYm1jNklFNTFMQW9nSUNBZ1RHOWhaR1Z5T2lCaWRDd0tJQ0FnSUV4dllXUmxjbFYwYVd4ek9pQkhjeXdLSUNBZ0lFeHZZV1JwYm1kTllXNWhaMlZ5T2lCNllTd0tJQ0FnSUV4dmIzQlBibU5sT2lCUVpDd0tJQ0FnSUV4dmIzQlFhVzVuVUc5dVp6b2dSR1FzQ2lBZ0lDQk1iMjl3VW1Wd1pXRjBPaUJKWkN3S0lDQWdJRXgxYldsdVlXNWpaVUZzY0doaFJtOXliV0YwT2lCWmRTd0tJQ0FnSUV4MWJXbHVZVzVqWlVadmNtMWhkRG9nU25Vc0NpQWdJQ0JOVDFWVFJUb2dSM2tzQ2lBZ0lDQk5ZWFJsY21saGJEb2daSFFzQ2lBZ0lDQk5ZWFJsY21saGJFeHZZV1JsY2pvZ2VtZ3NDaUFnSUNCTllYUm9PaUJOTUN3S0lDQWdJRTFoZEdoVmRHbHNjem9nVFRBc0NpQWdJQ0JOWVhSeWFYZ3pPaUJzZEN3S0lDQWdJRTFoZEhKcGVEUTZJSEJsTEFvZ0lDQWdUV0Y0UlhGMVlYUnBiMjQ2SUc5c0xBb2dJQ0FnVFdWemFEb2djM1FzQ2lBZ0lDQk5aWE5vUW1GemFXTk5ZWFJsY21saGJEb2dhRzRzQ2lBZ0lDQk5aWE5vUkdWd2RHaE5ZWFJsY21saGJEb2daVzhzQ2lBZ0lDQk5aWE5vUkdsemRHRnVZMlZOWVhSbGNtbGhiRG9nZEc4c0NpQWdJQ0JOWlhOb1JtRmpaVTFoZEdWeWFXRnNPaUJCTUN3S0lDQWdJRTFsYzJoTVlXMWlaWEowVFdGMFpYSnBZV3c2SUVsaExBb2dJQ0FnVFdWemFFMWhkR05oY0UxaGRHVnlhV0ZzT2lCRVlTd0tJQ0FnSUUxbGMyaE9iM0p0WVd4TllYUmxjbWxoYkRvZ1VHRXNDaUFnSUNCTlpYTm9VR2h2Ym1kTllYUmxjbWxoYkRvZ1RHRXNDaUFnSUNCTlpYTm9VR2g1YzJsallXeE5ZWFJsY21saGJEb2dRMkVzQ2lBZ0lDQk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiRG9nY0c4c0NpQWdJQ0JOWlhOb1ZHOXZiazFoZEdWeWFXRnNPaUJTWVN3S0lDQWdJRTFwYmtWeGRXRjBhVzl1T2lCemJDd0tJQ0FnSUUxcGNuSnZjbVZrVW1Wd1pXRjBWM0poY0hCcGJtYzZJRUp6TEFvZ0lDQWdUV2w0VDNCbGNtRjBhVzl1T2lCRWRTd0tJQ0FnSUUxMWJIUnBUV0YwWlhKcFlXdzZJRU13TEFvZ0lDQWdUWFZzZEdsd2JIbENiR1Z1WkdsdVp6b2djbXdzQ2lBZ0lDQk5kV3gwYVhCc2VVOXdaWEpoZEdsdmJqb2dWbk1zQ2lBZ0lDQk9aV0Z5WlhOMFJtbHNkR1Z5T2lCeWRDd0tJQ0FnSUU1bFlYSmxjM1JOYVhCTllYQk1hVzVsWVhKR2FXeDBaWEk2SUZsNUxBb2dJQ0FnVG1WaGNtVnpkRTFwY0UxaGNFNWxZWEpsYzNSR2FXeDBaWEk2SUVwNUxBb2dJQ0FnVG1WaGNtVnpkRTFwY0cxaGNFeHBibVZoY2tacGJIUmxjam9nYm1Fc0NpQWdJQ0JPWldGeVpYTjBUV2x3YldGd1RtVmhjbVZ6ZEVacGJIUmxjam9nZEdFc0NpQWdJQ0JPWlhabGNrUmxjSFJvT2lCRmRTd0tJQ0FnSUU1bGRtVnlVM1JsYm1OcGJFWjFibU02SUc4d0xBb2dJQ0FnVG05Q2JHVnVaR2x1WnpvZ2RtNHNDaUFnSUNCT2IwTnZiRzl5Y3pvZ1V6QXNDaUFnSUNCT2IxUnZibVZOWVhCd2FXNW5PaUJmYml3S0lDQWdJRTV2Y20xaGJFRnVhVzFoZEdsdmJrSnNaVzVrVFc5a1pUb2dkV0VzQ2lBZ0lDQk9iM0p0WVd4Q2JHVnVaR2x1WnpvZ2MzSXNDaUFnSUNCT2IzUkZjWFZoYkVSbGNIUm9PaUJKZFN3S0lDQWdJRTV2ZEVWeGRXRnNVM1JsYm1OcGJFWjFibU02SUhVd0xBb2dJQ0FnVG5WdFltVnlTMlY1Wm5KaGJXVlVjbUZqYXpvZ1FYSXNDaUFnSUNCUFltcGxZM1F6UkRvZ1RtVXNDaUFnSUNCUFltcGxZM1JNYjJGa1pYSTZJSFY1TEFvZ0lDQWdUMkpxWldOMFUzQmhZMlZPYjNKdFlXeE5ZWEE2SUhwa0xBb2dJQ0FnVDJOMFlXaGxaSEp2YmtKMVptWmxja2RsYjIxbGRISjVPaUJKYVN3S0lDQWdJRTlqZEdGb1pXUnliMjVIWlc5dFpYUnllVG9nU1drc0NpQWdJQ0JQYm1WR1lXTjBiM0k2SUhsMUxBb2dJQ0FnVDI1bFRXbHVkWE5FYzNSQmJIQm9ZVVpoWTNSdmNqb2dZblVzQ2lBZ0lDQlBibVZOYVc1MWMwUnpkRU52Ykc5eVJtRmpkRzl5T2lCVGRTd0tJQ0FnSUU5dVpVMXBiblZ6VTNKalFXeHdhR0ZHWVdOMGIzSTZJRlpqTEFvZ0lDQWdUMjVsVFdsdWRYTlRjbU5EYjJ4dmNrWmhZM1J2Y2pvZ1gzVXNDaUFnSUNCUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FNklFWnlMQW9nSUNBZ1VFTkdVMmhoWkc5M1RXRndPaUJJWXl3S0lDQWdJRkJEUmxOdlpuUlRhR0ZrYjNkTllYQTZJR1oxTEFvZ0lDQWdVRTFTUlUxSFpXNWxjbUYwYjNJNklHRm9MQW9nSUNBZ1VHRnlZVzFsZEhKcFkwZGxiMjFsZEhKNU9pQnBkaXdLSUNBZ0lGQmhjblJwWTJ4bE9pQlNNQ3dLSUNBZ0lGQmhjblJwWTJ4bFFtRnphV05OWVhSbGNtbGhiRG9nUkRBc0NpQWdJQ0JRWVhKMGFXTnNaVk41YzNSbGJUb2dVREFzQ2lBZ0lDQlFZWEowYVdOc1pWTjVjM1JsYlUxaGRHVnlhV0ZzT2lCR01Dd0tJQ0FnSUZCaGRHZzZJR2R5TEFvZ0lDQWdVR1Z5YzNCbFkzUnBkbVZEWVcxbGNtRTZJSFYwTEFvZ0lDQWdVR3hoYm1VNklGZDBMQW9nSUNBZ1VHeGhibVZDZFdabVpYSkhaVzl0WlhSeWVUb2dVR2tzQ2lBZ0lDQlFiR0Z1WlVkbGIyMWxkSEo1T2lCUWFTd0tJQ0FnSUZCc1lXNWxTR1ZzY0dWeU9pQjZlU3dLSUNBZ0lGQnZhVzUwUTJ4dmRXUTZJRXd3TEFvZ0lDQWdVRzlwYm5SRGJHOTFaRTFoZEdWeWFXRnNPaUJKTUN3S0lDQWdJRkJ2YVc1MFRHbG5hSFE2SUVkaExBb2dJQ0FnVUc5cGJuUk1hV2RvZEVobGJIQmxjam9nVW5rc0NpQWdJQ0JRYjJsdWRITTZJSHB5TEFvZ0lDQWdVRzlwYm5SelRXRjBaWEpwWVd3NklHcHVMQW9nSUNBZ1VHOXNZWEpIY21sa1NHVnNjR1Z5T2lCRWVTd0tJQ0FnSUZCdmJIbG9aV1J5YjI1Q2RXWm1aWEpIWlc5dFpYUnllVG9nWVc0c0NpQWdJQ0JRYjJ4NWFHVmtjbTl1UjJWdmJXVjBjbms2SUdGdUxBb2dJQ0FnVUc5emFYUnBiMjVoYkVGMVpHbHZPaUI0ZVN3S0lDQWdJRkJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dhMlVzQ2lBZ0lDQlFjbTl3WlhKMGVVMXBlR1Z5T2lCWWFDd0tJQ0FnSUZGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abE9pQmpieXdLSUNBZ0lGRjFZV1J5WVhScFkwSmxlbWxsY2tOMWNuWmxNem9nYUc4c0NpQWdJQ0JSZFdGMFpYSnVhVzl1T2lCbmRDd0tJQ0FnSUZGMVlYUmxjbTVwYjI1TFpYbG1jbUZ0WlZSeVlXTnJPaUJYYVN3S0lDQWdJRkYxWVhSbGNtNXBiMjVNYVc1bFlYSkpiblJsY25CdmJHRnVkRG9nUkdnc0NpQWdJQ0JTUlZaSlUwbFBUam9nWTJFc0NpQWdJQ0JTUjBKQlJHVndkR2hRWVdOcmFXNW5PaUJDWkN3S0lDQWdJRkpIUWtGR2IzSnRZWFE2SUdOMExBb2dJQ0FnVWtkQ1FVbHVkR1ZuWlhKR2IzSnRZWFE2SUdWa0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpFd2VERXdYMFp2Y20xaGREb2dabVFzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZNVEI0TlY5R2IzSnRZWFE2SUdoa0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpFd2VEWmZSbTl5YldGME9pQjFaQ3dLSUNBZ0lGSkhRa0ZmUVZOVVExOHhNSGc0WDBadmNtMWhkRG9nWkdRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mTVRKNE1UQmZSbTl5YldGME9pQndaQ3dLSUNBZ0lGSkhRa0ZmUVZOVVExOHhNbmd4TWw5R2IzSnRZWFE2SUcxa0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpSNE5GOUdiM0p0WVhRNklHNWtMQW9nSUNBZ1VrZENRVjlCVTFSRFh6VjRORjlHYjNKdFlYUTZJR2xrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYelY0TlY5R2IzSnRZWFE2SUhKa0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpaNE5WOUdiM0p0WVhRNklITmtMQW9nSUNBZ1VrZENRVjlCVTFSRFh6WjRObDlHYjNKdFlYUTZJRzlrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYemg0TlY5R2IzSnRZWFE2SUdGa0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpoNE5sOUdiM0p0WVhRNklHeGtMQW9nSUNBZ1VrZENRVjlCVTFSRFh6aDRPRjlHYjNKdFlYUTZJR05rTEFvZ0lDQWdVa2RDUVY5Q1VGUkRYMFp2Y20xaGREb2daMlFzQ2lBZ0lDQlNSMEpCWDBWVVF6SmZSVUZEWDBadmNtMWhkRG9nWjJ3c0NpQWdJQ0JTUjBKQlgxQldVbFJEWHpKQ1VGQldNVjlHYjNKdFlYUTZJSEJzTEFvZ0lDQWdVa2RDUVY5UVZsSlVRMTgwUWxCUVZqRmZSbTl5YldGME9pQm1iQ3dLSUNBZ0lGSkhRa0ZmVXpOVVExOUVXRlF4WDBadmNtMWhkRG9nYkd3c0NpQWdJQ0JTUjBKQlgxTXpWRU5mUkZoVU0xOUdiM0p0WVhRNklHTnNMQW9nSUNBZ1VrZENRVjlUTTFSRFgwUllWRFZmUm05eWJXRjBPaUJvYkN3S0lDQWdJRkpIUWtadmNtMWhkRG9nUjI0c0NpQWdJQ0JTUjBKSmJuUmxaMlZ5Um05eWJXRjBPaUJMZFN3S0lDQWdJRkpIUWw5RlZFTXhYMFp2Y20xaGREb2dkR1FzQ2lBZ0lDQlNSMEpmUlZSRE1sOUdiM0p0WVhRNklHMXNMQW9nSUNBZ1VrZENYMUJXVWxSRFh6SkNVRkJXTVY5R2IzSnRZWFE2SUdSc0xBb2dJQ0FnVWtkQ1gxQldVbFJEWHpSQ1VGQldNVjlHYjNKdFlYUTZJSFZzTEFvZ0lDQWdVa2RDWDFNelZFTmZSRmhVTVY5R2IzSnRZWFE2SUdGc0xBb2dJQ0FnVWtkR2IzSnRZWFE2SUdwMUxBb2dJQ0FnVWtkSmJuUmxaMlZ5Um05eWJXRjBPaUJSZFN3S0lDQWdJRkpoZDFOb1lXUmxjazFoZEdWeWFXRnNPaUJIYVN3S0lDQWdJRkpoZVRvZ1EyNHNDaUFnSUNCU1lYbGpZWE4wWlhJNklFVjVMQW9nSUNBZ1VtVmpkRUZ5WldGTWFXZG9kRG9nV0dFc0NpQWdJQ0JTWldSR2IzSnRZWFE2SUZwMUxBb2dJQ0FnVW1Wa1NXNTBaV2RsY2tadmNtMWhkRG9nSkhVc0NpQWdJQ0JTWldsdWFHRnlaRlJ2Ym1WTllYQndhVzVuT2lCQ2RTd0tJQ0FnSUZKbGNHVmhkRmR5WVhCd2FXNW5PaUJPY3l3S0lDQWdJRkpsY0d4aFkyVlRkR1Z1WTJsc1QzQTZJR1V3TEFvZ0lDQWdVbVYyWlhKelpWTjFZblJ5WVdOMFJYRjFZWFJwYjI0NklHZDFMQW9nSUNBZ1VtbHVaMEoxWm1abGNrZGxiMjFsZEhKNU9pQmljaXdLSUNBZ0lGSnBibWRIWlc5dFpYUnllVG9nWW5Jc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTh4TUhneE1GOUdiM0p0WVhRNklFTmtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk1UQjROVjlHYjNKdFlYUTZJRlJrTEFvZ0lDQWdVMUpIUWpoZlFVeFFTRUU0WDBGVFZFTmZNVEI0Tmw5R2IzSnRZWFE2SUVWa0xBb2dJQ0FnVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mTVRCNE9GOUdiM0p0WVhRNklFRmtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk1USjRNVEJmUm05eWJXRjBPaUJNWkN3S0lDQWdJRk5TUjBJNFgwRk1VRWhCT0Y5QlUxUkRYekV5ZURFeVgwWnZjbTFoZERvZ1VtUXNDaUFnSUNCVFVrZENPRjlCVEZCSVFUaGZRVk5VUTE4MGVEUmZSbTl5YldGME9pQjRaQ3dLSUNBZ0lGTlNSMEk0WDBGTVVFaEJPRjlCVTFSRFh6VjRORjlHYjNKdFlYUTZJSGxrTEFvZ0lDQWdVMUpIUWpoZlFVeFFTRUU0WDBGVFZFTmZOWGcxWDBadmNtMWhkRG9nZG1Rc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTgyZURWZlJtOXliV0YwT2lCZlpDd0tJQ0FnSUZOU1IwSTRYMEZNVUVoQk9GOUJVMVJEWHpaNE5sOUdiM0p0WVhRNklFMWtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk9IZzFYMFp2Y20xaGREb2dZbVFzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExODRlRFpmUm05eWJXRjBPaUIzWkN3S0lDQWdJRk5TUjBJNFgwRk1VRWhCT0Y5QlUxUkRYemg0T0Y5R2IzSnRZWFE2SUZOa0xBb2dJQ0FnVTJObGJtVTZJRzV2TEFvZ0lDQWdVMk5sYm1WVmRHbHNjem9nZEhZc0NpQWdJQ0JUYUdGa1pYSkRhSFZ1YXpvZ1JtVXNDaUFnSUNCVGFHRmtaWEpNYVdJNklIRjBMQW9nSUNBZ1UyaGhaR1Z5VFdGMFpYSnBZV3c2SUhOdUxBb2dJQ0FnVTJoaFpHOTNUV0YwWlhKcFlXdzZJRUZoTEFvZ0lDQWdVMmhoY0dVNklGaDBMQW9nSUNBZ1UyaGhjR1ZDZFdabVpYSkhaVzl0WlhSeWVUb2dSR2tzQ2lBZ0lDQlRhR0Z3WlVkbGIyMWxkSEo1T2lCRWFTd0tJQ0FnSUZOb1lYQmxVR0YwYURvZ1Qza3NDaUFnSUNCVGFHRndaVlYwYVd4ek9pQktkQ3dLSUNBZ0lGTm9iM0owVkhsd1pUb2dhM1VzQ2lBZ0lDQlRhMlZzWlhSdmJqb2dZVzhzQ2lBZ0lDQlRhMlZzWlhSdmJraGxiSEJsY2pvZ1pYVXNDaUFnSUNCVGEybHVibVZrVFdWemFEb2djMjhzQ2lBZ0lDQlRiVzl2ZEdoVGFHRmthVzVuT2lCWWVTd0tJQ0FnSUZOd2FHVnlaVG9nUVc0c0NpQWdJQ0JUY0dobGNtVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1Jta3NDaUFnSUNCVGNHaGxjbVZIWlc5dFpYUnllVG9nUm1rc0NpQWdJQ0JUY0dobGNtbGpZV3c2SUVGNUxBb2dJQ0FnVTNCb1pYSnBZMkZzU0dGeWJXOXVhV056TXpvZ1NtRXNDaUFnSUNCVGNHeHBibVZEZFhKMlpUb2dkVzhzQ2lBZ0lDQlRjRzkwVEdsbmFIUTZJRWhoTEFvZ0lDQWdVM0J2ZEV4cFoyaDBTR1ZzY0dWeU9pQk1lU3dLSUNBZ0lGTndjbWwwWlRvZ2NtOHNDaUFnSUNCVGNISnBkR1ZOWVhSbGNtbGhiRG9nYVc4c0NpQWdJQ0JUY21OQmJIQm9ZVVpoWTNSdmNqb2dSMk1zQ2lBZ0lDQlRjbU5CYkhCb1lWTmhkSFZ5WVhSbFJtRmpkRzl5T2lCVWRTd0tJQ0FnSUZOeVkwTnZiRzl5Um1GamRHOXlPaUIyZFN3S0lDQWdJRk4wWVhScFkwTnZjSGxWYzJGblpUb2dlREFzQ2lBZ0lDQlRkR0YwYVdORWNtRjNWWE5oWjJVNklHaHlMQW9nSUNBZ1UzUmhkR2xqVW1WaFpGVnpZV2RsT2lCd01Dd0tJQ0FnSUZOMFpYSmxiME5oYldWeVlUb2dabmtzQ2lBZ0lDQlRkSEpsWVcxRGIzQjVWWE5oWjJVNklIWXdMQW9nSUNBZ1UzUnlaV0Z0UkhKaGQxVnpZV2RsT2lCbU1Dd0tJQ0FnSUZOMGNtVmhiVkpsWVdSVmMyRm5aVG9nWnpBc0NpQWdJQ0JUZEhKcGJtZExaWGxtY21GdFpWUnlZV05yT2lCTGJpd0tJQ0FnSUZOMVluUnlZV04wUlhGMVlYUnBiMjQ2SUcxMUxBb2dJQ0FnVTNWaWRISmhZM1JwZG1WQ2JHVnVaR2x1WnpvZ2FXd3NDaUFnSUNCVVQxVkRTRG9nVm5rc0NpQWdJQ0JVWVc1blpXNTBVM0JoWTJWT2IzSnRZV3hOWVhBNklFaHBMQW9nSUNBZ1ZHVjBjbUZvWldSeWIyNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ2QzSXNDaUFnSUNCVVpYUnlZV2hsWkhKdmJrZGxiMjFsZEhKNU9pQjNjaXdLSUNBZ0lGUmxlSFJIWlc5dFpYUnllVG9nY25Zc0NpQWdJQ0JVWlhoMGRYSmxPaUJ2ZEN3S0lDQWdJRlJsZUhSMWNtVk1iMkZrWlhJNklFSm9MQW9nSUNBZ1ZHOXlkWE5DZFdabVpYSkhaVzl0WlhSeWVUb2dVM0lzQ2lBZ0lDQlViM0oxYzBkbGIyMWxkSEo1T2lCVGNpd0tJQ0FnSUZSdmNuVnpTMjV2ZEVKMVptWmxja2RsYjIxbGRISjVPaUJVY2l3S0lDQWdJRlJ2Y25WelMyNXZkRWRsYjIxbGRISjVPaUJVY2l3S0lDQWdJRlJ5YVdGdVoyeGxPaUJ1ZEN3S0lDQWdJRlJ5YVdGdVoyeGxSbUZ1UkhKaGQwMXZaR1U2SUZGNUxBb2dJQ0FnVkhKcFlXNW5iR1ZUZEhKcGNFUnlZWGROYjJSbE9pQnFlU3dLSUNBZ0lGUnlhV0Z1WjJ4bGMwUnlZWGROYjJSbE9pQkdaQ3dLSUNBZ0lGUjFZbVZDZFdabVpYSkhaVzl0WlhSeWVUb2dSWElzQ2lBZ0lDQlVkV0psUjJWdmJXVjBjbms2SUVWeUxBb2dJQ0FnVlZaTllYQndhVzVuT2lCb1lTd0tJQ0FnSUZWcGJuUXhOa0YwZEhKcFluVjBaVG9nYXpBc0NpQWdJQ0JWYVc1ME1UWkNkV1ptWlhKQmRIUnlhV0oxZEdVNklGbHpMQW9nSUNBZ1ZXbHVkRE15UVhSMGNtbGlkWFJsT2lCV01Dd0tJQ0FnSUZWcGJuUXpNa0oxWm1abGNrRjBkSEpwWW5WMFpUb2dXbk1zQ2lBZ0lDQlZhVzUwT0VGMGRISnBZblYwWlRvZ1ZUQXNDaUFnSUNCVmFXNTBPRUoxWm1abGNrRjBkSEpwWW5WMFpUb2dVV01zQ2lBZ0lDQlZhVzUwT0VOc1lXMXdaV1JCZEhSeWFXSjFkR1U2SUU4d0xBb2dJQ0FnVldsdWREaERiR0Z0Y0dWa1FuVm1abVZ5UVhSMGNtbGlkWFJsT2lCTFl5d0tJQ0FnSUZWdWFXWnZjbTA2SUdkdkxBb2dJQ0FnVlc1cFptOXliWE5NYVdJNklHbGxMQW9nSUNBZ1ZXNXBabTl5YlhOVmRHbHNjem9nZFdZc0NpQWdJQ0JWYm5OcFoyNWxaRUo1ZEdWVWVYQmxPaUJ5Yml3S0lDQWdJRlZ1YzJsbmJtVmtTVzUwTWpRNFZIbHdaVG9nVkdrc0NpQWdJQ0JWYm5OcFoyNWxaRWx1ZEZSNWNHVTZJRkJ6TEFvZ0lDQWdWVzV6YVdkdVpXUlRhRzl5ZERRME5EUlVlWEJsT2lCV2RTd0tJQ0FnSUZWdWMybG5ibVZrVTJodmNuUTFOVFV4Vkhsd1pUb2dWM1VzQ2lBZ0lDQlZibk5wWjI1bFpGTm9iM0owTlRZMVZIbHdaVG9nY1hVc0NpQWdJQ0JWYm5OcFoyNWxaRk5vYjNKMFZIbHdaVG9nWTNJc0NpQWdJQ0JXVTAxVGFHRmtiM2ROWVhBNklHbHlMQW9nSUNBZ1ZtVmpkRzl5TWpvZ1dDd0tJQ0FnSUZabFkzUnZjak02SUUwc0NpQWdJQ0JXWldOMGIzSTBPaUJXWlN3S0lDQWdJRlpsWTNSdmNrdGxlV1p5WVcxbFZISmhZMnM2SUVOeUxBb2dJQ0FnVm1WeWRHVjRPaUJPTUN3S0lDQWdJRlpsY25SbGVFTnZiRzl5Y3pvZ1JUQXNDaUFnSUNCV2FXUmxiMVJsZUhSMWNtVTZJSGRvTEFvZ0lDQWdWMlZpUjB3eFVtVnVaR1Z5WlhJNklGOW9MQW9nSUNBZ1YyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBPaUJxY3l3S0lDQWdJRmRsWWtkTVRYVnNkR2x3YkdWU1pXNWtaWEpVWVhKblpYUnpPaUJhWXl3S0lDQWdJRmRsWWtkTVRYVnNkR2x6WVcxd2JHVlNaVzVrWlhKVVlYSm5aWFE2SUZoekxBb2dJQ0FnVjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUVGMExBb2dJQ0FnVjJWaVIweFNaVzVrWlhKVVlYSm5aWFJEZFdKbE9pQlJNQ3dLSUNBZ0lGZGxZa2RNVW1WdVpHVnlaWEk2SUhGbExBb2dJQ0FnVjJWaVIweFZkR2xzY3pvZ1JYZ3NDaUFnSUNCWGFYSmxabkpoYldWSFpXOXRaWFJ5ZVRvZ1JXRXNDaUFnSUNCWGFYSmxabkpoYldWSVpXeHdaWEk2SUZvd0xBb2dJQ0FnVjNKaGNFRnliM1Z1WkVWdVpHbHVaem9nVDNNc0NpQWdJQ0JZU0ZKTWIyRmtaWEk2SUNRd0xBb2dJQ0FnV21WeWIwTjFjblpoZEhWeVpVVnVaR2x1WnpvZ1RXa3NDaUFnSUNCYVpYSnZSbUZqZEc5eU9pQjRkU3dLSUNBZ0lGcGxjbTlUYkc5d1pVVnVaR2x1WnpvZ1lta3NDaUFnSUNCYVpYSnZVM1JsYm1OcGJFOXdPaUJMZVN3S0lDQWdJSE5TUjBKRmJtTnZaR2x1WnpvZ1Qya0tmVHNLWm5WdVkzUnBiMjRnWjJWMFYyVmlSMHhGY25KdmNrMWxjM05oWjJVb0tTQjdDaUFnSUNCeVpYUjFjbTRnWjJWMFJYSnliM0pOWlhOellXZGxLREVwT3dwOUNtWjFibU4wYVc5dUlHZGxkRVZ5Y205eVRXVnpjMkZuWlNoMlpYSnphVzl1S1NCN0NpQWdJQ0IyWVhJZ2JtRnRaWE1nUFNCN0NpQWdJQ0FnSUNBZ01Ub2dJbGRsWWtkTUlpd0tJQ0FnSUNBZ0lDQXlPaUFpVjJWaVIwd2dNaUlLSUNBZ0lIMDdDaUFnSUNCMllYSWdZMjl1ZEdWNGRITWdQU0I3Q2lBZ0lDQWdJQ0FnTVRvZ2QybHVaRzkzTGxkbFlrZE1VbVZ1WkdWeWFXNW5RMjl1ZEdWNGRDd0tJQ0FnSUNBZ0lDQXlPaUIzYVc1a2IzY3VWMlZpUjB3eVVtVnVaR1Z5YVc1blEyOXVkR1Y0ZEFvZ0lDQWdmVHNLSUNBZ0lIWmhjaUJ0WlhOellXZGxJRDBnSjFsdmRYSWdKREFnWkc5bGN5QnViM1FnYzJWbGJTQjBieUJ6ZFhCd2IzSjBJRHhoSUdoeVpXWTlJbWgwZEhBNkx5OXJhSEp2Ym05ekxtOXlaeTkzWldKbmJDOTNhV3RwTDBkbGRIUnBibWRmWVY5WFpXSkhURjlKYlhCc1pXMWxiblJoZEdsdmJpSWdjM1I1YkdVOUltTnZiRzl5T2lNd01EQWlQaVF4UEM5aFBpYzdDaUFnSUNCMllYSWdaV3hsYldWdWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0ltUnBkaUlwT3dvZ0lDQWdaV3hsYldWdWRDNXBaQ0E5SUNKM1pXSm5iRzFsYzNOaFoyVWlPd29nSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzVtYjI1MFJtRnRhV3g1SUQwZ0ltMXZibTl6Y0dGalpTSTdDaUFnSUNCbGJHVnRaVzUwTG5OMGVXeGxMbVp2Ym5SVGFYcGxJRDBnSWpFemNIZ2lPd29nSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzVtYjI1MFYyVnBaMmgwSUQwZ0ltNXZjbTFoYkNJN0NpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExuUmxlSFJCYkdsbmJpQTlJQ0pqWlc1MFpYSWlPd29nSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzVpWVdOclozSnZkVzVrSUQwZ0lpTm1abVlpT3dvZ0lDQWdaV3hsYldWdWRDNXpkSGxzWlM1amIyeHZjaUE5SUNJak1EQXdJanNLSUNBZ0lHVnNaVzFsYm5RdWMzUjViR1V1Y0dGa1pHbHVaeUE5SUNJeExqVmxiU0k3Q2lBZ0lDQmxiR1Z0Wlc1MExuTjBlV3hsTG5kcFpIUm9JRDBnSWpRd01IQjRJanNLSUNBZ0lHVnNaVzFsYm5RdWMzUjViR1V1YldGeVoybHVJRDBnSWpWbGJTQmhkWFJ2SURBaU93b2dJQ0FnYVdZZ0tHTnZiblJsZUhSelczWmxjbk5wYjI1ZEtTQjdDaUFnSUNBZ0lDQWdiV1Z6YzJGblpTQTlJRzFsYzNOaFoyVXVjbVZ3YkdGalpTZ2lKREFpTENBaVozSmhjR2hwWTNNZ1kyRnlaQ0lwT3dvZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQnRaWE56WVdkbElEMGdiV1Z6YzJGblpTNXlaWEJzWVdObEtDSWtNQ0lzSUNKaWNtOTNjMlZ5SWlrN0NpQWdJQ0I5Q2lBZ0lDQnRaWE56WVdkbElEMGdiV1Z6YzJGblpTNXlaWEJzWVdObEtDSWtNU0lzSUc1aGJXVnpXM1psY25OcGIyNWRLVHNLSUNBZ0lHVnNaVzFsYm5RdWFXNXVaWEpJVkUxTUlEMGdiV1Z6YzJGblpUc0tJQ0FnSUhKbGRIVnliaUJsYkdWdFpXNTBPd3A5Q21OdmJuTjBJSEJwZUdWc1VtRjBhVzhnUFNCM2FXNWtiM2N1WkdWMmFXTmxVR2w0Wld4U1lYUnBieUI4ZkNBeExqQTdDbVoxYm1OMGFXOXVJR1YyWlc1ME1uTmpaVzVsWDNCcGVHVnNLSE5qWlc1bExDQmxkbVZ1ZENrZ2V3b2dJQ0FnWTI5dWMzUWdleUJqWVc1MllYTWdJSDBnUFNCelkyVnVaUzV6WTNKbFpXNDdDaUFnSUNCamIyNXpkQ0J5WldOMElEMGdZMkZ1ZG1GekxtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwT3dvZ0lDQWdZMjl1YzNRZ2VDQTlJQ2hsZG1WdWRDNWpiR2xsYm5SWUlDMGdjbVZqZEM1c1pXWjBLU0FxSUhCcGVHVnNVbUYwYVc4N0NpQWdJQ0JqYjI1emRDQjVJRDBnS0hKbFkzUXVhR1ZwWjJoMElDMGdLR1YyWlc1MExtTnNhV1Z1ZEZrZ0xTQnlaV04wTG5SdmNDa3BJQ29nY0dsNFpXeFNZWFJwYnpzS0lDQWdJSEpsZEhWeWJpQmJDaUFnSUNBZ0lDQWdlQ3dLSUNBZ0lDQWdJQ0I1Q2lBZ0lDQmRPd3A5Q21aMWJtTjBhVzl1SUVsa1pXNTBhWFI1TkhnMEtDa2dld29nSUNBZ2NtVjBkWEp1SUc1bGR5QndaU2dwT3dwOUNtWjFibU4wYVc5dUlHbHVYM05qWlc1bEtITmpaVzVsTENCdGIzVnpaVjlsZG1WdWRDa2dld29nSUNBZ1kyOXVjM1FnVzNnc0lIbGRJRDBnWlhabGJuUXljMk5sYm1WZmNHbDRaV3dvYzJObGJtVXNJRzF2ZFhObFgyVjJaVzUwS1RzS0lDQWdJR052Ym5OMElGdHplQ3dnYzNrc0lITjNMQ0J6YUYwZ1BTQnpZMlZ1WlM1d2FYaGxiR0Z5WldFdWRtRnNkV1U3Q2lBZ0lDQnlaWFIxY200Z2VDQStQU0J6ZUNBbUppQjRJRHdnYzNnZ0t5QnpkeUFtSmlCNUlENDlJSE41SUNZbUlIa2dQQ0J6ZVNBcklITm9Pd3A5Q21aMWJtTjBhVzl1SUdGMGRHRmphRjh6WkY5allXMWxjbUVvWTJGdWRtRnpMQ0J0WVd0cFpWOWpZVzFsY21Fc0lHTmhiVE5rTENCelkyVnVaU2tnZXdvZ0lDQWdhV1lnS0dOaGJUTmtJRDA5UFNCMWJtUmxabWx1WldRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0I5Q2lBZ0lDQmpiMjV6ZENCYmR5d2dhRjBnUFNCdFlXdHBaVjlqWVcxbGNtRXVjbVZ6YjJ4MWRHbHZiaTUyWVd4MVpUc0tJQ0FnSUdOdmJuTjBJR05oYldWeVlTQTlJRzVsZHlCMWRDaGpZVzB6WkM1bWIzWXNJSGNnTHlCb0xDQmpZVzB6WkM1dVpXRnlMQ0JqWVcwelpDNW1ZWElwT3dvZ0lDQWdZMjl1YzNRZ1kyVnVkR1Z5SUQwZ2JtVjNJRTBvTGk0dVkyRnRNMlF1Ykc5dmEyRjBLVHNLSUNBZ0lHTmhiV1Z5WVM1MWNDQTlJRzVsZHlCTktDNHVMbU5oYlROa0xuVndkbVZqZEc5eUtUc0tJQ0FnSUdOaGJXVnlZUzV3YjNOcGRHbHZiaTV6WlhRb0xpNHVZMkZ0TTJRdVpYbGxjRzl6YVhScGIyNHBPd29nSUNBZ1kyRnRaWEpoTG14dmIydEJkQ2hqWlc1MFpYSXBPd29nSUNBZ1puVnVZM1JwYjI0Z2RYQmtZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhacFpYY2dQU0JqWVcxbGNtRXViV0YwY21sNFYyOXliR1JKYm5abGNuTmxPd29nSUNBZ0lDQWdJR052Ym5OMElIQnliMnBsWTNScGIyNGdQU0JqWVcxbGNtRXVjSEp2YW1WamRHbHZiazFoZEhKcGVEc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCYmQybGtkR2dzSUdobGFXZG9kRjBnUFNCallXMHpaQzV5WlhOdmJIVjBhVzl1TG5aaGJIVmxPd29nSUNBZ0lDQWdJR052Ym5OMElGdDRMQ0I1TENCNlhTQTlJR05oYldWeVlTNXdiM05wZEdsdmJqc0tJQ0FnSUNBZ0lDQmpZVzFsY21FdVlYTndaV04wSUQwZ2QybGtkR2dnTHlCb1pXbG5hSFE3Q2lBZ0lDQWdJQ0FnWTJGdFpYSmhMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUc0tJQ0FnSUNBZ0lDQmpZVzFsY21FdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0tUc0tJQ0FnSUNBZ0lDQnRZV3RwWlY5allXMWxjbUV1ZFhCa1lYUmxYMjFoZEhKcFkyVnpLSFpwWlhjdVpXeGxiV1Z1ZEhNc0lIQnliMnBsWTNScGIyNHVaV3hsYldWdWRITXNJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZEFvZ0lDQWdJQ0FnSUYwc0lGc0tJQ0FnSUNBZ0lDQWdJQ0FnZUN3S0lDQWdJQ0FnSUNBZ0lDQWdlU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Vnb2dJQ0FnSUNBZ0lGMHBPd29nSUNBZ2ZRb2dJQ0FnWTJGdE0yUXVjbVZ6YjJ4MWRHbHZiaTV2YmloMWNHUmhkR1VwT3dvZ0lDQWdablZ1WTNScGIyNGdZV1JrVFc5MWMyVklZVzVrYkdWeUtHUnZiVTlpYW1WamRDd2daSEpoWnl3Z2VtOXZiVWx1TENCNmIyOXRUM1YwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSE4wWVhKMFJISmhaMWdnUFNCdWRXeHNPd29nSUNBZ0lDQWdJR3hsZENCemRHRnlkRVJ5WVdkWklEMGdiblZzYkRzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdGIzVnpaVmRvWldWc1NHRnVaR3hsY2lobEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdVZ1BTQjNhVzVrYjNjdVpYWmxiblFnZkh3Z1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRnBibDl6WTJWdVpTaHpZMlZ1WlN3Z1pTa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCa1pXeDBZU0E5SUUxaGRHZ3VjMmxuYmlobExtUmxiSFJoV1NrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa1pXeDBZU0E5UFNBdE1Ta2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlbTl2YlU5MWRDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHUmxiSFJoSUQwOUlERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHB2YjIxSmJpZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1V1Y0hKbGRtVnVkRVJsWm1GMWJIUW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYlc5MWMyVkViM2R1U0dGdVpHeGxjaWhsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaGFXNWZjMk5sYm1Vb2MyTmxibVVzSUdVcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2MzUmhjblJFY21GbldDQTlJR1V1WTJ4cFpXNTBXRHNLSUNBZ0lDQWdJQ0FnSUNBZ2MzUmhjblJFY21GbldTQTlJR1V1WTJ4cFpXNTBXVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNXdjbVYyWlc1MFJHVm1ZWFZzZENncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnRiM1Z6WlUxdmRtVklZVzVrYkdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZwYmw5elkyVnVaU2h6WTJWdVpTd2daU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MzUmhjblJFY21GbldDQTlQVDBnYm5Wc2JDQjhmQ0J6ZEdGeWRFUnlZV2RaSUQwOVBTQnVkV3hzS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrY21GbktTQmtjbUZuS0dVdVkyeHBaVzUwV0NBdElITjBZWEowUkhKaFoxZ3NJR1V1WTJ4cFpXNTBXU0F0SUhOMFlYSjBSSEpoWjFrcE93b2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWRFUnlZV2RZSUQwZ1pTNWpiR2xsYm5SWU93b2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWRFUnlZV2RaSUQwZ1pTNWpiR2xsYm5SWk93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5CeVpYWmxiblJFWldaaGRXeDBLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUcxdmRYTmxWWEJJWVc1a2JHVnlLR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGcGJsOXpZMlZ1WlNoelkyVnVaU3dnWlNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCdGIzVnpaVTF2ZG1WSVlXNWtiR1Z5TG1OaGJHd29kR2hwY3l3Z1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUhOMFlYSjBSSEpoWjFnZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZEVSeVlXZFpJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCa2IyMVBZbXBsWTNRdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWQyaGxaV3dpTENCdGIzVnpaVmRvWldWc1NHRnVaR3hsY2lrN0NpQWdJQ0FnSUNBZ1pHOXRUMkpxWldOMExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltMXZkWE5sWkc5M2JpSXNJRzF2ZFhObFJHOTNia2hoYm1Sc1pYSXBPd29nSUNBZ0lDQWdJR1J2YlU5aWFtVmpkQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpXMXZkbVVpTENCdGIzVnpaVTF2ZG1WSVlXNWtiR1Z5S1RzS0lDQWdJQ0FnSUNCa2IyMVBZbXBsWTNRdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWJXOTFjMlYxY0NJc0lHMXZkWE5sVlhCSVlXNWtiR1Z5S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHUnlZV2NvWkdWc2RHRllMQ0JrWld4MFlWa3BJSHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnlZV1JRWlhKUWFYaGxiQ0E5SUUxaGRHZ3VVRWtnTHlBME5UQTdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1pHVnNkR0ZRYUdrZ1BTQnlZV1JRWlhKUWFYaGxiQ0FxSUdSbGJIUmhXRHNLSUNBZ0lDQWdJQ0JqYjI1emRDQmtaV3gwWVZSb1pYUmhJRDBnY21Ga1VHVnlVR2w0Wld3Z0tpQmtaV3gwWVZrN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnY0c5eklEMGdZMkZ0WlhKaExuQnZjMmwwYVc5dUxuTjFZaWhqWlc1MFpYSXBPd29nSUNBZ0lDQWdJR052Ym5OMElISmhaR2wxY3lBOUlIQnZjeTVzWlc1bmRHZ29LVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RHaGxkR0VnUFNCTllYUm9MbUZqYjNNb2NHOXpMbm9nTHlCeVlXUnBkWE1wT3dvZ0lDQWdJQ0FnSUd4bGRDQndhR2tnUFNCTllYUm9MbUYwWVc0eUtIQnZjeTU1TENCd2IzTXVlQ2s3Q2lBZ0lDQWdJQ0FnZEdobGRHRWdQU0JOWVhSb0xtMXBiaWhOWVhSb0xtMWhlQ2gwYUdWMFlTQXRJR1JsYkhSaFZHaGxkR0VzSURBcExDQk5ZWFJvTGxCSktUc0tJQ0FnSUNBZ0lDQndhR2tnTFQwZ1pHVnNkR0ZRYUdrN0NpQWdJQ0FnSUNBZ2NHOXpMbmdnUFNCeVlXUnBkWE1nS2lCTllYUm9Mbk5wYmloMGFHVjBZU2tnS2lCTllYUm9MbU52Y3lod2FHa3BPd29nSUNBZ0lDQWdJSEJ2Y3k1NUlEMGdjbUZrYVhWeklDb2dUV0YwYUM1emFXNG9kR2hsZEdFcElDb2dUV0YwYUM1emFXNG9jR2hwS1RzS0lDQWdJQ0FnSUNCd2IzTXVlaUE5SUhKaFpHbDFjeUFxSUUxaGRHZ3VZMjl6S0hSb1pYUmhLVHNLSUNBZ0lDQWdJQ0JqWVcxbGNtRXVjRzl6YVhScGIyNHVZV1JrS0dObGJuUmxjaWs3Q2lBZ0lDQWdJQ0FnWTJGdFpYSmhMbXh2YjJ0QmRDaGpaVzUwWlhJcE93b2dJQ0FnSUNBZ0lIVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlbTl2YlVsdUtDa2dld29nSUNBZ0lDQWdJR05oYldWeVlTNXdiM05wZEdsdmJpNXpkV0lvWTJWdWRHVnlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3dMamtwTG1Ga1pDaGpaVzUwWlhJcE93b2dJQ0FnSUNBZ0lIVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlbTl2YlU5MWRDZ3BJSHNLSUNBZ0lDQWdJQ0JqWVcxbGNtRXVjRzl6YVhScGIyNHVjM1ZpS0dObGJuUmxjaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9NUzR4S1M1aFpHUW9ZMlZ1ZEdWeUtUc0tJQ0FnSUNBZ0lDQjFjR1JoZEdVb0tUc0tJQ0FnSUgwS0lDQWdJR0ZrWkUxdmRYTmxTR0Z1Wkd4bGNpaGpZVzUyWVhNc0lHUnlZV2NzSUhwdmIyMUpiaXdnZW05dmJVOTFkQ2s3Q24wS1puVnVZM1JwYjI0Z2JYVnNLR0VzSUdJcElIc0tJQ0FnSUhKbGRIVnliaUJpTG1Oc2IyNWxLQ2t1YlhWc2RHbHdiSGtvWVNrN0NuMEtablZ1WTNScGIyNGdiM0owYUc5bmNtRndhR2xqY0hKdmFtVmpkR2x2Ymloc1pXWjBMQ0J5YVdkb2RDd2dZbTkwZEc5dExDQjBiM0FzSUhwdVpXRnlMQ0I2Wm1GeUtTQjdDaUFnSUNCeVpYUjFjbTRnV3dvZ0lDQWdJQ0FnSURJZ0x5QW9jbWxuYUhRZ0xTQnNaV1owS1N3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURJZ0x5QW9kRzl3SUMwZ1ltOTBkRzl0S1N3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUMweUlDOGdLSHBtWVhJZ0xTQjZibVZoY2lrc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXRLSEpwWjJoMElDc2diR1ZtZENrZ0x5QW9jbWxuYUhRZ0xTQnNaV1owS1N3S0lDQWdJQ0FnSUNBdEtIUnZjQ0FySUdKdmRIUnZiU2tnTHlBb2RHOXdJQzBnWW05MGRHOXRLU3dLSUNBZ0lDQWdJQ0F0S0hwbVlYSWdLeUI2Ym1WaGNpa2dMeUFvZW1aaGNpQXRJSHB1WldGeUtTd0tJQ0FnSUNBZ0lDQXhDaUFnSUNCZE93cDlDbVoxYm1OMGFXOXVJSEJwZUdWc1gzTndZV05sWDJsdWRtVnljMlVvZHl3Z2FDd2dibVZoY2lrZ2V3b2dJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0F3TGpVZ0tpQjNMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQzQxSUNvZ2FDd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lHNWxZWElzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xqVWdLaUIzTEFvZ0lDQWdJQ0FnSURBdU5TQXFJR2dzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBeENpQWdJQ0JkT3dwOUNtWjFibU4wYVc5dUlISmxiR0YwYVhabFgzTndZV05sS0NrZ2V3b2dJQ0FnWTI5dWMzUWdjbVZzWVhScGRtVWdQU0JKWkdWdWRHbDBlVFI0TkNncE93b2dJQ0FnY21Wc1lYUnBkbVV1Wm5KdmJVRnljbUY1S0ZzS0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREVLSUNBZ0lGMHBPd29nSUNBZ2NtVjBkWEp1SUhKbGJHRjBhWFpsT3dwOUNtTnNZWE56SUUxaGEybGxRMkZ0WlhKaElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdkR2hwY3k1MmFXVjNJRDBnYm1WM0lHZHZLRWxrWlc1MGFYUjVOSGcwS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y0hKdmFtVmpkR2x2YmlBOUlHNWxkeUJuYnloSlpHVnVkR2wwZVRSNE5DZ3BLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnliMnBsWTNScGIyNTJhV1YzSUQwZ2JtVjNJR2R2S0Vsa1pXNTBhWFI1TkhnMEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWNHbDRaV3hmYzNCaFkyVWdQU0J1WlhjZ1oyOG9TV1JsYm5ScGRIazBlRFFvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3YVhobGJGOXpjR0ZqWlY5cGJuWmxjbk5sSUQwZ2JtVjNJR2R2S0Vsa1pXNTBhWFI1TkhnMEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWNISnZhbVZqZEdsdmJuWnBaWGRmYVc1MlpYSnpaU0E5SUc1bGR5Qm5ieWhKWkdWdWRHbDBlVFI0TkNncEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJHRjBhWFpsWDNOd1lXTmxJRDBnYm1WM0lHZHZLSEpsYkdGMGFYWmxYM053WVdObEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWNtVnNZWFJwZG1WZmFXNTJaWEp6WlNBOUlHNWxkeUJuYnloeVpXeGhkR2wyWlY5emNHRmpaU2dwTG1sdWRtVnlkQ2dwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbU5zYVhCZmMzQmhZMlVnUFNCdVpYY2daMjhvU1dSbGJuUnBkSGswZURRb0tTazdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZiSFYwYVc5dUlEMGdibVYzSUdkdktHNWxkeUJZS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11WlhsbGNHOXphWFJwYjI0Z1BTQnVaWGNnWjI4b2JtVjNJRTBvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3Y21Wd2NtOXFaV04wYVc5dWN5QTlJSHQ5T3dvZ0lDQWdmUW9nSUNBZ1kyRnNZM1ZzWVhSbFgyMWhkSEpwWTJWektDa2dld29nSUNBZ0lDQWdJR052Ym5OMElGdDNMQ0JvWFNBOUlIUm9hWE11Y21WemIyeDFkR2x2Ymk1MllXeDFaVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnVaV0Z5WTJ4cGNDQTlJQzB4TUY4d01EQTdDaUFnSUNBZ0lDQWdkR2hwY3k1d2FYaGxiRjl6Y0dGalpTNTJZV3gxWlM1bWNtOXRRWEp5WVhrb2IzSjBhRzluY21Gd2FHbGpjSEp2YW1WamRHbHZiaWd3TENCM0xDQXdMQ0JvTENCdVpXRnlZMnhwY0N3Z01UQmZNREF3S1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3YVhobGJGOXpjR0ZqWlY5cGJuWmxjbk5sTG5aaGJIVmxMbVp5YjIxQmNuSmhlU2h3YVhobGJGOXpjR0ZqWlY5cGJuWmxjbk5sS0hjc0lHZ3NJRzVsWVhKamJHbHdLU2s3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdjSEp2YWw5MmFXVjNJRDBnYlhWc0tIUm9hWE11ZG1sbGR5NTJZV3gxWlN3Z2RHaHBjeTV3Y205cVpXTjBhVzl1TG5aaGJIVmxLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnliMnBsWTNScGIyNTJhV1YzTG5aaGJIVmxJRDBnY0hKdmFsOTJhV1YzT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjSEp2YW1WamRHbHZiblpwWlhkZmFXNTJaWEp6WlM1MllXeDFaU0E5SUhCeWIycGZkbWxsZHk1amJHOXVaU2dwTG1sdWRtVnlkQ2dwT3dvZ0lDQWdJQ0FnSUU5aWFtVmpkQzVyWlhsektIUm9hWE11Y0hKbGNISnZhbVZqZEdsdmJuTXBMbVp2Y2tWaFkyZ29LR3RsZVNrOVBuc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdXM053WVdObExDQnRZWEpyWlhKemNHRmpaVjBnUFNCclpYa3VjM0JzYVhRb0lpd2lLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3Y21Wd2NtOXFaV04wYVc5dWMxdHJaWGxkTG5aaGJIVmxJRDBnZEdocGN5NWpZV3hqZFd4aGRHVmZjSEpsY0hKdmFtVmpkR2x2Ymw5dFlYUnlhWGdvYzNCaFkyVXNJRzFoY210bGNuTndZV05sS1RzS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpWOXRZWFJ5YVdObGN5aDJhV1YzTENCd2NtOXFaV04wYVc5dUxDQnlaWE52YkhWMGFXOXVMQ0JsZVdWd2IzTXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuWnBaWGN1ZG1Gc2RXVXVabkp2YlVGeWNtRjVLSFpwWlhjcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y0hKdmFtVmpkR2x2Ymk1MllXeDFaUzVtY205dFFYSnlZWGtvY0hKdmFtVmpkR2x2YmlrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmJIVjBhVzl1TG5aaGJIVmxMbVp5YjIxQmNuSmhlU2h5WlhOdmJIVjBhVzl1S1RzS0lDQWdJQ0FnSUNCMGFHbHpMbVY1WlhCdmMybDBhVzl1TG5aaGJIVmxMbVp5YjIxQmNuSmhlU2hsZVdWd2IzTXBPd29nSUNBZ0lDQWdJSFJvYVhNdVkyRnNZM1ZzWVhSbFgyMWhkSEpwWTJWektDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnZlFvZ0lDQWdZMnhwY0Y5MGIxOXpjR0ZqWlNoemNHRmpaU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaHpjR0ZqWlNBOVBUMGdJbVJoZEdFaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQnliMnBsWTNScGIyNTJhV1YzWDJsdWRtVnljMlV1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h6Y0dGalpTQTlQVDBnSW5CcGVHVnNJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3YVhobGJGOXpjR0ZqWlY5cGJuWmxjbk5sTG5aaGJIVmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYzNCaFkyVWdQVDA5SUNKeVpXeGhkR2wyWlNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtVnNZWFJwZG1WZmFXNTJaWEp6WlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hOd1lXTmxJRDA5UFNBaVkyeHBjQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJ4cGNGOXpjR0ZqWlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvWUZOd1lXTmxJQ1I3YzNCaFkyVjlJRzV2ZENCeVpXTnZaMjVwZW1Wa1lDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnYzNCaFkyVmZkRzlmWTJ4cGNDaHpjR0ZqWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2h6Y0dGalpTQTlQVDBnSW1SaGRHRWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJ5YjJwbFkzUnBiMjUyYVdWM0xuWmhiSFZsT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2MzQmhZMlVnUFQwOUlDSndhWGhsYkNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHbDRaV3hmYzNCaFkyVXVkbUZzZFdVN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHpjR0ZqWlNBOVBUMGdJbkpsYkdGMGFYWmxJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5Wld4aGRHbDJaVjl6Y0dGalpTNTJZV3gxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tITndZV05sSUQwOVBTQWlZMnhwY0NJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyeHBjRjl6Y0dGalpTNTJZV3gxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb1lGTndZV05sSUNSN2MzQmhZMlY5SUc1dmRDQnlaV052WjI1cGVtVmtZQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1kyRnNZM1ZzWVhSbFgzQnlaWEJ5YjJwbFkzUnBiMjVmYldGMGNtbDRLSE53WVdObExDQnRZWEpyWlhKemNHRmpaU2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR053SUQwZ2RHaHBjeTVqYkdsd1gzUnZYM053WVdObEtHMWhjbXRsY25Od1lXTmxLVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnpZeUE5SUhSb2FYTXVjM0JoWTJWZmRHOWZZMnhwY0NoemNHRmpaU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzExYkNoell5d2dZM0FwT3dvZ0lDQWdmUW9nSUNBZ2NISmxjSEp2YW1WamRHbHZibDl0WVhSeWFYZ29jM0JoWTJVc0lHMWhjbXRsY25Od1lXTmxLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdhMlY1SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0J6Y0dGalpTd0tJQ0FnSUNBZ0lDQWdJQ0FnYldGeWEyVnljM0JoWTJVS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHTnZibk4wSUcxaGRISnBlRjkxYm1sbWIzSnRJRDBnZEdocGN5NXdjbVZ3Y205cVpXTjBhVzl1YzF0clpYbGRPd29nSUNBZ0lDQWdJR2xtSUNodFlYUnlhWGhmZFc1cFptOXliU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JXRjBjbWw0WDNWdWFXWnZjbTA3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYldGMGNtbDRJRDBnZEdocGN5NWpZV3hqZFd4aGRHVmZjSEpsY0hKdmFtVmpkR2x2Ymw5dFlYUnlhWGdvYzNCaFkyVXNJRzFoY210bGNuTndZV05sS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RXNXBabTl5YlNBOUlHNWxkeUJuYnlodFlYUnlhWGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CeVpYQnliMnBsWTNScGIyNXpXMnRsZVYwZ1BTQjFibWxtYjNKdE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkVzVwWm05eWJUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMEtZMjl1YzNRZ2MyTmxibVZmWTJGamFHVWdQU0I3ZlRzS1kyOXVjM1FnY0d4dmRGOWpZV05vWlNBOUlIdDlPd3BqYjI1emRDQlVSVmhVVlZKRlgwRlVURUZUSUQwZ1d3b2dJQ0FnZFc1a1pXWnBibVZrQ2wwN0NtWjFibU4wYVc5dUlHRmtaRjl6WTJWdVpTaHpZMlZ1WlY5cFpDd2dkR2h5WldWZmMyTmxibVVwSUhzS0lDQWdJSE5qWlc1bFgyTmhZMmhsVzNOalpXNWxYMmxrWFNBOUlIUm9jbVZsWDNOalpXNWxPd3A5Q21aMWJtTjBhVzl1SUdacGJtUmZjMk5sYm1Vb2MyTmxibVZmYVdRcElIc0tJQ0FnSUhKbGRIVnliaUJ6WTJWdVpWOWpZV05vWlZ0elkyVnVaVjlwWkYwN0NuMEtablZ1WTNScGIyNGdaR1ZzWlhSbFgzTmpaVzVsS0hOalpXNWxYMmxrS1NCN0NpQWdJQ0JqYjI1emRDQnpZMlZ1WlNBOUlITmpaVzVsWDJOaFkyaGxXM05qWlc1bFgybGtYVHNLSUNBZ0lHbG1JQ2doYzJObGJtVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNCOUNpQWdJQ0IzYUdsc1pTaHpZMlZ1WlM1amFHbHNaSEpsYmk1c1pXNW5kR2dnUGlBd0tYc0tJQ0FnSUNBZ0lDQnpZMlZ1WlM1eVpXMXZkbVVvYzJObGJtVXVZMmhwYkdSeVpXNWJNRjBwT3dvZ0lDQWdmUW9nSUNBZ1pHVnNaWFJsSUhOalpXNWxYMk5oWTJobFczTmpaVzVsWDJsa1hUc0tmUXBtZFc1amRHbHZiaUJtYVc1a1gzQnNiM1J6S0hCc2IzUmZkWFZwWkhNcElIc0tJQ0FnSUdOdmJuTjBJSEJzYjNSeklEMGdXMTA3Q2lBZ0lDQndiRzkwWDNWMWFXUnpMbVp2Y2tWaFkyZ29LR2xrS1QwK2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhCc2IzUWdQU0J3Ykc5MFgyTmhZMmhsVzJsa1hUc0tJQ0FnSUNBZ0lDQnBaaUFvY0d4dmRDa2dld29nSUNBZ0lDQWdJQ0FnSUNCd2JHOTBjeTV3ZFhOb0tIQnNiM1FwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBwT3dvZ0lDQWdjbVYwZFhKdUlIQnNiM1J6T3dwOUNtWjFibU4wYVc5dUlHUmxiR1YwWlY5elkyVnVaWE1vYzJObGJtVmZkWFZwWkhNc0lIQnNiM1JmZFhWcFpITXBJSHNLSUNBZ0lIQnNiM1JmZFhWcFpITXVabTl5UldGamFDZ29jR3h2ZEY5cFpDazlQbnNLSUNBZ0lDQWdJQ0JrWld4bGRHVWdjR3h2ZEY5allXTm9aVnR3Ykc5MFgybGtYVHNLSUNBZ0lIMHBPd29nSUNBZ2MyTmxibVZmZFhWcFpITXVabTl5UldGamFDZ29jMk5sYm1WZmFXUXBQVDU3Q2lBZ0lDQWdJQ0FnWkdWc1pYUmxYM05qWlc1bEtITmpaVzVsWDJsa0tUc0tJQ0FnSUgwcE93cDlDbVoxYm1OMGFXOXVJR2x1YzJWeWRGOXdiRzkwS0hOalpXNWxYMmxrTENCd2JHOTBYMlJoZEdFcElIc0tJQ0FnSUdOdmJuTjBJSE5qWlc1bElEMGdabWx1WkY5elkyVnVaU2h6WTJWdVpWOXBaQ2s3Q2lBZ0lDQndiRzkwWDJSaGRHRXVabTl5UldGamFDZ29jR3h2ZENrOVBuc0tJQ0FnSUNBZ0lDQmhaR1JmY0d4dmRDaHpZMlZ1WlN3Z2NHeHZkQ2s3Q2lBZ0lDQjlLVHNLZlFwbWRXNWpkR2x2YmlCa1pXeGxkR1ZmY0d4dmRITW9jMk5sYm1WZmFXUXNJSEJzYjNSZmRYVnBaSE1wSUhzS0lDQWdJR052Ym5OdmJHVXViRzluS0dCa1pXeGxkR2x1WnlCd2JHOTBjeUU2SUNSN2NHeHZkRjkxZFdsa2MzMWdLVHNLSUNBZ0lHTnZibk4wSUhOalpXNWxJRDBnWm1sdVpGOXpZMlZ1WlNoelkyVnVaVjlwWkNrN0NpQWdJQ0JqYjI1emRDQndiRzkwY3lBOUlHWnBibVJmY0d4dmRITW9jR3h2ZEY5MWRXbGtjeWs3Q2lBZ0lDQndiRzkwY3k1bWIzSkZZV05vS0Nod0tUMCtld29nSUNBZ0lDQWdJSE5qWlc1bExuSmxiVzkyWlNod0tUc0tJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2NHeHZkRjlqWVdOb1pWdHdYVHNLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdOdmJuWmxjblJmZEdWNGRIVnlaU2hrWVhSaEtTQjdDaUFnSUNCamIyNXpkQ0IwWlhnZ1BTQmpjbVZoZEdWZmRHVjRkSFZ5WlNoa1lYUmhLVHNLSUNBZ0lIUmxlQzV1WldWa2MxVndaR0YwWlNBOUlIUnlkV1U3Q2lBZ0lDQjBaWGd1YldsdVJtbHNkR1Z5SUQwZ2JXOWtXMlJoZEdFdWJXbHVSbWxzZEdWeVhUc0tJQ0FnSUhSbGVDNXRZV2RHYVd4MFpYSWdQU0J0YjJSYlpHRjBZUzV0WVdkR2FXeDBaWEpkT3dvZ0lDQWdkR1Y0TG1GdWFYTnZkSEp2Y0hrZ1BTQmtZWFJoTG1GdWFYTnZkSEp2Y0hrN0NpQWdJQ0IwWlhndWQzSmhjRk1nUFNCdGIyUmJaR0YwWVM1M2NtRndVMTA3Q2lBZ0lDQnBaaUFvWkdGMFlTNXphWHBsTG14bGJtZDBhQ0ErSURFcElIc0tJQ0FnSUNBZ0lDQjBaWGd1ZDNKaGNGUWdQU0J0YjJSYlpHRjBZUzUzY21Gd1ZGMDdDaUFnSUNCOUNpQWdJQ0JwWmlBb1pHRjBZUzV6YVhwbExteGxibWQwYUNBK0lESXBJSHNLSUNBZ0lDQWdJQ0IwWlhndWQzSmhjRklnUFNCdGIyUmJaR0YwWVM1M2NtRndVbDA3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZEdWNE93cDlDbVoxYm1OMGFXOXVJR2x6WDNSb2NtVmxYMlpwZUdWa1gyRnljbUY1S0haaGJIVmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2RtRnNkV1VnYVc1emRHRnVZMlZ2WmlCdGIyUXVWbVZqZEc5eU1pQjhmQ0IyWVd4MVpTQnBibk4wWVc1alpXOW1JRzF2WkM1V1pXTjBiM0l6SUh4OElIWmhiSFZsSUdsdWMzUmhibU5sYjJZZ2JXOWtMbFpsWTNSdmNqUWdmSHdnZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJ0YjJRdVRXRjBjbWw0TkRzS2ZRcG1kVzVqZEdsdmJpQjBiMTkxYm1sbWIzSnRLR1JoZEdFcElIc0tJQ0FnSUdsbUlDaGtZWFJoTG5SNWNHVWdJVDA5SUhWdVpHVm1hVzVsWkNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hrWVhSaExuUjVjR1VnUFQwZ0lsTmhiWEJzWlhJaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1MlpYSjBYM1JsZUhSMWNtVW9aR0YwWVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2loZ1ZIbHdaU0FrZTJSaGRHRXVkSGx3WlgwZ2JtOTBJR3R1YjNkdVlDazdDaUFnSUNCOUNpQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hrWVhSaEtTQjhmQ0JCY25KaGVVSjFabVpsY2k1cGMxWnBaWGNvWkdGMFlTa3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb0lXUmhkR0V1WlhabGNua29LSGdwUFQ1MGVYQmxiMllnZUNBOVBUMGdJbTUxYldKbGNpSXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCa1lYUmhPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1pHRjBZUzVzWlc1bmRHZ2dQVDBnTWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUcxdlpDNVdaV04wYjNJeUtDa3Vabkp2YlVGeWNtRjVLR1JoZEdFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWkdGMFlTNXNaVzVuZEdnZ1BUMGdNeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRzF2WkM1V1pXTjBiM0l6S0NrdVpuSnZiVUZ5Y21GNUtHUmhkR0VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aR0YwWVM1c1pXNW5kR2dnUFQwZ05Da2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHMXZaQzVXWldOMGIzSTBLQ2t1Wm5KdmJVRnljbUY1S0dSaGRHRXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1pHRjBZUzVzWlc1bmRHZ2dQVDBnTVRZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdiV0YwSUQwZ2JtVjNJRzF2WkM1TllYUnlhWGcwS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEM1bWNtOXRRWEp5WVhrb1pHRjBZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdFlYUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJR1JoZEdFN0NuMEtablZ1WTNScGIyNGdaR1Z6WlhKcFlXeHBlbVZmZFc1cFptOXliWE1vWkdGMFlTa2dld29nSUNBZ1kyOXVjM1FnY21WemRXeDBJRDBnZTMwN0NpQWdJQ0JtYjNJb1kyOXVjM1FnYm1GdFpTQnBiaUJrWVhSaEtYc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMllXeDFaU0E5SUdSaGRHRmJibUZ0WlYwN0NpQWdJQ0FnSUNBZ2FXWWdLSFpoYkhWbElHbHVjM1JoYm1ObGIyWWdiVzlrTGxWdWFXWnZjbTBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6ZFd4MFcyNWhiV1ZkSUQwZ2RtRnNkV1U3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYzJWeUlEMGdkRzlmZFc1cFptOXliU2gyWVd4MVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGMzVnNkRnR1WVcxbFhTQTlJRzVsZHlCdGIyUXVWVzVwWm05eWJTaHpaWElwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCeVpYTjFiSFE3Q24wS1puVnVZM1JwYjI0Z1pHVnpaWEpwWVd4cGVtVmZjR3h2ZENoa1lYUmhLU0I3Q2lBZ0lDQnNaWFFnYldWemFEc0tJQ0FnSUdsbUlDZ2lhVzV6ZEdGdVkyVmZZWFIwY21saWRYUmxjeUlnYVc0Z1pHRjBZU2tnZXdvZ0lDQWdJQ0FnSUcxbGMyZ2dQU0JqY21WaGRHVmZhVzV6ZEdGdVkyVmtYMjFsYzJnb1pHRjBZU2s3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHMWxjMmdnUFNCamNtVmhkR1ZmYldWemFDaGtZWFJoS1RzS0lDQWdJSDBLSUNBZ0lHMWxjMmd1Ym1GdFpTQTlJR1JoZEdFdWJtRnRaVHNLSUNBZ0lHMWxjMmd1Wm5KMWMzUjFiVU4xYkd4bFpDQTlJR1poYkhObE93b2dJQ0FnYldWemFDNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdabUZzYzJVN0NpQWdJQ0J0WlhOb0xuQnNiM1JmZFhWcFpDQTlJR1JoZEdFdWRYVnBaRHNLSUNBZ0lHTnZibk4wSUhWd1pHRjBaVjkyYVhOcFlteGxJRDBnS0hZcFBUNTdDaUFnSUNBZ0lDQWdiV1Z6YUM1MmFYTnBZbXhsSUQwZ2Rqc0tJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0I5T3dvZ0lDQWdkWEJrWVhSbFgzWnBjMmxpYkdVb1pHRjBZUzUyYVhOcFlteGxMblpoYkhWbEtUc0tJQ0FnSUdSaGRHRXVkbWx6YVdKc1pTNXZiaWgxY0dSaGRHVmZkbWx6YVdKc1pTazdDaUFnSUNCamIyNXVaV04wWDNWdWFXWnZjbTF6S0cxbGMyZ3NJR1JoZEdFdWRXNXBabTl5YlY5MWNHUmhkR1Z5S1RzS0lDQWdJR052Ym01bFkzUmZZWFIwY21saWRYUmxjeWh0WlhOb0xDQmtZWFJoTG1GMGRISnBZblYwWlY5MWNHUmhkR1Z5S1RzS0lDQWdJSEpsZEhWeWJpQnRaWE5vT3dwOUNtTnZibk4wSUU5T1gwNUZXRlJmU1U1VFJWSlVJRDBnYm1WM0lGTmxkQ2dwT3dwbWRXNWpkR2x2YmlCdmJsOXVaWGgwWDJsdWMyVnlkQ2htS1NCN0NpQWdJQ0JQVGw5T1JWaFVYMGxPVTBWU1ZDNWhaR1FvWmlrN0NuMEtablZ1WTNScGIyNGdZV1JrWDNCc2IzUW9jMk5sYm1Vc0lIQnNiM1JmWkdGMFlTa2dld29nSUNBZ1kyOXVjM1FnWTJGdElEMGdjMk5sYm1VdWQyZHNYMk5oYldWeVlUc0tJQ0FnSUdOdmJuTjBJR2xrWlc1MGFYUjVJRDBnYm1WM0lHMXZaQzVWYm1sbWIzSnRLRzVsZHlCdGIyUXVUV0YwY21sNE5DZ3BLVHNLSUNBZ0lHbG1JQ2h3Ykc5MFgyUmhkR0V1WTJGdFgzTndZV05sSUQwOUlDSmtZWFJoSWlrZ2V3b2dJQ0FnSUNBZ0lIQnNiM1JmWkdGMFlTNTFibWxtYjNKdGN5NTJhV1YzSUQwZ1kyRnRMblpwWlhjN0NpQWdJQ0FnSUNBZ2NHeHZkRjlrWVhSaExuVnVhV1p2Y20xekxuQnliMnBsWTNScGIyNGdQU0JqWVcwdWNISnZhbVZqZEdsdmJqc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEp2YW1WamRHbHZiblpwWlhjZ1BTQmpZVzB1Y0hKdmFtVmpkR2x2Ym5acFpYYzdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMbVY1WlhCdmMybDBhVzl1SUQwZ1kyRnRMbVY1WlhCdmMybDBhVzl1T3dvZ0lDQWdmU0JsYkhObElHbG1JQ2h3Ykc5MFgyUmhkR0V1WTJGdFgzTndZV05sSUQwOUlDSndhWGhsYkNJcElIc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVkbWxsZHlBOUlHbGtaVzUwYVhSNU93b2dJQ0FnSUNBZ0lIQnNiM1JmWkdGMFlTNTFibWxtYjNKdGN5NXdjbTlxWldOMGFXOXVJRDBnWTJGdExuQnBlR1ZzWDNOd1lXTmxPd29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTV3Y205cVpXTjBhVzl1ZG1sbGR5QTlJR05oYlM1d2FYaGxiRjl6Y0dGalpUc0tJQ0FnSUgwZ1pXeHpaU0JwWmlBb2NHeHZkRjlrWVhSaExtTmhiVjl6Y0dGalpTQTlQU0FpY21Wc1lYUnBkbVVpS1NCN0NpQWdJQ0FnSUNBZ2NHeHZkRjlrWVhSaExuVnVhV1p2Y20xekxuWnBaWGNnUFNCcFpHVnVkR2wwZVRzS0lDQWdJQ0FnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdWNISnZhbVZqZEdsdmJpQTlJR05oYlM1eVpXeGhkR2wyWlY5emNHRmpaVHNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11Y0hKdmFtVmpkR2x2Ym5acFpYY2dQU0JqWVcwdWNtVnNZWFJwZG1WZmMzQmhZMlU3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lIQnNiM1JmWkdGMFlTNTFibWxtYjNKdGN5NTJhV1YzSUQwZ2FXUmxiblJwZEhrN0NpQWdJQ0FnSUNBZ2NHeHZkRjlrWVhSaExuVnVhV1p2Y20xekxuQnliMnBsWTNScGIyNGdQU0JwWkdWdWRHbDBlVHNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11Y0hKdmFtVmpkR2x2Ym5acFpYY2dQU0JwWkdWdWRHbDBlVHNLSUNBZ0lIMEtJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1eVpYTnZiSFYwYVc5dUlEMGdZMkZ0TG5KbGMyOXNkWFJwYjI0N0NpQWdJQ0JwWmlBb2NHeHZkRjlrWVhSaExuVnVhV1p2Y20xekxuQnlaWEJ5YjJwbFkzUnBiMjRwSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0I3SUhOd1lXTmxJQ3dnYldGeWEyVnljM0JoWTJVZ0lIMGdQU0J3Ykc5MFgyUmhkR0U3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5CeVpYQnliMnBsWTNScGIyNGdQU0JqWVcwdWNISmxjSEp2YW1WamRHbHZibDl0WVhSeWFYZ29jM0JoWTJVdWRtRnNkV1VzSUcxaGNtdGxjbk53WVdObExuWmhiSFZsS1RzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhBZ1BTQmtaWE5sY21saGJHbDZaVjl3Ykc5MEtIQnNiM1JmWkdGMFlTazdDaUFnSUNCd2JHOTBYMk5oWTJobFczQnNiM1JmWkdGMFlTNTFkV2xrWFNBOUlIQTdDaUFnSUNCelkyVnVaUzVoWkdRb2NDazdDaUFnSUNCamIyNXpkQ0J1WlhoMFgybHVjMlZ5ZENBOUlHNWxkeUJUWlhRb1QwNWZUa1ZZVkY5SlRsTkZVbFFwT3dvZ0lDQWdibVY0ZEY5cGJuTmxjblF1Wm05eVJXRmphQ2dvWmlrOVBtWW9LU2s3Q24wS1puVnVZM1JwYjI0Z1kyOXVibVZqZEY5MWJtbG1iM0p0Y3lodFpYTm9MQ0IxY0dSaGRHVnlLU0I3Q2lBZ0lDQjFjR1JoZEdWeUxtOXVLQ2hiYm1GdFpTd2daR0YwWVYwcFBUNTdDaUFnSUNBZ0lDQWdhV1lnS0c1aGJXVWdQVDA5SUNKdWIyNWxJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHTnZibk4wSUhWdWFXWnZjbTBnUFNCdFpYTm9MbTFoZEdWeWFXRnNMblZ1YVdadmNtMXpXMjVoYldWZE93b2dJQ0FnSUNBZ0lHbG1JQ2gxYm1sbWIzSnRMblpoYkhWbExtbHpWR1Y0ZEhWeVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JwYlY5a1lYUmhJRDBnZFc1cFptOXliUzUyWVd4MVpTNXBiV0ZuWlRzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1czTnBlbVVzSUhSbGVGOWtZWFJoWFNBOUlHUmhkR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwWlhoZlpHRjBZUzVzWlc1bmRHZ2dQVDBnYVcxZlpHRjBZUzVrWVhSaExteGxibWQwYUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXMWZaR0YwWVM1a1lYUmhMbk5sZENoMFpYaGZaR0YwWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdmJHUmZkR1Y0ZEhWeVpTQTlJSFZ1YVdadmNtMHVkbUZzZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0TG5aaGJIVmxJRDBnY21WZlkzSmxZWFJsWDNSbGVIUjFjbVVvYjJ4a1gzUmxlSFIxY21Vc0lIUmxlRjlrWVhSaExDQnphWHBsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5c1pGOTBaWGgwZFhKbExtUnBjM0J2YzJVb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjFibWxtYjNKdExuWmhiSFZsTG01bFpXUnpWWEJrWVhSbElEMGdkSEoxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVhOZmRHaHlaV1ZmWm1sNFpXUmZZWEp5WVhrb2RXNXBabTl5YlM1MllXeDFaU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhWdWFXWnZjbTB1ZG1Gc2RXVXVabkp2YlVGeWNtRjVLR1JoZEdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkVzVwWm05eWJTNTJZV3gxWlNBOUlHUmhkR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJqY21WaGRHVmZkR1Y0ZEhWeVpTaGtZWFJoS1NCN0NpQWdJQ0JqYjI1emRDQmlkV1ptWlhJZ1BTQmtZWFJoTG1SaGRHRTdDaUFnSUNCcFppQW9aR0YwWVM1emFYcGxMbXhsYm1kMGFDQTlQU0F6S1NCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnZEdWNElEMGdibVYzSUcxdlpDNUVZWFJoVkdWNGRIVnlaVE5FS0dKMVptWmxjaXdnWkdGMFlTNXphWHBsV3pCZExDQmtZWFJoTG5OcGVtVmJNVjBzSUdSaGRHRXVjMmw2WlZzeVhTazdDaUFnSUNBZ0lDQWdkR1Y0TG1admNtMWhkQ0E5SUcxdlpGdGtZWFJoTG5Sb2NtVmxYMlp2Y20xaGRGMDdDaUFnSUNBZ0lDQWdkR1Y0TG5SNWNHVWdQU0J0YjJSYlpHRjBZUzUwYUhKbFpWOTBlWEJsWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdWNE93b2dJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JqYjI1emRDQjBaWGhmWkdGMFlTQTlJR0oxWm1abGNpQTlQU0FpZEdWNGRIVnlaVjloZEd4aGN5SWdQeUJVUlZoVVZWSkZYMEZVVEVGVFd6QmRMblpoYkhWbElEb2dZblZtWm1WeU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2diVzlrTGtSaGRHRlVaWGgwZFhKbEtIUmxlRjlrWVhSaExDQmtZWFJoTG5OcGVtVmJNRjBzSUdSaGRHRXVjMmw2WlZzeFhTd2diVzlrVzJSaGRHRXVkR2h5WldWZlptOXliV0YwWFN3Z2JXOWtXMlJoZEdFdWRHaHlaV1ZmZEhsd1pWMHBPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJSEpsWDJOeVpXRjBaVjkwWlhoMGRYSmxLRzlzWkY5MFpYaDBkWEpsTENCaWRXWm1aWElzSUhOcGVtVXBJSHNLSUNBZ0lHbG1JQ2h6YVhwbExteGxibWQwYUNBOVBTQXpLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdkR1Y0SUQwZ2JtVjNJRzF2WkM1RVlYUmhWR1Y0ZEhWeVpUTkVLR0oxWm1abGNpd2djMmw2WlZzd1hTd2djMmw2WlZzeFhTd2djMmw2WlZzeVhTazdDaUFnSUNBZ0lDQWdkR1Y0TG1admNtMWhkQ0E5SUc5c1pGOTBaWGgwZFhKbExtWnZjbTFoZERzS0lDQWdJQ0FnSUNCMFpYZ3VkSGx3WlNBOUlHOXNaRjkwWlhoMGRYSmxMblI1Y0dVN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSbGVEc0tJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCdGIyUXVSR0YwWVZSbGVIUjFjbVVvWW5WbVptVnlMQ0J6YVhwbFd6QmRMQ0J6YVhwbFd6RmRJRDhnYzJsNlpWc3hYU0E2SURFc0lHOXNaRjkwWlhoMGRYSmxMbVp2Y20xaGRDd2diMnhrWDNSbGVIUjFjbVV1ZEhsd1pTazdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdRblZtWm1WeVFYUjBjbWxpZFhSbEtHSjFabVpsY2lrZ2V3b2dJQ0FnWTI5dWMzUWdhbk5pZFdabUlEMGdibVYzSUcxdlpDNUNkV1ptWlhKQmRIUnlhV0oxZEdVb1luVm1abVZ5TG1ac1lYUXNJR0oxWm1abGNpNTBlWEJsWDJ4bGJtZDBhQ2s3Q2lBZ0lDQnFjMkoxWm1ZdWMyVjBWWE5oWjJVb2JXOWtMa1I1Ym1GdGFXTkVjbUYzVlhOaFoyVXBPd29nSUNBZ2NtVjBkWEp1SUdwelluVm1aanNLZlFwbWRXNWpkR2x2YmlCSmJuTjBZVzVqWlVKMVptWmxja0YwZEhKcFluVjBaU2hpZFdabVpYSXBJSHNLSUNBZ0lHTnZibk4wSUdwelluVm1aaUE5SUc1bGR5QnRiMlF1U1c1emRHRnVZMlZrUW5WbVptVnlRWFIwY21saWRYUmxLR0oxWm1abGNpNW1iR0YwTENCaWRXWm1aWEl1ZEhsd1pWOXNaVzVuZEdncE93b2dJQ0FnYW5OaWRXWm1Mbk5sZEZWellXZGxLRzF2WkM1RWVXNWhiV2xqUkhKaGQxVnpZV2RsS1RzS0lDQWdJSEpsZEhWeWJpQnFjMkoxWm1ZN0NuMEtablZ1WTNScGIyNGdZWFIwWVdOb1gyZGxiMjFsZEhKNUtHSjFabVpsY2w5blpXOXRaWFJ5ZVN3Z2RtVnlkR1Y0WVhKeVlYbHpMQ0JtWVdObGN5a2dld29nSUNBZ1ptOXlLR052Ym5OMElHNWhiV1VnYVc0Z2RtVnlkR1Y0WVhKeVlYbHpLWHNLSUNBZ0lDQWdJQ0JqYjI1emRDQmlkV1ptSUQwZ2RtVnlkR1Y0WVhKeVlYbHpXMjVoYldWZE93b2dJQ0FnSUNBZ0lHeGxkQ0JpZFdabVpYSTdDaUFnSUNBZ0lDQWdhV1lnS0dKMVptWXVkRzlmZFhCa1lYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2lBOUlHNWxkeUJ0YjJRdVFuVm1abVZ5UVhSMGNtbGlkWFJsS0dKMVptWXVkRzlmZFhCa1lYUmxMQ0JpZFdabUxtbDBaVzFUYVhwbEtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSWdQU0JDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZblZtWmlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHSjFabVpsY2w5blpXOXRaWFJ5ZVM1elpYUkJkSFJ5YVdKMWRHVW9ibUZ0WlN3Z1luVm1abVZ5S1RzS0lDQWdJSDBLSUNBZ0lHSjFabVpsY2w5blpXOXRaWFJ5ZVM1elpYUkpibVJsZUNobVlXTmxjeWs3Q2lBZ0lDQmlkV1ptWlhKZloyVnZiV1YwY25rdVltOTFibVJwYm1kVGNHaGxjbVVnUFNCdVpYY2diVzlrTGxOd2FHVnlaU2dwT3dvZ0lDQWdZblZtWm1WeVgyZGxiMjFsZEhKNUxtSnZkVzVrYVc1blUzQm9aWEpsTG5KaFpHbDFjeUE5SURFd01EQXdNREF3TURBd01EQXdPd29nSUNBZ1luVm1abVZ5WDJkbGIyMWxkSEo1TG1aeWRYTjBkVzFEZFd4c1pXUWdQU0JtWVd4elpUc0tJQ0FnSUhKbGRIVnliaUJpZFdabVpYSmZaMlZ2YldWMGNuazdDbjBLWm5WdVkzUnBiMjRnWVhSMFlXTm9YMmx1YzNSaGJtTmxaRjluWlc5dFpYUnllU2hpZFdabVpYSmZaMlZ2YldWMGNua3NJR2x1YzNSaGJtTmxYMkYwZEhKcFluVjBaWE1wSUhzS0lDQWdJR1p2Y2loamIyNXpkQ0J1WVcxbElHbHVJR2x1YzNSaGJtTmxYMkYwZEhKcFluVjBaWE1wZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR0oxWm1abGNpQTlJRWx1YzNSaGJtTmxRblZtWm1WeVFYUjBjbWxpZFhSbEtHbHVjM1JoYm1ObFgyRjBkSEpwWW5WMFpYTmJibUZ0WlYwcE93b2dJQ0FnSUNBZ0lHSjFabVpsY2w5blpXOXRaWFJ5ZVM1elpYUkJkSFJ5YVdKMWRHVW9ibUZ0WlN3Z1luVm1abVZ5S1RzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCeVpXTnlaV0YwWlY5blpXOXRaWFJ5ZVNodFpYTm9MQ0IyWlhKMFpYaGhjbkpoZVhNc0lHWmhZMlZ6S1NCN0NpQWdJQ0JqYjI1emRDQmlkV1ptWlhKZloyVnZiV1YwY25rZ1BTQnVaWGNnYlc5a0xrSjFabVpsY2tkbGIyMWxkSEo1S0NrN0NpQWdJQ0JoZEhSaFkyaGZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQjJaWEowWlhoaGNuSmhlWE1zSUdaaFkyVnpLVHNLSUNBZ0lHMWxjMmd1WjJWdmJXVjBjbmt1WkdsemNHOXpaU2dwT3dvZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVNBOUlHSjFabVpsY2w5blpXOXRaWFJ5ZVRzS0lDQWdJRzFsYzJndWJtVmxaSE5WY0dSaGRHVWdQU0IwY25WbE93cDlDbVoxYm1OMGFXOXVJSEpsWTNKbFlYUmxYMmx1YzNSaGJtTmxaRjluWlc5dFpYUnllU2h0WlhOb0tTQjdDaUFnSUNCamIyNXpkQ0JpZFdabVpYSmZaMlZ2YldWMGNua2dQU0J1WlhjZ2JXOWtMa2x1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUtDazdDaUFnSUNCamIyNXpkQ0IyWlhKMFpYaGhjbkpoZVhNZ1BTQjdmVHNLSUNBZ0lHTnZibk4wSUdsdWMzUmhibU5sWDJGMGRISnBZblYwWlhNZ1BTQjdmVHNLSUNBZ0lHTnZibk4wSUdaaFkyVnpJRDBnV3dvZ0lDQWdJQ0FnSUM0dUxtMWxjMmd1WjJWdmJXVjBjbmt1YVc1a1pYZ3VZWEp5WVhrS0lDQWdJRjA3Q2lBZ0lDQlBZbXBsWTNRdWEyVjVjeWh0WlhOb0xtZGxiMjFsZEhKNUxtRjBkSEpwWW5WMFpYTXBMbVp2Y2tWaFkyZ29LRzVoYldVcFBUNTdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1luVm1abVZ5SUQwZ2JXVnphQzVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6VzI1aGJXVmRPd29nSUNBZ0lDQWdJR052Ym5OMElHTnZjSGtnUFNCaWRXWm1aWEl1ZEc5ZmRYQmtZWFJsSUQ4Z1luVm1abVZ5TG5SdlgzVndaR0YwWlNBNklHSjFabVpsY2k1aGNuSmhlUzV0WVhBb0tIZ3BQVDU0S1RzS0lDQWdJQ0FnSUNCcFppQW9ZblZtWm1WeUxtbHpTVzV6ZEdGdVkyVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsdWMzUmhibU5sWDJGMGRISnBZblYwWlhOYmJtRnRaVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWJHRjBPaUJqYjNCNUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVjlzWlc1bmRHZzZJR0oxWm1abGNpNXBkR1Z0VTJsNlpRb2dJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJsZUdGeWNtRjVjMXR1WVcxbFhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pzWVhRNklHTnZjSGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbFgyeGxibWQwYURvZ1luVm1abVZ5TG1sMFpXMVRhWHBsQ2lBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTazdDaUFnSUNCaGRIUmhZMmhmWjJWdmJXVjBjbmtvWW5WbVptVnlYMmRsYjIxbGRISjVMQ0IyWlhKMFpYaGhjbkpoZVhNc0lHWmhZMlZ6S1RzS0lDQWdJR0YwZEdGamFGOXBibk4wWVc1alpXUmZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQnBibk4wWVc1alpWOWhkSFJ5YVdKMWRHVnpLVHNLSUNBZ0lHMWxjMmd1WjJWdmJXVjBjbmt1WkdsemNHOXpaU2dwT3dvZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVNBOUlHSjFabVpsY2w5blpXOXRaWFJ5ZVRzS0lDQWdJRzFsYzJndWJtVmxaSE5WY0dSaGRHVWdQU0IwY25WbE93cDlDbVoxYm1OMGFXOXVJR055WldGMFpWOXRZWFJsY21saGJDaHdjbTluY21GdEtTQjdDaUFnSUNCamIyNXpkQ0JwYzE5MmIyeDFiV1VnUFNBaWRtOXNkVzFsWkdGMFlTSWdhVzRnY0hKdlozSmhiUzUxYm1sbWIzSnRjenNLSUNBZ0lISmxkSFZ5YmlCdVpYY2diVzlrTGxKaGQxTm9ZV1JsY2sxaGRHVnlhV0ZzS0hzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ1pHVnpaWEpwWVd4cGVtVmZkVzVwWm05eWJYTW9jSEp2WjNKaGJTNTFibWxtYjNKdGN5a3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCd2NtOW5jbUZ0TG5abGNuUmxlRjl6YjNWeVkyVXNDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklIQnliMmR5WVcwdVpuSmhaMjFsYm5SZmMyOTFjbU5sTEFvZ0lDQWdJQ0FnSUhOcFpHVTZJR2x6WDNadmJIVnRaU0EvSUcxdlpDNUNZV05yVTJsa1pTQTZJRzF2WkM1RWIzVmliR1ZUYVdSbExBb2dJQ0FnSUNBZ0lIUnlZVzV6Y0dGeVpXNTBPaUIwY25WbExBb2dJQ0FnSUNBZ0lHUmxjSFJvVkdWemREb2dJWEJ5YjJkeVlXMHViM1psY21SeVlYY3VkbUZzZFdVc0NpQWdJQ0FnSUNBZ1pHVndkR2hYY21sMFpUb2dJWEJ5YjJkeVlXMHVkSEpoYm5Od1lYSmxibU41TG5aaGJIVmxDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJqY21WaGRHVmZiV1Z6YUNod2NtOW5jbUZ0S1NCN0NpQWdJQ0JqYjI1emRDQmlkV1ptWlhKZloyVnZiV1YwY25rZ1BTQnVaWGNnYlc5a0xrSjFabVpsY2tkbGIyMWxkSEo1S0NrN0NpQWdJQ0JqYjI1emRDQm1ZV05sY3lBOUlHNWxkeUJ0YjJRdVFuVm1abVZ5UVhSMGNtbGlkWFJsS0hCeWIyZHlZVzB1Wm1GalpYTXVkbUZzZFdVc0lERXBPd29nSUNBZ1lYUjBZV05vWDJkbGIyMWxkSEo1S0dKMVptWmxjbDluWlc5dFpYUnllU3dnY0hKdlozSmhiUzUyWlhKMFpYaGhjbkpoZVhNc0lHWmhZMlZ6S1RzS0lDQWdJR052Ym5OMElHMWhkR1Z5YVdGc0lEMGdZM0psWVhSbFgyMWhkR1Z5YVdGc0tIQnliMmR5WVcwcE93b2dJQ0FnWTI5dWMzUWdiV1Z6YUNBOUlHNWxkeUJ0YjJRdVRXVnphQ2hpZFdabVpYSmZaMlZ2YldWMGNua3NJRzFoZEdWeWFXRnNLVHNLSUNBZ0lIQnliMmR5WVcwdVptRmpaWE11YjI0b0tIZ3BQVDU3Q2lBZ0lDQWdJQ0FnYldWemFDNW5aVzl0WlhSeWVTNXpaWFJKYm1SbGVDaHVaWGNnYlc5a0xrSjFabVpsY2tGMGRISnBZblYwWlNoNExDQXhLU2s3Q2lBZ0lDQjlLVHNLSUNBZ0lISmxkSFZ5YmlCdFpYTm9Pd3A5Q21aMWJtTjBhVzl1SUdOeVpXRjBaVjlwYm5OMFlXNWpaV1JmYldWemFDaHdjbTluY21GdEtTQjdDaUFnSUNCamIyNXpkQ0JpZFdabVpYSmZaMlZ2YldWMGNua2dQU0J1WlhjZ2JXOWtMa2x1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUtDazdDaUFnSUNCamIyNXpkQ0JtWVdObGN5QTlJRzVsZHlCdGIyUXVRblZtWm1WeVFYUjBjbWxpZFhSbEtIQnliMmR5WVcwdVptRmpaWE11ZG1Gc2RXVXNJREVwT3dvZ0lDQWdZWFIwWVdOb1gyZGxiMjFsZEhKNUtHSjFabVpsY2w5blpXOXRaWFJ5ZVN3Z2NISnZaM0poYlM1MlpYSjBaWGhoY25KaGVYTXNJR1poWTJWektUc0tJQ0FnSUdGMGRHRmphRjlwYm5OMFlXNWpaV1JmWjJWdmJXVjBjbmtvWW5WbVptVnlYMmRsYjIxbGRISjVMQ0J3Y205bmNtRnRMbWx1YzNSaGJtTmxYMkYwZEhKcFluVjBaWE1wT3dvZ0lDQWdZMjl1YzNRZ2JXRjBaWEpwWVd3Z1BTQmpjbVZoZEdWZmJXRjBaWEpwWVd3b2NISnZaM0poYlNrN0NpQWdJQ0JqYjI1emRDQnRaWE5vSUQwZ2JtVjNJRzF2WkM1TlpYTm9LR0oxWm1abGNsOW5aVzl0WlhSeWVTd2diV0YwWlhKcFlXd3BPd29nSUNBZ2NISnZaM0poYlM1bVlXTmxjeTV2Ymlnb2VDazlQbnNLSUNBZ0lDQWdJQ0J0WlhOb0xtZGxiMjFsZEhKNUxuTmxkRWx1WkdWNEtHNWxkeUJ0YjJRdVFuVm1abVZ5UVhSMGNtbGlkWFJsS0hnc0lERXBLVHNLSUNBZ0lIMHBPd29nSUNBZ2NtVjBkWEp1SUcxbGMyZzdDbjBLWm5WdVkzUnBiMjRnWm1seWMzUW9lQ2tnZXdvZ0lDQWdjbVYwZFhKdUlIaGJUMkpxWldOMExtdGxlWE1vZUNsYk1GMWRPd3A5Q21aMWJtTjBhVzl1SUdOdmJtNWxZM1JmWVhSMGNtbGlkWFJsY3lodFpYTm9MQ0IxY0dSaGRHVnlLU0I3Q2lBZ0lDQmpiMjV6ZENCcGJuTjBZVzVqWlY5aWRXWm1aWEp6SUQwZ2UzMDdDaUFnSUNCamIyNXpkQ0JuWlc5dFpYUnllVjlpZFdabVpYSnpJRDBnZTMwN0NpQWdJQ0JzWlhRZ1ptbHljM1JmYVc1emRHRnVZMlZmWW5WbVptVnlPd29nSUNBZ1kyOXVjM1FnY21WaGJGOXBibk4wWVc1alpWOXNaVzVuZEdnZ1BTQmJDaUFnSUNBZ0lDQWdNQW9nSUNBZ1hUc0tJQ0FnSUd4bGRDQm1hWEp6ZEY5blpXOXRaWFJ5ZVY5aWRXWm1aWEk3Q2lBZ0lDQmpiMjV6ZENCeVpXRnNYMmRsYjIxbGRISjVYMnhsYm1kMGFDQTlJRnNLSUNBZ0lDQWdJQ0F3Q2lBZ0lDQmRPd29nSUNBZ1puVnVZM1JwYjI0Z2NtVmZZWE56YVdkdVgySjFabVpsY25Nb0tTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1lYUjBjbWxpZFhSbGN5QTlJRzFsYzJndVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQlBZbXBsWTNRdWEyVjVjeWhoZEhSeWFXSjFkR1Z6S1M1bWIzSkZZV05vS0NodVlXMWxLVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCaWRXWm1aWElnUFNCaGRIUnlhV0oxZEdWelcyNWhiV1ZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWW5WbVptVnlMbWx6U1c1emRHRnVZMlZrUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm5OMFlXNWpaVjlpZFdabVpYSnpXMjVoYldWZElEMGdZblZtWm1WeU93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlZ2YldWMGNubGZZblZtWm1WeWMxdHVZVzFsWFNBOUlHSjFabVpsY2pzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUdacGNuTjBYMmx1YzNSaGJtTmxYMkoxWm1abGNpQTlJR1pwY25OMEtHbHVjM1JoYm1ObFgySjFabVpsY25NcE93b2dJQ0FnSUNBZ0lHbG1JQ2htYVhKemRGOXBibk4wWVc1alpWOWlkV1ptWlhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WaGJGOXBibk4wWVc1alpWOXNaVzVuZEdoYk1GMGdQU0JtYVhKemRGOXBibk4wWVc1alpWOWlkV1ptWlhJdVkyOTFiblE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdacGNuTjBYMmRsYjIxbGRISjVYMkoxWm1abGNpQTlJR1pwY25OMEtHZGxiMjFsZEhKNVgySjFabVpsY25NcE93b2dJQ0FnSUNBZ0lISmxZV3hmWjJWdmJXVjBjbmxmYkdWdVozUm9XekJkSUQwZ1ptbHljM1JmWjJWdmJXVjBjbmxmWW5WbVptVnlMbU52ZFc1ME93b2dJQ0FnZlFvZ0lDQWdjbVZmWVhOemFXZHVYMkoxWm1abGNuTW9LVHNLSUNBZ0lIVndaR0YwWlhJdWIyNG9LRnR1WVcxbExDQnVaWGRmZG1Gc2RXVnpMQ0JzWlc1bmRHaGRLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR0oxWm1abGNpQTlJRzFsYzJndVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGMxdHVZVzFsWFRzS0lDQWdJQ0FnSUNCc1pYUWdZblZtWm1WeWN6c0tJQ0FnSUNBZ0lDQnNaWFFnY21WaGJGOXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ2JHVjBJR2x6WDJsdWMzUmhibU5sSUQwZ1ptRnNjMlU3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNWhiV1VnYVc0Z2FXNXpkR0Z1WTJWZlluVm1abVZ5Y3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSnpJRDBnYVc1emRHRnVZMlZmWW5WbVptVnljenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptbHljM1JmYVc1emRHRnVZMlZmWW5WbVptVnlPd29nSUNBZ0lDQWdJQ0FnSUNCeVpXRnNYMnhsYm1kMGFDQTlJSEpsWVd4ZmFXNXpkR0Z1WTJWZmJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBjMTlwYm5OMFlXNWpaU0E5SUhSeWRXVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5WbVptVnljeUE5SUdkbGIyMWxkSEo1WDJKMVptWmxjbk03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnBjbk4wWDJkbGIyMWxkSEo1WDJKMVptWmxjanNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVmhiRjlzWlc1bmRHZ2dQU0J5WldGc1gyZGxiMjFsZEhKNVgyeGxibWQwYURzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR3hsYm1kMGFDQThQU0J5WldGc1gyeGxibWQwYUZzd1hTa2dld29nSUNBZ0lDQWdJQ0FnSUNCaWRXWm1aWEl1YzJWMEtHNWxkMTkyWVd4MVpYTXBPd29nSUNBZ0lDQWdJQ0FnSUNCaWRXWm1aWEl1Ym1WbFpITlZjR1JoZEdVZ1BTQjBjblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVhOZmFXNXpkR0Z1WTJVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWxjMmd1WjJWdmJXVjBjbmt1YVc1emRHRnVZMlZEYjNWdWRDQTlJR3hsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2k1MGIxOTFjR1JoZEdVZ1BTQnVaWGRmZG1Gc2RXVnpPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JoYkd4ZmFHRjJaVjl6WVcxbFgyeGxibWQwYUNBOUlFOWlhbVZqZEM1MllXeDFaWE1vWW5WbVptVnljeWt1WlhabGNua29LSGdwUFQ1NExuUnZYM1Z3WkdGMFpTQW1KaUI0TG5SdlgzVndaR0YwWlM1c1pXNW5kR2dnTHlCNExtbDBaVzFUYVhwbElEMDlJR3hsYm1kMGFDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhiR3hmYUdGMlpWOXpZVzFsWDJ4bGJtZDBhQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbHpYMmx1YzNSaGJtTmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVmpjbVZoZEdWZmFXNXpkR0Z1WTJWa1gyZGxiMjFsZEhKNUtHMWxjMmdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxYMkZ6YzJsbmJsOWlkV1ptWlhKektDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldWemFDNW5aVzl0WlhSeWVTNXBibk4wWVc1alpVTnZkVzUwSUQwZ2JtVjNYM1poYkhWbGN5NXNaVzVuZEdnZ0x5QmlkV1ptWlhJdWFYUmxiVk5wZW1VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxZM0psWVhSbFgyZGxiMjFsZEhKNUtHMWxjMmdzSUdKMVptWmxjbk1zSUcxbGMyZ3VaMlZ2YldWMGNua3VhVzVrWlhncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsWDJGemMybG5ibDlpZFdabVpYSnpLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJrWlhObGNtbGhiR2w2WlY5elkyVnVaU2hrWVhSaExDQnpZM0psWlc0cElIc0tJQ0FnSUdOdmJuTjBJSE5qWlc1bElEMGdibVYzSUcxdlpDNVRZMlZ1WlNncE93b2dJQ0FnYzJObGJtVXVjMk55WldWdUlEMGdjMk55WldWdU93b2dJQ0FnWTI5dWMzUWdleUJqWVc1MllYTWdJSDBnUFNCelkzSmxaVzQ3Q2lBZ0lDQmhaR1JmYzJObGJtVW9aR0YwWVM1MWRXbGtMQ0J6WTJWdVpTazdDaUFnSUNCelkyVnVaUzV6WTJWdVpWOTFkV2xrSUQwZ1pHRjBZUzUxZFdsa093b2dJQ0FnYzJObGJtVXVabkoxYzNSMWJVTjFiR3hsWkNBOUlHWmhiSE5sT3dvZ0lDQWdjMk5sYm1VdWNHbDRaV3hoY21WaElEMGdaR0YwWVM1d2FYaGxiR0Z5WldFN0NpQWdJQ0J6WTJWdVpTNWlZV05yWjNKdmRXNWtZMjlzYjNJZ1BTQmtZWFJoTG1KaFkydG5jbTkxYm1SamIyeHZjanNLSUNBZ0lITmpaVzVsTG1Oc1pXRnljMk5sYm1VZ1BTQmtZWFJoTG1Oc1pXRnljMk5sYm1VN0NpQWdJQ0J6WTJWdVpTNTJhWE5wWW14bElEMGdaR0YwWVM1MmFYTnBZbXhsT3dvZ0lDQWdZMjl1YzNRZ1kyRnRaWEpoSUQwZ2JtVjNJRTFoYTJsbFEyRnRaWEpoS0NrN0NpQWdJQ0J6WTJWdVpTNTNaMnhmWTJGdFpYSmhJRDBnWTJGdFpYSmhPd29nSUNBZ1puVnVZM1JwYjI0Z2RYQmtZWFJsWDJOaGJTaGpZVzFsY21GZmJXRjBjbWxqWlhNcElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCYmRtbGxkeXdnY0hKdmFtVmpkR2x2Yml3Z2NtVnpiMngxZEdsdmJpd2daWGxsY0c5elhTQTlJR05oYldWeVlWOXRZWFJ5YVdObGN6c0tJQ0FnSUNBZ0lDQmpZVzFsY21FdWRYQmtZWFJsWDIxaGRISnBZMlZ6S0hacFpYY3NJSEJ5YjJwbFkzUnBiMjRzSUhKbGMyOXNkWFJwYjI0c0lHVjVaWEJ2Y3lrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWZlkyRnRLR1JoZEdFdVkyRnRaWEpoTG5aaGJIVmxLVHNLSUNBZ0lHbG1JQ2hrWVhSaExtTmhiVE5rWDNOMFlYUmxLU0I3Q2lBZ0lDQWdJQ0FnWVhSMFlXTm9Yek5rWDJOaGJXVnlZU2hqWVc1MllYTXNJR05oYldWeVlTd2daR0YwWVM1allXMHpaRjl6ZEdGMFpTd2djMk5sYm1VcE93b2dJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JrWVhSaExtTmhiV1Z5WVM1dmJpaDFjR1JoZEdWZlkyRnRLVHNLSUNBZ0lIMEtJQ0FnSUdSaGRHRXVjR3h2ZEhNdVptOXlSV0ZqYUNnb2NHeHZkRjlrWVhSaEtUMCtld29nSUNBZ0lDQWdJR0ZrWkY5d2JHOTBLSE5qWlc1bExDQndiRzkwWDJSaGRHRXBPd29nSUNBZ2ZTazdDaUFnSUNCelkyVnVaUzV6WTJWdVpWOWphR2xzWkhKbGJpQTlJR1JoZEdFdVkyaHBiR1J5Wlc0dWJXRndLQ2hqYUdsc1pDazlQbVJsYzJWeWFXRnNhWHBsWDNOalpXNWxLR05vYVd4a0xDQnpZM0psWlc0cEtUc0tJQ0FnSUhKbGRIVnliaUJ6WTJWdVpUc0tmUXBtZFc1amRHbHZiaUJrWld4bGRHVmZjR3h2ZENod2JHOTBLU0I3Q2lBZ0lDQmtaV3hsZEdVZ2NHeHZkRjlqWVdOb1pWdHdiRzkwTG5Cc2IzUmZkWFZwWkYwN0NpQWdJQ0JqYjI1emRDQjdJSEJoY21WdWRDQWdmU0E5SUhCc2IzUTdDaUFnSUNCcFppQW9jR0Z5Wlc1MEtTQjdDaUFnSUNBZ0lDQWdjR0Z5Wlc1MExuSmxiVzkyWlNod2JHOTBLVHNLSUNBZ0lIMEtJQ0FnSUhCc2IzUXVaMlZ2YldWMGNua3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2NHeHZkQzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q24wS1puVnVZM1JwYjI0Z1pHVnNaWFJsWDNSb2NtVmxYM05qWlc1bEtITmpaVzVsS1NCN0NpQWdJQ0JrWld4bGRHVWdjMk5sYm1WZlkyRmphR1ZiYzJObGJtVXVjMk5sYm1WZmRYVnBaRjA3Q2lBZ0lDQnpZMlZ1WlM1elkyVnVaVjlqYUdsc1pISmxiaTVtYjNKRllXTm9LR1JsYkdWMFpWOTBhSEpsWlY5elkyVnVaU2s3Q2lBZ0lDQjNhR2xzWlNoelkyVnVaUzVqYUdsc1pISmxiaTVzWlc1bmRHZ2dQaUF3S1hzS0lDQWdJQ0FnSUNCa1pXeGxkR1ZmY0d4dmRDaHpZMlZ1WlM1amFHbHNaSEpsYmxzd1hTazdDaUFnSUNCOUNuMEtkMmx1Wkc5M0xsUklVa1ZGSUQwZ2JXOWtPd3BqYjI1emRDQndhWGhsYkZKaGRHbHZNU0E5SUhkcGJtUnZkeTVrWlhacFkyVlFhWGhsYkZKaGRHbHZJSHg4SURFdU1Ec0tablZ1WTNScGIyNGdjbVZ1WkdWeVgzTmpaVzVsS0hOalpXNWxMQ0J3YVdOcmFXNW5JRDBnWm1Gc2MyVXBJSHNLSUNBZ0lHTnZibk4wSUhzZ1kyRnRaWEpoSUN3Z2NtVnVaR1Z5WlhJZ0lIMGdQU0J6WTJWdVpTNXpZM0psWlc0N0NpQWdJQ0JqYjI1emRDQmpZVzUyWVhNZ1BTQnlaVzVrWlhKbGNpNWtiMjFGYkdWdFpXNTBPd29nSUNBZ2FXWWdLQ0ZrYjJOMWJXVnVkQzVpYjJSNUxtTnZiblJoYVc1ektHTmhiblpoY3lrcElIc0tJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWdpUlZoSlZFbE9SeUJYUjB3aUtUc0tJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNpNXpkR0YwWlM1eVpYTmxkQ2dwT3dvZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG1ScGMzQnZjMlVvS1RzS0lDQWdJQ0FnSUNCa1pXeGxkR1ZmZEdoeVpXVmZjMk5sYm1Vb2MyTmxibVVwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUc0tJQ0FnSUgwS0lDQWdJR2xtSUNnaGMyTmxibVV1ZG1semFXSnNaUzUyWVd4MVpTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBjblZsT3dvZ0lDQWdmUW9nSUNBZ2NtVnVaR1Z5WlhJdVlYVjBiME5zWldGeUlEMGdjMk5sYm1VdVkyeGxZWEp6WTJWdVpTNTJZV3gxWlRzS0lDQWdJR052Ym5OMElHRnlaV0VnUFNCelkyVnVaUzV3YVhobGJHRnlaV0V1ZG1Gc2RXVTdDaUFnSUNCcFppQW9ZWEpsWVNrZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUZ0NExDQjVMQ0IzTENCb1hTQTlJR0Z5WldFdWJXRndLQ2gwS1QwK2RDQXZJSEJwZUdWc1VtRjBhVzh4S1RzS0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2k1elpYUldhV1YzY0c5eWRDaDRMQ0I1TENCM0xDQm9LVHNLSUNBZ0lDQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSVFkybHpjMjl5S0hnc0lIa3NJSGNzSUdncE93b2dJQ0FnSUNBZ0lISmxibVJsY21WeUxuTmxkRk5qYVhOemIzSlVaWE4wS0hSeWRXVXBPd29nSUNBZ0lDQWdJR2xtSUNod2FXTnJhVzVuS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk5sZEVOc1pXRnlRV3h3YUdFb01DazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRFTnNaV0Z5UTI5c2IzSW9ibVYzSUcxdlpDNURiMnh2Y2lnd0tTd2dNQzR3S1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNpNXpaWFJEYkdWaGNrTnZiRzl5S0hOalpXNWxMbUpoWTJ0bmNtOTFibVJqYjJ4dmNpNTJZV3gxWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxibVJsY21WeUxuSmxibVJsY2loelkyVnVaU3dnWTJGdFpYSmhLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJ6WTJWdVpTNXpZMlZ1WlY5amFHbHNaSEpsYmk1bGRtVnllU2dvZUNrOVBuSmxibVJsY2w5elkyVnVaU2g0TENCd2FXTnJhVzVuS1NrN0NuMEtablZ1WTNScGIyNGdjM1JoY25SZmNtVnVaR1Z5Ykc5dmNDaDBhSEpsWlY5elkyVnVaU2tnZXdvZ0lDQWdZMjl1YzNRZ2V5Qm1jSE1nSUgwZ1BTQjBhSEpsWlY5elkyVnVaUzV6WTNKbFpXNDdDaUFnSUNCamIyNXpkQ0IwYVcxbFgzQmxjbDltY21GdFpTQTlJREVnTHlCbWNITWdLaUF4TURBd093b2dJQ0FnYkdWMElHeGhjM1JmZEdsdFpWOXpkR0Z0Y0NBOUlIQmxjbVp2Y20xaGJtTmxMbTV2ZHlncE93b2dJQ0FnWm5WdVkzUnBiMjRnY21WdVpHVnliRzl2Y0NoMGFXMWxjM1JoYlhBcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdsdFpYTjBZVzF3SUMwZ2JHRnpkRjkwYVcxbFgzTjBZVzF3SUQ0Z2RHbHRaVjl3WlhKZlpuSmhiV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1lXeHNYM0psYm1SbGNtVmtJRDBnY21WdVpHVnlYM05qWlc1bEtIUm9jbVZsWDNOalpXNWxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZoYkd4ZmNtVnVaR1Z5WldRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1lYTjBYM1JwYldWZmMzUmhiWEFnUFNCd1pYSm1iM0p0WVc1alpTNXViM2NvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2QybHVaRzkzTG5KbGNYVmxjM1JCYm1sdFlYUnBiMjVHY21GdFpTaHlaVzVrWlhKc2IyOXdLVHNLSUNBZ0lIMEtJQ0FnSUhKbGJtUmxjbDl6WTJWdVpTaDBhSEpsWlY5elkyVnVaU2s3Q2lBZ0lDQnlaVzVrWlhKc2IyOXdLQ2s3Q24wS1puVnVZM1JwYjI0Z2RHaHliM1IwYkdWZlpuVnVZM1JwYjI0b1puVnVZeXdnWkdWc1lYa3BJSHNLSUNBZ0lHeGxkQ0J3Y21WMklEMGdNRHNLSUNBZ0lHeGxkQ0JtZFhSMWNtVmZhV1FnUFNCMWJtUmxabWx1WldRN0NpQWdJQ0JtZFc1amRHbHZiaUJwYm01bGNsOTBhSEp2ZEhSc1pTZ3VMaTVoY21kektTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2JtOTNJRDBnYm1WM0lFUmhkR1VvS1M1blpYUlVhVzFsS0NrN0NpQWdJQ0FnSUNBZ2FXWWdLR1oxZEhWeVpWOXBaQ0FoUFQwZ2RXNWtaV1pwYm1Wa0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlWR2x0Wlc5MWRDaG1kWFIxY21WZmFXUXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWRYUjFjbVZmYVdRZ1BTQjFibVJsWm1sdVpXUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNodWIzY2dMU0J3Y21WMklENGdaR1ZzWVhrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGRpQTlJRzV2ZHpzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWjFibU1vTGk0dVlYSm5jeWs3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1puVjBkWEpsWDJsa0lEMGdjMlYwVkdsdFpXOTFkQ2dvS1QwK2FXNXVaWEpmZEdoeWIzUjBiR1VvTGk0dVlYSm5jeWtzSUc1dmR5QXRJSEJ5WlhZZ0t5QXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnYVc1dVpYSmZkR2h5YjNSMGJHVTdDbjBLWm5WdVkzUnBiMjRnZEdoeVpXVnFjMTl0YjJSMWJHVW9ZMkZ1ZG1GekxDQmpiMjF0TENCM2FXUjBhQ3dnYUdWcFoyaDBMQ0J5WlhOcGVtVmZkRzlmWW05a2VTa2dld29nSUNBZ2JHVjBJR052Ym5SbGVIUWdQU0JqWVc1MllYTXVaMlYwUTI5dWRHVjRkQ2dpZDJWaVoyd3lJaXdnZXdvZ0lDQWdJQ0FnSUhCeVpYTmxjblpsUkhKaGQybHVaMEoxWm1abGNqb2dkSEoxWlFvZ0lDQWdmU2s3Q2lBZ0lDQnBaaUFvSVdOdmJuUmxlSFFwSUhzS0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbGRsWWtkTUlESXVNQ0J1YjNRZ2MzVndjRzl5ZEdWa0lHSjVJR0p5YjNkelpYSXNJR1poYkd4cGJtY2dZbUZqYXlCMGJ5QlhaV0pIVENBeExqQWdLRlp2YkhWdFpTQndiRzkwY3lCM2FXeHNJRzV2ZENCM2IzSnJLU0lwT3dvZ0lDQWdJQ0FnSUdOdmJuUmxlSFFnUFNCallXNTJZWE11WjJWMFEyOXVkR1Y0ZENnaWQyVmlaMndpTENCN0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5WlhObGNuWmxSSEpoZDJsdVowSjFabVpsY2pvZ2RISjFaUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUW9nSUNBZ2FXWWdLQ0ZqYjI1MFpYaDBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ2ZRb2dJQ0FnWTI5dWMzUWdjbVZ1WkdWeVpYSWdQU0J1WlhjZ2JXOWtMbGRsWWtkTVVtVnVaR1Z5WlhJb2V3b2dJQ0FnSUNBZ0lHRnVkR2xoYkdsaGN6b2dkSEoxWlN3S0lDQWdJQ0FnSUNCallXNTJZWE02SUdOaGJuWmhjeXdLSUNBZ0lDQWdJQ0JqYjI1MFpYaDBPaUJqYjI1MFpYaDBMQW9nSUNBZ0lDQWdJSEJ2ZDJWeVVISmxabVZ5Wlc1alpUb2dJbWhwWjJndGNHVnlabTl5YldGdVkyVWlDaUFnSUNCOUtUc0tJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRFTnNaV0Z5UTI5c2IzSW9JaU5tWm1abVptWWlLVHNLSUNBZ0lISmxibVJsY21WeUxuTmxkRkJwZUdWc1VtRjBhVzhvY0dsNFpXeFNZWFJwYnpFcE93b2dJQ0FnY21WdVpHVnlaWEl1YzJWMFUybDZaU2gzYVdSMGFDQXZJSEJwZUdWc1VtRjBhVzh4TENCb1pXbG5hSFFnTHlCd2FYaGxiRkpoZEdsdk1TazdDaUFnSUNCamIyNXpkQ0J0YjNWelpWOWpZV3hzWW1GamF5QTlJQ2g0TENCNUtUMCtZMjl0YlM1dWIzUnBabmtvZXdvZ0lDQWdJQ0FnSUNBZ0lDQnRiM1Z6WlhCdmMybDBhVzl1T2lCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VRb2dJQ0FnSUNBZ0lDQWdJQ0JkQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0JqYjI1emRDQnViM1JwWm5sZmJXOTFjMlZmZEdoeWIzUjBiR1ZrSUQwZ2RHaHliM1IwYkdWZlpuVnVZM1JwYjI0b2JXOTFjMlZmWTJGc2JHSmhZMnNzSURRd0tUc0tJQ0FnSUdaMWJtTjBhVzl1SUcxdmRYTmxiVzkyWlNobGRtVnVkQ2tnZXdvZ0lDQWdJQ0FnSUhaaGNpQnlaV04wSUQwZ1kyRnVkbUZ6TG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BPd29nSUNBZ0lDQWdJSFpoY2lCNElEMGdLR1YyWlc1MExtTnNhV1Z1ZEZnZ0xTQnlaV04wTG14bFpuUXBJQ29nY0dsNFpXeFNZWFJwYnpFN0NpQWdJQ0FnSUNBZ2RtRnlJSGtnUFNBb1pYWmxiblF1WTJ4cFpXNTBXU0F0SUhKbFkzUXVkRzl3S1NBcUlIQnBlR1ZzVW1GMGFXOHhPd29nSUNBZ0lDQWdJRzV2ZEdsbWVWOXRiM1Z6WlY5MGFISnZkSFJzWldRb2VDd2dlU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE93b2dJQ0FnZlFvZ0lDQWdZMkZ1ZG1GekxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltMXZkWE5sYlc5MlpTSXNJRzF2ZFhObGJXOTJaU2s3Q2lBZ0lDQm1kVzVqZEdsdmJpQnRiM1Z6WldSdmQyNG9aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQmpiMjF0TG01dmRHbG1lU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMXZkWE5sWkc5M2Jqb2daWFpsYm5RdVluVjBkRzl1Y3dvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHNLSUNBZ0lIMEtJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpXUnZkMjRpTENCdGIzVnpaV1J2ZDI0cE93b2dJQ0FnWm5WdVkzUnBiMjRnYlc5MWMyVjFjQ2hsZG1WdWRDa2dld29nSUNBZ0lDQWdJR052YlcwdWJtOTBhV1o1S0hzS0lDQWdJQ0FnSUNBZ0lDQWdiVzkxYzJWMWNEb2daWFpsYm5RdVluVjBkRzl1Y3dvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHNLSUNBZ0lIMEtJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpYVndJaXdnYlc5MWMyVjFjQ2s3Q2lBZ0lDQm1kVzVqZEdsdmJpQjNhR1ZsYkNobGRtVnVkQ2tnZXdvZ0lDQWdJQ0FnSUdOdmJXMHVibTkwYVdaNUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnYzJOeWIyeHNPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsZG1WdWRDNWtaV3gwWVZnc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdFpYWmxiblF1WkdWc2RHRlpDaUFnSUNBZ0lDQWdJQ0FnSUYwS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQmxkbVZ1ZEM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUc0tJQ0FnSUgwS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSjNhR1ZsYkNJc0lIZG9aV1ZzS1RzS0lDQWdJR1oxYm1OMGFXOXVJR3RsZVdSdmQyNG9aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQmpiMjF0TG01dmRHbG1lU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHdGxlV1J2ZDI0NklHVjJaVzUwTG1OdlpHVUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN0NpQWdJQ0I5Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWEyVjVaRzkzYmlJc0lHdGxlV1J2ZDI0cE93b2dJQ0FnWm5WdVkzUnBiMjRnYTJWNWRYQW9aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQmpiMjF0TG01dmRHbG1lU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHdGxlWFZ3T2lCbGRtVnVkQzVqYjJSbENpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sT3dvZ0lDQWdmUW9nSUNBZ1kyRnVkbUZ6TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW10bGVYVndJaXdnYTJWNWRYQXBPd29nSUNBZ1puVnVZM1JwYjI0Z1kyOXVkR1Y0ZEcxbGJuVW9aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQmpiMjF0TG01dmRHbG1lU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHdGxlWFZ3T2lBaVpHVnNaWFJsWDJ0bGVYTWlDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE93b2dJQ0FnZlFvZ0lDQWdZMkZ1ZG1GekxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltTnZiblJsZUhSdFpXNTFJaXdnS0dVcFBUNWxMbkJ5WlhabGJuUkVaV1poZFd4MEtDa3BPd29nSUNBZ1kyRnVkbUZ6TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1adlkzVnpiM1YwSWl3Z1kyOXVkR1Y0ZEcxbGJuVXBPd29nSUNBZ1puVnVZM1JwYjI0Z2NtVnphWHBsWDJOaGJHeGlZV05yS0NrZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUdKdlpIbFRkSGxzWlNBOUlIZHBibVJ2ZHk1blpYUkRiMjF3ZFhSbFpGTjBlV3hsS0dSdlkzVnRaVzUwTG1KdlpIa3BPd29nSUNBZ0lDQWdJR052Ym5OMElIZHBaSFJvWDNCaFpHUnBibWNnUFNCd1lYSnpaVWx1ZENoaWIyUjVVM1I1YkdVdWNHRmtaR2x1WjB4bFpuUXNJREV3S1NBcklIQmhjbk5sU1c1MEtHSnZaSGxUZEhsc1pTNXdZV1JrYVc1blVtbG5hSFFzSURFd0tTQXJJSEJoY25ObFNXNTBLR0p2WkhsVGRIbHNaUzV0WVhKbmFXNU1aV1owTENBeE1Da2dLeUJ3WVhKelpVbHVkQ2hpYjJSNVUzUjViR1V1YldGeVoybHVVbWxuYUhRc0lERXdLVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQm9aV2xuYUhSZmNHRmtaR2x1WnlBOUlIQmhjbk5sU1c1MEtHSnZaSGxUZEhsc1pTNXdZV1JrYVc1blZHOXdMQ0F4TUNrZ0t5QndZWEp6WlVsdWRDaGliMlI1VTNSNWJHVXVjR0ZrWkdsdVowSnZkSFJ2YlN3Z01UQXBJQ3NnY0dGeWMyVkpiblFvWW05a2VWTjBlV3hsTG0xaGNtZHBibFJ2Y0N3Z01UQXBJQ3NnY0dGeWMyVkpiblFvWW05a2VWTjBlV3hsTG0xaGNtZHBia0p2ZEhSdmJTd2dNVEFwT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJSGRwWkhSb0lEMGdLSGRwYm1SdmR5NXBibTVsY2xkcFpIUm9JQzBnZDJsa2RHaGZjR0ZrWkdsdVp5a2dLaUJ3YVhobGJGSmhkR2x2TVRzS0lDQWdJQ0FnSUNCamIyNXpkQ0JvWldsbmFIUWdQU0FvZDJsdVpHOTNMbWx1Ym1WeVNHVnBaMmgwSUMwZ2FHVnBaMmgwWDNCaFpHUnBibWNwSUNvZ2NHbDRaV3hTWVhScGJ6RTdDaUFnSUNBZ0lDQWdZMjl0YlM1dWIzUnBabmtvZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWE5wZW1VNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBDaUFnSUNBZ0lDQWdJQ0FnSUYwS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS0lDQWdJR2xtSUNoeVpYTnBlbVZmZEc5ZlltOWtlU2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSEpsYzJsNlpWOWpZV3hzWW1GamExOTBhSEp2ZEhSc1pXUWdQU0IwYUhKdmRIUnNaVjltZFc1amRHbHZiaWh5WlhOcGVtVmZZMkZzYkdKaFkyc3NJREV3TUNrN0NpQWdJQ0FnSUNBZ2QybHVaRzkzTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5KbGMybDZaU0lzSUNobGRtVnVkQ2s5UG5KbGMybDZaVjlqWVd4c1ltRmphMTkwYUhKdmRIUnNaV1FvS1NrN0NpQWdJQ0FnSUNBZ2NtVnphWHBsWDJOaGJHeGlZV05yWDNSb2NtOTBkR3hsWkNncE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlISmxibVJsY21WeU93cDlDbVoxYm1OMGFXOXVJR055WldGMFpWOXpZMlZ1WlNoM2NtRndjR1Z5TENCallXNTJZWE1zSUdOaGJuWmhjMTkzYVdSMGFDd2djMk5sYm1WekxDQmpiMjF0TENCM2FXUjBhQ3dnYUdWcFoyaDBMQ0IwWlhoMGRYSmxYMkYwYkdGelgyOWljeXdnWm5CekxDQnlaWE5wZW1WZmRHOWZZbTlrZVNrZ2V3b2dJQ0FnWTI5dWMzUWdjbVZ1WkdWeVpYSWdQU0IwYUhKbFpXcHpYMjF2WkhWc1pTaGpZVzUyWVhNc0lHTnZiVzBzSUhkcFpIUm9MQ0JvWldsbmFIUXNJSEpsYzJsNlpWOTBiMTlpYjJSNUtUc0tJQ0FnSUZSRldGUlZVa1ZmUVZSTVFWTmJNRjBnUFNCMFpYaDBkWEpsWDJGMGJHRnpYMjlpY3pzS0lDQWdJR2xtSUNoeVpXNWtaWEpsY2lrZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUdOaGJXVnlZU0E5SUc1bGR5QnRiMlF1VUdWeWMzQmxZM1JwZG1WRFlXMWxjbUVvTkRVc0lERXNJREFzSURFd01DazdDaUFnSUNBZ0lDQWdZMkZ0WlhKaExuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJQ0FnSUNCamIyNXpkQ0J6YVhwbElEMGdibVYzSUcxdlpDNVdaV04wYjNJeUtDazdDaUFnSUNBZ0lDQWdjbVZ1WkdWeVpYSXVaMlYwUkhKaGQybHVaMEoxWm1abGNsTnBlbVVvYzJsNlpTazdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2NHbGphMmx1WjE5MFlYSm5aWFFnUFNCdVpYY2diVzlrTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwS0hOcGVtVXVlQ3dnYzJsNlpTNTVLVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnpZM0psWlc0Z1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQndhV05yYVc1blgzUmhjbWRsZEN3S0lDQWdJQ0FnSUNBZ0lDQWdZMkZ0WlhKaExBb2dJQ0FnSUNBZ0lDQWdJQ0JtY0hNc0NpQWdJQ0FnSUNBZ0lDQWdJR05oYm5aaGN3b2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2RHaHlaV1ZmYzJObGJtVWdQU0JrWlhObGNtbGhiR2w2WlY5elkyVnVaU2h6WTJWdVpYTXNJSE5qY21WbGJpazdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvZEdoeVpXVmZjMk5sYm1VcE93b2dJQ0FnSUNBZ0lITjBZWEowWDNKbGJtUmxjbXh2YjNBb2RHaHlaV1ZmYzJObGJtVXBPd29nSUNBZ0lDQWdJR05oYm5aaGMxOTNhV1IwYUM1dmJpZ29kMTlvS1QwK2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQndhWGhsYkZKaGRHbHZJRDBnY21WdVpHVnlaWEl1WjJWMFVHbDRaV3hTWVhScGJ5Z3BPd29nSUNBZ0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2k1elpYUlRhWHBsS0hkZmFGc3dYU0F2SUhCcGVHVnNVbUYwYVc4c0lIZGZhRnN4WFNBdklIQnBlR1ZzVW1GMGFXOHBPd29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCM1lYSnVhVzVuSUQwZ1oyVjBWMlZpUjB4RmNuSnZjazFsYzNOaFoyVW9LVHNLSUNBZ0lDQWdJQ0IzY21Gd2NHVnlMbUZ3Y0dWdVpFTm9hV3hrS0hkaGNtNXBibWNwT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUhObGRGOXdhV05yYVc1blgzVnVhV1p2Y20xektITmpaVzVsTENCc1lYTjBYMmxrTENCd2FXTnJhVzVuTENCd2FXTnJaV1JmY0d4dmRITXNJSEJzYjNSekxDQnBaRjkwYjE5d2JHOTBLU0I3Q2lBZ0lDQnpZMlZ1WlM1amFHbHNaSEpsYmk1bWIzSkZZV05vS0Nod2JHOTBMQ0JwYm1SbGVDazlQbnNLSUNBZ0lDQWdJQ0JqYjI1emRDQjdJRzFoZEdWeWFXRnNJQ0I5SUQwZ2NHeHZkRHNLSUNBZ0lDQWdJQ0JqYjI1emRDQjdJSFZ1YVdadmNtMXpJQ0I5SUQwZ2JXRjBaWEpwWVd3N0NpQWdJQ0FnSUNBZ2FXWWdLSEJwWTJ0cGJtY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RXNXBabTl5YlhNdWIySnFaV04wWDJsa0xuWmhiSFZsSUQwZ2JHRnpkRjlwWkNBcklHbHVaR1Y0T3dvZ0lDQWdJQ0FnSUNBZ0lDQjFibWxtYjNKdGN5NXdhV05yYVc1bkxuWmhiSFZsSUQwZ2RISjFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBaWEpwWVd3dVlteGxibVJwYm1jZ1BTQnRiMlF1VG05Q2JHVnVaR2x1WnpzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjFibWxtYjNKdGN5NXdhV05yYVc1bkxuWmhiSFZsSUQwZ1ptRnNjMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMWhkR1Z5YVdGc0xtSnNaVzVrYVc1bklEMGdiVzlrTGs1dmNtMWhiRUpzWlc1a2FXNW5Pd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JwWkNBOUlIVnVhV1p2Y20xekxtOWlhbVZqZEY5cFpDNTJZV3gxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsa0lHbHVJSEJwWTJ0bFpGOXdiRzkwY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHeHZkSE11Y0hWemFDaGJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0d4dmRDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YVdOclpXUmZjR3h2ZEhOYmFXUmRDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xrWDNSdlgzQnNiM1JiYVdSZElEMGdjR3h2ZERzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd29nSUNBZ2JHVjBJRzVsZUhSZmFXUWdQU0JzWVhOMFgybGtJQ3NnYzJObGJtVXVZMmhwYkdSeVpXNHViR1Z1WjNSb093b2dJQ0FnYzJObGJtVXVjMk5sYm1WZlkyaHBiR1J5Wlc0dVptOXlSV0ZqYUNnb2MyTmxibVVwUFQ1N0NpQWdJQ0FnSUNBZ2JtVjRkRjlwWkNBOUlITmxkRjl3YVdOcmFXNW5YM1Z1YVdadmNtMXpLSE5qWlc1bExDQnVaWGgwWDJsa0xDQndhV05yYVc1bkxDQndhV05yWldSZmNHeHZkSE1zSUhCc2IzUnpMQ0JwWkY5MGIxOXdiRzkwS1RzS0lDQWdJSDBwT3dvZ0lDQWdjbVYwZFhKdUlHNWxlSFJmYVdRN0NuMEtablZ1WTNScGIyNGdjR2xqYTE5dVlYUnBkbVVvYzJObGJtVXNJSGdzSUhrc0lIY3NJR2dwSUhzS0lDQWdJR052Ym5OMElIc2djbVZ1WkdWeVpYSWdMQ0J3YVdOcmFXNW5YM1JoY21kbGRDQWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRGSmxibVJsY2xSaGNtZGxkQ2h3YVdOcmFXNW5YM1JoY21kbGRDazdDaUFnSUNCelpYUmZjR2xqYTJsdVoxOTFibWxtYjNKdGN5aHpZMlZ1WlN3Z01Td2dkSEoxWlNrN0NpQWdJQ0J5Wlc1a1pYSmZjMk5sYm1Vb2MyTmxibVVzSUhSeWRXVXBPd29nSUNBZ2NtVnVaR1Z5WlhJdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0c1MWJHd3BPd29nSUNBZ1kyOXVjM1FnYm1KNWRHVnpJRDBnZHlBcUlHZ2dLaUEwT3dvZ0lDQWdZMjl1YzNRZ2NHbDRaV3hmWW5sMFpYTWdQU0J1WlhjZ1ZXbHVkRGhCY25KaGVTaHVZbmwwWlhNcE93b2dJQ0FnY21WdVpHVnlaWEl1Y21WaFpGSmxibVJsY2xSaGNtZGxkRkJwZUdWc2N5aHdhV05yYVc1blgzUmhjbWRsZEN3Z2VDd2dlU3dnZHl3Z2FDd2djR2w0Wld4ZllubDBaWE1wT3dvZ0lDQWdZMjl1YzNRZ2NHbGphMlZrWDNCc2IzUnpJRDBnZTMwN0NpQWdJQ0JqYjI1emRDQndhV05yWldSZmNHeHZkSE5mWVhKeVlYa2dQU0JiWFRzS0lDQWdJR052Ym5OMElISmxhVzUwWlhKd2NtVjBYM1pwWlhjZ1BTQnVaWGNnUkdGMFlWWnBaWGNvY0dsNFpXeGZZbmwwWlhNdVluVm1abVZ5S1RzS0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBN0lHa2dQQ0J3YVhobGJGOWllWFJsY3k1c1pXNW5kR2dnTHlBME95QnBLeXNwZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR2xrSUQwZ2NtVnBiblJsY25CeVpYUmZkbWxsZHk1blpYUlZhVzUwTVRZb2FTQXFJRFFwT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJR2x1WkdWNElEMGdjbVZwYm5SbGNuQnlaWFJmZG1sbGR5NW5aWFJWYVc1ME1UWW9hU0FxSURRZ0t5QXlLVHNLSUNBZ0lDQWdJQ0J3YVdOclpXUmZjR3h2ZEhOZllYSnlZWGt1Y0hWemFDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVBb2dJQ0FnSUNBZ0lGMHBPd29nSUNBZ0lDQWdJSEJwWTJ0bFpGOXdiRzkwYzF0cFpGMGdQU0JwYm1SbGVEc0tJQ0FnSUgwS0lDQWdJR052Ym5OMElIQnNiM1J6SUQwZ1cxMDdDaUFnSUNCamIyNXpkQ0JwWkY5MGIxOXdiRzkwSUQwZ2UzMDdDaUFnSUNCelpYUmZjR2xqYTJsdVoxOTFibWxtYjNKdGN5aHpZMlZ1WlN3Z01Dd2dabUZzYzJVc0lIQnBZMnRsWkY5d2JHOTBjeXdnY0d4dmRITXNJR2xrWDNSdlgzQnNiM1FwT3dvZ0lDQWdZMjl1YzNRZ2NHbGphMlZrWDNCc2IzUnpYMjFoZEhKcGVDQTlJSEJwWTJ0bFpGOXdiRzkwYzE5aGNuSmhlUzV0WVhBb0tGdHBaQ3dnYVc1a1pYaGRLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSEFnUFNCcFpGOTBiMTl3Ykc5MFcybGtYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJQ0FnSUNCd0lEOGdjQzV3Ykc5MFgzVjFhV1FnT2lCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlQW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQjlLVHNLSUNBZ0lHTnZibk4wSUhCc2IzUmZiV0YwY21sNElEMGdld29nSUNBZ0lDQWdJR1JoZEdFNklIQnBZMnRsWkY5d2JHOTBjMTl0WVhSeWFYZ3NDaUFnSUNBZ0lDQWdjMmw2WlRvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0IzTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9DaUFnSUNBZ0lDQWdYUW9nSUNBZ2ZUc0tJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnY0d4dmRGOXRZWFJ5YVhnc0NpQWdJQ0FnSUNBZ2NHeHZkSE1LSUNBZ0lGMDdDbjBLWm5WdVkzUnBiMjRnY0dsamExOWpiRzl6WlhOMEtITmpaVzVsTENCNGVTd2djbUZ1WjJVcElIc0tJQ0FnSUdOdmJuTjBJSHNnY0dsamEybHVaMTkwWVhKblpYUWdJSDBnUFNCelkyVnVaUzV6WTNKbFpXNDdDaUFnSUNCamIyNXpkQ0I3SUhkcFpIUm9JQ3dnYUdWcFoyaDBJQ0I5SUQwZ2NHbGphMmx1WjE5MFlYSm5aWFE3Q2lBZ0lDQnBaaUFvSVNneExqQWdQRDBnZUhsYk1GMGdQRDBnZDJsa2RHZ2dKaVlnTVM0d0lEdzlJSGg1V3pGZElEdzlJR2hsYVdkb2RDa3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJQ0FnSUNCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNBd0NpQWdJQ0FnSUNBZ1hUc0tJQ0FnSUgwS0lDQWdJR052Ym5OMElIZ3dJRDBnVFdGMGFDNXRZWGdvTVN3Z2VIbGJNRjBnTFNCeVlXNW5aU2s3Q2lBZ0lDQmpiMjV6ZENCNU1DQTlJRTFoZEdndWJXRjRLREVzSUhoNVd6RmRJQzBnY21GdVoyVXBPd29nSUNBZ1kyOXVjM1FnZURFZ1BTQk5ZWFJvTG0xcGJpaDNhV1IwYUN3Z1RXRjBhQzVtYkc5dmNpaDRlVnN3WFNBcklISmhibWRsS1NrN0NpQWdJQ0JqYjI1emRDQjVNU0E5SUUxaGRHZ3ViV2x1S0dobGFXZG9kQ3dnVFdGMGFDNW1iRzl2Y2loNGVWc3hYU0FySUhKaGJtZGxLU2s3Q2lBZ0lDQmpiMjV6ZENCa2VDQTlJSGd4SUMwZ2VEQTdDaUFnSUNCamIyNXpkQ0JrZVNBOUlIa3hJQzBnZVRBN0NpQWdJQ0JqYjI1emRDQmJjR3h2ZEY5a1lYUmhMQ0JmWFNBOUlIQnBZMnRmYm1GMGFYWmxLSE5qWlc1bExDQjRNQ3dnZVRBc0lHUjRMQ0JrZVNrN0NpQWdJQ0JqYjI1emRDQndiRzkwWDIxaGRISnBlQ0E5SUhCc2IzUmZaR0YwWVM1a1lYUmhPd29nSUNBZ2JHVjBJRzFwYmw5a2FYTjBJRDBnY21GdVoyVWdYaUF5T3dvZ0lDQWdiR1YwSUhObGJHVmpkR2x2YmlBOUlGc0tJQ0FnSUNBZ0lDQnVkV3hzTEFvZ0lDQWdJQ0FnSURBS0lDQWdJRjA3Q2lBZ0lDQmpiMjV6ZENCNElEMGdlSGxiTUYwZ0t5QXhJQzBnZURBN0NpQWdJQ0JqYjI1emRDQjVJRDBnZUhsYk1WMGdLeUF4SUMwZ2VUQTdDaUFnSUNCc1pYUWdjR2x1WkdWNElEMGdNRHNLSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREU3SUdrZ1BEMGdaSGc3SUdrckt5bDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnFJRDBnTVRzZ2FpQThQU0JrZURzZ2Fpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWkNBOUlIZ2dMU0JwSUY0Z01pQXJJQ2g1SUMwZ2Fpa2dYaUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCYmNHeHZkRjkxZFdsa0xDQnBibVJsZUYwZ1BTQndiRzkwWDIxaGRISnBlRnR3YVc1a1pYaGRPd29nSUNBZ0lDQWdJQ0FnSUNCd2FXNWtaWGdnUFNCd2FXNWtaWGdnS3lBeE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pDQThJRzFwYmw5a2FYTjBJQ1ltSUhCc2IzUmZkWFZwWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXbHVYMlJwYzNRZ1BTQmtPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlZzWldOMGFXOXVJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnNiM1JmZFhWcFpDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCelpXeGxZM1JwYjI0N0NuMEtablZ1WTNScGIyNGdjR2xqYTE5emIzSjBaV1FvYzJObGJtVXNJSGg1TENCeVlXNW5aU2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QndhV05yYVc1blgzUmhjbWRsZENBZ2ZTQTlJSE5qWlc1bExuTmpjbVZsYmpzS0lDQWdJR052Ym5OMElIc2dkMmxrZEdnZ0xDQm9aV2xuYUhRZ0lIMGdQU0J3YVdOcmFXNW5YM1JoY21kbGREc0tJQ0FnSUdsbUlDZ2hLREV1TUNBOFBTQjRlVnN3WFNBOFBTQjNhV1IwYUNBbUppQXhMakFnUEQwZ2VIbGJNVjBnUEQwZ2FHVnBaMmgwS1NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnWTI5dWMzUWdlREFnUFNCTllYUm9MbTFoZUNneExDQjRlVnN3WFNBdElISmhibWRsS1RzS0lDQWdJR052Ym5OMElIa3dJRDBnVFdGMGFDNXRZWGdvTVN3Z2VIbGJNVjBnTFNCeVlXNW5aU2s3Q2lBZ0lDQmpiMjV6ZENCNE1TQTlJRTFoZEdndWJXbHVLSGRwWkhSb0xDQk5ZWFJvTG1ac2IyOXlLSGg1V3pCZElDc2djbUZ1WjJVcEtUc0tJQ0FnSUdOdmJuTjBJSGt4SUQwZ1RXRjBhQzV0YVc0b2FHVnBaMmgwTENCTllYUm9MbVpzYjI5eUtIaDVXekZkSUNzZ2NtRnVaMlVwS1RzS0lDQWdJR052Ym5OMElHUjRJRDBnZURFZ0xTQjRNRHNLSUNBZ0lHTnZibk4wSUdSNUlEMGdlVEVnTFNCNU1Ec0tJQ0FnSUdOdmJuTjBJRnR3Ykc5MFgyUmhkR0VzSUhObGJHVmpkR1ZrWFNBOUlIQnBZMnRmYm1GMGFYWmxLSE5qWlc1bExDQjRNQ3dnZVRBc0lHUjRMQ0JrZVNrN0NpQWdJQ0JwWmlBb2MyVnNaV04wWldRdWJHVnVaM1JvSUQwOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhCc2IzUmZiV0YwY21sNElEMGdjR3h2ZEY5a1lYUmhMbVJoZEdFN0NpQWdJQ0JqYjI1emRDQmthWE4wWVc1alpYTWdQU0J6Wld4bFkzUmxaQzV0WVhBb0tIZ3BQVDV5WVc1blpTQmVJRElwT3dvZ0lDQWdZMjl1YzNRZ2VDQTlJSGg1V3pCZElDc2dNU0F0SUhnd093b2dJQ0FnWTI5dWMzUWdlU0E5SUhoNVd6RmRJQ3NnTVNBdElIa3dPd29nSUNBZ2JHVjBJSEJwYm1SbGVDQTlJREE3Q2lBZ0lDQm1iM0lvYkdWMElHa2dQU0F4T3lCcElEdzlJR1I0T3lCcEt5c3Bld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhaUE5SURFN0lHb2dQRDBnWkhnN0lHb3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdRZ1BTQjRJQzBnYVNCZUlESWdLeUFvZVNBdElHb3BJRjRnTWpzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1czQnNiM1JmZFhWcFpDd2dhVzVrWlhoZElEMGdjR3h2ZEY5dFlYUnlhWGhiY0dsdVpHVjRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHbHVaR1Y0SUQwZ2NHbHVaR1Y0SUNzZ01Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjR3h2ZEY5cGJtUmxlQ0E5SUhObGJHVmpkR1ZrTG1acGJtUkpibVJsZUNnb2VDazlQbmhiTUYwdWNHeHZkRjkxZFdsa0lEMDlJSEJzYjNSZmRYVnBaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3Ykc5MFgybHVaR1Y0SUQ0OUlEQWdKaVlnWkNBOElHUnBjM1JoYm1ObGMxdHdiRzkwWDJsdVpHVjRYU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlZ6VzNCc2IzUmZhVzVrWlhoZElEMGdaRHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR052Ym5OMElITnZjblJsWkY5cGJtUnBZMlZ6SUQwZ1FYSnlZWGt1Wm5KdmJTaEJjbkpoZVNoa2FYTjBZVzVqWlhNdWJHVnVaM1JvS1M1clpYbHpLQ2twTG5OdmNuUW9LR0VzSUdJcFBUNWthWE4wWVc1alpYTmJZVjBnUENCa2FYTjBZVzVqWlhOYllsMGdQeUF0TVNBNklHUnBjM1JoYm1ObGMxdGlYU0E4SUdScGMzUmhibU5sYzF0aFhTQjhJREFwT3dvZ0lDQWdjbVYwZFhKdUlITnZjblJsWkY5cGJtUnBZMlZ6TG0xaGNDZ29hV1I0S1QwK2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUZ0d2JHOTBMQ0JwYm1SbGVGMGdQU0J6Wld4bFkzUmxaRnRwWkhoZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ0lDQWdJSEJzYjNRdWNHeHZkRjkxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVBb2dJQ0FnSUNBZ0lGMDdDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJ3YVdOclgyNWhkR2wyWlY5MWRXbGtLSE5qWlc1bExDQjRMQ0I1TENCM0xDQm9LU0I3Q2lBZ0lDQmpiMjV6ZENCYlh5d2djR2xqYTJWa1gzQnNiM1J6WFNBOUlIQnBZMnRmYm1GMGFYWmxLSE5qWlc1bExDQjRMQ0I1TENCM0xDQm9LVHNLSUNBZ0lISmxkSFZ5YmlCd2FXTnJaV1JmY0d4dmRITXViV0Z3S0NoYmNDd2dhVzVrWlhoZEtUMCtXd29nSUNBZ0lDQWdJQ0FnSUNCd0xuQnNiM1JmZFhWcFpDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZ0tJQ0FnSUNBZ0lDQmRLVHNLZlFwbWRXNWpkR2x2YmlCd2FXTnJYMjVoZEdsMlpWOXRZWFJ5YVhnb2MyTmxibVVzSUhnc0lIa3NJSGNzSUdncElIc0tJQ0FnSUdOdmJuTjBJRnR0WVhSeWFYZ3NJRjlkSUQwZ2NHbGphMTl1WVhScGRtVW9jMk5sYm1Vc0lIZ3NJSGtzSUhjc0lHZ3BPd29nSUNBZ2NtVjBkWEp1SUcxaGRISnBlRHNLZlFwbWRXNWpkR2x2YmlCeVpXZHBjM1JsY2w5d2IzQjFjQ2h3YjNCMWNDd2djMk5sYm1Vc0lIQnNiM1J6WDNSdlgzQnBZMnNzSUdOaGJHeGlZV05yS1NCN0NpQWdJQ0JwWmlBb0lYTmpaVzVsSUh4OElDRnpZMlZ1WlM1elkzSmxaVzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQjlDaUFnSUNCamIyNXpkQ0I3SUdOaGJuWmhjeUFnZlNBOUlITmpaVzVsTG5OamNtVmxianNLSUNBZ0lHTmhiblpoY3k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKdGIzVnpaV1J2ZDI0aUxDQW9aWFpsYm5RcFBUNTdDaUFnSUNBZ0lDQWdhV1lnS0NGd2IzQjFjQzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vSW5Ob2IzY2lLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQndiM0IxY0M1amJHRnpjMHhwYzNRdVlXUmtLQ0p6YUc5M0lpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEJ2Y0hWd0xuTjBlV3hsTG14bFpuUWdQU0JsZG1WdWRDNXdZV2RsV0NBcklDSndlQ0k3Q2lBZ0lDQWdJQ0FnY0c5d2RYQXVjM1I1YkdVdWRHOXdJRDBnWlhabGJuUXVjR0ZuWlZrZ0t5QWljSGdpT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJRnQ0TENCNVhTQTlJR1YyWlc1ME1uTmpaVzVsWDNCcGVHVnNLSE5qWlc1bExDQmxkbVZ1ZENrN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnVzE4c0lIQnBZMnR6WFNBOUlIQnBZMnRmYm1GMGFYWmxLSE5qWlc1bExDQjRMQ0I1TENBeExDQXhLVHNLSUNBZ0lDQWdJQ0JwWmlBb2NHbGphM011YkdWdVozUm9JRDA5SURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdXM0JzYjNRc0lHbHVaR1Y0WFNBOUlIQnBZMnR6V3pCZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NHeHZkSE5mZEc5ZmNHbGpheTVvWVhNb2NHeHZkQzV3Ykc5MFgzVjFhV1FwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J5WlhOMWJIUWdQU0JqWVd4c1ltRmpheWh3Ykc5MExDQnBibVJsZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlISmxjM1ZzZENBOVBUMGdJbk4wY21sdVp5SWdmSHdnY21WemRXeDBJR2x1YzNSaGJtTmxiMllnVTNSeWFXNW5LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXdkWEF1YVc1dVpYSlVaWGgwSUQwZ2NtVnpkV3gwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzQjFjQzVwYm01bGNraFVUVXdnUFNCeVpYTjFiSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J3YjNCMWNDNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDSnphRzkzSWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlNrN0NpQWdJQ0JqWVc1MllYTXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2lhMlY1ZFhBaUxDQW9aWFpsYm5RcFBUNTdDaUFnSUNBZ0lDQWdhV1lnS0dWMlpXNTBMbXRsZVNBOVBUMGdJa1Z6WTJGd1pTSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXdkWEF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2dpYzJodmR5SXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd3A5Q25kcGJtUnZkeTVYUjB3Z1BTQjdDaUFnSUNCa1pYTmxjbWxoYkdsNlpWOXpZMlZ1WlN3S0lDQWdJSFJvY21WbGFuTmZiVzlrZFd4bExBb2dJQ0FnYzNSaGNuUmZjbVZ1WkdWeWJHOXZjQ3dLSUNBZ0lHUmxiR1YwWlY5d2JHOTBjeXdLSUNBZ0lHbHVjMlZ5ZEY5d2JHOTBMQW9nSUNBZ1ptbHVaRjl3Ykc5MGN5d0tJQ0FnSUdSbGJHVjBaVjl6WTJWdVpTd0tJQ0FnSUdacGJtUmZjMk5sYm1Vc0NpQWdJQ0J6WTJWdVpWOWpZV05vWlN3S0lDQWdJSEJzYjNSZlkyRmphR1VzQ2lBZ0lDQmtaV3hsZEdWZmMyTmxibVZ6TEFvZ0lDQWdZM0psWVhSbFgzTmpaVzVsTEFvZ0lDQWdaWFpsYm5ReWMyTmxibVZmY0dsNFpXd3NDaUFnSUNCdmJsOXVaWGgwWDJsdWMyVnlkQ3dLSUNBZ0lISmxaMmx6ZEdWeVgzQnZjSFZ3TEFvZ0lDQWdjbVZ1WkdWeVgzTmpaVzVsQ24wN0NtVjRjRzl5ZENCN0lHUmxjMlZ5YVdGc2FYcGxYM05qWlc1bElHRnpJR1JsYzJWeWFXRnNhWHBsWDNOalpXNWxMQ0IwYUhKbFpXcHpYMjF2WkhWc1pTQmhjeUIwYUhKbFpXcHpYMjF2WkhWc1pTd2djM1JoY25SZmNtVnVaR1Z5Ykc5dmNDQmhjeUJ6ZEdGeWRGOXlaVzVrWlhKc2IyOXdMQ0JrWld4bGRHVmZjR3h2ZEhNZ1lYTWdaR1ZzWlhSbFgzQnNiM1J6TENCcGJuTmxjblJmY0d4dmRDQmhjeUJwYm5ObGNuUmZjR3h2ZEN3Z1ptbHVaRjl3Ykc5MGN5QmhjeUJtYVc1a1gzQnNiM1J6TENCa1pXeGxkR1ZmYzJObGJtVWdZWE1nWkdWc1pYUmxYM05qWlc1bExDQm1hVzVrWDNOalpXNWxJR0Z6SUdacGJtUmZjMk5sYm1Vc0lITmpaVzVsWDJOaFkyaGxJR0Z6SUhOalpXNWxYMk5oWTJobExDQndiRzkwWDJOaFkyaGxJR0Z6SUhCc2IzUmZZMkZqYUdVc0lHUmxiR1YwWlY5elkyVnVaWE1nWVhNZ1pHVnNaWFJsWDNOalpXNWxjeXdnWTNKbFlYUmxYM05qWlc1bElHRnpJR055WldGMFpWOXpZMlZ1WlN3Z1pYWmxiblF5YzJObGJtVmZjR2w0Wld3Z1lYTWdaWFpsYm5ReWMyTmxibVZmY0dsNFpXd3NJRzl1WDI1bGVIUmZhVzV6WlhKMElHRnpJRzl1WDI1bGVIUmZhVzV6WlhKMElIMDdDbVY0Y0c5eWRDQjdJSEpsYm1SbGNsOXpZMlZ1WlNCaGN5QnlaVzVrWlhKZmMyTmxibVVnZlRzS1pYaHdiM0owSUhzZ2NHbGphMTl1WVhScGRtVWdZWE1nY0dsamExOXVZWFJwZG1VZ2ZUc0taWGh3YjNKMElIc2djR2xqYTE5amJHOXpaWE4wSUdGeklIQnBZMnRmWTJ4dmMyVnpkQ0I5T3dwbGVIQnZjblFnZXlCd2FXTnJYM052Y25SbFpDQmhjeUJ3YVdOclgzTnZjblJsWkNCOU93cGxlSEJ2Y25RZ2V5QndhV05yWDI1aGRHbDJaVjkxZFdsa0lHRnpJSEJwWTJ0ZmJtRjBhWFpsWDNWMWFXUWdmVHNLWlhod2IzSjBJSHNnY0dsamExOXVZWFJwZG1WZmJXRjBjbWw0SUdGeklIQnBZMnRmYm1GMGFYWmxYMjFoZEhKcGVDQjlPd3BsZUhCdmNuUWdleUJ5WldkcGMzUmxjbDl3YjNCMWNDQmhjeUJ5WldkcGMzUmxjbDl3YjNCMWNDQjlPd29LYDsKICAgICAgICAgICAgcmV0dXJuIGltcG9ydChKU1NFUlZFX0lNUE9SVFNbJ2NjNGM2YWE2YTFmMDZhMWI1MDEzYmNhMDE3MDJmMzZhMTg0YzA0Mzktd2dsbWFraWUuanMnXSk7CiAgICAgICAgfSkoKS50aGVuKFdHTCA9PiB7CiAgICBXR0wuY3JlYXRlX3NjZW5lKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWpzY2FsbC1pZD0iMzMiXScpLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjM0Il0nKSwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCcxMTg2MTk1Mzg2OTEyMDAxMDIyJyksIF9fbG9va3VwX2ludGVycG9sYXRlZCgnMTMwNDEwOTM4NzgwOTgzODUyMTcnKSwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCcxNDAyNTYzNzY4NDc2NTAwMjg2NCcpLCAyMDAsIDIwMCwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCc4MTc1MzEzODEyMTc3ODcxMjI0JyksIDMwLjAsIGZhbHNlKQogICAgX19sb29rdXBfaW50ZXJwb2xhdGVkKCc2ODI5NTEyNjUyNDc2MTI0MDc2Jykubm90aWZ5KHRydWUpCn0pCtlBL2hvbWUvcnVubmVyL3dvcmsvTWFraWUuamwvTWFraWUuamwvV0dMTWFraWUvc3JjL3RocmVlX3Bsb3Quamw6NTSobXNnX3R5cGWhMsgBdGuSxyxqk9kkODkwNGMxY2YtNTdiYi00ZTQ3LWFjOGItNmY5ZGU0NTI2NjFjgKNzdWKCp3BheWxvYWTIASxmk4GzNTA4NjE3Mjg0NTUxMTA2ODE1NscUaLM3NTQ4MjY2MTgyNjcyMTE1NDM22b8oKG5vZGUpID0+IHsKICAgIG5vZGVbJ29uaW5wdXQnXSA9IChldmVudCk9PiB7CiAgICBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzUwODYxNzI4NDU1MTEwNjgxNTYnKS5ub3RpZnkocGFyc2VJbnQoZXZlbnQuc3JjRWxlbWVudC52YWx1ZSkpCn0KfSkoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSIzMCJdJykpO9k8L2hvbWUvcnVubmVyLy5qdWxpYS9wYWNrYWdlcy9KU1NlcnZlL3R1RERZL3NyYy93aWRnZXRzLmpsOjY2qG1zZ190eXBloTKobXNnX3R5cGWhOQ==').then(msgs=> JSServe.init_session('8904c1cf-57bb-4e47-ac8b-6f9de452661c', msgs, 'sub'));
    })
" type="module"></script>
    <h1 id="Wow, Markdown works as well?" data-jscall-id="28">Wow, Markdown works as well?</h1>
    <div class="rounded-lg p-2 m-2 shadow-lg grid auto-cols-max grid-cols-2 gap-4" data-jscall-id="29">
      <input step="1" max="100" min="1" data-jscall-id="30" value="1" oninput="" type="range" />
      <h1 data-jscall-id="31">hello</h1>
      <img src="https://julialang.org/assets/infra/logo.svg" data-jscall-id="32" />
      <div style="width: 100%; height: 100%" data-jscall-id="33">
        <canvas style="display: block" data-jscall-id="34" tabindex="0"></canvas>
      </div>
    </div>
  </div>
</div>~~~
